2024-07-15 06:05:18,737 INFO:demucs is already installed.
2024-07-15 06:05:18,737 ERROR:Missing required package: No module named 'ffmpeg'
2024-07-15 06:05:18,737 INFO:Starting server...
2024-07-15 06:05:18,761 INFO:[31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2024-07-15 06:05:18,761 INFO:[33mPress CTRL+C to quit[0m
2024-07-15 06:05:18,763 INFO: * Restarting with stat
2024-07-15 06:05:19,102 INFO:demucs is already installed.
2024-07-15 06:05:19,102 ERROR:Missing required package: No module named 'ffmpeg'
2024-07-15 06:05:19,103 INFO:Starting server...
2024-07-15 06:05:19,109 WARNING: * Debugger is active!
2024-07-15 06:05:19,127 INFO: * Debugger PIN: 124-101-132
2024-07-15 06:06:00,053 INFO: * Detected change in 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\initialize.py', reloading
2024-07-15 06:06:00,091 INFO: * Restarting with stat
2024-07-15 06:06:00,485 INFO:demucs is already installed.
2024-07-15 06:06:00,485 INFO:All required packages are already installed.
2024-07-15 06:06:00,485 INFO:Starting server...
2024-07-15 06:06:00,491 WARNING: * Debugger is active!
2024-07-15 06:06:00,495 INFO: * Debugger PIN: 124-101-132
2024-07-15 06:06:43,512 INFO:Isolating audio...
2024-07-15 06:06:43,512 DEBUG:Request data: {'file_path': 'C:\\Users\\tjerf\\AppData\\Local\\Temp\\ff1e92f1-ee2e-407f-8098-0f99214b4b84.wav', 'model_name': 'htdemucs', 'device': 'cuda', 'shifts': 0, 'two_stems': None, 'output_folder': 'C:\\Users\\tjerf\\AppData\\Local\\Temp/isolated_isolated'}
2024-07-15 06:06:49,357 ERROR:Error during isolation: numpy.core.multiarray failed to import (auto-generated because you didn't call 'numpy.import_array()' after cimporting numpy; use '<void>numpy._import_array' to disable if you are certain you don't need it).
2024-07-15 06:06:49,358 INFO:127.0.0.1 - - [15/Jul/2024 06:06:49] "[35m[1mPOST /isolate HTTP/1.1[0m" 500 -
2024-07-15 06:09:48,692 INFO:demucs is already installed.
2024-07-15 06:09:48,692 INFO:All required packages are already installed.
2024-07-15 06:09:48,692 INFO:Starting server...
2024-07-15 06:09:48,708 INFO:[31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2024-07-15 06:09:48,708 INFO:[33mPress CTRL+C to quit[0m
2024-07-15 06:09:48,710 INFO: * Restarting with stat
2024-07-15 06:09:49,057 INFO:demucs is already installed.
2024-07-15 06:09:49,058 INFO:All required packages are already installed.
2024-07-15 06:09:49,058 INFO:Starting server...
2024-07-15 06:09:49,062 WARNING: * Debugger is active!
2024-07-15 06:09:49,066 INFO: * Debugger PIN: 124-101-132
2024-07-15 06:09:51,424 INFO:Isolating audio...
2024-07-15 06:09:51,426 DEBUG:Request data: {'file_path': 'C:\\Users\\tjerf\\AppData\\Local\\Temp\\ff1e92f1-ee2e-407f-8098-0f99214b4b84.wav', 'model_name': 'htdemucs', 'device': 'cuda', 'shifts': 0, 'two_stems': None, 'output_folder': 'C:\\Users\\tjerf\\AppData\\Local\\Temp/isolated_isolated'}
2024-07-15 06:09:52,182 ERROR:Error during isolation: numpy.core.multiarray failed to import (auto-generated because you didn't call 'numpy.import_array()' after cimporting numpy; use '<void>numpy._import_array' to disable if you are certain you don't need it).
2024-07-15 06:09:52,183 INFO:127.0.0.1 - - [15/Jul/2024 06:09:52] "[35m[1mPOST /isolate HTTP/1.1[0m" 500 -
2024-07-15 06:11:31,057 INFO:demucs is already installed.
2024-07-15 06:11:31,057 INFO:All required packages are already installed.
2024-07-15 06:11:31,057 INFO:Starting server...
2024-07-15 06:11:31,083 INFO:[31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2024-07-15 06:11:31,083 INFO:[33mPress CTRL+C to quit[0m
2024-07-15 06:11:31,085 INFO: * Restarting with stat
2024-07-15 06:11:31,448 INFO:demucs is already installed.
2024-07-15 06:11:31,448 INFO:All required packages are already installed.
2024-07-15 06:11:31,448 INFO:Starting server...
2024-07-15 06:11:31,454 WARNING: * Debugger is active!
2024-07-15 06:11:31,458 INFO: * Debugger PIN: 124-101-132
2024-07-15 06:11:33,988 INFO:Isolating audio...
2024-07-15 06:11:33,988 DEBUG:Request data: {'file_path': 'C:\\Users\\tjerf\\AppData\\Local\\Temp\\ff1e92f1-ee2e-407f-8098-0f99214b4b84.wav', 'model_name': 'htdemucs', 'device': 'cuda', 'shifts': 0, 'two_stems': None, 'output_folder': 'C:\\Users\\tjerf\\AppData\\Local\\Temp/isolated_isolated'}
2024-07-15 06:11:35,574 DEBUG:bytecode dump:
>          0	NOP(arg=None, lineno=1141)
           2	RESUME(arg=0, lineno=1141)
           4	LOAD_FAST(arg=0, lineno=1144)
           6	LOAD_CONST(arg=1, lineno=1144)
           8	BINARY_SUBSCR(arg=None, lineno=1144)
          18	STORE_FAST(arg=3, lineno=1144)
          20	LOAD_FAST(arg=1, lineno=1145)
          22	UNARY_NEGATIVE(arg=None, lineno=1145)
          24	LOAD_FAST(arg=3, lineno=1145)
          26	SWAP(arg=2, lineno=1145)
          28	COPY(arg=2, lineno=1145)
          30	COMPARE_OP(arg=1, lineno=1145)
          36	POP_JUMP_FORWARD_IF_FALSE(arg=6, lineno=1145)
          38	LOAD_FAST(arg=1, lineno=1145)
          40	COMPARE_OP(arg=1, lineno=1145)
          46	POP_JUMP_FORWARD_IF_FALSE(arg=5, lineno=1145)
          48	JUMP_FORWARD(arg=2, lineno=1145)
>         50	POP_TOP(arg=None, lineno=1145)
          52	JUMP_FORWARD(arg=2, lineno=1145)
>         54	LOAD_CONST(arg=1, lineno=1146)
          56	STORE_FAST(arg=3, lineno=1146)
>         58	LOAD_FAST(arg=0, lineno=1148)
          60	LOAD_CONST(arg=2, lineno=1148)
          62	BINARY_SUBSCR(arg=None, lineno=1148)
          72	STORE_FAST(arg=4, lineno=1148)
          74	LOAD_FAST(arg=1, lineno=1149)
          76	UNARY_NEGATIVE(arg=None, lineno=1149)
          78	LOAD_FAST(arg=4, lineno=1149)
          80	SWAP(arg=2, lineno=1149)
          82	COPY(arg=2, lineno=1149)
          84	COMPARE_OP(arg=1, lineno=1149)
          90	POP_JUMP_FORWARD_IF_FALSE(arg=6, lineno=1149)
          92	LOAD_FAST(arg=1, lineno=1149)
          94	COMPARE_OP(arg=1, lineno=1149)
         100	POP_JUMP_FORWARD_IF_FALSE(arg=5, lineno=1149)
         102	JUMP_FORWARD(arg=2, lineno=1149)
>        104	POP_TOP(arg=None, lineno=1149)
         106	JUMP_FORWARD(arg=2, lineno=1149)
>        108	LOAD_CONST(arg=1, lineno=1150)
         110	STORE_FAST(arg=4, lineno=1150)
>        112	LOAD_FAST(arg=2, lineno=1152)
         114	POP_JUMP_FORWARD_IF_FALSE(arg=42, lineno=1152)
         116	LOAD_GLOBAL(arg=1, lineno=1153)
         128	LOAD_ATTR(arg=1, lineno=1153)
         138	LOAD_FAST(arg=3, lineno=1153)
         140	PRECALL(arg=1, lineno=1153)
         144	CALL(arg=1, lineno=1153)
         154	LOAD_GLOBAL(arg=1, lineno=1153)
         166	LOAD_ATTR(arg=1, lineno=1153)
         176	LOAD_FAST(arg=4, lineno=1153)
         178	PRECALL(arg=1, lineno=1153)
         182	CALL(arg=1, lineno=1153)
         192	COMPARE_OP(arg=3, lineno=1153)
         198	RETURN_VALUE(arg=None, lineno=1153)
>        200	LOAD_GLOBAL(arg=1, lineno=1155)
         212	LOAD_ATTR(arg=2, lineno=1155)
         222	LOAD_FAST(arg=3, lineno=1155)
         224	PRECALL(arg=1, lineno=1155)
         228	CALL(arg=1, lineno=1155)
         238	LOAD_GLOBAL(arg=1, lineno=1155)
         250	LOAD_ATTR(arg=2, lineno=1155)
         260	LOAD_FAST(arg=4, lineno=1155)
         262	PRECALL(arg=1, lineno=1155)
         266	CALL(arg=1, lineno=1155)
         276	COMPARE_OP(arg=3, lineno=1155)
         282	RETURN_VALUE(arg=None, lineno=1155)
2024-07-15 06:11:35,574 DEBUG:pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-15 06:11:35,574 DEBUG:stack: []
2024-07-15 06:11:35,574 DEBUG:state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-15 06:11:35,574 DEBUG:dispatch pc=0, inst=NOP(arg=None, lineno=1141)
2024-07-15 06:11:35,574 DEBUG:stack []
2024-07-15 06:11:35,574 DEBUG:dispatch pc=2, inst=RESUME(arg=0, lineno=1141)
2024-07-15 06:11:35,574 DEBUG:stack []
2024-07-15 06:11:35,574 DEBUG:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1144)
2024-07-15 06:11:35,574 DEBUG:stack []
2024-07-15 06:11:35,574 DEBUG:dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1144)
2024-07-15 06:11:35,574 DEBUG:stack ['$x4.0']
2024-07-15 06:11:35,574 DEBUG:dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1144)
2024-07-15 06:11:35,575 DEBUG:stack ['$x4.0', '$const6.1']
2024-07-15 06:11:35,575 DEBUG:dispatch pc=18, inst=STORE_FAST(arg=3, lineno=1144)
2024-07-15 06:11:35,575 DEBUG:stack ['$8binary_subscr.2']
2024-07-15 06:11:35,575 DEBUG:dispatch pc=20, inst=LOAD_FAST(arg=1, lineno=1145)
2024-07-15 06:11:35,575 DEBUG:stack []
2024-07-15 06:11:35,575 DEBUG:dispatch pc=22, inst=UNARY_NEGATIVE(arg=None, lineno=1145)
2024-07-15 06:11:35,575 DEBUG:stack ['$threshold20.3']
2024-07-15 06:11:35,575 DEBUG:dispatch pc=24, inst=LOAD_FAST(arg=3, lineno=1145)
2024-07-15 06:11:35,575 DEBUG:stack ['$22unary_negative.4']
2024-07-15 06:11:35,575 DEBUG:dispatch pc=26, inst=SWAP(arg=2, lineno=1145)
2024-07-15 06:11:35,575 DEBUG:stack ['$22unary_negative.4', '$x024.5']
2024-07-15 06:11:35,575 DEBUG:dispatch pc=28, inst=COPY(arg=2, lineno=1145)
2024-07-15 06:11:35,575 DEBUG:stack ['$x024.5', '$22unary_negative.4']
2024-07-15 06:11:35,575 DEBUG:dispatch pc=30, inst=COMPARE_OP(arg=1, lineno=1145)
2024-07-15 06:11:35,575 DEBUG:stack ['$x024.5', '$22unary_negative.4', '$x024.5']
2024-07-15 06:11:35,575 DEBUG:dispatch pc=36, inst=POP_JUMP_FORWARD_IF_FALSE(arg=6, lineno=1145)
2024-07-15 06:11:35,575 DEBUG:stack ['$x024.5', '$30compare_op.6']
2024-07-15 06:11:35,575 DEBUG:end state. edges=[Edge(pc=38, stack=('$x024.5',), blockstack=(), npush=0), Edge(pc=50, stack=('$x024.5',), blockstack=(), npush=0)]
2024-07-15 06:11:35,575 DEBUG:pending: deque([State(pc_initial=38 nstack_initial=1), State(pc_initial=50 nstack_initial=1)])
2024-07-15 06:11:35,575 DEBUG:stack: ['$phi38.0']
2024-07-15 06:11:35,575 DEBUG:state.pc_initial: State(pc_initial=38 nstack_initial=1)
2024-07-15 06:11:35,575 DEBUG:dispatch pc=38, inst=LOAD_FAST(arg=1, lineno=1145)
2024-07-15 06:11:35,575 DEBUG:stack ['$phi38.0']
2024-07-15 06:11:35,575 DEBUG:dispatch pc=40, inst=COMPARE_OP(arg=1, lineno=1145)
2024-07-15 06:11:35,575 DEBUG:stack ['$phi38.0', '$threshold38.1']
2024-07-15 06:11:35,575 DEBUG:dispatch pc=46, inst=POP_JUMP_FORWARD_IF_FALSE(arg=5, lineno=1145)
2024-07-15 06:11:35,575 DEBUG:stack ['$40compare_op.2']
2024-07-15 06:11:35,575 DEBUG:end state. edges=[Edge(pc=48, stack=(), blockstack=(), npush=0), Edge(pc=58, stack=(), blockstack=(), npush=0)]
2024-07-15 06:11:35,576 DEBUG:pending: deque([State(pc_initial=50 nstack_initial=1), State(pc_initial=48 nstack_initial=0), State(pc_initial=58 nstack_initial=0)])
2024-07-15 06:11:35,576 DEBUG:stack: ['$phi50.0']
2024-07-15 06:11:35,576 DEBUG:state.pc_initial: State(pc_initial=50 nstack_initial=1)
2024-07-15 06:11:35,576 DEBUG:dispatch pc=50, inst=POP_TOP(arg=None, lineno=1145)
2024-07-15 06:11:35,576 DEBUG:stack ['$phi50.0']
2024-07-15 06:11:35,576 DEBUG:dispatch pc=52, inst=JUMP_FORWARD(arg=2, lineno=1145)
2024-07-15 06:11:35,576 DEBUG:stack []
2024-07-15 06:11:35,576 DEBUG:end state. edges=[Edge(pc=58, stack=(), blockstack=(), npush=0)]
2024-07-15 06:11:35,576 DEBUG:pending: deque([State(pc_initial=48 nstack_initial=0), State(pc_initial=58 nstack_initial=0), State(pc_initial=58 nstack_initial=0)])
2024-07-15 06:11:35,576 DEBUG:stack: []
2024-07-15 06:11:35,576 DEBUG:state.pc_initial: State(pc_initial=48 nstack_initial=0)
2024-07-15 06:11:35,576 DEBUG:dispatch pc=48, inst=JUMP_FORWARD(arg=2, lineno=1145)
2024-07-15 06:11:35,576 DEBUG:stack []
2024-07-15 06:11:35,576 DEBUG:end state. edges=[Edge(pc=54, stack=(), blockstack=(), npush=0)]
2024-07-15 06:11:35,576 DEBUG:pending: deque([State(pc_initial=58 nstack_initial=0), State(pc_initial=58 nstack_initial=0), State(pc_initial=54 nstack_initial=0)])
2024-07-15 06:11:35,576 DEBUG:stack: []
2024-07-15 06:11:35,576 DEBUG:state.pc_initial: State(pc_initial=58 nstack_initial=0)
2024-07-15 06:11:35,576 DEBUG:dispatch pc=58, inst=LOAD_FAST(arg=0, lineno=1148)
2024-07-15 06:11:35,576 DEBUG:stack []
2024-07-15 06:11:35,576 DEBUG:dispatch pc=60, inst=LOAD_CONST(arg=2, lineno=1148)
2024-07-15 06:11:35,576 DEBUG:stack ['$x58.0']
2024-07-15 06:11:35,576 DEBUG:dispatch pc=62, inst=BINARY_SUBSCR(arg=None, lineno=1148)
2024-07-15 06:11:35,576 DEBUG:stack ['$x58.0', '$const60.1']
2024-07-15 06:11:35,576 DEBUG:dispatch pc=72, inst=STORE_FAST(arg=4, lineno=1148)
2024-07-15 06:11:35,576 DEBUG:stack ['$62binary_subscr.2']
2024-07-15 06:11:35,576 DEBUG:dispatch pc=74, inst=LOAD_FAST(arg=1, lineno=1149)
2024-07-15 06:11:35,576 DEBUG:stack []
2024-07-15 06:11:35,576 DEBUG:dispatch pc=76, inst=UNARY_NEGATIVE(arg=None, lineno=1149)
2024-07-15 06:11:35,576 DEBUG:stack ['$threshold74.3']
2024-07-15 06:11:35,576 DEBUG:dispatch pc=78, inst=LOAD_FAST(arg=4, lineno=1149)
2024-07-15 06:11:35,576 DEBUG:stack ['$76unary_negative.4']
2024-07-15 06:11:35,576 DEBUG:dispatch pc=80, inst=SWAP(arg=2, lineno=1149)
2024-07-15 06:11:35,576 DEBUG:stack ['$76unary_negative.4', '$x178.5']
2024-07-15 06:11:35,576 DEBUG:dispatch pc=82, inst=COPY(arg=2, lineno=1149)
2024-07-15 06:11:35,576 DEBUG:stack ['$x178.5', '$76unary_negative.4']
2024-07-15 06:11:35,576 DEBUG:dispatch pc=84, inst=COMPARE_OP(arg=1, lineno=1149)
2024-07-15 06:11:35,576 DEBUG:stack ['$x178.5', '$76unary_negative.4', '$x178.5']
2024-07-15 06:11:35,577 DEBUG:dispatch pc=90, inst=POP_JUMP_FORWARD_IF_FALSE(arg=6, lineno=1149)
2024-07-15 06:11:35,577 DEBUG:stack ['$x178.5', '$84compare_op.6']
2024-07-15 06:11:35,577 DEBUG:end state. edges=[Edge(pc=92, stack=('$x178.5',), blockstack=(), npush=0), Edge(pc=104, stack=('$x178.5',), blockstack=(), npush=0)]
2024-07-15 06:11:35,577 DEBUG:pending: deque([State(pc_initial=58 nstack_initial=0), State(pc_initial=54 nstack_initial=0), State(pc_initial=92 nstack_initial=1), State(pc_initial=104 nstack_initial=1)])
2024-07-15 06:11:35,577 DEBUG:pending: deque([State(pc_initial=54 nstack_initial=0), State(pc_initial=92 nstack_initial=1), State(pc_initial=104 nstack_initial=1)])
2024-07-15 06:11:35,577 DEBUG:stack: []
2024-07-15 06:11:35,577 DEBUG:state.pc_initial: State(pc_initial=54 nstack_initial=0)
2024-07-15 06:11:35,577 DEBUG:dispatch pc=54, inst=LOAD_CONST(arg=1, lineno=1146)
2024-07-15 06:11:35,577 DEBUG:stack []
2024-07-15 06:11:35,577 DEBUG:dispatch pc=56, inst=STORE_FAST(arg=3, lineno=1146)
2024-07-15 06:11:35,577 DEBUG:stack ['$const54.0']
2024-07-15 06:11:35,577 DEBUG:end state. edges=[Edge(pc=58, stack=(), blockstack=(), npush=0)]
2024-07-15 06:11:35,577 DEBUG:pending: deque([State(pc_initial=92 nstack_initial=1), State(pc_initial=104 nstack_initial=1), State(pc_initial=58 nstack_initial=0)])
2024-07-15 06:11:35,577 DEBUG:stack: ['$phi92.0']
2024-07-15 06:11:35,577 DEBUG:state.pc_initial: State(pc_initial=92 nstack_initial=1)
2024-07-15 06:11:35,577 DEBUG:dispatch pc=92, inst=LOAD_FAST(arg=1, lineno=1149)
2024-07-15 06:11:35,577 DEBUG:stack ['$phi92.0']
2024-07-15 06:11:35,577 DEBUG:dispatch pc=94, inst=COMPARE_OP(arg=1, lineno=1149)
2024-07-15 06:11:35,577 DEBUG:stack ['$phi92.0', '$threshold92.1']
2024-07-15 06:11:35,577 DEBUG:dispatch pc=100, inst=POP_JUMP_FORWARD_IF_FALSE(arg=5, lineno=1149)
2024-07-15 06:11:35,577 DEBUG:stack ['$94compare_op.2']
2024-07-15 06:11:35,577 DEBUG:end state. edges=[Edge(pc=102, stack=(), blockstack=(), npush=0), Edge(pc=112, stack=(), blockstack=(), npush=0)]
2024-07-15 06:11:35,577 DEBUG:pending: deque([State(pc_initial=104 nstack_initial=1), State(pc_initial=58 nstack_initial=0), State(pc_initial=102 nstack_initial=0), State(pc_initial=112 nstack_initial=0)])
2024-07-15 06:11:35,577 DEBUG:stack: ['$phi104.0']
2024-07-15 06:11:35,577 DEBUG:state.pc_initial: State(pc_initial=104 nstack_initial=1)
2024-07-15 06:11:35,577 DEBUG:dispatch pc=104, inst=POP_TOP(arg=None, lineno=1149)
2024-07-15 06:11:35,577 DEBUG:stack ['$phi104.0']
2024-07-15 06:11:35,577 DEBUG:dispatch pc=106, inst=JUMP_FORWARD(arg=2, lineno=1149)
2024-07-15 06:11:35,577 DEBUG:stack []
2024-07-15 06:11:35,577 DEBUG:end state. edges=[Edge(pc=112, stack=(), blockstack=(), npush=0)]
2024-07-15 06:11:35,577 DEBUG:pending: deque([State(pc_initial=58 nstack_initial=0), State(pc_initial=102 nstack_initial=0), State(pc_initial=112 nstack_initial=0), State(pc_initial=112 nstack_initial=0)])
2024-07-15 06:11:35,577 DEBUG:pending: deque([State(pc_initial=102 nstack_initial=0), State(pc_initial=112 nstack_initial=0), State(pc_initial=112 nstack_initial=0)])
2024-07-15 06:11:35,578 DEBUG:stack: []
2024-07-15 06:11:35,578 DEBUG:state.pc_initial: State(pc_initial=102 nstack_initial=0)
2024-07-15 06:11:35,578 DEBUG:dispatch pc=102, inst=JUMP_FORWARD(arg=2, lineno=1149)
2024-07-15 06:11:35,578 DEBUG:stack []
2024-07-15 06:11:35,578 DEBUG:end state. edges=[Edge(pc=108, stack=(), blockstack=(), npush=0)]
2024-07-15 06:11:35,578 DEBUG:pending: deque([State(pc_initial=112 nstack_initial=0), State(pc_initial=112 nstack_initial=0), State(pc_initial=108 nstack_initial=0)])
2024-07-15 06:11:35,578 DEBUG:stack: []
2024-07-15 06:11:35,578 DEBUG:state.pc_initial: State(pc_initial=112 nstack_initial=0)
2024-07-15 06:11:35,578 DEBUG:dispatch pc=112, inst=LOAD_FAST(arg=2, lineno=1152)
2024-07-15 06:11:35,578 DEBUG:stack []
2024-07-15 06:11:35,578 DEBUG:dispatch pc=114, inst=POP_JUMP_FORWARD_IF_FALSE(arg=42, lineno=1152)
2024-07-15 06:11:35,578 DEBUG:stack ['$zero_pos112.0']
2024-07-15 06:11:35,578 DEBUG:end state. edges=[Edge(pc=116, stack=(), blockstack=(), npush=0), Edge(pc=200, stack=(), blockstack=(), npush=0)]
2024-07-15 06:11:35,578 DEBUG:pending: deque([State(pc_initial=112 nstack_initial=0), State(pc_initial=108 nstack_initial=0), State(pc_initial=116 nstack_initial=0), State(pc_initial=200 nstack_initial=0)])
2024-07-15 06:11:35,578 DEBUG:pending: deque([State(pc_initial=108 nstack_initial=0), State(pc_initial=116 nstack_initial=0), State(pc_initial=200 nstack_initial=0)])
2024-07-15 06:11:35,578 DEBUG:stack: []
2024-07-15 06:11:35,578 DEBUG:state.pc_initial: State(pc_initial=108 nstack_initial=0)
2024-07-15 06:11:35,578 DEBUG:dispatch pc=108, inst=LOAD_CONST(arg=1, lineno=1150)
2024-07-15 06:11:35,578 DEBUG:stack []
2024-07-15 06:11:35,578 DEBUG:dispatch pc=110, inst=STORE_FAST(arg=4, lineno=1150)
2024-07-15 06:11:35,578 DEBUG:stack ['$const108.0']
2024-07-15 06:11:35,578 DEBUG:end state. edges=[Edge(pc=112, stack=(), blockstack=(), npush=0)]
2024-07-15 06:11:35,578 DEBUG:pending: deque([State(pc_initial=116 nstack_initial=0), State(pc_initial=200 nstack_initial=0), State(pc_initial=112 nstack_initial=0)])
2024-07-15 06:11:35,578 DEBUG:stack: []
2024-07-15 06:11:35,578 DEBUG:state.pc_initial: State(pc_initial=116 nstack_initial=0)
2024-07-15 06:11:35,578 DEBUG:dispatch pc=116, inst=LOAD_GLOBAL(arg=1, lineno=1153)
2024-07-15 06:11:35,578 DEBUG:stack []
2024-07-15 06:11:35,578 DEBUG:dispatch pc=128, inst=LOAD_ATTR(arg=1, lineno=1153)
2024-07-15 06:11:35,578 DEBUG:stack ['$null$116.1', '$116load_global.0']
2024-07-15 06:11:35,578 DEBUG:dispatch pc=138, inst=LOAD_FAST(arg=3, lineno=1153)
2024-07-15 06:11:35,578 DEBUG:stack ['$null$116.1', '$128load_attr.2']
2024-07-15 06:11:35,578 DEBUG:dispatch pc=140, inst=PRECALL(arg=1, lineno=1153)
2024-07-15 06:11:35,579 DEBUG:stack ['$null$116.1', '$128load_attr.2', '$x0138.3']
2024-07-15 06:11:35,579 DEBUG:dispatch pc=144, inst=CALL(arg=1, lineno=1153)
2024-07-15 06:11:35,579 DEBUG:stack ['$null$116.1', '$128load_attr.2', '$x0138.3']
2024-07-15 06:11:35,579 DEBUG:dispatch pc=154, inst=LOAD_GLOBAL(arg=1, lineno=1153)
2024-07-15 06:11:35,579 DEBUG:stack ['$144call.4']
2024-07-15 06:11:35,579 DEBUG:dispatch pc=166, inst=LOAD_ATTR(arg=1, lineno=1153)
2024-07-15 06:11:35,579 DEBUG:stack ['$144call.4', '$null$154.6', '$154load_global.5']
2024-07-15 06:11:35,579 DEBUG:dispatch pc=176, inst=LOAD_FAST(arg=4, lineno=1153)
2024-07-15 06:11:35,579 DEBUG:stack ['$144call.4', '$null$154.6', '$166load_attr.7']
2024-07-15 06:11:35,579 DEBUG:dispatch pc=178, inst=PRECALL(arg=1, lineno=1153)
2024-07-15 06:11:35,579 DEBUG:stack ['$144call.4', '$null$154.6', '$166load_attr.7', '$x1176.8']
2024-07-15 06:11:35,579 DEBUG:dispatch pc=182, inst=CALL(arg=1, lineno=1153)
2024-07-15 06:11:35,579 DEBUG:stack ['$144call.4', '$null$154.6', '$166load_attr.7', '$x1176.8']
2024-07-15 06:11:35,579 DEBUG:dispatch pc=192, inst=COMPARE_OP(arg=3, lineno=1153)
2024-07-15 06:11:35,579 DEBUG:stack ['$144call.4', '$182call.9']
2024-07-15 06:11:35,579 DEBUG:dispatch pc=198, inst=RETURN_VALUE(arg=None, lineno=1153)
2024-07-15 06:11:35,579 DEBUG:stack ['$192compare_op.10']
2024-07-15 06:11:35,579 DEBUG:end state. edges=[]
2024-07-15 06:11:35,579 DEBUG:pending: deque([State(pc_initial=200 nstack_initial=0), State(pc_initial=112 nstack_initial=0)])
2024-07-15 06:11:35,579 DEBUG:stack: []
2024-07-15 06:11:35,579 DEBUG:state.pc_initial: State(pc_initial=200 nstack_initial=0)
2024-07-15 06:11:35,579 DEBUG:dispatch pc=200, inst=LOAD_GLOBAL(arg=1, lineno=1155)
2024-07-15 06:11:35,579 DEBUG:stack []
2024-07-15 06:11:35,579 DEBUG:dispatch pc=212, inst=LOAD_ATTR(arg=2, lineno=1155)
2024-07-15 06:11:35,579 DEBUG:stack ['$null$200.1', '$200load_global.0']
2024-07-15 06:11:35,579 DEBUG:dispatch pc=222, inst=LOAD_FAST(arg=3, lineno=1155)
2024-07-15 06:11:35,579 DEBUG:stack ['$null$200.1', '$212load_attr.2']
2024-07-15 06:11:35,579 DEBUG:dispatch pc=224, inst=PRECALL(arg=1, lineno=1155)
2024-07-15 06:11:35,579 DEBUG:stack ['$null$200.1', '$212load_attr.2', '$x0222.3']
2024-07-15 06:11:35,579 DEBUG:dispatch pc=228, inst=CALL(arg=1, lineno=1155)
2024-07-15 06:11:35,579 DEBUG:stack ['$null$200.1', '$212load_attr.2', '$x0222.3']
2024-07-15 06:11:35,580 DEBUG:dispatch pc=238, inst=LOAD_GLOBAL(arg=1, lineno=1155)
2024-07-15 06:11:35,580 DEBUG:stack ['$228call.4']
2024-07-15 06:11:35,580 DEBUG:dispatch pc=250, inst=LOAD_ATTR(arg=2, lineno=1155)
2024-07-15 06:11:35,580 DEBUG:stack ['$228call.4', '$null$238.6', '$238load_global.5']
2024-07-15 06:11:35,580 DEBUG:dispatch pc=260, inst=LOAD_FAST(arg=4, lineno=1155)
2024-07-15 06:11:35,580 DEBUG:stack ['$228call.4', '$null$238.6', '$250load_attr.7']
2024-07-15 06:11:35,580 DEBUG:dispatch pc=262, inst=PRECALL(arg=1, lineno=1155)
2024-07-15 06:11:35,580 DEBUG:stack ['$228call.4', '$null$238.6', '$250load_attr.7', '$x1260.8']
2024-07-15 06:11:35,580 DEBUG:dispatch pc=266, inst=CALL(arg=1, lineno=1155)
2024-07-15 06:11:35,580 DEBUG:stack ['$228call.4', '$null$238.6', '$250load_attr.7', '$x1260.8']
2024-07-15 06:11:35,580 DEBUG:dispatch pc=276, inst=COMPARE_OP(arg=3, lineno=1155)
2024-07-15 06:11:35,580 DEBUG:stack ['$228call.4', '$266call.9']
2024-07-15 06:11:35,580 DEBUG:dispatch pc=282, inst=RETURN_VALUE(arg=None, lineno=1155)
2024-07-15 06:11:35,580 DEBUG:stack ['$276compare_op.10']
2024-07-15 06:11:35,580 DEBUG:end state. edges=[]
2024-07-15 06:11:35,580 DEBUG:pending: deque([State(pc_initial=112 nstack_initial=0)])
2024-07-15 06:11:35,580 DEBUG:-------------------------Prune PHIs-------------------------
2024-07-15 06:11:35,580 DEBUG:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=38 nstack_initial=1): {'$phi38.0'},
             State(pc_initial=48 nstack_initial=0): set(),
             State(pc_initial=50 nstack_initial=1): set(),
             State(pc_initial=54 nstack_initial=0): set(),
             State(pc_initial=58 nstack_initial=0): set(),
             State(pc_initial=92 nstack_initial=1): {'$phi92.0'},
             State(pc_initial=102 nstack_initial=0): set(),
             State(pc_initial=104 nstack_initial=1): set(),
             State(pc_initial=108 nstack_initial=0): set(),
             State(pc_initial=112 nstack_initial=0): set(),
             State(pc_initial=116 nstack_initial=0): set(),
             State(pc_initial=200 nstack_initial=0): set()})
2024-07-15 06:11:35,580 DEBUG:defmap: {'$phi104.0': State(pc_initial=58 nstack_initial=0),
 '$phi38.0': State(pc_initial=0 nstack_initial=0),
 '$phi50.0': State(pc_initial=0 nstack_initial=0),
 '$phi92.0': State(pc_initial=58 nstack_initial=0)}
2024-07-15 06:11:35,580 DEBUG:phismap: defaultdict(<class 'set'>,
            {'$phi104.0': {('$x178.5', State(pc_initial=58 nstack_initial=0))},
             '$phi38.0': {('$x024.5', State(pc_initial=0 nstack_initial=0))},
             '$phi50.0': {('$x024.5', State(pc_initial=0 nstack_initial=0))},
             '$phi92.0': {('$x178.5', State(pc_initial=58 nstack_initial=0))}})
2024-07-15 06:11:35,581 DEBUG:changing phismap: defaultdict(<class 'set'>,
            {'$phi104.0': {('$x178.5', State(pc_initial=58 nstack_initial=0))},
             '$phi38.0': {('$x024.5', State(pc_initial=0 nstack_initial=0))},
             '$phi50.0': {('$x024.5', State(pc_initial=0 nstack_initial=0))},
             '$phi92.0': {('$x178.5', State(pc_initial=58 nstack_initial=0))}})
2024-07-15 06:11:35,581 DEBUG:keep phismap: {'$phi38.0': {('$x024.5', State(pc_initial=0 nstack_initial=0))},
 '$phi92.0': {('$x178.5', State(pc_initial=58 nstack_initial=0))}}
2024-07-15 06:11:35,581 DEBUG:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi38.0': '$x024.5'},
             State(pc_initial=58 nstack_initial=0): {'$phi92.0': '$x178.5'}})
2024-07-15 06:11:35,581 DEBUG:----------------------DONE Prune PHIs-----------------------
2024-07-15 06:11:35,581 DEBUG:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1'}), (8, {'index': '$const6.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'value': '$8binary_subscr.2'}), (20, {'res': '$threshold20.3'}), (22, {'value': '$threshold20.3', 'res': '$22unary_negative.4'}), (24, {'res': '$x024.5'}), (30, {'lhs': '$22unary_negative.4', 'rhs': '$x024.5', 'res': '$30compare_op.6'}), (32, {}), (34, {}), (36, {'pred': '$30compare_op.6'})), outgoing_phis={'$phi38.0': '$x024.5'}, blockstack=(), active_try_block=None, outgoing_edgepushed={38: ('$x024.5',), 50: ('$x024.5',)})
2024-07-15 06:11:35,581 DEBUG:block_infos State(pc_initial=38 nstack_initial=1):
AdaptBlockInfo(insts=((38, {'res': '$threshold38.1'}), (40, {'lhs': '$phi38.0', 'rhs': '$threshold38.1', 'res': '$40compare_op.2'}), (42, {}), (44, {}), (46, {'pred': '$40compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={48: (), 58: ()})
2024-07-15 06:11:35,581 DEBUG:block_infos State(pc_initial=48 nstack_initial=0):
AdaptBlockInfo(insts=((48, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={54: ()})
2024-07-15 06:11:35,581 DEBUG:block_infos State(pc_initial=50 nstack_initial=1):
AdaptBlockInfo(insts=((52, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={58: ()})
2024-07-15 06:11:35,581 DEBUG:block_infos State(pc_initial=54 nstack_initial=0):
AdaptBlockInfo(insts=((54, {'res': '$const54.0'}), (56, {'value': '$const54.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={58: ()})
2024-07-15 06:11:35,581 DEBUG:block_infos State(pc_initial=58 nstack_initial=0):
AdaptBlockInfo(insts=((58, {'res': '$x58.0'}), (60, {'res': '$const60.1'}), (62, {'index': '$const60.1', 'target': '$x58.0', 'res': '$62binary_subscr.2'}), (64, {}), (66, {}), (68, {}), (70, {}), (72, {'value': '$62binary_subscr.2'}), (74, {'res': '$threshold74.3'}), (76, {'value': '$threshold74.3', 'res': '$76unary_negative.4'}), (78, {'res': '$x178.5'}), (84, {'lhs': '$76unary_negative.4', 'rhs': '$x178.5', 'res': '$84compare_op.6'}), (86, {}), (88, {}), (90, {'pred': '$84compare_op.6'})), outgoing_phis={'$phi92.0': '$x178.5'}, blockstack=(), active_try_block=None, outgoing_edgepushed={92: ('$x178.5',), 104: ('$x178.5',)})
2024-07-15 06:11:35,581 DEBUG:block_infos State(pc_initial=92 nstack_initial=1):
AdaptBlockInfo(insts=((92, {'res': '$threshold92.1'}), (94, {'lhs': '$phi92.0', 'rhs': '$threshold92.1', 'res': '$94compare_op.2'}), (96, {}), (98, {}), (100, {'pred': '$94compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={102: (), 112: ()})
2024-07-15 06:11:35,581 DEBUG:block_infos State(pc_initial=102 nstack_initial=0):
AdaptBlockInfo(insts=((102, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={108: ()})
2024-07-15 06:11:35,581 DEBUG:block_infos State(pc_initial=104 nstack_initial=1):
AdaptBlockInfo(insts=((106, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={112: ()})
2024-07-15 06:11:35,581 DEBUG:block_infos State(pc_initial=108 nstack_initial=0):
AdaptBlockInfo(insts=((108, {'res': '$const108.0'}), (110, {'value': '$const108.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={112: ()})
2024-07-15 06:11:35,581 DEBUG:block_infos State(pc_initial=112 nstack_initial=0):
AdaptBlockInfo(insts=((112, {'res': '$zero_pos112.0'}), (114, {'pred': '$zero_pos112.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={116: (), 200: ()})
2024-07-15 06:11:35,581 DEBUG:block_infos State(pc_initial=116 nstack_initial=0):
AdaptBlockInfo(insts=((116, {'idx': 0, 'res': '$116load_global.0'}), (118, {}), (120, {}), (122, {}), (124, {}), (126, {}), (128, {'item': '$116load_global.0', 'res': '$128load_attr.2'}), (130, {}), (132, {}), (134, {}), (136, {}), (138, {'res': '$x0138.3'}), (140, {}), (142, {}), (144, {'func': '$128load_attr.2', 'args': ['$x0138.3'], 'kw_names': None, 'res': '$144call.4'}), (146, {}), (148, {}), (150, {}), (152, {}), (154, {'idx': 0, 'res': '$154load_global.5'}), (156, {}), (158, {}), (160, {}), (162, {}), (164, {}), (166, {'item': '$154load_global.5', 'res': '$166load_attr.7'}), (168, {}), (170, {}), (172, {}), (174, {}), (176, {'res': '$x1176.8'}), (178, {}), (180, {}), (182, {'func': '$166load_attr.7', 'args': ['$x1176.8'], 'kw_names': None, 'res': '$182call.9'}), (184, {}), (186, {}), (188, {}), (190, {}), (192, {'lhs': '$144call.4', 'rhs': '$182call.9', 'res': '$192compare_op.10'}), (194, {}), (196, {}), (198, {'retval': '$192compare_op.10', 'castval': '$198return_value.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-15 06:11:35,581 DEBUG:block_infos State(pc_initial=200 nstack_initial=0):
AdaptBlockInfo(insts=((200, {'idx': 0, 'res': '$200load_global.0'}), (202, {}), (204, {}), (206, {}), (208, {}), (210, {}), (212, {'item': '$200load_global.0', 'res': '$212load_attr.2'}), (214, {}), (216, {}), (218, {}), (220, {}), (222, {'res': '$x0222.3'}), (224, {}), (226, {}), (228, {'func': '$212load_attr.2', 'args': ['$x0222.3'], 'kw_names': None, 'res': '$228call.4'}), (230, {}), (232, {}), (234, {}), (236, {}), (238, {'idx': 0, 'res': '$238load_global.5'}), (240, {}), (242, {}), (244, {}), (246, {}), (248, {}), (250, {'item': '$238load_global.5', 'res': '$250load_attr.7'}), (252, {}), (254, {}), (256, {}), (258, {}), (260, {'res': '$x1260.8'}), (262, {}), (264, {}), (266, {'func': '$250load_attr.7', 'args': ['$x1260.8'], 'kw_names': None, 'res': '$266call.9'}), (268, {}), (270, {}), (272, {}), (274, {}), (276, {'lhs': '$228call.4', 'rhs': '$266call.9', 'res': '$276compare_op.10'}), (278, {}), (280, {}), (282, {'retval': '$276compare_op.10', 'castval': '$282return_value.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-15 06:11:35,583 DEBUG:label 0:
    x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    $const6.1 = const(int, 0)                ['$const6.1']
    x0 = getitem(value=x, index=$const6.1, fn=<built-in function getitem>) ['$const6.1', 'x', 'x0']
    $22unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$22unary_negative.4', 'threshold']
    $30compare_op.6 = $22unary_negative.4 <= x0 ['$22unary_negative.4', '$30compare_op.6', 'x0']
    bool36 = global(bool: <class 'bool'>)    ['bool36']
    $36pred = call bool36($30compare_op.6, func=bool36, args=(Var($30compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$30compare_op.6', '$36pred', 'bool36']
    $phi38.0 = x0                            ['$phi38.0', 'x0']
    branch $36pred, 38, 50                   ['$36pred']
label 38:
    $40compare_op.2 = $phi38.0 <= threshold  ['$40compare_op.2', '$phi38.0', 'threshold']
    bool46 = global(bool: <class 'bool'>)    ['bool46']
    $46pred = call bool46($40compare_op.2, func=bool46, args=(Var($40compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$40compare_op.2', '$46pred', 'bool46']
    branch $46pred, 48, 58                   ['$46pred']
label 48:
    jump 54                                  []
label 50:
    jump 58                                  []
label 54:
    x0 = const(int, 0)                       ['x0']
    jump 58                                  []
label 58:
    $const60.1 = const(int, -1)              ['$const60.1']
    x1 = getitem(value=x, index=$const60.1, fn=<built-in function getitem>) ['$const60.1', 'x', 'x1']
    $76unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$76unary_negative.4', 'threshold']
    $84compare_op.6 = $76unary_negative.4 <= x1 ['$76unary_negative.4', '$84compare_op.6', 'x1']
    bool90 = global(bool: <class 'bool'>)    ['bool90']
    $90pred = call bool90($84compare_op.6, func=bool90, args=(Var($84compare_op.6, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None) ['$84compare_op.6', '$90pred', 'bool90']
    $phi92.0 = x1                            ['$phi92.0', 'x1']
    branch $90pred, 92, 104                  ['$90pred']
label 92:
    $94compare_op.2 = $phi92.0 <= threshold  ['$94compare_op.2', '$phi92.0', 'threshold']
    bool100 = global(bool: <class 'bool'>)   ['bool100']
    $100pred = call bool100($94compare_op.2, func=bool100, args=(Var($94compare_op.2, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None) ['$100pred', '$94compare_op.2', 'bool100']
    branch $100pred, 102, 112                ['$100pred']
label 102:
    jump 108                                 []
label 104:
    jump 112                                 []
label 108:
    x1 = const(int, 0)                       ['x1']
    jump 112                                 []
label 112:
    bool114 = global(bool: <class 'bool'>)   ['bool114']
    $114pred = call bool114(zero_pos, func=bool114, args=(Var(zero_pos, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$114pred', 'bool114', 'zero_pos']
    branch $114pred, 116, 200                ['$114pred']
label 116:
    $116load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$116load_global.0']
    $128load_attr.2 = getattr(value=$116load_global.0, attr=signbit) ['$116load_global.0', '$128load_attr.2']
    $144call.4 = call $128load_attr.2(x0, func=$128load_attr.2, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$128load_attr.2', '$144call.4', 'x0']
    $154load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$154load_global.5']
    $166load_attr.7 = getattr(value=$154load_global.5, attr=signbit) ['$154load_global.5', '$166load_attr.7']
    $182call.9 = call $166load_attr.7(x1, func=$166load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None) ['$166load_attr.7', '$182call.9', 'x1']
    $192compare_op.10 = $144call.4 != $182call.9 ['$144call.4', '$182call.9', '$192compare_op.10']
    $198return_value.11 = cast(value=$192compare_op.10) ['$192compare_op.10', '$198return_value.11']
    return $198return_value.11               ['$198return_value.11']
label 200:
    $200load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$200load_global.0']
    $212load_attr.2 = getattr(value=$200load_global.0, attr=sign) ['$200load_global.0', '$212load_attr.2']
    $228call.4 = call $212load_attr.2(x0, func=$212load_attr.2, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$212load_attr.2', '$228call.4', 'x0']
    $238load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$238load_global.5']
    $250load_attr.7 = getattr(value=$238load_global.5, attr=sign) ['$238load_global.5', '$250load_attr.7']
    $266call.9 = call $250load_attr.7(x1, func=$250load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None) ['$250load_attr.7', '$266call.9', 'x1']
    $276compare_op.10 = $228call.4 != $266call.9 ['$228call.4', '$266call.9', '$276compare_op.10']
    $282return_value.11 = cast(value=$276compare_op.10) ['$276compare_op.10', '$282return_value.11']
    return $282return_value.11               ['$282return_value.11']

2024-07-15 06:11:35,772 DEBUG:bytecode dump:
>          0	NOP(arg=None, lineno=1158)
           2	RESUME(arg=0, lineno=1158)
           4	LOAD_GLOBAL(arg=1, lineno=1174)
          16	LOAD_FAST(arg=0, lineno=1174)
          18	LOAD_FAST(arg=1, lineno=1174)
          20	LOAD_FAST(arg=2, lineno=1174)
          22	PRECALL(arg=3, lineno=1174)
          26	CALL(arg=3, lineno=1174)
          36	LOAD_FAST(arg=3, lineno=1174)
          38	LOAD_CONST(arg=1, lineno=1174)
          40	LOAD_CONST(arg=1, lineno=1174)
          42	BUILD_SLICE(arg=2, lineno=1174)
          44	STORE_SUBSCR(arg=None, lineno=1174)
          48	LOAD_CONST(arg=1, lineno=1174)
          50	RETURN_VALUE(arg=None, lineno=1174)
2024-07-15 06:11:35,773 DEBUG:pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-15 06:11:35,773 DEBUG:stack: []
2024-07-15 06:11:35,773 DEBUG:state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-15 06:11:35,773 DEBUG:dispatch pc=0, inst=NOP(arg=None, lineno=1158)
2024-07-15 06:11:35,773 DEBUG:stack []
2024-07-15 06:11:35,773 DEBUG:dispatch pc=2, inst=RESUME(arg=0, lineno=1158)
2024-07-15 06:11:35,773 DEBUG:stack []
2024-07-15 06:11:35,773 DEBUG:dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=1174)
2024-07-15 06:11:35,773 DEBUG:stack []
2024-07-15 06:11:35,773 DEBUG:dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=1174)
2024-07-15 06:11:35,773 DEBUG:stack ['$null$4.1', '$4load_global.0']
2024-07-15 06:11:35,773 DEBUG:dispatch pc=18, inst=LOAD_FAST(arg=1, lineno=1174)
2024-07-15 06:11:35,773 DEBUG:stack ['$null$4.1', '$4load_global.0', '$x16.2']
2024-07-15 06:11:35,773 DEBUG:dispatch pc=20, inst=LOAD_FAST(arg=2, lineno=1174)
2024-07-15 06:11:35,773 DEBUG:stack ['$null$4.1', '$4load_global.0', '$x16.2', '$threshold18.3']
2024-07-15 06:11:35,773 DEBUG:dispatch pc=22, inst=PRECALL(arg=3, lineno=1174)
2024-07-15 06:11:35,773 DEBUG:stack ['$null$4.1', '$4load_global.0', '$x16.2', '$threshold18.3', '$zero_pos20.4']
2024-07-15 06:11:35,773 DEBUG:dispatch pc=26, inst=CALL(arg=3, lineno=1174)
2024-07-15 06:11:35,773 DEBUG:stack ['$null$4.1', '$4load_global.0', '$x16.2', '$threshold18.3', '$zero_pos20.4']
2024-07-15 06:11:35,773 DEBUG:dispatch pc=36, inst=LOAD_FAST(arg=3, lineno=1174)
2024-07-15 06:11:35,773 DEBUG:stack ['$26call.5']
2024-07-15 06:11:35,773 DEBUG:dispatch pc=38, inst=LOAD_CONST(arg=1, lineno=1174)
2024-07-15 06:11:35,773 DEBUG:stack ['$26call.5', '$y36.6']
2024-07-15 06:11:35,773 DEBUG:dispatch pc=40, inst=LOAD_CONST(arg=1, lineno=1174)
2024-07-15 06:11:35,773 DEBUG:stack ['$26call.5', '$y36.6', '$const38.7']
2024-07-15 06:11:35,773 DEBUG:dispatch pc=42, inst=BUILD_SLICE(arg=2, lineno=1174)
2024-07-15 06:11:35,774 DEBUG:stack ['$26call.5', '$y36.6', '$const38.7', '$const40.8']
2024-07-15 06:11:35,774 DEBUG:dispatch pc=44, inst=STORE_SUBSCR(arg=None, lineno=1174)
2024-07-15 06:11:35,774 DEBUG:stack ['$26call.5', '$y36.6', '$42build_slice.10']
2024-07-15 06:11:35,774 DEBUG:dispatch pc=48, inst=LOAD_CONST(arg=1, lineno=1174)
2024-07-15 06:11:35,774 DEBUG:stack []
2024-07-15 06:11:35,774 DEBUG:dispatch pc=50, inst=RETURN_VALUE(arg=None, lineno=1174)
2024-07-15 06:11:35,774 DEBUG:stack ['$const48.11']
2024-07-15 06:11:35,774 DEBUG:end state. edges=[]
2024-07-15 06:11:35,774 DEBUG:-------------------------Prune PHIs-------------------------
2024-07-15 06:11:35,774 DEBUG:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-07-15 06:11:35,774 DEBUG:defmap: {}
2024-07-15 06:11:35,774 DEBUG:phismap: defaultdict(<class 'set'>, {})
2024-07-15 06:11:35,774 DEBUG:changing phismap: defaultdict(<class 'set'>, {})
2024-07-15 06:11:35,774 DEBUG:keep phismap: {}
2024-07-15 06:11:35,774 DEBUG:new_out: defaultdict(<class 'dict'>, {})
2024-07-15 06:11:35,774 DEBUG:----------------------DONE Prune PHIs-----------------------
2024-07-15 06:11:35,774 DEBUG:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (6, {}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$x16.2'}), (18, {'res': '$threshold18.3'}), (20, {'res': '$zero_pos20.4'}), (22, {}), (24, {}), (26, {'func': '$4load_global.0', 'args': ['$x16.2', '$threshold18.3', '$zero_pos20.4'], 'kw_names': None, 'res': '$26call.5'}), (28, {}), (30, {}), (32, {}), (34, {}), (36, {'res': '$y36.6'}), (38, {'res': '$const38.7'}), (40, {'res': '$const40.8'}), (42, {'start': '$const38.7', 'stop': '$const40.8', 'step': None, 'res': '$42build_slice.10', 'slicevar': '$42build_slice.9'}), (44, {'target': '$y36.6', 'index': '$42build_slice.10', 'value': '$26call.5'}), (46, {}), (48, {'res': '$const48.11'}), (50, {'retval': '$const48.11', 'castval': '$50return_value.12'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-15 06:11:35,775 DEBUG:label 0:
    x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    y = arg(3, name=y)                       ['y']
    $4load_global.0 = global(_zc_stencil: <numba.stencils.stencil.StencilFunc object at 0x00000221FFE44E90>) ['$4load_global.0']
    $26call.5 = call $4load_global.0(x, threshold, zero_pos, func=$4load_global.0, args=[Var(x, audio.py:1158), Var(threshold, audio.py:1158), Var(zero_pos, audio.py:1158)], kws=(), vararg=None, varkwarg=None, target=None) ['$26call.5', '$4load_global.0', 'threshold', 'x', 'zero_pos']
    $const38.7 = const(NoneType, None)       ['$const38.7']
    $const40.8 = const(NoneType, None)       ['$const40.8']
    $42build_slice.9 = global(slice: <class 'slice'>) ['$42build_slice.9']
    $42build_slice.10 = call $42build_slice.9($const38.7, $const40.8, func=$42build_slice.9, args=(Var($const38.7, audio.py:1174), Var($const40.8, audio.py:1174)), kws=(), vararg=None, varkwarg=None, target=None) ['$42build_slice.10', '$42build_slice.9', '$const38.7', '$const40.8']
    y[$42build_slice.10] = $26call.5         ['$26call.5', '$42build_slice.10', 'y']
    $const48.11 = const(NoneType, None)      ['$const48.11']
    $50return_value.12 = cast(value=$const48.11) ['$50return_value.12', '$const48.11']
    return $50return_value.12                ['$50return_value.12']

2024-07-15 06:11:35,781 DEBUG:==== SSA block analysis pass on 0
2024-07-15 06:11:35,782 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5955050>
2024-07-15 06:11:35,782 DEBUG:on stmt: x = arg(0, name=x)
2024-07-15 06:11:35,782 DEBUG:on stmt: threshold = arg(1, name=threshold)
2024-07-15 06:11:35,782 DEBUG:on stmt: zero_pos = arg(2, name=zero_pos)
2024-07-15 06:11:35,782 DEBUG:on stmt: y = arg(3, name=y)
2024-07-15 06:11:35,782 DEBUG:on stmt: $4load_global.0 = global(_zc_stencil: <numba.stencils.stencil.StencilFunc object at 0x00000221FFE44E90>)
2024-07-15 06:11:35,782 DEBUG:on stmt: $26call.5 = call $4load_global.0(x, threshold, zero_pos, func=$4load_global.0, args=[Var(x, audio.py:1158), Var(threshold, audio.py:1158), Var(zero_pos, audio.py:1158)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:35,782 DEBUG:on stmt: $const38.7 = const(NoneType, None)
2024-07-15 06:11:35,782 DEBUG:on stmt: $const40.8 = const(NoneType, None)
2024-07-15 06:11:35,782 DEBUG:on stmt: $42build_slice.9 = global(slice: <class 'slice'>)
2024-07-15 06:11:35,782 DEBUG:on stmt: $42build_slice.10 = call $42build_slice.9($const38.7, $const40.8, func=$42build_slice.9, args=(Var($const38.7, audio.py:1174), Var($const40.8, audio.py:1174)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:35,782 DEBUG:on stmt: y[slice(None, None, None)] = $26call.5
2024-07-15 06:11:35,783 DEBUG:on stmt: $const48.11 = const(NoneType, None)
2024-07-15 06:11:35,783 DEBUG:on stmt: $50return_value.12 = cast(value=$const48.11)
2024-07-15 06:11:35,783 DEBUG:on stmt: return $50return_value.12
2024-07-15 06:11:35,783 DEBUG:defs defaultdict(<class 'list'>,
            {'$26call.5': [(<numba.core.ir.Assign object at 0x00000221B592A650>,
                            0)],
             '$42build_slice.10': [(<numba.core.ir.Assign object at 0x00000221B592AFD0>,
                                    0)],
             '$42build_slice.9': [(<numba.core.ir.Assign object at 0x00000221B592AE50>,
                                   0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x00000221B5929D10>,
                                  0)],
             '$50return_value.12': [(<numba.core.ir.Assign object at 0x00000221B592B4D0>,
                                     0)],
             '$const38.7': [(<numba.core.ir.Assign object at 0x00000221B592AA90>,
                             0)],
             '$const40.8': [(<numba.core.ir.Assign object at 0x00000221B592AC50>,
                             0)],
             '$const48.11': [(<numba.core.ir.Assign object at 0x00000221B592B290>,
                              0)],
             'threshold': [(<numba.core.ir.Assign object at 0x00000221B5929890>,
                            0)],
             'x': [(<numba.core.ir.Assign object at 0x00000221B5929790>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x00000221B5929A90>, 0)],
             'zero_pos': [(<numba.core.ir.Assign object at 0x00000221B5929990>,
                           0)]})
2024-07-15 06:11:35,783 DEBUG:SSA violators <numba.core.utils.OrderedSet object at 0x00000221B5795550>
2024-07-15 06:11:35,832 DEBUG:bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	RESUME(arg=0, lineno=1)
           4	LOAD_FAST(arg=0, lineno=2)
           6	LOAD_ATTR(arg=0, lineno=2)
          16	STORE_FAST(arg=3, lineno=2)
          18	LOAD_GLOBAL(arg=2, lineno=3)
          30	LOAD_METHOD(arg=2, lineno=3)
          52	LOAD_FAST(arg=3, lineno=3)
          54	LOAD_GLOBAL(arg=2, lineno=3)
          66	LOAD_ATTR(arg=3, lineno=3)
          76	KW_NAMES(arg=1, lineno=3)
          78	PRECALL(arg=2, lineno=3)
          82	CALL(arg=2, lineno=3)
          92	STORE_FAST(arg=4, lineno=3)
          94	LOAD_CONST(arg=2, lineno=4)
          96	LOAD_FAST(arg=4, lineno=4)
          98	LOAD_CONST(arg=0, lineno=4)
         100	LOAD_CONST(arg=3, lineno=4)
         102	BUILD_SLICE(arg=2, lineno=4)
         104	STORE_SUBSCR(arg=None, lineno=4)
         108	LOAD_CONST(arg=2, lineno=5)
         110	LOAD_FAST(arg=4, lineno=5)
         112	LOAD_CONST(arg=2, lineno=5)
         114	LOAD_CONST(arg=0, lineno=5)
         116	BUILD_SLICE(arg=2, lineno=5)
         118	STORE_SUBSCR(arg=None, lineno=5)
         122	LOAD_GLOBAL(arg=9, lineno=6)
         134	LOAD_GLOBAL(arg=11, lineno=6)
         146	LOAD_CONST(arg=2, lineno=6)
         148	LOAD_CONST(arg=4, lineno=6)
         150	PRECALL(arg=2, lineno=6)
         154	CALL(arg=2, lineno=6)
         164	UNARY_NEGATIVE(arg=None, lineno=6)
         166	LOAD_FAST(arg=3, lineno=6)
         168	LOAD_CONST(arg=2, lineno=6)
         170	BINARY_SUBSCR(arg=None, lineno=6)
         180	LOAD_GLOBAL(arg=13, lineno=6)
         192	LOAD_CONST(arg=2, lineno=6)
         194	LOAD_CONST(arg=2, lineno=6)
         196	PRECALL(arg=2, lineno=6)
         200	CALL(arg=2, lineno=6)
         210	BINARY_OP(arg=10, lineno=6)
         214	PRECALL(arg=2, lineno=6)
         218	CALL(arg=2, lineno=6)
         228	GET_ITER(arg=None, lineno=6)
>        230	FOR_ITER(arg=4, lineno=6)
         232	STORE_FAST(arg=5, lineno=6)
         234	LOAD_CONST(arg=2, lineno=7)
         236	STORE_FAST(arg=6, lineno=7)
         238	JUMP_BACKWARD(arg=5, lineno=7)
>        240	LOAD_FAST(arg=4, lineno=8)
         242	RETURN_VALUE(arg=None, lineno=8)
2024-07-15 06:11:35,832 DEBUG:pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-15 06:11:35,832 DEBUG:stack: []
2024-07-15 06:11:35,832 DEBUG:state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-15 06:11:35,832 DEBUG:dispatch pc=0, inst=NOP(arg=None, lineno=1)
2024-07-15 06:11:35,832 DEBUG:stack []
2024-07-15 06:11:35,832 DEBUG:dispatch pc=2, inst=RESUME(arg=0, lineno=1)
2024-07-15 06:11:35,832 DEBUG:stack []
2024-07-15 06:11:35,832 DEBUG:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2)
2024-07-15 06:11:35,832 DEBUG:stack []
2024-07-15 06:11:35,832 DEBUG:dispatch pc=6, inst=LOAD_ATTR(arg=0, lineno=2)
2024-07-15 06:11:35,832 DEBUG:stack ['$x4.0']
2024-07-15 06:11:35,832 DEBUG:dispatch pc=16, inst=STORE_FAST(arg=3, lineno=2)
2024-07-15 06:11:35,832 DEBUG:stack ['$6load_attr.1']
2024-07-15 06:11:35,832 DEBUG:dispatch pc=18, inst=LOAD_GLOBAL(arg=2, lineno=3)
2024-07-15 06:11:35,832 DEBUG:stack []
2024-07-15 06:11:35,832 DEBUG:dispatch pc=30, inst=LOAD_METHOD(arg=2, lineno=3)
2024-07-15 06:11:35,832 DEBUG:stack ['$18load_global.2']
2024-07-15 06:11:35,832 DEBUG:dispatch pc=52, inst=LOAD_FAST(arg=3, lineno=3)
2024-07-15 06:11:35,833 DEBUG:stack ['$null$30.3', '$30load_method.4']
2024-07-15 06:11:35,833 DEBUG:dispatch pc=54, inst=LOAD_GLOBAL(arg=2, lineno=3)
2024-07-15 06:11:35,833 DEBUG:stack ['$null$30.3', '$30load_method.4', '$full_shape052.5']
2024-07-15 06:11:35,833 DEBUG:dispatch pc=66, inst=LOAD_ATTR(arg=3, lineno=3)
2024-07-15 06:11:35,833 DEBUG:stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$54load_global.6']
2024-07-15 06:11:35,833 DEBUG:dispatch pc=76, inst=KW_NAMES(arg=1, lineno=3)
2024-07-15 06:11:35,833 DEBUG:stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
2024-07-15 06:11:35,833 DEBUG:dispatch pc=78, inst=PRECALL(arg=2, lineno=3)
2024-07-15 06:11:35,833 DEBUG:stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
2024-07-15 06:11:35,833 DEBUG:dispatch pc=82, inst=CALL(arg=2, lineno=3)
2024-07-15 06:11:35,833 DEBUG:stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
2024-07-15 06:11:35,833 DEBUG:dispatch pc=92, inst=STORE_FAST(arg=4, lineno=3)
2024-07-15 06:11:35,833 DEBUG:stack ['$82call.8']
2024-07-15 06:11:35,833 DEBUG:dispatch pc=94, inst=LOAD_CONST(arg=2, lineno=4)
2024-07-15 06:11:35,833 DEBUG:stack []
2024-07-15 06:11:35,833 DEBUG:dispatch pc=96, inst=LOAD_FAST(arg=4, lineno=4)
2024-07-15 06:11:35,833 DEBUG:stack ['$const94.9']
2024-07-15 06:11:35,833 DEBUG:dispatch pc=98, inst=LOAD_CONST(arg=0, lineno=4)
2024-07-15 06:11:35,833 DEBUG:stack ['$const94.9', '$out096.10']
2024-07-15 06:11:35,833 DEBUG:dispatch pc=100, inst=LOAD_CONST(arg=3, lineno=4)
2024-07-15 06:11:35,833 DEBUG:stack ['$const94.9', '$out096.10', '$const98.11']
2024-07-15 06:11:35,833 DEBUG:dispatch pc=102, inst=BUILD_SLICE(arg=2, lineno=4)
2024-07-15 06:11:35,833 DEBUG:stack ['$const94.9', '$out096.10', '$const98.11', '$const100.12']
2024-07-15 06:11:35,833 DEBUG:dispatch pc=104, inst=STORE_SUBSCR(arg=None, lineno=4)
2024-07-15 06:11:35,833 DEBUG:stack ['$const94.9', '$out096.10', '$102build_slice.14']
2024-07-15 06:11:35,833 DEBUG:dispatch pc=108, inst=LOAD_CONST(arg=2, lineno=5)
2024-07-15 06:11:35,833 DEBUG:stack []
2024-07-15 06:11:35,833 DEBUG:dispatch pc=110, inst=LOAD_FAST(arg=4, lineno=5)
2024-07-15 06:11:35,833 DEBUG:stack ['$const108.15']
2024-07-15 06:11:35,833 DEBUG:dispatch pc=112, inst=LOAD_CONST(arg=2, lineno=5)
2024-07-15 06:11:35,833 DEBUG:stack ['$const108.15', '$out0110.16']
2024-07-15 06:11:35,833 DEBUG:dispatch pc=114, inst=LOAD_CONST(arg=0, lineno=5)
2024-07-15 06:11:35,833 DEBUG:stack ['$const108.15', '$out0110.16', '$const112.17']
2024-07-15 06:11:35,834 DEBUG:dispatch pc=116, inst=BUILD_SLICE(arg=2, lineno=5)
2024-07-15 06:11:35,834 DEBUG:stack ['$const108.15', '$out0110.16', '$const112.17', '$const114.18']
2024-07-15 06:11:35,834 DEBUG:dispatch pc=118, inst=STORE_SUBSCR(arg=None, lineno=5)
2024-07-15 06:11:35,834 DEBUG:stack ['$const108.15', '$out0110.16', '$116build_slice.20']
2024-07-15 06:11:35,834 DEBUG:dispatch pc=122, inst=LOAD_GLOBAL(arg=9, lineno=6)
2024-07-15 06:11:35,834 DEBUG:stack []
2024-07-15 06:11:35,834 DEBUG:dispatch pc=134, inst=LOAD_GLOBAL(arg=11, lineno=6)
2024-07-15 06:11:35,834 DEBUG:stack ['$null$122.22', '$122load_global.21']
2024-07-15 06:11:35,834 DEBUG:dispatch pc=146, inst=LOAD_CONST(arg=2, lineno=6)
2024-07-15 06:11:35,834 DEBUG:stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23']
2024-07-15 06:11:35,834 DEBUG:dispatch pc=148, inst=LOAD_CONST(arg=4, lineno=6)
2024-07-15 06:11:35,834 DEBUG:stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25']
2024-07-15 06:11:35,834 DEBUG:dispatch pc=150, inst=PRECALL(arg=2, lineno=6)
2024-07-15 06:11:35,834 DEBUG:stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25', '$const148.26']
2024-07-15 06:11:35,834 DEBUG:dispatch pc=154, inst=CALL(arg=2, lineno=6)
2024-07-15 06:11:35,834 DEBUG:stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25', '$const148.26']
2024-07-15 06:11:35,834 DEBUG:dispatch pc=164, inst=UNARY_NEGATIVE(arg=None, lineno=6)
2024-07-15 06:11:35,834 DEBUG:stack ['$null$122.22', '$122load_global.21', '$154call.27']
2024-07-15 06:11:35,834 DEBUG:dispatch pc=166, inst=LOAD_FAST(arg=3, lineno=6)
2024-07-15 06:11:35,834 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28']
2024-07-15 06:11:35,834 DEBUG:dispatch pc=168, inst=LOAD_CONST(arg=2, lineno=6)
2024-07-15 06:11:35,834 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$full_shape0166.29']
2024-07-15 06:11:35,834 DEBUG:dispatch pc=170, inst=BINARY_SUBSCR(arg=None, lineno=6)
2024-07-15 06:11:35,834 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$full_shape0166.29', '$const168.30']
2024-07-15 06:11:35,834 DEBUG:dispatch pc=180, inst=LOAD_GLOBAL(arg=13, lineno=6)
2024-07-15 06:11:35,834 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31']
2024-07-15 06:11:35,834 DEBUG:dispatch pc=192, inst=LOAD_CONST(arg=2, lineno=6)
2024-07-15 06:11:35,834 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32']
2024-07-15 06:11:35,834 DEBUG:dispatch pc=194, inst=LOAD_CONST(arg=2, lineno=6)
2024-07-15 06:11:35,834 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34']
2024-07-15 06:11:35,835 DEBUG:dispatch pc=196, inst=PRECALL(arg=2, lineno=6)
2024-07-15 06:11:35,835 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34', '$const194.35']
2024-07-15 06:11:35,835 DEBUG:dispatch pc=200, inst=CALL(arg=2, lineno=6)
2024-07-15 06:11:35,835 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34', '$const194.35']
2024-07-15 06:11:35,835 DEBUG:dispatch pc=210, inst=BINARY_OP(arg=10, lineno=6)
2024-07-15 06:11:35,835 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$200call.36']
2024-07-15 06:11:35,835 DEBUG:dispatch pc=214, inst=PRECALL(arg=2, lineno=6)
2024-07-15 06:11:35,835 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$binop_sub210.37']
2024-07-15 06:11:35,835 DEBUG:dispatch pc=218, inst=CALL(arg=2, lineno=6)
2024-07-15 06:11:35,835 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$binop_sub210.37']
2024-07-15 06:11:35,835 DEBUG:dispatch pc=228, inst=GET_ITER(arg=None, lineno=6)
2024-07-15 06:11:35,835 DEBUG:stack ['$218call.38']
2024-07-15 06:11:35,835 DEBUG:end state. edges=[Edge(pc=230, stack=('$228get_iter.39',), blockstack=(), npush=0)]
2024-07-15 06:11:35,835 DEBUG:pending: deque([State(pc_initial=230 nstack_initial=1)])
2024-07-15 06:11:35,835 DEBUG:stack: ['$phi230.0']
2024-07-15 06:11:35,835 DEBUG:state.pc_initial: State(pc_initial=230 nstack_initial=1)
2024-07-15 06:11:35,835 DEBUG:dispatch pc=230, inst=FOR_ITER(arg=4, lineno=6)
2024-07-15 06:11:35,835 DEBUG:stack ['$phi230.0']
2024-07-15 06:11:35,835 DEBUG:end state. edges=[Edge(pc=240, stack=(), blockstack=(), npush=0), Edge(pc=232, stack=('$phi230.0', '$230for_iter.2'), blockstack=(), npush=0)]
2024-07-15 06:11:35,835 DEBUG:pending: deque([State(pc_initial=240 nstack_initial=0), State(pc_initial=232 nstack_initial=2)])
2024-07-15 06:11:35,835 DEBUG:stack: []
2024-07-15 06:11:35,835 DEBUG:state.pc_initial: State(pc_initial=240 nstack_initial=0)
2024-07-15 06:11:35,835 DEBUG:dispatch pc=240, inst=LOAD_FAST(arg=4, lineno=8)
2024-07-15 06:11:35,835 DEBUG:stack []
2024-07-15 06:11:35,835 DEBUG:dispatch pc=242, inst=RETURN_VALUE(arg=None, lineno=8)
2024-07-15 06:11:35,835 DEBUG:stack ['$out0240.0']
2024-07-15 06:11:35,835 DEBUG:end state. edges=[]
2024-07-15 06:11:35,835 DEBUG:pending: deque([State(pc_initial=232 nstack_initial=2)])
2024-07-15 06:11:35,835 DEBUG:stack: ['$phi232.0', '$phi232.1']
2024-07-15 06:11:35,835 DEBUG:state.pc_initial: State(pc_initial=232 nstack_initial=2)
2024-07-15 06:11:35,835 DEBUG:dispatch pc=232, inst=STORE_FAST(arg=5, lineno=6)
2024-07-15 06:11:35,836 DEBUG:stack ['$phi232.0', '$phi232.1']
2024-07-15 06:11:35,836 DEBUG:dispatch pc=234, inst=LOAD_CONST(arg=2, lineno=7)
2024-07-15 06:11:35,836 DEBUG:stack ['$phi232.0']
2024-07-15 06:11:35,836 DEBUG:dispatch pc=236, inst=STORE_FAST(arg=6, lineno=7)
2024-07-15 06:11:35,836 DEBUG:stack ['$phi232.0', '$const234.2']
2024-07-15 06:11:35,836 DEBUG:dispatch pc=238, inst=JUMP_BACKWARD(arg=5, lineno=7)
2024-07-15 06:11:35,836 DEBUG:stack ['$phi232.0']
2024-07-15 06:11:35,836 DEBUG:end state. edges=[Edge(pc=230, stack=('$phi232.0',), blockstack=(), npush=0)]
2024-07-15 06:11:35,836 DEBUG:pending: deque([State(pc_initial=230 nstack_initial=1)])
2024-07-15 06:11:35,836 DEBUG:-------------------------Prune PHIs-------------------------
2024-07-15 06:11:35,836 DEBUG:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=230 nstack_initial=1): {'$phi230.0'},
             State(pc_initial=232 nstack_initial=2): {'$phi232.1'},
             State(pc_initial=240 nstack_initial=0): set()})
2024-07-15 06:11:35,836 DEBUG:defmap: {'$phi230.0': State(pc_initial=0 nstack_initial=0),
 '$phi232.1': State(pc_initial=230 nstack_initial=1)}
2024-07-15 06:11:35,836 DEBUG:phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi232.0',
                            State(pc_initial=232 nstack_initial=2))},
             '$phi232.0': {('$phi230.0',
                            State(pc_initial=230 nstack_initial=1))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-07-15 06:11:35,836 DEBUG:changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi230.0',
                            State(pc_initial=230 nstack_initial=1))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-07-15 06:11:35,837 DEBUG:changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-07-15 06:11:35,837 DEBUG:changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-07-15 06:11:35,837 DEBUG:keep phismap: {'$phi230.0': {('$228get_iter.39', State(pc_initial=0 nstack_initial=0))},
 '$phi232.1': {('$230for_iter.2', State(pc_initial=230 nstack_initial=1))}}
2024-07-15 06:11:35,837 DEBUG:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi230.0': '$228get_iter.39'},
             State(pc_initial=230 nstack_initial=1): {'$phi232.1': '$230for_iter.2'}})
2024-07-15 06:11:35,837 DEBUG:----------------------DONE Prune PHIs-----------------------
2024-07-15 06:11:35,837 DEBUG:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'item': '$x4.0', 'res': '$6load_attr.1'}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'value': '$6load_attr.1'}), (18, {'idx': 1, 'res': '$18load_global.2'}), (20, {}), (22, {}), (24, {}), (26, {}), (28, {}), (30, {'item': '$18load_global.2', 'res': '$30load_method.4'}), (32, {}), (34, {}), (36, {}), (38, {}), (40, {}), (42, {}), (44, {}), (46, {}), (48, {}), (50, {}), (52, {'res': '$full_shape052.5'}), (54, {'idx': 1, 'res': '$54load_global.6'}), (56, {}), (58, {}), (60, {}), (62, {}), (64, {}), (66, {'item': '$54load_global.6', 'res': '$66load_attr.7'}), (68, {}), (70, {}), (72, {}), (74, {}), (78, {}), (80, {}), (82, {'func': '$30load_method.4', 'args': ['$full_shape052.5', '$66load_attr.7'], 'kw_names': 1, 'res': '$82call.8'}), (84, {}), (86, {}), (88, {}), (90, {}), (92, {'value': '$82call.8'}), (94, {'res': '$const94.9'}), (96, {'res': '$out096.10'}), (98, {'res': '$const98.11'}), (100, {'res': '$const100.12'}), (102, {'start': '$const98.11', 'stop': '$const100.12', 'step': None, 'res': '$102build_slice.14', 'slicevar': '$102build_slice.13'}), (104, {'target': '$out096.10', 'index': '$102build_slice.14', 'value': '$const94.9'}), (106, {}), (108, {'res': '$const108.15'}), (110, {'res': '$out0110.16'}), (112, {'res': '$const112.17'}), (114, {'res': '$const114.18'}), (116, {'start': '$const112.17', 'stop': '$const114.18', 'step': None, 'res': '$116build_slice.20', 'slicevar': '$116build_slice.19'}), (118, {'target': '$out0110.16', 'index': '$116build_slice.20', 'value': '$const108.15'}), (120, {}), (122, {'idx': 4, 'res': '$122load_global.21'}), (124, {}), (126, {}), (128, {}), (130, {}), (132, {}), (134, {'idx': 5, 'res': '$134load_global.23'}), (136, {}), (138, {}), (140, {}), (142, {}), (144, {}), (146, {'res': '$const146.25'}), (148, {'res': '$const148.26'}), (150, {}), (152, {}), (154, {'func': '$134load_global.23', 'args': ['$const146.25', '$const148.26'], 'kw_names': None, 'res': '$154call.27'}), (156, {}), (158, {}), (160, {}), (162, {}), (164, {'value': '$154call.27', 'res': '$164unary_negative.28'}), (166, {'res': '$full_shape0166.29'}), (168, {'res': '$const168.30'}), (170, {'index': '$const168.30', 'target': '$full_shape0166.29', 'res': '$170binary_subscr.31'}), (172, {}), (174, {}), (176, {}), (178, {}), (180, {'idx': 6, 'res': '$180load_global.32'}), (182, {}), (184, {}), (186, {}), (188, {}), (190, {}), (192, {'res': '$const192.34'}), (194, {'res': '$const194.35'}), (196, {}), (198, {}), (200, {'func': '$180load_global.32', 'args': ['$const192.34', '$const194.35'], 'kw_names': None, 'res': '$200call.36'}), (202, {}), (204, {}), (206, {}), (208, {}), (210, {'op': '-', 'lhs': '$170binary_subscr.31', 'rhs': '$200call.36', 'res': '$binop_sub210.37'}), (212, {}), (214, {}), (216, {}), (218, {'func': '$122load_global.21', 'args': ['$164unary_negative.28', '$binop_sub210.37'], 'kw_names': None, 'res': '$218call.38'}), (220, {}), (222, {}), (224, {}), (226, {}), (228, {'value': '$218call.38', 'res': '$228get_iter.39'})), outgoing_phis={'$phi230.0': '$228get_iter.39'}, blockstack=(), active_try_block=None, outgoing_edgepushed={230: ('$228get_iter.39',)})
2024-07-15 06:11:35,838 DEBUG:block_infos State(pc_initial=230 nstack_initial=1):
AdaptBlockInfo(insts=((230, {'iterator': '$phi230.0', 'pair': '$230for_iter.1', 'indval': '$230for_iter.2', 'pred': '$230for_iter.3'}),), outgoing_phis={'$phi232.1': '$230for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={240: (), 232: ('$phi230.0', '$230for_iter.2')})
2024-07-15 06:11:35,838 DEBUG:block_infos State(pc_initial=232 nstack_initial=2):
AdaptBlockInfo(insts=((232, {'value': '$phi232.1'}), (234, {'res': '$const234.2'}), (236, {'value': '$const234.2'}), (238, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={230: ('$phi232.0',)})
2024-07-15 06:11:35,838 DEBUG:block_infos State(pc_initial=240 nstack_initial=0):
AdaptBlockInfo(insts=((240, {'res': '$out0240.0'}), (242, {'retval': '$out0240.0', 'castval': '$242return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-15 06:11:35,839 DEBUG:label 0:
    x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $18load_global.2 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$18load_global.2']
    $30load_method.4 = getattr(value=$18load_global.2, attr=empty) ['$18load_global.2', '$30load_method.4']
    $54load_global.6 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$54load_global.6']
    $66load_attr.7 = getattr(value=$54load_global.6, attr=bool_) ['$54load_global.6', '$66load_attr.7']
    out0 = call $30load_method.4(full_shape0, func=$30load_method.4, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7, <string>:3))], vararg=None, varkwarg=None, target=None) ['$30load_method.4', '$66load_attr.7', 'full_shape0', 'out0']
    $const94.9 = const(int, 0)               ['$const94.9']
    $const98.11 = const(NoneType, None)      ['$const98.11']
    $const100.12 = const(int, 1)             ['$const100.12']
    $102build_slice.13 = global(slice: <class 'slice'>) ['$102build_slice.13']
    $102build_slice.14 = call $102build_slice.13($const98.11, $const100.12, func=$102build_slice.13, args=(Var($const98.11, <string>:4), Var($const100.12, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$102build_slice.13', '$102build_slice.14', '$const100.12', '$const98.11']
    out0[$102build_slice.14] = $const94.9    ['$102build_slice.14', '$const94.9', 'out0']
    $const108.15 = const(int, 0)             ['$const108.15']
    $const112.17 = const(int, 0)             ['$const112.17']
    $const114.18 = const(NoneType, None)     ['$const114.18']
    $116build_slice.19 = global(slice: <class 'slice'>) ['$116build_slice.19']
    $116build_slice.20 = call $116build_slice.19($const112.17, $const114.18, func=$116build_slice.19, args=(Var($const112.17, <string>:5), Var($const114.18, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$116build_slice.19', '$116build_slice.20', '$const112.17', '$const114.18']
    out0[$116build_slice.20] = $const108.15  ['$116build_slice.20', '$const108.15', 'out0']
    $122load_global.21 = global(range: <class 'range'>) ['$122load_global.21']
    $134load_global.23 = global(min: <built-in function min>) ['$134load_global.23']
    $const146.25 = const(int, 0)             ['$const146.25']
    $const148.26 = const(int, -1)            ['$const148.26']
    $154call.27 = call $134load_global.23($const146.25, $const148.26, func=$134load_global.23, args=[Var($const146.25, <string>:6), Var($const148.26, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$134load_global.23', '$154call.27', '$const146.25', '$const148.26']
    $164unary_negative.28 = unary(fn=<built-in function neg>, value=$154call.27) ['$154call.27', '$164unary_negative.28']
    $const168.30 = const(int, 0)             ['$const168.30']
    $170binary_subscr.31 = getitem(value=full_shape0, index=$const168.30, fn=<built-in function getitem>) ['$170binary_subscr.31', '$const168.30', 'full_shape0']
    $180load_global.32 = global(max: <built-in function max>) ['$180load_global.32']
    $const192.34 = const(int, 0)             ['$const192.34']
    $const194.35 = const(int, 0)             ['$const194.35']
    $200call.36 = call $180load_global.32($const192.34, $const194.35, func=$180load_global.32, args=[Var($const192.34, <string>:6), Var($const194.35, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$180load_global.32', '$200call.36', '$const192.34', '$const194.35']
    $binop_sub210.37 = $170binary_subscr.31 - $200call.36 ['$170binary_subscr.31', '$200call.36', '$binop_sub210.37']
    $218call.38 = call $122load_global.21($164unary_negative.28, $binop_sub210.37, func=$122load_global.21, args=[Var($164unary_negative.28, <string>:6), Var($binop_sub210.37, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$122load_global.21', '$164unary_negative.28', '$218call.38', '$binop_sub210.37']
    $228get_iter.39 = getiter(value=$218call.38) ['$218call.38', '$228get_iter.39']
    $phi230.0 = $228get_iter.39              ['$228get_iter.39', '$phi230.0']
    jump 230                                 []
label 230:
    $230for_iter.1 = iternext(value=$phi230.0) ['$230for_iter.1', '$phi230.0']
    $230for_iter.2 = pair_first(value=$230for_iter.1) ['$230for_iter.1', '$230for_iter.2']
    $230for_iter.3 = pair_second(value=$230for_iter.1) ['$230for_iter.1', '$230for_iter.3']
    $phi232.1 = $230for_iter.2               ['$230for_iter.2', '$phi232.1']
    branch $230for_iter.3, 232, 240          ['$230for_iter.3']
label 232:
    index00 = $phi232.1                      ['$phi232.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 230                                 []
label 240:
    $242return_value.1 = cast(value=out0)    ['$242return_value.1', 'out0']
    return $242return_value.1                ['$242return_value.1']

2024-07-15 06:11:35,861 DEBUG:==== SSA block analysis pass on 0
2024-07-15 06:11:35,861 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5961690>
2024-07-15 06:11:35,861 DEBUG:on stmt: x = arg(0, name=x)
2024-07-15 06:11:35,861 DEBUG:on stmt: threshold = arg(1, name=threshold)
2024-07-15 06:11:35,861 DEBUG:on stmt: zero_pos = arg(2, name=zero_pos)
2024-07-15 06:11:35,861 DEBUG:on stmt: full_shape0 = getattr(value=x, attr=shape)
2024-07-15 06:11:35,861 DEBUG:on stmt: $18load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:35,861 DEBUG:on stmt: $30load_method.4.1 = getattr(value=$18load_global.2.1, attr=empty)
2024-07-15 06:11:35,861 DEBUG:on stmt: $54load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:35,861 DEBUG:on stmt: $66load_attr.7.1 = getattr(value=$54load_global.6.1, attr=bool_)
2024-07-15 06:11:35,861 DEBUG:on stmt: out0 = call $30load_method.4.1(full_shape0, func=$30load_method.4.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:35,861 DEBUG:on stmt: $const94.9.1 = const(int, 0)
2024-07-15 06:11:35,861 DEBUG:on stmt: $const98.11.1 = const(NoneType, None)
2024-07-15 06:11:35,861 DEBUG:on stmt: $const100.12.1 = const(int, 1)
2024-07-15 06:11:35,861 DEBUG:on stmt: $102build_slice.13.1 = global(slice: <class 'slice'>)
2024-07-15 06:11:35,861 DEBUG:on stmt: $102build_slice.14.1 = call $102build_slice.13.1($const98.11.1, $const100.12.1, func=$102build_slice.13.1, args=(Var($const98.11.1, <string>:4), Var($const100.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:35,861 DEBUG:on stmt: out0[$102build_slice.14.1] = $const94.9.1
2024-07-15 06:11:35,861 DEBUG:on stmt: $const108.15.1 = const(int, 0)
2024-07-15 06:11:35,861 DEBUG:on stmt: $const112.17.1 = const(int, 0)
2024-07-15 06:11:35,861 DEBUG:on stmt: $const114.18.1 = const(NoneType, None)
2024-07-15 06:11:35,861 DEBUG:on stmt: $116build_slice.19.1 = global(slice: <class 'slice'>)
2024-07-15 06:11:35,861 DEBUG:on stmt: $116build_slice.20.1 = call $116build_slice.19.1($const112.17.1, $const114.18.1, func=$116build_slice.19.1, args=(Var($const112.17.1, <string>:5), Var($const114.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:35,861 DEBUG:on stmt: out0[$116build_slice.20.1] = $const108.15.1
2024-07-15 06:11:35,861 DEBUG:on stmt: $122load_global.21.1 = global(range: <class 'range'>)
2024-07-15 06:11:35,861 DEBUG:on stmt: $134load_global.23.1 = global(min: <built-in function min>)
2024-07-15 06:11:35,862 DEBUG:on stmt: $const146.25.1 = const(int, 0)
2024-07-15 06:11:35,862 DEBUG:on stmt: $const148.26.1 = const(int, -1)
2024-07-15 06:11:35,862 DEBUG:on stmt: $154call.27.1 = call $134load_global.23.1($const146.25.1, $const148.26.1, func=$134load_global.23.1, args=[Var($const146.25.1, <string>:6), Var($const148.26.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:35,862 DEBUG:on stmt: $164unary_negative.28.1 = unary(fn=<built-in function neg>, value=$154call.27.1)
2024-07-15 06:11:35,862 DEBUG:on stmt: $const168.30.1 = const(int, 0)
2024-07-15 06:11:35,862 DEBUG:on stmt: $170binary_subscr.31.1 = getitem(value=full_shape0, index=$const168.30.1, fn=<built-in function getitem>)
2024-07-15 06:11:35,862 DEBUG:on stmt: $180load_global.32.1 = global(max: <built-in function max>)
2024-07-15 06:11:35,862 DEBUG:on stmt: $const192.34.1 = const(int, 0)
2024-07-15 06:11:35,862 DEBUG:on stmt: $const194.35.1 = const(int, 0)
2024-07-15 06:11:35,862 DEBUG:on stmt: $200call.36.1 = call $180load_global.32.1($const192.34.1, $const194.35.1, func=$180load_global.32.1, args=[Var($const192.34.1, <string>:6), Var($const194.35.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:35,862 DEBUG:on stmt: $binop_sub210.37.1 = $170binary_subscr.31.1 - $200call.36.1
2024-07-15 06:11:35,862 DEBUG:on stmt: $218call.38.1 = call $122load_global.21.1($164unary_negative.28.1, $binop_sub210.37.1, func=$122load_global.21.1, args=[Var($164unary_negative.28.1, <string>:6), Var($binop_sub210.37.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:35,862 DEBUG:on stmt: $228get_iter.39.1 = getiter(value=$218call.38.1)
2024-07-15 06:11:35,862 DEBUG:on stmt: $phi230.0.1 = $228get_iter.39.1
2024-07-15 06:11:35,862 DEBUG:on stmt: jump 230
2024-07-15 06:11:35,862 DEBUG:==== SSA block analysis pass on 230
2024-07-15 06:11:35,862 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5961690>
2024-07-15 06:11:35,862 DEBUG:on stmt: $230for_iter.1.1 = iternext(value=$phi230.0.1)
2024-07-15 06:11:35,862 DEBUG:on stmt: $230for_iter.2.1 = pair_first(value=$230for_iter.1.1)
2024-07-15 06:11:35,862 DEBUG:on stmt: $230for_iter.3.1 = pair_second(value=$230for_iter.1.1)
2024-07-15 06:11:35,862 DEBUG:on stmt: $phi232.1.1 = $230for_iter.2.1
2024-07-15 06:11:35,862 DEBUG:on stmt: branch $230for_iter.3.1, 232, 442
2024-07-15 06:11:35,862 DEBUG:==== SSA block analysis pass on 232
2024-07-15 06:11:35,862 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5961690>
2024-07-15 06:11:35,862 DEBUG:on stmt: index00 = $phi232.1.1
2024-07-15 06:11:35,862 DEBUG:on stmt: jump 240
2024-07-15 06:11:35,862 DEBUG:==== SSA block analysis pass on 442
2024-07-15 06:11:35,862 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5961690>
2024-07-15 06:11:35,862 DEBUG:on stmt: $242return_value.1.1 = cast(value=out0)
2024-07-15 06:11:35,863 DEBUG:on stmt: return $242return_value.1.1
2024-07-15 06:11:35,863 DEBUG:==== SSA block analysis pass on 240
2024-07-15 06:11:35,863 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5961690>
2024-07-15 06:11:35,863 DEBUG:on stmt: $const6.1 = const(int, 0)
2024-07-15 06:11:35,863 DEBUG:on stmt: stencil_index = $const6.1 + index00
2024-07-15 06:11:35,863 DEBUG:on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-07-15 06:11:35,863 DEBUG:on stmt: $22unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2024-07-15 06:11:35,863 DEBUG:on stmt: $30compare_op.6 = $22unary_negative.4 <= x0
2024-07-15 06:11:35,863 DEBUG:on stmt: bool36 = global(bool: <class 'bool'>)
2024-07-15 06:11:35,863 DEBUG:on stmt: $36pred = call bool36($30compare_op.6, func=bool36, args=(Var($30compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:35,863 DEBUG:on stmt: $phi38.0 = x0
2024-07-15 06:11:35,863 DEBUG:on stmt: branch $36pred, 241, 291
2024-07-15 06:11:35,863 DEBUG:==== SSA block analysis pass on 241
2024-07-15 06:11:35,863 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5961690>
2024-07-15 06:11:35,863 DEBUG:on stmt: $40compare_op.2 = x0 <= threshold
2024-07-15 06:11:35,863 DEBUG:on stmt: bool46 = global(bool: <class 'bool'>)
2024-07-15 06:11:35,863 DEBUG:on stmt: $46pred = call bool46($40compare_op.2, func=bool46, args=(Var($40compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:35,863 DEBUG:on stmt: branch $46pred, 279, 295
2024-07-15 06:11:35,863 DEBUG:==== SSA block analysis pass on 279
2024-07-15 06:11:35,863 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5961690>
2024-07-15 06:11:35,863 DEBUG:on stmt: jump 289
2024-07-15 06:11:35,863 DEBUG:==== SSA block analysis pass on 291
2024-07-15 06:11:35,863 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5961690>
2024-07-15 06:11:35,863 DEBUG:on stmt: jump 295
2024-07-15 06:11:35,863 DEBUG:==== SSA block analysis pass on 289
2024-07-15 06:11:35,863 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5961690>
2024-07-15 06:11:35,863 DEBUG:on stmt: x0 = const(int, 0)
2024-07-15 06:11:35,863 DEBUG:on stmt: jump 295
2024-07-15 06:11:35,863 DEBUG:==== SSA block analysis pass on 295
2024-07-15 06:11:35,863 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5961690>
2024-07-15 06:11:35,863 DEBUG:on stmt: $const60.1 = const(int, -1)
2024-07-15 06:11:35,863 DEBUG:on stmt: stencil_index = $const60.1 + index00
2024-07-15 06:11:35,863 DEBUG:on stmt: x1 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-07-15 06:11:35,863 DEBUG:on stmt: $76unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2024-07-15 06:11:35,863 DEBUG:on stmt: $84compare_op.6 = $76unary_negative.4 <= x1
2024-07-15 06:11:35,865 DEBUG:on stmt: bool90 = global(bool: <class 'bool'>)
2024-07-15 06:11:35,865 DEBUG:on stmt: $90pred = call bool90($84compare_op.6, func=bool90, args=(Var($84compare_op.6, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:35,865 DEBUG:on stmt: $phi92.0 = x1
2024-07-15 06:11:35,865 DEBUG:on stmt: branch $90pred, 299, 345
2024-07-15 06:11:35,865 DEBUG:==== SSA block analysis pass on 299
2024-07-15 06:11:35,865 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5961690>
2024-07-15 06:11:35,865 DEBUG:on stmt: $94compare_op.2 = x1 <= threshold
2024-07-15 06:11:35,865 DEBUG:on stmt: bool100 = global(bool: <class 'bool'>)
2024-07-15 06:11:35,865 DEBUG:on stmt: $100pred = call bool100($94compare_op.2, func=bool100, args=(Var($94compare_op.2, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:35,865 DEBUG:on stmt: branch $100pred, 333, 349
2024-07-15 06:11:35,865 DEBUG:==== SSA block analysis pass on 333
2024-07-15 06:11:35,865 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5961690>
2024-07-15 06:11:35,865 DEBUG:on stmt: jump 343
2024-07-15 06:11:35,865 DEBUG:==== SSA block analysis pass on 345
2024-07-15 06:11:35,865 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5961690>
2024-07-15 06:11:35,865 DEBUG:on stmt: jump 349
2024-07-15 06:11:35,865 DEBUG:==== SSA block analysis pass on 343
2024-07-15 06:11:35,865 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5961690>
2024-07-15 06:11:35,865 DEBUG:on stmt: x1 = const(int, 0)
2024-07-15 06:11:35,865 DEBUG:on stmt: jump 349
2024-07-15 06:11:35,865 DEBUG:==== SSA block analysis pass on 349
2024-07-15 06:11:35,865 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5961690>
2024-07-15 06:11:35,865 DEBUG:on stmt: bool114 = global(bool: <class 'bool'>)
2024-07-15 06:11:35,865 DEBUG:on stmt: $114pred = call bool114(zero_pos, func=bool114, args=(Var(zero_pos, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:35,865 DEBUG:on stmt: branch $114pred, 353, 357
2024-07-15 06:11:35,865 DEBUG:==== SSA block analysis pass on 353
2024-07-15 06:11:35,865 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5961690>
2024-07-15 06:11:35,865 DEBUG:on stmt: $116load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:35,865 DEBUG:on stmt: $128load_attr.2 = getattr(value=$116load_global.0, attr=signbit)
2024-07-15 06:11:35,865 DEBUG:on stmt: $144call.4 = call $128load_attr.2(x0, func=$128load_attr.2, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:35,865 DEBUG:on stmt: $154load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:35,865 DEBUG:on stmt: $166load_attr.7 = getattr(value=$154load_global.5, attr=signbit)
2024-07-15 06:11:35,866 DEBUG:on stmt: $182call.9 = call $166load_attr.7(x1, func=$166load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:35,866 DEBUG:on stmt: $192compare_op.10 = $144call.4 != $182call.9
2024-07-15 06:11:35,866 DEBUG:on stmt: $198return_value.11 = cast(value=$192compare_op.10)
2024-07-15 06:11:35,866 DEBUG:on stmt: out0[index00] = $198return_value.11
2024-07-15 06:11:35,866 DEBUG:on stmt: jump 441
2024-07-15 06:11:35,866 DEBUG:==== SSA block analysis pass on 357
2024-07-15 06:11:35,866 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5961690>
2024-07-15 06:11:35,866 DEBUG:on stmt: $200load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:35,866 DEBUG:on stmt: $212load_attr.2 = getattr(value=$200load_global.0, attr=sign)
2024-07-15 06:11:35,866 DEBUG:on stmt: $228call.4 = call $212load_attr.2(x0, func=$212load_attr.2, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:35,866 DEBUG:on stmt: $238load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:35,866 DEBUG:on stmt: $250load_attr.7 = getattr(value=$238load_global.5, attr=sign)
2024-07-15 06:11:35,866 DEBUG:on stmt: $266call.9 = call $250load_attr.7(x1, func=$250load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:35,866 DEBUG:on stmt: $276compare_op.10 = $228call.4 != $266call.9
2024-07-15 06:11:35,866 DEBUG:on stmt: $282return_value.11 = cast(value=$276compare_op.10)
2024-07-15 06:11:35,866 DEBUG:on stmt: out0[index00] = $282return_value.11
2024-07-15 06:11:35,866 DEBUG:on stmt: jump 441
2024-07-15 06:11:35,866 DEBUG:==== SSA block analysis pass on 441
2024-07-15 06:11:35,866 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5961690>
2024-07-15 06:11:35,866 DEBUG:on stmt: jump 230
2024-07-15 06:11:35,867 DEBUG:defs defaultdict(<class 'list'>,
            {'$100pred': [(<numba.core.ir.Assign object at 0x00000221B5A148D0>,
                           299)],
             '$102build_slice.13.1': [(<numba.core.ir.Assign object at 0x00000221B5A71350>,
                                       0)],
             '$102build_slice.14.1': [(<numba.core.ir.Assign object at 0x00000221B5A714D0>,
                                       0)],
             '$114pred': [(<numba.core.ir.Assign object at 0x00000221B5A258D0>,
                           349)],
             '$116build_slice.19.1': [(<numba.core.ir.Assign object at 0x00000221B5A71D90>,
                                       0)],
             '$116build_slice.20.1': [(<numba.core.ir.Assign object at 0x00000221B5A71F10>,
                                       0)],
             '$116load_global.0': [(<numba.core.ir.Assign object at 0x00000221B5956210>,
                                    353)],
             '$122load_global.21.1': [(<numba.core.ir.Assign object at 0x00000221B5A72190>,
                                       0)],
             '$128load_attr.2': [(<numba.core.ir.Assign object at 0x00000221B5A2E590>,
                                  353)],
             '$134load_global.23.1': [(<numba.core.ir.Assign object at 0x00000221B5A72410>,
                                       0)],
             '$144call.4': [(<numba.core.ir.Assign object at 0x00000221B5A34290>,
                             353)],
             '$154call.27.1': [(<numba.core.ir.Assign object at 0x00000221B5A72A90>,
                                0)],
             '$154load_global.5': [(<numba.core.ir.Assign object at 0x00000221B5A35350>,
                                    353)],
             '$164unary_negative.28.1': [(<numba.core.ir.Assign object at 0x00000221B5A72D90>,
                                          0)],
             '$166load_attr.7': [(<numba.core.ir.Assign object at 0x00000221B5A36590>,
                                  353)],
             '$170binary_subscr.31.1': [(<numba.core.ir.Assign object at 0x00000221B5A73310>,
                                         0)],
             '$180load_global.32.1': [(<numba.core.ir.Assign object at 0x00000221B5A735D0>,
                                       0)],
             '$182call.9': [(<numba.core.ir.Assign object at 0x00000221B5A37550>,
                             353)],
             '$18load_global.2.1': [(<numba.core.ir.Assign object at 0x00000221B5A6F890>,
                                     0)],
             '$192compare_op.10': [(<numba.core.ir.Assign object at 0x00000221B5A3D910>,
                                    353)],
             '$198return_value.11': [(<numba.core.ir.Assign object at 0x00000221B5A3EC90>,
                                      353)],
             '$200call.36.1': [(<numba.core.ir.Assign object at 0x00000221B5A73D10>,
                                0)],
             '$200load_global.0': [(<numba.core.ir.Assign object at 0x00000221B5A46450>,
                                    357)],
             '$212load_attr.2': [(<numba.core.ir.Assign object at 0x00000221B5A46A50>,
                                  357)],
             '$218call.38.1': [(<numba.core.ir.Assign object at 0x00000221B5A782D0>,
                                0)],
             '$228call.4': [(<numba.core.ir.Assign object at 0x00000221B5A48790>,
                             357)],
             '$228get_iter.39.1': [(<numba.core.ir.Assign object at 0x00000221B5A784D0>,
                                    0)],
             '$22unary_negative.4': [(<numba.core.ir.Assign object at 0x00000221B59CE910>,
                                      240)],
             '$230for_iter.1.1': [(<numba.core.ir.Assign object at 0x00000221B5A78690>,
                                   230)],
             '$230for_iter.2.1': [(<numba.core.ir.Assign object at 0x00000221B5A78810>,
                                   230)],
             '$230for_iter.3.1': [(<numba.core.ir.Assign object at 0x00000221B5A78990>,
                                   230)],
             '$238load_global.5': [(<numba.core.ir.Assign object at 0x00000221B5A49850>,
                                    357)],
             '$242return_value.1.1': [(<numba.core.ir.Assign object at 0x00000221B5A79510>,
                                       442)],
             '$250load_attr.7': [(<numba.core.ir.Assign object at 0x00000221B5A4AA90>,
                                  357)],
             '$266call.9': [(<numba.core.ir.Assign object at 0x00000221B5A4BA50>,
                             357)],
             '$276compare_op.10': [(<numba.core.ir.Assign object at 0x00000221B5A51E10>,
                                    357)],
             '$282return_value.11': [(<numba.core.ir.Assign object at 0x00000221B5A53190>,
                                      357)],
             '$30compare_op.6': [(<numba.core.ir.Assign object at 0x00000221B59D4CD0>,
                                  240)],
             '$30load_method.4.1': [(<numba.core.ir.Assign object at 0x00000221B5A6FBD0>,
                                     0)],
             '$36pred': [(<numba.core.ir.Assign object at 0x00000221B59D7390>,
                          240)],
             '$40compare_op.2': [(<numba.core.ir.Assign object at 0x00000221B59DFE90>,
                                  241)],
             '$46pred': [(<numba.core.ir.Assign object at 0x00000221B59E2790>,
                          241)],
             '$54load_global.6.1': [(<numba.core.ir.Assign object at 0x00000221B5A70190>,
                                     0)],
             '$66load_attr.7.1': [(<numba.core.ir.Assign object at 0x00000221B5A70490>,
                                   0)],
             '$76unary_negative.4': [(<numba.core.ir.Assign object at 0x00000221B59F8E50>,
                                      295)],
             '$84compare_op.6': [(<numba.core.ir.Assign object at 0x00000221B59F9F10>,
                                  295)],
             '$90pred': [(<numba.core.ir.Assign object at 0x00000221B5A01490>,
                          295)],
             '$94compare_op.2': [(<numba.core.ir.Assign object at 0x00000221B5A0DFD0>,
                                  299)],
             '$binop_sub210.37.1': [(<numba.core.ir.Assign object at 0x00000221B5A78050>,
                                     0)],
             '$const100.12.1': [(<numba.core.ir.Assign object at 0x00000221B5A71150>,
                                 0)],
             '$const108.15.1': [(<numba.core.ir.Assign object at 0x00000221B5A716D0>,
                                 0)],
             '$const112.17.1': [(<numba.core.ir.Assign object at 0x00000221B5A71A10>,
                                 0)],
             '$const114.18.1': [(<numba.core.ir.Assign object at 0x00000221B5A71B90>,
                                 0)],
             '$const146.25.1': [(<numba.core.ir.Assign object at 0x00000221B5A72690>,
                                 0)],
             '$const148.26.1': [(<numba.core.ir.Assign object at 0x00000221B5A72810>,
                                 0)],
             '$const168.30.1': [(<numba.core.ir.Assign object at 0x00000221B5A73110>,
                                 0)],
             '$const192.34.1': [(<numba.core.ir.Assign object at 0x00000221B5A73890>,
                                 0)],
             '$const194.35.1': [(<numba.core.ir.Assign object at 0x00000221B5A73A50>,
                                 0)],
             '$const6.1': [(<numba.core.ir.Assign object at 0x00000221B59CC790>,
                            240)],
             '$const60.1': [(<numba.core.ir.Assign object at 0x00000221B59F7D50>,
                             295)],
             '$const94.9.1': [(<numba.core.ir.Assign object at 0x00000221B5A70C50>,
                               0)],
             '$const98.11.1': [(<numba.core.ir.Assign object at 0x00000221B5A70F90>,
                                0)],
             '$phi230.0.1': [(<numba.core.ir.Assign object at 0x00000221B5A6F6D0>,
                              0)],
             '$phi232.1.1': [(<numba.core.ir.Assign object at 0x00000221B591B790>,
                              230)],
             '$phi38.0': [(<numba.core.ir.Assign object at 0x00000221B59CF910>,
                           240)],
             '$phi92.0': [(<numba.core.ir.Assign object at 0x00000221B5A02850>,
                           295)],
             'bool100': [(<numba.core.ir.Assign object at 0x00000221B5A0E290>,
                          299)],
             'bool114': [(<numba.core.ir.Assign object at 0x00000221B5A25250>,
                          349)],
             'bool36': [(<numba.core.ir.Assign object at 0x00000221B59D6050>,
                         240)],
             'bool46': [(<numba.core.ir.Assign object at 0x00000221B59E0190>,
                         241)],
             'bool90': [(<numba.core.ir.Assign object at 0x00000221B5A00110>,
                         295)],
             'full_shape0': [(<numba.core.ir.Assign object at 0x00000221B5A6F450>,
                              0)],
             'index00': [(<numba.core.ir.Assign object at 0x00000221B5A78CD0>,
                          232)],
             'out0': [(<numba.core.ir.Assign object at 0x00000221B5A70890>, 0)],
             'stencil_index': [(<numba.core.ir.Assign object at 0x00000221B597D810>,
                                240),
                               (<numba.core.ir.Assign object at 0x00000221B59CE890>,
                                295)],
             'threshold': [(<numba.core.ir.Assign object at 0x00000221B5A6EE50>,
                            0)],
             'x': [(<numba.core.ir.Assign object at 0x00000221B5A6E590>, 0)],
             'x0': [(<numba.core.ir.Assign object at 0x00000221B599CE90>, 240),
                    (<numba.core.ir.Assign object at 0x00000221B59F48D0>, 289)],
             'x1': [(<numba.core.ir.Assign object at 0x00000221B5A5DCD0>, 295),
                    (<numba.core.ir.Assign object at 0x00000221B5A1EA50>, 343)],
             'zero_pos': [(<numba.core.ir.Assign object at 0x00000221B5A6F010>,
                           0)]})
2024-07-15 06:11:35,867 DEBUG:SSA violators <numba.core.utils.OrderedSet object at 0x00000221B5961690>
2024-07-15 06:11:35,867 DEBUG:Fix SSA violator on var stencil_index
2024-07-15 06:11:35,867 DEBUG:==== SSA block rewrite pass on 0
2024-07-15 06:11:35,867 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5A6F590>
2024-07-15 06:11:35,867 DEBUG:on stmt: x = arg(0, name=x)
2024-07-15 06:11:35,867 DEBUG:on stmt: threshold = arg(1, name=threshold)
2024-07-15 06:11:35,867 DEBUG:on stmt: zero_pos = arg(2, name=zero_pos)
2024-07-15 06:11:35,867 DEBUG:on stmt: full_shape0 = getattr(value=x, attr=shape)
2024-07-15 06:11:35,867 DEBUG:on stmt: $18load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:35,868 DEBUG:on stmt: $30load_method.4.1 = getattr(value=$18load_global.2.1, attr=empty)
2024-07-15 06:11:35,868 DEBUG:on stmt: $54load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:35,868 DEBUG:on stmt: $66load_attr.7.1 = getattr(value=$54load_global.6.1, attr=bool_)
2024-07-15 06:11:35,868 DEBUG:on stmt: out0 = call $30load_method.4.1(full_shape0, func=$30load_method.4.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:35,868 DEBUG:on stmt: $const94.9.1 = const(int, 0)
2024-07-15 06:11:35,868 DEBUG:on stmt: $const98.11.1 = const(NoneType, None)
2024-07-15 06:11:35,868 DEBUG:on stmt: $const100.12.1 = const(int, 1)
2024-07-15 06:11:35,868 DEBUG:on stmt: $102build_slice.13.1 = global(slice: <class 'slice'>)
2024-07-15 06:11:35,868 DEBUG:on stmt: $102build_slice.14.1 = call $102build_slice.13.1($const98.11.1, $const100.12.1, func=$102build_slice.13.1, args=(Var($const98.11.1, <string>:4), Var($const100.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:35,868 DEBUG:on stmt: out0[$102build_slice.14.1] = $const94.9.1
2024-07-15 06:11:35,868 DEBUG:on stmt: $const108.15.1 = const(int, 0)
2024-07-15 06:11:35,868 DEBUG:on stmt: $const112.17.1 = const(int, 0)
2024-07-15 06:11:35,868 DEBUG:on stmt: $const114.18.1 = const(NoneType, None)
2024-07-15 06:11:35,868 DEBUG:on stmt: $116build_slice.19.1 = global(slice: <class 'slice'>)
2024-07-15 06:11:35,868 DEBUG:on stmt: $116build_slice.20.1 = call $116build_slice.19.1($const112.17.1, $const114.18.1, func=$116build_slice.19.1, args=(Var($const112.17.1, <string>:5), Var($const114.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:35,868 DEBUG:on stmt: out0[$116build_slice.20.1] = $const108.15.1
2024-07-15 06:11:35,868 DEBUG:on stmt: $122load_global.21.1 = global(range: <class 'range'>)
2024-07-15 06:11:35,868 DEBUG:on stmt: $134load_global.23.1 = global(min: <built-in function min>)
2024-07-15 06:11:35,868 DEBUG:on stmt: $const146.25.1 = const(int, 0)
2024-07-15 06:11:35,868 DEBUG:on stmt: $const148.26.1 = const(int, -1)
2024-07-15 06:11:35,868 DEBUG:on stmt: $154call.27.1 = call $134load_global.23.1($const146.25.1, $const148.26.1, func=$134load_global.23.1, args=[Var($const146.25.1, <string>:6), Var($const148.26.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:35,868 DEBUG:on stmt: $164unary_negative.28.1 = unary(fn=<built-in function neg>, value=$154call.27.1)
2024-07-15 06:11:35,868 DEBUG:on stmt: $const168.30.1 = const(int, 0)
2024-07-15 06:11:35,868 DEBUG:on stmt: $170binary_subscr.31.1 = getitem(value=full_shape0, index=$const168.30.1, fn=<built-in function getitem>)
2024-07-15 06:11:35,868 DEBUG:on stmt: $180load_global.32.1 = global(max: <built-in function max>)
2024-07-15 06:11:35,868 DEBUG:on stmt: $const192.34.1 = const(int, 0)
2024-07-15 06:11:35,868 DEBUG:on stmt: $const194.35.1 = const(int, 0)
2024-07-15 06:11:35,868 DEBUG:on stmt: $200call.36.1 = call $180load_global.32.1($const192.34.1, $const194.35.1, func=$180load_global.32.1, args=[Var($const192.34.1, <string>:6), Var($const194.35.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:35,868 DEBUG:on stmt: $binop_sub210.37.1 = $170binary_subscr.31.1 - $200call.36.1
2024-07-15 06:11:35,868 DEBUG:on stmt: $218call.38.1 = call $122load_global.21.1($164unary_negative.28.1, $binop_sub210.37.1, func=$122load_global.21.1, args=[Var($164unary_negative.28.1, <string>:6), Var($binop_sub210.37.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:35,868 DEBUG:on stmt: $228get_iter.39.1 = getiter(value=$218call.38.1)
2024-07-15 06:11:35,868 DEBUG:on stmt: $phi230.0.1 = $228get_iter.39.1
2024-07-15 06:11:35,869 DEBUG:on stmt: jump 230
2024-07-15 06:11:35,869 DEBUG:==== SSA block rewrite pass on 230
2024-07-15 06:11:35,869 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5A6F590>
2024-07-15 06:11:35,869 DEBUG:on stmt: $230for_iter.1.1 = iternext(value=$phi230.0.1)
2024-07-15 06:11:35,869 DEBUG:on stmt: $230for_iter.2.1 = pair_first(value=$230for_iter.1.1)
2024-07-15 06:11:35,869 DEBUG:on stmt: $230for_iter.3.1 = pair_second(value=$230for_iter.1.1)
2024-07-15 06:11:35,869 DEBUG:on stmt: $phi232.1.1 = $230for_iter.2.1
2024-07-15 06:11:35,869 DEBUG:on stmt: branch $230for_iter.3.1, 232, 442
2024-07-15 06:11:35,869 DEBUG:==== SSA block rewrite pass on 232
2024-07-15 06:11:35,869 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5A6F590>
2024-07-15 06:11:35,869 DEBUG:on stmt: index00 = $phi232.1.1
2024-07-15 06:11:35,869 DEBUG:on stmt: jump 240
2024-07-15 06:11:35,869 DEBUG:==== SSA block rewrite pass on 442
2024-07-15 06:11:35,869 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5A6F590>
2024-07-15 06:11:35,869 DEBUG:on stmt: $242return_value.1.1 = cast(value=out0)
2024-07-15 06:11:35,869 DEBUG:on stmt: return $242return_value.1.1
2024-07-15 06:11:35,869 DEBUG:==== SSA block rewrite pass on 240
2024-07-15 06:11:35,869 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5A6F590>
2024-07-15 06:11:35,869 DEBUG:on stmt: $const6.1 = const(int, 0)
2024-07-15 06:11:35,869 DEBUG:on stmt: stencil_index = $const6.1 + index00
2024-07-15 06:11:35,869 DEBUG:first assign: stencil_index
2024-07-15 06:11:35,869 DEBUG:replaced with: stencil_index = $const6.1 + index00
2024-07-15 06:11:35,869 DEBUG:on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-07-15 06:11:35,869 DEBUG:on stmt: $22unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2024-07-15 06:11:35,869 DEBUG:on stmt: $30compare_op.6 = $22unary_negative.4 <= x0
2024-07-15 06:11:35,869 DEBUG:on stmt: bool36 = global(bool: <class 'bool'>)
2024-07-15 06:11:35,869 DEBUG:on stmt: $36pred = call bool36($30compare_op.6, func=bool36, args=(Var($30compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:35,869 DEBUG:on stmt: $phi38.0 = x0
2024-07-15 06:11:35,869 DEBUG:on stmt: branch $36pred, 241, 291
2024-07-15 06:11:35,869 DEBUG:==== SSA block rewrite pass on 241
2024-07-15 06:11:35,869 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5A6F590>
2024-07-15 06:11:35,869 DEBUG:on stmt: $40compare_op.2 = x0 <= threshold
2024-07-15 06:11:35,869 DEBUG:on stmt: bool46 = global(bool: <class 'bool'>)
2024-07-15 06:11:35,869 DEBUG:on stmt: $46pred = call bool46($40compare_op.2, func=bool46, args=(Var($40compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:35,869 DEBUG:on stmt: branch $46pred, 279, 295
2024-07-15 06:11:35,869 DEBUG:==== SSA block rewrite pass on 279
2024-07-15 06:11:35,869 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5A6F590>
2024-07-15 06:11:35,869 DEBUG:on stmt: jump 289
2024-07-15 06:11:35,869 DEBUG:==== SSA block rewrite pass on 291
2024-07-15 06:11:35,870 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5A6F590>
2024-07-15 06:11:35,870 DEBUG:on stmt: jump 295
2024-07-15 06:11:35,870 DEBUG:==== SSA block rewrite pass on 289
2024-07-15 06:11:35,870 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5A6F590>
2024-07-15 06:11:35,870 DEBUG:on stmt: x0 = const(int, 0)
2024-07-15 06:11:35,870 DEBUG:on stmt: jump 295
2024-07-15 06:11:35,870 DEBUG:==== SSA block rewrite pass on 295
2024-07-15 06:11:35,870 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5A6F590>
2024-07-15 06:11:35,870 DEBUG:on stmt: $const60.1 = const(int, -1)
2024-07-15 06:11:35,870 DEBUG:on stmt: stencil_index = $const60.1 + index00
2024-07-15 06:11:35,870 DEBUG:replaced with: stencil_index.1 = $const60.1 + index00
2024-07-15 06:11:35,870 DEBUG:on stmt: x1 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-07-15 06:11:35,870 DEBUG:on stmt: $76unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2024-07-15 06:11:35,870 DEBUG:on stmt: $84compare_op.6 = $76unary_negative.4 <= x1
2024-07-15 06:11:35,870 DEBUG:on stmt: bool90 = global(bool: <class 'bool'>)
2024-07-15 06:11:35,870 DEBUG:on stmt: $90pred = call bool90($84compare_op.6, func=bool90, args=(Var($84compare_op.6, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:35,870 DEBUG:on stmt: $phi92.0 = x1
2024-07-15 06:11:35,870 DEBUG:on stmt: branch $90pred, 299, 345
2024-07-15 06:11:35,870 DEBUG:==== SSA block rewrite pass on 299
2024-07-15 06:11:35,870 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5A6F590>
2024-07-15 06:11:35,870 DEBUG:on stmt: $94compare_op.2 = x1 <= threshold
2024-07-15 06:11:35,870 DEBUG:on stmt: bool100 = global(bool: <class 'bool'>)
2024-07-15 06:11:35,870 DEBUG:on stmt: $100pred = call bool100($94compare_op.2, func=bool100, args=(Var($94compare_op.2, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:35,870 DEBUG:on stmt: branch $100pred, 333, 349
2024-07-15 06:11:35,870 DEBUG:==== SSA block rewrite pass on 333
2024-07-15 06:11:35,870 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5A6F590>
2024-07-15 06:11:35,870 DEBUG:on stmt: jump 343
2024-07-15 06:11:35,870 DEBUG:==== SSA block rewrite pass on 345
2024-07-15 06:11:35,870 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5A6F590>
2024-07-15 06:11:35,870 DEBUG:on stmt: jump 349
2024-07-15 06:11:35,870 DEBUG:==== SSA block rewrite pass on 343
2024-07-15 06:11:35,870 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5A6F590>
2024-07-15 06:11:35,870 DEBUG:on stmt: x1 = const(int, 0)
2024-07-15 06:11:35,870 DEBUG:on stmt: jump 349
2024-07-15 06:11:35,870 DEBUG:==== SSA block rewrite pass on 349
2024-07-15 06:11:35,870 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5A6F590>
2024-07-15 06:11:35,870 DEBUG:on stmt: bool114 = global(bool: <class 'bool'>)
2024-07-15 06:11:35,870 DEBUG:on stmt: $114pred = call bool114(zero_pos, func=bool114, args=(Var(zero_pos, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:35,871 DEBUG:on stmt: branch $114pred, 353, 357
2024-07-15 06:11:35,871 DEBUG:==== SSA block rewrite pass on 353
2024-07-15 06:11:35,871 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5A6F590>
2024-07-15 06:11:35,871 DEBUG:on stmt: $116load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:35,871 DEBUG:on stmt: $128load_attr.2 = getattr(value=$116load_global.0, attr=signbit)
2024-07-15 06:11:35,871 DEBUG:on stmt: $144call.4 = call $128load_attr.2(x0, func=$128load_attr.2, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:35,871 DEBUG:on stmt: $154load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:35,871 DEBUG:on stmt: $166load_attr.7 = getattr(value=$154load_global.5, attr=signbit)
2024-07-15 06:11:35,871 DEBUG:on stmt: $182call.9 = call $166load_attr.7(x1, func=$166load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:35,871 DEBUG:on stmt: $192compare_op.10 = $144call.4 != $182call.9
2024-07-15 06:11:35,871 DEBUG:on stmt: $198return_value.11 = cast(value=$192compare_op.10)
2024-07-15 06:11:35,871 DEBUG:on stmt: out0[index00] = $198return_value.11
2024-07-15 06:11:35,871 DEBUG:on stmt: jump 441
2024-07-15 06:11:35,871 DEBUG:==== SSA block rewrite pass on 357
2024-07-15 06:11:35,871 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5A6F590>
2024-07-15 06:11:35,871 DEBUG:on stmt: $200load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:35,871 DEBUG:on stmt: $212load_attr.2 = getattr(value=$200load_global.0, attr=sign)
2024-07-15 06:11:35,871 DEBUG:on stmt: $228call.4 = call $212load_attr.2(x0, func=$212load_attr.2, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:35,871 DEBUG:on stmt: $238load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:35,871 DEBUG:on stmt: $250load_attr.7 = getattr(value=$238load_global.5, attr=sign)
2024-07-15 06:11:35,871 DEBUG:on stmt: $266call.9 = call $250load_attr.7(x1, func=$250load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:35,871 DEBUG:on stmt: $276compare_op.10 = $228call.4 != $266call.9
2024-07-15 06:11:35,871 DEBUG:on stmt: $282return_value.11 = cast(value=$276compare_op.10)
2024-07-15 06:11:35,871 DEBUG:on stmt: out0[index00] = $282return_value.11
2024-07-15 06:11:35,871 DEBUG:on stmt: jump 441
2024-07-15 06:11:35,871 DEBUG:==== SSA block rewrite pass on 441
2024-07-15 06:11:35,871 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5A6F590>
2024-07-15 06:11:35,871 DEBUG:on stmt: jump 230
2024-07-15 06:11:35,871 DEBUG:Replaced assignments: defaultdict(<class 'list'>,
            {240: [<numba.core.ir.Assign object at 0x00000221B5A5F590>],
             295: [<numba.core.ir.Assign object at 0x00000221B5A81F50>]})
2024-07-15 06:11:35,872 DEBUG:==== SSA block rewrite pass on 0
2024-07-15 06:11:35,872 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5A82CD0>
2024-07-15 06:11:35,872 DEBUG:on stmt: x = arg(0, name=x)
2024-07-15 06:11:35,872 DEBUG:on stmt: threshold = arg(1, name=threshold)
2024-07-15 06:11:35,872 DEBUG:on stmt: zero_pos = arg(2, name=zero_pos)
2024-07-15 06:11:35,872 DEBUG:on stmt: full_shape0 = getattr(value=x, attr=shape)
2024-07-15 06:11:35,872 DEBUG:on stmt: $18load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:35,872 DEBUG:on stmt: $30load_method.4.1 = getattr(value=$18load_global.2.1, attr=empty)
2024-07-15 06:11:35,872 DEBUG:on stmt: $54load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:35,872 DEBUG:on stmt: $66load_attr.7.1 = getattr(value=$54load_global.6.1, attr=bool_)
2024-07-15 06:11:35,872 DEBUG:on stmt: out0 = call $30load_method.4.1(full_shape0, func=$30load_method.4.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:35,872 DEBUG:on stmt: $const94.9.1 = const(int, 0)
2024-07-15 06:11:35,872 DEBUG:on stmt: $const98.11.1 = const(NoneType, None)
2024-07-15 06:11:35,872 DEBUG:on stmt: $const100.12.1 = const(int, 1)
2024-07-15 06:11:35,872 DEBUG:on stmt: $102build_slice.13.1 = global(slice: <class 'slice'>)
2024-07-15 06:11:35,872 DEBUG:on stmt: $102build_slice.14.1 = call $102build_slice.13.1($const98.11.1, $const100.12.1, func=$102build_slice.13.1, args=(Var($const98.11.1, <string>:4), Var($const100.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:35,872 DEBUG:on stmt: out0[$102build_slice.14.1] = $const94.9.1
2024-07-15 06:11:35,872 DEBUG:on stmt: $const108.15.1 = const(int, 0)
2024-07-15 06:11:35,872 DEBUG:on stmt: $const112.17.1 = const(int, 0)
2024-07-15 06:11:35,872 DEBUG:on stmt: $const114.18.1 = const(NoneType, None)
2024-07-15 06:11:35,872 DEBUG:on stmt: $116build_slice.19.1 = global(slice: <class 'slice'>)
2024-07-15 06:11:35,872 DEBUG:on stmt: $116build_slice.20.1 = call $116build_slice.19.1($const112.17.1, $const114.18.1, func=$116build_slice.19.1, args=(Var($const112.17.1, <string>:5), Var($const114.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:35,872 DEBUG:on stmt: out0[$116build_slice.20.1] = $const108.15.1
2024-07-15 06:11:35,872 DEBUG:on stmt: $122load_global.21.1 = global(range: <class 'range'>)
2024-07-15 06:11:35,872 DEBUG:on stmt: $134load_global.23.1 = global(min: <built-in function min>)
2024-07-15 06:11:35,872 DEBUG:on stmt: $const146.25.1 = const(int, 0)
2024-07-15 06:11:35,872 DEBUG:on stmt: $const148.26.1 = const(int, -1)
2024-07-15 06:11:35,872 DEBUG:on stmt: $154call.27.1 = call $134load_global.23.1($const146.25.1, $const148.26.1, func=$134load_global.23.1, args=[Var($const146.25.1, <string>:6), Var($const148.26.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:35,872 DEBUG:on stmt: $164unary_negative.28.1 = unary(fn=<built-in function neg>, value=$154call.27.1)
2024-07-15 06:11:35,872 DEBUG:on stmt: $const168.30.1 = const(int, 0)
2024-07-15 06:11:35,872 DEBUG:on stmt: $170binary_subscr.31.1 = getitem(value=full_shape0, index=$const168.30.1, fn=<built-in function getitem>)
2024-07-15 06:11:35,872 DEBUG:on stmt: $180load_global.32.1 = global(max: <built-in function max>)
2024-07-15 06:11:35,872 DEBUG:on stmt: $const192.34.1 = const(int, 0)
2024-07-15 06:11:35,872 DEBUG:on stmt: $const194.35.1 = const(int, 0)
2024-07-15 06:11:35,872 DEBUG:on stmt: $200call.36.1 = call $180load_global.32.1($const192.34.1, $const194.35.1, func=$180load_global.32.1, args=[Var($const192.34.1, <string>:6), Var($const194.35.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:35,873 DEBUG:on stmt: $binop_sub210.37.1 = $170binary_subscr.31.1 - $200call.36.1
2024-07-15 06:11:35,873 DEBUG:on stmt: $218call.38.1 = call $122load_global.21.1($164unary_negative.28.1, $binop_sub210.37.1, func=$122load_global.21.1, args=[Var($164unary_negative.28.1, <string>:6), Var($binop_sub210.37.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:35,873 DEBUG:on stmt: $228get_iter.39.1 = getiter(value=$218call.38.1)
2024-07-15 06:11:35,873 DEBUG:on stmt: $phi230.0.1 = $228get_iter.39.1
2024-07-15 06:11:35,873 DEBUG:on stmt: jump 230
2024-07-15 06:11:35,873 DEBUG:==== SSA block rewrite pass on 230
2024-07-15 06:11:35,873 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5A82CD0>
2024-07-15 06:11:35,873 DEBUG:on stmt: $230for_iter.1.1 = iternext(value=$phi230.0.1)
2024-07-15 06:11:35,873 DEBUG:on stmt: $230for_iter.2.1 = pair_first(value=$230for_iter.1.1)
2024-07-15 06:11:35,873 DEBUG:on stmt: $230for_iter.3.1 = pair_second(value=$230for_iter.1.1)
2024-07-15 06:11:35,873 DEBUG:on stmt: $phi232.1.1 = $230for_iter.2.1
2024-07-15 06:11:35,873 DEBUG:on stmt: branch $230for_iter.3.1, 232, 442
2024-07-15 06:11:35,873 DEBUG:==== SSA block rewrite pass on 232
2024-07-15 06:11:35,873 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5A82CD0>
2024-07-15 06:11:35,873 DEBUG:on stmt: index00 = $phi232.1.1
2024-07-15 06:11:35,873 DEBUG:on stmt: jump 240
2024-07-15 06:11:35,873 DEBUG:==== SSA block rewrite pass on 442
2024-07-15 06:11:35,873 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5A82CD0>
2024-07-15 06:11:35,873 DEBUG:on stmt: $242return_value.1.1 = cast(value=out0)
2024-07-15 06:11:35,873 DEBUG:on stmt: return $242return_value.1.1
2024-07-15 06:11:35,873 DEBUG:==== SSA block rewrite pass on 240
2024-07-15 06:11:35,873 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5A82CD0>
2024-07-15 06:11:35,873 DEBUG:on stmt: $const6.1 = const(int, 0)
2024-07-15 06:11:35,873 DEBUG:on stmt: stencil_index = $const6.1 + index00
2024-07-15 06:11:35,873 DEBUG:on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-07-15 06:11:35,873 DEBUG:find_def var='stencil_index' stmt=x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-07-15 06:11:35,873 DEBUG:on stmt: $22unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2024-07-15 06:11:35,873 DEBUG:on stmt: $30compare_op.6 = $22unary_negative.4 <= x0
2024-07-15 06:11:35,873 DEBUG:on stmt: bool36 = global(bool: <class 'bool'>)
2024-07-15 06:11:35,873 DEBUG:on stmt: $36pred = call bool36($30compare_op.6, func=bool36, args=(Var($30compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:35,873 DEBUG:on stmt: $phi38.0 = x0
2024-07-15 06:11:35,873 DEBUG:on stmt: branch $36pred, 241, 291
2024-07-15 06:11:35,873 DEBUG:==== SSA block rewrite pass on 241
2024-07-15 06:11:35,874 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5A82CD0>
2024-07-15 06:11:35,874 DEBUG:on stmt: $40compare_op.2 = x0 <= threshold
2024-07-15 06:11:35,874 DEBUG:on stmt: bool46 = global(bool: <class 'bool'>)
2024-07-15 06:11:35,874 DEBUG:on stmt: $46pred = call bool46($40compare_op.2, func=bool46, args=(Var($40compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:35,874 DEBUG:on stmt: branch $46pred, 279, 295
2024-07-15 06:11:35,874 DEBUG:==== SSA block rewrite pass on 279
2024-07-15 06:11:35,874 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5A82CD0>
2024-07-15 06:11:35,874 DEBUG:on stmt: jump 289
2024-07-15 06:11:35,874 DEBUG:==== SSA block rewrite pass on 291
2024-07-15 06:11:35,874 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5A82CD0>
2024-07-15 06:11:35,874 DEBUG:on stmt: jump 295
2024-07-15 06:11:35,874 DEBUG:==== SSA block rewrite pass on 289
2024-07-15 06:11:35,874 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5A82CD0>
2024-07-15 06:11:35,874 DEBUG:on stmt: x0 = const(int, 0)
2024-07-15 06:11:35,874 DEBUG:on stmt: jump 295
2024-07-15 06:11:35,874 DEBUG:==== SSA block rewrite pass on 295
2024-07-15 06:11:35,874 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5A82CD0>
2024-07-15 06:11:35,874 DEBUG:on stmt: $const60.1 = const(int, -1)
2024-07-15 06:11:35,874 DEBUG:on stmt: stencil_index.1 = $const60.1 + index00
2024-07-15 06:11:35,874 DEBUG:on stmt: x1 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-07-15 06:11:35,874 DEBUG:find_def var='stencil_index' stmt=x1 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-07-15 06:11:35,874 DEBUG:replaced with: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2024-07-15 06:11:35,874 DEBUG:on stmt: $76unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2024-07-15 06:11:35,874 DEBUG:on stmt: $84compare_op.6 = $76unary_negative.4 <= x1
2024-07-15 06:11:35,874 DEBUG:on stmt: bool90 = global(bool: <class 'bool'>)
2024-07-15 06:11:35,874 DEBUG:on stmt: $90pred = call bool90($84compare_op.6, func=bool90, args=(Var($84compare_op.6, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:35,874 DEBUG:on stmt: $phi92.0 = x1
2024-07-15 06:11:35,874 DEBUG:on stmt: branch $90pred, 299, 345
2024-07-15 06:11:35,874 DEBUG:==== SSA block rewrite pass on 299
2024-07-15 06:11:35,874 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5A82CD0>
2024-07-15 06:11:35,874 DEBUG:on stmt: $94compare_op.2 = x1 <= threshold
2024-07-15 06:11:35,874 DEBUG:on stmt: bool100 = global(bool: <class 'bool'>)
2024-07-15 06:11:35,874 DEBUG:on stmt: $100pred = call bool100($94compare_op.2, func=bool100, args=(Var($94compare_op.2, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:35,875 DEBUG:on stmt: branch $100pred, 333, 349
2024-07-15 06:11:35,875 DEBUG:==== SSA block rewrite pass on 333
2024-07-15 06:11:35,875 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5A82CD0>
2024-07-15 06:11:35,875 DEBUG:on stmt: jump 343
2024-07-15 06:11:35,875 DEBUG:==== SSA block rewrite pass on 345
2024-07-15 06:11:35,875 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5A82CD0>
2024-07-15 06:11:35,875 DEBUG:on stmt: jump 349
2024-07-15 06:11:35,875 DEBUG:==== SSA block rewrite pass on 343
2024-07-15 06:11:35,875 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5A82CD0>
2024-07-15 06:11:35,875 DEBUG:on stmt: x1 = const(int, 0)
2024-07-15 06:11:35,875 DEBUG:on stmt: jump 349
2024-07-15 06:11:35,875 DEBUG:==== SSA block rewrite pass on 349
2024-07-15 06:11:35,875 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5A82CD0>
2024-07-15 06:11:35,875 DEBUG:on stmt: bool114 = global(bool: <class 'bool'>)
2024-07-15 06:11:35,875 DEBUG:on stmt: $114pred = call bool114(zero_pos, func=bool114, args=(Var(zero_pos, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:35,875 DEBUG:on stmt: branch $114pred, 353, 357
2024-07-15 06:11:35,875 DEBUG:==== SSA block rewrite pass on 353
2024-07-15 06:11:35,875 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5A82CD0>
2024-07-15 06:11:35,875 DEBUG:on stmt: $116load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:35,875 DEBUG:on stmt: $128load_attr.2 = getattr(value=$116load_global.0, attr=signbit)
2024-07-15 06:11:35,875 DEBUG:on stmt: $144call.4 = call $128load_attr.2(x0, func=$128load_attr.2, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:35,875 DEBUG:on stmt: $154load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:35,875 DEBUG:on stmt: $166load_attr.7 = getattr(value=$154load_global.5, attr=signbit)
2024-07-15 06:11:35,875 DEBUG:on stmt: $182call.9 = call $166load_attr.7(x1, func=$166load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:35,875 DEBUG:on stmt: $192compare_op.10 = $144call.4 != $182call.9
2024-07-15 06:11:35,875 DEBUG:on stmt: $198return_value.11 = cast(value=$192compare_op.10)
2024-07-15 06:11:35,875 DEBUG:on stmt: out0[index00] = $198return_value.11
2024-07-15 06:11:35,875 DEBUG:on stmt: jump 441
2024-07-15 06:11:35,875 DEBUG:==== SSA block rewrite pass on 357
2024-07-15 06:11:35,875 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5A82CD0>
2024-07-15 06:11:35,875 DEBUG:on stmt: $200load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:35,875 DEBUG:on stmt: $212load_attr.2 = getattr(value=$200load_global.0, attr=sign)
2024-07-15 06:11:35,875 DEBUG:on stmt: $228call.4 = call $212load_attr.2(x0, func=$212load_attr.2, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:35,875 DEBUG:on stmt: $238load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:35,876 DEBUG:on stmt: $250load_attr.7 = getattr(value=$238load_global.5, attr=sign)
2024-07-15 06:11:35,876 DEBUG:on stmt: $266call.9 = call $250load_attr.7(x1, func=$250load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:35,876 DEBUG:on stmt: $276compare_op.10 = $228call.4 != $266call.9
2024-07-15 06:11:35,876 DEBUG:on stmt: $282return_value.11 = cast(value=$276compare_op.10)
2024-07-15 06:11:35,876 DEBUG:on stmt: out0[index00] = $282return_value.11
2024-07-15 06:11:35,876 DEBUG:on stmt: jump 441
2024-07-15 06:11:35,876 DEBUG:==== SSA block rewrite pass on 441
2024-07-15 06:11:35,876 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5A82CD0>
2024-07-15 06:11:35,876 DEBUG:on stmt: jump 230
2024-07-15 06:11:35,876 DEBUG:Fix SSA violator on var x0
2024-07-15 06:11:35,876 DEBUG:==== SSA block rewrite pass on 0
2024-07-15 06:11:35,876 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B596B510>
2024-07-15 06:11:35,876 DEBUG:on stmt: x = arg(0, name=x)
2024-07-15 06:11:35,876 DEBUG:on stmt: threshold = arg(1, name=threshold)
2024-07-15 06:11:35,876 DEBUG:on stmt: zero_pos = arg(2, name=zero_pos)
2024-07-15 06:11:35,876 DEBUG:on stmt: full_shape0 = getattr(value=x, attr=shape)
2024-07-15 06:11:35,876 DEBUG:on stmt: $18load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:35,876 DEBUG:on stmt: $30load_method.4.1 = getattr(value=$18load_global.2.1, attr=empty)
2024-07-15 06:11:35,876 DEBUG:on stmt: $54load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:35,876 DEBUG:on stmt: $66load_attr.7.1 = getattr(value=$54load_global.6.1, attr=bool_)
2024-07-15 06:11:35,876 DEBUG:on stmt: out0 = call $30load_method.4.1(full_shape0, func=$30load_method.4.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:35,876 DEBUG:on stmt: $const94.9.1 = const(int, 0)
2024-07-15 06:11:35,876 DEBUG:on stmt: $const98.11.1 = const(NoneType, None)
2024-07-15 06:11:35,876 DEBUG:on stmt: $const100.12.1 = const(int, 1)
2024-07-15 06:11:35,876 DEBUG:on stmt: $102build_slice.13.1 = global(slice: <class 'slice'>)
2024-07-15 06:11:35,876 DEBUG:on stmt: $102build_slice.14.1 = call $102build_slice.13.1($const98.11.1, $const100.12.1, func=$102build_slice.13.1, args=(Var($const98.11.1, <string>:4), Var($const100.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:35,876 DEBUG:on stmt: out0[$102build_slice.14.1] = $const94.9.1
2024-07-15 06:11:35,876 DEBUG:on stmt: $const108.15.1 = const(int, 0)
2024-07-15 06:11:35,876 DEBUG:on stmt: $const112.17.1 = const(int, 0)
2024-07-15 06:11:35,876 DEBUG:on stmt: $const114.18.1 = const(NoneType, None)
2024-07-15 06:11:35,876 DEBUG:on stmt: $116build_slice.19.1 = global(slice: <class 'slice'>)
2024-07-15 06:11:35,876 DEBUG:on stmt: $116build_slice.20.1 = call $116build_slice.19.1($const112.17.1, $const114.18.1, func=$116build_slice.19.1, args=(Var($const112.17.1, <string>:5), Var($const114.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:35,876 DEBUG:on stmt: out0[$116build_slice.20.1] = $const108.15.1
2024-07-15 06:11:35,876 DEBUG:on stmt: $122load_global.21.1 = global(range: <class 'range'>)
2024-07-15 06:11:35,876 DEBUG:on stmt: $134load_global.23.1 = global(min: <built-in function min>)
2024-07-15 06:11:35,876 DEBUG:on stmt: $const146.25.1 = const(int, 0)
2024-07-15 06:11:35,876 DEBUG:on stmt: $const148.26.1 = const(int, -1)
2024-07-15 06:11:35,876 DEBUG:on stmt: $154call.27.1 = call $134load_global.23.1($const146.25.1, $const148.26.1, func=$134load_global.23.1, args=[Var($const146.25.1, <string>:6), Var($const148.26.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:35,876 DEBUG:on stmt: $164unary_negative.28.1 = unary(fn=<built-in function neg>, value=$154call.27.1)
2024-07-15 06:11:35,876 DEBUG:on stmt: $const168.30.1 = const(int, 0)
2024-07-15 06:11:35,876 DEBUG:on stmt: $170binary_subscr.31.1 = getitem(value=full_shape0, index=$const168.30.1, fn=<built-in function getitem>)
2024-07-15 06:11:35,876 DEBUG:on stmt: $180load_global.32.1 = global(max: <built-in function max>)
2024-07-15 06:11:35,876 DEBUG:on stmt: $const192.34.1 = const(int, 0)
2024-07-15 06:11:35,876 DEBUG:on stmt: $const194.35.1 = const(int, 0)
2024-07-15 06:11:35,876 DEBUG:on stmt: $200call.36.1 = call $180load_global.32.1($const192.34.1, $const194.35.1, func=$180load_global.32.1, args=[Var($const192.34.1, <string>:6), Var($const194.35.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:35,876 DEBUG:on stmt: $binop_sub210.37.1 = $170binary_subscr.31.1 - $200call.36.1
2024-07-15 06:11:35,876 DEBUG:on stmt: $218call.38.1 = call $122load_global.21.1($164unary_negative.28.1, $binop_sub210.37.1, func=$122load_global.21.1, args=[Var($164unary_negative.28.1, <string>:6), Var($binop_sub210.37.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:35,876 DEBUG:on stmt: $228get_iter.39.1 = getiter(value=$218call.38.1)
2024-07-15 06:11:35,876 DEBUG:on stmt: $phi230.0.1 = $228get_iter.39.1
2024-07-15 06:11:35,876 DEBUG:on stmt: jump 230
2024-07-15 06:11:35,876 DEBUG:==== SSA block rewrite pass on 230
2024-07-15 06:11:35,877 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B596B510>
2024-07-15 06:11:35,877 DEBUG:on stmt: $230for_iter.1.1 = iternext(value=$phi230.0.1)
2024-07-15 06:11:35,877 DEBUG:on stmt: $230for_iter.2.1 = pair_first(value=$230for_iter.1.1)
2024-07-15 06:11:35,877 DEBUG:on stmt: $230for_iter.3.1 = pair_second(value=$230for_iter.1.1)
2024-07-15 06:11:35,877 DEBUG:on stmt: $phi232.1.1 = $230for_iter.2.1
2024-07-15 06:11:35,877 DEBUG:on stmt: branch $230for_iter.3.1, 232, 442
2024-07-15 06:11:35,877 DEBUG:==== SSA block rewrite pass on 232
2024-07-15 06:11:35,877 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B596B510>
2024-07-15 06:11:35,877 DEBUG:on stmt: index00 = $phi232.1.1
2024-07-15 06:11:35,877 DEBUG:on stmt: jump 240
2024-07-15 06:11:35,877 DEBUG:==== SSA block rewrite pass on 442
2024-07-15 06:11:35,877 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B596B510>
2024-07-15 06:11:35,877 DEBUG:on stmt: $242return_value.1.1 = cast(value=out0)
2024-07-15 06:11:35,877 DEBUG:on stmt: return $242return_value.1.1
2024-07-15 06:11:35,877 DEBUG:==== SSA block rewrite pass on 240
2024-07-15 06:11:35,877 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B596B510>
2024-07-15 06:11:35,877 DEBUG:on stmt: $const6.1 = const(int, 0)
2024-07-15 06:11:35,877 DEBUG:on stmt: stencil_index = $const6.1 + index00
2024-07-15 06:11:35,877 DEBUG:on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-07-15 06:11:35,877 DEBUG:first assign: x0
2024-07-15 06:11:35,877 DEBUG:replaced with: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-07-15 06:11:35,877 DEBUG:on stmt: $22unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2024-07-15 06:11:35,877 DEBUG:on stmt: $30compare_op.6 = $22unary_negative.4 <= x0
2024-07-15 06:11:35,877 DEBUG:on stmt: bool36 = global(bool: <class 'bool'>)
2024-07-15 06:11:35,877 DEBUG:on stmt: $36pred = call bool36($30compare_op.6, func=bool36, args=(Var($30compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:35,877 DEBUG:on stmt: $phi38.0 = x0
2024-07-15 06:11:35,877 DEBUG:on stmt: branch $36pred, 241, 291
2024-07-15 06:11:35,877 DEBUG:==== SSA block rewrite pass on 241
2024-07-15 06:11:35,877 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B596B510>
2024-07-15 06:11:35,877 DEBUG:on stmt: $40compare_op.2 = x0 <= threshold
2024-07-15 06:11:35,877 DEBUG:on stmt: bool46 = global(bool: <class 'bool'>)
2024-07-15 06:11:35,877 DEBUG:on stmt: $46pred = call bool46($40compare_op.2, func=bool46, args=(Var($40compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:35,877 DEBUG:on stmt: branch $46pred, 279, 295
2024-07-15 06:11:35,877 DEBUG:==== SSA block rewrite pass on 279
2024-07-15 06:11:35,877 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B596B510>
2024-07-15 06:11:35,877 DEBUG:on stmt: jump 289
2024-07-15 06:11:35,878 DEBUG:==== SSA block rewrite pass on 291
2024-07-15 06:11:35,878 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B596B510>
2024-07-15 06:11:35,878 DEBUG:on stmt: jump 295
2024-07-15 06:11:35,878 DEBUG:==== SSA block rewrite pass on 289
2024-07-15 06:11:35,878 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B596B510>
2024-07-15 06:11:35,878 DEBUG:on stmt: x0 = const(int, 0)
2024-07-15 06:11:35,878 DEBUG:replaced with: x0.1 = const(int, 0)
2024-07-15 06:11:35,878 DEBUG:on stmt: jump 295
2024-07-15 06:11:35,878 DEBUG:==== SSA block rewrite pass on 295
2024-07-15 06:11:35,878 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B596B510>
2024-07-15 06:11:35,878 DEBUG:on stmt: $const60.1 = const(int, -1)
2024-07-15 06:11:35,878 DEBUG:on stmt: stencil_index.1 = $const60.1 + index00
2024-07-15 06:11:35,878 DEBUG:on stmt: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2024-07-15 06:11:35,878 DEBUG:on stmt: $76unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2024-07-15 06:11:35,878 DEBUG:on stmt: $84compare_op.6 = $76unary_negative.4 <= x1
2024-07-15 06:11:35,878 DEBUG:on stmt: bool90 = global(bool: <class 'bool'>)
2024-07-15 06:11:35,878 DEBUG:on stmt: $90pred = call bool90($84compare_op.6, func=bool90, args=(Var($84compare_op.6, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:35,878 DEBUG:on stmt: $phi92.0 = x1
2024-07-15 06:11:35,878 DEBUG:on stmt: branch $90pred, 299, 345
2024-07-15 06:11:35,878 DEBUG:==== SSA block rewrite pass on 299
2024-07-15 06:11:35,878 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B596B510>
2024-07-15 06:11:35,878 DEBUG:on stmt: $94compare_op.2 = x1 <= threshold
2024-07-15 06:11:35,878 DEBUG:on stmt: bool100 = global(bool: <class 'bool'>)
2024-07-15 06:11:35,878 DEBUG:on stmt: $100pred = call bool100($94compare_op.2, func=bool100, args=(Var($94compare_op.2, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:35,878 DEBUG:on stmt: branch $100pred, 333, 349
2024-07-15 06:11:35,879 DEBUG:==== SSA block rewrite pass on 333
2024-07-15 06:11:35,879 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B596B510>
2024-07-15 06:11:35,879 DEBUG:on stmt: jump 343
2024-07-15 06:11:35,879 DEBUG:==== SSA block rewrite pass on 345
2024-07-15 06:11:35,879 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B596B510>
2024-07-15 06:11:35,879 DEBUG:on stmt: jump 349
2024-07-15 06:11:35,879 DEBUG:==== SSA block rewrite pass on 343
2024-07-15 06:11:35,879 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B596B510>
2024-07-15 06:11:35,879 DEBUG:on stmt: x1 = const(int, 0)
2024-07-15 06:11:35,879 DEBUG:on stmt: jump 349
2024-07-15 06:11:35,879 DEBUG:==== SSA block rewrite pass on 349
2024-07-15 06:11:35,879 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B596B510>
2024-07-15 06:11:35,879 DEBUG:on stmt: bool114 = global(bool: <class 'bool'>)
2024-07-15 06:11:35,879 DEBUG:on stmt: $114pred = call bool114(zero_pos, func=bool114, args=(Var(zero_pos, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:35,879 DEBUG:on stmt: branch $114pred, 353, 357
2024-07-15 06:11:35,879 DEBUG:==== SSA block rewrite pass on 353
2024-07-15 06:11:35,879 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B596B510>
2024-07-15 06:11:35,879 DEBUG:on stmt: $116load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:35,879 DEBUG:on stmt: $128load_attr.2 = getattr(value=$116load_global.0, attr=signbit)
2024-07-15 06:11:35,879 DEBUG:on stmt: $144call.4 = call $128load_attr.2(x0, func=$128load_attr.2, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:35,879 DEBUG:on stmt: $154load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:35,879 DEBUG:on stmt: $166load_attr.7 = getattr(value=$154load_global.5, attr=signbit)
2024-07-15 06:11:35,879 DEBUG:on stmt: $182call.9 = call $166load_attr.7(x1, func=$166load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:35,879 DEBUG:on stmt: $192compare_op.10 = $144call.4 != $182call.9
2024-07-15 06:11:35,879 DEBUG:on stmt: $198return_value.11 = cast(value=$192compare_op.10)
2024-07-15 06:11:35,879 DEBUG:on stmt: out0[index00] = $198return_value.11
2024-07-15 06:11:35,879 DEBUG:on stmt: jump 441
2024-07-15 06:11:35,879 DEBUG:==== SSA block rewrite pass on 357
2024-07-15 06:11:35,880 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B596B510>
2024-07-15 06:11:35,880 DEBUG:on stmt: $200load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:35,880 DEBUG:on stmt: $212load_attr.2 = getattr(value=$200load_global.0, attr=sign)
2024-07-15 06:11:35,880 DEBUG:on stmt: $228call.4 = call $212load_attr.2(x0, func=$212load_attr.2, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:35,880 DEBUG:on stmt: $238load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:35,880 DEBUG:on stmt: $250load_attr.7 = getattr(value=$238load_global.5, attr=sign)
2024-07-15 06:11:35,880 DEBUG:on stmt: $266call.9 = call $250load_attr.7(x1, func=$250load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:35,880 DEBUG:on stmt: $276compare_op.10 = $228call.4 != $266call.9
2024-07-15 06:11:35,880 DEBUG:on stmt: $282return_value.11 = cast(value=$276compare_op.10)
2024-07-15 06:11:35,880 DEBUG:on stmt: out0[index00] = $282return_value.11
2024-07-15 06:11:35,880 DEBUG:on stmt: jump 441
2024-07-15 06:11:35,880 DEBUG:==== SSA block rewrite pass on 441
2024-07-15 06:11:35,880 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B596B510>
2024-07-15 06:11:35,880 DEBUG:on stmt: jump 230
2024-07-15 06:11:35,880 DEBUG:Replaced assignments: defaultdict(<class 'list'>,
            {240: [<numba.core.ir.Assign object at 0x00000221B5A82010>],
             289: [<numba.core.ir.Assign object at 0x00000221B5A81F90>]})
2024-07-15 06:11:35,880 DEBUG:==== SSA block rewrite pass on 0
2024-07-15 06:11:35,880 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B596B510>
2024-07-15 06:11:35,880 DEBUG:on stmt: x = arg(0, name=x)
2024-07-15 06:11:35,880 DEBUG:on stmt: threshold = arg(1, name=threshold)
2024-07-15 06:11:35,880 DEBUG:on stmt: zero_pos = arg(2, name=zero_pos)
2024-07-15 06:11:35,880 DEBUG:on stmt: full_shape0 = getattr(value=x, attr=shape)
2024-07-15 06:11:35,880 DEBUG:on stmt: $18load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:35,880 DEBUG:on stmt: $30load_method.4.1 = getattr(value=$18load_global.2.1, attr=empty)
2024-07-15 06:11:35,880 DEBUG:on stmt: $54load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:35,880 DEBUG:on stmt: $66load_attr.7.1 = getattr(value=$54load_global.6.1, attr=bool_)
2024-07-15 06:11:35,880 DEBUG:on stmt: out0 = call $30load_method.4.1(full_shape0, func=$30load_method.4.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:35,880 DEBUG:on stmt: $const94.9.1 = const(int, 0)
2024-07-15 06:11:35,881 DEBUG:on stmt: $const98.11.1 = const(NoneType, None)
2024-07-15 06:11:35,881 DEBUG:on stmt: $const100.12.1 = const(int, 1)
2024-07-15 06:11:35,881 DEBUG:on stmt: $102build_slice.13.1 = global(slice: <class 'slice'>)
2024-07-15 06:11:35,881 DEBUG:on stmt: $102build_slice.14.1 = call $102build_slice.13.1($const98.11.1, $const100.12.1, func=$102build_slice.13.1, args=(Var($const98.11.1, <string>:4), Var($const100.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:35,881 DEBUG:on stmt: out0[$102build_slice.14.1] = $const94.9.1
2024-07-15 06:11:35,881 DEBUG:on stmt: $const108.15.1 = const(int, 0)
2024-07-15 06:11:35,881 DEBUG:on stmt: $const112.17.1 = const(int, 0)
2024-07-15 06:11:35,881 DEBUG:on stmt: $const114.18.1 = const(NoneType, None)
2024-07-15 06:11:35,881 DEBUG:on stmt: $116build_slice.19.1 = global(slice: <class 'slice'>)
2024-07-15 06:11:35,881 DEBUG:on stmt: $116build_slice.20.1 = call $116build_slice.19.1($const112.17.1, $const114.18.1, func=$116build_slice.19.1, args=(Var($const112.17.1, <string>:5), Var($const114.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:35,881 DEBUG:on stmt: out0[$116build_slice.20.1] = $const108.15.1
2024-07-15 06:11:35,881 DEBUG:on stmt: $122load_global.21.1 = global(range: <class 'range'>)
2024-07-15 06:11:35,881 DEBUG:on stmt: $134load_global.23.1 = global(min: <built-in function min>)
2024-07-15 06:11:35,881 DEBUG:on stmt: $const146.25.1 = const(int, 0)
2024-07-15 06:11:35,881 DEBUG:on stmt: $const148.26.1 = const(int, -1)
2024-07-15 06:11:35,881 DEBUG:on stmt: $154call.27.1 = call $134load_global.23.1($const146.25.1, $const148.26.1, func=$134load_global.23.1, args=[Var($const146.25.1, <string>:6), Var($const148.26.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:35,881 DEBUG:on stmt: $164unary_negative.28.1 = unary(fn=<built-in function neg>, value=$154call.27.1)
2024-07-15 06:11:35,881 DEBUG:on stmt: $const168.30.1 = const(int, 0)
2024-07-15 06:11:35,881 DEBUG:on stmt: $170binary_subscr.31.1 = getitem(value=full_shape0, index=$const168.30.1, fn=<built-in function getitem>)
2024-07-15 06:11:35,881 DEBUG:on stmt: $180load_global.32.1 = global(max: <built-in function max>)
2024-07-15 06:11:35,881 DEBUG:on stmt: $const192.34.1 = const(int, 0)
2024-07-15 06:11:35,881 DEBUG:on stmt: $const194.35.1 = const(int, 0)
2024-07-15 06:11:35,881 DEBUG:on stmt: $200call.36.1 = call $180load_global.32.1($const192.34.1, $const194.35.1, func=$180load_global.32.1, args=[Var($const192.34.1, <string>:6), Var($const194.35.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:35,881 DEBUG:on stmt: $binop_sub210.37.1 = $170binary_subscr.31.1 - $200call.36.1
2024-07-15 06:11:35,881 DEBUG:on stmt: $218call.38.1 = call $122load_global.21.1($164unary_negative.28.1, $binop_sub210.37.1, func=$122load_global.21.1, args=[Var($164unary_negative.28.1, <string>:6), Var($binop_sub210.37.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:35,881 DEBUG:on stmt: $228get_iter.39.1 = getiter(value=$218call.38.1)
2024-07-15 06:11:35,881 DEBUG:on stmt: $phi230.0.1 = $228get_iter.39.1
2024-07-15 06:11:35,881 DEBUG:on stmt: jump 230
2024-07-15 06:11:35,881 DEBUG:==== SSA block rewrite pass on 230
2024-07-15 06:11:35,881 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B596B510>
2024-07-15 06:11:35,881 DEBUG:on stmt: $230for_iter.1.1 = iternext(value=$phi230.0.1)
2024-07-15 06:11:35,881 DEBUG:on stmt: $230for_iter.2.1 = pair_first(value=$230for_iter.1.1)
2024-07-15 06:11:35,881 DEBUG:on stmt: $230for_iter.3.1 = pair_second(value=$230for_iter.1.1)
2024-07-15 06:11:35,882 DEBUG:on stmt: $phi232.1.1 = $230for_iter.2.1
2024-07-15 06:11:35,882 DEBUG:on stmt: branch $230for_iter.3.1, 232, 442
2024-07-15 06:11:35,882 DEBUG:==== SSA block rewrite pass on 232
2024-07-15 06:11:35,882 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B596B510>
2024-07-15 06:11:35,882 DEBUG:on stmt: index00 = $phi232.1.1
2024-07-15 06:11:35,882 DEBUG:on stmt: jump 240
2024-07-15 06:11:35,882 DEBUG:==== SSA block rewrite pass on 442
2024-07-15 06:11:35,882 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B596B510>
2024-07-15 06:11:35,882 DEBUG:on stmt: $242return_value.1.1 = cast(value=out0)
2024-07-15 06:11:35,882 DEBUG:on stmt: return $242return_value.1.1
2024-07-15 06:11:35,882 DEBUG:==== SSA block rewrite pass on 240
2024-07-15 06:11:35,882 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B596B510>
2024-07-15 06:11:35,882 DEBUG:on stmt: $const6.1 = const(int, 0)
2024-07-15 06:11:35,882 DEBUG:on stmt: stencil_index = $const6.1 + index00
2024-07-15 06:11:35,882 DEBUG:on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-07-15 06:11:35,882 DEBUG:on stmt: $22unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2024-07-15 06:11:35,882 DEBUG:on stmt: $30compare_op.6 = $22unary_negative.4 <= x0
2024-07-15 06:11:35,882 DEBUG:find_def var='x0' stmt=$30compare_op.6 = $22unary_negative.4 <= x0
2024-07-15 06:11:35,882 DEBUG:on stmt: bool36 = global(bool: <class 'bool'>)
2024-07-15 06:11:35,882 DEBUG:on stmt: $36pred = call bool36($30compare_op.6, func=bool36, args=(Var($30compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:35,882 DEBUG:on stmt: $phi38.0 = x0
2024-07-15 06:11:35,882 DEBUG:find_def var='x0' stmt=$phi38.0 = x0
2024-07-15 06:11:35,882 DEBUG:on stmt: branch $36pred, 241, 291
2024-07-15 06:11:35,882 DEBUG:==== SSA block rewrite pass on 241
2024-07-15 06:11:35,882 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B596B510>
2024-07-15 06:11:35,882 DEBUG:on stmt: $40compare_op.2 = x0 <= threshold
2024-07-15 06:11:35,882 DEBUG:find_def var='x0' stmt=$40compare_op.2 = x0 <= threshold
2024-07-15 06:11:35,882 DEBUG:find_def_from_top label 241
2024-07-15 06:11:35,882 DEBUG:idom 240 from label 241
2024-07-15 06:11:35,882 DEBUG:find_def_from_bottom label 240
2024-07-15 06:11:35,882 DEBUG:on stmt: bool46 = global(bool: <class 'bool'>)
2024-07-15 06:11:35,882 DEBUG:on stmt: $46pred = call bool46($40compare_op.2, func=bool46, args=(Var($40compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:35,882 DEBUG:on stmt: branch $46pred, 279, 295
2024-07-15 06:11:35,882 DEBUG:==== SSA block rewrite pass on 279
2024-07-15 06:11:35,882 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B596B510>
2024-07-15 06:11:35,882 DEBUG:on stmt: jump 289
2024-07-15 06:11:35,882 DEBUG:==== SSA block rewrite pass on 291
2024-07-15 06:11:35,882 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B596B510>
2024-07-15 06:11:35,882 DEBUG:on stmt: jump 295
2024-07-15 06:11:35,882 DEBUG:==== SSA block rewrite pass on 289
2024-07-15 06:11:35,882 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B596B510>
2024-07-15 06:11:35,882 DEBUG:on stmt: x0.1 = const(int, 0)
2024-07-15 06:11:35,882 DEBUG:on stmt: jump 295
2024-07-15 06:11:35,882 DEBUG:==== SSA block rewrite pass on 295
2024-07-15 06:11:35,882 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B596B510>
2024-07-15 06:11:35,882 DEBUG:on stmt: $const60.1 = const(int, -1)
2024-07-15 06:11:35,882 DEBUG:on stmt: stencil_index.1 = $const60.1 + index00
2024-07-15 06:11:35,882 DEBUG:on stmt: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2024-07-15 06:11:35,882 DEBUG:on stmt: $76unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2024-07-15 06:11:35,882 DEBUG:on stmt: $84compare_op.6 = $76unary_negative.4 <= x1
2024-07-15 06:11:35,884 DEBUG:on stmt: bool90 = global(bool: <class 'bool'>)
2024-07-15 06:11:35,884 DEBUG:on stmt: $90pred = call bool90($84compare_op.6, func=bool90, args=(Var($84compare_op.6, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:35,884 DEBUG:on stmt: $phi92.0 = x1
2024-07-15 06:11:35,884 DEBUG:on stmt: branch $90pred, 299, 345
2024-07-15 06:11:35,884 DEBUG:==== SSA block rewrite pass on 299
2024-07-15 06:11:35,884 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B596B510>
2024-07-15 06:11:35,884 DEBUG:on stmt: $94compare_op.2 = x1 <= threshold
2024-07-15 06:11:35,884 DEBUG:on stmt: bool100 = global(bool: <class 'bool'>)
2024-07-15 06:11:35,884 DEBUG:on stmt: $100pred = call bool100($94compare_op.2, func=bool100, args=(Var($94compare_op.2, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:35,884 DEBUG:on stmt: branch $100pred, 333, 349
2024-07-15 06:11:35,884 DEBUG:==== SSA block rewrite pass on 333
2024-07-15 06:11:35,884 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B596B510>
2024-07-15 06:11:35,884 DEBUG:on stmt: jump 343
2024-07-15 06:11:35,884 DEBUG:==== SSA block rewrite pass on 345
2024-07-15 06:11:35,884 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B596B510>
2024-07-15 06:11:35,884 DEBUG:on stmt: jump 349
2024-07-15 06:11:35,884 DEBUG:==== SSA block rewrite pass on 343
2024-07-15 06:11:35,884 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B596B510>
2024-07-15 06:11:35,884 DEBUG:on stmt: x1 = const(int, 0)
2024-07-15 06:11:35,884 DEBUG:on stmt: jump 349
2024-07-15 06:11:35,884 DEBUG:==== SSA block rewrite pass on 349
2024-07-15 06:11:35,884 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B596B510>
2024-07-15 06:11:35,884 DEBUG:on stmt: bool114 = global(bool: <class 'bool'>)
2024-07-15 06:11:35,884 DEBUG:on stmt: $114pred = call bool114(zero_pos, func=bool114, args=(Var(zero_pos, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:35,884 DEBUG:on stmt: branch $114pred, 353, 357
2024-07-15 06:11:35,884 DEBUG:==== SSA block rewrite pass on 353
2024-07-15 06:11:35,884 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B596B510>
2024-07-15 06:11:35,884 DEBUG:on stmt: $116load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:35,884 DEBUG:on stmt: $128load_attr.2 = getattr(value=$116load_global.0, attr=signbit)
2024-07-15 06:11:35,884 DEBUG:on stmt: $144call.4 = call $128load_attr.2(x0, func=$128load_attr.2, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:35,884 DEBUG:find_def var='x0' stmt=$144call.4 = call $128load_attr.2(x0, func=$128load_attr.2, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:35,884 DEBUG:find_def_from_top label 353
2024-07-15 06:11:35,884 DEBUG:idom 349 from label 353
2024-07-15 06:11:35,884 DEBUG:find_def_from_bottom label 349
2024-07-15 06:11:35,884 DEBUG:find_def_from_top label 349
2024-07-15 06:11:35,884 DEBUG:idom 295 from label 349
2024-07-15 06:11:35,884 DEBUG:find_def_from_bottom label 295
2024-07-15 06:11:35,884 DEBUG:find_def_from_top label 295
2024-07-15 06:11:35,884 DEBUG:insert phi node x0.2 = phi(incoming_values=[], incoming_blocks=[]) at 295
2024-07-15 06:11:35,884 DEBUG:find_def_from_bottom label 241
2024-07-15 06:11:35,884 DEBUG:find_def_from_top label 241
2024-07-15 06:11:35,884 DEBUG:idom 240 from label 241
2024-07-15 06:11:35,884 DEBUG:find_def_from_bottom label 240
2024-07-15 06:11:35,885 DEBUG:incoming_def x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-07-15 06:11:35,885 DEBUG:find_def_from_bottom label 291
2024-07-15 06:11:35,885 DEBUG:find_def_from_top label 291
2024-07-15 06:11:35,885 DEBUG:idom 240 from label 291
2024-07-15 06:11:35,885 DEBUG:find_def_from_bottom label 240
2024-07-15 06:11:35,885 DEBUG:incoming_def x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-07-15 06:11:35,885 DEBUG:find_def_from_bottom label 289
2024-07-15 06:11:35,885 DEBUG:incoming_def x0.1 = const(int, 0)
2024-07-15 06:11:35,885 DEBUG:replaced with: $144call.4 = call $128load_attr.2(x0.2, func=$128load_attr.2, args=[Var(x0.2, audio.py:1153)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:35,885 DEBUG:on stmt: $154load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:35,885 DEBUG:on stmt: $166load_attr.7 = getattr(value=$154load_global.5, attr=signbit)
2024-07-15 06:11:35,885 DEBUG:on stmt: $182call.9 = call $166load_attr.7(x1, func=$166load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:35,885 DEBUG:on stmt: $192compare_op.10 = $144call.4 != $182call.9
2024-07-15 06:11:35,885 DEBUG:on stmt: $198return_value.11 = cast(value=$192compare_op.10)
2024-07-15 06:11:35,885 DEBUG:on stmt: out0[index00] = $198return_value.11
2024-07-15 06:11:35,885 DEBUG:on stmt: jump 441
2024-07-15 06:11:35,885 DEBUG:==== SSA block rewrite pass on 357
2024-07-15 06:11:35,885 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B596B510>
2024-07-15 06:11:35,885 DEBUG:on stmt: $200load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:35,885 DEBUG:on stmt: $212load_attr.2 = getattr(value=$200load_global.0, attr=sign)
2024-07-15 06:11:35,885 DEBUG:on stmt: $228call.4 = call $212load_attr.2(x0, func=$212load_attr.2, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:35,885 DEBUG:find_def var='x0' stmt=$228call.4 = call $212load_attr.2(x0, func=$212load_attr.2, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:35,885 DEBUG:find_def_from_top label 357
2024-07-15 06:11:35,885 DEBUG:idom 349 from label 357
2024-07-15 06:11:35,885 DEBUG:find_def_from_bottom label 349
2024-07-15 06:11:35,885 DEBUG:find_def_from_top label 349
2024-07-15 06:11:35,885 DEBUG:idom 295 from label 349
2024-07-15 06:11:35,885 DEBUG:find_def_from_bottom label 295
2024-07-15 06:11:35,885 DEBUG:replaced with: $228call.4 = call $212load_attr.2(x0.2, func=$212load_attr.2, args=[Var(x0.2, audio.py:1153)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:35,885 DEBUG:on stmt: $238load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:35,885 DEBUG:on stmt: $250load_attr.7 = getattr(value=$238load_global.5, attr=sign)
2024-07-15 06:11:35,885 DEBUG:on stmt: $266call.9 = call $250load_attr.7(x1, func=$250load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:35,886 DEBUG:on stmt: $276compare_op.10 = $228call.4 != $266call.9
2024-07-15 06:11:35,887 DEBUG:on stmt: $282return_value.11 = cast(value=$276compare_op.10)
2024-07-15 06:11:35,887 DEBUG:on stmt: out0[index00] = $282return_value.11
2024-07-15 06:11:35,887 DEBUG:on stmt: jump 441
2024-07-15 06:11:35,887 DEBUG:==== SSA block rewrite pass on 441
2024-07-15 06:11:35,887 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B596B510>
2024-07-15 06:11:35,887 DEBUG:on stmt: jump 230
2024-07-15 06:11:35,887 DEBUG:Fix SSA violator on var x1
2024-07-15 06:11:35,887 DEBUG:==== SSA block rewrite pass on 0
2024-07-15 06:11:35,887 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5A818D0>
2024-07-15 06:11:35,887 DEBUG:on stmt: x = arg(0, name=x)
2024-07-15 06:11:35,887 DEBUG:on stmt: threshold = arg(1, name=threshold)
2024-07-15 06:11:35,887 DEBUG:on stmt: zero_pos = arg(2, name=zero_pos)
2024-07-15 06:11:35,887 DEBUG:on stmt: full_shape0 = getattr(value=x, attr=shape)
2024-07-15 06:11:35,887 DEBUG:on stmt: $18load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:35,887 DEBUG:on stmt: $30load_method.4.1 = getattr(value=$18load_global.2.1, attr=empty)
2024-07-15 06:11:35,887 DEBUG:on stmt: $54load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:35,887 DEBUG:on stmt: $66load_attr.7.1 = getattr(value=$54load_global.6.1, attr=bool_)
2024-07-15 06:11:35,887 DEBUG:on stmt: out0 = call $30load_method.4.1(full_shape0, func=$30load_method.4.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:35,887 DEBUG:on stmt: $const94.9.1 = const(int, 0)
2024-07-15 06:11:35,887 DEBUG:on stmt: $const98.11.1 = const(NoneType, None)
2024-07-15 06:11:35,887 DEBUG:on stmt: $const100.12.1 = const(int, 1)
2024-07-15 06:11:35,887 DEBUG:on stmt: $102build_slice.13.1 = global(slice: <class 'slice'>)
2024-07-15 06:11:35,887 DEBUG:on stmt: $102build_slice.14.1 = call $102build_slice.13.1($const98.11.1, $const100.12.1, func=$102build_slice.13.1, args=(Var($const98.11.1, <string>:4), Var($const100.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:35,887 DEBUG:on stmt: out0[$102build_slice.14.1] = $const94.9.1
2024-07-15 06:11:35,887 DEBUG:on stmt: $const108.15.1 = const(int, 0)
2024-07-15 06:11:35,887 DEBUG:on stmt: $const112.17.1 = const(int, 0)
2024-07-15 06:11:35,887 DEBUG:on stmt: $const114.18.1 = const(NoneType, None)
2024-07-15 06:11:35,887 DEBUG:on stmt: $116build_slice.19.1 = global(slice: <class 'slice'>)
2024-07-15 06:11:35,887 DEBUG:on stmt: $116build_slice.20.1 = call $116build_slice.19.1($const112.17.1, $const114.18.1, func=$116build_slice.19.1, args=(Var($const112.17.1, <string>:5), Var($const114.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:35,887 DEBUG:on stmt: out0[$116build_slice.20.1] = $const108.15.1
2024-07-15 06:11:35,887 DEBUG:on stmt: $122load_global.21.1 = global(range: <class 'range'>)
2024-07-15 06:11:35,887 DEBUG:on stmt: $134load_global.23.1 = global(min: <built-in function min>)
2024-07-15 06:11:35,887 DEBUG:on stmt: $const146.25.1 = const(int, 0)
2024-07-15 06:11:35,888 DEBUG:on stmt: $const148.26.1 = const(int, -1)
2024-07-15 06:11:35,888 DEBUG:on stmt: $154call.27.1 = call $134load_global.23.1($const146.25.1, $const148.26.1, func=$134load_global.23.1, args=[Var($const146.25.1, <string>:6), Var($const148.26.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:35,888 DEBUG:on stmt: $164unary_negative.28.1 = unary(fn=<built-in function neg>, value=$154call.27.1)
2024-07-15 06:11:35,888 DEBUG:on stmt: $const168.30.1 = const(int, 0)
2024-07-15 06:11:35,888 DEBUG:on stmt: $170binary_subscr.31.1 = getitem(value=full_shape0, index=$const168.30.1, fn=<built-in function getitem>)
2024-07-15 06:11:35,888 DEBUG:on stmt: $180load_global.32.1 = global(max: <built-in function max>)
2024-07-15 06:11:35,888 DEBUG:on stmt: $const192.34.1 = const(int, 0)
2024-07-15 06:11:35,888 DEBUG:on stmt: $const194.35.1 = const(int, 0)
2024-07-15 06:11:35,888 DEBUG:on stmt: $200call.36.1 = call $180load_global.32.1($const192.34.1, $const194.35.1, func=$180load_global.32.1, args=[Var($const192.34.1, <string>:6), Var($const194.35.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:35,888 DEBUG:on stmt: $binop_sub210.37.1 = $170binary_subscr.31.1 - $200call.36.1
2024-07-15 06:11:35,888 DEBUG:on stmt: $218call.38.1 = call $122load_global.21.1($164unary_negative.28.1, $binop_sub210.37.1, func=$122load_global.21.1, args=[Var($164unary_negative.28.1, <string>:6), Var($binop_sub210.37.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:35,888 DEBUG:on stmt: $228get_iter.39.1 = getiter(value=$218call.38.1)
2024-07-15 06:11:35,888 DEBUG:on stmt: $phi230.0.1 = $228get_iter.39.1
2024-07-15 06:11:35,888 DEBUG:on stmt: jump 230
2024-07-15 06:11:35,888 DEBUG:==== SSA block rewrite pass on 230
2024-07-15 06:11:35,888 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5A818D0>
2024-07-15 06:11:35,888 DEBUG:on stmt: $230for_iter.1.1 = iternext(value=$phi230.0.1)
2024-07-15 06:11:35,888 DEBUG:on stmt: $230for_iter.2.1 = pair_first(value=$230for_iter.1.1)
2024-07-15 06:11:35,888 DEBUG:on stmt: $230for_iter.3.1 = pair_second(value=$230for_iter.1.1)
2024-07-15 06:11:35,888 DEBUG:on stmt: $phi232.1.1 = $230for_iter.2.1
2024-07-15 06:11:35,888 DEBUG:on stmt: branch $230for_iter.3.1, 232, 442
2024-07-15 06:11:35,888 DEBUG:==== SSA block rewrite pass on 232
2024-07-15 06:11:35,888 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5A818D0>
2024-07-15 06:11:35,888 DEBUG:on stmt: index00 = $phi232.1.1
2024-07-15 06:11:35,888 DEBUG:on stmt: jump 240
2024-07-15 06:11:35,888 DEBUG:==== SSA block rewrite pass on 442
2024-07-15 06:11:35,888 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5A818D0>
2024-07-15 06:11:35,888 DEBUG:on stmt: $242return_value.1.1 = cast(value=out0)
2024-07-15 06:11:35,888 DEBUG:on stmt: return $242return_value.1.1
2024-07-15 06:11:35,888 DEBUG:==== SSA block rewrite pass on 240
2024-07-15 06:11:35,888 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5A818D0>
2024-07-15 06:11:35,888 DEBUG:on stmt: $const6.1 = const(int, 0)
2024-07-15 06:11:35,888 DEBUG:on stmt: stencil_index = $const6.1 + index00
2024-07-15 06:11:35,888 DEBUG:on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-07-15 06:11:35,888 DEBUG:on stmt: $22unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2024-07-15 06:11:35,888 DEBUG:on stmt: $30compare_op.6 = $22unary_negative.4 <= x0
2024-07-15 06:11:35,889 DEBUG:on stmt: bool36 = global(bool: <class 'bool'>)
2024-07-15 06:11:35,889 DEBUG:on stmt: $36pred = call bool36($30compare_op.6, func=bool36, args=(Var($30compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:35,889 DEBUG:on stmt: $phi38.0 = x0
2024-07-15 06:11:35,889 DEBUG:on stmt: branch $36pred, 241, 291
2024-07-15 06:11:35,889 DEBUG:==== SSA block rewrite pass on 241
2024-07-15 06:11:35,889 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5A818D0>
2024-07-15 06:11:35,889 DEBUG:on stmt: $40compare_op.2 = x0 <= threshold
2024-07-15 06:11:35,889 DEBUG:on stmt: bool46 = global(bool: <class 'bool'>)
2024-07-15 06:11:35,889 DEBUG:on stmt: $46pred = call bool46($40compare_op.2, func=bool46, args=(Var($40compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:35,889 DEBUG:on stmt: branch $46pred, 279, 295
2024-07-15 06:11:35,889 DEBUG:==== SSA block rewrite pass on 279
2024-07-15 06:11:35,889 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5A818D0>
2024-07-15 06:11:35,889 DEBUG:on stmt: jump 289
2024-07-15 06:11:35,889 DEBUG:==== SSA block rewrite pass on 291
2024-07-15 06:11:35,889 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5A818D0>
2024-07-15 06:11:35,889 DEBUG:on stmt: jump 295
2024-07-15 06:11:35,889 DEBUG:==== SSA block rewrite pass on 289
2024-07-15 06:11:35,889 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5A818D0>
2024-07-15 06:11:35,889 DEBUG:on stmt: x0.1 = const(int, 0)
2024-07-15 06:11:35,889 DEBUG:on stmt: jump 295
2024-07-15 06:11:35,889 DEBUG:==== SSA block rewrite pass on 295
2024-07-15 06:11:35,889 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5A818D0>
2024-07-15 06:11:35,889 DEBUG:on stmt: x0.2 = phi(incoming_values=[Var(x0, audio.py:1144), Var(x0, audio.py:1144), Var(x0.1, audio.py:1146)], incoming_blocks=[241, 291, 289])
2024-07-15 06:11:35,889 DEBUG:on stmt: $const60.1 = const(int, -1)
2024-07-15 06:11:35,889 DEBUG:on stmt: stencil_index.1 = $const60.1 + index00
2024-07-15 06:11:35,889 DEBUG:on stmt: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2024-07-15 06:11:35,889 DEBUG:first assign: x1
2024-07-15 06:11:35,889 DEBUG:replaced with: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2024-07-15 06:11:35,889 DEBUG:on stmt: $76unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2024-07-15 06:11:35,889 DEBUG:on stmt: $84compare_op.6 = $76unary_negative.4 <= x1
2024-07-15 06:11:35,889 DEBUG:on stmt: bool90 = global(bool: <class 'bool'>)
2024-07-15 06:11:35,889 DEBUG:on stmt: $90pred = call bool90($84compare_op.6, func=bool90, args=(Var($84compare_op.6, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:35,889 DEBUG:on stmt: $phi92.0 = x1
2024-07-15 06:11:35,889 DEBUG:on stmt: branch $90pred, 299, 345
2024-07-15 06:11:35,889 DEBUG:==== SSA block rewrite pass on 299
2024-07-15 06:11:35,889 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5A818D0>
2024-07-15 06:11:35,889 DEBUG:on stmt: $94compare_op.2 = x1 <= threshold
2024-07-15 06:11:35,890 DEBUG:on stmt: bool100 = global(bool: <class 'bool'>)
2024-07-15 06:11:35,890 DEBUG:on stmt: $100pred = call bool100($94compare_op.2, func=bool100, args=(Var($94compare_op.2, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:35,890 DEBUG:on stmt: branch $100pred, 333, 349
2024-07-15 06:11:35,890 DEBUG:==== SSA block rewrite pass on 333
2024-07-15 06:11:35,890 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5A818D0>
2024-07-15 06:11:35,890 DEBUG:on stmt: jump 343
2024-07-15 06:11:35,890 DEBUG:==== SSA block rewrite pass on 345
2024-07-15 06:11:35,890 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5A818D0>
2024-07-15 06:11:35,890 DEBUG:on stmt: jump 349
2024-07-15 06:11:35,890 DEBUG:==== SSA block rewrite pass on 343
2024-07-15 06:11:35,890 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5A818D0>
2024-07-15 06:11:35,890 DEBUG:on stmt: x1 = const(int, 0)
2024-07-15 06:11:35,890 DEBUG:replaced with: x1.1 = const(int, 0)
2024-07-15 06:11:35,890 DEBUG:on stmt: jump 349
2024-07-15 06:11:35,890 DEBUG:==== SSA block rewrite pass on 349
2024-07-15 06:11:35,890 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5A818D0>
2024-07-15 06:11:35,890 DEBUG:on stmt: bool114 = global(bool: <class 'bool'>)
2024-07-15 06:11:35,890 DEBUG:on stmt: $114pred = call bool114(zero_pos, func=bool114, args=(Var(zero_pos, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:35,890 DEBUG:on stmt: branch $114pred, 353, 357
2024-07-15 06:11:35,890 DEBUG:==== SSA block rewrite pass on 353
2024-07-15 06:11:35,890 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5A818D0>
2024-07-15 06:11:35,890 DEBUG:on stmt: $116load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:35,890 DEBUG:on stmt: $128load_attr.2 = getattr(value=$116load_global.0, attr=signbit)
2024-07-15 06:11:35,890 DEBUG:on stmt: $144call.4 = call $128load_attr.2(x0.2, func=$128load_attr.2, args=[Var(x0.2, audio.py:1153)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:35,890 DEBUG:on stmt: $154load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:35,890 DEBUG:on stmt: $166load_attr.7 = getattr(value=$154load_global.5, attr=signbit)
2024-07-15 06:11:35,890 DEBUG:on stmt: $182call.9 = call $166load_attr.7(x1, func=$166load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:35,890 DEBUG:on stmt: $192compare_op.10 = $144call.4 != $182call.9
2024-07-15 06:11:35,890 DEBUG:on stmt: $198return_value.11 = cast(value=$192compare_op.10)
2024-07-15 06:11:35,890 DEBUG:on stmt: out0[index00] = $198return_value.11
2024-07-15 06:11:35,890 DEBUG:on stmt: jump 441
2024-07-15 06:11:35,890 DEBUG:==== SSA block rewrite pass on 357
2024-07-15 06:11:35,890 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5A818D0>
2024-07-15 06:11:35,890 DEBUG:on stmt: $200load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:35,890 DEBUG:on stmt: $212load_attr.2 = getattr(value=$200load_global.0, attr=sign)
2024-07-15 06:11:35,890 DEBUG:on stmt: $228call.4 = call $212load_attr.2(x0.2, func=$212load_attr.2, args=[Var(x0.2, audio.py:1153)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:35,891 DEBUG:on stmt: $238load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:35,891 DEBUG:on stmt: $250load_attr.7 = getattr(value=$238load_global.5, attr=sign)
2024-07-15 06:11:35,891 DEBUG:on stmt: $266call.9 = call $250load_attr.7(x1, func=$250load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:35,891 DEBUG:on stmt: $276compare_op.10 = $228call.4 != $266call.9
2024-07-15 06:11:35,891 DEBUG:on stmt: $282return_value.11 = cast(value=$276compare_op.10)
2024-07-15 06:11:35,891 DEBUG:on stmt: out0[index00] = $282return_value.11
2024-07-15 06:11:35,891 DEBUG:on stmt: jump 441
2024-07-15 06:11:35,891 DEBUG:==== SSA block rewrite pass on 441
2024-07-15 06:11:35,891 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5A818D0>
2024-07-15 06:11:35,891 DEBUG:on stmt: jump 230
2024-07-15 06:11:35,891 DEBUG:Replaced assignments: defaultdict(<class 'list'>,
            {295: [<numba.core.ir.Assign object at 0x00000221B5A9D950>],
             343: [<numba.core.ir.Assign object at 0x00000221B5A9E1D0>]})
2024-07-15 06:11:35,891 DEBUG:==== SSA block rewrite pass on 0
2024-07-15 06:11:35,891 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5A72290>
2024-07-15 06:11:35,891 DEBUG:on stmt: x = arg(0, name=x)
2024-07-15 06:11:35,891 DEBUG:on stmt: threshold = arg(1, name=threshold)
2024-07-15 06:11:35,891 DEBUG:on stmt: zero_pos = arg(2, name=zero_pos)
2024-07-15 06:11:35,891 DEBUG:on stmt: full_shape0 = getattr(value=x, attr=shape)
2024-07-15 06:11:35,891 DEBUG:on stmt: $18load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:35,891 DEBUG:on stmt: $30load_method.4.1 = getattr(value=$18load_global.2.1, attr=empty)
2024-07-15 06:11:35,891 DEBUG:on stmt: $54load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:35,891 DEBUG:on stmt: $66load_attr.7.1 = getattr(value=$54load_global.6.1, attr=bool_)
2024-07-15 06:11:35,891 DEBUG:on stmt: out0 = call $30load_method.4.1(full_shape0, func=$30load_method.4.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:35,891 DEBUG:on stmt: $const94.9.1 = const(int, 0)
2024-07-15 06:11:35,891 DEBUG:on stmt: $const98.11.1 = const(NoneType, None)
2024-07-15 06:11:35,891 DEBUG:on stmt: $const100.12.1 = const(int, 1)
2024-07-15 06:11:35,891 DEBUG:on stmt: $102build_slice.13.1 = global(slice: <class 'slice'>)
2024-07-15 06:11:35,891 DEBUG:on stmt: $102build_slice.14.1 = call $102build_slice.13.1($const98.11.1, $const100.12.1, func=$102build_slice.13.1, args=(Var($const98.11.1, <string>:4), Var($const100.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:35,891 DEBUG:on stmt: out0[$102build_slice.14.1] = $const94.9.1
2024-07-15 06:11:35,891 DEBUG:on stmt: $const108.15.1 = const(int, 0)
2024-07-15 06:11:35,891 DEBUG:on stmt: $const112.17.1 = const(int, 0)
2024-07-15 06:11:35,891 DEBUG:on stmt: $const114.18.1 = const(NoneType, None)
2024-07-15 06:11:35,891 DEBUG:on stmt: $116build_slice.19.1 = global(slice: <class 'slice'>)
2024-07-15 06:11:35,891 DEBUG:on stmt: $116build_slice.20.1 = call $116build_slice.19.1($const112.17.1, $const114.18.1, func=$116build_slice.19.1, args=(Var($const112.17.1, <string>:5), Var($const114.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:35,892 DEBUG:on stmt: out0[$116build_slice.20.1] = $const108.15.1
2024-07-15 06:11:35,892 DEBUG:on stmt: $122load_global.21.1 = global(range: <class 'range'>)
2024-07-15 06:11:35,892 DEBUG:on stmt: $134load_global.23.1 = global(min: <built-in function min>)
2024-07-15 06:11:35,892 DEBUG:on stmt: $const146.25.1 = const(int, 0)
2024-07-15 06:11:35,892 DEBUG:on stmt: $const148.26.1 = const(int, -1)
2024-07-15 06:11:35,892 DEBUG:on stmt: $154call.27.1 = call $134load_global.23.1($const146.25.1, $const148.26.1, func=$134load_global.23.1, args=[Var($const146.25.1, <string>:6), Var($const148.26.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:35,892 DEBUG:on stmt: $164unary_negative.28.1 = unary(fn=<built-in function neg>, value=$154call.27.1)
2024-07-15 06:11:35,892 DEBUG:on stmt: $const168.30.1 = const(int, 0)
2024-07-15 06:11:35,892 DEBUG:on stmt: $170binary_subscr.31.1 = getitem(value=full_shape0, index=$const168.30.1, fn=<built-in function getitem>)
2024-07-15 06:11:35,892 DEBUG:on stmt: $180load_global.32.1 = global(max: <built-in function max>)
2024-07-15 06:11:35,892 DEBUG:on stmt: $const192.34.1 = const(int, 0)
2024-07-15 06:11:35,892 DEBUG:on stmt: $const194.35.1 = const(int, 0)
2024-07-15 06:11:35,892 DEBUG:on stmt: $200call.36.1 = call $180load_global.32.1($const192.34.1, $const194.35.1, func=$180load_global.32.1, args=[Var($const192.34.1, <string>:6), Var($const194.35.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:35,892 DEBUG:on stmt: $binop_sub210.37.1 = $170binary_subscr.31.1 - $200call.36.1
2024-07-15 06:11:35,892 DEBUG:on stmt: $218call.38.1 = call $122load_global.21.1($164unary_negative.28.1, $binop_sub210.37.1, func=$122load_global.21.1, args=[Var($164unary_negative.28.1, <string>:6), Var($binop_sub210.37.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:35,892 DEBUG:on stmt: $228get_iter.39.1 = getiter(value=$218call.38.1)
2024-07-15 06:11:35,892 DEBUG:on stmt: $phi230.0.1 = $228get_iter.39.1
2024-07-15 06:11:35,892 DEBUG:on stmt: jump 230
2024-07-15 06:11:35,892 DEBUG:==== SSA block rewrite pass on 230
2024-07-15 06:11:35,892 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5A72290>
2024-07-15 06:11:35,892 DEBUG:on stmt: $230for_iter.1.1 = iternext(value=$phi230.0.1)
2024-07-15 06:11:35,892 DEBUG:on stmt: $230for_iter.2.1 = pair_first(value=$230for_iter.1.1)
2024-07-15 06:11:35,892 DEBUG:on stmt: $230for_iter.3.1 = pair_second(value=$230for_iter.1.1)
2024-07-15 06:11:35,892 DEBUG:on stmt: $phi232.1.1 = $230for_iter.2.1
2024-07-15 06:11:35,892 DEBUG:on stmt: branch $230for_iter.3.1, 232, 442
2024-07-15 06:11:35,892 DEBUG:==== SSA block rewrite pass on 232
2024-07-15 06:11:35,892 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5A72290>
2024-07-15 06:11:35,892 DEBUG:on stmt: index00 = $phi232.1.1
2024-07-15 06:11:35,892 DEBUG:on stmt: jump 240
2024-07-15 06:11:35,892 DEBUG:==== SSA block rewrite pass on 442
2024-07-15 06:11:35,892 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5A72290>
2024-07-15 06:11:35,892 DEBUG:on stmt: $242return_value.1.1 = cast(value=out0)
2024-07-15 06:11:35,892 DEBUG:on stmt: return $242return_value.1.1
2024-07-15 06:11:35,892 DEBUG:==== SSA block rewrite pass on 240
2024-07-15 06:11:35,892 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5A72290>
2024-07-15 06:11:35,892 DEBUG:on stmt: $const6.1 = const(int, 0)
2024-07-15 06:11:35,893 DEBUG:on stmt: stencil_index = $const6.1 + index00
2024-07-15 06:11:35,893 DEBUG:on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-07-15 06:11:35,893 DEBUG:on stmt: $22unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2024-07-15 06:11:35,893 DEBUG:on stmt: $30compare_op.6 = $22unary_negative.4 <= x0
2024-07-15 06:11:35,893 DEBUG:on stmt: bool36 = global(bool: <class 'bool'>)
2024-07-15 06:11:35,893 DEBUG:on stmt: $36pred = call bool36($30compare_op.6, func=bool36, args=(Var($30compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:35,893 DEBUG:on stmt: $phi38.0 = x0
2024-07-15 06:11:35,893 DEBUG:on stmt: branch $36pred, 241, 291
2024-07-15 06:11:35,893 DEBUG:==== SSA block rewrite pass on 241
2024-07-15 06:11:35,893 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5A72290>
2024-07-15 06:11:35,893 DEBUG:on stmt: $40compare_op.2 = x0 <= threshold
2024-07-15 06:11:35,893 DEBUG:on stmt: bool46 = global(bool: <class 'bool'>)
2024-07-15 06:11:35,893 DEBUG:on stmt: $46pred = call bool46($40compare_op.2, func=bool46, args=(Var($40compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:35,893 DEBUG:on stmt: branch $46pred, 279, 295
2024-07-15 06:11:35,893 DEBUG:==== SSA block rewrite pass on 279
2024-07-15 06:11:35,893 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5A72290>
2024-07-15 06:11:35,893 DEBUG:on stmt: jump 289
2024-07-15 06:11:35,893 DEBUG:==== SSA block rewrite pass on 291
2024-07-15 06:11:35,893 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5A72290>
2024-07-15 06:11:35,893 DEBUG:on stmt: jump 295
2024-07-15 06:11:35,893 DEBUG:==== SSA block rewrite pass on 289
2024-07-15 06:11:35,893 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5A72290>
2024-07-15 06:11:35,893 DEBUG:on stmt: x0.1 = const(int, 0)
2024-07-15 06:11:35,893 DEBUG:on stmt: jump 295
2024-07-15 06:11:35,893 DEBUG:==== SSA block rewrite pass on 295
2024-07-15 06:11:35,893 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5A72290>
2024-07-15 06:11:35,893 DEBUG:on stmt: x0.2 = phi(incoming_values=[Var(x0, audio.py:1144), Var(x0, audio.py:1144), Var(x0.1, audio.py:1146)], incoming_blocks=[241, 291, 289])
2024-07-15 06:11:35,893 DEBUG:on stmt: $const60.1 = const(int, -1)
2024-07-15 06:11:35,893 DEBUG:on stmt: stencil_index.1 = $const60.1 + index00
2024-07-15 06:11:35,893 DEBUG:on stmt: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2024-07-15 06:11:35,893 DEBUG:on stmt: $76unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2024-07-15 06:11:35,893 DEBUG:on stmt: $84compare_op.6 = $76unary_negative.4 <= x1
2024-07-15 06:11:35,893 DEBUG:find_def var='x1' stmt=$84compare_op.6 = $76unary_negative.4 <= x1
2024-07-15 06:11:35,893 DEBUG:on stmt: bool90 = global(bool: <class 'bool'>)
2024-07-15 06:11:35,894 DEBUG:on stmt: $90pred = call bool90($84compare_op.6, func=bool90, args=(Var($84compare_op.6, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:35,894 DEBUG:on stmt: $phi92.0 = x1
2024-07-15 06:11:35,894 DEBUG:find_def var='x1' stmt=$phi92.0 = x1
2024-07-15 06:11:35,894 DEBUG:on stmt: branch $90pred, 299, 345
2024-07-15 06:11:35,894 DEBUG:==== SSA block rewrite pass on 299
2024-07-15 06:11:35,894 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5A72290>
2024-07-15 06:11:35,894 DEBUG:on stmt: $94compare_op.2 = x1 <= threshold
2024-07-15 06:11:35,894 DEBUG:find_def var='x1' stmt=$94compare_op.2 = x1 <= threshold
2024-07-15 06:11:35,894 DEBUG:find_def_from_top label 299
2024-07-15 06:11:35,894 DEBUG:idom 295 from label 299
2024-07-15 06:11:35,894 DEBUG:find_def_from_bottom label 295
2024-07-15 06:11:35,894 DEBUG:on stmt: bool100 = global(bool: <class 'bool'>)
2024-07-15 06:11:35,894 DEBUG:on stmt: $100pred = call bool100($94compare_op.2, func=bool100, args=(Var($94compare_op.2, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:35,894 DEBUG:on stmt: branch $100pred, 333, 349
2024-07-15 06:11:35,894 DEBUG:==== SSA block rewrite pass on 333
2024-07-15 06:11:35,894 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5A72290>
2024-07-15 06:11:35,894 DEBUG:on stmt: jump 343
2024-07-15 06:11:35,894 DEBUG:==== SSA block rewrite pass on 345
2024-07-15 06:11:35,894 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5A72290>
2024-07-15 06:11:35,894 DEBUG:on stmt: jump 349
2024-07-15 06:11:35,894 DEBUG:==== SSA block rewrite pass on 343
2024-07-15 06:11:35,894 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5A72290>
2024-07-15 06:11:35,894 DEBUG:on stmt: x1.1 = const(int, 0)
2024-07-15 06:11:35,894 DEBUG:on stmt: jump 349
2024-07-15 06:11:35,894 DEBUG:==== SSA block rewrite pass on 349
2024-07-15 06:11:35,894 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5A72290>
2024-07-15 06:11:35,894 DEBUG:on stmt: bool114 = global(bool: <class 'bool'>)
2024-07-15 06:11:35,894 DEBUG:on stmt: $114pred = call bool114(zero_pos, func=bool114, args=(Var(zero_pos, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:35,894 DEBUG:on stmt: branch $114pred, 353, 357
2024-07-15 06:11:35,894 DEBUG:==== SSA block rewrite pass on 353
2024-07-15 06:11:35,894 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5A72290>
2024-07-15 06:11:35,894 DEBUG:on stmt: $116load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:35,894 DEBUG:on stmt: $128load_attr.2 = getattr(value=$116load_global.0, attr=signbit)
2024-07-15 06:11:35,894 DEBUG:on stmt: $144call.4 = call $128load_attr.2(x0.2, func=$128load_attr.2, args=[Var(x0.2, audio.py:1153)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:35,894 DEBUG:on stmt: $154load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:35,894 DEBUG:on stmt: $166load_attr.7 = getattr(value=$154load_global.5, attr=signbit)
2024-07-15 06:11:35,895 DEBUG:on stmt: $182call.9 = call $166load_attr.7(x1, func=$166load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:35,895 DEBUG:find_def var='x1' stmt=$182call.9 = call $166load_attr.7(x1, func=$166load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:35,895 DEBUG:find_def_from_top label 353
2024-07-15 06:11:35,895 DEBUG:idom 349 from label 353
2024-07-15 06:11:35,895 DEBUG:find_def_from_bottom label 349
2024-07-15 06:11:35,895 DEBUG:find_def_from_top label 349
2024-07-15 06:11:35,895 DEBUG:insert phi node x1.2 = phi(incoming_values=[], incoming_blocks=[]) at 349
2024-07-15 06:11:35,895 DEBUG:find_def_from_bottom label 345
2024-07-15 06:11:35,895 DEBUG:find_def_from_top label 345
2024-07-15 06:11:35,895 DEBUG:idom 295 from label 345
2024-07-15 06:11:35,895 DEBUG:find_def_from_bottom label 295
2024-07-15 06:11:35,895 DEBUG:incoming_def x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2024-07-15 06:11:35,895 DEBUG:find_def_from_bottom label 299
2024-07-15 06:11:35,895 DEBUG:find_def_from_top label 299
2024-07-15 06:11:35,895 DEBUG:idom 295 from label 299
2024-07-15 06:11:35,895 DEBUG:find_def_from_bottom label 295
2024-07-15 06:11:35,895 DEBUG:incoming_def x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2024-07-15 06:11:35,895 DEBUG:find_def_from_bottom label 343
2024-07-15 06:11:35,895 DEBUG:incoming_def x1.1 = const(int, 0)
2024-07-15 06:11:35,895 DEBUG:replaced with: $182call.9 = call $166load_attr.7(x1.2, func=$166load_attr.7, args=[Var(x1.2, audio.py:1153)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:35,895 DEBUG:on stmt: $192compare_op.10 = $144call.4 != $182call.9
2024-07-15 06:11:35,895 DEBUG:on stmt: $198return_value.11 = cast(value=$192compare_op.10)
2024-07-15 06:11:35,895 DEBUG:on stmt: out0[index00] = $198return_value.11
2024-07-15 06:11:35,895 DEBUG:on stmt: jump 441
2024-07-15 06:11:35,895 DEBUG:==== SSA block rewrite pass on 357
2024-07-15 06:11:35,896 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5A72290>
2024-07-15 06:11:35,896 DEBUG:on stmt: $200load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:35,896 DEBUG:on stmt: $212load_attr.2 = getattr(value=$200load_global.0, attr=sign)
2024-07-15 06:11:35,896 DEBUG:on stmt: $228call.4 = call $212load_attr.2(x0.2, func=$212load_attr.2, args=[Var(x0.2, audio.py:1153)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:35,896 DEBUG:on stmt: $238load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:35,896 DEBUG:on stmt: $250load_attr.7 = getattr(value=$238load_global.5, attr=sign)
2024-07-15 06:11:35,896 DEBUG:on stmt: $266call.9 = call $250load_attr.7(x1, func=$250load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:35,896 DEBUG:find_def var='x1' stmt=$266call.9 = call $250load_attr.7(x1, func=$250load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:35,896 DEBUG:find_def_from_top label 357
2024-07-15 06:11:35,896 DEBUG:idom 349 from label 357
2024-07-15 06:11:35,896 DEBUG:find_def_from_bottom label 349
2024-07-15 06:11:35,896 DEBUG:replaced with: $266call.9 = call $250load_attr.7(x1.2, func=$250load_attr.7, args=[Var(x1.2, audio.py:1153)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:35,896 DEBUG:on stmt: $276compare_op.10 = $228call.4 != $266call.9
2024-07-15 06:11:35,896 DEBUG:on stmt: $282return_value.11 = cast(value=$276compare_op.10)
2024-07-15 06:11:35,896 DEBUG:on stmt: out0[index00] = $282return_value.11
2024-07-15 06:11:35,896 DEBUG:on stmt: jump 441
2024-07-15 06:11:35,896 DEBUG:==== SSA block rewrite pass on 441
2024-07-15 06:11:35,896 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5A72290>
2024-07-15 06:11:35,896 DEBUG:on stmt: jump 230
2024-07-15 06:11:35,910 DEBUG:bytecode dump:
>          0	NOP(arg=None, lineno=4388)
           2	COPY_FREE_VARS(arg=1, lineno=4388)
           4	RESUME(arg=0, lineno=4388)
           6	LOAD_GLOBAL(arg=1, lineno=4389)
          18	LOAD_FAST(arg=0, lineno=4389)
          20	LOAD_FAST(arg=1, lineno=4389)
          22	LOAD_DEREF(arg=2, lineno=4389)
          24	PRECALL(arg=3, lineno=4389)
          28	CALL(arg=3, lineno=4389)
          38	RETURN_VALUE(arg=None, lineno=4389)
2024-07-15 06:11:35,910 DEBUG:pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-15 06:11:35,910 DEBUG:stack: []
2024-07-15 06:11:35,910 DEBUG:state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-15 06:11:35,910 DEBUG:dispatch pc=0, inst=NOP(arg=None, lineno=4388)
2024-07-15 06:11:35,910 DEBUG:stack []
2024-07-15 06:11:35,910 DEBUG:dispatch pc=2, inst=COPY_FREE_VARS(arg=1, lineno=4388)
2024-07-15 06:11:35,910 DEBUG:stack []
2024-07-15 06:11:35,910 DEBUG:dispatch pc=4, inst=RESUME(arg=0, lineno=4388)
2024-07-15 06:11:35,910 DEBUG:stack []
2024-07-15 06:11:35,910 DEBUG:dispatch pc=6, inst=LOAD_GLOBAL(arg=1, lineno=4389)
2024-07-15 06:11:35,910 DEBUG:stack []
2024-07-15 06:11:35,910 DEBUG:dispatch pc=18, inst=LOAD_FAST(arg=0, lineno=4389)
2024-07-15 06:11:35,910 DEBUG:stack ['$null$6.1', '$6load_global.0']
2024-07-15 06:11:35,910 DEBUG:dispatch pc=20, inst=LOAD_FAST(arg=1, lineno=4389)
2024-07-15 06:11:35,910 DEBUG:stack ['$null$6.1', '$6load_global.0', '$shape18.2']
2024-07-15 06:11:35,910 DEBUG:dispatch pc=22, inst=LOAD_DEREF(arg=2, lineno=4389)
2024-07-15 06:11:35,910 DEBUG:stack ['$null$6.1', '$6load_global.0', '$shape18.2', '$dtype20.3']
2024-07-15 06:11:35,910 DEBUG:dispatch pc=24, inst=PRECALL(arg=3, lineno=4389)
2024-07-15 06:11:35,910 DEBUG:stack ['$null$6.1', '$6load_global.0', '$shape18.2', '$dtype20.3', '$22load_deref.4']
2024-07-15 06:11:35,910 DEBUG:dispatch pc=28, inst=CALL(arg=3, lineno=4389)
2024-07-15 06:11:35,910 DEBUG:stack ['$null$6.1', '$6load_global.0', '$shape18.2', '$dtype20.3', '$22load_deref.4']
2024-07-15 06:11:35,910 DEBUG:dispatch pc=38, inst=RETURN_VALUE(arg=None, lineno=4389)
2024-07-15 06:11:35,911 DEBUG:stack ['$28call.5']
2024-07-15 06:11:35,911 DEBUG:end state. edges=[]
2024-07-15 06:11:35,911 DEBUG:-------------------------Prune PHIs-------------------------
2024-07-15 06:11:35,911 DEBUG:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-07-15 06:11:35,911 DEBUG:defmap: {}
2024-07-15 06:11:35,911 DEBUG:phismap: defaultdict(<class 'set'>, {})
2024-07-15 06:11:35,911 DEBUG:changing phismap: defaultdict(<class 'set'>, {})
2024-07-15 06:11:35,911 DEBUG:keep phismap: {}
2024-07-15 06:11:35,911 DEBUG:new_out: defaultdict(<class 'dict'>, {})
2024-07-15 06:11:35,911 DEBUG:----------------------DONE Prune PHIs-----------------------
2024-07-15 06:11:35,911 DEBUG:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {}), (6, {'idx': 0, 'res': '$6load_global.0'}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'res': '$shape18.2'}), (20, {'res': '$dtype20.3'}), (22, {'res': '$22load_deref.4'}), (24, {}), (26, {}), (28, {'func': '$6load_global.0', 'args': ['$shape18.2', '$dtype20.3', '$22load_deref.4'], 'kw_names': None, 'res': '$28call.5'}), (30, {}), (32, {}), (34, {}), (36, {}), (38, {'retval': '$28call.5', 'castval': '$38return_value.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-15 06:11:35,912 DEBUG:label 0:
    shape = arg(0, name=shape)               ['shape']
    dtype = arg(1, name=dtype)               ['dtype']
    $6load_global.0 = global(numpy_empty_nd: <intrinsic numpy_empty_nd>) ['$6load_global.0']
    $22load_deref.4 = freevar(retty: array(bool, 1d, C)) ['$22load_deref.4']
    $28call.5 = call $6load_global.0(shape, dtype, $22load_deref.4, func=$6load_global.0, args=[Var(shape, arrayobj.py:4388), Var(dtype, arrayobj.py:4388), Var($22load_deref.4, arrayobj.py:4389)], kws=(), vararg=None, varkwarg=None, target=None) ['$22load_deref.4', '$28call.5', '$6load_global.0', 'dtype', 'shape']
    $38return_value.6 = cast(value=$28call.5) ['$28call.5', '$38return_value.6']
    return $38return_value.6                 ['$38return_value.6']

2024-07-15 06:11:35,916 DEBUG:==== SSA block analysis pass on 0
2024-07-15 06:11:35,916 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5AA6090>
2024-07-15 06:11:35,916 DEBUG:on stmt: shape = arg(0, name=shape)
2024-07-15 06:11:35,916 DEBUG:on stmt: dtype = arg(1, name=dtype)
2024-07-15 06:11:35,916 DEBUG:on stmt: $6load_global.0 = global(numpy_empty_nd: <intrinsic numpy_empty_nd>)
2024-07-15 06:11:35,916 DEBUG:on stmt: $22load_deref.4 = freevar(retty: array(bool, 1d, C))
2024-07-15 06:11:35,916 DEBUG:on stmt: $28call.5 = call $6load_global.0(shape, dtype, $22load_deref.4, func=$6load_global.0, args=[Var(shape, arrayobj.py:4388), Var(dtype, arrayobj.py:4388), Var($22load_deref.4, arrayobj.py:4389)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:35,916 DEBUG:on stmt: $38return_value.6 = cast(value=$28call.5)
2024-07-15 06:11:35,916 DEBUG:on stmt: return $38return_value.6
2024-07-15 06:11:35,916 DEBUG:defs defaultdict(<class 'list'>,
            {'$22load_deref.4': [(<numba.core.ir.Assign object at 0x00000221B591B5D0>,
                                  0)],
             '$28call.5': [(<numba.core.ir.Assign object at 0x00000221B5AA5AD0>,
                            0)],
             '$38return_value.6': [(<numba.core.ir.Assign object at 0x00000221B5AA54D0>,
                                    0)],
             '$6load_global.0': [(<numba.core.ir.Assign object at 0x00000221B5AA68D0>,
                                  0)],
             'dtype': [(<numba.core.ir.Assign object at 0x00000221B5AA71D0>,
                        0)],
             'shape': [(<numba.core.ir.Assign object at 0x00000221B596A310>,
                        0)]})
2024-07-15 06:11:35,916 DEBUG:SSA violators <numba.core.utils.OrderedSet object at 0x00000221B5A81110>
2024-07-15 06:11:35,925 DEBUG:bytecode dump:
>          0	NOP(arg=None, lineno=4264)
           2	RESUME(arg=0, lineno=4264)
           4	LOAD_FAST(arg=0, lineno=4267)
           6	LOAD_METHOD(arg=0, lineno=4267)
          28	LOAD_FAST(arg=1, lineno=4267)
          30	LOAD_FAST(arg=2, lineno=4267)
          32	PRECALL(arg=2, lineno=4267)
          36	CALL(arg=2, lineno=4267)
          46	RETURN_VALUE(arg=None, lineno=4267)
2024-07-15 06:11:35,926 DEBUG:pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-15 06:11:35,926 DEBUG:stack: []
2024-07-15 06:11:35,926 DEBUG:state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-15 06:11:35,926 DEBUG:dispatch pc=0, inst=NOP(arg=None, lineno=4264)
2024-07-15 06:11:35,926 DEBUG:stack []
2024-07-15 06:11:35,926 DEBUG:dispatch pc=2, inst=RESUME(arg=0, lineno=4264)
2024-07-15 06:11:35,926 DEBUG:stack []
2024-07-15 06:11:35,926 DEBUG:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=4267)
2024-07-15 06:11:35,926 DEBUG:stack []
2024-07-15 06:11:35,926 DEBUG:dispatch pc=6, inst=LOAD_METHOD(arg=0, lineno=4267)
2024-07-15 06:11:35,926 DEBUG:stack ['$arrtype4.0']
2024-07-15 06:11:35,926 DEBUG:dispatch pc=28, inst=LOAD_FAST(arg=1, lineno=4267)
2024-07-15 06:11:35,926 DEBUG:stack ['$null$6.1', '$6load_method.2']
2024-07-15 06:11:35,927 DEBUG:dispatch pc=30, inst=LOAD_FAST(arg=2, lineno=4267)
2024-07-15 06:11:35,927 DEBUG:stack ['$null$6.1', '$6load_method.2', '$size28.3']
2024-07-15 06:11:35,927 DEBUG:dispatch pc=32, inst=PRECALL(arg=2, lineno=4267)
2024-07-15 06:11:35,927 DEBUG:stack ['$null$6.1', '$6load_method.2', '$size28.3', '$align30.4']
2024-07-15 06:11:35,927 DEBUG:dispatch pc=36, inst=CALL(arg=2, lineno=4267)
2024-07-15 06:11:35,927 DEBUG:stack ['$null$6.1', '$6load_method.2', '$size28.3', '$align30.4']
2024-07-15 06:11:35,927 DEBUG:dispatch pc=46, inst=RETURN_VALUE(arg=None, lineno=4267)
2024-07-15 06:11:35,927 DEBUG:stack ['$36call.5']
2024-07-15 06:11:35,927 DEBUG:end state. edges=[]
2024-07-15 06:11:35,927 DEBUG:-------------------------Prune PHIs-------------------------
2024-07-15 06:11:35,927 DEBUG:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-07-15 06:11:35,927 DEBUG:defmap: {}
2024-07-15 06:11:35,927 DEBUG:phismap: defaultdict(<class 'set'>, {})
2024-07-15 06:11:35,927 DEBUG:changing phismap: defaultdict(<class 'set'>, {})
2024-07-15 06:11:35,927 DEBUG:keep phismap: {}
2024-07-15 06:11:35,927 DEBUG:new_out: defaultdict(<class 'dict'>, {})
2024-07-15 06:11:35,927 DEBUG:----------------------DONE Prune PHIs-----------------------
2024-07-15 06:11:35,927 DEBUG:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$arrtype4.0'}), (6, {'item': '$arrtype4.0', 'res': '$6load_method.2'}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {}), (20, {}), (22, {}), (24, {}), (26, {}), (28, {'res': '$size28.3'}), (30, {'res': '$align30.4'}), (32, {}), (34, {}), (36, {'func': '$6load_method.2', 'args': ['$size28.3', '$align30.4'], 'kw_names': None, 'res': '$36call.5'}), (38, {}), (40, {}), (42, {}), (44, {}), (46, {'retval': '$36call.5', 'castval': '$46return_value.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-15 06:11:35,927 DEBUG:label 0:
    arrtype = arg(0, name=arrtype)           ['arrtype']
    size = arg(1, name=size)                 ['size']
    align = arg(2, name=align)               ['align']
    $6load_method.2 = getattr(value=arrtype, attr=_allocate) ['$6load_method.2', 'arrtype']
    $36call.5 = call $6load_method.2(size, align, func=$6load_method.2, args=[Var(size, arrayobj.py:4264), Var(align, arrayobj.py:4264)], kws=(), vararg=None, varkwarg=None, target=None) ['$36call.5', '$6load_method.2', 'align', 'size']
    $46return_value.6 = cast(value=$36call.5) ['$36call.5', '$46return_value.6']
    return $46return_value.6                 ['$46return_value.6']

2024-07-15 06:11:35,937 DEBUG:==== SSA block analysis pass on 0
2024-07-15 06:11:35,937 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5B80290>
2024-07-15 06:11:35,937 DEBUG:on stmt: arrtype = arg(0, name=arrtype)
2024-07-15 06:11:35,937 DEBUG:on stmt: size = arg(1, name=size)
2024-07-15 06:11:35,937 DEBUG:on stmt: align = arg(2, name=align)
2024-07-15 06:11:35,937 DEBUG:on stmt: $6load_method.2 = getattr(value=arrtype, attr=_allocate)
2024-07-15 06:11:35,937 DEBUG:on stmt: $36call.5 = call $6load_method.2(size, align, func=$6load_method.2, args=[Var(size, arrayobj.py:4264), Var(align, arrayobj.py:4264)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:35,937 DEBUG:on stmt: $46return_value.6 = cast(value=$36call.5)
2024-07-15 06:11:35,937 DEBUG:on stmt: return $46return_value.6
2024-07-15 06:11:35,938 DEBUG:defs defaultdict(<class 'list'>,
            {'$36call.5': [(<numba.core.ir.Assign object at 0x00000221B5ADB850>,
                            0)],
             '$46return_value.6': [(<numba.core.ir.Assign object at 0x00000221B5ADBB90>,
                                    0)],
             '$6load_method.2': [(<numba.core.ir.Assign object at 0x00000221B5ADB190>,
                                  0)],
             'align': [(<numba.core.ir.Assign object at 0x00000221B5ADAC90>,
                        0)],
             'arrtype': [(<numba.core.ir.Assign object at 0x00000221B5ADAA90>,
                          0)],
             'size': [(<numba.core.ir.Assign object at 0x00000221B5ADAB90>,
                       0)]})
2024-07-15 06:11:35,938 DEBUG:SSA violators <numba.core.utils.OrderedSet object at 0x00000221B5ADB910>
2024-07-15 06:11:35,941 DEBUG:bytecode dump:
>          0	NOP(arg=None, lineno=4259)
           2	RESUME(arg=0, lineno=4259)
           4	LOAD_GLOBAL(arg=1, lineno=4260)
          16	LOAD_FAST(arg=1, lineno=4260)
          18	LOAD_FAST(arg=2, lineno=4260)
          20	PRECALL(arg=2, lineno=4260)
          24	CALL(arg=2, lineno=4260)
          34	RETURN_VALUE(arg=None, lineno=4260)
2024-07-15 06:11:35,941 DEBUG:pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-15 06:11:35,941 DEBUG:stack: []
2024-07-15 06:11:35,941 DEBUG:state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-15 06:11:35,941 DEBUG:dispatch pc=0, inst=NOP(arg=None, lineno=4259)
2024-07-15 06:11:35,941 DEBUG:stack []
2024-07-15 06:11:35,941 DEBUG:dispatch pc=2, inst=RESUME(arg=0, lineno=4259)
2024-07-15 06:11:35,941 DEBUG:stack []
2024-07-15 06:11:35,941 DEBUG:dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=4260)
2024-07-15 06:11:35,941 DEBUG:stack []
2024-07-15 06:11:35,941 DEBUG:dispatch pc=16, inst=LOAD_FAST(arg=1, lineno=4260)
2024-07-15 06:11:35,941 DEBUG:stack ['$null$4.1', '$4load_global.0']
2024-07-15 06:11:35,941 DEBUG:dispatch pc=18, inst=LOAD_FAST(arg=2, lineno=4260)
2024-07-15 06:11:35,941 DEBUG:stack ['$null$4.1', '$4load_global.0', '$allocsize16.2']
2024-07-15 06:11:35,941 DEBUG:dispatch pc=20, inst=PRECALL(arg=2, lineno=4260)
2024-07-15 06:11:35,941 DEBUG:stack ['$null$4.1', '$4load_global.0', '$allocsize16.2', '$align18.3']
2024-07-15 06:11:35,941 DEBUG:dispatch pc=24, inst=CALL(arg=2, lineno=4260)
2024-07-15 06:11:35,941 DEBUG:stack ['$null$4.1', '$4load_global.0', '$allocsize16.2', '$align18.3']
2024-07-15 06:11:35,941 DEBUG:dispatch pc=34, inst=RETURN_VALUE(arg=None, lineno=4260)
2024-07-15 06:11:35,941 DEBUG:stack ['$24call.4']
2024-07-15 06:11:35,941 DEBUG:end state. edges=[]
2024-07-15 06:11:35,942 DEBUG:-------------------------Prune PHIs-------------------------
2024-07-15 06:11:35,942 DEBUG:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-07-15 06:11:35,942 DEBUG:defmap: {}
2024-07-15 06:11:35,942 DEBUG:phismap: defaultdict(<class 'set'>, {})
2024-07-15 06:11:35,942 DEBUG:changing phismap: defaultdict(<class 'set'>, {})
2024-07-15 06:11:35,942 DEBUG:keep phismap: {}
2024-07-15 06:11:35,942 DEBUG:new_out: defaultdict(<class 'dict'>, {})
2024-07-15 06:11:35,942 DEBUG:----------------------DONE Prune PHIs-----------------------
2024-07-15 06:11:35,942 DEBUG:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (6, {}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$allocsize16.2'}), (18, {'res': '$align18.3'}), (20, {}), (22, {}), (24, {'func': '$4load_global.0', 'args': ['$allocsize16.2', '$align18.3'], 'kw_names': None, 'res': '$24call.4'}), (26, {}), (28, {}), (30, {}), (32, {}), (34, {'retval': '$24call.4', 'castval': '$34return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-15 06:11:35,942 DEBUG:label 0:
    cls = arg(0, name=cls)                   ['cls']
    allocsize = arg(1, name=allocsize)       ['allocsize']
    align = arg(2, name=align)               ['align']
    $4load_global.0 = global(intrin_alloc: <intrinsic intrin_alloc>) ['$4load_global.0']
    $24call.4 = call $4load_global.0(allocsize, align, func=$4load_global.0, args=[Var(allocsize, arrayobj.py:4259), Var(align, arrayobj.py:4259)], kws=(), vararg=None, varkwarg=None, target=None) ['$24call.4', '$4load_global.0', 'align', 'allocsize']
    $34return_value.5 = cast(value=$24call.4) ['$24call.4', '$34return_value.5']
    return $34return_value.5                 ['$34return_value.5']

2024-07-15 06:11:35,945 DEBUG:==== SSA block analysis pass on 0
2024-07-15 06:11:35,945 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5B90550>
2024-07-15 06:11:35,945 DEBUG:on stmt: cls = arg(0, name=cls)
2024-07-15 06:11:35,945 DEBUG:on stmt: allocsize = arg(1, name=allocsize)
2024-07-15 06:11:35,945 DEBUG:on stmt: align = arg(2, name=align)
2024-07-15 06:11:35,945 DEBUG:on stmt: $4load_global.0 = global(intrin_alloc: <intrinsic intrin_alloc>)
2024-07-15 06:11:35,945 DEBUG:on stmt: $24call.4 = call $4load_global.0(allocsize, align, func=$4load_global.0, args=[Var(allocsize, arrayobj.py:4259), Var(align, arrayobj.py:4259)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:35,945 DEBUG:on stmt: $34return_value.5 = cast(value=$24call.4)
2024-07-15 06:11:35,945 DEBUG:on stmt: return $34return_value.5
2024-07-15 06:11:35,946 DEBUG:defs defaultdict(<class 'list'>,
            {'$24call.4': [(<numba.core.ir.Assign object at 0x00000221B5B835D0>,
                            0)],
             '$34return_value.5': [(<numba.core.ir.Assign object at 0x00000221B5B837D0>,
                                    0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x00000221B5B83090>,
                                  0)],
             'align': [(<numba.core.ir.Assign object at 0x00000221B5B82ED0>,
                        0)],
             'allocsize': [(<numba.core.ir.Assign object at 0x00000221B5B82D90>,
                            0)],
             'cls': [(<numba.core.ir.Assign object at 0x00000221B5B82C90>, 0)]})
2024-07-15 06:11:35,946 DEBUG:SSA violators <numba.core.utils.OrderedSet object at 0x00000221B5B90550>
2024-07-15 06:11:36,068 DEBUG:bytecode dump:
>          0	NOP(arg=None, lineno=200)
           2	COPY_FREE_VARS(arg=1, lineno=200)
           4	RESUME(arg=0, lineno=200)
           6	LOAD_FAST(arg=0, lineno=201)
           8	LOAD_DEREF(arg=2, lineno=201)
          10	BINARY_SUBSCR(arg=None, lineno=201)
          20	RETURN_VALUE(arg=None, lineno=201)
2024-07-15 06:11:36,069 DEBUG:pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-15 06:11:36,069 DEBUG:stack: []
2024-07-15 06:11:36,069 DEBUG:state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-15 06:11:36,069 DEBUG:dispatch pc=0, inst=NOP(arg=None, lineno=200)
2024-07-15 06:11:36,069 DEBUG:stack []
2024-07-15 06:11:36,069 DEBUG:dispatch pc=2, inst=COPY_FREE_VARS(arg=1, lineno=200)
2024-07-15 06:11:36,069 DEBUG:stack []
2024-07-15 06:11:36,069 DEBUG:dispatch pc=4, inst=RESUME(arg=0, lineno=200)
2024-07-15 06:11:36,069 DEBUG:stack []
2024-07-15 06:11:36,069 DEBUG:dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=201)
2024-07-15 06:11:36,069 DEBUG:stack []
2024-07-15 06:11:36,069 DEBUG:dispatch pc=8, inst=LOAD_DEREF(arg=2, lineno=201)
2024-07-15 06:11:36,069 DEBUG:stack ['$tup6.0']
2024-07-15 06:11:36,069 DEBUG:dispatch pc=10, inst=BINARY_SUBSCR(arg=None, lineno=201)
2024-07-15 06:11:36,069 DEBUG:stack ['$tup6.0', '$8load_deref.1']
2024-07-15 06:11:36,069 DEBUG:dispatch pc=20, inst=RETURN_VALUE(arg=None, lineno=201)
2024-07-15 06:11:36,069 DEBUG:stack ['$10binary_subscr.2']
2024-07-15 06:11:36,069 DEBUG:end state. edges=[]
2024-07-15 06:11:36,069 DEBUG:-------------------------Prune PHIs-------------------------
2024-07-15 06:11:36,069 DEBUG:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-07-15 06:11:36,069 DEBUG:defmap: {}
2024-07-15 06:11:36,069 DEBUG:phismap: defaultdict(<class 'set'>, {})
2024-07-15 06:11:36,069 DEBUG:changing phismap: defaultdict(<class 'set'>, {})
2024-07-15 06:11:36,069 DEBUG:keep phismap: {}
2024-07-15 06:11:36,069 DEBUG:new_out: defaultdict(<class 'dict'>, {})
2024-07-15 06:11:36,069 DEBUG:----------------------DONE Prune PHIs-----------------------
2024-07-15 06:11:36,069 DEBUG:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {}), (6, {'res': '$tup6.0'}), (8, {'res': '$8load_deref.1'}), (10, {'index': '$8load_deref.1', 'target': '$tup6.0', 'res': '$10binary_subscr.2'}), (12, {}), (14, {}), (16, {}), (18, {}), (20, {'retval': '$10binary_subscr.2', 'castval': '$20return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-15 06:11:36,070 DEBUG:label 0:
    tup = arg(0, name=tup)                   ['tup']
    idx = arg(1, name=idx)                   ['idx']
    $8load_deref.1 = freevar(idx_val: 0)     ['$8load_deref.1']
    $10binary_subscr.2 = getitem(value=tup, index=$8load_deref.1, fn=<built-in function getitem>) ['$10binary_subscr.2', '$8load_deref.1', 'tup']
    $20return_value.3 = cast(value=$10binary_subscr.2) ['$10binary_subscr.2', '$20return_value.3']
    return $20return_value.3                 ['$20return_value.3']

2024-07-15 06:11:36,073 DEBUG:==== SSA block analysis pass on 0
2024-07-15 06:11:36,073 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5BDED90>
2024-07-15 06:11:36,073 DEBUG:on stmt: tup = arg(0, name=tup)
2024-07-15 06:11:36,073 DEBUG:on stmt: idx = arg(1, name=idx)
2024-07-15 06:11:36,073 DEBUG:on stmt: $8load_deref.1 = freevar(idx_val: 0)
2024-07-15 06:11:36,073 DEBUG:on stmt: $10binary_subscr.2 = static_getitem(value=tup, index=0, index_var=$8load_deref.1, fn=<built-in function getitem>)
2024-07-15 06:11:36,073 DEBUG:on stmt: $20return_value.3 = cast(value=$10binary_subscr.2)
2024-07-15 06:11:36,073 DEBUG:on stmt: return $20return_value.3
2024-07-15 06:11:36,073 DEBUG:defs defaultdict(<class 'list'>,
            {'$10binary_subscr.2': [(<numba.core.ir.Assign object at 0x00000221B5BDE6D0>,
                                     0)],
             '$20return_value.3': [(<numba.core.ir.Assign object at 0x00000221B5BDDE50>,
                                    0)],
             '$8load_deref.1': [(<numba.core.ir.Assign object at 0x00000221B5BDDA50>,
                                 0)],
             'idx': [(<numba.core.ir.Assign object at 0x00000221B5BDCF10>, 0)],
             'tup': [(<numba.core.ir.Assign object at 0x00000221B5BDD390>, 0)]})
2024-07-15 06:11:36,073 DEBUG:SSA violators <numba.core.utils.OrderedSet object at 0x00000221B5BDED90>
2024-07-15 06:11:36,434 DEBUG:bytecode dump:
>          0	NOP(arg=None, lineno=1158)
           2	RESUME(arg=0, lineno=1158)
           4	LOAD_GLOBAL(arg=1, lineno=1174)
          16	LOAD_FAST(arg=0, lineno=1174)
          18	LOAD_FAST(arg=1, lineno=1174)
          20	LOAD_FAST(arg=2, lineno=1174)
          22	PRECALL(arg=3, lineno=1174)
          26	CALL(arg=3, lineno=1174)
          36	LOAD_FAST(arg=3, lineno=1174)
          38	LOAD_CONST(arg=1, lineno=1174)
          40	LOAD_CONST(arg=1, lineno=1174)
          42	BUILD_SLICE(arg=2, lineno=1174)
          44	STORE_SUBSCR(arg=None, lineno=1174)
          48	LOAD_CONST(arg=1, lineno=1174)
          50	RETURN_VALUE(arg=None, lineno=1174)
2024-07-15 06:11:36,434 DEBUG:pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-15 06:11:36,434 DEBUG:stack: []
2024-07-15 06:11:36,434 DEBUG:state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-15 06:11:36,434 DEBUG:dispatch pc=0, inst=NOP(arg=None, lineno=1158)
2024-07-15 06:11:36,434 DEBUG:stack []
2024-07-15 06:11:36,434 DEBUG:dispatch pc=2, inst=RESUME(arg=0, lineno=1158)
2024-07-15 06:11:36,434 DEBUG:stack []
2024-07-15 06:11:36,434 DEBUG:dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=1174)
2024-07-15 06:11:36,434 DEBUG:stack []
2024-07-15 06:11:36,434 DEBUG:dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=1174)
2024-07-15 06:11:36,434 DEBUG:stack ['$null$4.1', '$4load_global.0']
2024-07-15 06:11:36,434 DEBUG:dispatch pc=18, inst=LOAD_FAST(arg=1, lineno=1174)
2024-07-15 06:11:36,434 DEBUG:stack ['$null$4.1', '$4load_global.0', '$x16.2']
2024-07-15 06:11:36,434 DEBUG:dispatch pc=20, inst=LOAD_FAST(arg=2, lineno=1174)
2024-07-15 06:11:36,434 DEBUG:stack ['$null$4.1', '$4load_global.0', '$x16.2', '$threshold18.3']
2024-07-15 06:11:36,434 DEBUG:dispatch pc=22, inst=PRECALL(arg=3, lineno=1174)
2024-07-15 06:11:36,434 DEBUG:stack ['$null$4.1', '$4load_global.0', '$x16.2', '$threshold18.3', '$zero_pos20.4']
2024-07-15 06:11:36,434 DEBUG:dispatch pc=26, inst=CALL(arg=3, lineno=1174)
2024-07-15 06:11:36,434 DEBUG:stack ['$null$4.1', '$4load_global.0', '$x16.2', '$threshold18.3', '$zero_pos20.4']
2024-07-15 06:11:36,434 DEBUG:dispatch pc=36, inst=LOAD_FAST(arg=3, lineno=1174)
2024-07-15 06:11:36,434 DEBUG:stack ['$26call.5']
2024-07-15 06:11:36,434 DEBUG:dispatch pc=38, inst=LOAD_CONST(arg=1, lineno=1174)
2024-07-15 06:11:36,434 DEBUG:stack ['$26call.5', '$y36.6']
2024-07-15 06:11:36,434 DEBUG:dispatch pc=40, inst=LOAD_CONST(arg=1, lineno=1174)
2024-07-15 06:11:36,434 DEBUG:stack ['$26call.5', '$y36.6', '$const38.7']
2024-07-15 06:11:36,434 DEBUG:dispatch pc=42, inst=BUILD_SLICE(arg=2, lineno=1174)
2024-07-15 06:11:36,434 DEBUG:stack ['$26call.5', '$y36.6', '$const38.7', '$const40.8']
2024-07-15 06:11:36,434 DEBUG:dispatch pc=44, inst=STORE_SUBSCR(arg=None, lineno=1174)
2024-07-15 06:11:36,434 DEBUG:stack ['$26call.5', '$y36.6', '$42build_slice.10']
2024-07-15 06:11:36,434 DEBUG:dispatch pc=48, inst=LOAD_CONST(arg=1, lineno=1174)
2024-07-15 06:11:36,434 DEBUG:stack []
2024-07-15 06:11:36,434 DEBUG:dispatch pc=50, inst=RETURN_VALUE(arg=None, lineno=1174)
2024-07-15 06:11:36,434 DEBUG:stack ['$const48.11']
2024-07-15 06:11:36,434 DEBUG:end state. edges=[]
2024-07-15 06:11:36,434 DEBUG:-------------------------Prune PHIs-------------------------
2024-07-15 06:11:36,434 DEBUG:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-07-15 06:11:36,434 DEBUG:defmap: {}
2024-07-15 06:11:36,434 DEBUG:phismap: defaultdict(<class 'set'>, {})
2024-07-15 06:11:36,436 DEBUG:changing phismap: defaultdict(<class 'set'>, {})
2024-07-15 06:11:36,436 DEBUG:keep phismap: {}
2024-07-15 06:11:36,436 DEBUG:new_out: defaultdict(<class 'dict'>, {})
2024-07-15 06:11:36,436 DEBUG:----------------------DONE Prune PHIs-----------------------
2024-07-15 06:11:36,436 DEBUG:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (6, {}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$x16.2'}), (18, {'res': '$threshold18.3'}), (20, {'res': '$zero_pos20.4'}), (22, {}), (24, {}), (26, {'func': '$4load_global.0', 'args': ['$x16.2', '$threshold18.3', '$zero_pos20.4'], 'kw_names': None, 'res': '$26call.5'}), (28, {}), (30, {}), (32, {}), (34, {}), (36, {'res': '$y36.6'}), (38, {'res': '$const38.7'}), (40, {'res': '$const40.8'}), (42, {'start': '$const38.7', 'stop': '$const40.8', 'step': None, 'res': '$42build_slice.10', 'slicevar': '$42build_slice.9'}), (44, {'target': '$y36.6', 'index': '$42build_slice.10', 'value': '$26call.5'}), (46, {}), (48, {'res': '$const48.11'}), (50, {'retval': '$const48.11', 'castval': '$50return_value.12'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-15 06:11:36,436 DEBUG:label 0:
    x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    y = arg(3, name=y)                       ['y']
    $4load_global.0 = global(_zc_stencil: <numba.stencils.stencil.StencilFunc object at 0x00000221FFE44E90>) ['$4load_global.0']
    $26call.5 = call $4load_global.0(x, threshold, zero_pos, func=$4load_global.0, args=[Var(x, audio.py:1158), Var(threshold, audio.py:1158), Var(zero_pos, audio.py:1158)], kws=(), vararg=None, varkwarg=None, target=None) ['$26call.5', '$4load_global.0', 'threshold', 'x', 'zero_pos']
    $const38.7 = const(NoneType, None)       ['$const38.7']
    $const40.8 = const(NoneType, None)       ['$const40.8']
    $42build_slice.9 = global(slice: <class 'slice'>) ['$42build_slice.9']
    $42build_slice.10 = call $42build_slice.9($const38.7, $const40.8, func=$42build_slice.9, args=(Var($const38.7, audio.py:1174), Var($const40.8, audio.py:1174)), kws=(), vararg=None, varkwarg=None, target=None) ['$42build_slice.10', '$42build_slice.9', '$const38.7', '$const40.8']
    y[$42build_slice.10] = $26call.5         ['$26call.5', '$42build_slice.10', 'y']
    $const48.11 = const(NoneType, None)      ['$const48.11']
    $50return_value.12 = cast(value=$const48.11) ['$50return_value.12', '$const48.11']
    return $50return_value.12                ['$50return_value.12']

2024-07-15 06:11:36,441 DEBUG:==== SSA block analysis pass on 0
2024-07-15 06:11:36,442 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5DA90D0>
2024-07-15 06:11:36,442 DEBUG:on stmt: x = arg(0, name=x)
2024-07-15 06:11:36,442 DEBUG:on stmt: threshold = arg(1, name=threshold)
2024-07-15 06:11:36,442 DEBUG:on stmt: zero_pos = arg(2, name=zero_pos)
2024-07-15 06:11:36,442 DEBUG:on stmt: y = arg(3, name=y)
2024-07-15 06:11:36,442 DEBUG:on stmt: $4load_global.0 = global(_zc_stencil: <numba.stencils.stencil.StencilFunc object at 0x00000221FFE44E90>)
2024-07-15 06:11:36,442 DEBUG:on stmt: $26call.5 = call $4load_global.0(x, threshold, zero_pos, func=$4load_global.0, args=[Var(x, audio.py:1158), Var(threshold, audio.py:1158), Var(zero_pos, audio.py:1158)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:36,442 DEBUG:on stmt: $const38.7 = const(NoneType, None)
2024-07-15 06:11:36,442 DEBUG:on stmt: $const40.8 = const(NoneType, None)
2024-07-15 06:11:36,442 DEBUG:on stmt: $42build_slice.9 = global(slice: <class 'slice'>)
2024-07-15 06:11:36,442 DEBUG:on stmt: $42build_slice.10 = call $42build_slice.9($const38.7, $const40.8, func=$42build_slice.9, args=(Var($const38.7, audio.py:1174), Var($const40.8, audio.py:1174)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:36,442 DEBUG:on stmt: y[slice(None, None, None)] = $26call.5
2024-07-15 06:11:36,442 DEBUG:on stmt: $const48.11 = const(NoneType, None)
2024-07-15 06:11:36,442 DEBUG:on stmt: $50return_value.12 = cast(value=$const48.11)
2024-07-15 06:11:36,442 DEBUG:on stmt: return $50return_value.12
2024-07-15 06:11:36,442 DEBUG:defs defaultdict(<class 'list'>,
            {'$26call.5': [(<numba.core.ir.Assign object at 0x00000221B5DA7090>,
                            0)],
             '$42build_slice.10': [(<numba.core.ir.Assign object at 0x00000221B5DA7990>,
                                    0)],
             '$42build_slice.9': [(<numba.core.ir.Assign object at 0x00000221B5DA7890>,
                                   0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x00000221B5DA68D0>,
                                  0)],
             '$50return_value.12': [(<numba.core.ir.Assign object at 0x00000221B5DA7DD0>,
                                     0)],
             '$const38.7': [(<numba.core.ir.Assign object at 0x00000221B5DA74D0>,
                             0)],
             '$const40.8': [(<numba.core.ir.Assign object at 0x00000221B5DA7690>,
                             0)],
             '$const48.11': [(<numba.core.ir.Assign object at 0x00000221B5DA7C10>,
                              0)],
             'threshold': [(<numba.core.ir.Assign object at 0x00000221B5DA6490>,
                            0)],
             'x': [(<numba.core.ir.Assign object at 0x00000221B5DA6390>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x00000221B5DA6690>, 0)],
             'zero_pos': [(<numba.core.ir.Assign object at 0x00000221B5DA6590>,
                           0)]})
2024-07-15 06:11:36,442 DEBUG:SSA violators <numba.core.utils.OrderedSet object at 0x00000221B5DA90D0>
2024-07-15 06:11:36,503 DEBUG:bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	RESUME(arg=0, lineno=1)
           4	LOAD_FAST(arg=0, lineno=2)
           6	LOAD_ATTR(arg=0, lineno=2)
          16	STORE_FAST(arg=3, lineno=2)
          18	LOAD_GLOBAL(arg=2, lineno=3)
          30	LOAD_METHOD(arg=2, lineno=3)
          52	LOAD_FAST(arg=3, lineno=3)
          54	LOAD_GLOBAL(arg=2, lineno=3)
          66	LOAD_ATTR(arg=3, lineno=3)
          76	KW_NAMES(arg=1, lineno=3)
          78	PRECALL(arg=2, lineno=3)
          82	CALL(arg=2, lineno=3)
          92	STORE_FAST(arg=4, lineno=3)
          94	LOAD_CONST(arg=2, lineno=4)
          96	LOAD_FAST(arg=4, lineno=4)
          98	LOAD_CONST(arg=0, lineno=4)
         100	LOAD_CONST(arg=3, lineno=4)
         102	BUILD_SLICE(arg=2, lineno=4)
         104	STORE_SUBSCR(arg=None, lineno=4)
         108	LOAD_CONST(arg=2, lineno=5)
         110	LOAD_FAST(arg=4, lineno=5)
         112	LOAD_CONST(arg=2, lineno=5)
         114	LOAD_CONST(arg=0, lineno=5)
         116	BUILD_SLICE(arg=2, lineno=5)
         118	STORE_SUBSCR(arg=None, lineno=5)
         122	LOAD_GLOBAL(arg=9, lineno=6)
         134	LOAD_GLOBAL(arg=11, lineno=6)
         146	LOAD_CONST(arg=2, lineno=6)
         148	LOAD_CONST(arg=4, lineno=6)
         150	PRECALL(arg=2, lineno=6)
         154	CALL(arg=2, lineno=6)
         164	UNARY_NEGATIVE(arg=None, lineno=6)
         166	LOAD_FAST(arg=3, lineno=6)
         168	LOAD_CONST(arg=2, lineno=6)
         170	BINARY_SUBSCR(arg=None, lineno=6)
         180	LOAD_GLOBAL(arg=13, lineno=6)
         192	LOAD_CONST(arg=2, lineno=6)
         194	LOAD_CONST(arg=2, lineno=6)
         196	PRECALL(arg=2, lineno=6)
         200	CALL(arg=2, lineno=6)
         210	BINARY_OP(arg=10, lineno=6)
         214	PRECALL(arg=2, lineno=6)
         218	CALL(arg=2, lineno=6)
         228	GET_ITER(arg=None, lineno=6)
>        230	FOR_ITER(arg=4, lineno=6)
         232	STORE_FAST(arg=5, lineno=6)
         234	LOAD_CONST(arg=2, lineno=7)
         236	STORE_FAST(arg=6, lineno=7)
         238	JUMP_BACKWARD(arg=5, lineno=7)
>        240	LOAD_FAST(arg=4, lineno=8)
         242	RETURN_VALUE(arg=None, lineno=8)
2024-07-15 06:11:36,503 DEBUG:pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-15 06:11:36,503 DEBUG:stack: []
2024-07-15 06:11:36,503 DEBUG:state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-15 06:11:36,503 DEBUG:dispatch pc=0, inst=NOP(arg=None, lineno=1)
2024-07-15 06:11:36,503 DEBUG:stack []
2024-07-15 06:11:36,503 DEBUG:dispatch pc=2, inst=RESUME(arg=0, lineno=1)
2024-07-15 06:11:36,503 DEBUG:stack []
2024-07-15 06:11:36,503 DEBUG:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2)
2024-07-15 06:11:36,503 DEBUG:stack []
2024-07-15 06:11:36,503 DEBUG:dispatch pc=6, inst=LOAD_ATTR(arg=0, lineno=2)
2024-07-15 06:11:36,503 DEBUG:stack ['$x4.0']
2024-07-15 06:11:36,503 DEBUG:dispatch pc=16, inst=STORE_FAST(arg=3, lineno=2)
2024-07-15 06:11:36,503 DEBUG:stack ['$6load_attr.1']
2024-07-15 06:11:36,503 DEBUG:dispatch pc=18, inst=LOAD_GLOBAL(arg=2, lineno=3)
2024-07-15 06:11:36,503 DEBUG:stack []
2024-07-15 06:11:36,504 DEBUG:dispatch pc=30, inst=LOAD_METHOD(arg=2, lineno=3)
2024-07-15 06:11:36,504 DEBUG:stack ['$18load_global.2']
2024-07-15 06:11:36,504 DEBUG:dispatch pc=52, inst=LOAD_FAST(arg=3, lineno=3)
2024-07-15 06:11:36,504 DEBUG:stack ['$null$30.3', '$30load_method.4']
2024-07-15 06:11:36,504 DEBUG:dispatch pc=54, inst=LOAD_GLOBAL(arg=2, lineno=3)
2024-07-15 06:11:36,504 DEBUG:stack ['$null$30.3', '$30load_method.4', '$full_shape052.5']
2024-07-15 06:11:36,504 DEBUG:dispatch pc=66, inst=LOAD_ATTR(arg=3, lineno=3)
2024-07-15 06:11:36,504 DEBUG:stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$54load_global.6']
2024-07-15 06:11:36,504 DEBUG:dispatch pc=76, inst=KW_NAMES(arg=1, lineno=3)
2024-07-15 06:11:36,504 DEBUG:stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
2024-07-15 06:11:36,504 DEBUG:dispatch pc=78, inst=PRECALL(arg=2, lineno=3)
2024-07-15 06:11:36,504 DEBUG:stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
2024-07-15 06:11:36,504 DEBUG:dispatch pc=82, inst=CALL(arg=2, lineno=3)
2024-07-15 06:11:36,504 DEBUG:stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
2024-07-15 06:11:36,504 DEBUG:dispatch pc=92, inst=STORE_FAST(arg=4, lineno=3)
2024-07-15 06:11:36,504 DEBUG:stack ['$82call.8']
2024-07-15 06:11:36,504 DEBUG:dispatch pc=94, inst=LOAD_CONST(arg=2, lineno=4)
2024-07-15 06:11:36,504 DEBUG:stack []
2024-07-15 06:11:36,504 DEBUG:dispatch pc=96, inst=LOAD_FAST(arg=4, lineno=4)
2024-07-15 06:11:36,504 DEBUG:stack ['$const94.9']
2024-07-15 06:11:36,504 DEBUG:dispatch pc=98, inst=LOAD_CONST(arg=0, lineno=4)
2024-07-15 06:11:36,504 DEBUG:stack ['$const94.9', '$out096.10']
2024-07-15 06:11:36,504 DEBUG:dispatch pc=100, inst=LOAD_CONST(arg=3, lineno=4)
2024-07-15 06:11:36,504 DEBUG:stack ['$const94.9', '$out096.10', '$const98.11']
2024-07-15 06:11:36,504 DEBUG:dispatch pc=102, inst=BUILD_SLICE(arg=2, lineno=4)
2024-07-15 06:11:36,504 DEBUG:stack ['$const94.9', '$out096.10', '$const98.11', '$const100.12']
2024-07-15 06:11:36,504 DEBUG:dispatch pc=104, inst=STORE_SUBSCR(arg=None, lineno=4)
2024-07-15 06:11:36,504 DEBUG:stack ['$const94.9', '$out096.10', '$102build_slice.14']
2024-07-15 06:11:36,504 DEBUG:dispatch pc=108, inst=LOAD_CONST(arg=2, lineno=5)
2024-07-15 06:11:36,504 DEBUG:stack []
2024-07-15 06:11:36,504 DEBUG:dispatch pc=110, inst=LOAD_FAST(arg=4, lineno=5)
2024-07-15 06:11:36,505 DEBUG:stack ['$const108.15']
2024-07-15 06:11:36,505 DEBUG:dispatch pc=112, inst=LOAD_CONST(arg=2, lineno=5)
2024-07-15 06:11:36,505 DEBUG:stack ['$const108.15', '$out0110.16']
2024-07-15 06:11:36,505 DEBUG:dispatch pc=114, inst=LOAD_CONST(arg=0, lineno=5)
2024-07-15 06:11:36,505 DEBUG:stack ['$const108.15', '$out0110.16', '$const112.17']
2024-07-15 06:11:36,505 DEBUG:dispatch pc=116, inst=BUILD_SLICE(arg=2, lineno=5)
2024-07-15 06:11:36,505 DEBUG:stack ['$const108.15', '$out0110.16', '$const112.17', '$const114.18']
2024-07-15 06:11:36,505 DEBUG:dispatch pc=118, inst=STORE_SUBSCR(arg=None, lineno=5)
2024-07-15 06:11:36,505 DEBUG:stack ['$const108.15', '$out0110.16', '$116build_slice.20']
2024-07-15 06:11:36,505 DEBUG:dispatch pc=122, inst=LOAD_GLOBAL(arg=9, lineno=6)
2024-07-15 06:11:36,505 DEBUG:stack []
2024-07-15 06:11:36,505 DEBUG:dispatch pc=134, inst=LOAD_GLOBAL(arg=11, lineno=6)
2024-07-15 06:11:36,505 DEBUG:stack ['$null$122.22', '$122load_global.21']
2024-07-15 06:11:36,505 DEBUG:dispatch pc=146, inst=LOAD_CONST(arg=2, lineno=6)
2024-07-15 06:11:36,505 DEBUG:stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23']
2024-07-15 06:11:36,505 DEBUG:dispatch pc=148, inst=LOAD_CONST(arg=4, lineno=6)
2024-07-15 06:11:36,505 DEBUG:stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25']
2024-07-15 06:11:36,505 DEBUG:dispatch pc=150, inst=PRECALL(arg=2, lineno=6)
2024-07-15 06:11:36,505 DEBUG:stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25', '$const148.26']
2024-07-15 06:11:36,505 DEBUG:dispatch pc=154, inst=CALL(arg=2, lineno=6)
2024-07-15 06:11:36,505 DEBUG:stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25', '$const148.26']
2024-07-15 06:11:36,505 DEBUG:dispatch pc=164, inst=UNARY_NEGATIVE(arg=None, lineno=6)
2024-07-15 06:11:36,505 DEBUG:stack ['$null$122.22', '$122load_global.21', '$154call.27']
2024-07-15 06:11:36,505 DEBUG:dispatch pc=166, inst=LOAD_FAST(arg=3, lineno=6)
2024-07-15 06:11:36,505 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28']
2024-07-15 06:11:36,505 DEBUG:dispatch pc=168, inst=LOAD_CONST(arg=2, lineno=6)
2024-07-15 06:11:36,505 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$full_shape0166.29']
2024-07-15 06:11:36,505 DEBUG:dispatch pc=170, inst=BINARY_SUBSCR(arg=None, lineno=6)
2024-07-15 06:11:36,505 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$full_shape0166.29', '$const168.30']
2024-07-15 06:11:36,505 DEBUG:dispatch pc=180, inst=LOAD_GLOBAL(arg=13, lineno=6)
2024-07-15 06:11:36,505 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31']
2024-07-15 06:11:36,506 DEBUG:dispatch pc=192, inst=LOAD_CONST(arg=2, lineno=6)
2024-07-15 06:11:36,506 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32']
2024-07-15 06:11:36,506 DEBUG:dispatch pc=194, inst=LOAD_CONST(arg=2, lineno=6)
2024-07-15 06:11:36,506 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34']
2024-07-15 06:11:36,506 DEBUG:dispatch pc=196, inst=PRECALL(arg=2, lineno=6)
2024-07-15 06:11:36,506 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34', '$const194.35']
2024-07-15 06:11:36,506 DEBUG:dispatch pc=200, inst=CALL(arg=2, lineno=6)
2024-07-15 06:11:36,506 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34', '$const194.35']
2024-07-15 06:11:36,506 DEBUG:dispatch pc=210, inst=BINARY_OP(arg=10, lineno=6)
2024-07-15 06:11:36,506 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$200call.36']
2024-07-15 06:11:36,506 DEBUG:dispatch pc=214, inst=PRECALL(arg=2, lineno=6)
2024-07-15 06:11:36,506 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$binop_sub210.37']
2024-07-15 06:11:36,506 DEBUG:dispatch pc=218, inst=CALL(arg=2, lineno=6)
2024-07-15 06:11:36,506 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$binop_sub210.37']
2024-07-15 06:11:36,506 DEBUG:dispatch pc=228, inst=GET_ITER(arg=None, lineno=6)
2024-07-15 06:11:36,507 DEBUG:stack ['$218call.38']
2024-07-15 06:11:36,507 DEBUG:end state. edges=[Edge(pc=230, stack=('$228get_iter.39',), blockstack=(), npush=0)]
2024-07-15 06:11:36,507 DEBUG:pending: deque([State(pc_initial=230 nstack_initial=1)])
2024-07-15 06:11:36,507 DEBUG:stack: ['$phi230.0']
2024-07-15 06:11:36,507 DEBUG:state.pc_initial: State(pc_initial=230 nstack_initial=1)
2024-07-15 06:11:36,507 DEBUG:dispatch pc=230, inst=FOR_ITER(arg=4, lineno=6)
2024-07-15 06:11:36,507 DEBUG:stack ['$phi230.0']
2024-07-15 06:11:36,507 DEBUG:end state. edges=[Edge(pc=240, stack=(), blockstack=(), npush=0), Edge(pc=232, stack=('$phi230.0', '$230for_iter.2'), blockstack=(), npush=0)]
2024-07-15 06:11:36,507 DEBUG:pending: deque([State(pc_initial=240 nstack_initial=0), State(pc_initial=232 nstack_initial=2)])
2024-07-15 06:11:36,507 DEBUG:stack: []
2024-07-15 06:11:36,507 DEBUG:state.pc_initial: State(pc_initial=240 nstack_initial=0)
2024-07-15 06:11:36,507 DEBUG:dispatch pc=240, inst=LOAD_FAST(arg=4, lineno=8)
2024-07-15 06:11:36,507 DEBUG:stack []
2024-07-15 06:11:36,507 DEBUG:dispatch pc=242, inst=RETURN_VALUE(arg=None, lineno=8)
2024-07-15 06:11:36,507 DEBUG:stack ['$out0240.0']
2024-07-15 06:11:36,507 DEBUG:end state. edges=[]
2024-07-15 06:11:36,507 DEBUG:pending: deque([State(pc_initial=232 nstack_initial=2)])
2024-07-15 06:11:36,507 DEBUG:stack: ['$phi232.0', '$phi232.1']
2024-07-15 06:11:36,507 DEBUG:state.pc_initial: State(pc_initial=232 nstack_initial=2)
2024-07-15 06:11:36,507 DEBUG:dispatch pc=232, inst=STORE_FAST(arg=5, lineno=6)
2024-07-15 06:11:36,507 DEBUG:stack ['$phi232.0', '$phi232.1']
2024-07-15 06:11:36,507 DEBUG:dispatch pc=234, inst=LOAD_CONST(arg=2, lineno=7)
2024-07-15 06:11:36,507 DEBUG:stack ['$phi232.0']
2024-07-15 06:11:36,507 DEBUG:dispatch pc=236, inst=STORE_FAST(arg=6, lineno=7)
2024-07-15 06:11:36,507 DEBUG:stack ['$phi232.0', '$const234.2']
2024-07-15 06:11:36,507 DEBUG:dispatch pc=238, inst=JUMP_BACKWARD(arg=5, lineno=7)
2024-07-15 06:11:36,507 DEBUG:stack ['$phi232.0']
2024-07-15 06:11:36,507 DEBUG:end state. edges=[Edge(pc=230, stack=('$phi232.0',), blockstack=(), npush=0)]
2024-07-15 06:11:36,507 DEBUG:pending: deque([State(pc_initial=230 nstack_initial=1)])
2024-07-15 06:11:36,507 DEBUG:-------------------------Prune PHIs-------------------------
2024-07-15 06:11:36,507 DEBUG:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=230 nstack_initial=1): {'$phi230.0'},
             State(pc_initial=232 nstack_initial=2): {'$phi232.1'},
             State(pc_initial=240 nstack_initial=0): set()})
2024-07-15 06:11:36,507 DEBUG:defmap: {'$phi230.0': State(pc_initial=0 nstack_initial=0),
 '$phi232.1': State(pc_initial=230 nstack_initial=1)}
2024-07-15 06:11:36,507 DEBUG:phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi232.0',
                            State(pc_initial=232 nstack_initial=2))},
             '$phi232.0': {('$phi230.0',
                            State(pc_initial=230 nstack_initial=1))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-07-15 06:11:36,507 DEBUG:changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi230.0',
                            State(pc_initial=230 nstack_initial=1))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-07-15 06:11:36,508 DEBUG:changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-07-15 06:11:36,508 DEBUG:changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-07-15 06:11:36,508 DEBUG:keep phismap: {'$phi230.0': {('$228get_iter.39', State(pc_initial=0 nstack_initial=0))},
 '$phi232.1': {('$230for_iter.2', State(pc_initial=230 nstack_initial=1))}}
2024-07-15 06:11:36,508 DEBUG:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi230.0': '$228get_iter.39'},
             State(pc_initial=230 nstack_initial=1): {'$phi232.1': '$230for_iter.2'}})
2024-07-15 06:11:36,508 DEBUG:----------------------DONE Prune PHIs-----------------------
2024-07-15 06:11:36,508 DEBUG:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'item': '$x4.0', 'res': '$6load_attr.1'}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'value': '$6load_attr.1'}), (18, {'idx': 1, 'res': '$18load_global.2'}), (20, {}), (22, {}), (24, {}), (26, {}), (28, {}), (30, {'item': '$18load_global.2', 'res': '$30load_method.4'}), (32, {}), (34, {}), (36, {}), (38, {}), (40, {}), (42, {}), (44, {}), (46, {}), (48, {}), (50, {}), (52, {'res': '$full_shape052.5'}), (54, {'idx': 1, 'res': '$54load_global.6'}), (56, {}), (58, {}), (60, {}), (62, {}), (64, {}), (66, {'item': '$54load_global.6', 'res': '$66load_attr.7'}), (68, {}), (70, {}), (72, {}), (74, {}), (78, {}), (80, {}), (82, {'func': '$30load_method.4', 'args': ['$full_shape052.5', '$66load_attr.7'], 'kw_names': 1, 'res': '$82call.8'}), (84, {}), (86, {}), (88, {}), (90, {}), (92, {'value': '$82call.8'}), (94, {'res': '$const94.9'}), (96, {'res': '$out096.10'}), (98, {'res': '$const98.11'}), (100, {'res': '$const100.12'}), (102, {'start': '$const98.11', 'stop': '$const100.12', 'step': None, 'res': '$102build_slice.14', 'slicevar': '$102build_slice.13'}), (104, {'target': '$out096.10', 'index': '$102build_slice.14', 'value': '$const94.9'}), (106, {}), (108, {'res': '$const108.15'}), (110, {'res': '$out0110.16'}), (112, {'res': '$const112.17'}), (114, {'res': '$const114.18'}), (116, {'start': '$const112.17', 'stop': '$const114.18', 'step': None, 'res': '$116build_slice.20', 'slicevar': '$116build_slice.19'}), (118, {'target': '$out0110.16', 'index': '$116build_slice.20', 'value': '$const108.15'}), (120, {}), (122, {'idx': 4, 'res': '$122load_global.21'}), (124, {}), (126, {}), (128, {}), (130, {}), (132, {}), (134, {'idx': 5, 'res': '$134load_global.23'}), (136, {}), (138, {}), (140, {}), (142, {}), (144, {}), (146, {'res': '$const146.25'}), (148, {'res': '$const148.26'}), (150, {}), (152, {}), (154, {'func': '$134load_global.23', 'args': ['$const146.25', '$const148.26'], 'kw_names': None, 'res': '$154call.27'}), (156, {}), (158, {}), (160, {}), (162, {}), (164, {'value': '$154call.27', 'res': '$164unary_negative.28'}), (166, {'res': '$full_shape0166.29'}), (168, {'res': '$const168.30'}), (170, {'index': '$const168.30', 'target': '$full_shape0166.29', 'res': '$170binary_subscr.31'}), (172, {}), (174, {}), (176, {}), (178, {}), (180, {'idx': 6, 'res': '$180load_global.32'}), (182, {}), (184, {}), (186, {}), (188, {}), (190, {}), (192, {'res': '$const192.34'}), (194, {'res': '$const194.35'}), (196, {}), (198, {}), (200, {'func': '$180load_global.32', 'args': ['$const192.34', '$const194.35'], 'kw_names': None, 'res': '$200call.36'}), (202, {}), (204, {}), (206, {}), (208, {}), (210, {'op': '-', 'lhs': '$170binary_subscr.31', 'rhs': '$200call.36', 'res': '$binop_sub210.37'}), (212, {}), (214, {}), (216, {}), (218, {'func': '$122load_global.21', 'args': ['$164unary_negative.28', '$binop_sub210.37'], 'kw_names': None, 'res': '$218call.38'}), (220, {}), (222, {}), (224, {}), (226, {}), (228, {'value': '$218call.38', 'res': '$228get_iter.39'})), outgoing_phis={'$phi230.0': '$228get_iter.39'}, blockstack=(), active_try_block=None, outgoing_edgepushed={230: ('$228get_iter.39',)})
2024-07-15 06:11:36,508 DEBUG:block_infos State(pc_initial=230 nstack_initial=1):
AdaptBlockInfo(insts=((230, {'iterator': '$phi230.0', 'pair': '$230for_iter.1', 'indval': '$230for_iter.2', 'pred': '$230for_iter.3'}),), outgoing_phis={'$phi232.1': '$230for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={240: (), 232: ('$phi230.0', '$230for_iter.2')})
2024-07-15 06:11:36,508 DEBUG:block_infos State(pc_initial=232 nstack_initial=2):
AdaptBlockInfo(insts=((232, {'value': '$phi232.1'}), (234, {'res': '$const234.2'}), (236, {'value': '$const234.2'}), (238, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={230: ('$phi232.0',)})
2024-07-15 06:11:36,508 DEBUG:block_infos State(pc_initial=240 nstack_initial=0):
AdaptBlockInfo(insts=((240, {'res': '$out0240.0'}), (242, {'retval': '$out0240.0', 'castval': '$242return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-15 06:11:36,509 DEBUG:label 0:
    x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $18load_global.2 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$18load_global.2']
    $30load_method.4 = getattr(value=$18load_global.2, attr=empty) ['$18load_global.2', '$30load_method.4']
    $54load_global.6 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$54load_global.6']
    $66load_attr.7 = getattr(value=$54load_global.6, attr=bool_) ['$54load_global.6', '$66load_attr.7']
    out0 = call $30load_method.4(full_shape0, func=$30load_method.4, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7, <string>:3))], vararg=None, varkwarg=None, target=None) ['$30load_method.4', '$66load_attr.7', 'full_shape0', 'out0']
    $const94.9 = const(int, 0)               ['$const94.9']
    $const98.11 = const(NoneType, None)      ['$const98.11']
    $const100.12 = const(int, 1)             ['$const100.12']
    $102build_slice.13 = global(slice: <class 'slice'>) ['$102build_slice.13']
    $102build_slice.14 = call $102build_slice.13($const98.11, $const100.12, func=$102build_slice.13, args=(Var($const98.11, <string>:4), Var($const100.12, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$102build_slice.13', '$102build_slice.14', '$const100.12', '$const98.11']
    out0[$102build_slice.14] = $const94.9    ['$102build_slice.14', '$const94.9', 'out0']
    $const108.15 = const(int, 0)             ['$const108.15']
    $const112.17 = const(int, 0)             ['$const112.17']
    $const114.18 = const(NoneType, None)     ['$const114.18']
    $116build_slice.19 = global(slice: <class 'slice'>) ['$116build_slice.19']
    $116build_slice.20 = call $116build_slice.19($const112.17, $const114.18, func=$116build_slice.19, args=(Var($const112.17, <string>:5), Var($const114.18, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$116build_slice.19', '$116build_slice.20', '$const112.17', '$const114.18']
    out0[$116build_slice.20] = $const108.15  ['$116build_slice.20', '$const108.15', 'out0']
    $122load_global.21 = global(range: <class 'range'>) ['$122load_global.21']
    $134load_global.23 = global(min: <built-in function min>) ['$134load_global.23']
    $const146.25 = const(int, 0)             ['$const146.25']
    $const148.26 = const(int, -1)            ['$const148.26']
    $154call.27 = call $134load_global.23($const146.25, $const148.26, func=$134load_global.23, args=[Var($const146.25, <string>:6), Var($const148.26, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$134load_global.23', '$154call.27', '$const146.25', '$const148.26']
    $164unary_negative.28 = unary(fn=<built-in function neg>, value=$154call.27) ['$154call.27', '$164unary_negative.28']
    $const168.30 = const(int, 0)             ['$const168.30']
    $170binary_subscr.31 = getitem(value=full_shape0, index=$const168.30, fn=<built-in function getitem>) ['$170binary_subscr.31', '$const168.30', 'full_shape0']
    $180load_global.32 = global(max: <built-in function max>) ['$180load_global.32']
    $const192.34 = const(int, 0)             ['$const192.34']
    $const194.35 = const(int, 0)             ['$const194.35']
    $200call.36 = call $180load_global.32($const192.34, $const194.35, func=$180load_global.32, args=[Var($const192.34, <string>:6), Var($const194.35, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$180load_global.32', '$200call.36', '$const192.34', '$const194.35']
    $binop_sub210.37 = $170binary_subscr.31 - $200call.36 ['$170binary_subscr.31', '$200call.36', '$binop_sub210.37']
    $218call.38 = call $122load_global.21($164unary_negative.28, $binop_sub210.37, func=$122load_global.21, args=[Var($164unary_negative.28, <string>:6), Var($binop_sub210.37, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$122load_global.21', '$164unary_negative.28', '$218call.38', '$binop_sub210.37']
    $228get_iter.39 = getiter(value=$218call.38) ['$218call.38', '$228get_iter.39']
    $phi230.0 = $228get_iter.39              ['$228get_iter.39', '$phi230.0']
    jump 230                                 []
label 230:
    $230for_iter.1 = iternext(value=$phi230.0) ['$230for_iter.1', '$phi230.0']
    $230for_iter.2 = pair_first(value=$230for_iter.1) ['$230for_iter.1', '$230for_iter.2']
    $230for_iter.3 = pair_second(value=$230for_iter.1) ['$230for_iter.1', '$230for_iter.3']
    $phi232.1 = $230for_iter.2               ['$230for_iter.2', '$phi232.1']
    branch $230for_iter.3, 232, 240          ['$230for_iter.3']
label 232:
    index00 = $phi232.1                      ['$phi232.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 230                                 []
label 240:
    $242return_value.1 = cast(value=out0)    ['$242return_value.1', 'out0']
    return $242return_value.1                ['$242return_value.1']

2024-07-15 06:11:36,534 DEBUG:==== SSA block analysis pass on 0
2024-07-15 06:11:36,534 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5E2DF50>
2024-07-15 06:11:36,534 DEBUG:on stmt: x = arg(0, name=x)
2024-07-15 06:11:36,534 DEBUG:on stmt: threshold = arg(1, name=threshold)
2024-07-15 06:11:36,534 DEBUG:on stmt: zero_pos = arg(2, name=zero_pos)
2024-07-15 06:11:36,534 DEBUG:on stmt: full_shape0 = getattr(value=x, attr=shape)
2024-07-15 06:11:36,534 DEBUG:on stmt: $18load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:36,534 DEBUG:on stmt: $30load_method.4.1 = getattr(value=$18load_global.2.1, attr=empty)
2024-07-15 06:11:36,534 DEBUG:on stmt: $54load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:36,534 DEBUG:on stmt: $66load_attr.7.1 = getattr(value=$54load_global.6.1, attr=bool_)
2024-07-15 06:11:36,534 DEBUG:on stmt: out0 = call $30load_method.4.1(full_shape0, func=$30load_method.4.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:36,535 DEBUG:on stmt: $const94.9.1 = const(int, 0)
2024-07-15 06:11:36,535 DEBUG:on stmt: $const98.11.1 = const(NoneType, None)
2024-07-15 06:11:36,535 DEBUG:on stmt: $const100.12.1 = const(int, 1)
2024-07-15 06:11:36,535 DEBUG:on stmt: $102build_slice.13.1 = global(slice: <class 'slice'>)
2024-07-15 06:11:36,535 DEBUG:on stmt: $102build_slice.14.1 = call $102build_slice.13.1($const98.11.1, $const100.12.1, func=$102build_slice.13.1, args=(Var($const98.11.1, <string>:4), Var($const100.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:36,535 DEBUG:on stmt: out0[$102build_slice.14.1] = $const94.9.1
2024-07-15 06:11:36,535 DEBUG:on stmt: $const108.15.1 = const(int, 0)
2024-07-15 06:11:36,535 DEBUG:on stmt: $const112.17.1 = const(int, 0)
2024-07-15 06:11:36,535 DEBUG:on stmt: $const114.18.1 = const(NoneType, None)
2024-07-15 06:11:36,535 DEBUG:on stmt: $116build_slice.19.1 = global(slice: <class 'slice'>)
2024-07-15 06:11:36,535 DEBUG:on stmt: $116build_slice.20.1 = call $116build_slice.19.1($const112.17.1, $const114.18.1, func=$116build_slice.19.1, args=(Var($const112.17.1, <string>:5), Var($const114.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:36,535 DEBUG:on stmt: out0[$116build_slice.20.1] = $const108.15.1
2024-07-15 06:11:36,535 DEBUG:on stmt: $122load_global.21.1 = global(range: <class 'range'>)
2024-07-15 06:11:36,535 DEBUG:on stmt: $134load_global.23.1 = global(min: <built-in function min>)
2024-07-15 06:11:36,535 DEBUG:on stmt: $const146.25.1 = const(int, 0)
2024-07-15 06:11:36,535 DEBUG:on stmt: $const148.26.1 = const(int, -1)
2024-07-15 06:11:36,535 DEBUG:on stmt: $154call.27.1 = call $134load_global.23.1($const146.25.1, $const148.26.1, func=$134load_global.23.1, args=[Var($const146.25.1, <string>:6), Var($const148.26.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:36,535 DEBUG:on stmt: $164unary_negative.28.1 = unary(fn=<built-in function neg>, value=$154call.27.1)
2024-07-15 06:11:36,535 DEBUG:on stmt: $const168.30.1 = const(int, 0)
2024-07-15 06:11:36,535 DEBUG:on stmt: $170binary_subscr.31.1 = getitem(value=full_shape0, index=$const168.30.1, fn=<built-in function getitem>)
2024-07-15 06:11:36,535 DEBUG:on stmt: $180load_global.32.1 = global(max: <built-in function max>)
2024-07-15 06:11:36,535 DEBUG:on stmt: $const192.34.1 = const(int, 0)
2024-07-15 06:11:36,535 DEBUG:on stmt: $const194.35.1 = const(int, 0)
2024-07-15 06:11:36,535 DEBUG:on stmt: $200call.36.1 = call $180load_global.32.1($const192.34.1, $const194.35.1, func=$180load_global.32.1, args=[Var($const192.34.1, <string>:6), Var($const194.35.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:36,535 DEBUG:on stmt: $binop_sub210.37.1 = $170binary_subscr.31.1 - $200call.36.1
2024-07-15 06:11:36,536 DEBUG:on stmt: $218call.38.1 = call $122load_global.21.1($164unary_negative.28.1, $binop_sub210.37.1, func=$122load_global.21.1, args=[Var($164unary_negative.28.1, <string>:6), Var($binop_sub210.37.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:36,536 DEBUG:on stmt: $228get_iter.39.1 = getiter(value=$218call.38.1)
2024-07-15 06:11:36,536 DEBUG:on stmt: $phi230.0.1 = $228get_iter.39.1
2024-07-15 06:11:36,536 DEBUG:on stmt: jump 230
2024-07-15 06:11:36,536 DEBUG:==== SSA block analysis pass on 230
2024-07-15 06:11:36,536 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5E2DF50>
2024-07-15 06:11:36,536 DEBUG:on stmt: $230for_iter.1.1 = iternext(value=$phi230.0.1)
2024-07-15 06:11:36,536 DEBUG:on stmt: $230for_iter.2.1 = pair_first(value=$230for_iter.1.1)
2024-07-15 06:11:36,536 DEBUG:on stmt: $230for_iter.3.1 = pair_second(value=$230for_iter.1.1)
2024-07-15 06:11:36,536 DEBUG:on stmt: $phi232.1.1 = $230for_iter.2.1
2024-07-15 06:11:36,536 DEBUG:on stmt: branch $230for_iter.3.1, 232, 442
2024-07-15 06:11:36,536 DEBUG:==== SSA block analysis pass on 232
2024-07-15 06:11:36,536 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5E2DF50>
2024-07-15 06:11:36,536 DEBUG:on stmt: index00 = $phi232.1.1
2024-07-15 06:11:36,536 DEBUG:on stmt: jump 240
2024-07-15 06:11:36,536 DEBUG:==== SSA block analysis pass on 442
2024-07-15 06:11:36,536 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5E2DF50>
2024-07-15 06:11:36,536 DEBUG:on stmt: $242return_value.1.1 = cast(value=out0)
2024-07-15 06:11:36,536 DEBUG:on stmt: return $242return_value.1.1
2024-07-15 06:11:36,536 DEBUG:==== SSA block analysis pass on 240
2024-07-15 06:11:36,536 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5E2DF50>
2024-07-15 06:11:36,536 DEBUG:on stmt: $const6.1 = const(int, 0)
2024-07-15 06:11:36,536 DEBUG:on stmt: stencil_index = $const6.1 + index00
2024-07-15 06:11:36,536 DEBUG:on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-07-15 06:11:36,536 DEBUG:on stmt: $22unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2024-07-15 06:11:36,536 DEBUG:on stmt: $30compare_op.6 = $22unary_negative.4 <= x0
2024-07-15 06:11:36,536 DEBUG:on stmt: bool36 = global(bool: <class 'bool'>)
2024-07-15 06:11:36,536 DEBUG:on stmt: $36pred = call bool36($30compare_op.6, func=bool36, args=(Var($30compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:36,536 DEBUG:on stmt: $phi38.0 = x0
2024-07-15 06:11:36,536 DEBUG:on stmt: branch $36pred, 241, 291
2024-07-15 06:11:36,536 DEBUG:==== SSA block analysis pass on 241
2024-07-15 06:11:36,537 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5E2DF50>
2024-07-15 06:11:36,537 DEBUG:on stmt: $40compare_op.2 = x0 <= threshold
2024-07-15 06:11:36,537 DEBUG:on stmt: bool46 = global(bool: <class 'bool'>)
2024-07-15 06:11:36,537 DEBUG:on stmt: $46pred = call bool46($40compare_op.2, func=bool46, args=(Var($40compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:36,537 DEBUG:on stmt: branch $46pred, 279, 295
2024-07-15 06:11:36,537 DEBUG:==== SSA block analysis pass on 279
2024-07-15 06:11:36,537 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5E2DF50>
2024-07-15 06:11:36,537 DEBUG:on stmt: jump 289
2024-07-15 06:11:36,537 DEBUG:==== SSA block analysis pass on 291
2024-07-15 06:11:36,537 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5E2DF50>
2024-07-15 06:11:36,537 DEBUG:on stmt: jump 295
2024-07-15 06:11:36,537 DEBUG:==== SSA block analysis pass on 289
2024-07-15 06:11:36,537 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5E2DF50>
2024-07-15 06:11:36,537 DEBUG:on stmt: x0 = const(int, 0)
2024-07-15 06:11:36,537 DEBUG:on stmt: jump 295
2024-07-15 06:11:36,537 DEBUG:==== SSA block analysis pass on 295
2024-07-15 06:11:36,537 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5E2DF50>
2024-07-15 06:11:36,537 DEBUG:on stmt: $const60.1 = const(int, -1)
2024-07-15 06:11:36,537 DEBUG:on stmt: stencil_index = $const60.1 + index00
2024-07-15 06:11:36,537 DEBUG:on stmt: x1 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-07-15 06:11:36,537 DEBUG:on stmt: $76unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2024-07-15 06:11:36,537 DEBUG:on stmt: $84compare_op.6 = $76unary_negative.4 <= x1
2024-07-15 06:11:36,537 DEBUG:on stmt: bool90 = global(bool: <class 'bool'>)
2024-07-15 06:11:36,537 DEBUG:on stmt: $90pred = call bool90($84compare_op.6, func=bool90, args=(Var($84compare_op.6, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:36,537 DEBUG:on stmt: $phi92.0 = x1
2024-07-15 06:11:36,537 DEBUG:on stmt: branch $90pred, 299, 345
2024-07-15 06:11:36,537 DEBUG:==== SSA block analysis pass on 299
2024-07-15 06:11:36,537 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5E2DF50>
2024-07-15 06:11:36,537 DEBUG:on stmt: $94compare_op.2 = x1 <= threshold
2024-07-15 06:11:36,537 DEBUG:on stmt: bool100 = global(bool: <class 'bool'>)
2024-07-15 06:11:36,537 DEBUG:on stmt: $100pred = call bool100($94compare_op.2, func=bool100, args=(Var($94compare_op.2, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:36,537 DEBUG:on stmt: branch $100pred, 333, 349
2024-07-15 06:11:36,538 DEBUG:==== SSA block analysis pass on 333
2024-07-15 06:11:36,538 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5E2DF50>
2024-07-15 06:11:36,538 DEBUG:on stmt: jump 343
2024-07-15 06:11:36,538 DEBUG:==== SSA block analysis pass on 345
2024-07-15 06:11:36,538 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5E2DF50>
2024-07-15 06:11:36,538 DEBUG:on stmt: jump 349
2024-07-15 06:11:36,538 DEBUG:==== SSA block analysis pass on 343
2024-07-15 06:11:36,538 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5E2DF50>
2024-07-15 06:11:36,538 DEBUG:on stmt: x1 = const(int, 0)
2024-07-15 06:11:36,538 DEBUG:on stmt: jump 349
2024-07-15 06:11:36,538 DEBUG:==== SSA block analysis pass on 349
2024-07-15 06:11:36,538 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5E2DF50>
2024-07-15 06:11:36,538 DEBUG:on stmt: bool114 = global(bool: <class 'bool'>)
2024-07-15 06:11:36,538 DEBUG:on stmt: $114pred = call bool114(zero_pos, func=bool114, args=(Var(zero_pos, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:36,538 DEBUG:on stmt: branch $114pred, 353, 357
2024-07-15 06:11:36,538 DEBUG:==== SSA block analysis pass on 353
2024-07-15 06:11:36,538 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5E2DF50>
2024-07-15 06:11:36,538 DEBUG:on stmt: $116load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:36,538 DEBUG:on stmt: $128load_attr.2 = getattr(value=$116load_global.0, attr=signbit)
2024-07-15 06:11:36,538 DEBUG:on stmt: $144call.4 = call $128load_attr.2(x0, func=$128load_attr.2, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:36,538 DEBUG:on stmt: $154load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:36,538 DEBUG:on stmt: $166load_attr.7 = getattr(value=$154load_global.5, attr=signbit)
2024-07-15 06:11:36,538 DEBUG:on stmt: $182call.9 = call $166load_attr.7(x1, func=$166load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:36,538 DEBUG:on stmt: $192compare_op.10 = $144call.4 != $182call.9
2024-07-15 06:11:36,538 DEBUG:on stmt: $198return_value.11 = cast(value=$192compare_op.10)
2024-07-15 06:11:36,538 DEBUG:on stmt: out0[index00] = $198return_value.11
2024-07-15 06:11:36,538 DEBUG:on stmt: jump 441
2024-07-15 06:11:36,538 DEBUG:==== SSA block analysis pass on 357
2024-07-15 06:11:36,538 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5E2DF50>
2024-07-15 06:11:36,538 DEBUG:on stmt: $200load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:36,538 DEBUG:on stmt: $212load_attr.2 = getattr(value=$200load_global.0, attr=sign)
2024-07-15 06:11:36,538 DEBUG:on stmt: $228call.4 = call $212load_attr.2(x0, func=$212load_attr.2, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:36,538 DEBUG:on stmt: $238load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:36,539 DEBUG:on stmt: $250load_attr.7 = getattr(value=$238load_global.5, attr=sign)
2024-07-15 06:11:36,539 DEBUG:on stmt: $266call.9 = call $250load_attr.7(x1, func=$250load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:36,539 DEBUG:on stmt: $276compare_op.10 = $228call.4 != $266call.9
2024-07-15 06:11:36,539 DEBUG:on stmt: $282return_value.11 = cast(value=$276compare_op.10)
2024-07-15 06:11:36,539 DEBUG:on stmt: out0[index00] = $282return_value.11
2024-07-15 06:11:36,539 DEBUG:on stmt: jump 441
2024-07-15 06:11:36,539 DEBUG:==== SSA block analysis pass on 441
2024-07-15 06:11:36,539 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5E2DF50>
2024-07-15 06:11:36,539 DEBUG:on stmt: jump 230
2024-07-15 06:11:36,540 DEBUG:defs defaultdict(<class 'list'>,
            {'$100pred': [(<numba.core.ir.Assign object at 0x00000221B5DEB0D0>,
                           299)],
             '$102build_slice.13.1': [(<numba.core.ir.Assign object at 0x00000221B5E2EA90>,
                                       0)],
             '$102build_slice.14.1': [(<numba.core.ir.Assign object at 0x00000221B5E2EC10>,
                                       0)],
             '$114pred': [(<numba.core.ir.Assign object at 0x00000221B5DFFD90>,
                           349)],
             '$116build_slice.19.1': [(<numba.core.ir.Assign object at 0x00000221B5E2F410>,
                                       0)],
             '$116build_slice.20.1': [(<numba.core.ir.Assign object at 0x00000221B5E2F590>,
                                       0)],
             '$116load_global.0': [(<numba.core.ir.Assign object at 0x00000221B5AC0150>,
                                    353)],
             '$122load_global.21.1': [(<numba.core.ir.Assign object at 0x00000221B5E2F7D0>,
                                       0)],
             '$128load_attr.2': [(<numba.core.ir.Assign object at 0x00000221B5E08A10>,
                                  353)],
             '$134load_global.23.1': [(<numba.core.ir.Assign object at 0x00000221B5E2FAD0>,
                                       0)],
             '$144call.4': [(<numba.core.ir.Assign object at 0x00000221B5E0A490>,
                             353)],
             '$154call.27.1': [(<numba.core.ir.Assign object at 0x00000221B5E30290>,
                                0)],
             '$154load_global.5': [(<numba.core.ir.Assign object at 0x00000221B5E08650>,
                                    353)],
             '$164unary_negative.28.1': [(<numba.core.ir.Assign object at 0x00000221B5E30590>,
                                          0)],
             '$166load_attr.7': [(<numba.core.ir.Assign object at 0x00000221B5DA5250>,
                                  353)],
             '$170binary_subscr.31.1': [(<numba.core.ir.Assign object at 0x00000221B5E30AD0>,
                                         0)],
             '$180load_global.32.1': [(<numba.core.ir.Assign object at 0x00000221B5E30D90>,
                                       0)],
             '$182call.9': [(<numba.core.ir.Assign object at 0x00000221B5DA4110>,
                             353)],
             '$18load_global.2.1': [(<numba.core.ir.Assign object at 0x00000221B5E2D010>,
                                     0)],
             '$192compare_op.10': [(<numba.core.ir.Assign object at 0x00000221B5D393D0>,
                                    353)],
             '$198return_value.11': [(<numba.core.ir.Assign object at 0x00000221B5DA1990>,
                                      353)],
             '$200call.36.1': [(<numba.core.ir.Assign object at 0x00000221B5E31450>,
                                0)],
             '$200load_global.0': [(<numba.core.ir.Assign object at 0x00000221B5D4C810>,
                                    357)],
             '$212load_attr.2': [(<numba.core.ir.Assign object at 0x00000221B5D4CBD0>,
                                  357)],
             '$218call.38.1': [(<numba.core.ir.Assign object at 0x00000221B5E31950>,
                                0)],
             '$228call.4': [(<numba.core.ir.Assign object at 0x00000221B5D92690>,
                             357)],
             '$228get_iter.39.1': [(<numba.core.ir.Assign object at 0x00000221B5E31BD0>,
                                    0)],
             '$22unary_negative.4': [(<numba.core.ir.Assign object at 0x00000221B5A7E050>,
                                      240)],
             '$230for_iter.1.1': [(<numba.core.ir.Assign object at 0x00000221B5E31DD0>,
                                   230)],
             '$230for_iter.2.1': [(<numba.core.ir.Assign object at 0x00000221B5E31F10>,
                                   230)],
             '$230for_iter.3.1': [(<numba.core.ir.Assign object at 0x00000221B5E32090>,
                                   230)],
             '$238load_global.5': [(<numba.core.ir.Assign object at 0x00000221B5D920D0>,
                                    357)],
             '$242return_value.1.1': [(<numba.core.ir.Assign object at 0x00000221B5E32BD0>,
                                       442)],
             '$250load_attr.7': [(<numba.core.ir.Assign object at 0x00000221B5D3DA10>,
                                  357)],
             '$266call.9': [(<numba.core.ir.Assign object at 0x00000221B5D3D890>,
                             357)],
             '$276compare_op.10': [(<numba.core.ir.Assign object at 0x00000221B5D3FBD0>,
                                    357)],
             '$282return_value.11': [(<numba.core.ir.Assign object at 0x00000221B5E11050>,
                                      357)],
             '$30compare_op.6': [(<numba.core.ir.Assign object at 0x00000221B5A7F110>,
                                  240)],
             '$30load_method.4.1': [(<numba.core.ir.Assign object at 0x00000221B5E2D350>,
                                     0)],
             '$36pred': [(<numba.core.ir.Assign object at 0x00000221B5DB5450>,
                          240)],
             '$40compare_op.2': [(<numba.core.ir.Assign object at 0x00000221B5DBDC50>,
                                  241)],
             '$46pred': [(<numba.core.ir.Assign object at 0x00000221B5DC5590>,
                          241)],
             '$54load_global.6.1': [(<numba.core.ir.Assign object at 0x00000221B5E2D8D0>,
                                     0)],
             '$66load_attr.7.1': [(<numba.core.ir.Assign object at 0x00000221B5E2DB10>,
                                   0)],
             '$76unary_negative.4': [(<numba.core.ir.Assign object at 0x00000221B5DD7790>,
                                      295)],
             '$84compare_op.6': [(<numba.core.ir.Assign object at 0x00000221B5DDC890>,
                                  295)],
             '$90pred': [(<numba.core.ir.Assign object at 0x00000221B5DDFDD0>,
                          295)],
             '$94compare_op.2': [(<numba.core.ir.Assign object at 0x00000221B5DE3790>,
                                  299)],
             '$binop_sub210.37.1': [(<numba.core.ir.Assign object at 0x00000221B5E316D0>,
                                     0)],
             '$const100.12.1': [(<numba.core.ir.Assign object at 0x00000221B5E2E890>,
                                 0)],
             '$const108.15.1': [(<numba.core.ir.Assign object at 0x00000221B5E2EDD0>,
                                 0)],
             '$const112.17.1': [(<numba.core.ir.Assign object at 0x00000221B5E2F090>,
                                 0)],
             '$const114.18.1': [(<numba.core.ir.Assign object at 0x00000221B5E2F210>,
                                 0)],
             '$const146.25.1': [(<numba.core.ir.Assign object at 0x00000221B5E2FDD0>,
                                 0)],
             '$const148.26.1': [(<numba.core.ir.Assign object at 0x00000221B5E2FF90>,
                                 0)],
             '$const168.30.1': [(<numba.core.ir.Assign object at 0x00000221B5E308D0>,
                                 0)],
             '$const192.34.1': [(<numba.core.ir.Assign object at 0x00000221B5E31050>,
                                 0)],
             '$const194.35.1': [(<numba.core.ir.Assign object at 0x00000221B5E311D0>,
                                 0)],
             '$const6.1': [(<numba.core.ir.Assign object at 0x00000221B5DAEFD0>,
                            240)],
             '$const60.1': [(<numba.core.ir.Assign object at 0x00000221B5DD66D0>,
                             295)],
             '$const94.9.1': [(<numba.core.ir.Assign object at 0x00000221B5E2E350>,
                               0)],
             '$const98.11.1': [(<numba.core.ir.Assign object at 0x00000221B5E2E6D0>,
                                0)],
             '$phi230.0.1': [(<numba.core.ir.Assign object at 0x00000221B5E2CE50>,
                              0)],
             '$phi232.1.1': [(<numba.core.ir.Assign object at 0x00000221B5E31C90>,
                              230)],
             '$phi38.0': [(<numba.core.ir.Assign object at 0x00000221B5A7E010>,
                           240)],
             '$phi92.0': [(<numba.core.ir.Assign object at 0x00000221B5DE11D0>,
                           295)],
             'bool100': [(<numba.core.ir.Assign object at 0x00000221B5DE8B50>,
                          299)],
             'bool114': [(<numba.core.ir.Assign object at 0x00000221B5DFF750>,
                          349)],
             'bool36': [(<numba.core.ir.Assign object at 0x00000221B5DB4210>,
                         240)],
             'bool46': [(<numba.core.ir.Assign object at 0x00000221B5DBEFD0>,
                         241)],
             'bool90': [(<numba.core.ir.Assign object at 0x00000221B5DDEA50>,
                         295)],
             'full_shape0': [(<numba.core.ir.Assign object at 0x00000221B5E2CC50>,
                              0)],
             'index00': [(<numba.core.ir.Assign object at 0x00000221B5E32390>,
                          232)],
             'out0': [(<numba.core.ir.Assign object at 0x00000221B5E2DF10>, 0)],
             'stencil_index': [(<numba.core.ir.Assign object at 0x00000221B5DAF290>,
                                240),
                               (<numba.core.ir.Assign object at 0x00000221B5A7DFD0>,
                                295)],
             'threshold': [(<numba.core.ir.Assign object at 0x00000221B5E2A4D0>,
                            0)],
             'x': [(<numba.core.ir.Assign object at 0x00000221B5E2B3D0>, 0)],
             'x0': [(<numba.core.ir.Assign object at 0x00000221B5E13690>, 240),
                    (<numba.core.ir.Assign object at 0x00000221B5DCA410>, 289)],
             'x1': [(<numba.core.ir.Assign object at 0x00000221B5E13710>, 295),
                    (<numba.core.ir.Assign object at 0x00000221B5DFD090>, 343)],
             'zero_pos': [(<numba.core.ir.Assign object at 0x00000221B5A73410>,
                           0)]})
2024-07-15 06:11:36,540 DEBUG:SSA violators <numba.core.utils.OrderedSet object at 0x00000221B5E2DF50>
2024-07-15 06:11:36,540 DEBUG:Fix SSA violator on var stencil_index
2024-07-15 06:11:36,540 DEBUG:==== SSA block rewrite pass on 0
2024-07-15 06:11:36,540 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5E13FD0>
2024-07-15 06:11:36,540 DEBUG:on stmt: x = arg(0, name=x)
2024-07-15 06:11:36,541 DEBUG:on stmt: threshold = arg(1, name=threshold)
2024-07-15 06:11:36,541 DEBUG:on stmt: zero_pos = arg(2, name=zero_pos)
2024-07-15 06:11:36,541 DEBUG:on stmt: full_shape0 = getattr(value=x, attr=shape)
2024-07-15 06:11:36,541 DEBUG:on stmt: $18load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:36,541 DEBUG:on stmt: $30load_method.4.1 = getattr(value=$18load_global.2.1, attr=empty)
2024-07-15 06:11:36,541 DEBUG:on stmt: $54load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:36,541 DEBUG:on stmt: $66load_attr.7.1 = getattr(value=$54load_global.6.1, attr=bool_)
2024-07-15 06:11:36,541 DEBUG:on stmt: out0 = call $30load_method.4.1(full_shape0, func=$30load_method.4.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:36,541 DEBUG:on stmt: $const94.9.1 = const(int, 0)
2024-07-15 06:11:36,541 DEBUG:on stmt: $const98.11.1 = const(NoneType, None)
2024-07-15 06:11:36,541 DEBUG:on stmt: $const100.12.1 = const(int, 1)
2024-07-15 06:11:36,541 DEBUG:on stmt: $102build_slice.13.1 = global(slice: <class 'slice'>)
2024-07-15 06:11:36,541 DEBUG:on stmt: $102build_slice.14.1 = call $102build_slice.13.1($const98.11.1, $const100.12.1, func=$102build_slice.13.1, args=(Var($const98.11.1, <string>:4), Var($const100.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:36,541 DEBUG:on stmt: out0[$102build_slice.14.1] = $const94.9.1
2024-07-15 06:11:36,541 DEBUG:on stmt: $const108.15.1 = const(int, 0)
2024-07-15 06:11:36,541 DEBUG:on stmt: $const112.17.1 = const(int, 0)
2024-07-15 06:11:36,541 DEBUG:on stmt: $const114.18.1 = const(NoneType, None)
2024-07-15 06:11:36,541 DEBUG:on stmt: $116build_slice.19.1 = global(slice: <class 'slice'>)
2024-07-15 06:11:36,541 DEBUG:on stmt: $116build_slice.20.1 = call $116build_slice.19.1($const112.17.1, $const114.18.1, func=$116build_slice.19.1, args=(Var($const112.17.1, <string>:5), Var($const114.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:36,541 DEBUG:on stmt: out0[$116build_slice.20.1] = $const108.15.1
2024-07-15 06:11:36,541 DEBUG:on stmt: $122load_global.21.1 = global(range: <class 'range'>)
2024-07-15 06:11:36,541 DEBUG:on stmt: $134load_global.23.1 = global(min: <built-in function min>)
2024-07-15 06:11:36,541 DEBUG:on stmt: $const146.25.1 = const(int, 0)
2024-07-15 06:11:36,541 DEBUG:on stmt: $const148.26.1 = const(int, -1)
2024-07-15 06:11:36,541 DEBUG:on stmt: $154call.27.1 = call $134load_global.23.1($const146.25.1, $const148.26.1, func=$134load_global.23.1, args=[Var($const146.25.1, <string>:6), Var($const148.26.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:36,541 DEBUG:on stmt: $164unary_negative.28.1 = unary(fn=<built-in function neg>, value=$154call.27.1)
2024-07-15 06:11:36,541 DEBUG:on stmt: $const168.30.1 = const(int, 0)
2024-07-15 06:11:36,541 DEBUG:on stmt: $170binary_subscr.31.1 = getitem(value=full_shape0, index=$const168.30.1, fn=<built-in function getitem>)
2024-07-15 06:11:36,541 DEBUG:on stmt: $180load_global.32.1 = global(max: <built-in function max>)
2024-07-15 06:11:36,541 DEBUG:on stmt: $const192.34.1 = const(int, 0)
2024-07-15 06:11:36,541 DEBUG:on stmt: $const194.35.1 = const(int, 0)
2024-07-15 06:11:36,541 DEBUG:on stmt: $200call.36.1 = call $180load_global.32.1($const192.34.1, $const194.35.1, func=$180load_global.32.1, args=[Var($const192.34.1, <string>:6), Var($const194.35.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:36,541 DEBUG:on stmt: $binop_sub210.37.1 = $170binary_subscr.31.1 - $200call.36.1
2024-07-15 06:11:36,541 DEBUG:on stmt: $218call.38.1 = call $122load_global.21.1($164unary_negative.28.1, $binop_sub210.37.1, func=$122load_global.21.1, args=[Var($164unary_negative.28.1, <string>:6), Var($binop_sub210.37.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:36,542 DEBUG:on stmt: $228get_iter.39.1 = getiter(value=$218call.38.1)
2024-07-15 06:11:36,542 DEBUG:on stmt: $phi230.0.1 = $228get_iter.39.1
2024-07-15 06:11:36,542 DEBUG:on stmt: jump 230
2024-07-15 06:11:36,542 DEBUG:==== SSA block rewrite pass on 230
2024-07-15 06:11:36,542 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5E13FD0>
2024-07-15 06:11:36,542 DEBUG:on stmt: $230for_iter.1.1 = iternext(value=$phi230.0.1)
2024-07-15 06:11:36,542 DEBUG:on stmt: $230for_iter.2.1 = pair_first(value=$230for_iter.1.1)
2024-07-15 06:11:36,542 DEBUG:on stmt: $230for_iter.3.1 = pair_second(value=$230for_iter.1.1)
2024-07-15 06:11:36,542 DEBUG:on stmt: $phi232.1.1 = $230for_iter.2.1
2024-07-15 06:11:36,542 DEBUG:on stmt: branch $230for_iter.3.1, 232, 442
2024-07-15 06:11:36,542 DEBUG:==== SSA block rewrite pass on 232
2024-07-15 06:11:36,542 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5E13FD0>
2024-07-15 06:11:36,542 DEBUG:on stmt: index00 = $phi232.1.1
2024-07-15 06:11:36,542 DEBUG:on stmt: jump 240
2024-07-15 06:11:36,542 DEBUG:==== SSA block rewrite pass on 442
2024-07-15 06:11:36,542 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5E13FD0>
2024-07-15 06:11:36,542 DEBUG:on stmt: $242return_value.1.1 = cast(value=out0)
2024-07-15 06:11:36,542 DEBUG:on stmt: return $242return_value.1.1
2024-07-15 06:11:36,542 DEBUG:==== SSA block rewrite pass on 240
2024-07-15 06:11:36,542 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5E13FD0>
2024-07-15 06:11:36,542 DEBUG:on stmt: $const6.1 = const(int, 0)
2024-07-15 06:11:36,542 DEBUG:on stmt: stencil_index = $const6.1 + index00
2024-07-15 06:11:36,542 DEBUG:first assign: stencil_index
2024-07-15 06:11:36,542 DEBUG:replaced with: stencil_index = $const6.1 + index00
2024-07-15 06:11:36,542 DEBUG:on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-07-15 06:11:36,542 DEBUG:on stmt: $22unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2024-07-15 06:11:36,542 DEBUG:on stmt: $30compare_op.6 = $22unary_negative.4 <= x0
2024-07-15 06:11:36,542 DEBUG:on stmt: bool36 = global(bool: <class 'bool'>)
2024-07-15 06:11:36,542 DEBUG:on stmt: $36pred = call bool36($30compare_op.6, func=bool36, args=(Var($30compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:36,542 DEBUG:on stmt: $phi38.0 = x0
2024-07-15 06:11:36,542 DEBUG:on stmt: branch $36pred, 241, 291
2024-07-15 06:11:36,542 DEBUG:==== SSA block rewrite pass on 241
2024-07-15 06:11:36,542 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5E13FD0>
2024-07-15 06:11:36,542 DEBUG:on stmt: $40compare_op.2 = x0 <= threshold
2024-07-15 06:11:36,542 DEBUG:on stmt: bool46 = global(bool: <class 'bool'>)
2024-07-15 06:11:36,542 DEBUG:on stmt: $46pred = call bool46($40compare_op.2, func=bool46, args=(Var($40compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:36,543 DEBUG:on stmt: branch $46pred, 279, 295
2024-07-15 06:11:36,543 DEBUG:==== SSA block rewrite pass on 279
2024-07-15 06:11:36,543 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5E13FD0>
2024-07-15 06:11:36,543 DEBUG:on stmt: jump 289
2024-07-15 06:11:36,543 DEBUG:==== SSA block rewrite pass on 291
2024-07-15 06:11:36,543 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5E13FD0>
2024-07-15 06:11:36,543 DEBUG:on stmt: jump 295
2024-07-15 06:11:36,543 DEBUG:==== SSA block rewrite pass on 289
2024-07-15 06:11:36,543 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5E13FD0>
2024-07-15 06:11:36,543 DEBUG:on stmt: x0 = const(int, 0)
2024-07-15 06:11:36,543 DEBUG:on stmt: jump 295
2024-07-15 06:11:36,543 DEBUG:==== SSA block rewrite pass on 295
2024-07-15 06:11:36,543 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5E13FD0>
2024-07-15 06:11:36,543 DEBUG:on stmt: $const60.1 = const(int, -1)
2024-07-15 06:11:36,543 DEBUG:on stmt: stencil_index = $const60.1 + index00
2024-07-15 06:11:36,543 DEBUG:replaced with: stencil_index.1 = $const60.1 + index00
2024-07-15 06:11:36,543 DEBUG:on stmt: x1 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-07-15 06:11:36,543 DEBUG:on stmt: $76unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2024-07-15 06:11:36,543 DEBUG:on stmt: $84compare_op.6 = $76unary_negative.4 <= x1
2024-07-15 06:11:36,543 DEBUG:on stmt: bool90 = global(bool: <class 'bool'>)
2024-07-15 06:11:36,543 DEBUG:on stmt: $90pred = call bool90($84compare_op.6, func=bool90, args=(Var($84compare_op.6, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:36,543 DEBUG:on stmt: $phi92.0 = x1
2024-07-15 06:11:36,543 DEBUG:on stmt: branch $90pred, 299, 345
2024-07-15 06:11:36,543 DEBUG:==== SSA block rewrite pass on 299
2024-07-15 06:11:36,543 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5E13FD0>
2024-07-15 06:11:36,543 DEBUG:on stmt: $94compare_op.2 = x1 <= threshold
2024-07-15 06:11:36,543 DEBUG:on stmt: bool100 = global(bool: <class 'bool'>)
2024-07-15 06:11:36,543 DEBUG:on stmt: $100pred = call bool100($94compare_op.2, func=bool100, args=(Var($94compare_op.2, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:36,543 DEBUG:on stmt: branch $100pred, 333, 349
2024-07-15 06:11:36,543 DEBUG:==== SSA block rewrite pass on 333
2024-07-15 06:11:36,543 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5E13FD0>
2024-07-15 06:11:36,543 DEBUG:on stmt: jump 343
2024-07-15 06:11:36,543 DEBUG:==== SSA block rewrite pass on 345
2024-07-15 06:11:36,543 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5E13FD0>
2024-07-15 06:11:36,543 DEBUG:on stmt: jump 349
2024-07-15 06:11:36,543 DEBUG:==== SSA block rewrite pass on 343
2024-07-15 06:11:36,543 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5E13FD0>
2024-07-15 06:11:36,543 DEBUG:on stmt: x1 = const(int, 0)
2024-07-15 06:11:36,544 DEBUG:on stmt: jump 349
2024-07-15 06:11:36,544 DEBUG:==== SSA block rewrite pass on 349
2024-07-15 06:11:36,544 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5E13FD0>
2024-07-15 06:11:36,544 DEBUG:on stmt: bool114 = global(bool: <class 'bool'>)
2024-07-15 06:11:36,544 DEBUG:on stmt: $114pred = call bool114(zero_pos, func=bool114, args=(Var(zero_pos, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:36,544 DEBUG:on stmt: branch $114pred, 353, 357
2024-07-15 06:11:36,544 DEBUG:==== SSA block rewrite pass on 353
2024-07-15 06:11:36,544 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5E13FD0>
2024-07-15 06:11:36,544 DEBUG:on stmt: $116load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:36,544 DEBUG:on stmt: $128load_attr.2 = getattr(value=$116load_global.0, attr=signbit)
2024-07-15 06:11:36,544 DEBUG:on stmt: $144call.4 = call $128load_attr.2(x0, func=$128load_attr.2, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:36,544 DEBUG:on stmt: $154load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:36,544 DEBUG:on stmt: $166load_attr.7 = getattr(value=$154load_global.5, attr=signbit)
2024-07-15 06:11:36,544 DEBUG:on stmt: $182call.9 = call $166load_attr.7(x1, func=$166load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:36,544 DEBUG:on stmt: $192compare_op.10 = $144call.4 != $182call.9
2024-07-15 06:11:36,544 DEBUG:on stmt: $198return_value.11 = cast(value=$192compare_op.10)
2024-07-15 06:11:36,544 DEBUG:on stmt: out0[index00] = $198return_value.11
2024-07-15 06:11:36,544 DEBUG:on stmt: jump 441
2024-07-15 06:11:36,544 DEBUG:==== SSA block rewrite pass on 357
2024-07-15 06:11:36,544 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5E13FD0>
2024-07-15 06:11:36,544 DEBUG:on stmt: $200load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:36,544 DEBUG:on stmt: $212load_attr.2 = getattr(value=$200load_global.0, attr=sign)
2024-07-15 06:11:36,544 DEBUG:on stmt: $228call.4 = call $212load_attr.2(x0, func=$212load_attr.2, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:36,544 DEBUG:on stmt: $238load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:36,544 DEBUG:on stmt: $250load_attr.7 = getattr(value=$238load_global.5, attr=sign)
2024-07-15 06:11:36,544 DEBUG:on stmt: $266call.9 = call $250load_attr.7(x1, func=$250load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:36,544 DEBUG:on stmt: $276compare_op.10 = $228call.4 != $266call.9
2024-07-15 06:11:36,544 DEBUG:on stmt: $282return_value.11 = cast(value=$276compare_op.10)
2024-07-15 06:11:36,545 DEBUG:on stmt: out0[index00] = $282return_value.11
2024-07-15 06:11:36,545 DEBUG:on stmt: jump 441
2024-07-15 06:11:36,545 DEBUG:==== SSA block rewrite pass on 441
2024-07-15 06:11:36,545 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5E13FD0>
2024-07-15 06:11:36,545 DEBUG:on stmt: jump 230
2024-07-15 06:11:36,545 DEBUG:Replaced assignments: defaultdict(<class 'list'>,
            {240: [<numba.core.ir.Assign object at 0x00000221B5E42190>],
             295: [<numba.core.ir.Assign object at 0x00000221B5E41F50>]})
2024-07-15 06:11:36,545 DEBUG:==== SSA block rewrite pass on 0
2024-07-15 06:11:36,545 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5E42650>
2024-07-15 06:11:36,545 DEBUG:on stmt: x = arg(0, name=x)
2024-07-15 06:11:36,545 DEBUG:on stmt: threshold = arg(1, name=threshold)
2024-07-15 06:11:36,545 DEBUG:on stmt: zero_pos = arg(2, name=zero_pos)
2024-07-15 06:11:36,545 DEBUG:on stmt: full_shape0 = getattr(value=x, attr=shape)
2024-07-15 06:11:36,545 DEBUG:on stmt: $18load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:36,545 DEBUG:on stmt: $30load_method.4.1 = getattr(value=$18load_global.2.1, attr=empty)
2024-07-15 06:11:36,545 DEBUG:on stmt: $54load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:36,545 DEBUG:on stmt: $66load_attr.7.1 = getattr(value=$54load_global.6.1, attr=bool_)
2024-07-15 06:11:36,545 DEBUG:on stmt: out0 = call $30load_method.4.1(full_shape0, func=$30load_method.4.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:36,545 DEBUG:on stmt: $const94.9.1 = const(int, 0)
2024-07-15 06:11:36,545 DEBUG:on stmt: $const98.11.1 = const(NoneType, None)
2024-07-15 06:11:36,545 DEBUG:on stmt: $const100.12.1 = const(int, 1)
2024-07-15 06:11:36,545 DEBUG:on stmt: $102build_slice.13.1 = global(slice: <class 'slice'>)
2024-07-15 06:11:36,545 DEBUG:on stmt: $102build_slice.14.1 = call $102build_slice.13.1($const98.11.1, $const100.12.1, func=$102build_slice.13.1, args=(Var($const98.11.1, <string>:4), Var($const100.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:36,545 DEBUG:on stmt: out0[$102build_slice.14.1] = $const94.9.1
2024-07-15 06:11:36,545 DEBUG:on stmt: $const108.15.1 = const(int, 0)
2024-07-15 06:11:36,545 DEBUG:on stmt: $const112.17.1 = const(int, 0)
2024-07-15 06:11:36,545 DEBUG:on stmt: $const114.18.1 = const(NoneType, None)
2024-07-15 06:11:36,545 DEBUG:on stmt: $116build_slice.19.1 = global(slice: <class 'slice'>)
2024-07-15 06:11:36,545 DEBUG:on stmt: $116build_slice.20.1 = call $116build_slice.19.1($const112.17.1, $const114.18.1, func=$116build_slice.19.1, args=(Var($const112.17.1, <string>:5), Var($const114.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:36,545 DEBUG:on stmt: out0[$116build_slice.20.1] = $const108.15.1
2024-07-15 06:11:36,545 DEBUG:on stmt: $122load_global.21.1 = global(range: <class 'range'>)
2024-07-15 06:11:36,545 DEBUG:on stmt: $134load_global.23.1 = global(min: <built-in function min>)
2024-07-15 06:11:36,545 DEBUG:on stmt: $const146.25.1 = const(int, 0)
2024-07-15 06:11:36,546 DEBUG:on stmt: $const148.26.1 = const(int, -1)
2024-07-15 06:11:36,546 DEBUG:on stmt: $154call.27.1 = call $134load_global.23.1($const146.25.1, $const148.26.1, func=$134load_global.23.1, args=[Var($const146.25.1, <string>:6), Var($const148.26.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:36,546 DEBUG:on stmt: $164unary_negative.28.1 = unary(fn=<built-in function neg>, value=$154call.27.1)
2024-07-15 06:11:36,546 DEBUG:on stmt: $const168.30.1 = const(int, 0)
2024-07-15 06:11:36,546 DEBUG:on stmt: $170binary_subscr.31.1 = getitem(value=full_shape0, index=$const168.30.1, fn=<built-in function getitem>)
2024-07-15 06:11:36,546 DEBUG:on stmt: $180load_global.32.1 = global(max: <built-in function max>)
2024-07-15 06:11:36,546 DEBUG:on stmt: $const192.34.1 = const(int, 0)
2024-07-15 06:11:36,546 DEBUG:on stmt: $const194.35.1 = const(int, 0)
2024-07-15 06:11:36,546 DEBUG:on stmt: $200call.36.1 = call $180load_global.32.1($const192.34.1, $const194.35.1, func=$180load_global.32.1, args=[Var($const192.34.1, <string>:6), Var($const194.35.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:36,546 DEBUG:on stmt: $binop_sub210.37.1 = $170binary_subscr.31.1 - $200call.36.1
2024-07-15 06:11:36,546 DEBUG:on stmt: $218call.38.1 = call $122load_global.21.1($164unary_negative.28.1, $binop_sub210.37.1, func=$122load_global.21.1, args=[Var($164unary_negative.28.1, <string>:6), Var($binop_sub210.37.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:36,546 DEBUG:on stmt: $228get_iter.39.1 = getiter(value=$218call.38.1)
2024-07-15 06:11:36,546 DEBUG:on stmt: $phi230.0.1 = $228get_iter.39.1
2024-07-15 06:11:36,546 DEBUG:on stmt: jump 230
2024-07-15 06:11:36,546 DEBUG:==== SSA block rewrite pass on 230
2024-07-15 06:11:36,546 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5E42650>
2024-07-15 06:11:36,546 DEBUG:on stmt: $230for_iter.1.1 = iternext(value=$phi230.0.1)
2024-07-15 06:11:36,546 DEBUG:on stmt: $230for_iter.2.1 = pair_first(value=$230for_iter.1.1)
2024-07-15 06:11:36,546 DEBUG:on stmt: $230for_iter.3.1 = pair_second(value=$230for_iter.1.1)
2024-07-15 06:11:36,546 DEBUG:on stmt: $phi232.1.1 = $230for_iter.2.1
2024-07-15 06:11:36,546 DEBUG:on stmt: branch $230for_iter.3.1, 232, 442
2024-07-15 06:11:36,546 DEBUG:==== SSA block rewrite pass on 232
2024-07-15 06:11:36,546 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5E42650>
2024-07-15 06:11:36,546 DEBUG:on stmt: index00 = $phi232.1.1
2024-07-15 06:11:36,546 DEBUG:on stmt: jump 240
2024-07-15 06:11:36,546 DEBUG:==== SSA block rewrite pass on 442
2024-07-15 06:11:36,546 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5E42650>
2024-07-15 06:11:36,546 DEBUG:on stmt: $242return_value.1.1 = cast(value=out0)
2024-07-15 06:11:36,546 DEBUG:on stmt: return $242return_value.1.1
2024-07-15 06:11:36,546 DEBUG:==== SSA block rewrite pass on 240
2024-07-15 06:11:36,546 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5E42650>
2024-07-15 06:11:36,546 DEBUG:on stmt: $const6.1 = const(int, 0)
2024-07-15 06:11:36,546 DEBUG:on stmt: stencil_index = $const6.1 + index00
2024-07-15 06:11:36,547 DEBUG:on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-07-15 06:11:36,547 DEBUG:find_def var='stencil_index' stmt=x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-07-15 06:11:36,547 DEBUG:on stmt: $22unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2024-07-15 06:11:36,547 DEBUG:on stmt: $30compare_op.6 = $22unary_negative.4 <= x0
2024-07-15 06:11:36,547 DEBUG:on stmt: bool36 = global(bool: <class 'bool'>)
2024-07-15 06:11:36,547 DEBUG:on stmt: $36pred = call bool36($30compare_op.6, func=bool36, args=(Var($30compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:36,547 DEBUG:on stmt: $phi38.0 = x0
2024-07-15 06:11:36,547 DEBUG:on stmt: branch $36pred, 241, 291
2024-07-15 06:11:36,547 DEBUG:==== SSA block rewrite pass on 241
2024-07-15 06:11:36,547 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5E42650>
2024-07-15 06:11:36,547 DEBUG:on stmt: $40compare_op.2 = x0 <= threshold
2024-07-15 06:11:36,547 DEBUG:on stmt: bool46 = global(bool: <class 'bool'>)
2024-07-15 06:11:36,547 DEBUG:on stmt: $46pred = call bool46($40compare_op.2, func=bool46, args=(Var($40compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:36,547 DEBUG:on stmt: branch $46pred, 279, 295
2024-07-15 06:11:36,547 DEBUG:==== SSA block rewrite pass on 279
2024-07-15 06:11:36,547 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5E42650>
2024-07-15 06:11:36,547 DEBUG:on stmt: jump 289
2024-07-15 06:11:36,547 DEBUG:==== SSA block rewrite pass on 291
2024-07-15 06:11:36,547 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5E42650>
2024-07-15 06:11:36,547 DEBUG:on stmt: jump 295
2024-07-15 06:11:36,547 DEBUG:==== SSA block rewrite pass on 289
2024-07-15 06:11:36,547 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5E42650>
2024-07-15 06:11:36,547 DEBUG:on stmt: x0 = const(int, 0)
2024-07-15 06:11:36,547 DEBUG:on stmt: jump 295
2024-07-15 06:11:36,547 DEBUG:==== SSA block rewrite pass on 295
2024-07-15 06:11:36,547 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5E42650>
2024-07-15 06:11:36,547 DEBUG:on stmt: $const60.1 = const(int, -1)
2024-07-15 06:11:36,547 DEBUG:on stmt: stencil_index.1 = $const60.1 + index00
2024-07-15 06:11:36,547 DEBUG:on stmt: x1 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-07-15 06:11:36,547 DEBUG:find_def var='stencil_index' stmt=x1 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-07-15 06:11:36,547 DEBUG:replaced with: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2024-07-15 06:11:36,548 DEBUG:on stmt: $76unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2024-07-15 06:11:36,548 DEBUG:on stmt: $84compare_op.6 = $76unary_negative.4 <= x1
2024-07-15 06:11:36,548 DEBUG:on stmt: bool90 = global(bool: <class 'bool'>)
2024-07-15 06:11:36,548 DEBUG:on stmt: $90pred = call bool90($84compare_op.6, func=bool90, args=(Var($84compare_op.6, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:36,548 DEBUG:on stmt: $phi92.0 = x1
2024-07-15 06:11:36,548 DEBUG:on stmt: branch $90pred, 299, 345
2024-07-15 06:11:36,548 DEBUG:==== SSA block rewrite pass on 299
2024-07-15 06:11:36,548 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5E42650>
2024-07-15 06:11:36,548 DEBUG:on stmt: $94compare_op.2 = x1 <= threshold
2024-07-15 06:11:36,548 DEBUG:on stmt: bool100 = global(bool: <class 'bool'>)
2024-07-15 06:11:36,548 DEBUG:on stmt: $100pred = call bool100($94compare_op.2, func=bool100, args=(Var($94compare_op.2, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:36,548 DEBUG:on stmt: branch $100pred, 333, 349
2024-07-15 06:11:36,548 DEBUG:==== SSA block rewrite pass on 333
2024-07-15 06:11:36,548 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5E42650>
2024-07-15 06:11:36,548 DEBUG:on stmt: jump 343
2024-07-15 06:11:36,548 DEBUG:==== SSA block rewrite pass on 345
2024-07-15 06:11:36,548 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5E42650>
2024-07-15 06:11:36,548 DEBUG:on stmt: jump 349
2024-07-15 06:11:36,548 DEBUG:==== SSA block rewrite pass on 343
2024-07-15 06:11:36,548 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5E42650>
2024-07-15 06:11:36,548 DEBUG:on stmt: x1 = const(int, 0)
2024-07-15 06:11:36,548 DEBUG:on stmt: jump 349
2024-07-15 06:11:36,548 DEBUG:==== SSA block rewrite pass on 349
2024-07-15 06:11:36,548 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5E42650>
2024-07-15 06:11:36,548 DEBUG:on stmt: bool114 = global(bool: <class 'bool'>)
2024-07-15 06:11:36,548 DEBUG:on stmt: $114pred = call bool114(zero_pos, func=bool114, args=(Var(zero_pos, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:36,548 DEBUG:on stmt: branch $114pred, 353, 357
2024-07-15 06:11:36,548 DEBUG:==== SSA block rewrite pass on 353
2024-07-15 06:11:36,548 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5E42650>
2024-07-15 06:11:36,548 DEBUG:on stmt: $116load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:36,548 DEBUG:on stmt: $128load_attr.2 = getattr(value=$116load_global.0, attr=signbit)
2024-07-15 06:11:36,548 DEBUG:on stmt: $144call.4 = call $128load_attr.2(x0, func=$128load_attr.2, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:36,549 DEBUG:on stmt: $154load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:36,549 DEBUG:on stmt: $166load_attr.7 = getattr(value=$154load_global.5, attr=signbit)
2024-07-15 06:11:36,549 DEBUG:on stmt: $182call.9 = call $166load_attr.7(x1, func=$166load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:36,549 DEBUG:on stmt: $192compare_op.10 = $144call.4 != $182call.9
2024-07-15 06:11:36,549 DEBUG:on stmt: $198return_value.11 = cast(value=$192compare_op.10)
2024-07-15 06:11:36,549 DEBUG:on stmt: out0[index00] = $198return_value.11
2024-07-15 06:11:36,549 DEBUG:on stmt: jump 441
2024-07-15 06:11:36,549 DEBUG:==== SSA block rewrite pass on 357
2024-07-15 06:11:36,549 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5E42650>
2024-07-15 06:11:36,549 DEBUG:on stmt: $200load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:36,549 DEBUG:on stmt: $212load_attr.2 = getattr(value=$200load_global.0, attr=sign)
2024-07-15 06:11:36,549 DEBUG:on stmt: $228call.4 = call $212load_attr.2(x0, func=$212load_attr.2, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:36,549 DEBUG:on stmt: $238load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:36,549 DEBUG:on stmt: $250load_attr.7 = getattr(value=$238load_global.5, attr=sign)
2024-07-15 06:11:36,549 DEBUG:on stmt: $266call.9 = call $250load_attr.7(x1, func=$250load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:36,549 DEBUG:on stmt: $276compare_op.10 = $228call.4 != $266call.9
2024-07-15 06:11:36,549 DEBUG:on stmt: $282return_value.11 = cast(value=$276compare_op.10)
2024-07-15 06:11:36,549 DEBUG:on stmt: out0[index00] = $282return_value.11
2024-07-15 06:11:36,549 DEBUG:on stmt: jump 441
2024-07-15 06:11:36,549 DEBUG:==== SSA block rewrite pass on 441
2024-07-15 06:11:36,549 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5E42650>
2024-07-15 06:11:36,549 DEBUG:on stmt: jump 230
2024-07-15 06:11:36,549 DEBUG:Fix SSA violator on var x0
2024-07-15 06:11:36,549 DEBUG:==== SSA block rewrite pass on 0
2024-07-15 06:11:36,549 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5E2CF10>
2024-07-15 06:11:36,549 DEBUG:on stmt: x = arg(0, name=x)
2024-07-15 06:11:36,549 DEBUG:on stmt: threshold = arg(1, name=threshold)
2024-07-15 06:11:36,549 DEBUG:on stmt: zero_pos = arg(2, name=zero_pos)
2024-07-15 06:11:36,549 DEBUG:on stmt: full_shape0 = getattr(value=x, attr=shape)
2024-07-15 06:11:36,550 DEBUG:on stmt: $18load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:36,550 DEBUG:on stmt: $30load_method.4.1 = getattr(value=$18load_global.2.1, attr=empty)
2024-07-15 06:11:36,550 DEBUG:on stmt: $54load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:36,550 DEBUG:on stmt: $66load_attr.7.1 = getattr(value=$54load_global.6.1, attr=bool_)
2024-07-15 06:11:36,550 DEBUG:on stmt: out0 = call $30load_method.4.1(full_shape0, func=$30load_method.4.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:36,550 DEBUG:on stmt: $const94.9.1 = const(int, 0)
2024-07-15 06:11:36,550 DEBUG:on stmt: $const98.11.1 = const(NoneType, None)
2024-07-15 06:11:36,550 DEBUG:on stmt: $const100.12.1 = const(int, 1)
2024-07-15 06:11:36,550 DEBUG:on stmt: $102build_slice.13.1 = global(slice: <class 'slice'>)
2024-07-15 06:11:36,550 DEBUG:on stmt: $102build_slice.14.1 = call $102build_slice.13.1($const98.11.1, $const100.12.1, func=$102build_slice.13.1, args=(Var($const98.11.1, <string>:4), Var($const100.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:36,550 DEBUG:on stmt: out0[$102build_slice.14.1] = $const94.9.1
2024-07-15 06:11:36,550 DEBUG:on stmt: $const108.15.1 = const(int, 0)
2024-07-15 06:11:36,550 DEBUG:on stmt: $const112.17.1 = const(int, 0)
2024-07-15 06:11:36,550 DEBUG:on stmt: $const114.18.1 = const(NoneType, None)
2024-07-15 06:11:36,550 DEBUG:on stmt: $116build_slice.19.1 = global(slice: <class 'slice'>)
2024-07-15 06:11:36,550 DEBUG:on stmt: $116build_slice.20.1 = call $116build_slice.19.1($const112.17.1, $const114.18.1, func=$116build_slice.19.1, args=(Var($const112.17.1, <string>:5), Var($const114.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:36,550 DEBUG:on stmt: out0[$116build_slice.20.1] = $const108.15.1
2024-07-15 06:11:36,550 DEBUG:on stmt: $122load_global.21.1 = global(range: <class 'range'>)
2024-07-15 06:11:36,550 DEBUG:on stmt: $134load_global.23.1 = global(min: <built-in function min>)
2024-07-15 06:11:36,550 DEBUG:on stmt: $const146.25.1 = const(int, 0)
2024-07-15 06:11:36,550 DEBUG:on stmt: $const148.26.1 = const(int, -1)
2024-07-15 06:11:36,550 DEBUG:on stmt: $154call.27.1 = call $134load_global.23.1($const146.25.1, $const148.26.1, func=$134load_global.23.1, args=[Var($const146.25.1, <string>:6), Var($const148.26.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:36,550 DEBUG:on stmt: $164unary_negative.28.1 = unary(fn=<built-in function neg>, value=$154call.27.1)
2024-07-15 06:11:36,550 DEBUG:on stmt: $const168.30.1 = const(int, 0)
2024-07-15 06:11:36,550 DEBUG:on stmt: $170binary_subscr.31.1 = getitem(value=full_shape0, index=$const168.30.1, fn=<built-in function getitem>)
2024-07-15 06:11:36,550 DEBUG:on stmt: $180load_global.32.1 = global(max: <built-in function max>)
2024-07-15 06:11:36,550 DEBUG:on stmt: $const192.34.1 = const(int, 0)
2024-07-15 06:11:36,550 DEBUG:on stmt: $const194.35.1 = const(int, 0)
2024-07-15 06:11:36,550 DEBUG:on stmt: $200call.36.1 = call $180load_global.32.1($const192.34.1, $const194.35.1, func=$180load_global.32.1, args=[Var($const192.34.1, <string>:6), Var($const194.35.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:36,550 DEBUG:on stmt: $binop_sub210.37.1 = $170binary_subscr.31.1 - $200call.36.1
2024-07-15 06:11:36,550 DEBUG:on stmt: $218call.38.1 = call $122load_global.21.1($164unary_negative.28.1, $binop_sub210.37.1, func=$122load_global.21.1, args=[Var($164unary_negative.28.1, <string>:6), Var($binop_sub210.37.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:36,551 DEBUG:on stmt: $228get_iter.39.1 = getiter(value=$218call.38.1)
2024-07-15 06:11:36,551 DEBUG:on stmt: $phi230.0.1 = $228get_iter.39.1
2024-07-15 06:11:36,551 DEBUG:on stmt: jump 230
2024-07-15 06:11:36,551 DEBUG:==== SSA block rewrite pass on 230
2024-07-15 06:11:36,551 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5E2CF10>
2024-07-15 06:11:36,551 DEBUG:on stmt: $230for_iter.1.1 = iternext(value=$phi230.0.1)
2024-07-15 06:11:36,551 DEBUG:on stmt: $230for_iter.2.1 = pair_first(value=$230for_iter.1.1)
2024-07-15 06:11:36,551 DEBUG:on stmt: $230for_iter.3.1 = pair_second(value=$230for_iter.1.1)
2024-07-15 06:11:36,551 DEBUG:on stmt: $phi232.1.1 = $230for_iter.2.1
2024-07-15 06:11:36,551 DEBUG:on stmt: branch $230for_iter.3.1, 232, 442
2024-07-15 06:11:36,551 DEBUG:==== SSA block rewrite pass on 232
2024-07-15 06:11:36,551 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5E2CF10>
2024-07-15 06:11:36,551 DEBUG:on stmt: index00 = $phi232.1.1
2024-07-15 06:11:36,551 DEBUG:on stmt: jump 240
2024-07-15 06:11:36,551 DEBUG:==== SSA block rewrite pass on 442
2024-07-15 06:11:36,551 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5E2CF10>
2024-07-15 06:11:36,551 DEBUG:on stmt: $242return_value.1.1 = cast(value=out0)
2024-07-15 06:11:36,551 DEBUG:on stmt: return $242return_value.1.1
2024-07-15 06:11:36,551 DEBUG:==== SSA block rewrite pass on 240
2024-07-15 06:11:36,551 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5E2CF10>
2024-07-15 06:11:36,551 DEBUG:on stmt: $const6.1 = const(int, 0)
2024-07-15 06:11:36,551 DEBUG:on stmt: stencil_index = $const6.1 + index00
2024-07-15 06:11:36,551 DEBUG:on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-07-15 06:11:36,551 DEBUG:first assign: x0
2024-07-15 06:11:36,551 DEBUG:replaced with: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-07-15 06:11:36,551 DEBUG:on stmt: $22unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2024-07-15 06:11:36,551 DEBUG:on stmt: $30compare_op.6 = $22unary_negative.4 <= x0
2024-07-15 06:11:36,551 DEBUG:on stmt: bool36 = global(bool: <class 'bool'>)
2024-07-15 06:11:36,551 DEBUG:on stmt: $36pred = call bool36($30compare_op.6, func=bool36, args=(Var($30compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:36,551 DEBUG:on stmt: $phi38.0 = x0
2024-07-15 06:11:36,551 DEBUG:on stmt: branch $36pred, 241, 291
2024-07-15 06:11:36,551 DEBUG:==== SSA block rewrite pass on 241
2024-07-15 06:11:36,551 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5E2CF10>
2024-07-15 06:11:36,552 DEBUG:on stmt: $40compare_op.2 = x0 <= threshold
2024-07-15 06:11:36,552 DEBUG:on stmt: bool46 = global(bool: <class 'bool'>)
2024-07-15 06:11:36,552 DEBUG:on stmt: $46pred = call bool46($40compare_op.2, func=bool46, args=(Var($40compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:36,552 DEBUG:on stmt: branch $46pred, 279, 295
2024-07-15 06:11:36,552 DEBUG:==== SSA block rewrite pass on 279
2024-07-15 06:11:36,552 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5E2CF10>
2024-07-15 06:11:36,552 DEBUG:on stmt: jump 289
2024-07-15 06:11:36,552 DEBUG:==== SSA block rewrite pass on 291
2024-07-15 06:11:36,552 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5E2CF10>
2024-07-15 06:11:36,552 DEBUG:on stmt: jump 295
2024-07-15 06:11:36,552 DEBUG:==== SSA block rewrite pass on 289
2024-07-15 06:11:36,552 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5E2CF10>
2024-07-15 06:11:36,552 DEBUG:on stmt: x0 = const(int, 0)
2024-07-15 06:11:36,552 DEBUG:replaced with: x0.1 = const(int, 0)
2024-07-15 06:11:36,552 DEBUG:on stmt: jump 295
2024-07-15 06:11:36,552 DEBUG:==== SSA block rewrite pass on 295
2024-07-15 06:11:36,552 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5E2CF10>
2024-07-15 06:11:36,552 DEBUG:on stmt: $const60.1 = const(int, -1)
2024-07-15 06:11:36,552 DEBUG:on stmt: stencil_index.1 = $const60.1 + index00
2024-07-15 06:11:36,552 DEBUG:on stmt: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2024-07-15 06:11:36,552 DEBUG:on stmt: $76unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2024-07-15 06:11:36,552 DEBUG:on stmt: $84compare_op.6 = $76unary_negative.4 <= x1
2024-07-15 06:11:36,552 DEBUG:on stmt: bool90 = global(bool: <class 'bool'>)
2024-07-15 06:11:36,552 DEBUG:on stmt: $90pred = call bool90($84compare_op.6, func=bool90, args=(Var($84compare_op.6, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:36,552 DEBUG:on stmt: $phi92.0 = x1
2024-07-15 06:11:36,552 DEBUG:on stmt: branch $90pred, 299, 345
2024-07-15 06:11:36,552 DEBUG:==== SSA block rewrite pass on 299
2024-07-15 06:11:36,552 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5E2CF10>
2024-07-15 06:11:36,552 DEBUG:on stmt: $94compare_op.2 = x1 <= threshold
2024-07-15 06:11:36,552 DEBUG:on stmt: bool100 = global(bool: <class 'bool'>)
2024-07-15 06:11:36,552 DEBUG:on stmt: $100pred = call bool100($94compare_op.2, func=bool100, args=(Var($94compare_op.2, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:36,553 DEBUG:on stmt: branch $100pred, 333, 349
2024-07-15 06:11:36,553 DEBUG:==== SSA block rewrite pass on 333
2024-07-15 06:11:36,553 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5E2CF10>
2024-07-15 06:11:36,553 DEBUG:on stmt: jump 343
2024-07-15 06:11:36,553 DEBUG:==== SSA block rewrite pass on 345
2024-07-15 06:11:36,553 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5E2CF10>
2024-07-15 06:11:36,553 DEBUG:on stmt: jump 349
2024-07-15 06:11:36,553 DEBUG:==== SSA block rewrite pass on 343
2024-07-15 06:11:36,553 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5E2CF10>
2024-07-15 06:11:36,553 DEBUG:on stmt: x1 = const(int, 0)
2024-07-15 06:11:36,553 DEBUG:on stmt: jump 349
2024-07-15 06:11:36,553 DEBUG:==== SSA block rewrite pass on 349
2024-07-15 06:11:36,553 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5E2CF10>
2024-07-15 06:11:36,553 DEBUG:on stmt: bool114 = global(bool: <class 'bool'>)
2024-07-15 06:11:36,553 DEBUG:on stmt: $114pred = call bool114(zero_pos, func=bool114, args=(Var(zero_pos, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:36,553 DEBUG:on stmt: branch $114pred, 353, 357
2024-07-15 06:11:36,553 DEBUG:==== SSA block rewrite pass on 353
2024-07-15 06:11:36,553 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5E2CF10>
2024-07-15 06:11:36,553 DEBUG:on stmt: $116load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:36,553 DEBUG:on stmt: $128load_attr.2 = getattr(value=$116load_global.0, attr=signbit)
2024-07-15 06:11:36,553 DEBUG:on stmt: $144call.4 = call $128load_attr.2(x0, func=$128load_attr.2, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:36,553 DEBUG:on stmt: $154load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:36,553 DEBUG:on stmt: $166load_attr.7 = getattr(value=$154load_global.5, attr=signbit)
2024-07-15 06:11:36,553 DEBUG:on stmt: $182call.9 = call $166load_attr.7(x1, func=$166load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:36,553 DEBUG:on stmt: $192compare_op.10 = $144call.4 != $182call.9
2024-07-15 06:11:36,553 DEBUG:on stmt: $198return_value.11 = cast(value=$192compare_op.10)
2024-07-15 06:11:36,553 DEBUG:on stmt: out0[index00] = $198return_value.11
2024-07-15 06:11:36,553 DEBUG:on stmt: jump 441
2024-07-15 06:11:36,553 DEBUG:==== SSA block rewrite pass on 357
2024-07-15 06:11:36,553 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5E2CF10>
2024-07-15 06:11:36,553 DEBUG:on stmt: $200load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:36,554 DEBUG:on stmt: $212load_attr.2 = getattr(value=$200load_global.0, attr=sign)
2024-07-15 06:11:36,554 DEBUG:on stmt: $228call.4 = call $212load_attr.2(x0, func=$212load_attr.2, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:36,554 DEBUG:on stmt: $238load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:36,554 DEBUG:on stmt: $250load_attr.7 = getattr(value=$238load_global.5, attr=sign)
2024-07-15 06:11:36,554 DEBUG:on stmt: $266call.9 = call $250load_attr.7(x1, func=$250load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:36,554 DEBUG:on stmt: $276compare_op.10 = $228call.4 != $266call.9
2024-07-15 06:11:36,554 DEBUG:on stmt: $282return_value.11 = cast(value=$276compare_op.10)
2024-07-15 06:11:36,554 DEBUG:on stmt: out0[index00] = $282return_value.11
2024-07-15 06:11:36,554 DEBUG:on stmt: jump 441
2024-07-15 06:11:36,554 DEBUG:==== SSA block rewrite pass on 441
2024-07-15 06:11:36,554 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5E2CF10>
2024-07-15 06:11:36,554 DEBUG:on stmt: jump 230
2024-07-15 06:11:36,554 DEBUG:Replaced assignments: defaultdict(<class 'list'>,
            {240: [<numba.core.ir.Assign object at 0x00000221B5E42490>],
             289: [<numba.core.ir.Assign object at 0x00000221B5E41F10>]})
2024-07-15 06:11:36,554 DEBUG:==== SSA block rewrite pass on 0
2024-07-15 06:11:36,554 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5E2D490>
2024-07-15 06:11:36,554 DEBUG:on stmt: x = arg(0, name=x)
2024-07-15 06:11:36,554 DEBUG:on stmt: threshold = arg(1, name=threshold)
2024-07-15 06:11:36,554 DEBUG:on stmt: zero_pos = arg(2, name=zero_pos)
2024-07-15 06:11:36,554 DEBUG:on stmt: full_shape0 = getattr(value=x, attr=shape)
2024-07-15 06:11:36,554 DEBUG:on stmt: $18load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:36,554 DEBUG:on stmt: $30load_method.4.1 = getattr(value=$18load_global.2.1, attr=empty)
2024-07-15 06:11:36,554 DEBUG:on stmt: $54load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:36,554 DEBUG:on stmt: $66load_attr.7.1 = getattr(value=$54load_global.6.1, attr=bool_)
2024-07-15 06:11:36,554 DEBUG:on stmt: out0 = call $30load_method.4.1(full_shape0, func=$30load_method.4.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:36,554 DEBUG:on stmt: $const94.9.1 = const(int, 0)
2024-07-15 06:11:36,554 DEBUG:on stmt: $const98.11.1 = const(NoneType, None)
2024-07-15 06:11:36,555 DEBUG:on stmt: $const100.12.1 = const(int, 1)
2024-07-15 06:11:36,555 DEBUG:on stmt: $102build_slice.13.1 = global(slice: <class 'slice'>)
2024-07-15 06:11:36,555 DEBUG:on stmt: $102build_slice.14.1 = call $102build_slice.13.1($const98.11.1, $const100.12.1, func=$102build_slice.13.1, args=(Var($const98.11.1, <string>:4), Var($const100.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:36,555 DEBUG:on stmt: out0[$102build_slice.14.1] = $const94.9.1
2024-07-15 06:11:36,555 DEBUG:on stmt: $const108.15.1 = const(int, 0)
2024-07-15 06:11:36,555 DEBUG:on stmt: $const112.17.1 = const(int, 0)
2024-07-15 06:11:36,555 DEBUG:on stmt: $const114.18.1 = const(NoneType, None)
2024-07-15 06:11:36,555 DEBUG:on stmt: $116build_slice.19.1 = global(slice: <class 'slice'>)
2024-07-15 06:11:36,555 DEBUG:on stmt: $116build_slice.20.1 = call $116build_slice.19.1($const112.17.1, $const114.18.1, func=$116build_slice.19.1, args=(Var($const112.17.1, <string>:5), Var($const114.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:36,555 DEBUG:on stmt: out0[$116build_slice.20.1] = $const108.15.1
2024-07-15 06:11:36,555 DEBUG:on stmt: $122load_global.21.1 = global(range: <class 'range'>)
2024-07-15 06:11:36,555 DEBUG:on stmt: $134load_global.23.1 = global(min: <built-in function min>)
2024-07-15 06:11:36,555 DEBUG:on stmt: $const146.25.1 = const(int, 0)
2024-07-15 06:11:36,555 DEBUG:on stmt: $const148.26.1 = const(int, -1)
2024-07-15 06:11:36,555 DEBUG:on stmt: $154call.27.1 = call $134load_global.23.1($const146.25.1, $const148.26.1, func=$134load_global.23.1, args=[Var($const146.25.1, <string>:6), Var($const148.26.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:36,555 DEBUG:on stmt: $164unary_negative.28.1 = unary(fn=<built-in function neg>, value=$154call.27.1)
2024-07-15 06:11:36,555 DEBUG:on stmt: $const168.30.1 = const(int, 0)
2024-07-15 06:11:36,555 DEBUG:on stmt: $170binary_subscr.31.1 = getitem(value=full_shape0, index=$const168.30.1, fn=<built-in function getitem>)
2024-07-15 06:11:36,555 DEBUG:on stmt: $180load_global.32.1 = global(max: <built-in function max>)
2024-07-15 06:11:36,555 DEBUG:on stmt: $const192.34.1 = const(int, 0)
2024-07-15 06:11:36,555 DEBUG:on stmt: $const194.35.1 = const(int, 0)
2024-07-15 06:11:36,555 DEBUG:on stmt: $200call.36.1 = call $180load_global.32.1($const192.34.1, $const194.35.1, func=$180load_global.32.1, args=[Var($const192.34.1, <string>:6), Var($const194.35.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:36,555 DEBUG:on stmt: $binop_sub210.37.1 = $170binary_subscr.31.1 - $200call.36.1
2024-07-15 06:11:36,555 DEBUG:on stmt: $218call.38.1 = call $122load_global.21.1($164unary_negative.28.1, $binop_sub210.37.1, func=$122load_global.21.1, args=[Var($164unary_negative.28.1, <string>:6), Var($binop_sub210.37.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:36,555 DEBUG:on stmt: $228get_iter.39.1 = getiter(value=$218call.38.1)
2024-07-15 06:11:36,555 DEBUG:on stmt: $phi230.0.1 = $228get_iter.39.1
2024-07-15 06:11:36,555 DEBUG:on stmt: jump 230
2024-07-15 06:11:36,555 DEBUG:==== SSA block rewrite pass on 230
2024-07-15 06:11:36,555 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5E2D490>
2024-07-15 06:11:36,555 DEBUG:on stmt: $230for_iter.1.1 = iternext(value=$phi230.0.1)
2024-07-15 06:11:36,555 DEBUG:on stmt: $230for_iter.2.1 = pair_first(value=$230for_iter.1.1)
2024-07-15 06:11:36,555 DEBUG:on stmt: $230for_iter.3.1 = pair_second(value=$230for_iter.1.1)
2024-07-15 06:11:36,555 DEBUG:on stmt: $phi232.1.1 = $230for_iter.2.1
2024-07-15 06:11:36,555 DEBUG:on stmt: branch $230for_iter.3.1, 232, 442
2024-07-15 06:11:36,555 DEBUG:==== SSA block rewrite pass on 232
2024-07-15 06:11:36,555 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5E2D490>
2024-07-15 06:11:36,556 DEBUG:on stmt: index00 = $phi232.1.1
2024-07-15 06:11:36,556 DEBUG:on stmt: jump 240
2024-07-15 06:11:36,556 DEBUG:==== SSA block rewrite pass on 442
2024-07-15 06:11:36,556 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5E2D490>
2024-07-15 06:11:36,556 DEBUG:on stmt: $242return_value.1.1 = cast(value=out0)
2024-07-15 06:11:36,556 DEBUG:on stmt: return $242return_value.1.1
2024-07-15 06:11:36,556 DEBUG:==== SSA block rewrite pass on 240
2024-07-15 06:11:36,556 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5E2D490>
2024-07-15 06:11:36,556 DEBUG:on stmt: $const6.1 = const(int, 0)
2024-07-15 06:11:36,556 DEBUG:on stmt: stencil_index = $const6.1 + index00
2024-07-15 06:11:36,556 DEBUG:on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-07-15 06:11:36,556 DEBUG:on stmt: $22unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2024-07-15 06:11:36,556 DEBUG:on stmt: $30compare_op.6 = $22unary_negative.4 <= x0
2024-07-15 06:11:36,556 DEBUG:find_def var='x0' stmt=$30compare_op.6 = $22unary_negative.4 <= x0
2024-07-15 06:11:36,556 DEBUG:on stmt: bool36 = global(bool: <class 'bool'>)
2024-07-15 06:11:36,556 DEBUG:on stmt: $36pred = call bool36($30compare_op.6, func=bool36, args=(Var($30compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:36,556 DEBUG:on stmt: $phi38.0 = x0
2024-07-15 06:11:36,556 DEBUG:find_def var='x0' stmt=$phi38.0 = x0
2024-07-15 06:11:36,556 DEBUG:on stmt: branch $36pred, 241, 291
2024-07-15 06:11:36,556 DEBUG:==== SSA block rewrite pass on 241
2024-07-15 06:11:36,556 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5E2D490>
2024-07-15 06:11:36,556 DEBUG:on stmt: $40compare_op.2 = x0 <= threshold
2024-07-15 06:11:36,556 DEBUG:find_def var='x0' stmt=$40compare_op.2 = x0 <= threshold
2024-07-15 06:11:36,556 DEBUG:find_def_from_top label 241
2024-07-15 06:11:36,556 DEBUG:idom 240 from label 241
2024-07-15 06:11:36,556 DEBUG:find_def_from_bottom label 240
2024-07-15 06:11:36,556 DEBUG:on stmt: bool46 = global(bool: <class 'bool'>)
2024-07-15 06:11:36,556 DEBUG:on stmt: $46pred = call bool46($40compare_op.2, func=bool46, args=(Var($40compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:36,556 DEBUG:on stmt: branch $46pred, 279, 295
2024-07-15 06:11:36,556 DEBUG:==== SSA block rewrite pass on 279
2024-07-15 06:11:36,556 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5E2D490>
2024-07-15 06:11:36,556 DEBUG:on stmt: jump 289
2024-07-15 06:11:36,556 DEBUG:==== SSA block rewrite pass on 291
2024-07-15 06:11:36,556 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5E2D490>
2024-07-15 06:11:36,556 DEBUG:on stmt: jump 295
2024-07-15 06:11:36,556 DEBUG:==== SSA block rewrite pass on 289
2024-07-15 06:11:36,556 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5E2D490>
2024-07-15 06:11:36,556 DEBUG:on stmt: x0.1 = const(int, 0)
2024-07-15 06:11:36,556 DEBUG:on stmt: jump 295
2024-07-15 06:11:36,556 DEBUG:==== SSA block rewrite pass on 295
2024-07-15 06:11:36,556 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5E2D490>
2024-07-15 06:11:36,556 DEBUG:on stmt: $const60.1 = const(int, -1)
2024-07-15 06:11:36,556 DEBUG:on stmt: stencil_index.1 = $const60.1 + index00
2024-07-15 06:11:36,556 DEBUG:on stmt: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2024-07-15 06:11:36,556 DEBUG:on stmt: $76unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2024-07-15 06:11:36,556 DEBUG:on stmt: $84compare_op.6 = $76unary_negative.4 <= x1
2024-07-15 06:11:36,556 DEBUG:on stmt: bool90 = global(bool: <class 'bool'>)
2024-07-15 06:11:36,556 DEBUG:on stmt: $90pred = call bool90($84compare_op.6, func=bool90, args=(Var($84compare_op.6, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:36,556 DEBUG:on stmt: $phi92.0 = x1
2024-07-15 06:11:36,557 DEBUG:on stmt: branch $90pred, 299, 345
2024-07-15 06:11:36,557 DEBUG:==== SSA block rewrite pass on 299
2024-07-15 06:11:36,557 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5E2D490>
2024-07-15 06:11:36,557 DEBUG:on stmt: $94compare_op.2 = x1 <= threshold
2024-07-15 06:11:36,557 DEBUG:on stmt: bool100 = global(bool: <class 'bool'>)
2024-07-15 06:11:36,557 DEBUG:on stmt: $100pred = call bool100($94compare_op.2, func=bool100, args=(Var($94compare_op.2, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:36,557 DEBUG:on stmt: branch $100pred, 333, 349
2024-07-15 06:11:36,557 DEBUG:==== SSA block rewrite pass on 333
2024-07-15 06:11:36,557 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5E2D490>
2024-07-15 06:11:36,557 DEBUG:on stmt: jump 343
2024-07-15 06:11:36,557 DEBUG:==== SSA block rewrite pass on 345
2024-07-15 06:11:36,557 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5E2D490>
2024-07-15 06:11:36,557 DEBUG:on stmt: jump 349
2024-07-15 06:11:36,557 DEBUG:==== SSA block rewrite pass on 343
2024-07-15 06:11:36,557 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5E2D490>
2024-07-15 06:11:36,557 DEBUG:on stmt: x1 = const(int, 0)
2024-07-15 06:11:36,557 DEBUG:on stmt: jump 349
2024-07-15 06:11:36,557 DEBUG:==== SSA block rewrite pass on 349
2024-07-15 06:11:36,557 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5E2D490>
2024-07-15 06:11:36,557 DEBUG:on stmt: bool114 = global(bool: <class 'bool'>)
2024-07-15 06:11:36,557 DEBUG:on stmt: $114pred = call bool114(zero_pos, func=bool114, args=(Var(zero_pos, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:36,557 DEBUG:on stmt: branch $114pred, 353, 357
2024-07-15 06:11:36,557 DEBUG:==== SSA block rewrite pass on 353
2024-07-15 06:11:36,557 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5E2D490>
2024-07-15 06:11:36,557 DEBUG:on stmt: $116load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:36,557 DEBUG:on stmt: $128load_attr.2 = getattr(value=$116load_global.0, attr=signbit)
2024-07-15 06:11:36,557 DEBUG:on stmt: $144call.4 = call $128load_attr.2(x0, func=$128load_attr.2, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:36,557 DEBUG:find_def var='x0' stmt=$144call.4 = call $128load_attr.2(x0, func=$128load_attr.2, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:36,557 DEBUG:find_def_from_top label 353
2024-07-15 06:11:36,557 DEBUG:idom 349 from label 353
2024-07-15 06:11:36,558 DEBUG:find_def_from_bottom label 349
2024-07-15 06:11:36,558 DEBUG:find_def_from_top label 349
2024-07-15 06:11:36,558 DEBUG:idom 295 from label 349
2024-07-15 06:11:36,558 DEBUG:find_def_from_bottom label 295
2024-07-15 06:11:36,558 DEBUG:find_def_from_top label 295
2024-07-15 06:11:36,558 DEBUG:insert phi node x0.2 = phi(incoming_values=[], incoming_blocks=[]) at 295
2024-07-15 06:11:36,558 DEBUG:find_def_from_bottom label 241
2024-07-15 06:11:36,558 DEBUG:find_def_from_top label 241
2024-07-15 06:11:36,558 DEBUG:idom 240 from label 241
2024-07-15 06:11:36,558 DEBUG:find_def_from_bottom label 240
2024-07-15 06:11:36,558 DEBUG:incoming_def x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-07-15 06:11:36,558 DEBUG:find_def_from_bottom label 291
2024-07-15 06:11:36,558 DEBUG:find_def_from_top label 291
2024-07-15 06:11:36,558 DEBUG:idom 240 from label 291
2024-07-15 06:11:36,558 DEBUG:find_def_from_bottom label 240
2024-07-15 06:11:36,558 DEBUG:incoming_def x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-07-15 06:11:36,558 DEBUG:find_def_from_bottom label 289
2024-07-15 06:11:36,558 DEBUG:incoming_def x0.1 = const(int, 0)
2024-07-15 06:11:36,558 DEBUG:replaced with: $144call.4 = call $128load_attr.2(x0.2, func=$128load_attr.2, args=[Var(x0.2, audio.py:1153)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:36,558 DEBUG:on stmt: $154load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:36,558 DEBUG:on stmt: $166load_attr.7 = getattr(value=$154load_global.5, attr=signbit)
2024-07-15 06:11:36,558 DEBUG:on stmt: $182call.9 = call $166load_attr.7(x1, func=$166load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:36,558 DEBUG:on stmt: $192compare_op.10 = $144call.4 != $182call.9
2024-07-15 06:11:36,558 DEBUG:on stmt: $198return_value.11 = cast(value=$192compare_op.10)
2024-07-15 06:11:36,558 DEBUG:on stmt: out0[index00] = $198return_value.11
2024-07-15 06:11:36,558 DEBUG:on stmt: jump 441
2024-07-15 06:11:36,558 DEBUG:==== SSA block rewrite pass on 357
2024-07-15 06:11:36,558 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5E2D490>
2024-07-15 06:11:36,558 DEBUG:on stmt: $200load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:36,559 DEBUG:on stmt: $212load_attr.2 = getattr(value=$200load_global.0, attr=sign)
2024-07-15 06:11:36,559 DEBUG:on stmt: $228call.4 = call $212load_attr.2(x0, func=$212load_attr.2, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:36,559 DEBUG:find_def var='x0' stmt=$228call.4 = call $212load_attr.2(x0, func=$212load_attr.2, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:36,559 DEBUG:find_def_from_top label 357
2024-07-15 06:11:36,559 DEBUG:idom 349 from label 357
2024-07-15 06:11:36,559 DEBUG:find_def_from_bottom label 349
2024-07-15 06:11:36,559 DEBUG:find_def_from_top label 349
2024-07-15 06:11:36,559 DEBUG:idom 295 from label 349
2024-07-15 06:11:36,559 DEBUG:find_def_from_bottom label 295
2024-07-15 06:11:36,559 DEBUG:replaced with: $228call.4 = call $212load_attr.2(x0.2, func=$212load_attr.2, args=[Var(x0.2, audio.py:1153)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:36,559 DEBUG:on stmt: $238load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:36,559 DEBUG:on stmt: $250load_attr.7 = getattr(value=$238load_global.5, attr=sign)
2024-07-15 06:11:36,559 DEBUG:on stmt: $266call.9 = call $250load_attr.7(x1, func=$250load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:36,559 DEBUG:on stmt: $276compare_op.10 = $228call.4 != $266call.9
2024-07-15 06:11:36,559 DEBUG:on stmt: $282return_value.11 = cast(value=$276compare_op.10)
2024-07-15 06:11:36,559 DEBUG:on stmt: out0[index00] = $282return_value.11
2024-07-15 06:11:36,559 DEBUG:on stmt: jump 441
2024-07-15 06:11:36,559 DEBUG:==== SSA block rewrite pass on 441
2024-07-15 06:11:36,559 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5E2D490>
2024-07-15 06:11:36,559 DEBUG:on stmt: jump 230
2024-07-15 06:11:36,559 DEBUG:Fix SSA violator on var x1
2024-07-15 06:11:36,559 DEBUG:==== SSA block rewrite pass on 0
2024-07-15 06:11:36,559 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5B81590>
2024-07-15 06:11:36,559 DEBUG:on stmt: x = arg(0, name=x)
2024-07-15 06:11:36,559 DEBUG:on stmt: threshold = arg(1, name=threshold)
2024-07-15 06:11:36,559 DEBUG:on stmt: zero_pos = arg(2, name=zero_pos)
2024-07-15 06:11:36,559 DEBUG:on stmt: full_shape0 = getattr(value=x, attr=shape)
2024-07-15 06:11:36,559 DEBUG:on stmt: $18load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:36,559 DEBUG:on stmt: $30load_method.4.1 = getattr(value=$18load_global.2.1, attr=empty)
2024-07-15 06:11:36,559 DEBUG:on stmt: $54load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:36,559 DEBUG:on stmt: $66load_attr.7.1 = getattr(value=$54load_global.6.1, attr=bool_)
2024-07-15 06:11:36,560 DEBUG:on stmt: out0 = call $30load_method.4.1(full_shape0, func=$30load_method.4.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:36,560 DEBUG:on stmt: $const94.9.1 = const(int, 0)
2024-07-15 06:11:36,560 DEBUG:on stmt: $const98.11.1 = const(NoneType, None)
2024-07-15 06:11:36,560 DEBUG:on stmt: $const100.12.1 = const(int, 1)
2024-07-15 06:11:36,560 DEBUG:on stmt: $102build_slice.13.1 = global(slice: <class 'slice'>)
2024-07-15 06:11:36,560 DEBUG:on stmt: $102build_slice.14.1 = call $102build_slice.13.1($const98.11.1, $const100.12.1, func=$102build_slice.13.1, args=(Var($const98.11.1, <string>:4), Var($const100.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:36,560 DEBUG:on stmt: out0[$102build_slice.14.1] = $const94.9.1
2024-07-15 06:11:36,560 DEBUG:on stmt: $const108.15.1 = const(int, 0)
2024-07-15 06:11:36,560 DEBUG:on stmt: $const112.17.1 = const(int, 0)
2024-07-15 06:11:36,560 DEBUG:on stmt: $const114.18.1 = const(NoneType, None)
2024-07-15 06:11:36,560 DEBUG:on stmt: $116build_slice.19.1 = global(slice: <class 'slice'>)
2024-07-15 06:11:36,560 DEBUG:on stmt: $116build_slice.20.1 = call $116build_slice.19.1($const112.17.1, $const114.18.1, func=$116build_slice.19.1, args=(Var($const112.17.1, <string>:5), Var($const114.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:36,560 DEBUG:on stmt: out0[$116build_slice.20.1] = $const108.15.1
2024-07-15 06:11:36,560 DEBUG:on stmt: $122load_global.21.1 = global(range: <class 'range'>)
2024-07-15 06:11:36,560 DEBUG:on stmt: $134load_global.23.1 = global(min: <built-in function min>)
2024-07-15 06:11:36,560 DEBUG:on stmt: $const146.25.1 = const(int, 0)
2024-07-15 06:11:36,560 DEBUG:on stmt: $const148.26.1 = const(int, -1)
2024-07-15 06:11:36,560 DEBUG:on stmt: $154call.27.1 = call $134load_global.23.1($const146.25.1, $const148.26.1, func=$134load_global.23.1, args=[Var($const146.25.1, <string>:6), Var($const148.26.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:36,560 DEBUG:on stmt: $164unary_negative.28.1 = unary(fn=<built-in function neg>, value=$154call.27.1)
2024-07-15 06:11:36,560 DEBUG:on stmt: $const168.30.1 = const(int, 0)
2024-07-15 06:11:36,560 DEBUG:on stmt: $170binary_subscr.31.1 = getitem(value=full_shape0, index=$const168.30.1, fn=<built-in function getitem>)
2024-07-15 06:11:36,560 DEBUG:on stmt: $180load_global.32.1 = global(max: <built-in function max>)
2024-07-15 06:11:36,560 DEBUG:on stmt: $const192.34.1 = const(int, 0)
2024-07-15 06:11:36,560 DEBUG:on stmt: $const194.35.1 = const(int, 0)
2024-07-15 06:11:36,560 DEBUG:on stmt: $200call.36.1 = call $180load_global.32.1($const192.34.1, $const194.35.1, func=$180load_global.32.1, args=[Var($const192.34.1, <string>:6), Var($const194.35.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:36,560 DEBUG:on stmt: $binop_sub210.37.1 = $170binary_subscr.31.1 - $200call.36.1
2024-07-15 06:11:36,560 DEBUG:on stmt: $218call.38.1 = call $122load_global.21.1($164unary_negative.28.1, $binop_sub210.37.1, func=$122load_global.21.1, args=[Var($164unary_negative.28.1, <string>:6), Var($binop_sub210.37.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:36,560 DEBUG:on stmt: $228get_iter.39.1 = getiter(value=$218call.38.1)
2024-07-15 06:11:36,560 DEBUG:on stmt: $phi230.0.1 = $228get_iter.39.1
2024-07-15 06:11:36,560 DEBUG:on stmt: jump 230
2024-07-15 06:11:36,560 DEBUG:==== SSA block rewrite pass on 230
2024-07-15 06:11:36,560 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5B81590>
2024-07-15 06:11:36,561 DEBUG:on stmt: $230for_iter.1.1 = iternext(value=$phi230.0.1)
2024-07-15 06:11:36,561 DEBUG:on stmt: $230for_iter.2.1 = pair_first(value=$230for_iter.1.1)
2024-07-15 06:11:36,561 DEBUG:on stmt: $230for_iter.3.1 = pair_second(value=$230for_iter.1.1)
2024-07-15 06:11:36,561 DEBUG:on stmt: $phi232.1.1 = $230for_iter.2.1
2024-07-15 06:11:36,561 DEBUG:on stmt: branch $230for_iter.3.1, 232, 442
2024-07-15 06:11:36,561 DEBUG:==== SSA block rewrite pass on 232
2024-07-15 06:11:36,561 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5B81590>
2024-07-15 06:11:36,561 DEBUG:on stmt: index00 = $phi232.1.1
2024-07-15 06:11:36,561 DEBUG:on stmt: jump 240
2024-07-15 06:11:36,561 DEBUG:==== SSA block rewrite pass on 442
2024-07-15 06:11:36,561 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5B81590>
2024-07-15 06:11:36,561 DEBUG:on stmt: $242return_value.1.1 = cast(value=out0)
2024-07-15 06:11:36,561 DEBUG:on stmt: return $242return_value.1.1
2024-07-15 06:11:36,561 DEBUG:==== SSA block rewrite pass on 240
2024-07-15 06:11:36,561 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5B81590>
2024-07-15 06:11:36,561 DEBUG:on stmt: $const6.1 = const(int, 0)
2024-07-15 06:11:36,561 DEBUG:on stmt: stencil_index = $const6.1 + index00
2024-07-15 06:11:36,561 DEBUG:on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-07-15 06:11:36,561 DEBUG:on stmt: $22unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2024-07-15 06:11:36,561 DEBUG:on stmt: $30compare_op.6 = $22unary_negative.4 <= x0
2024-07-15 06:11:36,561 DEBUG:on stmt: bool36 = global(bool: <class 'bool'>)
2024-07-15 06:11:36,561 DEBUG:on stmt: $36pred = call bool36($30compare_op.6, func=bool36, args=(Var($30compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:36,561 DEBUG:on stmt: $phi38.0 = x0
2024-07-15 06:11:36,561 DEBUG:on stmt: branch $36pred, 241, 291
2024-07-15 06:11:36,561 DEBUG:==== SSA block rewrite pass on 241
2024-07-15 06:11:36,561 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5B81590>
2024-07-15 06:11:36,561 DEBUG:on stmt: $40compare_op.2 = x0 <= threshold
2024-07-15 06:11:36,561 DEBUG:on stmt: bool46 = global(bool: <class 'bool'>)
2024-07-15 06:11:36,561 DEBUG:on stmt: $46pred = call bool46($40compare_op.2, func=bool46, args=(Var($40compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:36,561 DEBUG:on stmt: branch $46pred, 279, 295
2024-07-15 06:11:36,561 DEBUG:==== SSA block rewrite pass on 279
2024-07-15 06:11:36,561 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5B81590>
2024-07-15 06:11:36,561 DEBUG:on stmt: jump 289
2024-07-15 06:11:36,561 DEBUG:==== SSA block rewrite pass on 291
2024-07-15 06:11:36,561 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5B81590>
2024-07-15 06:11:36,561 DEBUG:on stmt: jump 295
2024-07-15 06:11:36,561 DEBUG:==== SSA block rewrite pass on 289
2024-07-15 06:11:36,561 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5B81590>
2024-07-15 06:11:36,562 DEBUG:on stmt: x0.1 = const(int, 0)
2024-07-15 06:11:36,562 DEBUG:on stmt: jump 295
2024-07-15 06:11:36,562 DEBUG:==== SSA block rewrite pass on 295
2024-07-15 06:11:36,562 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5B81590>
2024-07-15 06:11:36,562 DEBUG:on stmt: x0.2 = phi(incoming_values=[Var(x0, audio.py:1144), Var(x0, audio.py:1144), Var(x0.1, audio.py:1146)], incoming_blocks=[241, 291, 289])
2024-07-15 06:11:36,562 DEBUG:on stmt: $const60.1 = const(int, -1)
2024-07-15 06:11:36,562 DEBUG:on stmt: stencil_index.1 = $const60.1 + index00
2024-07-15 06:11:36,562 DEBUG:on stmt: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2024-07-15 06:11:36,562 DEBUG:first assign: x1
2024-07-15 06:11:36,562 DEBUG:replaced with: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2024-07-15 06:11:36,562 DEBUG:on stmt: $76unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2024-07-15 06:11:36,562 DEBUG:on stmt: $84compare_op.6 = $76unary_negative.4 <= x1
2024-07-15 06:11:36,562 DEBUG:on stmt: bool90 = global(bool: <class 'bool'>)
2024-07-15 06:11:36,562 DEBUG:on stmt: $90pred = call bool90($84compare_op.6, func=bool90, args=(Var($84compare_op.6, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:36,562 DEBUG:on stmt: $phi92.0 = x1
2024-07-15 06:11:36,562 DEBUG:on stmt: branch $90pred, 299, 345
2024-07-15 06:11:36,562 DEBUG:==== SSA block rewrite pass on 299
2024-07-15 06:11:36,562 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5B81590>
2024-07-15 06:11:36,562 DEBUG:on stmt: $94compare_op.2 = x1 <= threshold
2024-07-15 06:11:36,562 DEBUG:on stmt: bool100 = global(bool: <class 'bool'>)
2024-07-15 06:11:36,562 DEBUG:on stmt: $100pred = call bool100($94compare_op.2, func=bool100, args=(Var($94compare_op.2, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:36,562 DEBUG:on stmt: branch $100pred, 333, 349
2024-07-15 06:11:36,562 DEBUG:==== SSA block rewrite pass on 333
2024-07-15 06:11:36,562 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5B81590>
2024-07-15 06:11:36,562 DEBUG:on stmt: jump 343
2024-07-15 06:11:36,562 DEBUG:==== SSA block rewrite pass on 345
2024-07-15 06:11:36,562 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5B81590>
2024-07-15 06:11:36,562 DEBUG:on stmt: jump 349
2024-07-15 06:11:36,562 DEBUG:==== SSA block rewrite pass on 343
2024-07-15 06:11:36,562 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5B81590>
2024-07-15 06:11:36,562 DEBUG:on stmt: x1 = const(int, 0)
2024-07-15 06:11:36,562 DEBUG:replaced with: x1.1 = const(int, 0)
2024-07-15 06:11:36,562 DEBUG:on stmt: jump 349
2024-07-15 06:11:36,562 DEBUG:==== SSA block rewrite pass on 349
2024-07-15 06:11:36,562 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5B81590>
2024-07-15 06:11:36,562 DEBUG:on stmt: bool114 = global(bool: <class 'bool'>)
2024-07-15 06:11:36,562 DEBUG:on stmt: $114pred = call bool114(zero_pos, func=bool114, args=(Var(zero_pos, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:36,563 DEBUG:on stmt: branch $114pred, 353, 357
2024-07-15 06:11:36,563 DEBUG:==== SSA block rewrite pass on 353
2024-07-15 06:11:36,563 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5B81590>
2024-07-15 06:11:36,563 DEBUG:on stmt: $116load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:36,563 DEBUG:on stmt: $128load_attr.2 = getattr(value=$116load_global.0, attr=signbit)
2024-07-15 06:11:36,563 DEBUG:on stmt: $144call.4 = call $128load_attr.2(x0.2, func=$128load_attr.2, args=[Var(x0.2, audio.py:1153)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:36,563 DEBUG:on stmt: $154load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:36,563 DEBUG:on stmt: $166load_attr.7 = getattr(value=$154load_global.5, attr=signbit)
2024-07-15 06:11:36,563 DEBUG:on stmt: $182call.9 = call $166load_attr.7(x1, func=$166load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:36,563 DEBUG:on stmt: $192compare_op.10 = $144call.4 != $182call.9
2024-07-15 06:11:36,563 DEBUG:on stmt: $198return_value.11 = cast(value=$192compare_op.10)
2024-07-15 06:11:36,563 DEBUG:on stmt: out0[index00] = $198return_value.11
2024-07-15 06:11:36,563 DEBUG:on stmt: jump 441
2024-07-15 06:11:36,563 DEBUG:==== SSA block rewrite pass on 357
2024-07-15 06:11:36,563 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5B81590>
2024-07-15 06:11:36,563 DEBUG:on stmt: $200load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:36,563 DEBUG:on stmt: $212load_attr.2 = getattr(value=$200load_global.0, attr=sign)
2024-07-15 06:11:36,563 DEBUG:on stmt: $228call.4 = call $212load_attr.2(x0.2, func=$212load_attr.2, args=[Var(x0.2, audio.py:1153)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:36,563 DEBUG:on stmt: $238load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:36,563 DEBUG:on stmt: $250load_attr.7 = getattr(value=$238load_global.5, attr=sign)
2024-07-15 06:11:36,563 DEBUG:on stmt: $266call.9 = call $250load_attr.7(x1, func=$250load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:36,563 DEBUG:on stmt: $276compare_op.10 = $228call.4 != $266call.9
2024-07-15 06:11:36,563 DEBUG:on stmt: $282return_value.11 = cast(value=$276compare_op.10)
2024-07-15 06:11:36,563 DEBUG:on stmt: out0[index00] = $282return_value.11
2024-07-15 06:11:36,563 DEBUG:on stmt: jump 441
2024-07-15 06:11:36,563 DEBUG:==== SSA block rewrite pass on 441
2024-07-15 06:11:36,563 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5B81590>
2024-07-15 06:11:36,563 DEBUG:on stmt: jump 230
2024-07-15 06:11:36,563 DEBUG:Replaced assignments: defaultdict(<class 'list'>,
            {295: [<numba.core.ir.Assign object at 0x00000221B5E42090>],
             343: [<numba.core.ir.Assign object at 0x00000221B5E43E90>]})
2024-07-15 06:11:36,563 DEBUG:==== SSA block rewrite pass on 0
2024-07-15 06:11:36,563 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5C92E50>
2024-07-15 06:11:36,563 DEBUG:on stmt: x = arg(0, name=x)
2024-07-15 06:11:36,563 DEBUG:on stmt: threshold = arg(1, name=threshold)
2024-07-15 06:11:36,563 DEBUG:on stmt: zero_pos = arg(2, name=zero_pos)
2024-07-15 06:11:36,564 DEBUG:on stmt: full_shape0 = getattr(value=x, attr=shape)
2024-07-15 06:11:36,564 DEBUG:on stmt: $18load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:36,564 DEBUG:on stmt: $30load_method.4.1 = getattr(value=$18load_global.2.1, attr=empty)
2024-07-15 06:11:36,564 DEBUG:on stmt: $54load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:36,564 DEBUG:on stmt: $66load_attr.7.1 = getattr(value=$54load_global.6.1, attr=bool_)
2024-07-15 06:11:36,564 DEBUG:on stmt: out0 = call $30load_method.4.1(full_shape0, func=$30load_method.4.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:36,564 DEBUG:on stmt: $const94.9.1 = const(int, 0)
2024-07-15 06:11:36,564 DEBUG:on stmt: $const98.11.1 = const(NoneType, None)
2024-07-15 06:11:36,564 DEBUG:on stmt: $const100.12.1 = const(int, 1)
2024-07-15 06:11:36,564 DEBUG:on stmt: $102build_slice.13.1 = global(slice: <class 'slice'>)
2024-07-15 06:11:36,564 DEBUG:on stmt: $102build_slice.14.1 = call $102build_slice.13.1($const98.11.1, $const100.12.1, func=$102build_slice.13.1, args=(Var($const98.11.1, <string>:4), Var($const100.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:36,564 DEBUG:on stmt: out0[$102build_slice.14.1] = $const94.9.1
2024-07-15 06:11:36,564 DEBUG:on stmt: $const108.15.1 = const(int, 0)
2024-07-15 06:11:36,564 DEBUG:on stmt: $const112.17.1 = const(int, 0)
2024-07-15 06:11:36,564 DEBUG:on stmt: $const114.18.1 = const(NoneType, None)
2024-07-15 06:11:36,564 DEBUG:on stmt: $116build_slice.19.1 = global(slice: <class 'slice'>)
2024-07-15 06:11:36,564 DEBUG:on stmt: $116build_slice.20.1 = call $116build_slice.19.1($const112.17.1, $const114.18.1, func=$116build_slice.19.1, args=(Var($const112.17.1, <string>:5), Var($const114.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:36,564 DEBUG:on stmt: out0[$116build_slice.20.1] = $const108.15.1
2024-07-15 06:11:36,564 DEBUG:on stmt: $122load_global.21.1 = global(range: <class 'range'>)
2024-07-15 06:11:36,564 DEBUG:on stmt: $134load_global.23.1 = global(min: <built-in function min>)
2024-07-15 06:11:36,564 DEBUG:on stmt: $const146.25.1 = const(int, 0)
2024-07-15 06:11:36,564 DEBUG:on stmt: $const148.26.1 = const(int, -1)
2024-07-15 06:11:36,564 DEBUG:on stmt: $154call.27.1 = call $134load_global.23.1($const146.25.1, $const148.26.1, func=$134load_global.23.1, args=[Var($const146.25.1, <string>:6), Var($const148.26.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:36,564 DEBUG:on stmt: $164unary_negative.28.1 = unary(fn=<built-in function neg>, value=$154call.27.1)
2024-07-15 06:11:36,564 DEBUG:on stmt: $const168.30.1 = const(int, 0)
2024-07-15 06:11:36,564 DEBUG:on stmt: $170binary_subscr.31.1 = getitem(value=full_shape0, index=$const168.30.1, fn=<built-in function getitem>)
2024-07-15 06:11:36,564 DEBUG:on stmt: $180load_global.32.1 = global(max: <built-in function max>)
2024-07-15 06:11:36,564 DEBUG:on stmt: $const192.34.1 = const(int, 0)
2024-07-15 06:11:36,564 DEBUG:on stmt: $const194.35.1 = const(int, 0)
2024-07-15 06:11:36,564 DEBUG:on stmt: $200call.36.1 = call $180load_global.32.1($const192.34.1, $const194.35.1, func=$180load_global.32.1, args=[Var($const192.34.1, <string>:6), Var($const194.35.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:36,564 DEBUG:on stmt: $binop_sub210.37.1 = $170binary_subscr.31.1 - $200call.36.1
2024-07-15 06:11:36,564 DEBUG:on stmt: $218call.38.1 = call $122load_global.21.1($164unary_negative.28.1, $binop_sub210.37.1, func=$122load_global.21.1, args=[Var($164unary_negative.28.1, <string>:6), Var($binop_sub210.37.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:36,564 DEBUG:on stmt: $228get_iter.39.1 = getiter(value=$218call.38.1)
2024-07-15 06:11:36,565 DEBUG:on stmt: $phi230.0.1 = $228get_iter.39.1
2024-07-15 06:11:36,565 DEBUG:on stmt: jump 230
2024-07-15 06:11:36,565 DEBUG:==== SSA block rewrite pass on 230
2024-07-15 06:11:36,565 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5C92E50>
2024-07-15 06:11:36,565 DEBUG:on stmt: $230for_iter.1.1 = iternext(value=$phi230.0.1)
2024-07-15 06:11:36,565 DEBUG:on stmt: $230for_iter.2.1 = pair_first(value=$230for_iter.1.1)
2024-07-15 06:11:36,565 DEBUG:on stmt: $230for_iter.3.1 = pair_second(value=$230for_iter.1.1)
2024-07-15 06:11:36,566 DEBUG:on stmt: $phi232.1.1 = $230for_iter.2.1
2024-07-15 06:11:36,566 DEBUG:on stmt: branch $230for_iter.3.1, 232, 442
2024-07-15 06:11:36,566 DEBUG:==== SSA block rewrite pass on 232
2024-07-15 06:11:36,566 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5C92E50>
2024-07-15 06:11:36,566 DEBUG:on stmt: index00 = $phi232.1.1
2024-07-15 06:11:36,566 DEBUG:on stmt: jump 240
2024-07-15 06:11:36,566 DEBUG:==== SSA block rewrite pass on 442
2024-07-15 06:11:36,566 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5C92E50>
2024-07-15 06:11:36,566 DEBUG:on stmt: $242return_value.1.1 = cast(value=out0)
2024-07-15 06:11:36,566 DEBUG:on stmt: return $242return_value.1.1
2024-07-15 06:11:36,566 DEBUG:==== SSA block rewrite pass on 240
2024-07-15 06:11:36,566 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5C92E50>
2024-07-15 06:11:36,566 DEBUG:on stmt: $const6.1 = const(int, 0)
2024-07-15 06:11:36,566 DEBUG:on stmt: stencil_index = $const6.1 + index00
2024-07-15 06:11:36,566 DEBUG:on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-07-15 06:11:36,566 DEBUG:on stmt: $22unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2024-07-15 06:11:36,566 DEBUG:on stmt: $30compare_op.6 = $22unary_negative.4 <= x0
2024-07-15 06:11:36,566 DEBUG:on stmt: bool36 = global(bool: <class 'bool'>)
2024-07-15 06:11:36,566 DEBUG:on stmt: $36pred = call bool36($30compare_op.6, func=bool36, args=(Var($30compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:36,566 DEBUG:on stmt: $phi38.0 = x0
2024-07-15 06:11:36,566 DEBUG:on stmt: branch $36pred, 241, 291
2024-07-15 06:11:36,566 DEBUG:==== SSA block rewrite pass on 241
2024-07-15 06:11:36,566 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5C92E50>
2024-07-15 06:11:36,566 DEBUG:on stmt: $40compare_op.2 = x0 <= threshold
2024-07-15 06:11:36,566 DEBUG:on stmt: bool46 = global(bool: <class 'bool'>)
2024-07-15 06:11:36,566 DEBUG:on stmt: $46pred = call bool46($40compare_op.2, func=bool46, args=(Var($40compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:36,566 DEBUG:on stmt: branch $46pred, 279, 295
2024-07-15 06:11:36,566 DEBUG:==== SSA block rewrite pass on 279
2024-07-15 06:11:36,566 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5C92E50>
2024-07-15 06:11:36,566 DEBUG:on stmt: jump 289
2024-07-15 06:11:36,566 DEBUG:==== SSA block rewrite pass on 291
2024-07-15 06:11:36,566 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5C92E50>
2024-07-15 06:11:36,566 DEBUG:on stmt: jump 295
2024-07-15 06:11:36,566 DEBUG:==== SSA block rewrite pass on 289
2024-07-15 06:11:36,566 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5C92E50>
2024-07-15 06:11:36,566 DEBUG:on stmt: x0.1 = const(int, 0)
2024-07-15 06:11:36,566 DEBUG:on stmt: jump 295
2024-07-15 06:11:36,566 DEBUG:==== SSA block rewrite pass on 295
2024-07-15 06:11:36,566 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5C92E50>
2024-07-15 06:11:36,566 DEBUG:on stmt: x0.2 = phi(incoming_values=[Var(x0, audio.py:1144), Var(x0, audio.py:1144), Var(x0.1, audio.py:1146)], incoming_blocks=[241, 291, 289])
2024-07-15 06:11:36,566 DEBUG:on stmt: $const60.1 = const(int, -1)
2024-07-15 06:11:36,566 DEBUG:on stmt: stencil_index.1 = $const60.1 + index00
2024-07-15 06:11:36,566 DEBUG:on stmt: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2024-07-15 06:11:36,566 DEBUG:on stmt: $76unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2024-07-15 06:11:36,566 DEBUG:on stmt: $84compare_op.6 = $76unary_negative.4 <= x1
2024-07-15 06:11:36,566 DEBUG:find_def var='x1' stmt=$84compare_op.6 = $76unary_negative.4 <= x1
2024-07-15 06:11:36,566 DEBUG:on stmt: bool90 = global(bool: <class 'bool'>)
2024-07-15 06:11:36,566 DEBUG:on stmt: $90pred = call bool90($84compare_op.6, func=bool90, args=(Var($84compare_op.6, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:36,567 DEBUG:on stmt: $phi92.0 = x1
2024-07-15 06:11:36,567 DEBUG:find_def var='x1' stmt=$phi92.0 = x1
2024-07-15 06:11:36,567 DEBUG:on stmt: branch $90pred, 299, 345
2024-07-15 06:11:36,567 DEBUG:==== SSA block rewrite pass on 299
2024-07-15 06:11:36,567 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5C92E50>
2024-07-15 06:11:36,567 DEBUG:on stmt: $94compare_op.2 = x1 <= threshold
2024-07-15 06:11:36,567 DEBUG:find_def var='x1' stmt=$94compare_op.2 = x1 <= threshold
2024-07-15 06:11:36,567 DEBUG:find_def_from_top label 299
2024-07-15 06:11:36,567 DEBUG:idom 295 from label 299
2024-07-15 06:11:36,567 DEBUG:find_def_from_bottom label 295
2024-07-15 06:11:36,567 DEBUG:on stmt: bool100 = global(bool: <class 'bool'>)
2024-07-15 06:11:36,567 DEBUG:on stmt: $100pred = call bool100($94compare_op.2, func=bool100, args=(Var($94compare_op.2, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:36,567 DEBUG:on stmt: branch $100pred, 333, 349
2024-07-15 06:11:36,567 DEBUG:==== SSA block rewrite pass on 333
2024-07-15 06:11:36,567 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5C92E50>
2024-07-15 06:11:36,567 DEBUG:on stmt: jump 343
2024-07-15 06:11:36,567 DEBUG:==== SSA block rewrite pass on 345
2024-07-15 06:11:36,567 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5C92E50>
2024-07-15 06:11:36,567 DEBUG:on stmt: jump 349
2024-07-15 06:11:36,567 DEBUG:==== SSA block rewrite pass on 343
2024-07-15 06:11:36,567 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5C92E50>
2024-07-15 06:11:36,567 DEBUG:on stmt: x1.1 = const(int, 0)
2024-07-15 06:11:36,567 DEBUG:on stmt: jump 349
2024-07-15 06:11:36,567 DEBUG:==== SSA block rewrite pass on 349
2024-07-15 06:11:36,567 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5C92E50>
2024-07-15 06:11:36,567 DEBUG:on stmt: bool114 = global(bool: <class 'bool'>)
2024-07-15 06:11:36,567 DEBUG:on stmt: $114pred = call bool114(zero_pos, func=bool114, args=(Var(zero_pos, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:36,567 DEBUG:on stmt: branch $114pred, 353, 357
2024-07-15 06:11:36,567 DEBUG:==== SSA block rewrite pass on 353
2024-07-15 06:11:36,567 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5C92E50>
2024-07-15 06:11:36,567 DEBUG:on stmt: $116load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:36,567 DEBUG:on stmt: $128load_attr.2 = getattr(value=$116load_global.0, attr=signbit)
2024-07-15 06:11:36,567 DEBUG:on stmt: $144call.4 = call $128load_attr.2(x0.2, func=$128load_attr.2, args=[Var(x0.2, audio.py:1153)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:36,567 DEBUG:on stmt: $154load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:36,567 DEBUG:on stmt: $166load_attr.7 = getattr(value=$154load_global.5, attr=signbit)
2024-07-15 06:11:36,568 DEBUG:on stmt: $182call.9 = call $166load_attr.7(x1, func=$166load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:36,568 DEBUG:find_def var='x1' stmt=$182call.9 = call $166load_attr.7(x1, func=$166load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:36,568 DEBUG:find_def_from_top label 353
2024-07-15 06:11:36,568 DEBUG:idom 349 from label 353
2024-07-15 06:11:36,568 DEBUG:find_def_from_bottom label 349
2024-07-15 06:11:36,568 DEBUG:find_def_from_top label 349
2024-07-15 06:11:36,568 DEBUG:insert phi node x1.2 = phi(incoming_values=[], incoming_blocks=[]) at 349
2024-07-15 06:11:36,568 DEBUG:find_def_from_bottom label 345
2024-07-15 06:11:36,568 DEBUG:find_def_from_top label 345
2024-07-15 06:11:36,568 DEBUG:idom 295 from label 345
2024-07-15 06:11:36,568 DEBUG:find_def_from_bottom label 295
2024-07-15 06:11:36,568 DEBUG:incoming_def x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2024-07-15 06:11:36,568 DEBUG:find_def_from_bottom label 299
2024-07-15 06:11:36,568 DEBUG:find_def_from_top label 299
2024-07-15 06:11:36,568 DEBUG:idom 295 from label 299
2024-07-15 06:11:36,568 DEBUG:find_def_from_bottom label 295
2024-07-15 06:11:36,568 DEBUG:incoming_def x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2024-07-15 06:11:36,568 DEBUG:find_def_from_bottom label 343
2024-07-15 06:11:36,568 DEBUG:incoming_def x1.1 = const(int, 0)
2024-07-15 06:11:36,568 DEBUG:replaced with: $182call.9 = call $166load_attr.7(x1.2, func=$166load_attr.7, args=[Var(x1.2, audio.py:1153)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:36,568 DEBUG:on stmt: $192compare_op.10 = $144call.4 != $182call.9
2024-07-15 06:11:36,568 DEBUG:on stmt: $198return_value.11 = cast(value=$192compare_op.10)
2024-07-15 06:11:36,568 DEBUG:on stmt: out0[index00] = $198return_value.11
2024-07-15 06:11:36,568 DEBUG:on stmt: jump 441
2024-07-15 06:11:36,568 DEBUG:==== SSA block rewrite pass on 357
2024-07-15 06:11:36,568 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5C92E50>
2024-07-15 06:11:36,568 DEBUG:on stmt: $200load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:36,568 DEBUG:on stmt: $212load_attr.2 = getattr(value=$200load_global.0, attr=sign)
2024-07-15 06:11:36,568 DEBUG:on stmt: $228call.4 = call $212load_attr.2(x0.2, func=$212load_attr.2, args=[Var(x0.2, audio.py:1153)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:36,568 DEBUG:on stmt: $238load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:36,568 DEBUG:on stmt: $250load_attr.7 = getattr(value=$238load_global.5, attr=sign)
2024-07-15 06:11:36,568 DEBUG:on stmt: $266call.9 = call $250load_attr.7(x1, func=$250load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:36,568 DEBUG:find_def var='x1' stmt=$266call.9 = call $250load_attr.7(x1, func=$250load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:36,569 DEBUG:find_def_from_top label 357
2024-07-15 06:11:36,569 DEBUG:idom 349 from label 357
2024-07-15 06:11:36,569 DEBUG:find_def_from_bottom label 349
2024-07-15 06:11:36,569 DEBUG:replaced with: $266call.9 = call $250load_attr.7(x1.2, func=$250load_attr.7, args=[Var(x1.2, audio.py:1153)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:36,569 DEBUG:on stmt: $276compare_op.10 = $228call.4 != $266call.9
2024-07-15 06:11:36,569 DEBUG:on stmt: $282return_value.11 = cast(value=$276compare_op.10)
2024-07-15 06:11:36,569 DEBUG:on stmt: out0[index00] = $282return_value.11
2024-07-15 06:11:36,569 DEBUG:on stmt: jump 441
2024-07-15 06:11:36,569 DEBUG:==== SSA block rewrite pass on 441
2024-07-15 06:11:36,569 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5C92E50>
2024-07-15 06:11:36,569 DEBUG:on stmt: jump 230
2024-07-15 06:11:37,157 DEBUG:bytecode dump:
>          0	NOP(arg=None, lineno=1039)
           2	RESUME(arg=0, lineno=1039)
           4	LOAD_FAST(arg=0, lineno=1042)
           6	LOAD_CONST(arg=1, lineno=1042)
           8	BINARY_SUBSCR(arg=None, lineno=1042)
          18	LOAD_FAST(arg=0, lineno=1042)
          20	LOAD_CONST(arg=2, lineno=1042)
          22	BINARY_SUBSCR(arg=None, lineno=1042)
          32	COMPARE_OP(arg=4, lineno=1042)
          38	LOAD_FAST(arg=0, lineno=1042)
          40	LOAD_CONST(arg=1, lineno=1042)
          42	BINARY_SUBSCR(arg=None, lineno=1042)
          52	LOAD_FAST(arg=0, lineno=1042)
          54	LOAD_CONST(arg=3, lineno=1042)
          56	BINARY_SUBSCR(arg=None, lineno=1042)
          66	COMPARE_OP(arg=5, lineno=1042)
          72	BINARY_OP(arg=1, lineno=1042)
          76	RETURN_VALUE(arg=None, lineno=1042)
2024-07-15 06:11:37,157 DEBUG:pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-15 06:11:37,157 DEBUG:stack: []
2024-07-15 06:11:37,157 DEBUG:state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-15 06:11:37,157 DEBUG:dispatch pc=0, inst=NOP(arg=None, lineno=1039)
2024-07-15 06:11:37,157 DEBUG:stack []
2024-07-15 06:11:37,157 DEBUG:dispatch pc=2, inst=RESUME(arg=0, lineno=1039)
2024-07-15 06:11:37,157 DEBUG:stack []
2024-07-15 06:11:37,157 DEBUG:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1042)
2024-07-15 06:11:37,157 DEBUG:stack []
2024-07-15 06:11:37,157 DEBUG:dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1042)
2024-07-15 06:11:37,157 DEBUG:stack ['$x4.0']
2024-07-15 06:11:37,157 DEBUG:dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1042)
2024-07-15 06:11:37,157 DEBUG:stack ['$x4.0', '$const6.1']
2024-07-15 06:11:37,157 DEBUG:dispatch pc=18, inst=LOAD_FAST(arg=0, lineno=1042)
2024-07-15 06:11:37,157 DEBUG:stack ['$8binary_subscr.2']
2024-07-15 06:11:37,157 DEBUG:dispatch pc=20, inst=LOAD_CONST(arg=2, lineno=1042)
2024-07-15 06:11:37,157 DEBUG:stack ['$8binary_subscr.2', '$x18.3']
2024-07-15 06:11:37,157 DEBUG:dispatch pc=22, inst=BINARY_SUBSCR(arg=None, lineno=1042)
2024-07-15 06:11:37,157 DEBUG:stack ['$8binary_subscr.2', '$x18.3', '$const20.4']
2024-07-15 06:11:37,157 DEBUG:dispatch pc=32, inst=COMPARE_OP(arg=4, lineno=1042)
2024-07-15 06:11:37,157 DEBUG:stack ['$8binary_subscr.2', '$22binary_subscr.5']
2024-07-15 06:11:37,157 DEBUG:dispatch pc=38, inst=LOAD_FAST(arg=0, lineno=1042)
2024-07-15 06:11:37,158 DEBUG:stack ['$32compare_op.6']
2024-07-15 06:11:37,158 DEBUG:dispatch pc=40, inst=LOAD_CONST(arg=1, lineno=1042)
2024-07-15 06:11:37,158 DEBUG:stack ['$32compare_op.6', '$x38.7']
2024-07-15 06:11:37,158 DEBUG:dispatch pc=42, inst=BINARY_SUBSCR(arg=None, lineno=1042)
2024-07-15 06:11:37,158 DEBUG:stack ['$32compare_op.6', '$x38.7', '$const40.8']
2024-07-15 06:11:37,158 DEBUG:dispatch pc=52, inst=LOAD_FAST(arg=0, lineno=1042)
2024-07-15 06:11:37,158 DEBUG:stack ['$32compare_op.6', '$42binary_subscr.9']
2024-07-15 06:11:37,158 DEBUG:dispatch pc=54, inst=LOAD_CONST(arg=3, lineno=1042)
2024-07-15 06:11:37,158 DEBUG:stack ['$32compare_op.6', '$42binary_subscr.9', '$x52.10']
2024-07-15 06:11:37,158 DEBUG:dispatch pc=56, inst=BINARY_SUBSCR(arg=None, lineno=1042)
2024-07-15 06:11:37,158 DEBUG:stack ['$32compare_op.6', '$42binary_subscr.9', '$x52.10', '$const54.11']
2024-07-15 06:11:37,158 DEBUG:dispatch pc=66, inst=COMPARE_OP(arg=5, lineno=1042)
2024-07-15 06:11:37,158 DEBUG:stack ['$32compare_op.6', '$42binary_subscr.9', '$56binary_subscr.12']
2024-07-15 06:11:37,158 DEBUG:dispatch pc=72, inst=BINARY_OP(arg=1, lineno=1042)
2024-07-15 06:11:37,158 DEBUG:stack ['$32compare_op.6', '$66compare_op.13']
2024-07-15 06:11:37,158 DEBUG:dispatch pc=76, inst=RETURN_VALUE(arg=None, lineno=1042)
2024-07-15 06:11:37,158 DEBUG:stack ['$binop_and_72.14']
2024-07-15 06:11:37,158 DEBUG:end state. edges=[]
2024-07-15 06:11:37,158 DEBUG:-------------------------Prune PHIs-------------------------
2024-07-15 06:11:37,158 DEBUG:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-07-15 06:11:37,158 DEBUG:defmap: {}
2024-07-15 06:11:37,158 DEBUG:phismap: defaultdict(<class 'set'>, {})
2024-07-15 06:11:37,158 DEBUG:changing phismap: defaultdict(<class 'set'>, {})
2024-07-15 06:11:37,158 DEBUG:keep phismap: {}
2024-07-15 06:11:37,158 DEBUG:new_out: defaultdict(<class 'dict'>, {})
2024-07-15 06:11:37,158 DEBUG:----------------------DONE Prune PHIs-----------------------
2024-07-15 06:11:37,158 DEBUG:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1'}), (8, {'index': '$const6.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'res': '$x18.3'}), (20, {'res': '$const20.4'}), (22, {'index': '$const20.4', 'target': '$x18.3', 'res': '$22binary_subscr.5'}), (24, {}), (26, {}), (28, {}), (30, {}), (32, {'lhs': '$8binary_subscr.2', 'rhs': '$22binary_subscr.5', 'res': '$32compare_op.6'}), (34, {}), (36, {}), (38, {'res': '$x38.7'}), (40, {'res': '$const40.8'}), (42, {'index': '$const40.8', 'target': '$x38.7', 'res': '$42binary_subscr.9'}), (44, {}), (46, {}), (48, {}), (50, {}), (52, {'res': '$x52.10'}), (54, {'res': '$const54.11'}), (56, {'index': '$const54.11', 'target': '$x52.10', 'res': '$56binary_subscr.12'}), (58, {}), (60, {}), (62, {}), (64, {}), (66, {'lhs': '$42binary_subscr.9', 'rhs': '$56binary_subscr.12', 'res': '$66compare_op.13'}), (68, {}), (70, {}), (72, {'op': '&', 'lhs': '$32compare_op.6', 'rhs': '$66compare_op.13', 'res': '$binop_and_72.14'}), (74, {}), (76, {'retval': '$binop_and_72.14', 'castval': '$76return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-15 06:11:37,159 DEBUG:label 0:
    x = arg(0, name=x)                       ['x']
    $const6.1 = const(int, 0)                ['$const6.1']
    $8binary_subscr.2 = getitem(value=x, index=$const6.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1', 'x']
    $const20.4 = const(int, -1)              ['$const20.4']
    $22binary_subscr.5 = getitem(value=x, index=$const20.4, fn=<built-in function getitem>) ['$22binary_subscr.5', '$const20.4', 'x']
    $32compare_op.6 = $8binary_subscr.2 > $22binary_subscr.5 ['$22binary_subscr.5', '$32compare_op.6', '$8binary_subscr.2']
    $const40.8 = const(int, 0)               ['$const40.8']
    $42binary_subscr.9 = getitem(value=x, index=$const40.8, fn=<built-in function getitem>) ['$42binary_subscr.9', '$const40.8', 'x']
    $const54.11 = const(int, 1)              ['$const54.11']
    $56binary_subscr.12 = getitem(value=x, index=$const54.11, fn=<built-in function getitem>) ['$56binary_subscr.12', '$const54.11', 'x']
    $66compare_op.13 = $42binary_subscr.9 >= $56binary_subscr.12 ['$42binary_subscr.9', '$56binary_subscr.12', '$66compare_op.13']
    $binop_and_72.14 = $32compare_op.6 & $66compare_op.13 ['$32compare_op.6', '$66compare_op.13', '$binop_and_72.14']
    $76return_value.15 = cast(value=$binop_and_72.14) ['$76return_value.15', '$binop_and_72.14']
    return $76return_value.15                ['$76return_value.15']

2024-07-15 06:11:37,159 DEBUG:bytecode dump:
>          0	NOP(arg=None, lineno=1045)
           2	RESUME(arg=0, lineno=1045)
           4	LOAD_FAST(arg=0, lineno=1048)
           6	LOAD_CONST(arg=1, lineno=1048)
           8	BINARY_SUBSCR(arg=None, lineno=1048)
          18	LOAD_FAST(arg=0, lineno=1048)
          20	LOAD_CONST(arg=2, lineno=1048)
          22	BINARY_SUBSCR(arg=None, lineno=1048)
          32	COMPARE_OP(arg=0, lineno=1048)
          38	LOAD_FAST(arg=0, lineno=1048)
          40	LOAD_CONST(arg=1, lineno=1048)
          42	BINARY_SUBSCR(arg=None, lineno=1048)
          52	LOAD_FAST(arg=0, lineno=1048)
          54	LOAD_CONST(arg=3, lineno=1048)
          56	BINARY_SUBSCR(arg=None, lineno=1048)
          66	COMPARE_OP(arg=1, lineno=1048)
          72	BINARY_OP(arg=1, lineno=1048)
          76	RETURN_VALUE(arg=None, lineno=1048)
2024-07-15 06:11:37,159 DEBUG:pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-15 06:11:37,160 DEBUG:stack: []
2024-07-15 06:11:37,160 DEBUG:state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-15 06:11:37,160 DEBUG:dispatch pc=0, inst=NOP(arg=None, lineno=1045)
2024-07-15 06:11:37,160 DEBUG:stack []
2024-07-15 06:11:37,160 DEBUG:dispatch pc=2, inst=RESUME(arg=0, lineno=1045)
2024-07-15 06:11:37,160 DEBUG:stack []
2024-07-15 06:11:37,160 DEBUG:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1048)
2024-07-15 06:11:37,160 DEBUG:stack []
2024-07-15 06:11:37,160 DEBUG:dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1048)
2024-07-15 06:11:37,160 DEBUG:stack ['$x4.0']
2024-07-15 06:11:37,160 DEBUG:dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1048)
2024-07-15 06:11:37,160 DEBUG:stack ['$x4.0', '$const6.1']
2024-07-15 06:11:37,160 DEBUG:dispatch pc=18, inst=LOAD_FAST(arg=0, lineno=1048)
2024-07-15 06:11:37,160 DEBUG:stack ['$8binary_subscr.2']
2024-07-15 06:11:37,160 DEBUG:dispatch pc=20, inst=LOAD_CONST(arg=2, lineno=1048)
2024-07-15 06:11:37,160 DEBUG:stack ['$8binary_subscr.2', '$x18.3']
2024-07-15 06:11:37,160 DEBUG:dispatch pc=22, inst=BINARY_SUBSCR(arg=None, lineno=1048)
2024-07-15 06:11:37,160 DEBUG:stack ['$8binary_subscr.2', '$x18.3', '$const20.4']
2024-07-15 06:11:37,160 DEBUG:dispatch pc=32, inst=COMPARE_OP(arg=0, lineno=1048)
2024-07-15 06:11:37,160 DEBUG:stack ['$8binary_subscr.2', '$22binary_subscr.5']
2024-07-15 06:11:37,160 DEBUG:dispatch pc=38, inst=LOAD_FAST(arg=0, lineno=1048)
2024-07-15 06:11:37,160 DEBUG:stack ['$32compare_op.6']
2024-07-15 06:11:37,160 DEBUG:dispatch pc=40, inst=LOAD_CONST(arg=1, lineno=1048)
2024-07-15 06:11:37,160 DEBUG:stack ['$32compare_op.6', '$x38.7']
2024-07-15 06:11:37,160 DEBUG:dispatch pc=42, inst=BINARY_SUBSCR(arg=None, lineno=1048)
2024-07-15 06:11:37,160 DEBUG:stack ['$32compare_op.6', '$x38.7', '$const40.8']
2024-07-15 06:11:37,160 DEBUG:dispatch pc=52, inst=LOAD_FAST(arg=0, lineno=1048)
2024-07-15 06:11:37,160 DEBUG:stack ['$32compare_op.6', '$42binary_subscr.9']
2024-07-15 06:11:37,160 DEBUG:dispatch pc=54, inst=LOAD_CONST(arg=3, lineno=1048)
2024-07-15 06:11:37,160 DEBUG:stack ['$32compare_op.6', '$42binary_subscr.9', '$x52.10']
2024-07-15 06:11:37,160 DEBUG:dispatch pc=56, inst=BINARY_SUBSCR(arg=None, lineno=1048)
2024-07-15 06:11:37,160 DEBUG:stack ['$32compare_op.6', '$42binary_subscr.9', '$x52.10', '$const54.11']
2024-07-15 06:11:37,161 DEBUG:dispatch pc=66, inst=COMPARE_OP(arg=1, lineno=1048)
2024-07-15 06:11:37,161 DEBUG:stack ['$32compare_op.6', '$42binary_subscr.9', '$56binary_subscr.12']
2024-07-15 06:11:37,161 DEBUG:dispatch pc=72, inst=BINARY_OP(arg=1, lineno=1048)
2024-07-15 06:11:37,161 DEBUG:stack ['$32compare_op.6', '$66compare_op.13']
2024-07-15 06:11:37,161 DEBUG:dispatch pc=76, inst=RETURN_VALUE(arg=None, lineno=1048)
2024-07-15 06:11:37,161 DEBUG:stack ['$binop_and_72.14']
2024-07-15 06:11:37,161 DEBUG:end state. edges=[]
2024-07-15 06:11:37,161 DEBUG:-------------------------Prune PHIs-------------------------
2024-07-15 06:11:37,161 DEBUG:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-07-15 06:11:37,161 DEBUG:defmap: {}
2024-07-15 06:11:37,161 DEBUG:phismap: defaultdict(<class 'set'>, {})
2024-07-15 06:11:37,161 DEBUG:changing phismap: defaultdict(<class 'set'>, {})
2024-07-15 06:11:37,161 DEBUG:keep phismap: {}
2024-07-15 06:11:37,161 DEBUG:new_out: defaultdict(<class 'dict'>, {})
2024-07-15 06:11:37,161 DEBUG:----------------------DONE Prune PHIs-----------------------
2024-07-15 06:11:37,161 DEBUG:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1'}), (8, {'index': '$const6.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'res': '$x18.3'}), (20, {'res': '$const20.4'}), (22, {'index': '$const20.4', 'target': '$x18.3', 'res': '$22binary_subscr.5'}), (24, {}), (26, {}), (28, {}), (30, {}), (32, {'lhs': '$8binary_subscr.2', 'rhs': '$22binary_subscr.5', 'res': '$32compare_op.6'}), (34, {}), (36, {}), (38, {'res': '$x38.7'}), (40, {'res': '$const40.8'}), (42, {'index': '$const40.8', 'target': '$x38.7', 'res': '$42binary_subscr.9'}), (44, {}), (46, {}), (48, {}), (50, {}), (52, {'res': '$x52.10'}), (54, {'res': '$const54.11'}), (56, {'index': '$const54.11', 'target': '$x52.10', 'res': '$56binary_subscr.12'}), (58, {}), (60, {}), (62, {}), (64, {}), (66, {'lhs': '$42binary_subscr.9', 'rhs': '$56binary_subscr.12', 'res': '$66compare_op.13'}), (68, {}), (70, {}), (72, {'op': '&', 'lhs': '$32compare_op.6', 'rhs': '$66compare_op.13', 'res': '$binop_and_72.14'}), (74, {}), (76, {'retval': '$binop_and_72.14', 'castval': '$76return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-15 06:11:37,161 DEBUG:label 0:
    x = arg(0, name=x)                       ['x']
    $const6.1 = const(int, 0)                ['$const6.1']
    $8binary_subscr.2 = getitem(value=x, index=$const6.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1', 'x']
    $const20.4 = const(int, -1)              ['$const20.4']
    $22binary_subscr.5 = getitem(value=x, index=$const20.4, fn=<built-in function getitem>) ['$22binary_subscr.5', '$const20.4', 'x']
    $32compare_op.6 = $8binary_subscr.2 < $22binary_subscr.5 ['$22binary_subscr.5', '$32compare_op.6', '$8binary_subscr.2']
    $const40.8 = const(int, 0)               ['$const40.8']
    $42binary_subscr.9 = getitem(value=x, index=$const40.8, fn=<built-in function getitem>) ['$42binary_subscr.9', '$const40.8', 'x']
    $const54.11 = const(int, 1)              ['$const54.11']
    $56binary_subscr.12 = getitem(value=x, index=$const54.11, fn=<built-in function getitem>) ['$56binary_subscr.12', '$const54.11', 'x']
    $66compare_op.13 = $42binary_subscr.9 <= $56binary_subscr.12 ['$42binary_subscr.9', '$56binary_subscr.12', '$66compare_op.13']
    $binop_and_72.14 = $32compare_op.6 & $66compare_op.13 ['$32compare_op.6', '$66compare_op.13', '$binop_and_72.14']
    $76return_value.15 = cast(value=$binop_and_72.14) ['$76return_value.15', '$binop_and_72.14']
    return $76return_value.15                ['$76return_value.15']

2024-07-15 06:11:37,164 DEBUG:bytecode dump:
>          0	NOP(arg=None, lineno=1051)
           2	RESUME(arg=0, lineno=1051)
           4	LOAD_GLOBAL(arg=1, lineno=1065)
          16	LOAD_FAST(arg=0, lineno=1065)
          18	PRECALL(arg=1, lineno=1065)
          22	CALL(arg=1, lineno=1065)
          32	LOAD_FAST(arg=1, lineno=1065)
          34	LOAD_CONST(arg=1, lineno=1065)
          36	LOAD_CONST(arg=1, lineno=1065)
          38	BUILD_SLICE(arg=2, lineno=1065)
          40	STORE_SUBSCR(arg=None, lineno=1065)
          44	LOAD_CONST(arg=1, lineno=1065)
          46	RETURN_VALUE(arg=None, lineno=1065)
2024-07-15 06:11:37,164 DEBUG:pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-15 06:11:37,164 DEBUG:stack: []
2024-07-15 06:11:37,164 DEBUG:state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-15 06:11:37,164 DEBUG:dispatch pc=0, inst=NOP(arg=None, lineno=1051)
2024-07-15 06:11:37,164 DEBUG:stack []
2024-07-15 06:11:37,164 DEBUG:dispatch pc=2, inst=RESUME(arg=0, lineno=1051)
2024-07-15 06:11:37,164 DEBUG:stack []
2024-07-15 06:11:37,164 DEBUG:dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=1065)
2024-07-15 06:11:37,164 DEBUG:stack []
2024-07-15 06:11:37,164 DEBUG:dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=1065)
2024-07-15 06:11:37,165 DEBUG:stack ['$null$4.1', '$4load_global.0']
2024-07-15 06:11:37,165 DEBUG:dispatch pc=18, inst=PRECALL(arg=1, lineno=1065)
2024-07-15 06:11:37,165 DEBUG:stack ['$null$4.1', '$4load_global.0', '$x16.2']
2024-07-15 06:11:37,165 DEBUG:dispatch pc=22, inst=CALL(arg=1, lineno=1065)
2024-07-15 06:11:37,165 DEBUG:stack ['$null$4.1', '$4load_global.0', '$x16.2']
2024-07-15 06:11:37,165 DEBUG:dispatch pc=32, inst=LOAD_FAST(arg=1, lineno=1065)
2024-07-15 06:11:37,165 DEBUG:stack ['$22call.3']
2024-07-15 06:11:37,165 DEBUG:dispatch pc=34, inst=LOAD_CONST(arg=1, lineno=1065)
2024-07-15 06:11:37,165 DEBUG:stack ['$22call.3', '$y32.4']
2024-07-15 06:11:37,165 DEBUG:dispatch pc=36, inst=LOAD_CONST(arg=1, lineno=1065)
2024-07-15 06:11:37,165 DEBUG:stack ['$22call.3', '$y32.4', '$const34.5']
2024-07-15 06:11:37,165 DEBUG:dispatch pc=38, inst=BUILD_SLICE(arg=2, lineno=1065)
2024-07-15 06:11:37,165 DEBUG:stack ['$22call.3', '$y32.4', '$const34.5', '$const36.6']
2024-07-15 06:11:37,165 DEBUG:dispatch pc=40, inst=STORE_SUBSCR(arg=None, lineno=1065)
2024-07-15 06:11:37,165 DEBUG:stack ['$22call.3', '$y32.4', '$38build_slice.8']
2024-07-15 06:11:37,165 DEBUG:dispatch pc=44, inst=LOAD_CONST(arg=1, lineno=1065)
2024-07-15 06:11:37,165 DEBUG:stack []
2024-07-15 06:11:37,165 DEBUG:dispatch pc=46, inst=RETURN_VALUE(arg=None, lineno=1065)
2024-07-15 06:11:37,165 DEBUG:stack ['$const44.9']
2024-07-15 06:11:37,165 DEBUG:end state. edges=[]
2024-07-15 06:11:37,165 DEBUG:-------------------------Prune PHIs-------------------------
2024-07-15 06:11:37,165 DEBUG:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-07-15 06:11:37,165 DEBUG:defmap: {}
2024-07-15 06:11:37,165 DEBUG:phismap: defaultdict(<class 'set'>, {})
2024-07-15 06:11:37,165 DEBUG:changing phismap: defaultdict(<class 'set'>, {})
2024-07-15 06:11:37,165 DEBUG:keep phismap: {}
2024-07-15 06:11:37,165 DEBUG:new_out: defaultdict(<class 'dict'>, {})
2024-07-15 06:11:37,165 DEBUG:----------------------DONE Prune PHIs-----------------------
2024-07-15 06:11:37,165 DEBUG:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (6, {}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$x16.2'}), (18, {}), (20, {}), (22, {'func': '$4load_global.0', 'args': ['$x16.2'], 'kw_names': None, 'res': '$22call.3'}), (24, {}), (26, {}), (28, {}), (30, {}), (32, {'res': '$y32.4'}), (34, {'res': '$const34.5'}), (36, {'res': '$const36.6'}), (38, {'start': '$const34.5', 'stop': '$const36.6', 'step': None, 'res': '$38build_slice.8', 'slicevar': '$38build_slice.7'}), (40, {'target': '$y32.4', 'index': '$38build_slice.8', 'value': '$22call.3'}), (42, {}), (44, {'res': '$const44.9'}), (46, {'retval': '$const44.9', 'castval': '$46return_value.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-15 06:11:37,166 DEBUG:label 0:
    x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    $4load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x00000221B6075290>) ['$4load_global.0']
    $22call.3 = call $4load_global.0(x, func=$4load_global.0, args=[Var(x, utils.py:1051)], kws=(), vararg=None, varkwarg=None, target=None) ['$22call.3', '$4load_global.0', 'x']
    $const34.5 = const(NoneType, None)       ['$const34.5']
    $const36.6 = const(NoneType, None)       ['$const36.6']
    $38build_slice.7 = global(slice: <class 'slice'>) ['$38build_slice.7']
    $38build_slice.8 = call $38build_slice.7($const34.5, $const36.6, func=$38build_slice.7, args=(Var($const34.5, utils.py:1065), Var($const36.6, utils.py:1065)), kws=(), vararg=None, varkwarg=None, target=None) ['$38build_slice.7', '$38build_slice.8', '$const34.5', '$const36.6']
    y[$38build_slice.8] = $22call.3          ['$22call.3', '$38build_slice.8', 'y']
    $const44.9 = const(NoneType, None)       ['$const44.9']
    $46return_value.10 = cast(value=$const44.9) ['$46return_value.10', '$const44.9']
    return $46return_value.10                ['$46return_value.10']

2024-07-15 06:11:37,171 DEBUG:==== SSA block analysis pass on 0
2024-07-15 06:11:37,171 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B60B7B10>
2024-07-15 06:11:37,171 DEBUG:on stmt: x = arg(0, name=x)
2024-07-15 06:11:37,171 DEBUG:on stmt: y = arg(1, name=y)
2024-07-15 06:11:37,171 DEBUG:on stmt: $4load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x00000221B6075290>)
2024-07-15 06:11:37,171 DEBUG:on stmt: $22call.3 = call $4load_global.0(x, func=$4load_global.0, args=[Var(x, utils.py:1051)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:37,171 DEBUG:on stmt: $const34.5 = const(NoneType, None)
2024-07-15 06:11:37,171 DEBUG:on stmt: $const36.6 = const(NoneType, None)
2024-07-15 06:11:37,171 DEBUG:on stmt: $38build_slice.7 = global(slice: <class 'slice'>)
2024-07-15 06:11:37,171 DEBUG:on stmt: $38build_slice.8 = call $38build_slice.7($const34.5, $const36.6, func=$38build_slice.7, args=(Var($const34.5, utils.py:1065), Var($const36.6, utils.py:1065)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:37,171 DEBUG:on stmt: y[slice(None, None, None)] = $22call.3
2024-07-15 06:11:37,171 DEBUG:on stmt: $const44.9 = const(NoneType, None)
2024-07-15 06:11:37,171 DEBUG:on stmt: $46return_value.10 = cast(value=$const44.9)
2024-07-15 06:11:37,171 DEBUG:on stmt: return $46return_value.10
2024-07-15 06:11:37,172 DEBUG:defs defaultdict(<class 'list'>,
            {'$22call.3': [(<numba.core.ir.Assign object at 0x00000221B608ECD0>,
                            0)],
             '$38build_slice.7': [(<numba.core.ir.Assign object at 0x00000221B608F390>,
                                   0)],
             '$38build_slice.8': [(<numba.core.ir.Assign object at 0x00000221B608F4D0>,
                                   0)],
             '$46return_value.10': [(<numba.core.ir.Assign object at 0x00000221B608F990>,
                                     0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x00000221B608E8D0>,
                                  0)],
             '$const34.5': [(<numba.core.ir.Assign object at 0x00000221B608F010>,
                             0)],
             '$const36.6': [(<numba.core.ir.Assign object at 0x00000221B608F1D0>,
                             0)],
             '$const44.9': [(<numba.core.ir.Assign object at 0x00000221B608F790>,
                             0)],
             'x': [(<numba.core.ir.Assign object at 0x00000221B608E550>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x00000221B608E650>, 0)]})
2024-07-15 06:11:37,172 DEBUG:SSA violators <numba.core.utils.OrderedSet object at 0x00000221B5E13F10>
2024-07-15 06:11:37,193 DEBUG:bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	RESUME(arg=0, lineno=1)
           4	LOAD_FAST(arg=0, lineno=2)
           6	LOAD_ATTR(arg=0, lineno=2)
          16	STORE_FAST(arg=1, lineno=2)
          18	LOAD_GLOBAL(arg=2, lineno=3)
          30	LOAD_METHOD(arg=2, lineno=3)
          52	LOAD_FAST(arg=1, lineno=3)
          54	LOAD_GLOBAL(arg=2, lineno=3)
          66	LOAD_ATTR(arg=3, lineno=3)
          76	KW_NAMES(arg=1, lineno=3)
          78	PRECALL(arg=2, lineno=3)
          82	CALL(arg=2, lineno=3)
          92	STORE_FAST(arg=2, lineno=3)
          94	LOAD_CONST(arg=2, lineno=4)
          96	LOAD_FAST(arg=2, lineno=4)
          98	LOAD_CONST(arg=0, lineno=4)
         100	LOAD_CONST(arg=3, lineno=4)
         102	BUILD_SLICE(arg=2, lineno=4)
         104	STORE_SUBSCR(arg=None, lineno=4)
         108	LOAD_CONST(arg=2, lineno=5)
         110	LOAD_FAST(arg=2, lineno=5)
         112	LOAD_CONST(arg=4, lineno=5)
         114	LOAD_CONST(arg=0, lineno=5)
         116	BUILD_SLICE(arg=2, lineno=5)
         118	STORE_SUBSCR(arg=None, lineno=5)
         122	LOAD_GLOBAL(arg=9, lineno=6)
         134	LOAD_GLOBAL(arg=11, lineno=6)
         146	LOAD_CONST(arg=2, lineno=6)
         148	LOAD_CONST(arg=4, lineno=6)
         150	PRECALL(arg=2, lineno=6)
         154	CALL(arg=2, lineno=6)
         164	UNARY_NEGATIVE(arg=None, lineno=6)
         166	LOAD_FAST(arg=1, lineno=6)
         168	LOAD_CONST(arg=2, lineno=6)
         170	BINARY_SUBSCR(arg=None, lineno=6)
         180	LOAD_GLOBAL(arg=13, lineno=6)
         192	LOAD_CONST(arg=2, lineno=6)
         194	LOAD_CONST(arg=3, lineno=6)
         196	PRECALL(arg=2, lineno=6)
         200	CALL(arg=2, lineno=6)
         210	BINARY_OP(arg=10, lineno=6)
         214	PRECALL(arg=2, lineno=6)
         218	CALL(arg=2, lineno=6)
         228	GET_ITER(arg=None, lineno=6)
>        230	FOR_ITER(arg=4, lineno=6)
         232	STORE_FAST(arg=3, lineno=6)
         234	LOAD_CONST(arg=2, lineno=7)
         236	STORE_FAST(arg=4, lineno=7)
         238	JUMP_BACKWARD(arg=5, lineno=7)
>        240	LOAD_FAST(arg=2, lineno=8)
         242	RETURN_VALUE(arg=None, lineno=8)
2024-07-15 06:11:37,193 DEBUG:pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-15 06:11:37,193 DEBUG:stack: []
2024-07-15 06:11:37,193 DEBUG:state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-15 06:11:37,193 DEBUG:dispatch pc=0, inst=NOP(arg=None, lineno=1)
2024-07-15 06:11:37,193 DEBUG:stack []
2024-07-15 06:11:37,193 DEBUG:dispatch pc=2, inst=RESUME(arg=0, lineno=1)
2024-07-15 06:11:37,193 DEBUG:stack []
2024-07-15 06:11:37,193 DEBUG:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2)
2024-07-15 06:11:37,194 DEBUG:stack []
2024-07-15 06:11:37,194 DEBUG:dispatch pc=6, inst=LOAD_ATTR(arg=0, lineno=2)
2024-07-15 06:11:37,194 DEBUG:stack ['$x4.0']
2024-07-15 06:11:37,194 DEBUG:dispatch pc=16, inst=STORE_FAST(arg=1, lineno=2)
2024-07-15 06:11:37,194 DEBUG:stack ['$6load_attr.1']
2024-07-15 06:11:37,194 DEBUG:dispatch pc=18, inst=LOAD_GLOBAL(arg=2, lineno=3)
2024-07-15 06:11:37,194 DEBUG:stack []
2024-07-15 06:11:37,194 DEBUG:dispatch pc=30, inst=LOAD_METHOD(arg=2, lineno=3)
2024-07-15 06:11:37,194 DEBUG:stack ['$18load_global.2']
2024-07-15 06:11:37,194 DEBUG:dispatch pc=52, inst=LOAD_FAST(arg=1, lineno=3)
2024-07-15 06:11:37,194 DEBUG:stack ['$null$30.3', '$30load_method.4']
2024-07-15 06:11:37,195 DEBUG:dispatch pc=54, inst=LOAD_GLOBAL(arg=2, lineno=3)
2024-07-15 06:11:37,195 DEBUG:stack ['$null$30.3', '$30load_method.4', '$full_shape052.5']
2024-07-15 06:11:37,195 DEBUG:dispatch pc=66, inst=LOAD_ATTR(arg=3, lineno=3)
2024-07-15 06:11:37,195 DEBUG:stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$54load_global.6']
2024-07-15 06:11:37,195 DEBUG:dispatch pc=76, inst=KW_NAMES(arg=1, lineno=3)
2024-07-15 06:11:37,195 DEBUG:stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
2024-07-15 06:11:37,195 DEBUG:dispatch pc=78, inst=PRECALL(arg=2, lineno=3)
2024-07-15 06:11:37,195 DEBUG:stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
2024-07-15 06:11:37,195 DEBUG:dispatch pc=82, inst=CALL(arg=2, lineno=3)
2024-07-15 06:11:37,195 DEBUG:stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
2024-07-15 06:11:37,195 DEBUG:dispatch pc=92, inst=STORE_FAST(arg=2, lineno=3)
2024-07-15 06:11:37,195 DEBUG:stack ['$82call.8']
2024-07-15 06:11:37,195 DEBUG:dispatch pc=94, inst=LOAD_CONST(arg=2, lineno=4)
2024-07-15 06:11:37,195 DEBUG:stack []
2024-07-15 06:11:37,195 DEBUG:dispatch pc=96, inst=LOAD_FAST(arg=2, lineno=4)
2024-07-15 06:11:37,195 DEBUG:stack ['$const94.9']
2024-07-15 06:11:37,195 DEBUG:dispatch pc=98, inst=LOAD_CONST(arg=0, lineno=4)
2024-07-15 06:11:37,195 DEBUG:stack ['$const94.9', '$out096.10']
2024-07-15 06:11:37,196 DEBUG:dispatch pc=100, inst=LOAD_CONST(arg=3, lineno=4)
2024-07-15 06:11:37,196 DEBUG:stack ['$const94.9', '$out096.10', '$const98.11']
2024-07-15 06:11:37,196 DEBUG:dispatch pc=102, inst=BUILD_SLICE(arg=2, lineno=4)
2024-07-15 06:11:37,196 DEBUG:stack ['$const94.9', '$out096.10', '$const98.11', '$const100.12']
2024-07-15 06:11:37,196 DEBUG:dispatch pc=104, inst=STORE_SUBSCR(arg=None, lineno=4)
2024-07-15 06:11:37,196 DEBUG:stack ['$const94.9', '$out096.10', '$102build_slice.14']
2024-07-15 06:11:37,196 DEBUG:dispatch pc=108, inst=LOAD_CONST(arg=2, lineno=5)
2024-07-15 06:11:37,196 DEBUG:stack []
2024-07-15 06:11:37,196 DEBUG:dispatch pc=110, inst=LOAD_FAST(arg=2, lineno=5)
2024-07-15 06:11:37,196 DEBUG:stack ['$const108.15']
2024-07-15 06:11:37,196 DEBUG:dispatch pc=112, inst=LOAD_CONST(arg=4, lineno=5)
2024-07-15 06:11:37,196 DEBUG:stack ['$const108.15', '$out0110.16']
2024-07-15 06:11:37,196 DEBUG:dispatch pc=114, inst=LOAD_CONST(arg=0, lineno=5)
2024-07-15 06:11:37,196 DEBUG:stack ['$const108.15', '$out0110.16', '$const112.17']
2024-07-15 06:11:37,196 DEBUG:dispatch pc=116, inst=BUILD_SLICE(arg=2, lineno=5)
2024-07-15 06:11:37,196 DEBUG:stack ['$const108.15', '$out0110.16', '$const112.17', '$const114.18']
2024-07-15 06:11:37,197 DEBUG:dispatch pc=118, inst=STORE_SUBSCR(arg=None, lineno=5)
2024-07-15 06:11:37,197 DEBUG:stack ['$const108.15', '$out0110.16', '$116build_slice.20']
2024-07-15 06:11:37,197 DEBUG:dispatch pc=122, inst=LOAD_GLOBAL(arg=9, lineno=6)
2024-07-15 06:11:37,197 DEBUG:stack []
2024-07-15 06:11:37,197 DEBUG:dispatch pc=134, inst=LOAD_GLOBAL(arg=11, lineno=6)
2024-07-15 06:11:37,197 DEBUG:stack ['$null$122.22', '$122load_global.21']
2024-07-15 06:11:37,197 DEBUG:dispatch pc=146, inst=LOAD_CONST(arg=2, lineno=6)
2024-07-15 06:11:37,197 DEBUG:stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23']
2024-07-15 06:11:37,197 DEBUG:dispatch pc=148, inst=LOAD_CONST(arg=4, lineno=6)
2024-07-15 06:11:37,197 DEBUG:stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25']
2024-07-15 06:11:37,197 DEBUG:dispatch pc=150, inst=PRECALL(arg=2, lineno=6)
2024-07-15 06:11:37,197 DEBUG:stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25', '$const148.26']
2024-07-15 06:11:37,197 DEBUG:dispatch pc=154, inst=CALL(arg=2, lineno=6)
2024-07-15 06:11:37,197 DEBUG:stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25', '$const148.26']
2024-07-15 06:11:37,197 DEBUG:dispatch pc=164, inst=UNARY_NEGATIVE(arg=None, lineno=6)
2024-07-15 06:11:37,197 DEBUG:stack ['$null$122.22', '$122load_global.21', '$154call.27']
2024-07-15 06:11:37,197 DEBUG:dispatch pc=166, inst=LOAD_FAST(arg=1, lineno=6)
2024-07-15 06:11:37,197 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28']
2024-07-15 06:11:37,197 DEBUG:dispatch pc=168, inst=LOAD_CONST(arg=2, lineno=6)
2024-07-15 06:11:37,197 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$full_shape0166.29']
2024-07-15 06:11:37,197 DEBUG:dispatch pc=170, inst=BINARY_SUBSCR(arg=None, lineno=6)
2024-07-15 06:11:37,197 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$full_shape0166.29', '$const168.30']
2024-07-15 06:11:37,197 DEBUG:dispatch pc=180, inst=LOAD_GLOBAL(arg=13, lineno=6)
2024-07-15 06:11:37,198 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31']
2024-07-15 06:11:37,198 DEBUG:dispatch pc=192, inst=LOAD_CONST(arg=2, lineno=6)
2024-07-15 06:11:37,198 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32']
2024-07-15 06:11:37,198 DEBUG:dispatch pc=194, inst=LOAD_CONST(arg=3, lineno=6)
2024-07-15 06:11:37,198 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34']
2024-07-15 06:11:37,198 DEBUG:dispatch pc=196, inst=PRECALL(arg=2, lineno=6)
2024-07-15 06:11:37,198 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34', '$const194.35']
2024-07-15 06:11:37,198 DEBUG:dispatch pc=200, inst=CALL(arg=2, lineno=6)
2024-07-15 06:11:37,198 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34', '$const194.35']
2024-07-15 06:11:37,198 DEBUG:dispatch pc=210, inst=BINARY_OP(arg=10, lineno=6)
2024-07-15 06:11:37,198 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$200call.36']
2024-07-15 06:11:37,198 DEBUG:dispatch pc=214, inst=PRECALL(arg=2, lineno=6)
2024-07-15 06:11:37,198 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$binop_sub210.37']
2024-07-15 06:11:37,198 DEBUG:dispatch pc=218, inst=CALL(arg=2, lineno=6)
2024-07-15 06:11:37,198 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$binop_sub210.37']
2024-07-15 06:11:37,198 DEBUG:dispatch pc=228, inst=GET_ITER(arg=None, lineno=6)
2024-07-15 06:11:37,198 DEBUG:stack ['$218call.38']
2024-07-15 06:11:37,198 DEBUG:end state. edges=[Edge(pc=230, stack=('$228get_iter.39',), blockstack=(), npush=0)]
2024-07-15 06:11:37,199 DEBUG:pending: deque([State(pc_initial=230 nstack_initial=1)])
2024-07-15 06:11:37,199 DEBUG:stack: ['$phi230.0']
2024-07-15 06:11:37,199 DEBUG:state.pc_initial: State(pc_initial=230 nstack_initial=1)
2024-07-15 06:11:37,199 DEBUG:dispatch pc=230, inst=FOR_ITER(arg=4, lineno=6)
2024-07-15 06:11:37,199 DEBUG:stack ['$phi230.0']
2024-07-15 06:11:37,199 DEBUG:end state. edges=[Edge(pc=240, stack=(), blockstack=(), npush=0), Edge(pc=232, stack=('$phi230.0', '$230for_iter.2'), blockstack=(), npush=0)]
2024-07-15 06:11:37,199 DEBUG:pending: deque([State(pc_initial=240 nstack_initial=0), State(pc_initial=232 nstack_initial=2)])
2024-07-15 06:11:37,199 DEBUG:stack: []
2024-07-15 06:11:37,199 DEBUG:state.pc_initial: State(pc_initial=240 nstack_initial=0)
2024-07-15 06:11:37,199 DEBUG:dispatch pc=240, inst=LOAD_FAST(arg=2, lineno=8)
2024-07-15 06:11:37,199 DEBUG:stack []
2024-07-15 06:11:37,199 DEBUG:dispatch pc=242, inst=RETURN_VALUE(arg=None, lineno=8)
2024-07-15 06:11:37,199 DEBUG:stack ['$out0240.0']
2024-07-15 06:11:37,200 DEBUG:end state. edges=[]
2024-07-15 06:11:37,200 DEBUG:pending: deque([State(pc_initial=232 nstack_initial=2)])
2024-07-15 06:11:37,200 DEBUG:stack: ['$phi232.0', '$phi232.1']
2024-07-15 06:11:37,200 DEBUG:state.pc_initial: State(pc_initial=232 nstack_initial=2)
2024-07-15 06:11:37,200 DEBUG:dispatch pc=232, inst=STORE_FAST(arg=3, lineno=6)
2024-07-15 06:11:37,200 DEBUG:stack ['$phi232.0', '$phi232.1']
2024-07-15 06:11:37,200 DEBUG:dispatch pc=234, inst=LOAD_CONST(arg=2, lineno=7)
2024-07-15 06:11:37,200 DEBUG:stack ['$phi232.0']
2024-07-15 06:11:37,200 DEBUG:dispatch pc=236, inst=STORE_FAST(arg=4, lineno=7)
2024-07-15 06:11:37,200 DEBUG:stack ['$phi232.0', '$const234.2']
2024-07-15 06:11:37,200 DEBUG:dispatch pc=238, inst=JUMP_BACKWARD(arg=5, lineno=7)
2024-07-15 06:11:37,200 DEBUG:stack ['$phi232.0']
2024-07-15 06:11:37,200 DEBUG:end state. edges=[Edge(pc=230, stack=('$phi232.0',), blockstack=(), npush=0)]
2024-07-15 06:11:37,200 DEBUG:pending: deque([State(pc_initial=230 nstack_initial=1)])
2024-07-15 06:11:37,200 DEBUG:-------------------------Prune PHIs-------------------------
2024-07-15 06:11:37,200 DEBUG:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=230 nstack_initial=1): {'$phi230.0'},
             State(pc_initial=232 nstack_initial=2): {'$phi232.1'},
             State(pc_initial=240 nstack_initial=0): set()})
2024-07-15 06:11:37,200 DEBUG:defmap: {'$phi230.0': State(pc_initial=0 nstack_initial=0),
 '$phi232.1': State(pc_initial=230 nstack_initial=1)}
2024-07-15 06:11:37,200 DEBUG:phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi232.0',
                            State(pc_initial=232 nstack_initial=2))},
             '$phi232.0': {('$phi230.0',
                            State(pc_initial=230 nstack_initial=1))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-07-15 06:11:37,201 DEBUG:changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi230.0',
                            State(pc_initial=230 nstack_initial=1))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-07-15 06:11:37,201 DEBUG:changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-07-15 06:11:37,201 DEBUG:changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-07-15 06:11:37,202 DEBUG:keep phismap: {'$phi230.0': {('$228get_iter.39', State(pc_initial=0 nstack_initial=0))},
 '$phi232.1': {('$230for_iter.2', State(pc_initial=230 nstack_initial=1))}}
2024-07-15 06:11:37,202 DEBUG:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi230.0': '$228get_iter.39'},
             State(pc_initial=230 nstack_initial=1): {'$phi232.1': '$230for_iter.2'}})
2024-07-15 06:11:37,202 DEBUG:----------------------DONE Prune PHIs-----------------------
2024-07-15 06:11:37,202 DEBUG:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'item': '$x4.0', 'res': '$6load_attr.1'}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'value': '$6load_attr.1'}), (18, {'idx': 1, 'res': '$18load_global.2'}), (20, {}), (22, {}), (24, {}), (26, {}), (28, {}), (30, {'item': '$18load_global.2', 'res': '$30load_method.4'}), (32, {}), (34, {}), (36, {}), (38, {}), (40, {}), (42, {}), (44, {}), (46, {}), (48, {}), (50, {}), (52, {'res': '$full_shape052.5'}), (54, {'idx': 1, 'res': '$54load_global.6'}), (56, {}), (58, {}), (60, {}), (62, {}), (64, {}), (66, {'item': '$54load_global.6', 'res': '$66load_attr.7'}), (68, {}), (70, {}), (72, {}), (74, {}), (78, {}), (80, {}), (82, {'func': '$30load_method.4', 'args': ['$full_shape052.5', '$66load_attr.7'], 'kw_names': 1, 'res': '$82call.8'}), (84, {}), (86, {}), (88, {}), (90, {}), (92, {'value': '$82call.8'}), (94, {'res': '$const94.9'}), (96, {'res': '$out096.10'}), (98, {'res': '$const98.11'}), (100, {'res': '$const100.12'}), (102, {'start': '$const98.11', 'stop': '$const100.12', 'step': None, 'res': '$102build_slice.14', 'slicevar': '$102build_slice.13'}), (104, {'target': '$out096.10', 'index': '$102build_slice.14', 'value': '$const94.9'}), (106, {}), (108, {'res': '$const108.15'}), (110, {'res': '$out0110.16'}), (112, {'res': '$const112.17'}), (114, {'res': '$const114.18'}), (116, {'start': '$const112.17', 'stop': '$const114.18', 'step': None, 'res': '$116build_slice.20', 'slicevar': '$116build_slice.19'}), (118, {'target': '$out0110.16', 'index': '$116build_slice.20', 'value': '$const108.15'}), (120, {}), (122, {'idx': 4, 'res': '$122load_global.21'}), (124, {}), (126, {}), (128, {}), (130, {}), (132, {}), (134, {'idx': 5, 'res': '$134load_global.23'}), (136, {}), (138, {}), (140, {}), (142, {}), (144, {}), (146, {'res': '$const146.25'}), (148, {'res': '$const148.26'}), (150, {}), (152, {}), (154, {'func': '$134load_global.23', 'args': ['$const146.25', '$const148.26'], 'kw_names': None, 'res': '$154call.27'}), (156, {}), (158, {}), (160, {}), (162, {}), (164, {'value': '$154call.27', 'res': '$164unary_negative.28'}), (166, {'res': '$full_shape0166.29'}), (168, {'res': '$const168.30'}), (170, {'index': '$const168.30', 'target': '$full_shape0166.29', 'res': '$170binary_subscr.31'}), (172, {}), (174, {}), (176, {}), (178, {}), (180, {'idx': 6, 'res': '$180load_global.32'}), (182, {}), (184, {}), (186, {}), (188, {}), (190, {}), (192, {'res': '$const192.34'}), (194, {'res': '$const194.35'}), (196, {}), (198, {}), (200, {'func': '$180load_global.32', 'args': ['$const192.34', '$const194.35'], 'kw_names': None, 'res': '$200call.36'}), (202, {}), (204, {}), (206, {}), (208, {}), (210, {'op': '-', 'lhs': '$170binary_subscr.31', 'rhs': '$200call.36', 'res': '$binop_sub210.37'}), (212, {}), (214, {}), (216, {}), (218, {'func': '$122load_global.21', 'args': ['$164unary_negative.28', '$binop_sub210.37'], 'kw_names': None, 'res': '$218call.38'}), (220, {}), (222, {}), (224, {}), (226, {}), (228, {'value': '$218call.38', 'res': '$228get_iter.39'})), outgoing_phis={'$phi230.0': '$228get_iter.39'}, blockstack=(), active_try_block=None, outgoing_edgepushed={230: ('$228get_iter.39',)})
2024-07-15 06:11:37,202 DEBUG:block_infos State(pc_initial=230 nstack_initial=1):
AdaptBlockInfo(insts=((230, {'iterator': '$phi230.0', 'pair': '$230for_iter.1', 'indval': '$230for_iter.2', 'pred': '$230for_iter.3'}),), outgoing_phis={'$phi232.1': '$230for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={240: (), 232: ('$phi230.0', '$230for_iter.2')})
2024-07-15 06:11:37,202 DEBUG:block_infos State(pc_initial=232 nstack_initial=2):
AdaptBlockInfo(insts=((232, {'value': '$phi232.1'}), (234, {'res': '$const234.2'}), (236, {'value': '$const234.2'}), (238, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={230: ('$phi232.0',)})
2024-07-15 06:11:37,202 DEBUG:block_infos State(pc_initial=240 nstack_initial=0):
AdaptBlockInfo(insts=((240, {'res': '$out0240.0'}), (242, {'retval': '$out0240.0', 'castval': '$242return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-15 06:11:37,203 DEBUG:label 0:
    x = arg(0, name=x)                       ['x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $18load_global.2 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$18load_global.2']
    $30load_method.4 = getattr(value=$18load_global.2, attr=empty) ['$18load_global.2', '$30load_method.4']
    $54load_global.6 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$54load_global.6']
    $66load_attr.7 = getattr(value=$54load_global.6, attr=bool_) ['$54load_global.6', '$66load_attr.7']
    out0 = call $30load_method.4(full_shape0, func=$30load_method.4, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7, <string>:3))], vararg=None, varkwarg=None, target=None) ['$30load_method.4', '$66load_attr.7', 'full_shape0', 'out0']
    $const94.9 = const(int, 0)               ['$const94.9']
    $const98.11 = const(NoneType, None)      ['$const98.11']
    $const100.12 = const(int, 1)             ['$const100.12']
    $102build_slice.13 = global(slice: <class 'slice'>) ['$102build_slice.13']
    $102build_slice.14 = call $102build_slice.13($const98.11, $const100.12, func=$102build_slice.13, args=(Var($const98.11, <string>:4), Var($const100.12, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$102build_slice.13', '$102build_slice.14', '$const100.12', '$const98.11']
    out0[$102build_slice.14] = $const94.9    ['$102build_slice.14', '$const94.9', 'out0']
    $const108.15 = const(int, 0)             ['$const108.15']
    $const112.17 = const(int, -1)            ['$const112.17']
    $const114.18 = const(NoneType, None)     ['$const114.18']
    $116build_slice.19 = global(slice: <class 'slice'>) ['$116build_slice.19']
    $116build_slice.20 = call $116build_slice.19($const112.17, $const114.18, func=$116build_slice.19, args=(Var($const112.17, <string>:5), Var($const114.18, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$116build_slice.19', '$116build_slice.20', '$const112.17', '$const114.18']
    out0[$116build_slice.20] = $const108.15  ['$116build_slice.20', '$const108.15', 'out0']
    $122load_global.21 = global(range: <class 'range'>) ['$122load_global.21']
    $134load_global.23 = global(min: <built-in function min>) ['$134load_global.23']
    $const146.25 = const(int, 0)             ['$const146.25']
    $const148.26 = const(int, -1)            ['$const148.26']
    $154call.27 = call $134load_global.23($const146.25, $const148.26, func=$134load_global.23, args=[Var($const146.25, <string>:6), Var($const148.26, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$134load_global.23', '$154call.27', '$const146.25', '$const148.26']
    $164unary_negative.28 = unary(fn=<built-in function neg>, value=$154call.27) ['$154call.27', '$164unary_negative.28']
    $const168.30 = const(int, 0)             ['$const168.30']
    $170binary_subscr.31 = getitem(value=full_shape0, index=$const168.30, fn=<built-in function getitem>) ['$170binary_subscr.31', '$const168.30', 'full_shape0']
    $180load_global.32 = global(max: <built-in function max>) ['$180load_global.32']
    $const192.34 = const(int, 0)             ['$const192.34']
    $const194.35 = const(int, 1)             ['$const194.35']
    $200call.36 = call $180load_global.32($const192.34, $const194.35, func=$180load_global.32, args=[Var($const192.34, <string>:6), Var($const194.35, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$180load_global.32', '$200call.36', '$const192.34', '$const194.35']
    $binop_sub210.37 = $170binary_subscr.31 - $200call.36 ['$170binary_subscr.31', '$200call.36', '$binop_sub210.37']
    $218call.38 = call $122load_global.21($164unary_negative.28, $binop_sub210.37, func=$122load_global.21, args=[Var($164unary_negative.28, <string>:6), Var($binop_sub210.37, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$122load_global.21', '$164unary_negative.28', '$218call.38', '$binop_sub210.37']
    $228get_iter.39 = getiter(value=$218call.38) ['$218call.38', '$228get_iter.39']
    $phi230.0 = $228get_iter.39              ['$228get_iter.39', '$phi230.0']
    jump 230                                 []
label 230:
    $230for_iter.1 = iternext(value=$phi230.0) ['$230for_iter.1', '$phi230.0']
    $230for_iter.2 = pair_first(value=$230for_iter.1) ['$230for_iter.1', '$230for_iter.2']
    $230for_iter.3 = pair_second(value=$230for_iter.1) ['$230for_iter.1', '$230for_iter.3']
    $phi232.1 = $230for_iter.2               ['$230for_iter.2', '$phi232.1']
    branch $230for_iter.3, 232, 240          ['$230for_iter.3']
label 232:
    index00 = $phi232.1                      ['$phi232.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 230                                 []
label 240:
    $242return_value.1 = cast(value=out0)    ['$242return_value.1', 'out0']
    return $242return_value.1                ['$242return_value.1']

2024-07-15 06:11:37,220 DEBUG:==== SSA block analysis pass on 0
2024-07-15 06:11:37,220 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B6033390>
2024-07-15 06:11:37,220 DEBUG:on stmt: x = arg(0, name=x)
2024-07-15 06:11:37,220 DEBUG:on stmt: full_shape0 = getattr(value=x, attr=shape)
2024-07-15 06:11:37,220 DEBUG:on stmt: $18load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:37,220 DEBUG:on stmt: $30load_method.4.1 = getattr(value=$18load_global.2.1, attr=empty)
2024-07-15 06:11:37,220 DEBUG:on stmt: $54load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:37,220 DEBUG:on stmt: $66load_attr.7.1 = getattr(value=$54load_global.6.1, attr=bool_)
2024-07-15 06:11:37,220 DEBUG:on stmt: out0 = call $30load_method.4.1(full_shape0, func=$30load_method.4.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:37,221 DEBUG:on stmt: $const94.9.1 = const(int, 0)
2024-07-15 06:11:37,221 DEBUG:on stmt: $const98.11.1 = const(NoneType, None)
2024-07-15 06:11:37,221 DEBUG:on stmt: $const100.12.1 = const(int, 1)
2024-07-15 06:11:37,221 DEBUG:on stmt: $102build_slice.13.1 = global(slice: <class 'slice'>)
2024-07-15 06:11:37,221 DEBUG:on stmt: $102build_slice.14.1 = call $102build_slice.13.1($const98.11.1, $const100.12.1, func=$102build_slice.13.1, args=(Var($const98.11.1, <string>:4), Var($const100.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:37,221 DEBUG:on stmt: out0[$102build_slice.14.1] = $const94.9.1
2024-07-15 06:11:37,221 DEBUG:on stmt: $const108.15.1 = const(int, 0)
2024-07-15 06:11:37,221 DEBUG:on stmt: $const112.17.1 = const(int, -1)
2024-07-15 06:11:37,221 DEBUG:on stmt: $const114.18.1 = const(NoneType, None)
2024-07-15 06:11:37,221 DEBUG:on stmt: $116build_slice.19.1 = global(slice: <class 'slice'>)
2024-07-15 06:11:37,221 DEBUG:on stmt: $116build_slice.20.1 = call $116build_slice.19.1($const112.17.1, $const114.18.1, func=$116build_slice.19.1, args=(Var($const112.17.1, <string>:5), Var($const114.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:37,221 DEBUG:on stmt: out0[$116build_slice.20.1] = $const108.15.1
2024-07-15 06:11:37,221 DEBUG:on stmt: $122load_global.21.1 = global(range: <class 'range'>)
2024-07-15 06:11:37,221 DEBUG:on stmt: $134load_global.23.1 = global(min: <built-in function min>)
2024-07-15 06:11:37,221 DEBUG:on stmt: $const146.25.1 = const(int, 0)
2024-07-15 06:11:37,221 DEBUG:on stmt: $const148.26.1 = const(int, -1)
2024-07-15 06:11:37,221 DEBUG:on stmt: $154call.27.1 = call $134load_global.23.1($const146.25.1, $const148.26.1, func=$134load_global.23.1, args=[Var($const146.25.1, <string>:6), Var($const148.26.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:37,221 DEBUG:on stmt: $164unary_negative.28.1 = unary(fn=<built-in function neg>, value=$154call.27.1)
2024-07-15 06:11:37,221 DEBUG:on stmt: $const168.30.1 = const(int, 0)
2024-07-15 06:11:37,221 DEBUG:on stmt: $170binary_subscr.31.1 = getitem(value=full_shape0, index=$const168.30.1, fn=<built-in function getitem>)
2024-07-15 06:11:37,221 DEBUG:on stmt: $180load_global.32.1 = global(max: <built-in function max>)
2024-07-15 06:11:37,221 DEBUG:on stmt: $const192.34.1 = const(int, 0)
2024-07-15 06:11:37,221 DEBUG:on stmt: $const194.35.1 = const(int, 1)
2024-07-15 06:11:37,221 DEBUG:on stmt: $200call.36.1 = call $180load_global.32.1($const192.34.1, $const194.35.1, func=$180load_global.32.1, args=[Var($const192.34.1, <string>:6), Var($const194.35.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:37,221 DEBUG:on stmt: $binop_sub210.37.1 = $170binary_subscr.31.1 - $200call.36.1
2024-07-15 06:11:37,221 DEBUG:on stmt: $218call.38.1 = call $122load_global.21.1($164unary_negative.28.1, $binop_sub210.37.1, func=$122load_global.21.1, args=[Var($164unary_negative.28.1, <string>:6), Var($binop_sub210.37.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:37,221 DEBUG:on stmt: $228get_iter.39.1 = getiter(value=$218call.38.1)
2024-07-15 06:11:37,221 DEBUG:on stmt: $phi230.0.1 = $228get_iter.39.1
2024-07-15 06:11:37,221 DEBUG:on stmt: jump 230
2024-07-15 06:11:37,221 DEBUG:==== SSA block analysis pass on 230
2024-07-15 06:11:37,222 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B6033390>
2024-07-15 06:11:37,222 DEBUG:on stmt: $230for_iter.1.1 = iternext(value=$phi230.0.1)
2024-07-15 06:11:37,222 DEBUG:on stmt: $230for_iter.2.1 = pair_first(value=$230for_iter.1.1)
2024-07-15 06:11:37,222 DEBUG:on stmt: $230for_iter.3.1 = pair_second(value=$230for_iter.1.1)
2024-07-15 06:11:37,222 DEBUG:on stmt: $phi232.1.1 = $230for_iter.2.1
2024-07-15 06:11:37,222 DEBUG:on stmt: branch $230for_iter.3.1, 232, 242
2024-07-15 06:11:37,222 DEBUG:==== SSA block analysis pass on 232
2024-07-15 06:11:37,222 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B6033390>
2024-07-15 06:11:37,222 DEBUG:on stmt: index00 = $phi232.1.1
2024-07-15 06:11:37,222 DEBUG:on stmt: jump 240
2024-07-15 06:11:37,222 DEBUG:==== SSA block analysis pass on 242
2024-07-15 06:11:37,222 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B6033390>
2024-07-15 06:11:37,222 DEBUG:on stmt: $242return_value.1.1 = cast(value=out0)
2024-07-15 06:11:37,222 DEBUG:on stmt: return $242return_value.1.1
2024-07-15 06:11:37,222 DEBUG:==== SSA block analysis pass on 240
2024-07-15 06:11:37,222 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B6033390>
2024-07-15 06:11:37,222 DEBUG:on stmt: $const6.1 = const(int, 0)
2024-07-15 06:11:37,222 DEBUG:on stmt: stencil_index = $const6.1 + index00
2024-07-15 06:11:37,222 DEBUG:on stmt: $8binary_subscr.2 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-07-15 06:11:37,222 DEBUG:on stmt: $const20.4 = const(int, -1)
2024-07-15 06:11:37,222 DEBUG:on stmt: stencil_index.1 = $const20.4 + index00
2024-07-15 06:11:37,222 DEBUG:on stmt: $22binary_subscr.5 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2024-07-15 06:11:37,222 DEBUG:on stmt: $32compare_op.6 = $8binary_subscr.2 > $22binary_subscr.5
2024-07-15 06:11:37,222 DEBUG:on stmt: $const40.8 = const(int, 0)
2024-07-15 06:11:37,222 DEBUG:on stmt: stencil_index.2 = $const40.8 + index00
2024-07-15 06:11:37,222 DEBUG:on stmt: $42binary_subscr.9 = getitem(value=x, index=stencil_index.2, fn=<built-in function getitem>)
2024-07-15 06:11:37,222 DEBUG:on stmt: $const54.11 = const(int, 1)
2024-07-15 06:11:37,222 DEBUG:on stmt: stencil_index.3 = $const54.11 + index00
2024-07-15 06:11:37,222 DEBUG:on stmt: $56binary_subscr.12 = getitem(value=x, index=stencil_index.3, fn=<built-in function getitem>)
2024-07-15 06:11:37,222 DEBUG:on stmt: $66compare_op.13 = $42binary_subscr.9 >= $56binary_subscr.12
2024-07-15 06:11:37,222 DEBUG:on stmt: $binop_and_72.14 = $32compare_op.6 & $66compare_op.13
2024-07-15 06:11:37,222 DEBUG:on stmt: $76return_value.15 = cast(value=$binop_and_72.14)
2024-07-15 06:11:37,222 DEBUG:on stmt: out0[index00] = $76return_value.15
2024-07-15 06:11:37,223 DEBUG:on stmt: jump 241
2024-07-15 06:11:37,223 DEBUG:==== SSA block analysis pass on 241
2024-07-15 06:11:37,223 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B6033390>
2024-07-15 06:11:37,223 DEBUG:on stmt: jump 230
2024-07-15 06:11:37,223 DEBUG:defs defaultdict(<class 'list'>,
            {'$102build_slice.13.1': [(<numba.core.ir.Assign object at 0x00000221B6038150>,
                                       0)],
             '$102build_slice.14.1': [(<numba.core.ir.Assign object at 0x00000221B6038B90>,
                                       0)],
             '$116build_slice.19.1': [(<numba.core.ir.Assign object at 0x00000221B6038890>,
                                       0)],
             '$116build_slice.20.1': [(<numba.core.ir.Assign object at 0x00000221B6038650>,
                                       0)],
             '$122load_global.21.1': [(<numba.core.ir.Assign object at 0x00000221B6038050>,
                                       0)],
             '$134load_global.23.1': [(<numba.core.ir.Assign object at 0x00000221B6039790>,
                                       0)],
             '$154call.27.1': [(<numba.core.ir.Assign object at 0x00000221B603B4D0>,
                                0)],
             '$164unary_negative.28.1': [(<numba.core.ir.Assign object at 0x00000221B603B890>,
                                          0)],
             '$170binary_subscr.31.1': [(<numba.core.ir.Assign object at 0x00000221B603BD90>,
                                         0)],
             '$180load_global.32.1': [(<numba.core.ir.Assign object at 0x00000221B6039C10>,
                                       0)],
             '$18load_global.2.1': [(<numba.core.ir.Assign object at 0x00000221B6014F50>,
                                     0)],
             '$200call.36.1': [(<numba.core.ir.Assign object at 0x00000221B603A850>,
                                0)],
             '$218call.38.1': [(<numba.core.ir.Assign object at 0x00000221B603A110>,
                                0)],
             '$228get_iter.39.1': [(<numba.core.ir.Assign object at 0x00000221B603A5D0>,
                                    0)],
             '$22binary_subscr.5': [(<numba.core.ir.Assign object at 0x00000221B60456D0>,
                                     240)],
             '$230for_iter.1.1': [(<numba.core.ir.Assign object at 0x00000221B6038C90>,
                                   230)],
             '$230for_iter.2.1': [(<numba.core.ir.Assign object at 0x00000221B6030D10>,
                                   230)],
             '$230for_iter.3.1': [(<numba.core.ir.Assign object at 0x00000221B6033350>,
                                   230)],
             '$242return_value.1.1': [(<numba.core.ir.Assign object at 0x00000221B6032D10>,
                                       242)],
             '$30load_method.4.1': [(<numba.core.ir.Assign object at 0x00000221B6014BD0>,
                                     0)],
             '$32compare_op.6': [(<numba.core.ir.Assign object at 0x00000221B60DCD90>,
                                  240)],
             '$42binary_subscr.9': [(<numba.core.ir.Assign object at 0x00000221B6045B50>,
                                     240)],
             '$54load_global.6.1': [(<numba.core.ir.Assign object at 0x00000221B6014650>,
                                     0)],
             '$56binary_subscr.12': [(<numba.core.ir.Assign object at 0x00000221B6045550>,
                                      240)],
             '$66compare_op.13': [(<numba.core.ir.Assign object at 0x00000221B60DFB10>,
                                   240)],
             '$66load_attr.7.1': [(<numba.core.ir.Assign object at 0x00000221B6014190>,
                                   0)],
             '$76return_value.15': [(<numba.core.ir.Assign object at 0x00000221B60E4DD0>,
                                     240)],
             '$8binary_subscr.2': [(<numba.core.ir.Assign object at 0x00000221B6045810>,
                                    240)],
             '$binop_and_72.14': [(<numba.core.ir.Assign object at 0x00000221B60E4490>,
                                   240)],
             '$binop_sub210.37.1': [(<numba.core.ir.Assign object at 0x00000221B603A490>,
                                     0)],
             '$const100.12.1': [(<numba.core.ir.Assign object at 0x00000221B6039290>,
                                 0)],
             '$const108.15.1': [(<numba.core.ir.Assign object at 0x00000221B6038110>,
                                 0)],
             '$const112.17.1': [(<numba.core.ir.Assign object at 0x00000221B60381D0>,
                                 0)],
             '$const114.18.1': [(<numba.core.ir.Assign object at 0x00000221B6038A50>,
                                 0)],
             '$const146.25.1': [(<numba.core.ir.Assign object at 0x00000221B603AF50>,
                                 0)],
             '$const148.26.1': [(<numba.core.ir.Assign object at 0x00000221B603B190>,
                                 0)],
             '$const168.30.1': [(<numba.core.ir.Assign object at 0x00000221B603BC10>,
                                 0)],
             '$const192.34.1': [(<numba.core.ir.Assign object at 0x00000221B603AC90>,
                                 0)],
             '$const194.35.1': [(<numba.core.ir.Assign object at 0x00000221B603AB10>,
                                 0)],
             '$const20.4': [(<numba.core.ir.Assign object at 0x00000221B60B7F90>,
                             240)],
             '$const40.8': [(<numba.core.ir.Assign object at 0x00000221B60DD410>,
                             240)],
             '$const54.11': [(<numba.core.ir.Assign object at 0x00000221B60DE950>,
                              240)],
             '$const6.1': [(<numba.core.ir.Assign object at 0x00000221B6076690>,
                            240)],
             '$const94.9.1': [(<numba.core.ir.Assign object at 0x00000221B6039B90>,
                               0)],
             '$const98.11.1': [(<numba.core.ir.Assign object at 0x00000221B6039450>,
                                0)],
             '$phi230.0.1': [(<numba.core.ir.Assign object at 0x00000221B60151D0>,
                              0)],
             '$phi232.1.1': [(<numba.core.ir.Assign object at 0x00000221B6033B10>,
                              230)],
             'full_shape0': [(<numba.core.ir.Assign object at 0x00000221B6015050>,
                              0)],
             'index00': [(<numba.core.ir.Assign object at 0x00000221B6033890>,
                          232)],
             'out0': [(<numba.core.ir.Assign object at 0x00000221B60168D0>, 0)],
             'stencil_index': [(<numba.core.ir.Assign object at 0x00000221B6045C10>,
                                240)],
             'stencil_index.1': [(<numba.core.ir.Assign object at 0x00000221B6045790>,
                                  240)],
             'stencil_index.2': [(<numba.core.ir.Assign object at 0x00000221B6045510>,
                                  240)],
             'stencil_index.3': [(<numba.core.ir.Assign object at 0x00000221B6045490>,
                                  240)],
             'x': [(<numba.core.ir.Assign object at 0x00000221B6017ED0>, 0)]})
2024-07-15 06:11:37,224 DEBUG:SSA violators <numba.core.utils.OrderedSet object at 0x00000221B6033390>
2024-07-15 06:11:37,603 DEBUG:bytecode dump:
>          0	NOP(arg=None, lineno=1051)
           2	RESUME(arg=0, lineno=1051)
           4	LOAD_GLOBAL(arg=1, lineno=1065)
          16	LOAD_FAST(arg=0, lineno=1065)
          18	PRECALL(arg=1, lineno=1065)
          22	CALL(arg=1, lineno=1065)
          32	LOAD_FAST(arg=1, lineno=1065)
          34	LOAD_CONST(arg=1, lineno=1065)
          36	LOAD_CONST(arg=1, lineno=1065)
          38	BUILD_SLICE(arg=2, lineno=1065)
          40	STORE_SUBSCR(arg=None, lineno=1065)
          44	LOAD_CONST(arg=1, lineno=1065)
          46	RETURN_VALUE(arg=None, lineno=1065)
2024-07-15 06:11:37,603 DEBUG:pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-15 06:11:37,603 DEBUG:stack: []
2024-07-15 06:11:37,603 DEBUG:state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-15 06:11:37,603 DEBUG:dispatch pc=0, inst=NOP(arg=None, lineno=1051)
2024-07-15 06:11:37,603 DEBUG:stack []
2024-07-15 06:11:37,603 DEBUG:dispatch pc=2, inst=RESUME(arg=0, lineno=1051)
2024-07-15 06:11:37,603 DEBUG:stack []
2024-07-15 06:11:37,603 DEBUG:dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=1065)
2024-07-15 06:11:37,603 DEBUG:stack []
2024-07-15 06:11:37,604 DEBUG:dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=1065)
2024-07-15 06:11:37,604 DEBUG:stack ['$null$4.1', '$4load_global.0']
2024-07-15 06:11:37,604 DEBUG:dispatch pc=18, inst=PRECALL(arg=1, lineno=1065)
2024-07-15 06:11:37,604 DEBUG:stack ['$null$4.1', '$4load_global.0', '$x16.2']
2024-07-15 06:11:37,604 DEBUG:dispatch pc=22, inst=CALL(arg=1, lineno=1065)
2024-07-15 06:11:37,604 DEBUG:stack ['$null$4.1', '$4load_global.0', '$x16.2']
2024-07-15 06:11:37,604 DEBUG:dispatch pc=32, inst=LOAD_FAST(arg=1, lineno=1065)
2024-07-15 06:11:37,604 DEBUG:stack ['$22call.3']
2024-07-15 06:11:37,604 DEBUG:dispatch pc=34, inst=LOAD_CONST(arg=1, lineno=1065)
2024-07-15 06:11:37,604 DEBUG:stack ['$22call.3', '$y32.4']
2024-07-15 06:11:37,604 DEBUG:dispatch pc=36, inst=LOAD_CONST(arg=1, lineno=1065)
2024-07-15 06:11:37,604 DEBUG:stack ['$22call.3', '$y32.4', '$const34.5']
2024-07-15 06:11:37,604 DEBUG:dispatch pc=38, inst=BUILD_SLICE(arg=2, lineno=1065)
2024-07-15 06:11:37,604 DEBUG:stack ['$22call.3', '$y32.4', '$const34.5', '$const36.6']
2024-07-15 06:11:37,604 DEBUG:dispatch pc=40, inst=STORE_SUBSCR(arg=None, lineno=1065)
2024-07-15 06:11:37,604 DEBUG:stack ['$22call.3', '$y32.4', '$38build_slice.8']
2024-07-15 06:11:37,604 DEBUG:dispatch pc=44, inst=LOAD_CONST(arg=1, lineno=1065)
2024-07-15 06:11:37,604 DEBUG:stack []
2024-07-15 06:11:37,604 DEBUG:dispatch pc=46, inst=RETURN_VALUE(arg=None, lineno=1065)
2024-07-15 06:11:37,604 DEBUG:stack ['$const44.9']
2024-07-15 06:11:37,604 DEBUG:end state. edges=[]
2024-07-15 06:11:37,604 DEBUG:-------------------------Prune PHIs-------------------------
2024-07-15 06:11:37,604 DEBUG:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-07-15 06:11:37,604 DEBUG:defmap: {}
2024-07-15 06:11:37,604 DEBUG:phismap: defaultdict(<class 'set'>, {})
2024-07-15 06:11:37,604 DEBUG:changing phismap: defaultdict(<class 'set'>, {})
2024-07-15 06:11:37,604 DEBUG:keep phismap: {}
2024-07-15 06:11:37,604 DEBUG:new_out: defaultdict(<class 'dict'>, {})
2024-07-15 06:11:37,604 DEBUG:----------------------DONE Prune PHIs-----------------------
2024-07-15 06:11:37,604 DEBUG:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (6, {}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$x16.2'}), (18, {}), (20, {}), (22, {'func': '$4load_global.0', 'args': ['$x16.2'], 'kw_names': None, 'res': '$22call.3'}), (24, {}), (26, {}), (28, {}), (30, {}), (32, {'res': '$y32.4'}), (34, {'res': '$const34.5'}), (36, {'res': '$const36.6'}), (38, {'start': '$const34.5', 'stop': '$const36.6', 'step': None, 'res': '$38build_slice.8', 'slicevar': '$38build_slice.7'}), (40, {'target': '$y32.4', 'index': '$38build_slice.8', 'value': '$22call.3'}), (42, {}), (44, {'res': '$const44.9'}), (46, {'retval': '$const44.9', 'castval': '$46return_value.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-15 06:11:37,605 DEBUG:label 0:
    x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    $4load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x00000221B6075290>) ['$4load_global.0']
    $22call.3 = call $4load_global.0(x, func=$4load_global.0, args=[Var(x, utils.py:1051)], kws=(), vararg=None, varkwarg=None, target=None) ['$22call.3', '$4load_global.0', 'x']
    $const34.5 = const(NoneType, None)       ['$const34.5']
    $const36.6 = const(NoneType, None)       ['$const36.6']
    $38build_slice.7 = global(slice: <class 'slice'>) ['$38build_slice.7']
    $38build_slice.8 = call $38build_slice.7($const34.5, $const36.6, func=$38build_slice.7, args=(Var($const34.5, utils.py:1065), Var($const36.6, utils.py:1065)), kws=(), vararg=None, varkwarg=None, target=None) ['$38build_slice.7', '$38build_slice.8', '$const34.5', '$const36.6']
    y[$38build_slice.8] = $22call.3          ['$22call.3', '$38build_slice.8', 'y']
    $const44.9 = const(NoneType, None)       ['$const44.9']
    $46return_value.10 = cast(value=$const44.9) ['$46return_value.10', '$const44.9']
    return $46return_value.10                ['$46return_value.10']

2024-07-15 06:11:37,611 DEBUG:==== SSA block analysis pass on 0
2024-07-15 06:11:37,611 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B6874D10>
2024-07-15 06:11:37,611 DEBUG:on stmt: x = arg(0, name=x)
2024-07-15 06:11:37,612 DEBUG:on stmt: y = arg(1, name=y)
2024-07-15 06:11:37,612 DEBUG:on stmt: $4load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x00000221B6075290>)
2024-07-15 06:11:37,612 DEBUG:on stmt: $22call.3 = call $4load_global.0(x, func=$4load_global.0, args=[Var(x, utils.py:1051)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:37,612 DEBUG:on stmt: $const34.5 = const(NoneType, None)
2024-07-15 06:11:37,612 DEBUG:on stmt: $const36.6 = const(NoneType, None)
2024-07-15 06:11:37,612 DEBUG:on stmt: $38build_slice.7 = global(slice: <class 'slice'>)
2024-07-15 06:11:37,612 DEBUG:on stmt: $38build_slice.8 = call $38build_slice.7($const34.5, $const36.6, func=$38build_slice.7, args=(Var($const34.5, utils.py:1065), Var($const36.6, utils.py:1065)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:37,612 DEBUG:on stmt: y[slice(None, None, None)] = $22call.3
2024-07-15 06:11:37,612 DEBUG:on stmt: $const44.9 = const(NoneType, None)
2024-07-15 06:11:37,612 DEBUG:on stmt: $46return_value.10 = cast(value=$const44.9)
2024-07-15 06:11:37,612 DEBUG:on stmt: return $46return_value.10
2024-07-15 06:11:37,612 DEBUG:defs defaultdict(<class 'list'>,
            {'$22call.3': [(<numba.core.ir.Assign object at 0x00000221B686E710>,
                            0)],
             '$38build_slice.7': [(<numba.core.ir.Assign object at 0x00000221B686EED0>,
                                   0)],
             '$38build_slice.8': [(<numba.core.ir.Assign object at 0x00000221B686EF90>,
                                   0)],
             '$46return_value.10': [(<numba.core.ir.Assign object at 0x00000221B686F410>,
                                     0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x00000221B686E290>,
                                  0)],
             '$const34.5': [(<numba.core.ir.Assign object at 0x00000221B686EB50>,
                             0)],
             '$const36.6': [(<numba.core.ir.Assign object at 0x00000221B686ED10>,
                             0)],
             '$const44.9': [(<numba.core.ir.Assign object at 0x00000221B686F250>,
                             0)],
             'x': [(<numba.core.ir.Assign object at 0x00000221B686DF10>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x00000221B686E010>, 0)]})
2024-07-15 06:11:37,612 DEBUG:SSA violators <numba.core.utils.OrderedSet object at 0x00000221B6874D10>
2024-07-15 06:11:37,633 DEBUG:bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	RESUME(arg=0, lineno=1)
           4	LOAD_FAST(arg=0, lineno=2)
           6	LOAD_ATTR(arg=0, lineno=2)
          16	STORE_FAST(arg=1, lineno=2)
          18	LOAD_GLOBAL(arg=2, lineno=3)
          30	LOAD_METHOD(arg=2, lineno=3)
          52	LOAD_FAST(arg=1, lineno=3)
          54	LOAD_GLOBAL(arg=2, lineno=3)
          66	LOAD_ATTR(arg=3, lineno=3)
          76	KW_NAMES(arg=1, lineno=3)
          78	PRECALL(arg=2, lineno=3)
          82	CALL(arg=2, lineno=3)
          92	STORE_FAST(arg=2, lineno=3)
          94	LOAD_CONST(arg=2, lineno=4)
          96	LOAD_FAST(arg=2, lineno=4)
          98	LOAD_CONST(arg=0, lineno=4)
         100	LOAD_CONST(arg=3, lineno=4)
         102	BUILD_SLICE(arg=2, lineno=4)
         104	STORE_SUBSCR(arg=None, lineno=4)
         108	LOAD_CONST(arg=2, lineno=5)
         110	LOAD_FAST(arg=2, lineno=5)
         112	LOAD_CONST(arg=4, lineno=5)
         114	LOAD_CONST(arg=0, lineno=5)
         116	BUILD_SLICE(arg=2, lineno=5)
         118	STORE_SUBSCR(arg=None, lineno=5)
         122	LOAD_GLOBAL(arg=9, lineno=6)
         134	LOAD_GLOBAL(arg=11, lineno=6)
         146	LOAD_CONST(arg=2, lineno=6)
         148	LOAD_CONST(arg=4, lineno=6)
         150	PRECALL(arg=2, lineno=6)
         154	CALL(arg=2, lineno=6)
         164	UNARY_NEGATIVE(arg=None, lineno=6)
         166	LOAD_FAST(arg=1, lineno=6)
         168	LOAD_CONST(arg=2, lineno=6)
         170	BINARY_SUBSCR(arg=None, lineno=6)
         180	LOAD_GLOBAL(arg=13, lineno=6)
         192	LOAD_CONST(arg=2, lineno=6)
         194	LOAD_CONST(arg=3, lineno=6)
         196	PRECALL(arg=2, lineno=6)
         200	CALL(arg=2, lineno=6)
         210	BINARY_OP(arg=10, lineno=6)
         214	PRECALL(arg=2, lineno=6)
         218	CALL(arg=2, lineno=6)
         228	GET_ITER(arg=None, lineno=6)
>        230	FOR_ITER(arg=4, lineno=6)
         232	STORE_FAST(arg=3, lineno=6)
         234	LOAD_CONST(arg=2, lineno=7)
         236	STORE_FAST(arg=4, lineno=7)
         238	JUMP_BACKWARD(arg=5, lineno=7)
>        240	LOAD_FAST(arg=2, lineno=8)
         242	RETURN_VALUE(arg=None, lineno=8)
2024-07-15 06:11:37,633 DEBUG:pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-15 06:11:37,633 DEBUG:stack: []
2024-07-15 06:11:37,633 DEBUG:state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-15 06:11:37,633 DEBUG:dispatch pc=0, inst=NOP(arg=None, lineno=1)
2024-07-15 06:11:37,633 DEBUG:stack []
2024-07-15 06:11:37,634 DEBUG:dispatch pc=2, inst=RESUME(arg=0, lineno=1)
2024-07-15 06:11:37,634 DEBUG:stack []
2024-07-15 06:11:37,634 DEBUG:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2)
2024-07-15 06:11:37,634 DEBUG:stack []
2024-07-15 06:11:37,634 DEBUG:dispatch pc=6, inst=LOAD_ATTR(arg=0, lineno=2)
2024-07-15 06:11:37,634 DEBUG:stack ['$x4.0']
2024-07-15 06:11:37,634 DEBUG:dispatch pc=16, inst=STORE_FAST(arg=1, lineno=2)
2024-07-15 06:11:37,634 DEBUG:stack ['$6load_attr.1']
2024-07-15 06:11:37,634 DEBUG:dispatch pc=18, inst=LOAD_GLOBAL(arg=2, lineno=3)
2024-07-15 06:11:37,634 DEBUG:stack []
2024-07-15 06:11:37,634 DEBUG:dispatch pc=30, inst=LOAD_METHOD(arg=2, lineno=3)
2024-07-15 06:11:37,634 DEBUG:stack ['$18load_global.2']
2024-07-15 06:11:37,634 DEBUG:dispatch pc=52, inst=LOAD_FAST(arg=1, lineno=3)
2024-07-15 06:11:37,634 DEBUG:stack ['$null$30.3', '$30load_method.4']
2024-07-15 06:11:37,634 DEBUG:dispatch pc=54, inst=LOAD_GLOBAL(arg=2, lineno=3)
2024-07-15 06:11:37,634 DEBUG:stack ['$null$30.3', '$30load_method.4', '$full_shape052.5']
2024-07-15 06:11:37,634 DEBUG:dispatch pc=66, inst=LOAD_ATTR(arg=3, lineno=3)
2024-07-15 06:11:37,634 DEBUG:stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$54load_global.6']
2024-07-15 06:11:37,634 DEBUG:dispatch pc=76, inst=KW_NAMES(arg=1, lineno=3)
2024-07-15 06:11:37,634 DEBUG:stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
2024-07-15 06:11:37,634 DEBUG:dispatch pc=78, inst=PRECALL(arg=2, lineno=3)
2024-07-15 06:11:37,634 DEBUG:stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
2024-07-15 06:11:37,634 DEBUG:dispatch pc=82, inst=CALL(arg=2, lineno=3)
2024-07-15 06:11:37,634 DEBUG:stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
2024-07-15 06:11:37,634 DEBUG:dispatch pc=92, inst=STORE_FAST(arg=2, lineno=3)
2024-07-15 06:11:37,634 DEBUG:stack ['$82call.8']
2024-07-15 06:11:37,634 DEBUG:dispatch pc=94, inst=LOAD_CONST(arg=2, lineno=4)
2024-07-15 06:11:37,634 DEBUG:stack []
2024-07-15 06:11:37,634 DEBUG:dispatch pc=96, inst=LOAD_FAST(arg=2, lineno=4)
2024-07-15 06:11:37,634 DEBUG:stack ['$const94.9']
2024-07-15 06:11:37,635 DEBUG:dispatch pc=98, inst=LOAD_CONST(arg=0, lineno=4)
2024-07-15 06:11:37,635 DEBUG:stack ['$const94.9', '$out096.10']
2024-07-15 06:11:37,635 DEBUG:dispatch pc=100, inst=LOAD_CONST(arg=3, lineno=4)
2024-07-15 06:11:37,635 DEBUG:stack ['$const94.9', '$out096.10', '$const98.11']
2024-07-15 06:11:37,635 DEBUG:dispatch pc=102, inst=BUILD_SLICE(arg=2, lineno=4)
2024-07-15 06:11:37,635 DEBUG:stack ['$const94.9', '$out096.10', '$const98.11', '$const100.12']
2024-07-15 06:11:37,635 DEBUG:dispatch pc=104, inst=STORE_SUBSCR(arg=None, lineno=4)
2024-07-15 06:11:37,635 DEBUG:stack ['$const94.9', '$out096.10', '$102build_slice.14']
2024-07-15 06:11:37,635 DEBUG:dispatch pc=108, inst=LOAD_CONST(arg=2, lineno=5)
2024-07-15 06:11:37,635 DEBUG:stack []
2024-07-15 06:11:37,635 DEBUG:dispatch pc=110, inst=LOAD_FAST(arg=2, lineno=5)
2024-07-15 06:11:37,635 DEBUG:stack ['$const108.15']
2024-07-15 06:11:37,635 DEBUG:dispatch pc=112, inst=LOAD_CONST(arg=4, lineno=5)
2024-07-15 06:11:37,635 DEBUG:stack ['$const108.15', '$out0110.16']
2024-07-15 06:11:37,635 DEBUG:dispatch pc=114, inst=LOAD_CONST(arg=0, lineno=5)
2024-07-15 06:11:37,635 DEBUG:stack ['$const108.15', '$out0110.16', '$const112.17']
2024-07-15 06:11:37,635 DEBUG:dispatch pc=116, inst=BUILD_SLICE(arg=2, lineno=5)
2024-07-15 06:11:37,635 DEBUG:stack ['$const108.15', '$out0110.16', '$const112.17', '$const114.18']
2024-07-15 06:11:37,635 DEBUG:dispatch pc=118, inst=STORE_SUBSCR(arg=None, lineno=5)
2024-07-15 06:11:37,635 DEBUG:stack ['$const108.15', '$out0110.16', '$116build_slice.20']
2024-07-15 06:11:37,635 DEBUG:dispatch pc=122, inst=LOAD_GLOBAL(arg=9, lineno=6)
2024-07-15 06:11:37,635 DEBUG:stack []
2024-07-15 06:11:37,635 DEBUG:dispatch pc=134, inst=LOAD_GLOBAL(arg=11, lineno=6)
2024-07-15 06:11:37,635 DEBUG:stack ['$null$122.22', '$122load_global.21']
2024-07-15 06:11:37,635 DEBUG:dispatch pc=146, inst=LOAD_CONST(arg=2, lineno=6)
2024-07-15 06:11:37,635 DEBUG:stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23']
2024-07-15 06:11:37,635 DEBUG:dispatch pc=148, inst=LOAD_CONST(arg=4, lineno=6)
2024-07-15 06:11:37,635 DEBUG:stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25']
2024-07-15 06:11:37,635 DEBUG:dispatch pc=150, inst=PRECALL(arg=2, lineno=6)
2024-07-15 06:11:37,635 DEBUG:stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25', '$const148.26']
2024-07-15 06:11:37,635 DEBUG:dispatch pc=154, inst=CALL(arg=2, lineno=6)
2024-07-15 06:11:37,635 DEBUG:stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25', '$const148.26']
2024-07-15 06:11:37,636 DEBUG:dispatch pc=164, inst=UNARY_NEGATIVE(arg=None, lineno=6)
2024-07-15 06:11:37,636 DEBUG:stack ['$null$122.22', '$122load_global.21', '$154call.27']
2024-07-15 06:11:37,636 DEBUG:dispatch pc=166, inst=LOAD_FAST(arg=1, lineno=6)
2024-07-15 06:11:37,636 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28']
2024-07-15 06:11:37,636 DEBUG:dispatch pc=168, inst=LOAD_CONST(arg=2, lineno=6)
2024-07-15 06:11:37,636 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$full_shape0166.29']
2024-07-15 06:11:37,636 DEBUG:dispatch pc=170, inst=BINARY_SUBSCR(arg=None, lineno=6)
2024-07-15 06:11:37,636 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$full_shape0166.29', '$const168.30']
2024-07-15 06:11:37,636 DEBUG:dispatch pc=180, inst=LOAD_GLOBAL(arg=13, lineno=6)
2024-07-15 06:11:37,636 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31']
2024-07-15 06:11:37,636 DEBUG:dispatch pc=192, inst=LOAD_CONST(arg=2, lineno=6)
2024-07-15 06:11:37,636 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32']
2024-07-15 06:11:37,636 DEBUG:dispatch pc=194, inst=LOAD_CONST(arg=3, lineno=6)
2024-07-15 06:11:37,636 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34']
2024-07-15 06:11:37,636 DEBUG:dispatch pc=196, inst=PRECALL(arg=2, lineno=6)
2024-07-15 06:11:37,636 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34', '$const194.35']
2024-07-15 06:11:37,636 DEBUG:dispatch pc=200, inst=CALL(arg=2, lineno=6)
2024-07-15 06:11:37,636 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34', '$const194.35']
2024-07-15 06:11:37,636 DEBUG:dispatch pc=210, inst=BINARY_OP(arg=10, lineno=6)
2024-07-15 06:11:37,636 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$200call.36']
2024-07-15 06:11:37,636 DEBUG:dispatch pc=214, inst=PRECALL(arg=2, lineno=6)
2024-07-15 06:11:37,636 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$binop_sub210.37']
2024-07-15 06:11:37,636 DEBUG:dispatch pc=218, inst=CALL(arg=2, lineno=6)
2024-07-15 06:11:37,636 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$binop_sub210.37']
2024-07-15 06:11:37,636 DEBUG:dispatch pc=228, inst=GET_ITER(arg=None, lineno=6)
2024-07-15 06:11:37,636 DEBUG:stack ['$218call.38']
2024-07-15 06:11:37,636 DEBUG:end state. edges=[Edge(pc=230, stack=('$228get_iter.39',), blockstack=(), npush=0)]
2024-07-15 06:11:37,636 DEBUG:pending: deque([State(pc_initial=230 nstack_initial=1)])
2024-07-15 06:11:37,636 DEBUG:stack: ['$phi230.0']
2024-07-15 06:11:37,637 DEBUG:state.pc_initial: State(pc_initial=230 nstack_initial=1)
2024-07-15 06:11:37,637 DEBUG:dispatch pc=230, inst=FOR_ITER(arg=4, lineno=6)
2024-07-15 06:11:37,637 DEBUG:stack ['$phi230.0']
2024-07-15 06:11:37,637 DEBUG:end state. edges=[Edge(pc=240, stack=(), blockstack=(), npush=0), Edge(pc=232, stack=('$phi230.0', '$230for_iter.2'), blockstack=(), npush=0)]
2024-07-15 06:11:37,637 DEBUG:pending: deque([State(pc_initial=240 nstack_initial=0), State(pc_initial=232 nstack_initial=2)])
2024-07-15 06:11:37,637 DEBUG:stack: []
2024-07-15 06:11:37,637 DEBUG:state.pc_initial: State(pc_initial=240 nstack_initial=0)
2024-07-15 06:11:37,637 DEBUG:dispatch pc=240, inst=LOAD_FAST(arg=2, lineno=8)
2024-07-15 06:11:37,637 DEBUG:stack []
2024-07-15 06:11:37,637 DEBUG:dispatch pc=242, inst=RETURN_VALUE(arg=None, lineno=8)
2024-07-15 06:11:37,637 DEBUG:stack ['$out0240.0']
2024-07-15 06:11:37,637 DEBUG:end state. edges=[]
2024-07-15 06:11:37,637 DEBUG:pending: deque([State(pc_initial=232 nstack_initial=2)])
2024-07-15 06:11:37,637 DEBUG:stack: ['$phi232.0', '$phi232.1']
2024-07-15 06:11:37,637 DEBUG:state.pc_initial: State(pc_initial=232 nstack_initial=2)
2024-07-15 06:11:37,638 DEBUG:dispatch pc=232, inst=STORE_FAST(arg=3, lineno=6)
2024-07-15 06:11:37,638 DEBUG:stack ['$phi232.0', '$phi232.1']
2024-07-15 06:11:37,638 DEBUG:dispatch pc=234, inst=LOAD_CONST(arg=2, lineno=7)
2024-07-15 06:11:37,638 DEBUG:stack ['$phi232.0']
2024-07-15 06:11:37,638 DEBUG:dispatch pc=236, inst=STORE_FAST(arg=4, lineno=7)
2024-07-15 06:11:37,638 DEBUG:stack ['$phi232.0', '$const234.2']
2024-07-15 06:11:37,638 DEBUG:dispatch pc=238, inst=JUMP_BACKWARD(arg=5, lineno=7)
2024-07-15 06:11:37,638 DEBUG:stack ['$phi232.0']
2024-07-15 06:11:37,638 DEBUG:end state. edges=[Edge(pc=230, stack=('$phi232.0',), blockstack=(), npush=0)]
2024-07-15 06:11:37,638 DEBUG:pending: deque([State(pc_initial=230 nstack_initial=1)])
2024-07-15 06:11:37,638 DEBUG:-------------------------Prune PHIs-------------------------
2024-07-15 06:11:37,638 DEBUG:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=230 nstack_initial=1): {'$phi230.0'},
             State(pc_initial=232 nstack_initial=2): {'$phi232.1'},
             State(pc_initial=240 nstack_initial=0): set()})
2024-07-15 06:11:37,638 DEBUG:defmap: {'$phi230.0': State(pc_initial=0 nstack_initial=0),
 '$phi232.1': State(pc_initial=230 nstack_initial=1)}
2024-07-15 06:11:37,638 DEBUG:phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi232.0',
                            State(pc_initial=232 nstack_initial=2))},
             '$phi232.0': {('$phi230.0',
                            State(pc_initial=230 nstack_initial=1))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-07-15 06:11:37,638 DEBUG:changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi230.0',
                            State(pc_initial=230 nstack_initial=1))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-07-15 06:11:37,639 DEBUG:changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-07-15 06:11:37,639 DEBUG:changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-07-15 06:11:37,639 DEBUG:keep phismap: {'$phi230.0': {('$228get_iter.39', State(pc_initial=0 nstack_initial=0))},
 '$phi232.1': {('$230for_iter.2', State(pc_initial=230 nstack_initial=1))}}
2024-07-15 06:11:37,639 DEBUG:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi230.0': '$228get_iter.39'},
             State(pc_initial=230 nstack_initial=1): {'$phi232.1': '$230for_iter.2'}})
2024-07-15 06:11:37,639 DEBUG:----------------------DONE Prune PHIs-----------------------
2024-07-15 06:11:37,639 DEBUG:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'item': '$x4.0', 'res': '$6load_attr.1'}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'value': '$6load_attr.1'}), (18, {'idx': 1, 'res': '$18load_global.2'}), (20, {}), (22, {}), (24, {}), (26, {}), (28, {}), (30, {'item': '$18load_global.2', 'res': '$30load_method.4'}), (32, {}), (34, {}), (36, {}), (38, {}), (40, {}), (42, {}), (44, {}), (46, {}), (48, {}), (50, {}), (52, {'res': '$full_shape052.5'}), (54, {'idx': 1, 'res': '$54load_global.6'}), (56, {}), (58, {}), (60, {}), (62, {}), (64, {}), (66, {'item': '$54load_global.6', 'res': '$66load_attr.7'}), (68, {}), (70, {}), (72, {}), (74, {}), (78, {}), (80, {}), (82, {'func': '$30load_method.4', 'args': ['$full_shape052.5', '$66load_attr.7'], 'kw_names': 1, 'res': '$82call.8'}), (84, {}), (86, {}), (88, {}), (90, {}), (92, {'value': '$82call.8'}), (94, {'res': '$const94.9'}), (96, {'res': '$out096.10'}), (98, {'res': '$const98.11'}), (100, {'res': '$const100.12'}), (102, {'start': '$const98.11', 'stop': '$const100.12', 'step': None, 'res': '$102build_slice.14', 'slicevar': '$102build_slice.13'}), (104, {'target': '$out096.10', 'index': '$102build_slice.14', 'value': '$const94.9'}), (106, {}), (108, {'res': '$const108.15'}), (110, {'res': '$out0110.16'}), (112, {'res': '$const112.17'}), (114, {'res': '$const114.18'}), (116, {'start': '$const112.17', 'stop': '$const114.18', 'step': None, 'res': '$116build_slice.20', 'slicevar': '$116build_slice.19'}), (118, {'target': '$out0110.16', 'index': '$116build_slice.20', 'value': '$const108.15'}), (120, {}), (122, {'idx': 4, 'res': '$122load_global.21'}), (124, {}), (126, {}), (128, {}), (130, {}), (132, {}), (134, {'idx': 5, 'res': '$134load_global.23'}), (136, {}), (138, {}), (140, {}), (142, {}), (144, {}), (146, {'res': '$const146.25'}), (148, {'res': '$const148.26'}), (150, {}), (152, {}), (154, {'func': '$134load_global.23', 'args': ['$const146.25', '$const148.26'], 'kw_names': None, 'res': '$154call.27'}), (156, {}), (158, {}), (160, {}), (162, {}), (164, {'value': '$154call.27', 'res': '$164unary_negative.28'}), (166, {'res': '$full_shape0166.29'}), (168, {'res': '$const168.30'}), (170, {'index': '$const168.30', 'target': '$full_shape0166.29', 'res': '$170binary_subscr.31'}), (172, {}), (174, {}), (176, {}), (178, {}), (180, {'idx': 6, 'res': '$180load_global.32'}), (182, {}), (184, {}), (186, {}), (188, {}), (190, {}), (192, {'res': '$const192.34'}), (194, {'res': '$const194.35'}), (196, {}), (198, {}), (200, {'func': '$180load_global.32', 'args': ['$const192.34', '$const194.35'], 'kw_names': None, 'res': '$200call.36'}), (202, {}), (204, {}), (206, {}), (208, {}), (210, {'op': '-', 'lhs': '$170binary_subscr.31', 'rhs': '$200call.36', 'res': '$binop_sub210.37'}), (212, {}), (214, {}), (216, {}), (218, {'func': '$122load_global.21', 'args': ['$164unary_negative.28', '$binop_sub210.37'], 'kw_names': None, 'res': '$218call.38'}), (220, {}), (222, {}), (224, {}), (226, {}), (228, {'value': '$218call.38', 'res': '$228get_iter.39'})), outgoing_phis={'$phi230.0': '$228get_iter.39'}, blockstack=(), active_try_block=None, outgoing_edgepushed={230: ('$228get_iter.39',)})
2024-07-15 06:11:37,639 DEBUG:block_infos State(pc_initial=230 nstack_initial=1):
AdaptBlockInfo(insts=((230, {'iterator': '$phi230.0', 'pair': '$230for_iter.1', 'indval': '$230for_iter.2', 'pred': '$230for_iter.3'}),), outgoing_phis={'$phi232.1': '$230for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={240: (), 232: ('$phi230.0', '$230for_iter.2')})
2024-07-15 06:11:37,639 DEBUG:block_infos State(pc_initial=232 nstack_initial=2):
AdaptBlockInfo(insts=((232, {'value': '$phi232.1'}), (234, {'res': '$const234.2'}), (236, {'value': '$const234.2'}), (238, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={230: ('$phi232.0',)})
2024-07-15 06:11:37,639 DEBUG:block_infos State(pc_initial=240 nstack_initial=0):
AdaptBlockInfo(insts=((240, {'res': '$out0240.0'}), (242, {'retval': '$out0240.0', 'castval': '$242return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-15 06:11:37,640 DEBUG:label 0:
    x = arg(0, name=x)                       ['x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $18load_global.2 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$18load_global.2']
    $30load_method.4 = getattr(value=$18load_global.2, attr=empty) ['$18load_global.2', '$30load_method.4']
    $54load_global.6 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$54load_global.6']
    $66load_attr.7 = getattr(value=$54load_global.6, attr=bool_) ['$54load_global.6', '$66load_attr.7']
    out0 = call $30load_method.4(full_shape0, func=$30load_method.4, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7, <string>:3))], vararg=None, varkwarg=None, target=None) ['$30load_method.4', '$66load_attr.7', 'full_shape0', 'out0']
    $const94.9 = const(int, 0)               ['$const94.9']
    $const98.11 = const(NoneType, None)      ['$const98.11']
    $const100.12 = const(int, 1)             ['$const100.12']
    $102build_slice.13 = global(slice: <class 'slice'>) ['$102build_slice.13']
    $102build_slice.14 = call $102build_slice.13($const98.11, $const100.12, func=$102build_slice.13, args=(Var($const98.11, <string>:4), Var($const100.12, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$102build_slice.13', '$102build_slice.14', '$const100.12', '$const98.11']
    out0[$102build_slice.14] = $const94.9    ['$102build_slice.14', '$const94.9', 'out0']
    $const108.15 = const(int, 0)             ['$const108.15']
    $const112.17 = const(int, -1)            ['$const112.17']
    $const114.18 = const(NoneType, None)     ['$const114.18']
    $116build_slice.19 = global(slice: <class 'slice'>) ['$116build_slice.19']
    $116build_slice.20 = call $116build_slice.19($const112.17, $const114.18, func=$116build_slice.19, args=(Var($const112.17, <string>:5), Var($const114.18, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$116build_slice.19', '$116build_slice.20', '$const112.17', '$const114.18']
    out0[$116build_slice.20] = $const108.15  ['$116build_slice.20', '$const108.15', 'out0']
    $122load_global.21 = global(range: <class 'range'>) ['$122load_global.21']
    $134load_global.23 = global(min: <built-in function min>) ['$134load_global.23']
    $const146.25 = const(int, 0)             ['$const146.25']
    $const148.26 = const(int, -1)            ['$const148.26']
    $154call.27 = call $134load_global.23($const146.25, $const148.26, func=$134load_global.23, args=[Var($const146.25, <string>:6), Var($const148.26, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$134load_global.23', '$154call.27', '$const146.25', '$const148.26']
    $164unary_negative.28 = unary(fn=<built-in function neg>, value=$154call.27) ['$154call.27', '$164unary_negative.28']
    $const168.30 = const(int, 0)             ['$const168.30']
    $170binary_subscr.31 = getitem(value=full_shape0, index=$const168.30, fn=<built-in function getitem>) ['$170binary_subscr.31', '$const168.30', 'full_shape0']
    $180load_global.32 = global(max: <built-in function max>) ['$180load_global.32']
    $const192.34 = const(int, 0)             ['$const192.34']
    $const194.35 = const(int, 1)             ['$const194.35']
    $200call.36 = call $180load_global.32($const192.34, $const194.35, func=$180load_global.32, args=[Var($const192.34, <string>:6), Var($const194.35, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$180load_global.32', '$200call.36', '$const192.34', '$const194.35']
    $binop_sub210.37 = $170binary_subscr.31 - $200call.36 ['$170binary_subscr.31', '$200call.36', '$binop_sub210.37']
    $218call.38 = call $122load_global.21($164unary_negative.28, $binop_sub210.37, func=$122load_global.21, args=[Var($164unary_negative.28, <string>:6), Var($binop_sub210.37, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$122load_global.21', '$164unary_negative.28', '$218call.38', '$binop_sub210.37']
    $228get_iter.39 = getiter(value=$218call.38) ['$218call.38', '$228get_iter.39']
    $phi230.0 = $228get_iter.39              ['$228get_iter.39', '$phi230.0']
    jump 230                                 []
label 230:
    $230for_iter.1 = iternext(value=$phi230.0) ['$230for_iter.1', '$phi230.0']
    $230for_iter.2 = pair_first(value=$230for_iter.1) ['$230for_iter.1', '$230for_iter.2']
    $230for_iter.3 = pair_second(value=$230for_iter.1) ['$230for_iter.1', '$230for_iter.3']
    $phi232.1 = $230for_iter.2               ['$230for_iter.2', '$phi232.1']
    branch $230for_iter.3, 232, 240          ['$230for_iter.3']
label 232:
    index00 = $phi232.1                      ['$phi232.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 230                                 []
label 240:
    $242return_value.1 = cast(value=out0)    ['$242return_value.1', 'out0']
    return $242return_value.1                ['$242return_value.1']

2024-07-15 06:11:37,658 DEBUG:==== SSA block analysis pass on 0
2024-07-15 06:11:37,658 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B683A810>
2024-07-15 06:11:37,658 DEBUG:on stmt: x = arg(0, name=x)
2024-07-15 06:11:37,658 DEBUG:on stmt: full_shape0 = getattr(value=x, attr=shape)
2024-07-15 06:11:37,658 DEBUG:on stmt: $18load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:37,658 DEBUG:on stmt: $30load_method.4.1 = getattr(value=$18load_global.2.1, attr=empty)
2024-07-15 06:11:37,658 DEBUG:on stmt: $54load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:37,658 DEBUG:on stmt: $66load_attr.7.1 = getattr(value=$54load_global.6.1, attr=bool_)
2024-07-15 06:11:37,658 DEBUG:on stmt: out0 = call $30load_method.4.1(full_shape0, func=$30load_method.4.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:37,658 DEBUG:on stmt: $const94.9.1 = const(int, 0)
2024-07-15 06:11:37,658 DEBUG:on stmt: $const98.11.1 = const(NoneType, None)
2024-07-15 06:11:37,658 DEBUG:on stmt: $const100.12.1 = const(int, 1)
2024-07-15 06:11:37,658 DEBUG:on stmt: $102build_slice.13.1 = global(slice: <class 'slice'>)
2024-07-15 06:11:37,658 DEBUG:on stmt: $102build_slice.14.1 = call $102build_slice.13.1($const98.11.1, $const100.12.1, func=$102build_slice.13.1, args=(Var($const98.11.1, <string>:4), Var($const100.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:37,658 DEBUG:on stmt: out0[$102build_slice.14.1] = $const94.9.1
2024-07-15 06:11:37,658 DEBUG:on stmt: $const108.15.1 = const(int, 0)
2024-07-15 06:11:37,658 DEBUG:on stmt: $const112.17.1 = const(int, -1)
2024-07-15 06:11:37,658 DEBUG:on stmt: $const114.18.1 = const(NoneType, None)
2024-07-15 06:11:37,658 DEBUG:on stmt: $116build_slice.19.1 = global(slice: <class 'slice'>)
2024-07-15 06:11:37,658 DEBUG:on stmt: $116build_slice.20.1 = call $116build_slice.19.1($const112.17.1, $const114.18.1, func=$116build_slice.19.1, args=(Var($const112.17.1, <string>:5), Var($const114.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:37,658 DEBUG:on stmt: out0[$116build_slice.20.1] = $const108.15.1
2024-07-15 06:11:37,659 DEBUG:on stmt: $122load_global.21.1 = global(range: <class 'range'>)
2024-07-15 06:11:37,659 DEBUG:on stmt: $134load_global.23.1 = global(min: <built-in function min>)
2024-07-15 06:11:37,659 DEBUG:on stmt: $const146.25.1 = const(int, 0)
2024-07-15 06:11:37,659 DEBUG:on stmt: $const148.26.1 = const(int, -1)
2024-07-15 06:11:37,659 DEBUG:on stmt: $154call.27.1 = call $134load_global.23.1($const146.25.1, $const148.26.1, func=$134load_global.23.1, args=[Var($const146.25.1, <string>:6), Var($const148.26.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:37,659 DEBUG:on stmt: $164unary_negative.28.1 = unary(fn=<built-in function neg>, value=$154call.27.1)
2024-07-15 06:11:37,659 DEBUG:on stmt: $const168.30.1 = const(int, 0)
2024-07-15 06:11:37,659 DEBUG:on stmt: $170binary_subscr.31.1 = getitem(value=full_shape0, index=$const168.30.1, fn=<built-in function getitem>)
2024-07-15 06:11:37,659 DEBUG:on stmt: $180load_global.32.1 = global(max: <built-in function max>)
2024-07-15 06:11:37,659 DEBUG:on stmt: $const192.34.1 = const(int, 0)
2024-07-15 06:11:37,659 DEBUG:on stmt: $const194.35.1 = const(int, 1)
2024-07-15 06:11:37,659 DEBUG:on stmt: $200call.36.1 = call $180load_global.32.1($const192.34.1, $const194.35.1, func=$180load_global.32.1, args=[Var($const192.34.1, <string>:6), Var($const194.35.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:37,659 DEBUG:on stmt: $binop_sub210.37.1 = $170binary_subscr.31.1 - $200call.36.1
2024-07-15 06:11:37,659 DEBUG:on stmt: $218call.38.1 = call $122load_global.21.1($164unary_negative.28.1, $binop_sub210.37.1, func=$122load_global.21.1, args=[Var($164unary_negative.28.1, <string>:6), Var($binop_sub210.37.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:37,659 DEBUG:on stmt: $228get_iter.39.1 = getiter(value=$218call.38.1)
2024-07-15 06:11:37,659 DEBUG:on stmt: $phi230.0.1 = $228get_iter.39.1
2024-07-15 06:11:37,659 DEBUG:on stmt: jump 230
2024-07-15 06:11:37,659 DEBUG:==== SSA block analysis pass on 230
2024-07-15 06:11:37,659 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B683A810>
2024-07-15 06:11:37,659 DEBUG:on stmt: $230for_iter.1.1 = iternext(value=$phi230.0.1)
2024-07-15 06:11:37,659 DEBUG:on stmt: $230for_iter.2.1 = pair_first(value=$230for_iter.1.1)
2024-07-15 06:11:37,659 DEBUG:on stmt: $230for_iter.3.1 = pair_second(value=$230for_iter.1.1)
2024-07-15 06:11:37,659 DEBUG:on stmt: $phi232.1.1 = $230for_iter.2.1
2024-07-15 06:11:37,659 DEBUG:on stmt: branch $230for_iter.3.1, 232, 242
2024-07-15 06:11:37,659 DEBUG:==== SSA block analysis pass on 232
2024-07-15 06:11:37,659 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B683A810>
2024-07-15 06:11:37,659 DEBUG:on stmt: index00 = $phi232.1.1
2024-07-15 06:11:37,659 DEBUG:on stmt: jump 240
2024-07-15 06:11:37,659 DEBUG:==== SSA block analysis pass on 242
2024-07-15 06:11:37,660 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B683A810>
2024-07-15 06:11:37,660 DEBUG:on stmt: $242return_value.1.1 = cast(value=out0)
2024-07-15 06:11:37,660 DEBUG:on stmt: return $242return_value.1.1
2024-07-15 06:11:37,660 DEBUG:==== SSA block analysis pass on 240
2024-07-15 06:11:37,660 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B683A810>
2024-07-15 06:11:37,660 DEBUG:on stmt: $const6.1 = const(int, 0)
2024-07-15 06:11:37,660 DEBUG:on stmt: stencil_index = $const6.1 + index00
2024-07-15 06:11:37,660 DEBUG:on stmt: $8binary_subscr.2 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-07-15 06:11:37,660 DEBUG:on stmt: $const20.4 = const(int, -1)
2024-07-15 06:11:37,660 DEBUG:on stmt: stencil_index.1 = $const20.4 + index00
2024-07-15 06:11:37,660 DEBUG:on stmt: $22binary_subscr.5 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2024-07-15 06:11:37,660 DEBUG:on stmt: $32compare_op.6 = $8binary_subscr.2 > $22binary_subscr.5
2024-07-15 06:11:37,660 DEBUG:on stmt: $const40.8 = const(int, 0)
2024-07-15 06:11:37,660 DEBUG:on stmt: stencil_index.2 = $const40.8 + index00
2024-07-15 06:11:37,660 DEBUG:on stmt: $42binary_subscr.9 = getitem(value=x, index=stencil_index.2, fn=<built-in function getitem>)
2024-07-15 06:11:37,660 DEBUG:on stmt: $const54.11 = const(int, 1)
2024-07-15 06:11:37,660 DEBUG:on stmt: stencil_index.3 = $const54.11 + index00
2024-07-15 06:11:37,660 DEBUG:on stmt: $56binary_subscr.12 = getitem(value=x, index=stencil_index.3, fn=<built-in function getitem>)
2024-07-15 06:11:37,660 DEBUG:on stmt: $66compare_op.13 = $42binary_subscr.9 >= $56binary_subscr.12
2024-07-15 06:11:37,660 DEBUG:on stmt: $binop_and_72.14 = $32compare_op.6 & $66compare_op.13
2024-07-15 06:11:37,660 DEBUG:on stmt: $76return_value.15 = cast(value=$binop_and_72.14)
2024-07-15 06:11:37,660 DEBUG:on stmt: out0[index00] = $76return_value.15
2024-07-15 06:11:37,660 DEBUG:on stmt: jump 241
2024-07-15 06:11:37,660 DEBUG:==== SSA block analysis pass on 241
2024-07-15 06:11:37,660 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B683A810>
2024-07-15 06:11:37,660 DEBUG:on stmt: jump 230
2024-07-15 06:11:37,661 DEBUG:defs defaultdict(<class 'list'>,
            {'$102build_slice.13.1': [(<numba.core.ir.Assign object at 0x00000221B6822610>,
                                       0)],
             '$102build_slice.14.1': [(<numba.core.ir.Assign object at 0x00000221B6823890>,
                                       0)],
             '$116build_slice.19.1': [(<numba.core.ir.Assign object at 0x00000221B6822AD0>,
                                       0)],
             '$116build_slice.20.1': [(<numba.core.ir.Assign object at 0x00000221B6822C90>,
                                       0)],
             '$122load_global.21.1': [(<numba.core.ir.Assign object at 0x00000221B6823050>,
                                       0)],
             '$134load_global.23.1': [(<numba.core.ir.Assign object at 0x00000221B68224D0>,
                                       0)],
             '$154call.27.1': [(<numba.core.ir.Assign object at 0x00000221B6821110>,
                                0)],
             '$164unary_negative.28.1': [(<numba.core.ir.Assign object at 0x00000221B6821690>,
                                          0)],
             '$170binary_subscr.31.1': [(<numba.core.ir.Assign object at 0x00000221B6821C10>,
                                         0)],
             '$180load_global.32.1': [(<numba.core.ir.Assign object at 0x00000221B6821DD0>,
                                       0)],
             '$18load_global.2.1': [(<numba.core.ir.Assign object at 0x00000221B6839250>,
                                     0)],
             '$200call.36.1': [(<numba.core.ir.Assign object at 0x00000221B60145D0>,
                                0)],
             '$218call.38.1': [(<numba.core.ir.Assign object at 0x00000221B67B4C10>,
                                0)],
             '$228get_iter.39.1': [(<numba.core.ir.Assign object at 0x00000221B67B4A10>,
                                    0)],
             '$22binary_subscr.5': [(<numba.core.ir.Assign object at 0x00000221B682F210>,
                                     240)],
             '$230for_iter.1.1': [(<numba.core.ir.Assign object at 0x00000221B67B4910>,
                                   230)],
             '$230for_iter.2.1': [(<numba.core.ir.Assign object at 0x00000221B67B4890>,
                                   230)],
             '$230for_iter.3.1': [(<numba.core.ir.Assign object at 0x00000221B67B4790>,
                                   230)],
             '$242return_value.1.1': [(<numba.core.ir.Assign object at 0x00000221B67B67D0>,
                                       242)],
             '$30load_method.4.1': [(<numba.core.ir.Assign object at 0x00000221B683AB50>,
                                     0)],
             '$32compare_op.6': [(<numba.core.ir.Assign object at 0x00000221B686FD90>,
                                  240)],
             '$42binary_subscr.9': [(<numba.core.ir.Assign object at 0x00000221B682F590>,
                                     240)],
             '$54load_global.6.1': [(<numba.core.ir.Assign object at 0x00000221B683BAD0>,
                                     0)],
             '$56binary_subscr.12': [(<numba.core.ir.Assign object at 0x00000221B682E9D0>,
                                      240)],
             '$66compare_op.13': [(<numba.core.ir.Assign object at 0x00000221B68412D0>,
                                   240)],
             '$66load_attr.7.1': [(<numba.core.ir.Assign object at 0x00000221B683A590>,
                                   0)],
             '$76return_value.15': [(<numba.core.ir.Assign object at 0x00000221B6840590>,
                                     240)],
             '$8binary_subscr.2': [(<numba.core.ir.Assign object at 0x00000221B682EA90>,
                                    240)],
             '$binop_and_72.14': [(<numba.core.ir.Assign object at 0x00000221B6840A10>,
                                   240)],
             '$binop_sub210.37.1': [(<numba.core.ir.Assign object at 0x00000221B6038310>,
                                     0)],
             '$const100.12.1': [(<numba.core.ir.Assign object at 0x00000221B6823C90>,
                                 0)],
             '$const108.15.1': [(<numba.core.ir.Assign object at 0x00000221B6823850>,
                                 0)],
             '$const112.17.1': [(<numba.core.ir.Assign object at 0x00000221B6823490>,
                                 0)],
             '$const114.18.1': [(<numba.core.ir.Assign object at 0x00000221B6823290>,
                                 0)],
             '$const146.25.1': [(<numba.core.ir.Assign object at 0x00000221B6822350>,
                                 0)],
             '$const148.26.1': [(<numba.core.ir.Assign object at 0x00000221B6821350>,
                                 0)],
             '$const168.30.1': [(<numba.core.ir.Assign object at 0x00000221B6821A50>,
                                 0)],
             '$const192.34.1': [(<numba.core.ir.Assign object at 0x00000221B6822110>,
                                 0)],
             '$const194.35.1': [(<numba.core.ir.Assign object at 0x00000221B6820E50>,
                                 0)],
             '$const20.4': [(<numba.core.ir.Assign object at 0x00000221B6881E10>,
                             240)],
             '$const40.8': [(<numba.core.ir.Assign object at 0x00000221B6874310>,
                             240)],
             '$const54.11': [(<numba.core.ir.Assign object at 0x00000221B6875B10>,
                              240)],
             '$const6.1': [(<numba.core.ir.Assign object at 0x00000221B687FF50>,
                            240)],
             '$const94.9.1': [(<numba.core.ir.Assign object at 0x00000221B68236D0>,
                               0)],
             '$const98.11.1': [(<numba.core.ir.Assign object at 0x00000221B6823D50>,
                                0)],
             '$phi230.0.1': [(<numba.core.ir.Assign object at 0x00000221B6838150>,
                              0)],
             '$phi232.1.1': [(<numba.core.ir.Assign object at 0x00000221B67B4410>,
                              230)],
             'full_shape0': [(<numba.core.ir.Assign object at 0x00000221B6838750>,
                              0)],
             'index00': [(<numba.core.ir.Assign object at 0x00000221B67B4250>,
                          232)],
             'out0': [(<numba.core.ir.Assign object at 0x00000221B6822E10>, 0)],
             'stencil_index': [(<numba.core.ir.Assign object at 0x00000221B682F2D0>,
                                240)],
             'stencil_index.1': [(<numba.core.ir.Assign object at 0x00000221B682F510>,
                                  240)],
             'stencil_index.2': [(<numba.core.ir.Assign object at 0x00000221B682F410>,
                                  240)],
             'stencil_index.3': [(<numba.core.ir.Assign object at 0x00000221B682F190>,
                                  240)],
             'x': [(<numba.core.ir.Assign object at 0x00000221B683A1D0>, 0)]})
2024-07-15 06:11:37,661 DEBUG:SSA violators <numba.core.utils.OrderedSet object at 0x00000221B683A810>
2024-07-15 06:11:37,937 DEBUG:bytecode dump:
>          0	NOP(arg=None, lineno=1051)
           2	RESUME(arg=0, lineno=1051)
           4	LOAD_GLOBAL(arg=1, lineno=1065)
          16	LOAD_FAST(arg=0, lineno=1065)
          18	PRECALL(arg=1, lineno=1065)
          22	CALL(arg=1, lineno=1065)
          32	LOAD_FAST(arg=1, lineno=1065)
          34	LOAD_CONST(arg=1, lineno=1065)
          36	LOAD_CONST(arg=1, lineno=1065)
          38	BUILD_SLICE(arg=2, lineno=1065)
          40	STORE_SUBSCR(arg=None, lineno=1065)
          44	LOAD_CONST(arg=1, lineno=1065)
          46	RETURN_VALUE(arg=None, lineno=1065)
2024-07-15 06:11:37,937 DEBUG:pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-15 06:11:37,937 DEBUG:stack: []
2024-07-15 06:11:37,937 DEBUG:state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-15 06:11:37,937 DEBUG:dispatch pc=0, inst=NOP(arg=None, lineno=1051)
2024-07-15 06:11:37,937 DEBUG:stack []
2024-07-15 06:11:37,937 DEBUG:dispatch pc=2, inst=RESUME(arg=0, lineno=1051)
2024-07-15 06:11:37,937 DEBUG:stack []
2024-07-15 06:11:37,937 DEBUG:dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=1065)
2024-07-15 06:11:37,937 DEBUG:stack []
2024-07-15 06:11:37,938 DEBUG:dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=1065)
2024-07-15 06:11:37,938 DEBUG:stack ['$null$4.1', '$4load_global.0']
2024-07-15 06:11:37,938 DEBUG:dispatch pc=18, inst=PRECALL(arg=1, lineno=1065)
2024-07-15 06:11:37,938 DEBUG:stack ['$null$4.1', '$4load_global.0', '$x16.2']
2024-07-15 06:11:37,938 DEBUG:dispatch pc=22, inst=CALL(arg=1, lineno=1065)
2024-07-15 06:11:37,938 DEBUG:stack ['$null$4.1', '$4load_global.0', '$x16.2']
2024-07-15 06:11:37,938 DEBUG:dispatch pc=32, inst=LOAD_FAST(arg=1, lineno=1065)
2024-07-15 06:11:37,938 DEBUG:stack ['$22call.3']
2024-07-15 06:11:37,938 DEBUG:dispatch pc=34, inst=LOAD_CONST(arg=1, lineno=1065)
2024-07-15 06:11:37,938 DEBUG:stack ['$22call.3', '$y32.4']
2024-07-15 06:11:37,938 DEBUG:dispatch pc=36, inst=LOAD_CONST(arg=1, lineno=1065)
2024-07-15 06:11:37,938 DEBUG:stack ['$22call.3', '$y32.4', '$const34.5']
2024-07-15 06:11:37,938 DEBUG:dispatch pc=38, inst=BUILD_SLICE(arg=2, lineno=1065)
2024-07-15 06:11:37,938 DEBUG:stack ['$22call.3', '$y32.4', '$const34.5', '$const36.6']
2024-07-15 06:11:37,938 DEBUG:dispatch pc=40, inst=STORE_SUBSCR(arg=None, lineno=1065)
2024-07-15 06:11:37,938 DEBUG:stack ['$22call.3', '$y32.4', '$38build_slice.8']
2024-07-15 06:11:37,938 DEBUG:dispatch pc=44, inst=LOAD_CONST(arg=1, lineno=1065)
2024-07-15 06:11:37,938 DEBUG:stack []
2024-07-15 06:11:37,938 DEBUG:dispatch pc=46, inst=RETURN_VALUE(arg=None, lineno=1065)
2024-07-15 06:11:37,938 DEBUG:stack ['$const44.9']
2024-07-15 06:11:37,938 DEBUG:end state. edges=[]
2024-07-15 06:11:37,938 DEBUG:-------------------------Prune PHIs-------------------------
2024-07-15 06:11:37,938 DEBUG:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-07-15 06:11:37,938 DEBUG:defmap: {}
2024-07-15 06:11:37,938 DEBUG:phismap: defaultdict(<class 'set'>, {})
2024-07-15 06:11:37,938 DEBUG:changing phismap: defaultdict(<class 'set'>, {})
2024-07-15 06:11:37,938 DEBUG:keep phismap: {}
2024-07-15 06:11:37,938 DEBUG:new_out: defaultdict(<class 'dict'>, {})
2024-07-15 06:11:37,938 DEBUG:----------------------DONE Prune PHIs-----------------------
2024-07-15 06:11:37,938 DEBUG:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (6, {}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$x16.2'}), (18, {}), (20, {}), (22, {'func': '$4load_global.0', 'args': ['$x16.2'], 'kw_names': None, 'res': '$22call.3'}), (24, {}), (26, {}), (28, {}), (30, {}), (32, {'res': '$y32.4'}), (34, {'res': '$const34.5'}), (36, {'res': '$const36.6'}), (38, {'start': '$const34.5', 'stop': '$const36.6', 'step': None, 'res': '$38build_slice.8', 'slicevar': '$38build_slice.7'}), (40, {'target': '$y32.4', 'index': '$38build_slice.8', 'value': '$22call.3'}), (42, {}), (44, {'res': '$const44.9'}), (46, {'retval': '$const44.9', 'castval': '$46return_value.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-15 06:11:37,939 DEBUG:label 0:
    x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    $4load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x00000221B6075290>) ['$4load_global.0']
    $22call.3 = call $4load_global.0(x, func=$4load_global.0, args=[Var(x, utils.py:1051)], kws=(), vararg=None, varkwarg=None, target=None) ['$22call.3', '$4load_global.0', 'x']
    $const34.5 = const(NoneType, None)       ['$const34.5']
    $const36.6 = const(NoneType, None)       ['$const36.6']
    $38build_slice.7 = global(slice: <class 'slice'>) ['$38build_slice.7']
    $38build_slice.8 = call $38build_slice.7($const34.5, $const36.6, func=$38build_slice.7, args=(Var($const34.5, utils.py:1065), Var($const36.6, utils.py:1065)), kws=(), vararg=None, varkwarg=None, target=None) ['$38build_slice.7', '$38build_slice.8', '$const34.5', '$const36.6']
    y[$38build_slice.8] = $22call.3          ['$22call.3', '$38build_slice.8', 'y']
    $const44.9 = const(NoneType, None)       ['$const44.9']
    $46return_value.10 = cast(value=$const44.9) ['$46return_value.10', '$const44.9']
    return $46return_value.10                ['$46return_value.10']

2024-07-15 06:11:37,943 DEBUG:==== SSA block analysis pass on 0
2024-07-15 06:11:37,943 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B6A23850>
2024-07-15 06:11:37,943 DEBUG:on stmt: x = arg(0, name=x)
2024-07-15 06:11:37,944 DEBUG:on stmt: y = arg(1, name=y)
2024-07-15 06:11:37,944 DEBUG:on stmt: $4load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x00000221B6075290>)
2024-07-15 06:11:37,944 DEBUG:on stmt: $22call.3 = call $4load_global.0(x, func=$4load_global.0, args=[Var(x, utils.py:1051)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:37,944 DEBUG:on stmt: $const34.5 = const(NoneType, None)
2024-07-15 06:11:37,944 DEBUG:on stmt: $const36.6 = const(NoneType, None)
2024-07-15 06:11:37,944 DEBUG:on stmt: $38build_slice.7 = global(slice: <class 'slice'>)
2024-07-15 06:11:37,944 DEBUG:on stmt: $38build_slice.8 = call $38build_slice.7($const34.5, $const36.6, func=$38build_slice.7, args=(Var($const34.5, utils.py:1065), Var($const36.6, utils.py:1065)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:37,944 DEBUG:on stmt: y[slice(None, None, None)] = $22call.3
2024-07-15 06:11:37,944 DEBUG:on stmt: $const44.9 = const(NoneType, None)
2024-07-15 06:11:37,944 DEBUG:on stmt: $46return_value.10 = cast(value=$const44.9)
2024-07-15 06:11:37,944 DEBUG:on stmt: return $46return_value.10
2024-07-15 06:11:37,944 DEBUG:defs defaultdict(<class 'list'>,
            {'$22call.3': [(<numba.core.ir.Assign object at 0x00000221B6A21310>,
                            0)],
             '$38build_slice.7': [(<numba.core.ir.Assign object at 0x00000221B6A21AD0>,
                                   0)],
             '$38build_slice.8': [(<numba.core.ir.Assign object at 0x00000221B6A21B90>,
                                   0)],
             '$46return_value.10': [(<numba.core.ir.Assign object at 0x00000221B6A22010>,
                                     0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x00000221B6A20E10>,
                                  0)],
             '$const34.5': [(<numba.core.ir.Assign object at 0x00000221B6A21750>,
                             0)],
             '$const36.6': [(<numba.core.ir.Assign object at 0x00000221B6A21910>,
                             0)],
             '$const44.9': [(<numba.core.ir.Assign object at 0x00000221B6A21E50>,
                             0)],
             'x': [(<numba.core.ir.Assign object at 0x00000221B6A20A90>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x00000221B6A20B90>, 0)]})
2024-07-15 06:11:37,944 DEBUG:SSA violators <numba.core.utils.OrderedSet object at 0x00000221B6A23850>
2024-07-15 06:11:37,966 DEBUG:bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	RESUME(arg=0, lineno=1)
           4	LOAD_FAST(arg=0, lineno=2)
           6	LOAD_ATTR(arg=0, lineno=2)
          16	STORE_FAST(arg=1, lineno=2)
          18	LOAD_GLOBAL(arg=2, lineno=3)
          30	LOAD_METHOD(arg=2, lineno=3)
          52	LOAD_FAST(arg=1, lineno=3)
          54	LOAD_GLOBAL(arg=2, lineno=3)
          66	LOAD_ATTR(arg=3, lineno=3)
          76	KW_NAMES(arg=1, lineno=3)
          78	PRECALL(arg=2, lineno=3)
          82	CALL(arg=2, lineno=3)
          92	STORE_FAST(arg=2, lineno=3)
          94	LOAD_CONST(arg=2, lineno=4)
          96	LOAD_FAST(arg=2, lineno=4)
          98	LOAD_CONST(arg=0, lineno=4)
         100	LOAD_CONST(arg=3, lineno=4)
         102	BUILD_SLICE(arg=2, lineno=4)
         104	STORE_SUBSCR(arg=None, lineno=4)
         108	LOAD_CONST(arg=2, lineno=5)
         110	LOAD_FAST(arg=2, lineno=5)
         112	LOAD_CONST(arg=4, lineno=5)
         114	LOAD_CONST(arg=0, lineno=5)
         116	BUILD_SLICE(arg=2, lineno=5)
         118	STORE_SUBSCR(arg=None, lineno=5)
         122	LOAD_GLOBAL(arg=9, lineno=6)
         134	LOAD_GLOBAL(arg=11, lineno=6)
         146	LOAD_CONST(arg=2, lineno=6)
         148	LOAD_CONST(arg=4, lineno=6)
         150	PRECALL(arg=2, lineno=6)
         154	CALL(arg=2, lineno=6)
         164	UNARY_NEGATIVE(arg=None, lineno=6)
         166	LOAD_FAST(arg=1, lineno=6)
         168	LOAD_CONST(arg=2, lineno=6)
         170	BINARY_SUBSCR(arg=None, lineno=6)
         180	LOAD_GLOBAL(arg=13, lineno=6)
         192	LOAD_CONST(arg=2, lineno=6)
         194	LOAD_CONST(arg=3, lineno=6)
         196	PRECALL(arg=2, lineno=6)
         200	CALL(arg=2, lineno=6)
         210	BINARY_OP(arg=10, lineno=6)
         214	PRECALL(arg=2, lineno=6)
         218	CALL(arg=2, lineno=6)
         228	GET_ITER(arg=None, lineno=6)
>        230	FOR_ITER(arg=4, lineno=6)
         232	STORE_FAST(arg=3, lineno=6)
         234	LOAD_CONST(arg=2, lineno=7)
         236	STORE_FAST(arg=4, lineno=7)
         238	JUMP_BACKWARD(arg=5, lineno=7)
>        240	LOAD_FAST(arg=2, lineno=8)
         242	RETURN_VALUE(arg=None, lineno=8)
2024-07-15 06:11:37,966 DEBUG:pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-15 06:11:37,966 DEBUG:stack: []
2024-07-15 06:11:37,966 DEBUG:state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-15 06:11:37,966 DEBUG:dispatch pc=0, inst=NOP(arg=None, lineno=1)
2024-07-15 06:11:37,966 DEBUG:stack []
2024-07-15 06:11:37,966 DEBUG:dispatch pc=2, inst=RESUME(arg=0, lineno=1)
2024-07-15 06:11:37,966 DEBUG:stack []
2024-07-15 06:11:37,966 DEBUG:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2)
2024-07-15 06:11:37,966 DEBUG:stack []
2024-07-15 06:11:37,966 DEBUG:dispatch pc=6, inst=LOAD_ATTR(arg=0, lineno=2)
2024-07-15 06:11:37,966 DEBUG:stack ['$x4.0']
2024-07-15 06:11:37,966 DEBUG:dispatch pc=16, inst=STORE_FAST(arg=1, lineno=2)
2024-07-15 06:11:37,966 DEBUG:stack ['$6load_attr.1']
2024-07-15 06:11:37,967 DEBUG:dispatch pc=18, inst=LOAD_GLOBAL(arg=2, lineno=3)
2024-07-15 06:11:37,967 DEBUG:stack []
2024-07-15 06:11:37,967 DEBUG:dispatch pc=30, inst=LOAD_METHOD(arg=2, lineno=3)
2024-07-15 06:11:37,967 DEBUG:stack ['$18load_global.2']
2024-07-15 06:11:37,967 DEBUG:dispatch pc=52, inst=LOAD_FAST(arg=1, lineno=3)
2024-07-15 06:11:37,967 DEBUG:stack ['$null$30.3', '$30load_method.4']
2024-07-15 06:11:37,967 DEBUG:dispatch pc=54, inst=LOAD_GLOBAL(arg=2, lineno=3)
2024-07-15 06:11:37,967 DEBUG:stack ['$null$30.3', '$30load_method.4', '$full_shape052.5']
2024-07-15 06:11:37,967 DEBUG:dispatch pc=66, inst=LOAD_ATTR(arg=3, lineno=3)
2024-07-15 06:11:37,967 DEBUG:stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$54load_global.6']
2024-07-15 06:11:37,967 DEBUG:dispatch pc=76, inst=KW_NAMES(arg=1, lineno=3)
2024-07-15 06:11:37,967 DEBUG:stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
2024-07-15 06:11:37,967 DEBUG:dispatch pc=78, inst=PRECALL(arg=2, lineno=3)
2024-07-15 06:11:37,968 DEBUG:stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
2024-07-15 06:11:37,968 DEBUG:dispatch pc=82, inst=CALL(arg=2, lineno=3)
2024-07-15 06:11:37,968 DEBUG:stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
2024-07-15 06:11:37,968 DEBUG:dispatch pc=92, inst=STORE_FAST(arg=2, lineno=3)
2024-07-15 06:11:37,968 DEBUG:stack ['$82call.8']
2024-07-15 06:11:37,968 DEBUG:dispatch pc=94, inst=LOAD_CONST(arg=2, lineno=4)
2024-07-15 06:11:37,968 DEBUG:stack []
2024-07-15 06:11:37,968 DEBUG:dispatch pc=96, inst=LOAD_FAST(arg=2, lineno=4)
2024-07-15 06:11:37,968 DEBUG:stack ['$const94.9']
2024-07-15 06:11:37,968 DEBUG:dispatch pc=98, inst=LOAD_CONST(arg=0, lineno=4)
2024-07-15 06:11:37,968 DEBUG:stack ['$const94.9', '$out096.10']
2024-07-15 06:11:37,968 DEBUG:dispatch pc=100, inst=LOAD_CONST(arg=3, lineno=4)
2024-07-15 06:11:37,968 DEBUG:stack ['$const94.9', '$out096.10', '$const98.11']
2024-07-15 06:11:37,968 DEBUG:dispatch pc=102, inst=BUILD_SLICE(arg=2, lineno=4)
2024-07-15 06:11:37,968 DEBUG:stack ['$const94.9', '$out096.10', '$const98.11', '$const100.12']
2024-07-15 06:11:37,968 DEBUG:dispatch pc=104, inst=STORE_SUBSCR(arg=None, lineno=4)
2024-07-15 06:11:37,968 DEBUG:stack ['$const94.9', '$out096.10', '$102build_slice.14']
2024-07-15 06:11:37,968 DEBUG:dispatch pc=108, inst=LOAD_CONST(arg=2, lineno=5)
2024-07-15 06:11:37,968 DEBUG:stack []
2024-07-15 06:11:37,968 DEBUG:dispatch pc=110, inst=LOAD_FAST(arg=2, lineno=5)
2024-07-15 06:11:37,968 DEBUG:stack ['$const108.15']
2024-07-15 06:11:37,968 DEBUG:dispatch pc=112, inst=LOAD_CONST(arg=4, lineno=5)
2024-07-15 06:11:37,968 DEBUG:stack ['$const108.15', '$out0110.16']
2024-07-15 06:11:37,968 DEBUG:dispatch pc=114, inst=LOAD_CONST(arg=0, lineno=5)
2024-07-15 06:11:37,968 DEBUG:stack ['$const108.15', '$out0110.16', '$const112.17']
2024-07-15 06:11:37,968 DEBUG:dispatch pc=116, inst=BUILD_SLICE(arg=2, lineno=5)
2024-07-15 06:11:37,968 DEBUG:stack ['$const108.15', '$out0110.16', '$const112.17', '$const114.18']
2024-07-15 06:11:37,968 DEBUG:dispatch pc=118, inst=STORE_SUBSCR(arg=None, lineno=5)
2024-07-15 06:11:37,968 DEBUG:stack ['$const108.15', '$out0110.16', '$116build_slice.20']
2024-07-15 06:11:37,968 DEBUG:dispatch pc=122, inst=LOAD_GLOBAL(arg=9, lineno=6)
2024-07-15 06:11:37,969 DEBUG:stack []
2024-07-15 06:11:37,969 DEBUG:dispatch pc=134, inst=LOAD_GLOBAL(arg=11, lineno=6)
2024-07-15 06:11:37,969 DEBUG:stack ['$null$122.22', '$122load_global.21']
2024-07-15 06:11:37,969 DEBUG:dispatch pc=146, inst=LOAD_CONST(arg=2, lineno=6)
2024-07-15 06:11:37,969 DEBUG:stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23']
2024-07-15 06:11:37,969 DEBUG:dispatch pc=148, inst=LOAD_CONST(arg=4, lineno=6)
2024-07-15 06:11:37,969 DEBUG:stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25']
2024-07-15 06:11:37,969 DEBUG:dispatch pc=150, inst=PRECALL(arg=2, lineno=6)
2024-07-15 06:11:37,969 DEBUG:stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25', '$const148.26']
2024-07-15 06:11:37,969 DEBUG:dispatch pc=154, inst=CALL(arg=2, lineno=6)
2024-07-15 06:11:37,969 DEBUG:stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25', '$const148.26']
2024-07-15 06:11:37,969 DEBUG:dispatch pc=164, inst=UNARY_NEGATIVE(arg=None, lineno=6)
2024-07-15 06:11:37,969 DEBUG:stack ['$null$122.22', '$122load_global.21', '$154call.27']
2024-07-15 06:11:37,969 DEBUG:dispatch pc=166, inst=LOAD_FAST(arg=1, lineno=6)
2024-07-15 06:11:37,969 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28']
2024-07-15 06:11:37,969 DEBUG:dispatch pc=168, inst=LOAD_CONST(arg=2, lineno=6)
2024-07-15 06:11:37,969 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$full_shape0166.29']
2024-07-15 06:11:37,969 DEBUG:dispatch pc=170, inst=BINARY_SUBSCR(arg=None, lineno=6)
2024-07-15 06:11:37,969 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$full_shape0166.29', '$const168.30']
2024-07-15 06:11:37,969 DEBUG:dispatch pc=180, inst=LOAD_GLOBAL(arg=13, lineno=6)
2024-07-15 06:11:37,969 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31']
2024-07-15 06:11:37,969 DEBUG:dispatch pc=192, inst=LOAD_CONST(arg=2, lineno=6)
2024-07-15 06:11:37,969 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32']
2024-07-15 06:11:37,969 DEBUG:dispatch pc=194, inst=LOAD_CONST(arg=3, lineno=6)
2024-07-15 06:11:37,969 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34']
2024-07-15 06:11:37,969 DEBUG:dispatch pc=196, inst=PRECALL(arg=2, lineno=6)
2024-07-15 06:11:37,969 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34', '$const194.35']
2024-07-15 06:11:37,970 DEBUG:dispatch pc=200, inst=CALL(arg=2, lineno=6)
2024-07-15 06:11:37,970 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34', '$const194.35']
2024-07-15 06:11:37,970 DEBUG:dispatch pc=210, inst=BINARY_OP(arg=10, lineno=6)
2024-07-15 06:11:37,970 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$200call.36']
2024-07-15 06:11:37,970 DEBUG:dispatch pc=214, inst=PRECALL(arg=2, lineno=6)
2024-07-15 06:11:37,970 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$binop_sub210.37']
2024-07-15 06:11:37,970 DEBUG:dispatch pc=218, inst=CALL(arg=2, lineno=6)
2024-07-15 06:11:37,970 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$binop_sub210.37']
2024-07-15 06:11:37,970 DEBUG:dispatch pc=228, inst=GET_ITER(arg=None, lineno=6)
2024-07-15 06:11:37,970 DEBUG:stack ['$218call.38']
2024-07-15 06:11:37,970 DEBUG:end state. edges=[Edge(pc=230, stack=('$228get_iter.39',), blockstack=(), npush=0)]
2024-07-15 06:11:37,970 DEBUG:pending: deque([State(pc_initial=230 nstack_initial=1)])
2024-07-15 06:11:37,970 DEBUG:stack: ['$phi230.0']
2024-07-15 06:11:37,970 DEBUG:state.pc_initial: State(pc_initial=230 nstack_initial=1)
2024-07-15 06:11:37,970 DEBUG:dispatch pc=230, inst=FOR_ITER(arg=4, lineno=6)
2024-07-15 06:11:37,970 DEBUG:stack ['$phi230.0']
2024-07-15 06:11:37,970 DEBUG:end state. edges=[Edge(pc=240, stack=(), blockstack=(), npush=0), Edge(pc=232, stack=('$phi230.0', '$230for_iter.2'), blockstack=(), npush=0)]
2024-07-15 06:11:37,970 DEBUG:pending: deque([State(pc_initial=240 nstack_initial=0), State(pc_initial=232 nstack_initial=2)])
2024-07-15 06:11:37,970 DEBUG:stack: []
2024-07-15 06:11:37,970 DEBUG:state.pc_initial: State(pc_initial=240 nstack_initial=0)
2024-07-15 06:11:37,970 DEBUG:dispatch pc=240, inst=LOAD_FAST(arg=2, lineno=8)
2024-07-15 06:11:37,970 DEBUG:stack []
2024-07-15 06:11:37,970 DEBUG:dispatch pc=242, inst=RETURN_VALUE(arg=None, lineno=8)
2024-07-15 06:11:37,970 DEBUG:stack ['$out0240.0']
2024-07-15 06:11:37,970 DEBUG:end state. edges=[]
2024-07-15 06:11:37,970 DEBUG:pending: deque([State(pc_initial=232 nstack_initial=2)])
2024-07-15 06:11:37,970 DEBUG:stack: ['$phi232.0', '$phi232.1']
2024-07-15 06:11:37,970 DEBUG:state.pc_initial: State(pc_initial=232 nstack_initial=2)
2024-07-15 06:11:37,971 DEBUG:dispatch pc=232, inst=STORE_FAST(arg=3, lineno=6)
2024-07-15 06:11:37,971 DEBUG:stack ['$phi232.0', '$phi232.1']
2024-07-15 06:11:37,971 DEBUG:dispatch pc=234, inst=LOAD_CONST(arg=2, lineno=7)
2024-07-15 06:11:37,971 DEBUG:stack ['$phi232.0']
2024-07-15 06:11:37,971 DEBUG:dispatch pc=236, inst=STORE_FAST(arg=4, lineno=7)
2024-07-15 06:11:37,971 DEBUG:stack ['$phi232.0', '$const234.2']
2024-07-15 06:11:37,971 DEBUG:dispatch pc=238, inst=JUMP_BACKWARD(arg=5, lineno=7)
2024-07-15 06:11:37,971 DEBUG:stack ['$phi232.0']
2024-07-15 06:11:37,971 DEBUG:end state. edges=[Edge(pc=230, stack=('$phi232.0',), blockstack=(), npush=0)]
2024-07-15 06:11:37,971 DEBUG:pending: deque([State(pc_initial=230 nstack_initial=1)])
2024-07-15 06:11:37,971 DEBUG:-------------------------Prune PHIs-------------------------
2024-07-15 06:11:37,971 DEBUG:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=230 nstack_initial=1): {'$phi230.0'},
             State(pc_initial=232 nstack_initial=2): {'$phi232.1'},
             State(pc_initial=240 nstack_initial=0): set()})
2024-07-15 06:11:37,971 DEBUG:defmap: {'$phi230.0': State(pc_initial=0 nstack_initial=0),
 '$phi232.1': State(pc_initial=230 nstack_initial=1)}
2024-07-15 06:11:37,971 DEBUG:phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi232.0',
                            State(pc_initial=232 nstack_initial=2))},
             '$phi232.0': {('$phi230.0',
                            State(pc_initial=230 nstack_initial=1))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-07-15 06:11:37,971 DEBUG:changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi230.0',
                            State(pc_initial=230 nstack_initial=1))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-07-15 06:11:37,972 DEBUG:changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-07-15 06:11:37,972 DEBUG:changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-07-15 06:11:37,972 DEBUG:keep phismap: {'$phi230.0': {('$228get_iter.39', State(pc_initial=0 nstack_initial=0))},
 '$phi232.1': {('$230for_iter.2', State(pc_initial=230 nstack_initial=1))}}
2024-07-15 06:11:37,972 DEBUG:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi230.0': '$228get_iter.39'},
             State(pc_initial=230 nstack_initial=1): {'$phi232.1': '$230for_iter.2'}})
2024-07-15 06:11:37,972 DEBUG:----------------------DONE Prune PHIs-----------------------
2024-07-15 06:11:37,972 DEBUG:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'item': '$x4.0', 'res': '$6load_attr.1'}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'value': '$6load_attr.1'}), (18, {'idx': 1, 'res': '$18load_global.2'}), (20, {}), (22, {}), (24, {}), (26, {}), (28, {}), (30, {'item': '$18load_global.2', 'res': '$30load_method.4'}), (32, {}), (34, {}), (36, {}), (38, {}), (40, {}), (42, {}), (44, {}), (46, {}), (48, {}), (50, {}), (52, {'res': '$full_shape052.5'}), (54, {'idx': 1, 'res': '$54load_global.6'}), (56, {}), (58, {}), (60, {}), (62, {}), (64, {}), (66, {'item': '$54load_global.6', 'res': '$66load_attr.7'}), (68, {}), (70, {}), (72, {}), (74, {}), (78, {}), (80, {}), (82, {'func': '$30load_method.4', 'args': ['$full_shape052.5', '$66load_attr.7'], 'kw_names': 1, 'res': '$82call.8'}), (84, {}), (86, {}), (88, {}), (90, {}), (92, {'value': '$82call.8'}), (94, {'res': '$const94.9'}), (96, {'res': '$out096.10'}), (98, {'res': '$const98.11'}), (100, {'res': '$const100.12'}), (102, {'start': '$const98.11', 'stop': '$const100.12', 'step': None, 'res': '$102build_slice.14', 'slicevar': '$102build_slice.13'}), (104, {'target': '$out096.10', 'index': '$102build_slice.14', 'value': '$const94.9'}), (106, {}), (108, {'res': '$const108.15'}), (110, {'res': '$out0110.16'}), (112, {'res': '$const112.17'}), (114, {'res': '$const114.18'}), (116, {'start': '$const112.17', 'stop': '$const114.18', 'step': None, 'res': '$116build_slice.20', 'slicevar': '$116build_slice.19'}), (118, {'target': '$out0110.16', 'index': '$116build_slice.20', 'value': '$const108.15'}), (120, {}), (122, {'idx': 4, 'res': '$122load_global.21'}), (124, {}), (126, {}), (128, {}), (130, {}), (132, {}), (134, {'idx': 5, 'res': '$134load_global.23'}), (136, {}), (138, {}), (140, {}), (142, {}), (144, {}), (146, {'res': '$const146.25'}), (148, {'res': '$const148.26'}), (150, {}), (152, {}), (154, {'func': '$134load_global.23', 'args': ['$const146.25', '$const148.26'], 'kw_names': None, 'res': '$154call.27'}), (156, {}), (158, {}), (160, {}), (162, {}), (164, {'value': '$154call.27', 'res': '$164unary_negative.28'}), (166, {'res': '$full_shape0166.29'}), (168, {'res': '$const168.30'}), (170, {'index': '$const168.30', 'target': '$full_shape0166.29', 'res': '$170binary_subscr.31'}), (172, {}), (174, {}), (176, {}), (178, {}), (180, {'idx': 6, 'res': '$180load_global.32'}), (182, {}), (184, {}), (186, {}), (188, {}), (190, {}), (192, {'res': '$const192.34'}), (194, {'res': '$const194.35'}), (196, {}), (198, {}), (200, {'func': '$180load_global.32', 'args': ['$const192.34', '$const194.35'], 'kw_names': None, 'res': '$200call.36'}), (202, {}), (204, {}), (206, {}), (208, {}), (210, {'op': '-', 'lhs': '$170binary_subscr.31', 'rhs': '$200call.36', 'res': '$binop_sub210.37'}), (212, {}), (214, {}), (216, {}), (218, {'func': '$122load_global.21', 'args': ['$164unary_negative.28', '$binop_sub210.37'], 'kw_names': None, 'res': '$218call.38'}), (220, {}), (222, {}), (224, {}), (226, {}), (228, {'value': '$218call.38', 'res': '$228get_iter.39'})), outgoing_phis={'$phi230.0': '$228get_iter.39'}, blockstack=(), active_try_block=None, outgoing_edgepushed={230: ('$228get_iter.39',)})
2024-07-15 06:11:37,972 DEBUG:block_infos State(pc_initial=230 nstack_initial=1):
AdaptBlockInfo(insts=((230, {'iterator': '$phi230.0', 'pair': '$230for_iter.1', 'indval': '$230for_iter.2', 'pred': '$230for_iter.3'}),), outgoing_phis={'$phi232.1': '$230for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={240: (), 232: ('$phi230.0', '$230for_iter.2')})
2024-07-15 06:11:37,972 DEBUG:block_infos State(pc_initial=232 nstack_initial=2):
AdaptBlockInfo(insts=((232, {'value': '$phi232.1'}), (234, {'res': '$const234.2'}), (236, {'value': '$const234.2'}), (238, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={230: ('$phi232.0',)})
2024-07-15 06:11:37,972 DEBUG:block_infos State(pc_initial=240 nstack_initial=0):
AdaptBlockInfo(insts=((240, {'res': '$out0240.0'}), (242, {'retval': '$out0240.0', 'castval': '$242return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-15 06:11:37,974 DEBUG:label 0:
    x = arg(0, name=x)                       ['x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $18load_global.2 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$18load_global.2']
    $30load_method.4 = getattr(value=$18load_global.2, attr=empty) ['$18load_global.2', '$30load_method.4']
    $54load_global.6 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$54load_global.6']
    $66load_attr.7 = getattr(value=$54load_global.6, attr=bool_) ['$54load_global.6', '$66load_attr.7']
    out0 = call $30load_method.4(full_shape0, func=$30load_method.4, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7, <string>:3))], vararg=None, varkwarg=None, target=None) ['$30load_method.4', '$66load_attr.7', 'full_shape0', 'out0']
    $const94.9 = const(int, 0)               ['$const94.9']
    $const98.11 = const(NoneType, None)      ['$const98.11']
    $const100.12 = const(int, 1)             ['$const100.12']
    $102build_slice.13 = global(slice: <class 'slice'>) ['$102build_slice.13']
    $102build_slice.14 = call $102build_slice.13($const98.11, $const100.12, func=$102build_slice.13, args=(Var($const98.11, <string>:4), Var($const100.12, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$102build_slice.13', '$102build_slice.14', '$const100.12', '$const98.11']
    out0[$102build_slice.14] = $const94.9    ['$102build_slice.14', '$const94.9', 'out0']
    $const108.15 = const(int, 0)             ['$const108.15']
    $const112.17 = const(int, -1)            ['$const112.17']
    $const114.18 = const(NoneType, None)     ['$const114.18']
    $116build_slice.19 = global(slice: <class 'slice'>) ['$116build_slice.19']
    $116build_slice.20 = call $116build_slice.19($const112.17, $const114.18, func=$116build_slice.19, args=(Var($const112.17, <string>:5), Var($const114.18, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$116build_slice.19', '$116build_slice.20', '$const112.17', '$const114.18']
    out0[$116build_slice.20] = $const108.15  ['$116build_slice.20', '$const108.15', 'out0']
    $122load_global.21 = global(range: <class 'range'>) ['$122load_global.21']
    $134load_global.23 = global(min: <built-in function min>) ['$134load_global.23']
    $const146.25 = const(int, 0)             ['$const146.25']
    $const148.26 = const(int, -1)            ['$const148.26']
    $154call.27 = call $134load_global.23($const146.25, $const148.26, func=$134load_global.23, args=[Var($const146.25, <string>:6), Var($const148.26, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$134load_global.23', '$154call.27', '$const146.25', '$const148.26']
    $164unary_negative.28 = unary(fn=<built-in function neg>, value=$154call.27) ['$154call.27', '$164unary_negative.28']
    $const168.30 = const(int, 0)             ['$const168.30']
    $170binary_subscr.31 = getitem(value=full_shape0, index=$const168.30, fn=<built-in function getitem>) ['$170binary_subscr.31', '$const168.30', 'full_shape0']
    $180load_global.32 = global(max: <built-in function max>) ['$180load_global.32']
    $const192.34 = const(int, 0)             ['$const192.34']
    $const194.35 = const(int, 1)             ['$const194.35']
    $200call.36 = call $180load_global.32($const192.34, $const194.35, func=$180load_global.32, args=[Var($const192.34, <string>:6), Var($const194.35, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$180load_global.32', '$200call.36', '$const192.34', '$const194.35']
    $binop_sub210.37 = $170binary_subscr.31 - $200call.36 ['$170binary_subscr.31', '$200call.36', '$binop_sub210.37']
    $218call.38 = call $122load_global.21($164unary_negative.28, $binop_sub210.37, func=$122load_global.21, args=[Var($164unary_negative.28, <string>:6), Var($binop_sub210.37, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$122load_global.21', '$164unary_negative.28', '$218call.38', '$binop_sub210.37']
    $228get_iter.39 = getiter(value=$218call.38) ['$218call.38', '$228get_iter.39']
    $phi230.0 = $228get_iter.39              ['$228get_iter.39', '$phi230.0']
    jump 230                                 []
label 230:
    $230for_iter.1 = iternext(value=$phi230.0) ['$230for_iter.1', '$phi230.0']
    $230for_iter.2 = pair_first(value=$230for_iter.1) ['$230for_iter.1', '$230for_iter.2']
    $230for_iter.3 = pair_second(value=$230for_iter.1) ['$230for_iter.1', '$230for_iter.3']
    $phi232.1 = $230for_iter.2               ['$230for_iter.2', '$phi232.1']
    branch $230for_iter.3, 232, 240          ['$230for_iter.3']
label 232:
    index00 = $phi232.1                      ['$phi232.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 230                                 []
label 240:
    $242return_value.1 = cast(value=out0)    ['$242return_value.1', 'out0']
    return $242return_value.1                ['$242return_value.1']

2024-07-15 06:11:37,989 DEBUG:==== SSA block analysis pass on 0
2024-07-15 06:11:37,989 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B6965950>
2024-07-15 06:11:37,989 DEBUG:on stmt: x = arg(0, name=x)
2024-07-15 06:11:37,989 DEBUG:on stmt: full_shape0 = getattr(value=x, attr=shape)
2024-07-15 06:11:37,989 DEBUG:on stmt: $18load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:37,989 DEBUG:on stmt: $30load_method.4.1 = getattr(value=$18load_global.2.1, attr=empty)
2024-07-15 06:11:37,989 DEBUG:on stmt: $54load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:37,989 DEBUG:on stmt: $66load_attr.7.1 = getattr(value=$54load_global.6.1, attr=bool_)
2024-07-15 06:11:37,990 DEBUG:on stmt: out0 = call $30load_method.4.1(full_shape0, func=$30load_method.4.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:37,990 DEBUG:on stmt: $const94.9.1 = const(int, 0)
2024-07-15 06:11:37,990 DEBUG:on stmt: $const98.11.1 = const(NoneType, None)
2024-07-15 06:11:37,990 DEBUG:on stmt: $const100.12.1 = const(int, 1)
2024-07-15 06:11:37,990 DEBUG:on stmt: $102build_slice.13.1 = global(slice: <class 'slice'>)
2024-07-15 06:11:37,990 DEBUG:on stmt: $102build_slice.14.1 = call $102build_slice.13.1($const98.11.1, $const100.12.1, func=$102build_slice.13.1, args=(Var($const98.11.1, <string>:4), Var($const100.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:37,990 DEBUG:on stmt: out0[$102build_slice.14.1] = $const94.9.1
2024-07-15 06:11:37,990 DEBUG:on stmt: $const108.15.1 = const(int, 0)
2024-07-15 06:11:37,990 DEBUG:on stmt: $const112.17.1 = const(int, -1)
2024-07-15 06:11:37,990 DEBUG:on stmt: $const114.18.1 = const(NoneType, None)
2024-07-15 06:11:37,990 DEBUG:on stmt: $116build_slice.19.1 = global(slice: <class 'slice'>)
2024-07-15 06:11:37,990 DEBUG:on stmt: $116build_slice.20.1 = call $116build_slice.19.1($const112.17.1, $const114.18.1, func=$116build_slice.19.1, args=(Var($const112.17.1, <string>:5), Var($const114.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:37,990 DEBUG:on stmt: out0[$116build_slice.20.1] = $const108.15.1
2024-07-15 06:11:37,990 DEBUG:on stmt: $122load_global.21.1 = global(range: <class 'range'>)
2024-07-15 06:11:37,990 DEBUG:on stmt: $134load_global.23.1 = global(min: <built-in function min>)
2024-07-15 06:11:37,990 DEBUG:on stmt: $const146.25.1 = const(int, 0)
2024-07-15 06:11:37,990 DEBUG:on stmt: $const148.26.1 = const(int, -1)
2024-07-15 06:11:37,990 DEBUG:on stmt: $154call.27.1 = call $134load_global.23.1($const146.25.1, $const148.26.1, func=$134load_global.23.1, args=[Var($const146.25.1, <string>:6), Var($const148.26.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:37,990 DEBUG:on stmt: $164unary_negative.28.1 = unary(fn=<built-in function neg>, value=$154call.27.1)
2024-07-15 06:11:37,990 DEBUG:on stmt: $const168.30.1 = const(int, 0)
2024-07-15 06:11:37,990 DEBUG:on stmt: $170binary_subscr.31.1 = getitem(value=full_shape0, index=$const168.30.1, fn=<built-in function getitem>)
2024-07-15 06:11:37,990 DEBUG:on stmt: $180load_global.32.1 = global(max: <built-in function max>)
2024-07-15 06:11:37,990 DEBUG:on stmt: $const192.34.1 = const(int, 0)
2024-07-15 06:11:37,990 DEBUG:on stmt: $const194.35.1 = const(int, 1)
2024-07-15 06:11:37,990 DEBUG:on stmt: $200call.36.1 = call $180load_global.32.1($const192.34.1, $const194.35.1, func=$180load_global.32.1, args=[Var($const192.34.1, <string>:6), Var($const194.35.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:37,990 DEBUG:on stmt: $binop_sub210.37.1 = $170binary_subscr.31.1 - $200call.36.1
2024-07-15 06:11:37,990 DEBUG:on stmt: $218call.38.1 = call $122load_global.21.1($164unary_negative.28.1, $binop_sub210.37.1, func=$122load_global.21.1, args=[Var($164unary_negative.28.1, <string>:6), Var($binop_sub210.37.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:37,990 DEBUG:on stmt: $228get_iter.39.1 = getiter(value=$218call.38.1)
2024-07-15 06:11:37,990 DEBUG:on stmt: $phi230.0.1 = $228get_iter.39.1
2024-07-15 06:11:37,991 DEBUG:on stmt: jump 230
2024-07-15 06:11:37,991 DEBUG:==== SSA block analysis pass on 230
2024-07-15 06:11:37,991 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B6965950>
2024-07-15 06:11:37,991 DEBUG:on stmt: $230for_iter.1.1 = iternext(value=$phi230.0.1)
2024-07-15 06:11:37,991 DEBUG:on stmt: $230for_iter.2.1 = pair_first(value=$230for_iter.1.1)
2024-07-15 06:11:37,991 DEBUG:on stmt: $230for_iter.3.1 = pair_second(value=$230for_iter.1.1)
2024-07-15 06:11:37,991 DEBUG:on stmt: $phi232.1.1 = $230for_iter.2.1
2024-07-15 06:11:37,991 DEBUG:on stmt: branch $230for_iter.3.1, 232, 242
2024-07-15 06:11:37,991 DEBUG:==== SSA block analysis pass on 232
2024-07-15 06:11:37,991 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B6965950>
2024-07-15 06:11:37,991 DEBUG:on stmt: index00 = $phi232.1.1
2024-07-15 06:11:37,991 DEBUG:on stmt: jump 240
2024-07-15 06:11:37,991 DEBUG:==== SSA block analysis pass on 242
2024-07-15 06:11:37,991 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B6965950>
2024-07-15 06:11:37,991 DEBUG:on stmt: $242return_value.1.1 = cast(value=out0)
2024-07-15 06:11:37,991 DEBUG:on stmt: return $242return_value.1.1
2024-07-15 06:11:37,991 DEBUG:==== SSA block analysis pass on 240
2024-07-15 06:11:37,991 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B6965950>
2024-07-15 06:11:37,991 DEBUG:on stmt: $const6.1 = const(int, 0)
2024-07-15 06:11:37,991 DEBUG:on stmt: stencil_index = $const6.1 + index00
2024-07-15 06:11:37,991 DEBUG:on stmt: $8binary_subscr.2 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-07-15 06:11:37,991 DEBUG:on stmt: $const20.4 = const(int, -1)
2024-07-15 06:11:37,991 DEBUG:on stmt: stencil_index.1 = $const20.4 + index00
2024-07-15 06:11:37,991 DEBUG:on stmt: $22binary_subscr.5 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2024-07-15 06:11:37,991 DEBUG:on stmt: $32compare_op.6 = $8binary_subscr.2 > $22binary_subscr.5
2024-07-15 06:11:37,991 DEBUG:on stmt: $const40.8 = const(int, 0)
2024-07-15 06:11:37,991 DEBUG:on stmt: stencil_index.2 = $const40.8 + index00
2024-07-15 06:11:37,991 DEBUG:on stmt: $42binary_subscr.9 = getitem(value=x, index=stencil_index.2, fn=<built-in function getitem>)
2024-07-15 06:11:37,991 DEBUG:on stmt: $const54.11 = const(int, 1)
2024-07-15 06:11:37,991 DEBUG:on stmt: stencil_index.3 = $const54.11 + index00
2024-07-15 06:11:37,991 DEBUG:on stmt: $56binary_subscr.12 = getitem(value=x, index=stencil_index.3, fn=<built-in function getitem>)
2024-07-15 06:11:37,991 DEBUG:on stmt: $66compare_op.13 = $42binary_subscr.9 >= $56binary_subscr.12
2024-07-15 06:11:37,991 DEBUG:on stmt: $binop_and_72.14 = $32compare_op.6 & $66compare_op.13
2024-07-15 06:11:37,992 DEBUG:on stmt: $76return_value.15 = cast(value=$binop_and_72.14)
2024-07-15 06:11:37,992 DEBUG:on stmt: out0[index00] = $76return_value.15
2024-07-15 06:11:37,992 DEBUG:on stmt: jump 241
2024-07-15 06:11:37,992 DEBUG:==== SSA block analysis pass on 241
2024-07-15 06:11:37,992 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B6965950>
2024-07-15 06:11:37,992 DEBUG:on stmt: jump 230
2024-07-15 06:11:37,993 DEBUG:defs defaultdict(<class 'list'>,
            {'$102build_slice.13.1': [(<numba.core.ir.Assign object at 0x00000221B697CC50>,
                                       0)],
             '$102build_slice.14.1': [(<numba.core.ir.Assign object at 0x00000221B697EA10>,
                                       0)],
             '$116build_slice.19.1': [(<numba.core.ir.Assign object at 0x00000221B697DD50>,
                                       0)],
             '$116build_slice.20.1': [(<numba.core.ir.Assign object at 0x00000221B697DC10>,
                                       0)],
             '$122load_global.21.1': [(<numba.core.ir.Assign object at 0x00000221B697D6D0>,
                                       0)],
             '$134load_global.23.1': [(<numba.core.ir.Assign object at 0x00000221B697D4D0>,
                                       0)],
             '$154call.27.1': [(<numba.core.ir.Assign object at 0x00000221B697E050>,
                                0)],
             '$164unary_negative.28.1': [(<numba.core.ir.Assign object at 0x00000221B697CA10>,
                                          0)],
             '$170binary_subscr.31.1': [(<numba.core.ir.Assign object at 0x00000221B697C7D0>,
                                         0)],
             '$180load_global.32.1': [(<numba.core.ir.Assign object at 0x00000221B697C110>,
                                       0)],
             '$18load_global.2.1': [(<numba.core.ir.Assign object at 0x00000221B697C650>,
                                     0)],
             '$200call.36.1': [(<numba.core.ir.Assign object at 0x00000221B68FEA10>,
                                0)],
             '$218call.38.1': [(<numba.core.ir.Assign object at 0x00000221B6967F50>,
                                0)],
             '$228get_iter.39.1': [(<numba.core.ir.Assign object at 0x00000221B6967C90>,
                                    0)],
             '$22binary_subscr.5': [(<numba.core.ir.Assign object at 0x00000221B6981C90>,
                                     240)],
             '$230for_iter.1.1': [(<numba.core.ir.Assign object at 0x00000221B69677D0>,
                                   230)],
             '$230for_iter.2.1': [(<numba.core.ir.Assign object at 0x00000221B6967950>,
                                   230)],
             '$230for_iter.3.1': [(<numba.core.ir.Assign object at 0x00000221B6967710>,
                                   230)],
             '$242return_value.1.1': [(<numba.core.ir.Assign object at 0x00000221B6966910>,
                                       242)],
             '$30load_method.4.1': [(<numba.core.ir.Assign object at 0x00000221B697D950>,
                                     0)],
             '$32compare_op.6': [(<numba.core.ir.Assign object at 0x00000221B6A1E210>,
                                  240)],
             '$42binary_subscr.9': [(<numba.core.ir.Assign object at 0x00000221B69811D0>,
                                     240)],
             '$54load_global.6.1': [(<numba.core.ir.Assign object at 0x00000221B697FBD0>,
                                     0)],
             '$56binary_subscr.12': [(<numba.core.ir.Assign object at 0x00000221B6981290>,
                                      240)],
             '$66compare_op.13': [(<numba.core.ir.Assign object at 0x00000221B6994910>,
                                   240)],
             '$66load_attr.7.1': [(<numba.core.ir.Assign object at 0x00000221B697F910>,
                                   0)],
             '$76return_value.15': [(<numba.core.ir.Assign object at 0x00000221B6983290>,
                                     240)],
             '$8binary_subscr.2': [(<numba.core.ir.Assign object at 0x00000221B6982CD0>,
                                    240)],
             '$binop_and_72.14': [(<numba.core.ir.Assign object at 0x00000221B6983E10>,
                                   240)],
             '$binop_sub210.37.1': [(<numba.core.ir.Assign object at 0x00000221B6966B50>,
                                     0)],
             '$const100.12.1': [(<numba.core.ir.Assign object at 0x00000221B697CB10>,
                                 0)],
             '$const108.15.1': [(<numba.core.ir.Assign object at 0x00000221B697E010>,
                                 0)],
             '$const112.17.1': [(<numba.core.ir.Assign object at 0x00000221B697E0D0>,
                                 0)],
             '$const114.18.1': [(<numba.core.ir.Assign object at 0x00000221B697DF10>,
                                 0)],
             '$const146.25.1': [(<numba.core.ir.Assign object at 0x00000221B697D150>,
                                 0)],
             '$const148.26.1': [(<numba.core.ir.Assign object at 0x00000221B697ED50>,
                                 0)],
             '$const168.30.1': [(<numba.core.ir.Assign object at 0x00000221B697CE90>,
                                 0)],
             '$const192.34.1': [(<numba.core.ir.Assign object at 0x00000221B697C3D0>,
                                 0)],
             '$const194.35.1': [(<numba.core.ir.Assign object at 0x00000221B683B710>,
                                 0)],
             '$const20.4': [(<numba.core.ir.Assign object at 0x00000221B6A1D850>,
                             240)],
             '$const40.8': [(<numba.core.ir.Assign object at 0x00000221B6A215D0>,
                             240)],
             '$const54.11': [(<numba.core.ir.Assign object at 0x00000221B69FF990>,
                              240)],
             '$const6.1': [(<numba.core.ir.Assign object at 0x00000221B6A1D3D0>,
                            240)],
             '$const94.9.1': [(<numba.core.ir.Assign object at 0x00000221B697F290>,
                               0)],
             '$const98.11.1': [(<numba.core.ir.Assign object at 0x00000221B697EE90>,
                                0)],
             '$phi230.0.1': [(<numba.core.ir.Assign object at 0x00000221B698CFD0>,
                              0)],
             '$phi232.1.1': [(<numba.core.ir.Assign object at 0x00000221B6967750>,
                              230)],
             'full_shape0': [(<numba.core.ir.Assign object at 0x00000221B698D550>,
                              0)],
             'index00': [(<numba.core.ir.Assign object at 0x00000221B6967450>,
                          232)],
             'out0': [(<numba.core.ir.Assign object at 0x00000221B697F7D0>, 0)],
             'stencil_index': [(<numba.core.ir.Assign object at 0x00000221B6982C10>,
                                240)],
             'stencil_index.1': [(<numba.core.ir.Assign object at 0x00000221B69823D0>,
                                  240)],
             'stencil_index.2': [(<numba.core.ir.Assign object at 0x00000221B6981750>,
                                  240)],
             'stencil_index.3': [(<numba.core.ir.Assign object at 0x00000221B6981110>,
                                  240)],
             'x': [(<numba.core.ir.Assign object at 0x00000221B698F1D0>, 0)]})
2024-07-15 06:11:37,993 DEBUG:SSA violators <numba.core.utils.OrderedSet object at 0x00000221B6971490>
2024-07-15 06:11:38,320 DEBUG:bytecode dump:
>          0	NOP(arg=None, lineno=1051)
           2	RESUME(arg=0, lineno=1051)
           4	LOAD_GLOBAL(arg=1, lineno=1065)
          16	LOAD_FAST(arg=0, lineno=1065)
          18	PRECALL(arg=1, lineno=1065)
          22	CALL(arg=1, lineno=1065)
          32	LOAD_FAST(arg=1, lineno=1065)
          34	LOAD_CONST(arg=1, lineno=1065)
          36	LOAD_CONST(arg=1, lineno=1065)
          38	BUILD_SLICE(arg=2, lineno=1065)
          40	STORE_SUBSCR(arg=None, lineno=1065)
          44	LOAD_CONST(arg=1, lineno=1065)
          46	RETURN_VALUE(arg=None, lineno=1065)
2024-07-15 06:11:38,320 DEBUG:pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-15 06:11:38,320 DEBUG:stack: []
2024-07-15 06:11:38,320 DEBUG:state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-15 06:11:38,320 DEBUG:dispatch pc=0, inst=NOP(arg=None, lineno=1051)
2024-07-15 06:11:38,320 DEBUG:stack []
2024-07-15 06:11:38,320 DEBUG:dispatch pc=2, inst=RESUME(arg=0, lineno=1051)
2024-07-15 06:11:38,320 DEBUG:stack []
2024-07-15 06:11:38,320 DEBUG:dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=1065)
2024-07-15 06:11:38,320 DEBUG:stack []
2024-07-15 06:11:38,320 DEBUG:dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=1065)
2024-07-15 06:11:38,320 DEBUG:stack ['$null$4.1', '$4load_global.0']
2024-07-15 06:11:38,320 DEBUG:dispatch pc=18, inst=PRECALL(arg=1, lineno=1065)
2024-07-15 06:11:38,320 DEBUG:stack ['$null$4.1', '$4load_global.0', '$x16.2']
2024-07-15 06:11:38,320 DEBUG:dispatch pc=22, inst=CALL(arg=1, lineno=1065)
2024-07-15 06:11:38,320 DEBUG:stack ['$null$4.1', '$4load_global.0', '$x16.2']
2024-07-15 06:11:38,320 DEBUG:dispatch pc=32, inst=LOAD_FAST(arg=1, lineno=1065)
2024-07-15 06:11:38,320 DEBUG:stack ['$22call.3']
2024-07-15 06:11:38,320 DEBUG:dispatch pc=34, inst=LOAD_CONST(arg=1, lineno=1065)
2024-07-15 06:11:38,321 DEBUG:stack ['$22call.3', '$y32.4']
2024-07-15 06:11:38,321 DEBUG:dispatch pc=36, inst=LOAD_CONST(arg=1, lineno=1065)
2024-07-15 06:11:38,321 DEBUG:stack ['$22call.3', '$y32.4', '$const34.5']
2024-07-15 06:11:38,321 DEBUG:dispatch pc=38, inst=BUILD_SLICE(arg=2, lineno=1065)
2024-07-15 06:11:38,321 DEBUG:stack ['$22call.3', '$y32.4', '$const34.5', '$const36.6']
2024-07-15 06:11:38,321 DEBUG:dispatch pc=40, inst=STORE_SUBSCR(arg=None, lineno=1065)
2024-07-15 06:11:38,321 DEBUG:stack ['$22call.3', '$y32.4', '$38build_slice.8']
2024-07-15 06:11:38,321 DEBUG:dispatch pc=44, inst=LOAD_CONST(arg=1, lineno=1065)
2024-07-15 06:11:38,321 DEBUG:stack []
2024-07-15 06:11:38,321 DEBUG:dispatch pc=46, inst=RETURN_VALUE(arg=None, lineno=1065)
2024-07-15 06:11:38,321 DEBUG:stack ['$const44.9']
2024-07-15 06:11:38,321 DEBUG:end state. edges=[]
2024-07-15 06:11:38,321 DEBUG:-------------------------Prune PHIs-------------------------
2024-07-15 06:11:38,321 DEBUG:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-07-15 06:11:38,321 DEBUG:defmap: {}
2024-07-15 06:11:38,321 DEBUG:phismap: defaultdict(<class 'set'>, {})
2024-07-15 06:11:38,321 DEBUG:changing phismap: defaultdict(<class 'set'>, {})
2024-07-15 06:11:38,321 DEBUG:keep phismap: {}
2024-07-15 06:11:38,321 DEBUG:new_out: defaultdict(<class 'dict'>, {})
2024-07-15 06:11:38,321 DEBUG:----------------------DONE Prune PHIs-----------------------
2024-07-15 06:11:38,321 DEBUG:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (6, {}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$x16.2'}), (18, {}), (20, {}), (22, {'func': '$4load_global.0', 'args': ['$x16.2'], 'kw_names': None, 'res': '$22call.3'}), (24, {}), (26, {}), (28, {}), (30, {}), (32, {'res': '$y32.4'}), (34, {'res': '$const34.5'}), (36, {'res': '$const36.6'}), (38, {'start': '$const34.5', 'stop': '$const36.6', 'step': None, 'res': '$38build_slice.8', 'slicevar': '$38build_slice.7'}), (40, {'target': '$y32.4', 'index': '$38build_slice.8', 'value': '$22call.3'}), (42, {}), (44, {'res': '$const44.9'}), (46, {'retval': '$const44.9', 'castval': '$46return_value.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-15 06:11:38,322 DEBUG:label 0:
    x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    $4load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x00000221B6075290>) ['$4load_global.0']
    $22call.3 = call $4load_global.0(x, func=$4load_global.0, args=[Var(x, utils.py:1051)], kws=(), vararg=None, varkwarg=None, target=None) ['$22call.3', '$4load_global.0', 'x']
    $const34.5 = const(NoneType, None)       ['$const34.5']
    $const36.6 = const(NoneType, None)       ['$const36.6']
    $38build_slice.7 = global(slice: <class 'slice'>) ['$38build_slice.7']
    $38build_slice.8 = call $38build_slice.7($const34.5, $const36.6, func=$38build_slice.7, args=(Var($const34.5, utils.py:1065), Var($const36.6, utils.py:1065)), kws=(), vararg=None, varkwarg=None, target=None) ['$38build_slice.7', '$38build_slice.8', '$const34.5', '$const36.6']
    y[$38build_slice.8] = $22call.3          ['$22call.3', '$38build_slice.8', 'y']
    $const44.9 = const(NoneType, None)       ['$const44.9']
    $46return_value.10 = cast(value=$const44.9) ['$46return_value.10', '$const44.9']
    return $46return_value.10                ['$46return_value.10']

2024-07-15 06:11:38,328 DEBUG:==== SSA block analysis pass on 0
2024-07-15 06:11:38,328 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5FA4450>
2024-07-15 06:11:38,328 DEBUG:on stmt: x = arg(0, name=x)
2024-07-15 06:11:38,328 DEBUG:on stmt: y = arg(1, name=y)
2024-07-15 06:11:38,328 DEBUG:on stmt: $4load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x00000221B6075290>)
2024-07-15 06:11:38,328 DEBUG:on stmt: $22call.3 = call $4load_global.0(x, func=$4load_global.0, args=[Var(x, utils.py:1051)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:38,328 DEBUG:on stmt: $const34.5 = const(NoneType, None)
2024-07-15 06:11:38,329 DEBUG:on stmt: $const36.6 = const(NoneType, None)
2024-07-15 06:11:38,329 DEBUG:on stmt: $38build_slice.7 = global(slice: <class 'slice'>)
2024-07-15 06:11:38,329 DEBUG:on stmt: $38build_slice.8 = call $38build_slice.7($const34.5, $const36.6, func=$38build_slice.7, args=(Var($const34.5, utils.py:1065), Var($const36.6, utils.py:1065)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:38,329 DEBUG:on stmt: y[slice(None, None, None)] = $22call.3
2024-07-15 06:11:38,329 DEBUG:on stmt: $const44.9 = const(NoneType, None)
2024-07-15 06:11:38,329 DEBUG:on stmt: $46return_value.10 = cast(value=$const44.9)
2024-07-15 06:11:38,329 DEBUG:on stmt: return $46return_value.10
2024-07-15 06:11:38,331 DEBUG:defs defaultdict(<class 'list'>,
            {'$22call.3': [(<numba.core.ir.Assign object at 0x00000221B600C690>,
                            0)],
             '$38build_slice.7': [(<numba.core.ir.Assign object at 0x00000221B600E950>,
                                   0)],
             '$38build_slice.8': [(<numba.core.ir.Assign object at 0x00000221B600F790>,
                                   0)],
             '$46return_value.10': [(<numba.core.ir.Assign object at 0x00000221B600C350>,
                                     0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x00000221B600D4D0>,
                                  0)],
             '$const34.5': [(<numba.core.ir.Assign object at 0x00000221B600CE50>,
                             0)],
             '$const36.6': [(<numba.core.ir.Assign object at 0x00000221B600FA90>,
                             0)],
             '$const44.9': [(<numba.core.ir.Assign object at 0x00000221B600D290>,
                             0)],
             'x': [(<numba.core.ir.Assign object at 0x00000221B600E690>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x00000221B600F850>, 0)]})
2024-07-15 06:11:38,331 DEBUG:SSA violators <numba.core.utils.OrderedSet object at 0x00000221B600C450>
2024-07-15 06:11:38,349 DEBUG:bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	RESUME(arg=0, lineno=1)
           4	LOAD_FAST(arg=0, lineno=2)
           6	LOAD_ATTR(arg=0, lineno=2)
          16	STORE_FAST(arg=1, lineno=2)
          18	LOAD_GLOBAL(arg=2, lineno=3)
          30	LOAD_METHOD(arg=2, lineno=3)
          52	LOAD_FAST(arg=1, lineno=3)
          54	LOAD_GLOBAL(arg=2, lineno=3)
          66	LOAD_ATTR(arg=3, lineno=3)
          76	KW_NAMES(arg=1, lineno=3)
          78	PRECALL(arg=2, lineno=3)
          82	CALL(arg=2, lineno=3)
          92	STORE_FAST(arg=2, lineno=3)
          94	LOAD_CONST(arg=2, lineno=4)
          96	LOAD_FAST(arg=2, lineno=4)
          98	LOAD_CONST(arg=0, lineno=4)
         100	LOAD_CONST(arg=3, lineno=4)
         102	BUILD_SLICE(arg=2, lineno=4)
         104	STORE_SUBSCR(arg=None, lineno=4)
         108	LOAD_CONST(arg=2, lineno=5)
         110	LOAD_FAST(arg=2, lineno=5)
         112	LOAD_CONST(arg=4, lineno=5)
         114	LOAD_CONST(arg=0, lineno=5)
         116	BUILD_SLICE(arg=2, lineno=5)
         118	STORE_SUBSCR(arg=None, lineno=5)
         122	LOAD_GLOBAL(arg=9, lineno=6)
         134	LOAD_GLOBAL(arg=11, lineno=6)
         146	LOAD_CONST(arg=2, lineno=6)
         148	LOAD_CONST(arg=4, lineno=6)
         150	PRECALL(arg=2, lineno=6)
         154	CALL(arg=2, lineno=6)
         164	UNARY_NEGATIVE(arg=None, lineno=6)
         166	LOAD_FAST(arg=1, lineno=6)
         168	LOAD_CONST(arg=2, lineno=6)
         170	BINARY_SUBSCR(arg=None, lineno=6)
         180	LOAD_GLOBAL(arg=13, lineno=6)
         192	LOAD_CONST(arg=2, lineno=6)
         194	LOAD_CONST(arg=3, lineno=6)
         196	PRECALL(arg=2, lineno=6)
         200	CALL(arg=2, lineno=6)
         210	BINARY_OP(arg=10, lineno=6)
         214	PRECALL(arg=2, lineno=6)
         218	CALL(arg=2, lineno=6)
         228	GET_ITER(arg=None, lineno=6)
>        230	FOR_ITER(arg=4, lineno=6)
         232	STORE_FAST(arg=3, lineno=6)
         234	LOAD_CONST(arg=2, lineno=7)
         236	STORE_FAST(arg=4, lineno=7)
         238	JUMP_BACKWARD(arg=5, lineno=7)
>        240	LOAD_FAST(arg=2, lineno=8)
         242	RETURN_VALUE(arg=None, lineno=8)
2024-07-15 06:11:38,349 DEBUG:pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-15 06:11:38,349 DEBUG:stack: []
2024-07-15 06:11:38,349 DEBUG:state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-15 06:11:38,349 DEBUG:dispatch pc=0, inst=NOP(arg=None, lineno=1)
2024-07-15 06:11:38,349 DEBUG:stack []
2024-07-15 06:11:38,349 DEBUG:dispatch pc=2, inst=RESUME(arg=0, lineno=1)
2024-07-15 06:11:38,349 DEBUG:stack []
2024-07-15 06:11:38,349 DEBUG:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2)
2024-07-15 06:11:38,349 DEBUG:stack []
2024-07-15 06:11:38,349 DEBUG:dispatch pc=6, inst=LOAD_ATTR(arg=0, lineno=2)
2024-07-15 06:11:38,349 DEBUG:stack ['$x4.0']
2024-07-15 06:11:38,349 DEBUG:dispatch pc=16, inst=STORE_FAST(arg=1, lineno=2)
2024-07-15 06:11:38,349 DEBUG:stack ['$6load_attr.1']
2024-07-15 06:11:38,349 DEBUG:dispatch pc=18, inst=LOAD_GLOBAL(arg=2, lineno=3)
2024-07-15 06:11:38,349 DEBUG:stack []
2024-07-15 06:11:38,350 DEBUG:dispatch pc=30, inst=LOAD_METHOD(arg=2, lineno=3)
2024-07-15 06:11:38,350 DEBUG:stack ['$18load_global.2']
2024-07-15 06:11:38,350 DEBUG:dispatch pc=52, inst=LOAD_FAST(arg=1, lineno=3)
2024-07-15 06:11:38,350 DEBUG:stack ['$null$30.3', '$30load_method.4']
2024-07-15 06:11:38,350 DEBUG:dispatch pc=54, inst=LOAD_GLOBAL(arg=2, lineno=3)
2024-07-15 06:11:38,350 DEBUG:stack ['$null$30.3', '$30load_method.4', '$full_shape052.5']
2024-07-15 06:11:38,350 DEBUG:dispatch pc=66, inst=LOAD_ATTR(arg=3, lineno=3)
2024-07-15 06:11:38,350 DEBUG:stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$54load_global.6']
2024-07-15 06:11:38,350 DEBUG:dispatch pc=76, inst=KW_NAMES(arg=1, lineno=3)
2024-07-15 06:11:38,350 DEBUG:stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
2024-07-15 06:11:38,350 DEBUG:dispatch pc=78, inst=PRECALL(arg=2, lineno=3)
2024-07-15 06:11:38,350 DEBUG:stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
2024-07-15 06:11:38,350 DEBUG:dispatch pc=82, inst=CALL(arg=2, lineno=3)
2024-07-15 06:11:38,350 DEBUG:stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
2024-07-15 06:11:38,350 DEBUG:dispatch pc=92, inst=STORE_FAST(arg=2, lineno=3)
2024-07-15 06:11:38,350 DEBUG:stack ['$82call.8']
2024-07-15 06:11:38,350 DEBUG:dispatch pc=94, inst=LOAD_CONST(arg=2, lineno=4)
2024-07-15 06:11:38,350 DEBUG:stack []
2024-07-15 06:11:38,350 DEBUG:dispatch pc=96, inst=LOAD_FAST(arg=2, lineno=4)
2024-07-15 06:11:38,350 DEBUG:stack ['$const94.9']
2024-07-15 06:11:38,350 DEBUG:dispatch pc=98, inst=LOAD_CONST(arg=0, lineno=4)
2024-07-15 06:11:38,350 DEBUG:stack ['$const94.9', '$out096.10']
2024-07-15 06:11:38,350 DEBUG:dispatch pc=100, inst=LOAD_CONST(arg=3, lineno=4)
2024-07-15 06:11:38,350 DEBUG:stack ['$const94.9', '$out096.10', '$const98.11']
2024-07-15 06:11:38,350 DEBUG:dispatch pc=102, inst=BUILD_SLICE(arg=2, lineno=4)
2024-07-15 06:11:38,350 DEBUG:stack ['$const94.9', '$out096.10', '$const98.11', '$const100.12']
2024-07-15 06:11:38,350 DEBUG:dispatch pc=104, inst=STORE_SUBSCR(arg=None, lineno=4)
2024-07-15 06:11:38,350 DEBUG:stack ['$const94.9', '$out096.10', '$102build_slice.14']
2024-07-15 06:11:38,350 DEBUG:dispatch pc=108, inst=LOAD_CONST(arg=2, lineno=5)
2024-07-15 06:11:38,350 DEBUG:stack []
2024-07-15 06:11:38,350 DEBUG:dispatch pc=110, inst=LOAD_FAST(arg=2, lineno=5)
2024-07-15 06:11:38,351 DEBUG:stack ['$const108.15']
2024-07-15 06:11:38,351 DEBUG:dispatch pc=112, inst=LOAD_CONST(arg=4, lineno=5)
2024-07-15 06:11:38,351 DEBUG:stack ['$const108.15', '$out0110.16']
2024-07-15 06:11:38,351 DEBUG:dispatch pc=114, inst=LOAD_CONST(arg=0, lineno=5)
2024-07-15 06:11:38,351 DEBUG:stack ['$const108.15', '$out0110.16', '$const112.17']
2024-07-15 06:11:38,351 DEBUG:dispatch pc=116, inst=BUILD_SLICE(arg=2, lineno=5)
2024-07-15 06:11:38,351 DEBUG:stack ['$const108.15', '$out0110.16', '$const112.17', '$const114.18']
2024-07-15 06:11:38,351 DEBUG:dispatch pc=118, inst=STORE_SUBSCR(arg=None, lineno=5)
2024-07-15 06:11:38,351 DEBUG:stack ['$const108.15', '$out0110.16', '$116build_slice.20']
2024-07-15 06:11:38,351 DEBUG:dispatch pc=122, inst=LOAD_GLOBAL(arg=9, lineno=6)
2024-07-15 06:11:38,351 DEBUG:stack []
2024-07-15 06:11:38,351 DEBUG:dispatch pc=134, inst=LOAD_GLOBAL(arg=11, lineno=6)
2024-07-15 06:11:38,351 DEBUG:stack ['$null$122.22', '$122load_global.21']
2024-07-15 06:11:38,351 DEBUG:dispatch pc=146, inst=LOAD_CONST(arg=2, lineno=6)
2024-07-15 06:11:38,351 DEBUG:stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23']
2024-07-15 06:11:38,351 DEBUG:dispatch pc=148, inst=LOAD_CONST(arg=4, lineno=6)
2024-07-15 06:11:38,351 DEBUG:stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25']
2024-07-15 06:11:38,351 DEBUG:dispatch pc=150, inst=PRECALL(arg=2, lineno=6)
2024-07-15 06:11:38,351 DEBUG:stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25', '$const148.26']
2024-07-15 06:11:38,351 DEBUG:dispatch pc=154, inst=CALL(arg=2, lineno=6)
2024-07-15 06:11:38,351 DEBUG:stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25', '$const148.26']
2024-07-15 06:11:38,351 DEBUG:dispatch pc=164, inst=UNARY_NEGATIVE(arg=None, lineno=6)
2024-07-15 06:11:38,351 DEBUG:stack ['$null$122.22', '$122load_global.21', '$154call.27']
2024-07-15 06:11:38,351 DEBUG:dispatch pc=166, inst=LOAD_FAST(arg=1, lineno=6)
2024-07-15 06:11:38,351 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28']
2024-07-15 06:11:38,351 DEBUG:dispatch pc=168, inst=LOAD_CONST(arg=2, lineno=6)
2024-07-15 06:11:38,351 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$full_shape0166.29']
2024-07-15 06:11:38,351 DEBUG:dispatch pc=170, inst=BINARY_SUBSCR(arg=None, lineno=6)
2024-07-15 06:11:38,351 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$full_shape0166.29', '$const168.30']
2024-07-15 06:11:38,351 DEBUG:dispatch pc=180, inst=LOAD_GLOBAL(arg=13, lineno=6)
2024-07-15 06:11:38,351 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31']
2024-07-15 06:11:38,351 DEBUG:dispatch pc=192, inst=LOAD_CONST(arg=2, lineno=6)
2024-07-15 06:11:38,351 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32']
2024-07-15 06:11:38,351 DEBUG:dispatch pc=194, inst=LOAD_CONST(arg=3, lineno=6)
2024-07-15 06:11:38,351 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34']
2024-07-15 06:11:38,351 DEBUG:dispatch pc=196, inst=PRECALL(arg=2, lineno=6)
2024-07-15 06:11:38,351 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34', '$const194.35']
2024-07-15 06:11:38,351 DEBUG:dispatch pc=200, inst=CALL(arg=2, lineno=6)
2024-07-15 06:11:38,351 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34', '$const194.35']
2024-07-15 06:11:38,351 DEBUG:dispatch pc=210, inst=BINARY_OP(arg=10, lineno=6)
2024-07-15 06:11:38,351 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$200call.36']
2024-07-15 06:11:38,351 DEBUG:dispatch pc=214, inst=PRECALL(arg=2, lineno=6)
2024-07-15 06:11:38,351 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$binop_sub210.37']
2024-07-15 06:11:38,351 DEBUG:dispatch pc=218, inst=CALL(arg=2, lineno=6)
2024-07-15 06:11:38,351 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$binop_sub210.37']
2024-07-15 06:11:38,351 DEBUG:dispatch pc=228, inst=GET_ITER(arg=None, lineno=6)
2024-07-15 06:11:38,351 DEBUG:stack ['$218call.38']
2024-07-15 06:11:38,351 DEBUG:end state. edges=[Edge(pc=230, stack=('$228get_iter.39',), blockstack=(), npush=0)]
2024-07-15 06:11:38,353 DEBUG:pending: deque([State(pc_initial=230 nstack_initial=1)])
2024-07-15 06:11:38,353 DEBUG:stack: ['$phi230.0']
2024-07-15 06:11:38,353 DEBUG:state.pc_initial: State(pc_initial=230 nstack_initial=1)
2024-07-15 06:11:38,353 DEBUG:dispatch pc=230, inst=FOR_ITER(arg=4, lineno=6)
2024-07-15 06:11:38,353 DEBUG:stack ['$phi230.0']
2024-07-15 06:11:38,353 DEBUG:end state. edges=[Edge(pc=240, stack=(), blockstack=(), npush=0), Edge(pc=232, stack=('$phi230.0', '$230for_iter.2'), blockstack=(), npush=0)]
2024-07-15 06:11:38,353 DEBUG:pending: deque([State(pc_initial=240 nstack_initial=0), State(pc_initial=232 nstack_initial=2)])
2024-07-15 06:11:38,353 DEBUG:stack: []
2024-07-15 06:11:38,353 DEBUG:state.pc_initial: State(pc_initial=240 nstack_initial=0)
2024-07-15 06:11:38,353 DEBUG:dispatch pc=240, inst=LOAD_FAST(arg=2, lineno=8)
2024-07-15 06:11:38,353 DEBUG:stack []
2024-07-15 06:11:38,353 DEBUG:dispatch pc=242, inst=RETURN_VALUE(arg=None, lineno=8)
2024-07-15 06:11:38,353 DEBUG:stack ['$out0240.0']
2024-07-15 06:11:38,353 DEBUG:end state. edges=[]
2024-07-15 06:11:38,353 DEBUG:pending: deque([State(pc_initial=232 nstack_initial=2)])
2024-07-15 06:11:38,353 DEBUG:stack: ['$phi232.0', '$phi232.1']
2024-07-15 06:11:38,353 DEBUG:state.pc_initial: State(pc_initial=232 nstack_initial=2)
2024-07-15 06:11:38,353 DEBUG:dispatch pc=232, inst=STORE_FAST(arg=3, lineno=6)
2024-07-15 06:11:38,353 DEBUG:stack ['$phi232.0', '$phi232.1']
2024-07-15 06:11:38,353 DEBUG:dispatch pc=234, inst=LOAD_CONST(arg=2, lineno=7)
2024-07-15 06:11:38,353 DEBUG:stack ['$phi232.0']
2024-07-15 06:11:38,353 DEBUG:dispatch pc=236, inst=STORE_FAST(arg=4, lineno=7)
2024-07-15 06:11:38,353 DEBUG:stack ['$phi232.0', '$const234.2']
2024-07-15 06:11:38,353 DEBUG:dispatch pc=238, inst=JUMP_BACKWARD(arg=5, lineno=7)
2024-07-15 06:11:38,353 DEBUG:stack ['$phi232.0']
2024-07-15 06:11:38,353 DEBUG:end state. edges=[Edge(pc=230, stack=('$phi232.0',), blockstack=(), npush=0)]
2024-07-15 06:11:38,353 DEBUG:pending: deque([State(pc_initial=230 nstack_initial=1)])
2024-07-15 06:11:38,353 DEBUG:-------------------------Prune PHIs-------------------------
2024-07-15 06:11:38,353 DEBUG:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=230 nstack_initial=1): {'$phi230.0'},
             State(pc_initial=232 nstack_initial=2): {'$phi232.1'},
             State(pc_initial=240 nstack_initial=0): set()})
2024-07-15 06:11:38,353 DEBUG:defmap: {'$phi230.0': State(pc_initial=0 nstack_initial=0),
 '$phi232.1': State(pc_initial=230 nstack_initial=1)}
2024-07-15 06:11:38,354 DEBUG:phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi232.0',
                            State(pc_initial=232 nstack_initial=2))},
             '$phi232.0': {('$phi230.0',
                            State(pc_initial=230 nstack_initial=1))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-07-15 06:11:38,354 DEBUG:changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi230.0',
                            State(pc_initial=230 nstack_initial=1))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-07-15 06:11:38,354 DEBUG:changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-07-15 06:11:38,354 DEBUG:changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-07-15 06:11:38,354 DEBUG:keep phismap: {'$phi230.0': {('$228get_iter.39', State(pc_initial=0 nstack_initial=0))},
 '$phi232.1': {('$230for_iter.2', State(pc_initial=230 nstack_initial=1))}}
2024-07-15 06:11:38,354 DEBUG:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi230.0': '$228get_iter.39'},
             State(pc_initial=230 nstack_initial=1): {'$phi232.1': '$230for_iter.2'}})
2024-07-15 06:11:38,354 DEBUG:----------------------DONE Prune PHIs-----------------------
2024-07-15 06:11:38,354 DEBUG:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'item': '$x4.0', 'res': '$6load_attr.1'}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'value': '$6load_attr.1'}), (18, {'idx': 1, 'res': '$18load_global.2'}), (20, {}), (22, {}), (24, {}), (26, {}), (28, {}), (30, {'item': '$18load_global.2', 'res': '$30load_method.4'}), (32, {}), (34, {}), (36, {}), (38, {}), (40, {}), (42, {}), (44, {}), (46, {}), (48, {}), (50, {}), (52, {'res': '$full_shape052.5'}), (54, {'idx': 1, 'res': '$54load_global.6'}), (56, {}), (58, {}), (60, {}), (62, {}), (64, {}), (66, {'item': '$54load_global.6', 'res': '$66load_attr.7'}), (68, {}), (70, {}), (72, {}), (74, {}), (78, {}), (80, {}), (82, {'func': '$30load_method.4', 'args': ['$full_shape052.5', '$66load_attr.7'], 'kw_names': 1, 'res': '$82call.8'}), (84, {}), (86, {}), (88, {}), (90, {}), (92, {'value': '$82call.8'}), (94, {'res': '$const94.9'}), (96, {'res': '$out096.10'}), (98, {'res': '$const98.11'}), (100, {'res': '$const100.12'}), (102, {'start': '$const98.11', 'stop': '$const100.12', 'step': None, 'res': '$102build_slice.14', 'slicevar': '$102build_slice.13'}), (104, {'target': '$out096.10', 'index': '$102build_slice.14', 'value': '$const94.9'}), (106, {}), (108, {'res': '$const108.15'}), (110, {'res': '$out0110.16'}), (112, {'res': '$const112.17'}), (114, {'res': '$const114.18'}), (116, {'start': '$const112.17', 'stop': '$const114.18', 'step': None, 'res': '$116build_slice.20', 'slicevar': '$116build_slice.19'}), (118, {'target': '$out0110.16', 'index': '$116build_slice.20', 'value': '$const108.15'}), (120, {}), (122, {'idx': 4, 'res': '$122load_global.21'}), (124, {}), (126, {}), (128, {}), (130, {}), (132, {}), (134, {'idx': 5, 'res': '$134load_global.23'}), (136, {}), (138, {}), (140, {}), (142, {}), (144, {}), (146, {'res': '$const146.25'}), (148, {'res': '$const148.26'}), (150, {}), (152, {}), (154, {'func': '$134load_global.23', 'args': ['$const146.25', '$const148.26'], 'kw_names': None, 'res': '$154call.27'}), (156, {}), (158, {}), (160, {}), (162, {}), (164, {'value': '$154call.27', 'res': '$164unary_negative.28'}), (166, {'res': '$full_shape0166.29'}), (168, {'res': '$const168.30'}), (170, {'index': '$const168.30', 'target': '$full_shape0166.29', 'res': '$170binary_subscr.31'}), (172, {}), (174, {}), (176, {}), (178, {}), (180, {'idx': 6, 'res': '$180load_global.32'}), (182, {}), (184, {}), (186, {}), (188, {}), (190, {}), (192, {'res': '$const192.34'}), (194, {'res': '$const194.35'}), (196, {}), (198, {}), (200, {'func': '$180load_global.32', 'args': ['$const192.34', '$const194.35'], 'kw_names': None, 'res': '$200call.36'}), (202, {}), (204, {}), (206, {}), (208, {}), (210, {'op': '-', 'lhs': '$170binary_subscr.31', 'rhs': '$200call.36', 'res': '$binop_sub210.37'}), (212, {}), (214, {}), (216, {}), (218, {'func': '$122load_global.21', 'args': ['$164unary_negative.28', '$binop_sub210.37'], 'kw_names': None, 'res': '$218call.38'}), (220, {}), (222, {}), (224, {}), (226, {}), (228, {'value': '$218call.38', 'res': '$228get_iter.39'})), outgoing_phis={'$phi230.0': '$228get_iter.39'}, blockstack=(), active_try_block=None, outgoing_edgepushed={230: ('$228get_iter.39',)})
2024-07-15 06:11:38,354 DEBUG:block_infos State(pc_initial=230 nstack_initial=1):
AdaptBlockInfo(insts=((230, {'iterator': '$phi230.0', 'pair': '$230for_iter.1', 'indval': '$230for_iter.2', 'pred': '$230for_iter.3'}),), outgoing_phis={'$phi232.1': '$230for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={240: (), 232: ('$phi230.0', '$230for_iter.2')})
2024-07-15 06:11:38,355 DEBUG:block_infos State(pc_initial=232 nstack_initial=2):
AdaptBlockInfo(insts=((232, {'value': '$phi232.1'}), (234, {'res': '$const234.2'}), (236, {'value': '$const234.2'}), (238, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={230: ('$phi232.0',)})
2024-07-15 06:11:38,355 DEBUG:block_infos State(pc_initial=240 nstack_initial=0):
AdaptBlockInfo(insts=((240, {'res': '$out0240.0'}), (242, {'retval': '$out0240.0', 'castval': '$242return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-15 06:11:38,356 DEBUG:label 0:
    x = arg(0, name=x)                       ['x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $18load_global.2 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$18load_global.2']
    $30load_method.4 = getattr(value=$18load_global.2, attr=empty) ['$18load_global.2', '$30load_method.4']
    $54load_global.6 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$54load_global.6']
    $66load_attr.7 = getattr(value=$54load_global.6, attr=bool_) ['$54load_global.6', '$66load_attr.7']
    out0 = call $30load_method.4(full_shape0, func=$30load_method.4, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7, <string>:3))], vararg=None, varkwarg=None, target=None) ['$30load_method.4', '$66load_attr.7', 'full_shape0', 'out0']
    $const94.9 = const(int, 0)               ['$const94.9']
    $const98.11 = const(NoneType, None)      ['$const98.11']
    $const100.12 = const(int, 1)             ['$const100.12']
    $102build_slice.13 = global(slice: <class 'slice'>) ['$102build_slice.13']
    $102build_slice.14 = call $102build_slice.13($const98.11, $const100.12, func=$102build_slice.13, args=(Var($const98.11, <string>:4), Var($const100.12, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$102build_slice.13', '$102build_slice.14', '$const100.12', '$const98.11']
    out0[$102build_slice.14] = $const94.9    ['$102build_slice.14', '$const94.9', 'out0']
    $const108.15 = const(int, 0)             ['$const108.15']
    $const112.17 = const(int, -1)            ['$const112.17']
    $const114.18 = const(NoneType, None)     ['$const114.18']
    $116build_slice.19 = global(slice: <class 'slice'>) ['$116build_slice.19']
    $116build_slice.20 = call $116build_slice.19($const112.17, $const114.18, func=$116build_slice.19, args=(Var($const112.17, <string>:5), Var($const114.18, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$116build_slice.19', '$116build_slice.20', '$const112.17', '$const114.18']
    out0[$116build_slice.20] = $const108.15  ['$116build_slice.20', '$const108.15', 'out0']
    $122load_global.21 = global(range: <class 'range'>) ['$122load_global.21']
    $134load_global.23 = global(min: <built-in function min>) ['$134load_global.23']
    $const146.25 = const(int, 0)             ['$const146.25']
    $const148.26 = const(int, -1)            ['$const148.26']
    $154call.27 = call $134load_global.23($const146.25, $const148.26, func=$134load_global.23, args=[Var($const146.25, <string>:6), Var($const148.26, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$134load_global.23', '$154call.27', '$const146.25', '$const148.26']
    $164unary_negative.28 = unary(fn=<built-in function neg>, value=$154call.27) ['$154call.27', '$164unary_negative.28']
    $const168.30 = const(int, 0)             ['$const168.30']
    $170binary_subscr.31 = getitem(value=full_shape0, index=$const168.30, fn=<built-in function getitem>) ['$170binary_subscr.31', '$const168.30', 'full_shape0']
    $180load_global.32 = global(max: <built-in function max>) ['$180load_global.32']
    $const192.34 = const(int, 0)             ['$const192.34']
    $const194.35 = const(int, 1)             ['$const194.35']
    $200call.36 = call $180load_global.32($const192.34, $const194.35, func=$180load_global.32, args=[Var($const192.34, <string>:6), Var($const194.35, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$180load_global.32', '$200call.36', '$const192.34', '$const194.35']
    $binop_sub210.37 = $170binary_subscr.31 - $200call.36 ['$170binary_subscr.31', '$200call.36', '$binop_sub210.37']
    $218call.38 = call $122load_global.21($164unary_negative.28, $binop_sub210.37, func=$122load_global.21, args=[Var($164unary_negative.28, <string>:6), Var($binop_sub210.37, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$122load_global.21', '$164unary_negative.28', '$218call.38', '$binop_sub210.37']
    $228get_iter.39 = getiter(value=$218call.38) ['$218call.38', '$228get_iter.39']
    $phi230.0 = $228get_iter.39              ['$228get_iter.39', '$phi230.0']
    jump 230                                 []
label 230:
    $230for_iter.1 = iternext(value=$phi230.0) ['$230for_iter.1', '$phi230.0']
    $230for_iter.2 = pair_first(value=$230for_iter.1) ['$230for_iter.1', '$230for_iter.2']
    $230for_iter.3 = pair_second(value=$230for_iter.1) ['$230for_iter.1', '$230for_iter.3']
    $phi232.1 = $230for_iter.2               ['$230for_iter.2', '$phi232.1']
    branch $230for_iter.3, 232, 240          ['$230for_iter.3']
label 232:
    index00 = $phi232.1                      ['$phi232.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 230                                 []
label 240:
    $242return_value.1 = cast(value=out0)    ['$242return_value.1', 'out0']
    return $242return_value.1                ['$242return_value.1']

2024-07-15 06:11:38,373 DEBUG:==== SSA block analysis pass on 0
2024-07-15 06:11:38,373 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B682CE10>
2024-07-15 06:11:38,373 DEBUG:on stmt: x = arg(0, name=x)
2024-07-15 06:11:38,373 DEBUG:on stmt: full_shape0 = getattr(value=x, attr=shape)
2024-07-15 06:11:38,373 DEBUG:on stmt: $18load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:38,373 DEBUG:on stmt: $30load_method.4.1 = getattr(value=$18load_global.2.1, attr=empty)
2024-07-15 06:11:38,373 DEBUG:on stmt: $54load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:38,374 DEBUG:on stmt: $66load_attr.7.1 = getattr(value=$54load_global.6.1, attr=bool_)
2024-07-15 06:11:38,374 DEBUG:on stmt: out0 = call $30load_method.4.1(full_shape0, func=$30load_method.4.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:38,374 DEBUG:on stmt: $const94.9.1 = const(int, 0)
2024-07-15 06:11:38,374 DEBUG:on stmt: $const98.11.1 = const(NoneType, None)
2024-07-15 06:11:38,374 DEBUG:on stmt: $const100.12.1 = const(int, 1)
2024-07-15 06:11:38,374 DEBUG:on stmt: $102build_slice.13.1 = global(slice: <class 'slice'>)
2024-07-15 06:11:38,374 DEBUG:on stmt: $102build_slice.14.1 = call $102build_slice.13.1($const98.11.1, $const100.12.1, func=$102build_slice.13.1, args=(Var($const98.11.1, <string>:4), Var($const100.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:38,374 DEBUG:on stmt: out0[$102build_slice.14.1] = $const94.9.1
2024-07-15 06:11:38,374 DEBUG:on stmt: $const108.15.1 = const(int, 0)
2024-07-15 06:11:38,374 DEBUG:on stmt: $const112.17.1 = const(int, -1)
2024-07-15 06:11:38,374 DEBUG:on stmt: $const114.18.1 = const(NoneType, None)
2024-07-15 06:11:38,374 DEBUG:on stmt: $116build_slice.19.1 = global(slice: <class 'slice'>)
2024-07-15 06:11:38,374 DEBUG:on stmt: $116build_slice.20.1 = call $116build_slice.19.1($const112.17.1, $const114.18.1, func=$116build_slice.19.1, args=(Var($const112.17.1, <string>:5), Var($const114.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:38,374 DEBUG:on stmt: out0[$116build_slice.20.1] = $const108.15.1
2024-07-15 06:11:38,374 DEBUG:on stmt: $122load_global.21.1 = global(range: <class 'range'>)
2024-07-15 06:11:38,374 DEBUG:on stmt: $134load_global.23.1 = global(min: <built-in function min>)
2024-07-15 06:11:38,374 DEBUG:on stmt: $const146.25.1 = const(int, 0)
2024-07-15 06:11:38,374 DEBUG:on stmt: $const148.26.1 = const(int, -1)
2024-07-15 06:11:38,374 DEBUG:on stmt: $154call.27.1 = call $134load_global.23.1($const146.25.1, $const148.26.1, func=$134load_global.23.1, args=[Var($const146.25.1, <string>:6), Var($const148.26.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:38,374 DEBUG:on stmt: $164unary_negative.28.1 = unary(fn=<built-in function neg>, value=$154call.27.1)
2024-07-15 06:11:38,374 DEBUG:on stmt: $const168.30.1 = const(int, 0)
2024-07-15 06:11:38,374 DEBUG:on stmt: $170binary_subscr.31.1 = getitem(value=full_shape0, index=$const168.30.1, fn=<built-in function getitem>)
2024-07-15 06:11:38,374 DEBUG:on stmt: $180load_global.32.1 = global(max: <built-in function max>)
2024-07-15 06:11:38,374 DEBUG:on stmt: $const192.34.1 = const(int, 0)
2024-07-15 06:11:38,374 DEBUG:on stmt: $const194.35.1 = const(int, 1)
2024-07-15 06:11:38,374 DEBUG:on stmt: $200call.36.1 = call $180load_global.32.1($const192.34.1, $const194.35.1, func=$180load_global.32.1, args=[Var($const192.34.1, <string>:6), Var($const194.35.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:38,374 DEBUG:on stmt: $binop_sub210.37.1 = $170binary_subscr.31.1 - $200call.36.1
2024-07-15 06:11:38,374 DEBUG:on stmt: $218call.38.1 = call $122load_global.21.1($164unary_negative.28.1, $binop_sub210.37.1, func=$122load_global.21.1, args=[Var($164unary_negative.28.1, <string>:6), Var($binop_sub210.37.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:38,375 DEBUG:on stmt: $228get_iter.39.1 = getiter(value=$218call.38.1)
2024-07-15 06:11:38,375 DEBUG:on stmt: $phi230.0.1 = $228get_iter.39.1
2024-07-15 06:11:38,375 DEBUG:on stmt: jump 230
2024-07-15 06:11:38,375 DEBUG:==== SSA block analysis pass on 230
2024-07-15 06:11:38,375 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B682CE10>
2024-07-15 06:11:38,375 DEBUG:on stmt: $230for_iter.1.1 = iternext(value=$phi230.0.1)
2024-07-15 06:11:38,375 DEBUG:on stmt: $230for_iter.2.1 = pair_first(value=$230for_iter.1.1)
2024-07-15 06:11:38,375 DEBUG:on stmt: $230for_iter.3.1 = pair_second(value=$230for_iter.1.1)
2024-07-15 06:11:38,375 DEBUG:on stmt: $phi232.1.1 = $230for_iter.2.1
2024-07-15 06:11:38,375 DEBUG:on stmt: branch $230for_iter.3.1, 232, 242
2024-07-15 06:11:38,375 DEBUG:==== SSA block analysis pass on 232
2024-07-15 06:11:38,375 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B682CE10>
2024-07-15 06:11:38,375 DEBUG:on stmt: index00 = $phi232.1.1
2024-07-15 06:11:38,375 DEBUG:on stmt: jump 240
2024-07-15 06:11:38,375 DEBUG:==== SSA block analysis pass on 242
2024-07-15 06:11:38,375 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B682CE10>
2024-07-15 06:11:38,375 DEBUG:on stmt: $242return_value.1.1 = cast(value=out0)
2024-07-15 06:11:38,375 DEBUG:on stmt: return $242return_value.1.1
2024-07-15 06:11:38,375 DEBUG:==== SSA block analysis pass on 240
2024-07-15 06:11:38,375 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B682CE10>
2024-07-15 06:11:38,375 DEBUG:on stmt: $const6.1 = const(int, 0)
2024-07-15 06:11:38,375 DEBUG:on stmt: stencil_index = $const6.1 + index00
2024-07-15 06:11:38,375 DEBUG:on stmt: $8binary_subscr.2 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-07-15 06:11:38,375 DEBUG:on stmt: $const20.4 = const(int, -1)
2024-07-15 06:11:38,375 DEBUG:on stmt: stencil_index.1 = $const20.4 + index00
2024-07-15 06:11:38,375 DEBUG:on stmt: $22binary_subscr.5 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2024-07-15 06:11:38,375 DEBUG:on stmt: $32compare_op.6 = $8binary_subscr.2 > $22binary_subscr.5
2024-07-15 06:11:38,375 DEBUG:on stmt: $const40.8 = const(int, 0)
2024-07-15 06:11:38,375 DEBUG:on stmt: stencil_index.2 = $const40.8 + index00
2024-07-15 06:11:38,375 DEBUG:on stmt: $42binary_subscr.9 = getitem(value=x, index=stencil_index.2, fn=<built-in function getitem>)
2024-07-15 06:11:38,375 DEBUG:on stmt: $const54.11 = const(int, 1)
2024-07-15 06:11:38,375 DEBUG:on stmt: stencil_index.3 = $const54.11 + index00
2024-07-15 06:11:38,376 DEBUG:on stmt: $56binary_subscr.12 = getitem(value=x, index=stencil_index.3, fn=<built-in function getitem>)
2024-07-15 06:11:38,376 DEBUG:on stmt: $66compare_op.13 = $42binary_subscr.9 >= $56binary_subscr.12
2024-07-15 06:11:38,376 DEBUG:on stmt: $binop_and_72.14 = $32compare_op.6 & $66compare_op.13
2024-07-15 06:11:38,377 DEBUG:on stmt: $76return_value.15 = cast(value=$binop_and_72.14)
2024-07-15 06:11:38,377 DEBUG:on stmt: out0[index00] = $76return_value.15
2024-07-15 06:11:38,377 DEBUG:on stmt: jump 241
2024-07-15 06:11:38,377 DEBUG:==== SSA block analysis pass on 241
2024-07-15 06:11:38,377 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B682CE10>
2024-07-15 06:11:38,377 DEBUG:on stmt: jump 230
2024-07-15 06:11:38,377 DEBUG:defs defaultdict(<class 'list'>,
            {'$102build_slice.13.1': [(<numba.core.ir.Assign object at 0x00000221B6792E10>,
                                       0)],
             '$102build_slice.14.1': [(<numba.core.ir.Assign object at 0x00000221B67937D0>,
                                       0)],
             '$116build_slice.19.1': [(<numba.core.ir.Assign object at 0x00000221B6790A10>,
                                       0)],
             '$116build_slice.20.1': [(<numba.core.ir.Assign object at 0x00000221B6793E10>,
                                       0)],
             '$122load_global.21.1': [(<numba.core.ir.Assign object at 0x00000221B6790D90>,
                                       0)],
             '$134load_global.23.1': [(<numba.core.ir.Assign object at 0x00000221B6791E90>,
                                       0)],
             '$154call.27.1': [(<numba.core.ir.Assign object at 0x00000221B6790610>,
                                0)],
             '$164unary_negative.28.1': [(<numba.core.ir.Assign object at 0x00000221B6791A10>,
                                          0)],
             '$170binary_subscr.31.1': [(<numba.core.ir.Assign object at 0x00000221B6791690>,
                                         0)],
             '$180load_global.32.1': [(<numba.core.ir.Assign object at 0x00000221B6996890>,
                                       0)],
             '$18load_global.2.1': [(<numba.core.ir.Assign object at 0x00000221B6791950>,
                                     0)],
             '$200call.36.1': [(<numba.core.ir.Assign object at 0x00000221B6996D50>,
                                0)],
             '$218call.38.1': [(<numba.core.ir.Assign object at 0x00000221B6995E10>,
                                0)],
             '$228get_iter.39.1': [(<numba.core.ir.Assign object at 0x00000221B6996CD0>,
                                    0)],
             '$22binary_subscr.5': [(<numba.core.ir.Assign object at 0x00000221B6111A10>,
                                     240)],
             '$230for_iter.1.1': [(<numba.core.ir.Assign object at 0x00000221B6995F50>,
                                   230)],
             '$230for_iter.2.1': [(<numba.core.ir.Assign object at 0x00000221B6995210>,
                                   230)],
             '$230for_iter.3.1': [(<numba.core.ir.Assign object at 0x00000221B6996950>,
                                   230)],
             '$242return_value.1.1': [(<numba.core.ir.Assign object at 0x00000221B6995350>,
                                       242)],
             '$30load_method.4.1': [(<numba.core.ir.Assign object at 0x00000221B6791350>,
                                     0)],
             '$32compare_op.6': [(<numba.core.ir.Assign object at 0x00000221B60235D0>,
                                  240)],
             '$42binary_subscr.9': [(<numba.core.ir.Assign object at 0x00000221B6112310>,
                                     240)],
             '$54load_global.6.1': [(<numba.core.ir.Assign object at 0x00000221B6791DD0>,
                                     0)],
             '$56binary_subscr.12': [(<numba.core.ir.Assign object at 0x00000221B6112A10>,
                                      240)],
             '$66compare_op.13': [(<numba.core.ir.Assign object at 0x00000221B601B7D0>,
                                   240)],
             '$66load_attr.7.1': [(<numba.core.ir.Assign object at 0x00000221B6793810>,
                                   0)],
             '$76return_value.15': [(<numba.core.ir.Assign object at 0x00000221B614A310>,
                                     240)],
             '$8binary_subscr.2': [(<numba.core.ir.Assign object at 0x00000221B6113CD0>,
                                    240)],
             '$binop_and_72.14': [(<numba.core.ir.Assign object at 0x00000221B6019B50>,
                                   240)],
             '$binop_sub210.37.1': [(<numba.core.ir.Assign object at 0x00000221B6996610>,
                                     0)],
             '$const100.12.1': [(<numba.core.ir.Assign object at 0x00000221B6793650>,
                                 0)],
             '$const108.15.1': [(<numba.core.ir.Assign object at 0x00000221B6790F50>,
                                 0)],
             '$const112.17.1': [(<numba.core.ir.Assign object at 0x00000221B67907D0>,
                                 0)],
             '$const114.18.1': [(<numba.core.ir.Assign object at 0x00000221B6790690>,
                                 0)],
             '$const146.25.1': [(<numba.core.ir.Assign object at 0x00000221B6792510>,
                                 0)],
             '$const148.26.1': [(<numba.core.ir.Assign object at 0x00000221B67901D0>,
                                 0)],
             '$const168.30.1': [(<numba.core.ir.Assign object at 0x00000221B6792750>,
                                 0)],
             '$const192.34.1': [(<numba.core.ir.Assign object at 0x00000221B69971D0>,
                                 0)],
             '$const194.35.1': [(<numba.core.ir.Assign object at 0x00000221B69955D0>,
                                 0)],
             '$const20.4': [(<numba.core.ir.Assign object at 0x00000221B60211D0>,
                             240)],
             '$const40.8': [(<numba.core.ir.Assign object at 0x00000221B601B0D0>,
                             240)],
             '$const54.11': [(<numba.core.ir.Assign object at 0x00000221B601B750>,
                              240)],
             '$const6.1': [(<numba.core.ir.Assign object at 0x00000221B6130550>,
                            240)],
             '$const94.9.1': [(<numba.core.ir.Assign object at 0x00000221B6792590>,
                               0)],
             '$const98.11.1': [(<numba.core.ir.Assign object at 0x00000221B6793310>,
                                0)],
             '$phi230.0.1': [(<numba.core.ir.Assign object at 0x00000221B6793E90>,
                              0)],
             '$phi232.1.1': [(<numba.core.ir.Assign object at 0x00000221B6996790>,
                              230)],
             'full_shape0': [(<numba.core.ir.Assign object at 0x00000221B6790D50>,
                              0)],
             'index00': [(<numba.core.ir.Assign object at 0x00000221B6996590>,
                          232)],
             'out0': [(<numba.core.ir.Assign object at 0x00000221B6792BD0>, 0)],
             'stencil_index': [(<numba.core.ir.Assign object at 0x00000221B6111710>,
                                240)],
             'stencil_index.1': [(<numba.core.ir.Assign object at 0x00000221B6111690>,
                                  240)],
             'stencil_index.2': [(<numba.core.ir.Assign object at 0x00000221B6110090>,
                                  240)],
             'stencil_index.3': [(<numba.core.ir.Assign object at 0x00000221B6111D10>,
                                  240)],
             'x': [(<numba.core.ir.Assign object at 0x00000221B69B4FD0>, 0)]})
2024-07-15 06:11:38,378 DEBUG:SSA violators <numba.core.utils.OrderedSet object at 0x00000221B682CE10>
2024-07-15 06:11:38,668 DEBUG:bytecode dump:
>          0	NOP(arg=None, lineno=1051)
           2	RESUME(arg=0, lineno=1051)
           4	LOAD_GLOBAL(arg=1, lineno=1065)
          16	LOAD_FAST(arg=0, lineno=1065)
          18	PRECALL(arg=1, lineno=1065)
          22	CALL(arg=1, lineno=1065)
          32	LOAD_FAST(arg=1, lineno=1065)
          34	LOAD_CONST(arg=1, lineno=1065)
          36	LOAD_CONST(arg=1, lineno=1065)
          38	BUILD_SLICE(arg=2, lineno=1065)
          40	STORE_SUBSCR(arg=None, lineno=1065)
          44	LOAD_CONST(arg=1, lineno=1065)
          46	RETURN_VALUE(arg=None, lineno=1065)
2024-07-15 06:11:38,668 DEBUG:pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-15 06:11:38,669 DEBUG:stack: []
2024-07-15 06:11:38,669 DEBUG:state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-15 06:11:38,669 DEBUG:dispatch pc=0, inst=NOP(arg=None, lineno=1051)
2024-07-15 06:11:38,669 DEBUG:stack []
2024-07-15 06:11:38,669 DEBUG:dispatch pc=2, inst=RESUME(arg=0, lineno=1051)
2024-07-15 06:11:38,669 DEBUG:stack []
2024-07-15 06:11:38,669 DEBUG:dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=1065)
2024-07-15 06:11:38,669 DEBUG:stack []
2024-07-15 06:11:38,669 DEBUG:dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=1065)
2024-07-15 06:11:38,669 DEBUG:stack ['$null$4.1', '$4load_global.0']
2024-07-15 06:11:38,669 DEBUG:dispatch pc=18, inst=PRECALL(arg=1, lineno=1065)
2024-07-15 06:11:38,669 DEBUG:stack ['$null$4.1', '$4load_global.0', '$x16.2']
2024-07-15 06:11:38,669 DEBUG:dispatch pc=22, inst=CALL(arg=1, lineno=1065)
2024-07-15 06:11:38,669 DEBUG:stack ['$null$4.1', '$4load_global.0', '$x16.2']
2024-07-15 06:11:38,669 DEBUG:dispatch pc=32, inst=LOAD_FAST(arg=1, lineno=1065)
2024-07-15 06:11:38,669 DEBUG:stack ['$22call.3']
2024-07-15 06:11:38,669 DEBUG:dispatch pc=34, inst=LOAD_CONST(arg=1, lineno=1065)
2024-07-15 06:11:38,669 DEBUG:stack ['$22call.3', '$y32.4']
2024-07-15 06:11:38,670 DEBUG:dispatch pc=36, inst=LOAD_CONST(arg=1, lineno=1065)
2024-07-15 06:11:38,670 DEBUG:stack ['$22call.3', '$y32.4', '$const34.5']
2024-07-15 06:11:38,670 DEBUG:dispatch pc=38, inst=BUILD_SLICE(arg=2, lineno=1065)
2024-07-15 06:11:38,670 DEBUG:stack ['$22call.3', '$y32.4', '$const34.5', '$const36.6']
2024-07-15 06:11:38,670 DEBUG:dispatch pc=40, inst=STORE_SUBSCR(arg=None, lineno=1065)
2024-07-15 06:11:38,670 DEBUG:stack ['$22call.3', '$y32.4', '$38build_slice.8']
2024-07-15 06:11:38,670 DEBUG:dispatch pc=44, inst=LOAD_CONST(arg=1, lineno=1065)
2024-07-15 06:11:38,670 DEBUG:stack []
2024-07-15 06:11:38,670 DEBUG:dispatch pc=46, inst=RETURN_VALUE(arg=None, lineno=1065)
2024-07-15 06:11:38,670 DEBUG:stack ['$const44.9']
2024-07-15 06:11:38,670 DEBUG:end state. edges=[]
2024-07-15 06:11:38,670 DEBUG:-------------------------Prune PHIs-------------------------
2024-07-15 06:11:38,670 DEBUG:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-07-15 06:11:38,670 DEBUG:defmap: {}
2024-07-15 06:11:38,670 DEBUG:phismap: defaultdict(<class 'set'>, {})
2024-07-15 06:11:38,670 DEBUG:changing phismap: defaultdict(<class 'set'>, {})
2024-07-15 06:11:38,670 DEBUG:keep phismap: {}
2024-07-15 06:11:38,671 DEBUG:new_out: defaultdict(<class 'dict'>, {})
2024-07-15 06:11:38,671 DEBUG:----------------------DONE Prune PHIs-----------------------
2024-07-15 06:11:38,671 DEBUG:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (6, {}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$x16.2'}), (18, {}), (20, {}), (22, {'func': '$4load_global.0', 'args': ['$x16.2'], 'kw_names': None, 'res': '$22call.3'}), (24, {}), (26, {}), (28, {}), (30, {}), (32, {'res': '$y32.4'}), (34, {'res': '$const34.5'}), (36, {'res': '$const36.6'}), (38, {'start': '$const34.5', 'stop': '$const36.6', 'step': None, 'res': '$38build_slice.8', 'slicevar': '$38build_slice.7'}), (40, {'target': '$y32.4', 'index': '$38build_slice.8', 'value': '$22call.3'}), (42, {}), (44, {'res': '$const44.9'}), (46, {'retval': '$const44.9', 'castval': '$46return_value.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-15 06:11:38,671 DEBUG:label 0:
    x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    $4load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x00000221B6075290>) ['$4load_global.0']
    $22call.3 = call $4load_global.0(x, func=$4load_global.0, args=[Var(x, utils.py:1051)], kws=(), vararg=None, varkwarg=None, target=None) ['$22call.3', '$4load_global.0', 'x']
    $const34.5 = const(NoneType, None)       ['$const34.5']
    $const36.6 = const(NoneType, None)       ['$const36.6']
    $38build_slice.7 = global(slice: <class 'slice'>) ['$38build_slice.7']
    $38build_slice.8 = call $38build_slice.7($const34.5, $const36.6, func=$38build_slice.7, args=(Var($const34.5, utils.py:1065), Var($const36.6, utils.py:1065)), kws=(), vararg=None, varkwarg=None, target=None) ['$38build_slice.7', '$38build_slice.8', '$const34.5', '$const36.6']
    y[$38build_slice.8] = $22call.3          ['$22call.3', '$38build_slice.8', 'y']
    $const44.9 = const(NoneType, None)       ['$const44.9']
    $46return_value.10 = cast(value=$const44.9) ['$46return_value.10', '$const44.9']
    return $46return_value.10                ['$46return_value.10']

2024-07-15 06:11:38,681 DEBUG:==== SSA block analysis pass on 0
2024-07-15 06:11:38,682 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5FA8450>
2024-07-15 06:11:38,682 DEBUG:on stmt: x = arg(0, name=x)
2024-07-15 06:11:38,682 DEBUG:on stmt: y = arg(1, name=y)
2024-07-15 06:11:38,682 DEBUG:on stmt: $4load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x00000221B6075290>)
2024-07-15 06:11:38,682 DEBUG:on stmt: $22call.3 = call $4load_global.0(x, func=$4load_global.0, args=[Var(x, utils.py:1051)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:38,682 DEBUG:on stmt: $const34.5 = const(NoneType, None)
2024-07-15 06:11:38,682 DEBUG:on stmt: $const36.6 = const(NoneType, None)
2024-07-15 06:11:38,682 DEBUG:on stmt: $38build_slice.7 = global(slice: <class 'slice'>)
2024-07-15 06:11:38,682 DEBUG:on stmt: $38build_slice.8 = call $38build_slice.7($const34.5, $const36.6, func=$38build_slice.7, args=(Var($const34.5, utils.py:1065), Var($const36.6, utils.py:1065)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:38,683 DEBUG:on stmt: y[slice(None, None, None)] = $22call.3
2024-07-15 06:11:38,683 DEBUG:on stmt: $const44.9 = const(NoneType, None)
2024-07-15 06:11:38,683 DEBUG:on stmt: $46return_value.10 = cast(value=$const44.9)
2024-07-15 06:11:38,683 DEBUG:on stmt: return $46return_value.10
2024-07-15 06:11:38,684 DEBUG:defs defaultdict(<class 'list'>,
            {'$22call.3': [(<numba.core.ir.Assign object at 0x00000221B5FA9D50>,
                            0)],
             '$38build_slice.7': [(<numba.core.ir.Assign object at 0x00000221B5FABB90>,
                                   0)],
             '$38build_slice.8': [(<numba.core.ir.Assign object at 0x00000221B5FAB950>,
                                   0)],
             '$46return_value.10': [(<numba.core.ir.Assign object at 0x00000221B5FA95D0>,
                                     0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x00000221B5FA8D10>,
                                  0)],
             '$const34.5': [(<numba.core.ir.Assign object at 0x00000221B5FAB2D0>,
                             0)],
             '$const36.6': [(<numba.core.ir.Assign object at 0x00000221B5FAB850>,
                             0)],
             '$const44.9': [(<numba.core.ir.Assign object at 0x00000221B5FA9490>,
                             0)],
             'x': [(<numba.core.ir.Assign object at 0x00000221B5FABFD0>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x00000221B5FAABD0>, 0)]})
2024-07-15 06:11:38,684 DEBUG:SSA violators <numba.core.utils.OrderedSet object at 0x00000221B5FA8450>
2024-07-15 06:11:38,713 DEBUG:bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	RESUME(arg=0, lineno=1)
           4	LOAD_FAST(arg=0, lineno=2)
           6	LOAD_ATTR(arg=0, lineno=2)
          16	STORE_FAST(arg=1, lineno=2)
          18	LOAD_GLOBAL(arg=2, lineno=3)
          30	LOAD_METHOD(arg=2, lineno=3)
          52	LOAD_FAST(arg=1, lineno=3)
          54	LOAD_GLOBAL(arg=2, lineno=3)
          66	LOAD_ATTR(arg=3, lineno=3)
          76	KW_NAMES(arg=1, lineno=3)
          78	PRECALL(arg=2, lineno=3)
          82	CALL(arg=2, lineno=3)
          92	STORE_FAST(arg=2, lineno=3)
          94	LOAD_CONST(arg=2, lineno=4)
          96	LOAD_FAST(arg=2, lineno=4)
          98	LOAD_CONST(arg=0, lineno=4)
         100	LOAD_CONST(arg=3, lineno=4)
         102	BUILD_SLICE(arg=2, lineno=4)
         104	STORE_SUBSCR(arg=None, lineno=4)
         108	LOAD_CONST(arg=2, lineno=5)
         110	LOAD_FAST(arg=2, lineno=5)
         112	LOAD_CONST(arg=4, lineno=5)
         114	LOAD_CONST(arg=0, lineno=5)
         116	BUILD_SLICE(arg=2, lineno=5)
         118	STORE_SUBSCR(arg=None, lineno=5)
         122	LOAD_GLOBAL(arg=9, lineno=6)
         134	LOAD_GLOBAL(arg=11, lineno=6)
         146	LOAD_CONST(arg=2, lineno=6)
         148	LOAD_CONST(arg=4, lineno=6)
         150	PRECALL(arg=2, lineno=6)
         154	CALL(arg=2, lineno=6)
         164	UNARY_NEGATIVE(arg=None, lineno=6)
         166	LOAD_FAST(arg=1, lineno=6)
         168	LOAD_CONST(arg=2, lineno=6)
         170	BINARY_SUBSCR(arg=None, lineno=6)
         180	LOAD_GLOBAL(arg=13, lineno=6)
         192	LOAD_CONST(arg=2, lineno=6)
         194	LOAD_CONST(arg=3, lineno=6)
         196	PRECALL(arg=2, lineno=6)
         200	CALL(arg=2, lineno=6)
         210	BINARY_OP(arg=10, lineno=6)
         214	PRECALL(arg=2, lineno=6)
         218	CALL(arg=2, lineno=6)
         228	GET_ITER(arg=None, lineno=6)
>        230	FOR_ITER(arg=4, lineno=6)
         232	STORE_FAST(arg=3, lineno=6)
         234	LOAD_CONST(arg=2, lineno=7)
         236	STORE_FAST(arg=4, lineno=7)
         238	JUMP_BACKWARD(arg=5, lineno=7)
>        240	LOAD_FAST(arg=2, lineno=8)
         242	RETURN_VALUE(arg=None, lineno=8)
2024-07-15 06:11:38,713 DEBUG:pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-15 06:11:38,713 DEBUG:stack: []
2024-07-15 06:11:38,713 DEBUG:state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-15 06:11:38,713 DEBUG:dispatch pc=0, inst=NOP(arg=None, lineno=1)
2024-07-15 06:11:38,713 DEBUG:stack []
2024-07-15 06:11:38,713 DEBUG:dispatch pc=2, inst=RESUME(arg=0, lineno=1)
2024-07-15 06:11:38,713 DEBUG:stack []
2024-07-15 06:11:38,713 DEBUG:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2)
2024-07-15 06:11:38,713 DEBUG:stack []
2024-07-15 06:11:38,713 DEBUG:dispatch pc=6, inst=LOAD_ATTR(arg=0, lineno=2)
2024-07-15 06:11:38,713 DEBUG:stack ['$x4.0']
2024-07-15 06:11:38,713 DEBUG:dispatch pc=16, inst=STORE_FAST(arg=1, lineno=2)
2024-07-15 06:11:38,713 DEBUG:stack ['$6load_attr.1']
2024-07-15 06:11:38,713 DEBUG:dispatch pc=18, inst=LOAD_GLOBAL(arg=2, lineno=3)
2024-07-15 06:11:38,713 DEBUG:stack []
2024-07-15 06:11:38,713 DEBUG:dispatch pc=30, inst=LOAD_METHOD(arg=2, lineno=3)
2024-07-15 06:11:38,713 DEBUG:stack ['$18load_global.2']
2024-07-15 06:11:38,713 DEBUG:dispatch pc=52, inst=LOAD_FAST(arg=1, lineno=3)
2024-07-15 06:11:38,713 DEBUG:stack ['$null$30.3', '$30load_method.4']
2024-07-15 06:11:38,713 DEBUG:dispatch pc=54, inst=LOAD_GLOBAL(arg=2, lineno=3)
2024-07-15 06:11:38,713 DEBUG:stack ['$null$30.3', '$30load_method.4', '$full_shape052.5']
2024-07-15 06:11:38,713 DEBUG:dispatch pc=66, inst=LOAD_ATTR(arg=3, lineno=3)
2024-07-15 06:11:38,713 DEBUG:stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$54load_global.6']
2024-07-15 06:11:38,713 DEBUG:dispatch pc=76, inst=KW_NAMES(arg=1, lineno=3)
2024-07-15 06:11:38,715 DEBUG:stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
2024-07-15 06:11:38,715 DEBUG:dispatch pc=78, inst=PRECALL(arg=2, lineno=3)
2024-07-15 06:11:38,715 DEBUG:stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
2024-07-15 06:11:38,715 DEBUG:dispatch pc=82, inst=CALL(arg=2, lineno=3)
2024-07-15 06:11:38,715 DEBUG:stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
2024-07-15 06:11:38,715 DEBUG:dispatch pc=92, inst=STORE_FAST(arg=2, lineno=3)
2024-07-15 06:11:38,715 DEBUG:stack ['$82call.8']
2024-07-15 06:11:38,715 DEBUG:dispatch pc=94, inst=LOAD_CONST(arg=2, lineno=4)
2024-07-15 06:11:38,715 DEBUG:stack []
2024-07-15 06:11:38,715 DEBUG:dispatch pc=96, inst=LOAD_FAST(arg=2, lineno=4)
2024-07-15 06:11:38,715 DEBUG:stack ['$const94.9']
2024-07-15 06:11:38,715 DEBUG:dispatch pc=98, inst=LOAD_CONST(arg=0, lineno=4)
2024-07-15 06:11:38,715 DEBUG:stack ['$const94.9', '$out096.10']
2024-07-15 06:11:38,715 DEBUG:dispatch pc=100, inst=LOAD_CONST(arg=3, lineno=4)
2024-07-15 06:11:38,715 DEBUG:stack ['$const94.9', '$out096.10', '$const98.11']
2024-07-15 06:11:38,715 DEBUG:dispatch pc=102, inst=BUILD_SLICE(arg=2, lineno=4)
2024-07-15 06:11:38,715 DEBUG:stack ['$const94.9', '$out096.10', '$const98.11', '$const100.12']
2024-07-15 06:11:38,715 DEBUG:dispatch pc=104, inst=STORE_SUBSCR(arg=None, lineno=4)
2024-07-15 06:11:38,715 DEBUG:stack ['$const94.9', '$out096.10', '$102build_slice.14']
2024-07-15 06:11:38,715 DEBUG:dispatch pc=108, inst=LOAD_CONST(arg=2, lineno=5)
2024-07-15 06:11:38,715 DEBUG:stack []
2024-07-15 06:11:38,715 DEBUG:dispatch pc=110, inst=LOAD_FAST(arg=2, lineno=5)
2024-07-15 06:11:38,715 DEBUG:stack ['$const108.15']
2024-07-15 06:11:38,715 DEBUG:dispatch pc=112, inst=LOAD_CONST(arg=4, lineno=5)
2024-07-15 06:11:38,715 DEBUG:stack ['$const108.15', '$out0110.16']
2024-07-15 06:11:38,715 DEBUG:dispatch pc=114, inst=LOAD_CONST(arg=0, lineno=5)
2024-07-15 06:11:38,715 DEBUG:stack ['$const108.15', '$out0110.16', '$const112.17']
2024-07-15 06:11:38,715 DEBUG:dispatch pc=116, inst=BUILD_SLICE(arg=2, lineno=5)
2024-07-15 06:11:38,715 DEBUG:stack ['$const108.15', '$out0110.16', '$const112.17', '$const114.18']
2024-07-15 06:11:38,715 DEBUG:dispatch pc=118, inst=STORE_SUBSCR(arg=None, lineno=5)
2024-07-15 06:11:38,716 DEBUG:stack ['$const108.15', '$out0110.16', '$116build_slice.20']
2024-07-15 06:11:38,716 DEBUG:dispatch pc=122, inst=LOAD_GLOBAL(arg=9, lineno=6)
2024-07-15 06:11:38,716 DEBUG:stack []
2024-07-15 06:11:38,716 DEBUG:dispatch pc=134, inst=LOAD_GLOBAL(arg=11, lineno=6)
2024-07-15 06:11:38,716 DEBUG:stack ['$null$122.22', '$122load_global.21']
2024-07-15 06:11:38,716 DEBUG:dispatch pc=146, inst=LOAD_CONST(arg=2, lineno=6)
2024-07-15 06:11:38,716 DEBUG:stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23']
2024-07-15 06:11:38,716 DEBUG:dispatch pc=148, inst=LOAD_CONST(arg=4, lineno=6)
2024-07-15 06:11:38,716 DEBUG:stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25']
2024-07-15 06:11:38,716 DEBUG:dispatch pc=150, inst=PRECALL(arg=2, lineno=6)
2024-07-15 06:11:38,716 DEBUG:stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25', '$const148.26']
2024-07-15 06:11:38,716 DEBUG:dispatch pc=154, inst=CALL(arg=2, lineno=6)
2024-07-15 06:11:38,716 DEBUG:stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25', '$const148.26']
2024-07-15 06:11:38,716 DEBUG:dispatch pc=164, inst=UNARY_NEGATIVE(arg=None, lineno=6)
2024-07-15 06:11:38,716 DEBUG:stack ['$null$122.22', '$122load_global.21', '$154call.27']
2024-07-15 06:11:38,716 DEBUG:dispatch pc=166, inst=LOAD_FAST(arg=1, lineno=6)
2024-07-15 06:11:38,716 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28']
2024-07-15 06:11:38,716 DEBUG:dispatch pc=168, inst=LOAD_CONST(arg=2, lineno=6)
2024-07-15 06:11:38,716 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$full_shape0166.29']
2024-07-15 06:11:38,716 DEBUG:dispatch pc=170, inst=BINARY_SUBSCR(arg=None, lineno=6)
2024-07-15 06:11:38,716 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$full_shape0166.29', '$const168.30']
2024-07-15 06:11:38,716 DEBUG:dispatch pc=180, inst=LOAD_GLOBAL(arg=13, lineno=6)
2024-07-15 06:11:38,716 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31']
2024-07-15 06:11:38,716 DEBUG:dispatch pc=192, inst=LOAD_CONST(arg=2, lineno=6)
2024-07-15 06:11:38,716 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32']
2024-07-15 06:11:38,716 DEBUG:dispatch pc=194, inst=LOAD_CONST(arg=3, lineno=6)
2024-07-15 06:11:38,716 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34']
2024-07-15 06:11:38,716 DEBUG:dispatch pc=196, inst=PRECALL(arg=2, lineno=6)
2024-07-15 06:11:38,717 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34', '$const194.35']
2024-07-15 06:11:38,717 DEBUG:dispatch pc=200, inst=CALL(arg=2, lineno=6)
2024-07-15 06:11:38,717 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34', '$const194.35']
2024-07-15 06:11:38,717 DEBUG:dispatch pc=210, inst=BINARY_OP(arg=10, lineno=6)
2024-07-15 06:11:38,717 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$200call.36']
2024-07-15 06:11:38,717 DEBUG:dispatch pc=214, inst=PRECALL(arg=2, lineno=6)
2024-07-15 06:11:38,717 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$binop_sub210.37']
2024-07-15 06:11:38,717 DEBUG:dispatch pc=218, inst=CALL(arg=2, lineno=6)
2024-07-15 06:11:38,717 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$binop_sub210.37']
2024-07-15 06:11:38,717 DEBUG:dispatch pc=228, inst=GET_ITER(arg=None, lineno=6)
2024-07-15 06:11:38,717 DEBUG:stack ['$218call.38']
2024-07-15 06:11:38,717 DEBUG:end state. edges=[Edge(pc=230, stack=('$228get_iter.39',), blockstack=(), npush=0)]
2024-07-15 06:11:38,717 DEBUG:pending: deque([State(pc_initial=230 nstack_initial=1)])
2024-07-15 06:11:38,717 DEBUG:stack: ['$phi230.0']
2024-07-15 06:11:38,717 DEBUG:state.pc_initial: State(pc_initial=230 nstack_initial=1)
2024-07-15 06:11:38,717 DEBUG:dispatch pc=230, inst=FOR_ITER(arg=4, lineno=6)
2024-07-15 06:11:38,717 DEBUG:stack ['$phi230.0']
2024-07-15 06:11:38,717 DEBUG:end state. edges=[Edge(pc=240, stack=(), blockstack=(), npush=0), Edge(pc=232, stack=('$phi230.0', '$230for_iter.2'), blockstack=(), npush=0)]
2024-07-15 06:11:38,717 DEBUG:pending: deque([State(pc_initial=240 nstack_initial=0), State(pc_initial=232 nstack_initial=2)])
2024-07-15 06:11:38,717 DEBUG:stack: []
2024-07-15 06:11:38,717 DEBUG:state.pc_initial: State(pc_initial=240 nstack_initial=0)
2024-07-15 06:11:38,717 DEBUG:dispatch pc=240, inst=LOAD_FAST(arg=2, lineno=8)
2024-07-15 06:11:38,717 DEBUG:stack []
2024-07-15 06:11:38,717 DEBUG:dispatch pc=242, inst=RETURN_VALUE(arg=None, lineno=8)
2024-07-15 06:11:38,717 DEBUG:stack ['$out0240.0']
2024-07-15 06:11:38,717 DEBUG:end state. edges=[]
2024-07-15 06:11:38,718 DEBUG:pending: deque([State(pc_initial=232 nstack_initial=2)])
2024-07-15 06:11:38,718 DEBUG:stack: ['$phi232.0', '$phi232.1']
2024-07-15 06:11:38,718 DEBUG:state.pc_initial: State(pc_initial=232 nstack_initial=2)
2024-07-15 06:11:38,718 DEBUG:dispatch pc=232, inst=STORE_FAST(arg=3, lineno=6)
2024-07-15 06:11:38,718 DEBUG:stack ['$phi232.0', '$phi232.1']
2024-07-15 06:11:38,718 DEBUG:dispatch pc=234, inst=LOAD_CONST(arg=2, lineno=7)
2024-07-15 06:11:38,718 DEBUG:stack ['$phi232.0']
2024-07-15 06:11:38,718 DEBUG:dispatch pc=236, inst=STORE_FAST(arg=4, lineno=7)
2024-07-15 06:11:38,718 DEBUG:stack ['$phi232.0', '$const234.2']
2024-07-15 06:11:38,718 DEBUG:dispatch pc=238, inst=JUMP_BACKWARD(arg=5, lineno=7)
2024-07-15 06:11:38,718 DEBUG:stack ['$phi232.0']
2024-07-15 06:11:38,718 DEBUG:end state. edges=[Edge(pc=230, stack=('$phi232.0',), blockstack=(), npush=0)]
2024-07-15 06:11:38,718 DEBUG:pending: deque([State(pc_initial=230 nstack_initial=1)])
2024-07-15 06:11:38,718 DEBUG:-------------------------Prune PHIs-------------------------
2024-07-15 06:11:38,718 DEBUG:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=230 nstack_initial=1): {'$phi230.0'},
             State(pc_initial=232 nstack_initial=2): {'$phi232.1'},
             State(pc_initial=240 nstack_initial=0): set()})
2024-07-15 06:11:38,718 DEBUG:defmap: {'$phi230.0': State(pc_initial=0 nstack_initial=0),
 '$phi232.1': State(pc_initial=230 nstack_initial=1)}
2024-07-15 06:11:38,718 DEBUG:phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi232.0',
                            State(pc_initial=232 nstack_initial=2))},
             '$phi232.0': {('$phi230.0',
                            State(pc_initial=230 nstack_initial=1))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-07-15 06:11:38,719 DEBUG:changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi230.0',
                            State(pc_initial=230 nstack_initial=1))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-07-15 06:11:38,719 DEBUG:changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-07-15 06:11:38,719 DEBUG:changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-07-15 06:11:38,719 DEBUG:keep phismap: {'$phi230.0': {('$228get_iter.39', State(pc_initial=0 nstack_initial=0))},
 '$phi232.1': {('$230for_iter.2', State(pc_initial=230 nstack_initial=1))}}
2024-07-15 06:11:38,719 DEBUG:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi230.0': '$228get_iter.39'},
             State(pc_initial=230 nstack_initial=1): {'$phi232.1': '$230for_iter.2'}})
2024-07-15 06:11:38,719 DEBUG:----------------------DONE Prune PHIs-----------------------
2024-07-15 06:11:38,719 DEBUG:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'item': '$x4.0', 'res': '$6load_attr.1'}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'value': '$6load_attr.1'}), (18, {'idx': 1, 'res': '$18load_global.2'}), (20, {}), (22, {}), (24, {}), (26, {}), (28, {}), (30, {'item': '$18load_global.2', 'res': '$30load_method.4'}), (32, {}), (34, {}), (36, {}), (38, {}), (40, {}), (42, {}), (44, {}), (46, {}), (48, {}), (50, {}), (52, {'res': '$full_shape052.5'}), (54, {'idx': 1, 'res': '$54load_global.6'}), (56, {}), (58, {}), (60, {}), (62, {}), (64, {}), (66, {'item': '$54load_global.6', 'res': '$66load_attr.7'}), (68, {}), (70, {}), (72, {}), (74, {}), (78, {}), (80, {}), (82, {'func': '$30load_method.4', 'args': ['$full_shape052.5', '$66load_attr.7'], 'kw_names': 1, 'res': '$82call.8'}), (84, {}), (86, {}), (88, {}), (90, {}), (92, {'value': '$82call.8'}), (94, {'res': '$const94.9'}), (96, {'res': '$out096.10'}), (98, {'res': '$const98.11'}), (100, {'res': '$const100.12'}), (102, {'start': '$const98.11', 'stop': '$const100.12', 'step': None, 'res': '$102build_slice.14', 'slicevar': '$102build_slice.13'}), (104, {'target': '$out096.10', 'index': '$102build_slice.14', 'value': '$const94.9'}), (106, {}), (108, {'res': '$const108.15'}), (110, {'res': '$out0110.16'}), (112, {'res': '$const112.17'}), (114, {'res': '$const114.18'}), (116, {'start': '$const112.17', 'stop': '$const114.18', 'step': None, 'res': '$116build_slice.20', 'slicevar': '$116build_slice.19'}), (118, {'target': '$out0110.16', 'index': '$116build_slice.20', 'value': '$const108.15'}), (120, {}), (122, {'idx': 4, 'res': '$122load_global.21'}), (124, {}), (126, {}), (128, {}), (130, {}), (132, {}), (134, {'idx': 5, 'res': '$134load_global.23'}), (136, {}), (138, {}), (140, {}), (142, {}), (144, {}), (146, {'res': '$const146.25'}), (148, {'res': '$const148.26'}), (150, {}), (152, {}), (154, {'func': '$134load_global.23', 'args': ['$const146.25', '$const148.26'], 'kw_names': None, 'res': '$154call.27'}), (156, {}), (158, {}), (160, {}), (162, {}), (164, {'value': '$154call.27', 'res': '$164unary_negative.28'}), (166, {'res': '$full_shape0166.29'}), (168, {'res': '$const168.30'}), (170, {'index': '$const168.30', 'target': '$full_shape0166.29', 'res': '$170binary_subscr.31'}), (172, {}), (174, {}), (176, {}), (178, {}), (180, {'idx': 6, 'res': '$180load_global.32'}), (182, {}), (184, {}), (186, {}), (188, {}), (190, {}), (192, {'res': '$const192.34'}), (194, {'res': '$const194.35'}), (196, {}), (198, {}), (200, {'func': '$180load_global.32', 'args': ['$const192.34', '$const194.35'], 'kw_names': None, 'res': '$200call.36'}), (202, {}), (204, {}), (206, {}), (208, {}), (210, {'op': '-', 'lhs': '$170binary_subscr.31', 'rhs': '$200call.36', 'res': '$binop_sub210.37'}), (212, {}), (214, {}), (216, {}), (218, {'func': '$122load_global.21', 'args': ['$164unary_negative.28', '$binop_sub210.37'], 'kw_names': None, 'res': '$218call.38'}), (220, {}), (222, {}), (224, {}), (226, {}), (228, {'value': '$218call.38', 'res': '$228get_iter.39'})), outgoing_phis={'$phi230.0': '$228get_iter.39'}, blockstack=(), active_try_block=None, outgoing_edgepushed={230: ('$228get_iter.39',)})
2024-07-15 06:11:38,719 DEBUG:block_infos State(pc_initial=230 nstack_initial=1):
AdaptBlockInfo(insts=((230, {'iterator': '$phi230.0', 'pair': '$230for_iter.1', 'indval': '$230for_iter.2', 'pred': '$230for_iter.3'}),), outgoing_phis={'$phi232.1': '$230for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={240: (), 232: ('$phi230.0', '$230for_iter.2')})
2024-07-15 06:11:38,720 DEBUG:block_infos State(pc_initial=232 nstack_initial=2):
AdaptBlockInfo(insts=((232, {'value': '$phi232.1'}), (234, {'res': '$const234.2'}), (236, {'value': '$const234.2'}), (238, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={230: ('$phi232.0',)})
2024-07-15 06:11:38,720 DEBUG:block_infos State(pc_initial=240 nstack_initial=0):
AdaptBlockInfo(insts=((240, {'res': '$out0240.0'}), (242, {'retval': '$out0240.0', 'castval': '$242return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-15 06:11:38,721 DEBUG:label 0:
    x = arg(0, name=x)                       ['x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $18load_global.2 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$18load_global.2']
    $30load_method.4 = getattr(value=$18load_global.2, attr=empty) ['$18load_global.2', '$30load_method.4']
    $54load_global.6 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$54load_global.6']
    $66load_attr.7 = getattr(value=$54load_global.6, attr=bool_) ['$54load_global.6', '$66load_attr.7']
    out0 = call $30load_method.4(full_shape0, func=$30load_method.4, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7, <string>:3))], vararg=None, varkwarg=None, target=None) ['$30load_method.4', '$66load_attr.7', 'full_shape0', 'out0']
    $const94.9 = const(int, 0)               ['$const94.9']
    $const98.11 = const(NoneType, None)      ['$const98.11']
    $const100.12 = const(int, 1)             ['$const100.12']
    $102build_slice.13 = global(slice: <class 'slice'>) ['$102build_slice.13']
    $102build_slice.14 = call $102build_slice.13($const98.11, $const100.12, func=$102build_slice.13, args=(Var($const98.11, <string>:4), Var($const100.12, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$102build_slice.13', '$102build_slice.14', '$const100.12', '$const98.11']
    out0[$102build_slice.14] = $const94.9    ['$102build_slice.14', '$const94.9', 'out0']
    $const108.15 = const(int, 0)             ['$const108.15']
    $const112.17 = const(int, -1)            ['$const112.17']
    $const114.18 = const(NoneType, None)     ['$const114.18']
    $116build_slice.19 = global(slice: <class 'slice'>) ['$116build_slice.19']
    $116build_slice.20 = call $116build_slice.19($const112.17, $const114.18, func=$116build_slice.19, args=(Var($const112.17, <string>:5), Var($const114.18, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$116build_slice.19', '$116build_slice.20', '$const112.17', '$const114.18']
    out0[$116build_slice.20] = $const108.15  ['$116build_slice.20', '$const108.15', 'out0']
    $122load_global.21 = global(range: <class 'range'>) ['$122load_global.21']
    $134load_global.23 = global(min: <built-in function min>) ['$134load_global.23']
    $const146.25 = const(int, 0)             ['$const146.25']
    $const148.26 = const(int, -1)            ['$const148.26']
    $154call.27 = call $134load_global.23($const146.25, $const148.26, func=$134load_global.23, args=[Var($const146.25, <string>:6), Var($const148.26, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$134load_global.23', '$154call.27', '$const146.25', '$const148.26']
    $164unary_negative.28 = unary(fn=<built-in function neg>, value=$154call.27) ['$154call.27', '$164unary_negative.28']
    $const168.30 = const(int, 0)             ['$const168.30']
    $170binary_subscr.31 = getitem(value=full_shape0, index=$const168.30, fn=<built-in function getitem>) ['$170binary_subscr.31', '$const168.30', 'full_shape0']
    $180load_global.32 = global(max: <built-in function max>) ['$180load_global.32']
    $const192.34 = const(int, 0)             ['$const192.34']
    $const194.35 = const(int, 1)             ['$const194.35']
    $200call.36 = call $180load_global.32($const192.34, $const194.35, func=$180load_global.32, args=[Var($const192.34, <string>:6), Var($const194.35, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$180load_global.32', '$200call.36', '$const192.34', '$const194.35']
    $binop_sub210.37 = $170binary_subscr.31 - $200call.36 ['$170binary_subscr.31', '$200call.36', '$binop_sub210.37']
    $218call.38 = call $122load_global.21($164unary_negative.28, $binop_sub210.37, func=$122load_global.21, args=[Var($164unary_negative.28, <string>:6), Var($binop_sub210.37, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$122load_global.21', '$164unary_negative.28', '$218call.38', '$binop_sub210.37']
    $228get_iter.39 = getiter(value=$218call.38) ['$218call.38', '$228get_iter.39']
    $phi230.0 = $228get_iter.39              ['$228get_iter.39', '$phi230.0']
    jump 230                                 []
label 230:
    $230for_iter.1 = iternext(value=$phi230.0) ['$230for_iter.1', '$phi230.0']
    $230for_iter.2 = pair_first(value=$230for_iter.1) ['$230for_iter.1', '$230for_iter.2']
    $230for_iter.3 = pair_second(value=$230for_iter.1) ['$230for_iter.1', '$230for_iter.3']
    $phi232.1 = $230for_iter.2               ['$230for_iter.2', '$phi232.1']
    branch $230for_iter.3, 232, 240          ['$230for_iter.3']
label 232:
    index00 = $phi232.1                      ['$phi232.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 230                                 []
label 240:
    $242return_value.1 = cast(value=out0)    ['$242return_value.1', 'out0']
    return $242return_value.1                ['$242return_value.1']

2024-07-15 06:11:38,736 DEBUG:==== SSA block analysis pass on 0
2024-07-15 06:11:38,736 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5E45490>
2024-07-15 06:11:38,736 DEBUG:on stmt: x = arg(0, name=x)
2024-07-15 06:11:38,736 DEBUG:on stmt: full_shape0 = getattr(value=x, attr=shape)
2024-07-15 06:11:38,736 DEBUG:on stmt: $18load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:38,737 DEBUG:on stmt: $30load_method.4.1 = getattr(value=$18load_global.2.1, attr=empty)
2024-07-15 06:11:38,737 DEBUG:on stmt: $54load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:38,737 DEBUG:on stmt: $66load_attr.7.1 = getattr(value=$54load_global.6.1, attr=bool_)
2024-07-15 06:11:38,737 DEBUG:on stmt: out0 = call $30load_method.4.1(full_shape0, func=$30load_method.4.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:38,737 DEBUG:on stmt: $const94.9.1 = const(int, 0)
2024-07-15 06:11:38,737 DEBUG:on stmt: $const98.11.1 = const(NoneType, None)
2024-07-15 06:11:38,737 DEBUG:on stmt: $const100.12.1 = const(int, 1)
2024-07-15 06:11:38,737 DEBUG:on stmt: $102build_slice.13.1 = global(slice: <class 'slice'>)
2024-07-15 06:11:38,737 DEBUG:on stmt: $102build_slice.14.1 = call $102build_slice.13.1($const98.11.1, $const100.12.1, func=$102build_slice.13.1, args=(Var($const98.11.1, <string>:4), Var($const100.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:38,737 DEBUG:on stmt: out0[$102build_slice.14.1] = $const94.9.1
2024-07-15 06:11:38,737 DEBUG:on stmt: $const108.15.1 = const(int, 0)
2024-07-15 06:11:38,737 DEBUG:on stmt: $const112.17.1 = const(int, -1)
2024-07-15 06:11:38,737 DEBUG:on stmt: $const114.18.1 = const(NoneType, None)
2024-07-15 06:11:38,737 DEBUG:on stmt: $116build_slice.19.1 = global(slice: <class 'slice'>)
2024-07-15 06:11:38,737 DEBUG:on stmt: $116build_slice.20.1 = call $116build_slice.19.1($const112.17.1, $const114.18.1, func=$116build_slice.19.1, args=(Var($const112.17.1, <string>:5), Var($const114.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:38,737 DEBUG:on stmt: out0[$116build_slice.20.1] = $const108.15.1
2024-07-15 06:11:38,737 DEBUG:on stmt: $122load_global.21.1 = global(range: <class 'range'>)
2024-07-15 06:11:38,737 DEBUG:on stmt: $134load_global.23.1 = global(min: <built-in function min>)
2024-07-15 06:11:38,737 DEBUG:on stmt: $const146.25.1 = const(int, 0)
2024-07-15 06:11:38,737 DEBUG:on stmt: $const148.26.1 = const(int, -1)
2024-07-15 06:11:38,737 DEBUG:on stmt: $154call.27.1 = call $134load_global.23.1($const146.25.1, $const148.26.1, func=$134load_global.23.1, args=[Var($const146.25.1, <string>:6), Var($const148.26.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:38,737 DEBUG:on stmt: $164unary_negative.28.1 = unary(fn=<built-in function neg>, value=$154call.27.1)
2024-07-15 06:11:38,737 DEBUG:on stmt: $const168.30.1 = const(int, 0)
2024-07-15 06:11:38,737 DEBUG:on stmt: $170binary_subscr.31.1 = getitem(value=full_shape0, index=$const168.30.1, fn=<built-in function getitem>)
2024-07-15 06:11:38,737 DEBUG:on stmt: $180load_global.32.1 = global(max: <built-in function max>)
2024-07-15 06:11:38,737 DEBUG:on stmt: $const192.34.1 = const(int, 0)
2024-07-15 06:11:38,737 DEBUG:on stmt: $const194.35.1 = const(int, 1)
2024-07-15 06:11:38,737 DEBUG:on stmt: $200call.36.1 = call $180load_global.32.1($const192.34.1, $const194.35.1, func=$180load_global.32.1, args=[Var($const192.34.1, <string>:6), Var($const194.35.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:38,737 DEBUG:on stmt: $binop_sub210.37.1 = $170binary_subscr.31.1 - $200call.36.1
2024-07-15 06:11:38,737 DEBUG:on stmt: $218call.38.1 = call $122load_global.21.1($164unary_negative.28.1, $binop_sub210.37.1, func=$122load_global.21.1, args=[Var($164unary_negative.28.1, <string>:6), Var($binop_sub210.37.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:38,738 DEBUG:on stmt: $228get_iter.39.1 = getiter(value=$218call.38.1)
2024-07-15 06:11:38,738 DEBUG:on stmt: $phi230.0.1 = $228get_iter.39.1
2024-07-15 06:11:38,738 DEBUG:on stmt: jump 230
2024-07-15 06:11:38,738 DEBUG:==== SSA block analysis pass on 230
2024-07-15 06:11:38,738 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5E45490>
2024-07-15 06:11:38,738 DEBUG:on stmt: $230for_iter.1.1 = iternext(value=$phi230.0.1)
2024-07-15 06:11:38,738 DEBUG:on stmt: $230for_iter.2.1 = pair_first(value=$230for_iter.1.1)
2024-07-15 06:11:38,738 DEBUG:on stmt: $230for_iter.3.1 = pair_second(value=$230for_iter.1.1)
2024-07-15 06:11:38,738 DEBUG:on stmt: $phi232.1.1 = $230for_iter.2.1
2024-07-15 06:11:38,738 DEBUG:on stmt: branch $230for_iter.3.1, 232, 242
2024-07-15 06:11:38,738 DEBUG:==== SSA block analysis pass on 232
2024-07-15 06:11:38,738 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5E45490>
2024-07-15 06:11:38,738 DEBUG:on stmt: index00 = $phi232.1.1
2024-07-15 06:11:38,738 DEBUG:on stmt: jump 240
2024-07-15 06:11:38,738 DEBUG:==== SSA block analysis pass on 242
2024-07-15 06:11:38,738 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5E45490>
2024-07-15 06:11:38,738 DEBUG:on stmt: $242return_value.1.1 = cast(value=out0)
2024-07-15 06:11:38,738 DEBUG:on stmt: return $242return_value.1.1
2024-07-15 06:11:38,738 DEBUG:==== SSA block analysis pass on 240
2024-07-15 06:11:38,738 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5E45490>
2024-07-15 06:11:38,738 DEBUG:on stmt: $const6.1 = const(int, 0)
2024-07-15 06:11:38,738 DEBUG:on stmt: stencil_index = $const6.1 + index00
2024-07-15 06:11:38,738 DEBUG:on stmt: $8binary_subscr.2 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-07-15 06:11:38,738 DEBUG:on stmt: $const20.4 = const(int, -1)
2024-07-15 06:11:38,738 DEBUG:on stmt: stencil_index.1 = $const20.4 + index00
2024-07-15 06:11:38,738 DEBUG:on stmt: $22binary_subscr.5 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2024-07-15 06:11:38,738 DEBUG:on stmt: $32compare_op.6 = $8binary_subscr.2 > $22binary_subscr.5
2024-07-15 06:11:38,738 DEBUG:on stmt: $const40.8 = const(int, 0)
2024-07-15 06:11:38,738 DEBUG:on stmt: stencil_index.2 = $const40.8 + index00
2024-07-15 06:11:38,738 DEBUG:on stmt: $42binary_subscr.9 = getitem(value=x, index=stencil_index.2, fn=<built-in function getitem>)
2024-07-15 06:11:38,738 DEBUG:on stmt: $const54.11 = const(int, 1)
2024-07-15 06:11:38,738 DEBUG:on stmt: stencil_index.3 = $const54.11 + index00
2024-07-15 06:11:38,738 DEBUG:on stmt: $56binary_subscr.12 = getitem(value=x, index=stencil_index.3, fn=<built-in function getitem>)
2024-07-15 06:11:38,739 DEBUG:on stmt: $66compare_op.13 = $42binary_subscr.9 >= $56binary_subscr.12
2024-07-15 06:11:38,739 DEBUG:on stmt: $binop_and_72.14 = $32compare_op.6 & $66compare_op.13
2024-07-15 06:11:38,739 DEBUG:on stmt: $76return_value.15 = cast(value=$binop_and_72.14)
2024-07-15 06:11:38,739 DEBUG:on stmt: out0[index00] = $76return_value.15
2024-07-15 06:11:38,739 DEBUG:on stmt: jump 241
2024-07-15 06:11:38,739 DEBUG:==== SSA block analysis pass on 241
2024-07-15 06:11:38,739 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5E45490>
2024-07-15 06:11:38,739 DEBUG:on stmt: jump 230
2024-07-15 06:11:38,740 DEBUG:defs defaultdict(<class 'list'>,
            {'$102build_slice.13.1': [(<numba.core.ir.Assign object at 0x00000221B5DAB6D0>,
                                       0)],
             '$102build_slice.14.1': [(<numba.core.ir.Assign object at 0x00000221B5DA9610>,
                                       0)],
             '$116build_slice.19.1': [(<numba.core.ir.Assign object at 0x00000221B5F82F90>,
                                       0)],
             '$116build_slice.20.1': [(<numba.core.ir.Assign object at 0x00000221B5F82850>,
                                       0)],
             '$122load_global.21.1': [(<numba.core.ir.Assign object at 0x00000221B5F82E10>,
                                       0)],
             '$134load_global.23.1': [(<numba.core.ir.Assign object at 0x00000221B5F822D0>,
                                       0)],
             '$154call.27.1': [(<numba.core.ir.Assign object at 0x00000221B5F83C90>,
                                0)],
             '$164unary_negative.28.1': [(<numba.core.ir.Assign object at 0x00000221B5F82350>,
                                          0)],
             '$170binary_subscr.31.1': [(<numba.core.ir.Assign object at 0x00000221B5F80310>,
                                         0)],
             '$180load_global.32.1': [(<numba.core.ir.Assign object at 0x00000221B5F81250>,
                                       0)],
             '$18load_global.2.1': [(<numba.core.ir.Assign object at 0x00000221B5DA90D0>,
                                     0)],
             '$200call.36.1': [(<numba.core.ir.Assign object at 0x00000221B5F80BD0>,
                                0)],
             '$218call.38.1': [(<numba.core.ir.Assign object at 0x00000221B5F80710>,
                                0)],
             '$228get_iter.39.1': [(<numba.core.ir.Assign object at 0x00000221B5F80A90>,
                                    0)],
             '$22binary_subscr.5': [(<numba.core.ir.Assign object at 0x00000221B5DB1C10>,
                                     240)],
             '$230for_iter.1.1': [(<numba.core.ir.Assign object at 0x00000221B5F809D0>,
                                   230)],
             '$230for_iter.2.1': [(<numba.core.ir.Assign object at 0x00000221B5F81210>,
                                   230)],
             '$230for_iter.3.1': [(<numba.core.ir.Assign object at 0x00000221B5F81F10>,
                                   230)],
             '$242return_value.1.1': [(<numba.core.ir.Assign object at 0x00000221B5F805D0>,
                                       242)],
             '$30load_method.4.1': [(<numba.core.ir.Assign object at 0x00000221B5DAB550>,
                                     0)],
             '$32compare_op.6': [(<numba.core.ir.Assign object at 0x00000221B5FB7890>,
                                  240)],
             '$42binary_subscr.9': [(<numba.core.ir.Assign object at 0x00000221B5DB1610>,
                                     240)],
             '$54load_global.6.1': [(<numba.core.ir.Assign object at 0x00000221B5DA9C90>,
                                     0)],
             '$56binary_subscr.12': [(<numba.core.ir.Assign object at 0x00000221B5DB16D0>,
                                      240)],
             '$66compare_op.13': [(<numba.core.ir.Assign object at 0x00000221B5FB5510>,
                                   240)],
             '$66load_attr.7.1': [(<numba.core.ir.Assign object at 0x00000221B5DA8C10>,
                                   0)],
             '$76return_value.15': [(<numba.core.ir.Assign object at 0x00000221B5FB6110>,
                                     240)],
             '$8binary_subscr.2': [(<numba.core.ir.Assign object at 0x00000221B5DB1DD0>,
                                    240)],
             '$binop_and_72.14': [(<numba.core.ir.Assign object at 0x00000221B5FB6050>,
                                   240)],
             '$binop_sub210.37.1': [(<numba.core.ir.Assign object at 0x00000221B5F80550>,
                                     0)],
             '$const100.12.1': [(<numba.core.ir.Assign object at 0x00000221B5DAA910>,
                                 0)],
             '$const108.15.1': [(<numba.core.ir.Assign object at 0x00000221B5F83910>,
                                 0)],
             '$const112.17.1': [(<numba.core.ir.Assign object at 0x00000221B5F820D0>,
                                 0)],
             '$const114.18.1': [(<numba.core.ir.Assign object at 0x00000221B5F82690>,
                                 0)],
             '$const146.25.1': [(<numba.core.ir.Assign object at 0x00000221B5F83310>,
                                 0)],
             '$const148.26.1': [(<numba.core.ir.Assign object at 0x00000221B5F83890>,
                                 0)],
             '$const168.30.1': [(<numba.core.ir.Assign object at 0x00000221B5F838D0>,
                                 0)],
             '$const192.34.1': [(<numba.core.ir.Assign object at 0x00000221B5F81F50>,
                                 0)],
             '$const194.35.1': [(<numba.core.ir.Assign object at 0x00000221B5F803D0>,
                                 0)],
             '$const20.4': [(<numba.core.ir.Assign object at 0x00000221B5FB4FD0>,
                             240)],
             '$const40.8': [(<numba.core.ir.Assign object at 0x00000221B5E3B850>,
                             240)],
             '$const54.11': [(<numba.core.ir.Assign object at 0x00000221B5FAB690>,
                              240)],
             '$const6.1': [(<numba.core.ir.Assign object at 0x00000221B5DAEA10>,
                            240)],
             '$const94.9.1': [(<numba.core.ir.Assign object at 0x00000221B5DAB190>,
                               0)],
             '$const98.11.1': [(<numba.core.ir.Assign object at 0x00000221B5DAB250>,
                                0)],
             '$phi230.0.1': [(<numba.core.ir.Assign object at 0x00000221B5DA8410>,
                              0)],
             '$phi232.1.1': [(<numba.core.ir.Assign object at 0x00000221B5F826D0>,
                              230)],
             'full_shape0': [(<numba.core.ir.Assign object at 0x00000221B5DAA2D0>,
                              0)],
             'index00': [(<numba.core.ir.Assign object at 0x00000221B5F82AD0>,
                          232)],
             'out0': [(<numba.core.ir.Assign object at 0x00000221B5DA9A50>, 0)],
             'stencil_index': [(<numba.core.ir.Assign object at 0x00000221B5DB1BD0>,
                                240)],
             'stencil_index.1': [(<numba.core.ir.Assign object at 0x00000221B5DB1650>,
                                  240)],
             'stencil_index.2': [(<numba.core.ir.Assign object at 0x00000221B5DB19D0>,
                                  240)],
             'stencil_index.3': [(<numba.core.ir.Assign object at 0x00000221B5DB0C50>,
                                  240)],
             'x': [(<numba.core.ir.Assign object at 0x00000221B5DAA810>, 0)]})
2024-07-15 06:11:38,740 DEBUG:SSA violators <numba.core.utils.OrderedSet object at 0x00000221B5F830D0>
2024-07-15 06:11:39,549 DEBUG:bytecode dump:
>          0	NOP(arg=None, lineno=1068)
           2	RESUME(arg=0, lineno=1068)
           4	LOAD_GLOBAL(arg=1, lineno=1082)
          16	LOAD_FAST(arg=0, lineno=1082)
          18	PRECALL(arg=1, lineno=1082)
          22	CALL(arg=1, lineno=1082)
          32	LOAD_FAST(arg=1, lineno=1082)
          34	LOAD_CONST(arg=1, lineno=1082)
          36	LOAD_CONST(arg=1, lineno=1082)
          38	BUILD_SLICE(arg=2, lineno=1082)
          40	STORE_SUBSCR(arg=None, lineno=1082)
          44	LOAD_CONST(arg=1, lineno=1082)
          46	RETURN_VALUE(arg=None, lineno=1082)
2024-07-15 06:11:39,549 DEBUG:pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-15 06:11:39,549 DEBUG:stack: []
2024-07-15 06:11:39,549 DEBUG:state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-15 06:11:39,549 DEBUG:dispatch pc=0, inst=NOP(arg=None, lineno=1068)
2024-07-15 06:11:39,549 DEBUG:stack []
2024-07-15 06:11:39,549 DEBUG:dispatch pc=2, inst=RESUME(arg=0, lineno=1068)
2024-07-15 06:11:39,549 DEBUG:stack []
2024-07-15 06:11:39,549 DEBUG:dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=1082)
2024-07-15 06:11:39,549 DEBUG:stack []
2024-07-15 06:11:39,549 DEBUG:dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=1082)
2024-07-15 06:11:39,549 DEBUG:stack ['$null$4.1', '$4load_global.0']
2024-07-15 06:11:39,549 DEBUG:dispatch pc=18, inst=PRECALL(arg=1, lineno=1082)
2024-07-15 06:11:39,549 DEBUG:stack ['$null$4.1', '$4load_global.0', '$x16.2']
2024-07-15 06:11:39,549 DEBUG:dispatch pc=22, inst=CALL(arg=1, lineno=1082)
2024-07-15 06:11:39,549 DEBUG:stack ['$null$4.1', '$4load_global.0', '$x16.2']
2024-07-15 06:11:39,549 DEBUG:dispatch pc=32, inst=LOAD_FAST(arg=1, lineno=1082)
2024-07-15 06:11:39,549 DEBUG:stack ['$22call.3']
2024-07-15 06:11:39,549 DEBUG:dispatch pc=34, inst=LOAD_CONST(arg=1, lineno=1082)
2024-07-15 06:11:39,549 DEBUG:stack ['$22call.3', '$y32.4']
2024-07-15 06:11:39,549 DEBUG:dispatch pc=36, inst=LOAD_CONST(arg=1, lineno=1082)
2024-07-15 06:11:39,549 DEBUG:stack ['$22call.3', '$y32.4', '$const34.5']
2024-07-15 06:11:39,549 DEBUG:dispatch pc=38, inst=BUILD_SLICE(arg=2, lineno=1082)
2024-07-15 06:11:39,549 DEBUG:stack ['$22call.3', '$y32.4', '$const34.5', '$const36.6']
2024-07-15 06:11:39,549 DEBUG:dispatch pc=40, inst=STORE_SUBSCR(arg=None, lineno=1082)
2024-07-15 06:11:39,549 DEBUG:stack ['$22call.3', '$y32.4', '$38build_slice.8']
2024-07-15 06:11:39,549 DEBUG:dispatch pc=44, inst=LOAD_CONST(arg=1, lineno=1082)
2024-07-15 06:11:39,549 DEBUG:stack []
2024-07-15 06:11:39,549 DEBUG:dispatch pc=46, inst=RETURN_VALUE(arg=None, lineno=1082)
2024-07-15 06:11:39,549 DEBUG:stack ['$const44.9']
2024-07-15 06:11:39,549 DEBUG:end state. edges=[]
2024-07-15 06:11:39,549 DEBUG:-------------------------Prune PHIs-------------------------
2024-07-15 06:11:39,549 DEBUG:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-07-15 06:11:39,549 DEBUG:defmap: {}
2024-07-15 06:11:39,549 DEBUG:phismap: defaultdict(<class 'set'>, {})
2024-07-15 06:11:39,549 DEBUG:changing phismap: defaultdict(<class 'set'>, {})
2024-07-15 06:11:39,549 DEBUG:keep phismap: {}
2024-07-15 06:11:39,549 DEBUG:new_out: defaultdict(<class 'dict'>, {})
2024-07-15 06:11:39,549 DEBUG:----------------------DONE Prune PHIs-----------------------
2024-07-15 06:11:39,549 DEBUG:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (6, {}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$x16.2'}), (18, {}), (20, {}), (22, {'func': '$4load_global.0', 'args': ['$x16.2'], 'kw_names': None, 'res': '$22call.3'}), (24, {}), (26, {}), (28, {}), (30, {}), (32, {'res': '$y32.4'}), (34, {'res': '$const34.5'}), (36, {'res': '$const36.6'}), (38, {'start': '$const34.5', 'stop': '$const36.6', 'step': None, 'res': '$38build_slice.8', 'slicevar': '$38build_slice.7'}), (40, {'target': '$y32.4', 'index': '$38build_slice.8', 'value': '$22call.3'}), (42, {}), (44, {'res': '$const44.9'}), (46, {'retval': '$const44.9', 'castval': '$46return_value.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-15 06:11:39,549 DEBUG:label 0:
    x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    $4load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x00000221B6076710>) ['$4load_global.0']
    $22call.3 = call $4load_global.0(x, func=$4load_global.0, args=[Var(x, utils.py:1068)], kws=(), vararg=None, varkwarg=None, target=None) ['$22call.3', '$4load_global.0', 'x']
    $const34.5 = const(NoneType, None)       ['$const34.5']
    $const36.6 = const(NoneType, None)       ['$const36.6']
    $38build_slice.7 = global(slice: <class 'slice'>) ['$38build_slice.7']
    $38build_slice.8 = call $38build_slice.7($const34.5, $const36.6, func=$38build_slice.7, args=(Var($const34.5, utils.py:1082), Var($const36.6, utils.py:1082)), kws=(), vararg=None, varkwarg=None, target=None) ['$38build_slice.7', '$38build_slice.8', '$const34.5', '$const36.6']
    y[$38build_slice.8] = $22call.3          ['$22call.3', '$38build_slice.8', 'y']
    $const44.9 = const(NoneType, None)       ['$const44.9']
    $46return_value.10 = cast(value=$const44.9) ['$46return_value.10', '$const44.9']
    return $46return_value.10                ['$46return_value.10']

2024-07-15 06:11:39,549 DEBUG:==== SSA block analysis pass on 0
2024-07-15 06:11:39,549 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B68A1E10>
2024-07-15 06:11:39,549 DEBUG:on stmt: x = arg(0, name=x)
2024-07-15 06:11:39,549 DEBUG:on stmt: y = arg(1, name=y)
2024-07-15 06:11:39,549 DEBUG:on stmt: $4load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x00000221B6076710>)
2024-07-15 06:11:39,549 DEBUG:on stmt: $22call.3 = call $4load_global.0(x, func=$4load_global.0, args=[Var(x, utils.py:1068)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:39,549 DEBUG:on stmt: $const34.5 = const(NoneType, None)
2024-07-15 06:11:39,549 DEBUG:on stmt: $const36.6 = const(NoneType, None)
2024-07-15 06:11:39,549 DEBUG:on stmt: $38build_slice.7 = global(slice: <class 'slice'>)
2024-07-15 06:11:39,549 DEBUG:on stmt: $38build_slice.8 = call $38build_slice.7($const34.5, $const36.6, func=$38build_slice.7, args=(Var($const34.5, utils.py:1082), Var($const36.6, utils.py:1082)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:39,549 DEBUG:on stmt: y[slice(None, None, None)] = $22call.3
2024-07-15 06:11:39,549 DEBUG:on stmt: $const44.9 = const(NoneType, None)
2024-07-15 06:11:39,549 DEBUG:on stmt: $46return_value.10 = cast(value=$const44.9)
2024-07-15 06:11:39,549 DEBUG:on stmt: return $46return_value.10
2024-07-15 06:11:39,549 DEBUG:defs defaultdict(<class 'list'>,
            {'$22call.3': [(<numba.core.ir.Assign object at 0x00000221B68BD850>,
                            0)],
             '$38build_slice.7': [(<numba.core.ir.Assign object at 0x00000221B68BDF10>,
                                   0)],
             '$38build_slice.8': [(<numba.core.ir.Assign object at 0x00000221B68BE010>,
                                   0)],
             '$46return_value.10': [(<numba.core.ir.Assign object at 0x00000221B68A7F50>,
                                     0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x00000221B68BD590>,
                                  0)],
             '$const34.5': [(<numba.core.ir.Assign object at 0x00000221B68BDCD0>,
                             0)],
             '$const36.6': [(<numba.core.ir.Assign object at 0x00000221B68BDE50>,
                             0)],
             '$const44.9': [(<numba.core.ir.Assign object at 0x00000221B68BC1D0>,
                             0)],
             'x': [(<numba.core.ir.Assign object at 0x00000221B68BD0D0>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x00000221B68BD290>, 0)]})
2024-07-15 06:11:39,549 DEBUG:SSA violators <numba.core.utils.OrderedSet object at 0x00000221B68A1E10>
2024-07-15 06:11:39,575 DEBUG:bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	RESUME(arg=0, lineno=1)
           4	LOAD_FAST(arg=0, lineno=2)
           6	LOAD_ATTR(arg=0, lineno=2)
          16	STORE_FAST(arg=1, lineno=2)
          18	LOAD_GLOBAL(arg=2, lineno=3)
          30	LOAD_METHOD(arg=2, lineno=3)
          52	LOAD_FAST(arg=1, lineno=3)
          54	LOAD_GLOBAL(arg=2, lineno=3)
          66	LOAD_ATTR(arg=3, lineno=3)
          76	KW_NAMES(arg=1, lineno=3)
          78	PRECALL(arg=2, lineno=3)
          82	CALL(arg=2, lineno=3)
          92	STORE_FAST(arg=2, lineno=3)
          94	LOAD_CONST(arg=2, lineno=4)
          96	LOAD_FAST(arg=2, lineno=4)
          98	LOAD_CONST(arg=0, lineno=4)
         100	LOAD_CONST(arg=3, lineno=4)
         102	BUILD_SLICE(arg=2, lineno=4)
         104	STORE_SUBSCR(arg=None, lineno=4)
         108	LOAD_CONST(arg=2, lineno=5)
         110	LOAD_FAST(arg=2, lineno=5)
         112	LOAD_CONST(arg=4, lineno=5)
         114	LOAD_CONST(arg=0, lineno=5)
         116	BUILD_SLICE(arg=2, lineno=5)
         118	STORE_SUBSCR(arg=None, lineno=5)
         122	LOAD_GLOBAL(arg=9, lineno=6)
         134	LOAD_GLOBAL(arg=11, lineno=6)
         146	LOAD_CONST(arg=2, lineno=6)
         148	LOAD_CONST(arg=4, lineno=6)
         150	PRECALL(arg=2, lineno=6)
         154	CALL(arg=2, lineno=6)
         164	UNARY_NEGATIVE(arg=None, lineno=6)
         166	LOAD_FAST(arg=1, lineno=6)
         168	LOAD_CONST(arg=2, lineno=6)
         170	BINARY_SUBSCR(arg=None, lineno=6)
         180	LOAD_GLOBAL(arg=13, lineno=6)
         192	LOAD_CONST(arg=2, lineno=6)
         194	LOAD_CONST(arg=3, lineno=6)
         196	PRECALL(arg=2, lineno=6)
         200	CALL(arg=2, lineno=6)
         210	BINARY_OP(arg=10, lineno=6)
         214	PRECALL(arg=2, lineno=6)
         218	CALL(arg=2, lineno=6)
         228	GET_ITER(arg=None, lineno=6)
>        230	FOR_ITER(arg=4, lineno=6)
         232	STORE_FAST(arg=3, lineno=6)
         234	LOAD_CONST(arg=2, lineno=7)
         236	STORE_FAST(arg=4, lineno=7)
         238	JUMP_BACKWARD(arg=5, lineno=7)
>        240	LOAD_FAST(arg=2, lineno=8)
         242	RETURN_VALUE(arg=None, lineno=8)
2024-07-15 06:11:39,575 DEBUG:pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-15 06:11:39,575 DEBUG:stack: []
2024-07-15 06:11:39,575 DEBUG:state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-15 06:11:39,575 DEBUG:dispatch pc=0, inst=NOP(arg=None, lineno=1)
2024-07-15 06:11:39,575 DEBUG:stack []
2024-07-15 06:11:39,575 DEBUG:dispatch pc=2, inst=RESUME(arg=0, lineno=1)
2024-07-15 06:11:39,575 DEBUG:stack []
2024-07-15 06:11:39,575 DEBUG:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2)
2024-07-15 06:11:39,576 DEBUG:stack []
2024-07-15 06:11:39,576 DEBUG:dispatch pc=6, inst=LOAD_ATTR(arg=0, lineno=2)
2024-07-15 06:11:39,576 DEBUG:stack ['$x4.0']
2024-07-15 06:11:39,576 DEBUG:dispatch pc=16, inst=STORE_FAST(arg=1, lineno=2)
2024-07-15 06:11:39,576 DEBUG:stack ['$6load_attr.1']
2024-07-15 06:11:39,576 DEBUG:dispatch pc=18, inst=LOAD_GLOBAL(arg=2, lineno=3)
2024-07-15 06:11:39,576 DEBUG:stack []
2024-07-15 06:11:39,576 DEBUG:dispatch pc=30, inst=LOAD_METHOD(arg=2, lineno=3)
2024-07-15 06:11:39,576 DEBUG:stack ['$18load_global.2']
2024-07-15 06:11:39,576 DEBUG:dispatch pc=52, inst=LOAD_FAST(arg=1, lineno=3)
2024-07-15 06:11:39,576 DEBUG:stack ['$null$30.3', '$30load_method.4']
2024-07-15 06:11:39,576 DEBUG:dispatch pc=54, inst=LOAD_GLOBAL(arg=2, lineno=3)
2024-07-15 06:11:39,576 DEBUG:stack ['$null$30.3', '$30load_method.4', '$full_shape052.5']
2024-07-15 06:11:39,576 DEBUG:dispatch pc=66, inst=LOAD_ATTR(arg=3, lineno=3)
2024-07-15 06:11:39,576 DEBUG:stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$54load_global.6']
2024-07-15 06:11:39,576 DEBUG:dispatch pc=76, inst=KW_NAMES(arg=1, lineno=3)
2024-07-15 06:11:39,576 DEBUG:stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
2024-07-15 06:11:39,576 DEBUG:dispatch pc=78, inst=PRECALL(arg=2, lineno=3)
2024-07-15 06:11:39,576 DEBUG:stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
2024-07-15 06:11:39,576 DEBUG:dispatch pc=82, inst=CALL(arg=2, lineno=3)
2024-07-15 06:11:39,576 DEBUG:stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
2024-07-15 06:11:39,576 DEBUG:dispatch pc=92, inst=STORE_FAST(arg=2, lineno=3)
2024-07-15 06:11:39,576 DEBUG:stack ['$82call.8']
2024-07-15 06:11:39,576 DEBUG:dispatch pc=94, inst=LOAD_CONST(arg=2, lineno=4)
2024-07-15 06:11:39,576 DEBUG:stack []
2024-07-15 06:11:39,576 DEBUG:dispatch pc=96, inst=LOAD_FAST(arg=2, lineno=4)
2024-07-15 06:11:39,576 DEBUG:stack ['$const94.9']
2024-07-15 06:11:39,576 DEBUG:dispatch pc=98, inst=LOAD_CONST(arg=0, lineno=4)
2024-07-15 06:11:39,576 DEBUG:stack ['$const94.9', '$out096.10']
2024-07-15 06:11:39,576 DEBUG:dispatch pc=100, inst=LOAD_CONST(arg=3, lineno=4)
2024-07-15 06:11:39,576 DEBUG:stack ['$const94.9', '$out096.10', '$const98.11']
2024-07-15 06:11:39,576 DEBUG:dispatch pc=102, inst=BUILD_SLICE(arg=2, lineno=4)
2024-07-15 06:11:39,576 DEBUG:stack ['$const94.9', '$out096.10', '$const98.11', '$const100.12']
2024-07-15 06:11:39,576 DEBUG:dispatch pc=104, inst=STORE_SUBSCR(arg=None, lineno=4)
2024-07-15 06:11:39,576 DEBUG:stack ['$const94.9', '$out096.10', '$102build_slice.14']
2024-07-15 06:11:39,576 DEBUG:dispatch pc=108, inst=LOAD_CONST(arg=2, lineno=5)
2024-07-15 06:11:39,576 DEBUG:stack []
2024-07-15 06:11:39,576 DEBUG:dispatch pc=110, inst=LOAD_FAST(arg=2, lineno=5)
2024-07-15 06:11:39,577 DEBUG:stack ['$const108.15']
2024-07-15 06:11:39,577 DEBUG:dispatch pc=112, inst=LOAD_CONST(arg=4, lineno=5)
2024-07-15 06:11:39,577 DEBUG:stack ['$const108.15', '$out0110.16']
2024-07-15 06:11:39,577 DEBUG:dispatch pc=114, inst=LOAD_CONST(arg=0, lineno=5)
2024-07-15 06:11:39,577 DEBUG:stack ['$const108.15', '$out0110.16', '$const112.17']
2024-07-15 06:11:39,577 DEBUG:dispatch pc=116, inst=BUILD_SLICE(arg=2, lineno=5)
2024-07-15 06:11:39,577 DEBUG:stack ['$const108.15', '$out0110.16', '$const112.17', '$const114.18']
2024-07-15 06:11:39,577 DEBUG:dispatch pc=118, inst=STORE_SUBSCR(arg=None, lineno=5)
2024-07-15 06:11:39,577 DEBUG:stack ['$const108.15', '$out0110.16', '$116build_slice.20']
2024-07-15 06:11:39,577 DEBUG:dispatch pc=122, inst=LOAD_GLOBAL(arg=9, lineno=6)
2024-07-15 06:11:39,577 DEBUG:stack []
2024-07-15 06:11:39,577 DEBUG:dispatch pc=134, inst=LOAD_GLOBAL(arg=11, lineno=6)
2024-07-15 06:11:39,577 DEBUG:stack ['$null$122.22', '$122load_global.21']
2024-07-15 06:11:39,577 DEBUG:dispatch pc=146, inst=LOAD_CONST(arg=2, lineno=6)
2024-07-15 06:11:39,577 DEBUG:stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23']
2024-07-15 06:11:39,577 DEBUG:dispatch pc=148, inst=LOAD_CONST(arg=4, lineno=6)
2024-07-15 06:11:39,577 DEBUG:stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25']
2024-07-15 06:11:39,577 DEBUG:dispatch pc=150, inst=PRECALL(arg=2, lineno=6)
2024-07-15 06:11:39,577 DEBUG:stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25', '$const148.26']
2024-07-15 06:11:39,577 DEBUG:dispatch pc=154, inst=CALL(arg=2, lineno=6)
2024-07-15 06:11:39,577 DEBUG:stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25', '$const148.26']
2024-07-15 06:11:39,577 DEBUG:dispatch pc=164, inst=UNARY_NEGATIVE(arg=None, lineno=6)
2024-07-15 06:11:39,577 DEBUG:stack ['$null$122.22', '$122load_global.21', '$154call.27']
2024-07-15 06:11:39,577 DEBUG:dispatch pc=166, inst=LOAD_FAST(arg=1, lineno=6)
2024-07-15 06:11:39,577 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28']
2024-07-15 06:11:39,577 DEBUG:dispatch pc=168, inst=LOAD_CONST(arg=2, lineno=6)
2024-07-15 06:11:39,577 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$full_shape0166.29']
2024-07-15 06:11:39,577 DEBUG:dispatch pc=170, inst=BINARY_SUBSCR(arg=None, lineno=6)
2024-07-15 06:11:39,577 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$full_shape0166.29', '$const168.30']
2024-07-15 06:11:39,577 DEBUG:dispatch pc=180, inst=LOAD_GLOBAL(arg=13, lineno=6)
2024-07-15 06:11:39,577 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31']
2024-07-15 06:11:39,578 DEBUG:dispatch pc=192, inst=LOAD_CONST(arg=2, lineno=6)
2024-07-15 06:11:39,578 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32']
2024-07-15 06:11:39,578 DEBUG:dispatch pc=194, inst=LOAD_CONST(arg=3, lineno=6)
2024-07-15 06:11:39,578 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34']
2024-07-15 06:11:39,578 DEBUG:dispatch pc=196, inst=PRECALL(arg=2, lineno=6)
2024-07-15 06:11:39,578 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34', '$const194.35']
2024-07-15 06:11:39,578 DEBUG:dispatch pc=200, inst=CALL(arg=2, lineno=6)
2024-07-15 06:11:39,578 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34', '$const194.35']
2024-07-15 06:11:39,578 DEBUG:dispatch pc=210, inst=BINARY_OP(arg=10, lineno=6)
2024-07-15 06:11:39,578 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$200call.36']
2024-07-15 06:11:39,578 DEBUG:dispatch pc=214, inst=PRECALL(arg=2, lineno=6)
2024-07-15 06:11:39,578 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$binop_sub210.37']
2024-07-15 06:11:39,578 DEBUG:dispatch pc=218, inst=CALL(arg=2, lineno=6)
2024-07-15 06:11:39,578 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$binop_sub210.37']
2024-07-15 06:11:39,578 DEBUG:dispatch pc=228, inst=GET_ITER(arg=None, lineno=6)
2024-07-15 06:11:39,578 DEBUG:stack ['$218call.38']
2024-07-15 06:11:39,578 DEBUG:end state. edges=[Edge(pc=230, stack=('$228get_iter.39',), blockstack=(), npush=0)]
2024-07-15 06:11:39,578 DEBUG:pending: deque([State(pc_initial=230 nstack_initial=1)])
2024-07-15 06:11:39,578 DEBUG:stack: ['$phi230.0']
2024-07-15 06:11:39,578 DEBUG:state.pc_initial: State(pc_initial=230 nstack_initial=1)
2024-07-15 06:11:39,578 DEBUG:dispatch pc=230, inst=FOR_ITER(arg=4, lineno=6)
2024-07-15 06:11:39,578 DEBUG:stack ['$phi230.0']
2024-07-15 06:11:39,578 DEBUG:end state. edges=[Edge(pc=240, stack=(), blockstack=(), npush=0), Edge(pc=232, stack=('$phi230.0', '$230for_iter.2'), blockstack=(), npush=0)]
2024-07-15 06:11:39,578 DEBUG:pending: deque([State(pc_initial=240 nstack_initial=0), State(pc_initial=232 nstack_initial=2)])
2024-07-15 06:11:39,578 DEBUG:stack: []
2024-07-15 06:11:39,578 DEBUG:state.pc_initial: State(pc_initial=240 nstack_initial=0)
2024-07-15 06:11:39,578 DEBUG:dispatch pc=240, inst=LOAD_FAST(arg=2, lineno=8)
2024-07-15 06:11:39,578 DEBUG:stack []
2024-07-15 06:11:39,578 DEBUG:dispatch pc=242, inst=RETURN_VALUE(arg=None, lineno=8)
2024-07-15 06:11:39,578 DEBUG:stack ['$out0240.0']
2024-07-15 06:11:39,578 DEBUG:end state. edges=[]
2024-07-15 06:11:39,578 DEBUG:pending: deque([State(pc_initial=232 nstack_initial=2)])
2024-07-15 06:11:39,579 DEBUG:stack: ['$phi232.0', '$phi232.1']
2024-07-15 06:11:39,579 DEBUG:state.pc_initial: State(pc_initial=232 nstack_initial=2)
2024-07-15 06:11:39,579 DEBUG:dispatch pc=232, inst=STORE_FAST(arg=3, lineno=6)
2024-07-15 06:11:39,579 DEBUG:stack ['$phi232.0', '$phi232.1']
2024-07-15 06:11:39,579 DEBUG:dispatch pc=234, inst=LOAD_CONST(arg=2, lineno=7)
2024-07-15 06:11:39,579 DEBUG:stack ['$phi232.0']
2024-07-15 06:11:39,579 DEBUG:dispatch pc=236, inst=STORE_FAST(arg=4, lineno=7)
2024-07-15 06:11:39,579 DEBUG:stack ['$phi232.0', '$const234.2']
2024-07-15 06:11:39,579 DEBUG:dispatch pc=238, inst=JUMP_BACKWARD(arg=5, lineno=7)
2024-07-15 06:11:39,579 DEBUG:stack ['$phi232.0']
2024-07-15 06:11:39,579 DEBUG:end state. edges=[Edge(pc=230, stack=('$phi232.0',), blockstack=(), npush=0)]
2024-07-15 06:11:39,579 DEBUG:pending: deque([State(pc_initial=230 nstack_initial=1)])
2024-07-15 06:11:39,579 DEBUG:-------------------------Prune PHIs-------------------------
2024-07-15 06:11:39,579 DEBUG:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=230 nstack_initial=1): {'$phi230.0'},
             State(pc_initial=232 nstack_initial=2): {'$phi232.1'},
             State(pc_initial=240 nstack_initial=0): set()})
2024-07-15 06:11:39,579 DEBUG:defmap: {'$phi230.0': State(pc_initial=0 nstack_initial=0),
 '$phi232.1': State(pc_initial=230 nstack_initial=1)}
2024-07-15 06:11:39,579 DEBUG:phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi232.0',
                            State(pc_initial=232 nstack_initial=2))},
             '$phi232.0': {('$phi230.0',
                            State(pc_initial=230 nstack_initial=1))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-07-15 06:11:39,579 DEBUG:changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi230.0',
                            State(pc_initial=230 nstack_initial=1))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-07-15 06:11:39,580 DEBUG:changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-07-15 06:11:39,580 DEBUG:changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-07-15 06:11:39,580 DEBUG:keep phismap: {'$phi230.0': {('$228get_iter.39', State(pc_initial=0 nstack_initial=0))},
 '$phi232.1': {('$230for_iter.2', State(pc_initial=230 nstack_initial=1))}}
2024-07-15 06:11:39,580 DEBUG:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi230.0': '$228get_iter.39'},
             State(pc_initial=230 nstack_initial=1): {'$phi232.1': '$230for_iter.2'}})
2024-07-15 06:11:39,580 DEBUG:----------------------DONE Prune PHIs-----------------------
2024-07-15 06:11:39,580 DEBUG:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'item': '$x4.0', 'res': '$6load_attr.1'}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'value': '$6load_attr.1'}), (18, {'idx': 1, 'res': '$18load_global.2'}), (20, {}), (22, {}), (24, {}), (26, {}), (28, {}), (30, {'item': '$18load_global.2', 'res': '$30load_method.4'}), (32, {}), (34, {}), (36, {}), (38, {}), (40, {}), (42, {}), (44, {}), (46, {}), (48, {}), (50, {}), (52, {'res': '$full_shape052.5'}), (54, {'idx': 1, 'res': '$54load_global.6'}), (56, {}), (58, {}), (60, {}), (62, {}), (64, {}), (66, {'item': '$54load_global.6', 'res': '$66load_attr.7'}), (68, {}), (70, {}), (72, {}), (74, {}), (78, {}), (80, {}), (82, {'func': '$30load_method.4', 'args': ['$full_shape052.5', '$66load_attr.7'], 'kw_names': 1, 'res': '$82call.8'}), (84, {}), (86, {}), (88, {}), (90, {}), (92, {'value': '$82call.8'}), (94, {'res': '$const94.9'}), (96, {'res': '$out096.10'}), (98, {'res': '$const98.11'}), (100, {'res': '$const100.12'}), (102, {'start': '$const98.11', 'stop': '$const100.12', 'step': None, 'res': '$102build_slice.14', 'slicevar': '$102build_slice.13'}), (104, {'target': '$out096.10', 'index': '$102build_slice.14', 'value': '$const94.9'}), (106, {}), (108, {'res': '$const108.15'}), (110, {'res': '$out0110.16'}), (112, {'res': '$const112.17'}), (114, {'res': '$const114.18'}), (116, {'start': '$const112.17', 'stop': '$const114.18', 'step': None, 'res': '$116build_slice.20', 'slicevar': '$116build_slice.19'}), (118, {'target': '$out0110.16', 'index': '$116build_slice.20', 'value': '$const108.15'}), (120, {}), (122, {'idx': 4, 'res': '$122load_global.21'}), (124, {}), (126, {}), (128, {}), (130, {}), (132, {}), (134, {'idx': 5, 'res': '$134load_global.23'}), (136, {}), (138, {}), (140, {}), (142, {}), (144, {}), (146, {'res': '$const146.25'}), (148, {'res': '$const148.26'}), (150, {}), (152, {}), (154, {'func': '$134load_global.23', 'args': ['$const146.25', '$const148.26'], 'kw_names': None, 'res': '$154call.27'}), (156, {}), (158, {}), (160, {}), (162, {}), (164, {'value': '$154call.27', 'res': '$164unary_negative.28'}), (166, {'res': '$full_shape0166.29'}), (168, {'res': '$const168.30'}), (170, {'index': '$const168.30', 'target': '$full_shape0166.29', 'res': '$170binary_subscr.31'}), (172, {}), (174, {}), (176, {}), (178, {}), (180, {'idx': 6, 'res': '$180load_global.32'}), (182, {}), (184, {}), (186, {}), (188, {}), (190, {}), (192, {'res': '$const192.34'}), (194, {'res': '$const194.35'}), (196, {}), (198, {}), (200, {'func': '$180load_global.32', 'args': ['$const192.34', '$const194.35'], 'kw_names': None, 'res': '$200call.36'}), (202, {}), (204, {}), (206, {}), (208, {}), (210, {'op': '-', 'lhs': '$170binary_subscr.31', 'rhs': '$200call.36', 'res': '$binop_sub210.37'}), (212, {}), (214, {}), (216, {}), (218, {'func': '$122load_global.21', 'args': ['$164unary_negative.28', '$binop_sub210.37'], 'kw_names': None, 'res': '$218call.38'}), (220, {}), (222, {}), (224, {}), (226, {}), (228, {'value': '$218call.38', 'res': '$228get_iter.39'})), outgoing_phis={'$phi230.0': '$228get_iter.39'}, blockstack=(), active_try_block=None, outgoing_edgepushed={230: ('$228get_iter.39',)})
2024-07-15 06:11:39,580 DEBUG:block_infos State(pc_initial=230 nstack_initial=1):
AdaptBlockInfo(insts=((230, {'iterator': '$phi230.0', 'pair': '$230for_iter.1', 'indval': '$230for_iter.2', 'pred': '$230for_iter.3'}),), outgoing_phis={'$phi232.1': '$230for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={240: (), 232: ('$phi230.0', '$230for_iter.2')})
2024-07-15 06:11:39,580 DEBUG:block_infos State(pc_initial=232 nstack_initial=2):
AdaptBlockInfo(insts=((232, {'value': '$phi232.1'}), (234, {'res': '$const234.2'}), (236, {'value': '$const234.2'}), (238, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={230: ('$phi232.0',)})
2024-07-15 06:11:39,580 DEBUG:block_infos State(pc_initial=240 nstack_initial=0):
AdaptBlockInfo(insts=((240, {'res': '$out0240.0'}), (242, {'retval': '$out0240.0', 'castval': '$242return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-15 06:11:39,581 DEBUG:label 0:
    x = arg(0, name=x)                       ['x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $18load_global.2 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$18load_global.2']
    $30load_method.4 = getattr(value=$18load_global.2, attr=empty) ['$18load_global.2', '$30load_method.4']
    $54load_global.6 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$54load_global.6']
    $66load_attr.7 = getattr(value=$54load_global.6, attr=bool_) ['$54load_global.6', '$66load_attr.7']
    out0 = call $30load_method.4(full_shape0, func=$30load_method.4, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7, <string>:3))], vararg=None, varkwarg=None, target=None) ['$30load_method.4', '$66load_attr.7', 'full_shape0', 'out0']
    $const94.9 = const(int, 0)               ['$const94.9']
    $const98.11 = const(NoneType, None)      ['$const98.11']
    $const100.12 = const(int, 1)             ['$const100.12']
    $102build_slice.13 = global(slice: <class 'slice'>) ['$102build_slice.13']
    $102build_slice.14 = call $102build_slice.13($const98.11, $const100.12, func=$102build_slice.13, args=(Var($const98.11, <string>:4), Var($const100.12, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$102build_slice.13', '$102build_slice.14', '$const100.12', '$const98.11']
    out0[$102build_slice.14] = $const94.9    ['$102build_slice.14', '$const94.9', 'out0']
    $const108.15 = const(int, 0)             ['$const108.15']
    $const112.17 = const(int, -1)            ['$const112.17']
    $const114.18 = const(NoneType, None)     ['$const114.18']
    $116build_slice.19 = global(slice: <class 'slice'>) ['$116build_slice.19']
    $116build_slice.20 = call $116build_slice.19($const112.17, $const114.18, func=$116build_slice.19, args=(Var($const112.17, <string>:5), Var($const114.18, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$116build_slice.19', '$116build_slice.20', '$const112.17', '$const114.18']
    out0[$116build_slice.20] = $const108.15  ['$116build_slice.20', '$const108.15', 'out0']
    $122load_global.21 = global(range: <class 'range'>) ['$122load_global.21']
    $134load_global.23 = global(min: <built-in function min>) ['$134load_global.23']
    $const146.25 = const(int, 0)             ['$const146.25']
    $const148.26 = const(int, -1)            ['$const148.26']
    $154call.27 = call $134load_global.23($const146.25, $const148.26, func=$134load_global.23, args=[Var($const146.25, <string>:6), Var($const148.26, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$134load_global.23', '$154call.27', '$const146.25', '$const148.26']
    $164unary_negative.28 = unary(fn=<built-in function neg>, value=$154call.27) ['$154call.27', '$164unary_negative.28']
    $const168.30 = const(int, 0)             ['$const168.30']
    $170binary_subscr.31 = getitem(value=full_shape0, index=$const168.30, fn=<built-in function getitem>) ['$170binary_subscr.31', '$const168.30', 'full_shape0']
    $180load_global.32 = global(max: <built-in function max>) ['$180load_global.32']
    $const192.34 = const(int, 0)             ['$const192.34']
    $const194.35 = const(int, 1)             ['$const194.35']
    $200call.36 = call $180load_global.32($const192.34, $const194.35, func=$180load_global.32, args=[Var($const192.34, <string>:6), Var($const194.35, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$180load_global.32', '$200call.36', '$const192.34', '$const194.35']
    $binop_sub210.37 = $170binary_subscr.31 - $200call.36 ['$170binary_subscr.31', '$200call.36', '$binop_sub210.37']
    $218call.38 = call $122load_global.21($164unary_negative.28, $binop_sub210.37, func=$122load_global.21, args=[Var($164unary_negative.28, <string>:6), Var($binop_sub210.37, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$122load_global.21', '$164unary_negative.28', '$218call.38', '$binop_sub210.37']
    $228get_iter.39 = getiter(value=$218call.38) ['$218call.38', '$228get_iter.39']
    $phi230.0 = $228get_iter.39              ['$228get_iter.39', '$phi230.0']
    jump 230                                 []
label 230:
    $230for_iter.1 = iternext(value=$phi230.0) ['$230for_iter.1', '$phi230.0']
    $230for_iter.2 = pair_first(value=$230for_iter.1) ['$230for_iter.1', '$230for_iter.2']
    $230for_iter.3 = pair_second(value=$230for_iter.1) ['$230for_iter.1', '$230for_iter.3']
    $phi232.1 = $230for_iter.2               ['$230for_iter.2', '$phi232.1']
    branch $230for_iter.3, 232, 240          ['$230for_iter.3']
label 232:
    index00 = $phi232.1                      ['$phi232.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 230                                 []
label 240:
    $242return_value.1 = cast(value=out0)    ['$242return_value.1', 'out0']
    return $242return_value.1                ['$242return_value.1']

2024-07-15 06:11:39,596 DEBUG:==== SSA block analysis pass on 0
2024-07-15 06:11:39,596 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B6928950>
2024-07-15 06:11:39,596 DEBUG:on stmt: x = arg(0, name=x)
2024-07-15 06:11:39,596 DEBUG:on stmt: full_shape0 = getattr(value=x, attr=shape)
2024-07-15 06:11:39,596 DEBUG:on stmt: $18load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:39,596 DEBUG:on stmt: $30load_method.4.1 = getattr(value=$18load_global.2.1, attr=empty)
2024-07-15 06:11:39,596 DEBUG:on stmt: $54load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:39,596 DEBUG:on stmt: $66load_attr.7.1 = getattr(value=$54load_global.6.1, attr=bool_)
2024-07-15 06:11:39,596 DEBUG:on stmt: out0 = call $30load_method.4.1(full_shape0, func=$30load_method.4.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:39,596 DEBUG:on stmt: $const94.9.1 = const(int, 0)
2024-07-15 06:11:39,596 DEBUG:on stmt: $const98.11.1 = const(NoneType, None)
2024-07-15 06:11:39,596 DEBUG:on stmt: $const100.12.1 = const(int, 1)
2024-07-15 06:11:39,596 DEBUG:on stmt: $102build_slice.13.1 = global(slice: <class 'slice'>)
2024-07-15 06:11:39,596 DEBUG:on stmt: $102build_slice.14.1 = call $102build_slice.13.1($const98.11.1, $const100.12.1, func=$102build_slice.13.1, args=(Var($const98.11.1, <string>:4), Var($const100.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:39,596 DEBUG:on stmt: out0[$102build_slice.14.1] = $const94.9.1
2024-07-15 06:11:39,596 DEBUG:on stmt: $const108.15.1 = const(int, 0)
2024-07-15 06:11:39,596 DEBUG:on stmt: $const112.17.1 = const(int, -1)
2024-07-15 06:11:39,596 DEBUG:on stmt: $const114.18.1 = const(NoneType, None)
2024-07-15 06:11:39,596 DEBUG:on stmt: $116build_slice.19.1 = global(slice: <class 'slice'>)
2024-07-15 06:11:39,596 DEBUG:on stmt: $116build_slice.20.1 = call $116build_slice.19.1($const112.17.1, $const114.18.1, func=$116build_slice.19.1, args=(Var($const112.17.1, <string>:5), Var($const114.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:39,596 DEBUG:on stmt: out0[$116build_slice.20.1] = $const108.15.1
2024-07-15 06:11:39,596 DEBUG:on stmt: $122load_global.21.1 = global(range: <class 'range'>)
2024-07-15 06:11:39,596 DEBUG:on stmt: $134load_global.23.1 = global(min: <built-in function min>)
2024-07-15 06:11:39,596 DEBUG:on stmt: $const146.25.1 = const(int, 0)
2024-07-15 06:11:39,596 DEBUG:on stmt: $const148.26.1 = const(int, -1)
2024-07-15 06:11:39,596 DEBUG:on stmt: $154call.27.1 = call $134load_global.23.1($const146.25.1, $const148.26.1, func=$134load_global.23.1, args=[Var($const146.25.1, <string>:6), Var($const148.26.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:39,596 DEBUG:on stmt: $164unary_negative.28.1 = unary(fn=<built-in function neg>, value=$154call.27.1)
2024-07-15 06:11:39,596 DEBUG:on stmt: $const168.30.1 = const(int, 0)
2024-07-15 06:11:39,596 DEBUG:on stmt: $170binary_subscr.31.1 = getitem(value=full_shape0, index=$const168.30.1, fn=<built-in function getitem>)
2024-07-15 06:11:39,596 DEBUG:on stmt: $180load_global.32.1 = global(max: <built-in function max>)
2024-07-15 06:11:39,596 DEBUG:on stmt: $const192.34.1 = const(int, 0)
2024-07-15 06:11:39,596 DEBUG:on stmt: $const194.35.1 = const(int, 1)
2024-07-15 06:11:39,596 DEBUG:on stmt: $200call.36.1 = call $180load_global.32.1($const192.34.1, $const194.35.1, func=$180load_global.32.1, args=[Var($const192.34.1, <string>:6), Var($const194.35.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:39,597 DEBUG:on stmt: $binop_sub210.37.1 = $170binary_subscr.31.1 - $200call.36.1
2024-07-15 06:11:39,597 DEBUG:on stmt: $218call.38.1 = call $122load_global.21.1($164unary_negative.28.1, $binop_sub210.37.1, func=$122load_global.21.1, args=[Var($164unary_negative.28.1, <string>:6), Var($binop_sub210.37.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:39,597 DEBUG:on stmt: $228get_iter.39.1 = getiter(value=$218call.38.1)
2024-07-15 06:11:39,597 DEBUG:on stmt: $phi230.0.1 = $228get_iter.39.1
2024-07-15 06:11:39,597 DEBUG:on stmt: jump 230
2024-07-15 06:11:39,597 DEBUG:==== SSA block analysis pass on 230
2024-07-15 06:11:39,597 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B6928950>
2024-07-15 06:11:39,597 DEBUG:on stmt: $230for_iter.1.1 = iternext(value=$phi230.0.1)
2024-07-15 06:11:39,597 DEBUG:on stmt: $230for_iter.2.1 = pair_first(value=$230for_iter.1.1)
2024-07-15 06:11:39,597 DEBUG:on stmt: $230for_iter.3.1 = pair_second(value=$230for_iter.1.1)
2024-07-15 06:11:39,597 DEBUG:on stmt: $phi232.1.1 = $230for_iter.2.1
2024-07-15 06:11:39,597 DEBUG:on stmt: branch $230for_iter.3.1, 232, 242
2024-07-15 06:11:39,597 DEBUG:==== SSA block analysis pass on 232
2024-07-15 06:11:39,597 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B6928950>
2024-07-15 06:11:39,597 DEBUG:on stmt: index00 = $phi232.1.1
2024-07-15 06:11:39,597 DEBUG:on stmt: jump 240
2024-07-15 06:11:39,597 DEBUG:==== SSA block analysis pass on 242
2024-07-15 06:11:39,597 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B6928950>
2024-07-15 06:11:39,597 DEBUG:on stmt: $242return_value.1.1 = cast(value=out0)
2024-07-15 06:11:39,597 DEBUG:on stmt: return $242return_value.1.1
2024-07-15 06:11:39,597 DEBUG:==== SSA block analysis pass on 240
2024-07-15 06:11:39,597 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B6928950>
2024-07-15 06:11:39,597 DEBUG:on stmt: $const6.1 = const(int, 0)
2024-07-15 06:11:39,597 DEBUG:on stmt: stencil_index = $const6.1 + index00
2024-07-15 06:11:39,597 DEBUG:on stmt: $8binary_subscr.2 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-07-15 06:11:39,597 DEBUG:on stmt: $const20.4 = const(int, -1)
2024-07-15 06:11:39,597 DEBUG:on stmt: stencil_index.1 = $const20.4 + index00
2024-07-15 06:11:39,597 DEBUG:on stmt: $22binary_subscr.5 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2024-07-15 06:11:39,597 DEBUG:on stmt: $32compare_op.6 = $8binary_subscr.2 < $22binary_subscr.5
2024-07-15 06:11:39,597 DEBUG:on stmt: $const40.8 = const(int, 0)
2024-07-15 06:11:39,597 DEBUG:on stmt: stencil_index.2 = $const40.8 + index00
2024-07-15 06:11:39,598 DEBUG:on stmt: $42binary_subscr.9 = getitem(value=x, index=stencil_index.2, fn=<built-in function getitem>)
2024-07-15 06:11:39,598 DEBUG:on stmt: $const54.11 = const(int, 1)
2024-07-15 06:11:39,598 DEBUG:on stmt: stencil_index.3 = $const54.11 + index00
2024-07-15 06:11:39,598 DEBUG:on stmt: $56binary_subscr.12 = getitem(value=x, index=stencil_index.3, fn=<built-in function getitem>)
2024-07-15 06:11:39,598 DEBUG:on stmt: $66compare_op.13 = $42binary_subscr.9 <= $56binary_subscr.12
2024-07-15 06:11:39,598 DEBUG:on stmt: $binop_and_72.14 = $32compare_op.6 & $66compare_op.13
2024-07-15 06:11:39,598 DEBUG:on stmt: $76return_value.15 = cast(value=$binop_and_72.14)
2024-07-15 06:11:39,598 DEBUG:on stmt: out0[index00] = $76return_value.15
2024-07-15 06:11:39,598 DEBUG:on stmt: jump 241
2024-07-15 06:11:39,598 DEBUG:==== SSA block analysis pass on 241
2024-07-15 06:11:39,598 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B6928950>
2024-07-15 06:11:39,598 DEBUG:on stmt: jump 230
2024-07-15 06:11:39,599 DEBUG:defs defaultdict(<class 'list'>,
            {'$102build_slice.13.1': [(<numba.core.ir.Assign object at 0x00000221B68CAE10>,
                                       0)],
             '$102build_slice.14.1': [(<numba.core.ir.Assign object at 0x00000221B68990D0>,
                                       0)],
             '$116build_slice.19.1': [(<numba.core.ir.Assign object at 0x00000221B6898210>,
                                       0)],
             '$116build_slice.20.1': [(<numba.core.ir.Assign object at 0x00000221B6899990>,
                                       0)],
             '$122load_global.21.1': [(<numba.core.ir.Assign object at 0x00000221B6898C10>,
                                       0)],
             '$134load_global.23.1': [(<numba.core.ir.Assign object at 0x00000221B6898450>,
                                       0)],
             '$154call.27.1': [(<numba.core.ir.Assign object at 0x00000221B6898F50>,
                                0)],
             '$164unary_negative.28.1': [(<numba.core.ir.Assign object at 0x00000221B6899A10>,
                                          0)],
             '$170binary_subscr.31.1': [(<numba.core.ir.Assign object at 0x00000221B689A650>,
                                         0)],
             '$180load_global.32.1': [(<numba.core.ir.Assign object at 0x00000221B689A750>,
                                       0)],
             '$18load_global.2.1': [(<numba.core.ir.Assign object at 0x00000221B68CB010>,
                                     0)],
             '$200call.36.1': [(<numba.core.ir.Assign object at 0x00000221B6898610>,
                                0)],
             '$218call.38.1': [(<numba.core.ir.Assign object at 0x00000221B6898ED0>,
                                0)],
             '$228get_iter.39.1': [(<numba.core.ir.Assign object at 0x00000221B689B990>,
                                    0)],
             '$22binary_subscr.5': [(<numba.core.ir.Assign object at 0x00000221B68A5790>,
                                     240)],
             '$230for_iter.1.1': [(<numba.core.ir.Assign object at 0x00000221B689BF50>,
                                   230)],
             '$230for_iter.2.1': [(<numba.core.ir.Assign object at 0x00000221B689BE10>,
                                   230)],
             '$230for_iter.3.1': [(<numba.core.ir.Assign object at 0x00000221B689BF10>,
                                   230)],
             '$242return_value.1.1': [(<numba.core.ir.Assign object at 0x00000221B692AE90>,
                                       242)],
             '$30load_method.4.1': [(<numba.core.ir.Assign object at 0x00000221B68C8550>,
                                     0)],
             '$32compare_op.6': [(<numba.core.ir.Assign object at 0x00000221B6934ED0>,
                                  240)],
             '$42binary_subscr.9': [(<numba.core.ir.Assign object at 0x00000221B68A5B50>,
                                     240)],
             '$54load_global.6.1': [(<numba.core.ir.Assign object at 0x00000221B68CB550>,
                                     0)],
             '$56binary_subscr.12': [(<numba.core.ir.Assign object at 0x00000221B68A5F10>,
                                      240)],
             '$66compare_op.13': [(<numba.core.ir.Assign object at 0x00000221B6934710>,
                                   240)],
             '$66load_attr.7.1': [(<numba.core.ir.Assign object at 0x00000221B68C88D0>,
                                   0)],
             '$76return_value.15': [(<numba.core.ir.Assign object at 0x00000221B68A7190>,
                                     240)],
             '$8binary_subscr.2': [(<numba.core.ir.Assign object at 0x00000221B68A5610>,
                                    240)],
             '$binop_and_72.14': [(<numba.core.ir.Assign object at 0x00000221B68A7E50>,
                                   240)],
             '$binop_sub210.37.1': [(<numba.core.ir.Assign object at 0x00000221B6898650>,
                                     0)],
             '$const100.12.1': [(<numba.core.ir.Assign object at 0x00000221B6899890>,
                                 0)],
             '$const108.15.1': [(<numba.core.ir.Assign object at 0x00000221B6899BD0>,
                                 0)],
             '$const112.17.1': [(<numba.core.ir.Assign object at 0x00000221B6898BD0>,
                                 0)],
             '$const114.18.1': [(<numba.core.ir.Assign object at 0x00000221B6898750>,
                                 0)],
             '$const146.25.1': [(<numba.core.ir.Assign object at 0x00000221B689A810>,
                                 0)],
             '$const148.26.1': [(<numba.core.ir.Assign object at 0x00000221B689B910>,
                                 0)],
             '$const168.30.1': [(<numba.core.ir.Assign object at 0x00000221B689A390>,
                                 0)],
             '$const192.34.1': [(<numba.core.ir.Assign object at 0x00000221B689A7D0>,
                                 0)],
             '$const194.35.1': [(<numba.core.ir.Assign object at 0x00000221B68996D0>,
                                 0)],
             '$const20.4': [(<numba.core.ir.Assign object at 0x00000221B68A2B90>,
                             240)],
             '$const40.8': [(<numba.core.ir.Assign object at 0x00000221B6936390>,
                             240)],
             '$const54.11': [(<numba.core.ir.Assign object at 0x00000221B6937390>,
                              240)],
             '$const6.1': [(<numba.core.ir.Assign object at 0x00000221B68A0190>,
                            240)],
             '$const94.9.1': [(<numba.core.ir.Assign object at 0x00000221B6898790>,
                               0)],
             '$const98.11.1': [(<numba.core.ir.Assign object at 0x00000221B68999D0>,
                                0)],
             '$phi230.0.1': [(<numba.core.ir.Assign object at 0x00000221B68C9690>,
                              0)],
             '$phi232.1.1': [(<numba.core.ir.Assign object at 0x00000221B689BA10>,
                              230)],
             'full_shape0': [(<numba.core.ir.Assign object at 0x00000221B68CA750>,
                              0)],
             'index00': [(<numba.core.ir.Assign object at 0x00000221B6899D50>,
                          232)],
             'out0': [(<numba.core.ir.Assign object at 0x00000221B68C8690>, 0)],
             'stencil_index': [(<numba.core.ir.Assign object at 0x00000221B68A5590>,
                                240)],
             'stencil_index.1': [(<numba.core.ir.Assign object at 0x00000221B68A56D0>,
                                  240)],
             'stencil_index.2': [(<numba.core.ir.Assign object at 0x00000221B68A51D0>,
                                  240)],
             'stencil_index.3': [(<numba.core.ir.Assign object at 0x00000221B68A5E10>,
                                  240)],
             'x': [(<numba.core.ir.Assign object at 0x00000221B68CB250>, 0)]})
2024-07-15 06:11:39,599 DEBUG:SSA violators <numba.core.utils.OrderedSet object at 0x00000221B6928950>
2024-07-15 06:11:39,965 DEBUG:bytecode dump:
>          0	NOP(arg=None, lineno=1068)
           2	RESUME(arg=0, lineno=1068)
           4	LOAD_GLOBAL(arg=1, lineno=1082)
          16	LOAD_FAST(arg=0, lineno=1082)
          18	PRECALL(arg=1, lineno=1082)
          22	CALL(arg=1, lineno=1082)
          32	LOAD_FAST(arg=1, lineno=1082)
          34	LOAD_CONST(arg=1, lineno=1082)
          36	LOAD_CONST(arg=1, lineno=1082)
          38	BUILD_SLICE(arg=2, lineno=1082)
          40	STORE_SUBSCR(arg=None, lineno=1082)
          44	LOAD_CONST(arg=1, lineno=1082)
          46	RETURN_VALUE(arg=None, lineno=1082)
2024-07-15 06:11:39,965 DEBUG:pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-15 06:11:39,965 DEBUG:stack: []
2024-07-15 06:11:39,966 DEBUG:state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-15 06:11:39,966 DEBUG:dispatch pc=0, inst=NOP(arg=None, lineno=1068)
2024-07-15 06:11:39,966 DEBUG:stack []
2024-07-15 06:11:39,966 DEBUG:dispatch pc=2, inst=RESUME(arg=0, lineno=1068)
2024-07-15 06:11:39,966 DEBUG:stack []
2024-07-15 06:11:39,966 DEBUG:dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=1082)
2024-07-15 06:11:39,966 DEBUG:stack []
2024-07-15 06:11:39,966 DEBUG:dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=1082)
2024-07-15 06:11:39,966 DEBUG:stack ['$null$4.1', '$4load_global.0']
2024-07-15 06:11:39,966 DEBUG:dispatch pc=18, inst=PRECALL(arg=1, lineno=1082)
2024-07-15 06:11:39,966 DEBUG:stack ['$null$4.1', '$4load_global.0', '$x16.2']
2024-07-15 06:11:39,966 DEBUG:dispatch pc=22, inst=CALL(arg=1, lineno=1082)
2024-07-15 06:11:39,966 DEBUG:stack ['$null$4.1', '$4load_global.0', '$x16.2']
2024-07-15 06:11:39,967 DEBUG:dispatch pc=32, inst=LOAD_FAST(arg=1, lineno=1082)
2024-07-15 06:11:39,967 DEBUG:stack ['$22call.3']
2024-07-15 06:11:39,967 DEBUG:dispatch pc=34, inst=LOAD_CONST(arg=1, lineno=1082)
2024-07-15 06:11:39,967 DEBUG:stack ['$22call.3', '$y32.4']
2024-07-15 06:11:39,967 DEBUG:dispatch pc=36, inst=LOAD_CONST(arg=1, lineno=1082)
2024-07-15 06:11:39,967 DEBUG:stack ['$22call.3', '$y32.4', '$const34.5']
2024-07-15 06:11:39,967 DEBUG:dispatch pc=38, inst=BUILD_SLICE(arg=2, lineno=1082)
2024-07-15 06:11:39,967 DEBUG:stack ['$22call.3', '$y32.4', '$const34.5', '$const36.6']
2024-07-15 06:11:39,967 DEBUG:dispatch pc=40, inst=STORE_SUBSCR(arg=None, lineno=1082)
2024-07-15 06:11:39,967 DEBUG:stack ['$22call.3', '$y32.4', '$38build_slice.8']
2024-07-15 06:11:39,967 DEBUG:dispatch pc=44, inst=LOAD_CONST(arg=1, lineno=1082)
2024-07-15 06:11:39,967 DEBUG:stack []
2024-07-15 06:11:39,967 DEBUG:dispatch pc=46, inst=RETURN_VALUE(arg=None, lineno=1082)
2024-07-15 06:11:39,967 DEBUG:stack ['$const44.9']
2024-07-15 06:11:39,967 DEBUG:end state. edges=[]
2024-07-15 06:11:39,967 DEBUG:-------------------------Prune PHIs-------------------------
2024-07-15 06:11:39,967 DEBUG:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-07-15 06:11:39,968 DEBUG:defmap: {}
2024-07-15 06:11:39,968 DEBUG:phismap: defaultdict(<class 'set'>, {})
2024-07-15 06:11:39,968 DEBUG:changing phismap: defaultdict(<class 'set'>, {})
2024-07-15 06:11:39,968 DEBUG:keep phismap: {}
2024-07-15 06:11:39,968 DEBUG:new_out: defaultdict(<class 'dict'>, {})
2024-07-15 06:11:39,968 DEBUG:----------------------DONE Prune PHIs-----------------------
2024-07-15 06:11:39,968 DEBUG:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (6, {}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$x16.2'}), (18, {}), (20, {}), (22, {'func': '$4load_global.0', 'args': ['$x16.2'], 'kw_names': None, 'res': '$22call.3'}), (24, {}), (26, {}), (28, {}), (30, {}), (32, {'res': '$y32.4'}), (34, {'res': '$const34.5'}), (36, {'res': '$const36.6'}), (38, {'start': '$const34.5', 'stop': '$const36.6', 'step': None, 'res': '$38build_slice.8', 'slicevar': '$38build_slice.7'}), (40, {'target': '$y32.4', 'index': '$38build_slice.8', 'value': '$22call.3'}), (42, {}), (44, {'res': '$const44.9'}), (46, {'retval': '$const44.9', 'castval': '$46return_value.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-15 06:11:39,968 DEBUG:label 0:
    x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    $4load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x00000221B6076710>) ['$4load_global.0']
    $22call.3 = call $4load_global.0(x, func=$4load_global.0, args=[Var(x, utils.py:1068)], kws=(), vararg=None, varkwarg=None, target=None) ['$22call.3', '$4load_global.0', 'x']
    $const34.5 = const(NoneType, None)       ['$const34.5']
    $const36.6 = const(NoneType, None)       ['$const36.6']
    $38build_slice.7 = global(slice: <class 'slice'>) ['$38build_slice.7']
    $38build_slice.8 = call $38build_slice.7($const34.5, $const36.6, func=$38build_slice.7, args=(Var($const34.5, utils.py:1082), Var($const36.6, utils.py:1082)), kws=(), vararg=None, varkwarg=None, target=None) ['$38build_slice.7', '$38build_slice.8', '$const34.5', '$const36.6']
    y[$38build_slice.8] = $22call.3          ['$22call.3', '$38build_slice.8', 'y']
    $const44.9 = const(NoneType, None)       ['$const44.9']
    $46return_value.10 = cast(value=$const44.9) ['$46return_value.10', '$const44.9']
    return $46return_value.10                ['$46return_value.10']

2024-07-15 06:11:39,975 DEBUG:==== SSA block analysis pass on 0
2024-07-15 06:11:39,975 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5EBC710>
2024-07-15 06:11:39,975 DEBUG:on stmt: x = arg(0, name=x)
2024-07-15 06:11:39,975 DEBUG:on stmt: y = arg(1, name=y)
2024-07-15 06:11:39,975 DEBUG:on stmt: $4load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x00000221B6076710>)
2024-07-15 06:11:39,975 DEBUG:on stmt: $22call.3 = call $4load_global.0(x, func=$4load_global.0, args=[Var(x, utils.py:1068)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:39,975 DEBUG:on stmt: $const34.5 = const(NoneType, None)
2024-07-15 06:11:39,975 DEBUG:on stmt: $const36.6 = const(NoneType, None)
2024-07-15 06:11:39,976 DEBUG:on stmt: $38build_slice.7 = global(slice: <class 'slice'>)
2024-07-15 06:11:39,976 DEBUG:on stmt: $38build_slice.8 = call $38build_slice.7($const34.5, $const36.6, func=$38build_slice.7, args=(Var($const34.5, utils.py:1082), Var($const36.6, utils.py:1082)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:39,976 DEBUG:on stmt: y[slice(None, None, None)] = $22call.3
2024-07-15 06:11:39,976 DEBUG:on stmt: $const44.9 = const(NoneType, None)
2024-07-15 06:11:39,976 DEBUG:on stmt: $46return_value.10 = cast(value=$const44.9)
2024-07-15 06:11:39,976 DEBUG:on stmt: return $46return_value.10
2024-07-15 06:11:39,976 DEBUG:defs defaultdict(<class 'list'>,
            {'$22call.3': [(<numba.core.ir.Assign object at 0x00000221B5EC1D90>,
                            0)],
             '$38build_slice.7': [(<numba.core.ir.Assign object at 0x00000221B5EC27D0>,
                                   0)],
             '$38build_slice.8': [(<numba.core.ir.Assign object at 0x00000221B5EC2790>,
                                   0)],
             '$46return_value.10': [(<numba.core.ir.Assign object at 0x00000221B5EC2A90>,
                                     0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x00000221B5EC1810>,
                                  0)],
             '$const34.5': [(<numba.core.ir.Assign object at 0x00000221B5EC2090>,
                             0)],
             '$const36.6': [(<numba.core.ir.Assign object at 0x00000221B5EC2510>,
                             0)],
             '$const44.9': [(<numba.core.ir.Assign object at 0x00000221B5EC2DD0>,
                             0)],
             'x': [(<numba.core.ir.Assign object at 0x00000221B5EC15D0>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x00000221B5EC1850>, 0)]})
2024-07-15 06:11:39,976 DEBUG:SSA violators <numba.core.utils.OrderedSet object at 0x00000221B5EBC710>
2024-07-15 06:11:39,995 DEBUG:bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	RESUME(arg=0, lineno=1)
           4	LOAD_FAST(arg=0, lineno=2)
           6	LOAD_ATTR(arg=0, lineno=2)
          16	STORE_FAST(arg=1, lineno=2)
          18	LOAD_GLOBAL(arg=2, lineno=3)
          30	LOAD_METHOD(arg=2, lineno=3)
          52	LOAD_FAST(arg=1, lineno=3)
          54	LOAD_GLOBAL(arg=2, lineno=3)
          66	LOAD_ATTR(arg=3, lineno=3)
          76	KW_NAMES(arg=1, lineno=3)
          78	PRECALL(arg=2, lineno=3)
          82	CALL(arg=2, lineno=3)
          92	STORE_FAST(arg=2, lineno=3)
          94	LOAD_CONST(arg=2, lineno=4)
          96	LOAD_FAST(arg=2, lineno=4)
          98	LOAD_CONST(arg=0, lineno=4)
         100	LOAD_CONST(arg=3, lineno=4)
         102	BUILD_SLICE(arg=2, lineno=4)
         104	STORE_SUBSCR(arg=None, lineno=4)
         108	LOAD_CONST(arg=2, lineno=5)
         110	LOAD_FAST(arg=2, lineno=5)
         112	LOAD_CONST(arg=4, lineno=5)
         114	LOAD_CONST(arg=0, lineno=5)
         116	BUILD_SLICE(arg=2, lineno=5)
         118	STORE_SUBSCR(arg=None, lineno=5)
         122	LOAD_GLOBAL(arg=9, lineno=6)
         134	LOAD_GLOBAL(arg=11, lineno=6)
         146	LOAD_CONST(arg=2, lineno=6)
         148	LOAD_CONST(arg=4, lineno=6)
         150	PRECALL(arg=2, lineno=6)
         154	CALL(arg=2, lineno=6)
         164	UNARY_NEGATIVE(arg=None, lineno=6)
         166	LOAD_FAST(arg=1, lineno=6)
         168	LOAD_CONST(arg=2, lineno=6)
         170	BINARY_SUBSCR(arg=None, lineno=6)
         180	LOAD_GLOBAL(arg=13, lineno=6)
         192	LOAD_CONST(arg=2, lineno=6)
         194	LOAD_CONST(arg=3, lineno=6)
         196	PRECALL(arg=2, lineno=6)
         200	CALL(arg=2, lineno=6)
         210	BINARY_OP(arg=10, lineno=6)
         214	PRECALL(arg=2, lineno=6)
         218	CALL(arg=2, lineno=6)
         228	GET_ITER(arg=None, lineno=6)
>        230	FOR_ITER(arg=4, lineno=6)
         232	STORE_FAST(arg=3, lineno=6)
         234	LOAD_CONST(arg=2, lineno=7)
         236	STORE_FAST(arg=4, lineno=7)
         238	JUMP_BACKWARD(arg=5, lineno=7)
>        240	LOAD_FAST(arg=2, lineno=8)
         242	RETURN_VALUE(arg=None, lineno=8)
2024-07-15 06:11:39,995 DEBUG:pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-15 06:11:39,995 DEBUG:stack: []
2024-07-15 06:11:39,995 DEBUG:state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-15 06:11:39,995 DEBUG:dispatch pc=0, inst=NOP(arg=None, lineno=1)
2024-07-15 06:11:39,995 DEBUG:stack []
2024-07-15 06:11:39,995 DEBUG:dispatch pc=2, inst=RESUME(arg=0, lineno=1)
2024-07-15 06:11:39,995 DEBUG:stack []
2024-07-15 06:11:39,995 DEBUG:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2)
2024-07-15 06:11:39,995 DEBUG:stack []
2024-07-15 06:11:39,996 DEBUG:dispatch pc=6, inst=LOAD_ATTR(arg=0, lineno=2)
2024-07-15 06:11:39,996 DEBUG:stack ['$x4.0']
2024-07-15 06:11:39,996 DEBUG:dispatch pc=16, inst=STORE_FAST(arg=1, lineno=2)
2024-07-15 06:11:39,996 DEBUG:stack ['$6load_attr.1']
2024-07-15 06:11:39,996 DEBUG:dispatch pc=18, inst=LOAD_GLOBAL(arg=2, lineno=3)
2024-07-15 06:11:39,996 DEBUG:stack []
2024-07-15 06:11:39,996 DEBUG:dispatch pc=30, inst=LOAD_METHOD(arg=2, lineno=3)
2024-07-15 06:11:39,996 DEBUG:stack ['$18load_global.2']
2024-07-15 06:11:39,996 DEBUG:dispatch pc=52, inst=LOAD_FAST(arg=1, lineno=3)
2024-07-15 06:11:39,996 DEBUG:stack ['$null$30.3', '$30load_method.4']
2024-07-15 06:11:39,996 DEBUG:dispatch pc=54, inst=LOAD_GLOBAL(arg=2, lineno=3)
2024-07-15 06:11:39,996 DEBUG:stack ['$null$30.3', '$30load_method.4', '$full_shape052.5']
2024-07-15 06:11:39,996 DEBUG:dispatch pc=66, inst=LOAD_ATTR(arg=3, lineno=3)
2024-07-15 06:11:39,996 DEBUG:stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$54load_global.6']
2024-07-15 06:11:39,996 DEBUG:dispatch pc=76, inst=KW_NAMES(arg=1, lineno=3)
2024-07-15 06:11:39,996 DEBUG:stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
2024-07-15 06:11:39,996 DEBUG:dispatch pc=78, inst=PRECALL(arg=2, lineno=3)
2024-07-15 06:11:39,996 DEBUG:stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
2024-07-15 06:11:39,997 DEBUG:dispatch pc=82, inst=CALL(arg=2, lineno=3)
2024-07-15 06:11:39,997 DEBUG:stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
2024-07-15 06:11:39,997 DEBUG:dispatch pc=92, inst=STORE_FAST(arg=2, lineno=3)
2024-07-15 06:11:39,997 DEBUG:stack ['$82call.8']
2024-07-15 06:11:39,997 DEBUG:dispatch pc=94, inst=LOAD_CONST(arg=2, lineno=4)
2024-07-15 06:11:39,997 DEBUG:stack []
2024-07-15 06:11:39,997 DEBUG:dispatch pc=96, inst=LOAD_FAST(arg=2, lineno=4)
2024-07-15 06:11:39,997 DEBUG:stack ['$const94.9']
2024-07-15 06:11:39,997 DEBUG:dispatch pc=98, inst=LOAD_CONST(arg=0, lineno=4)
2024-07-15 06:11:39,997 DEBUG:stack ['$const94.9', '$out096.10']
2024-07-15 06:11:39,997 DEBUG:dispatch pc=100, inst=LOAD_CONST(arg=3, lineno=4)
2024-07-15 06:11:39,997 DEBUG:stack ['$const94.9', '$out096.10', '$const98.11']
2024-07-15 06:11:39,997 DEBUG:dispatch pc=102, inst=BUILD_SLICE(arg=2, lineno=4)
2024-07-15 06:11:39,997 DEBUG:stack ['$const94.9', '$out096.10', '$const98.11', '$const100.12']
2024-07-15 06:11:39,997 DEBUG:dispatch pc=104, inst=STORE_SUBSCR(arg=None, lineno=4)
2024-07-15 06:11:39,997 DEBUG:stack ['$const94.9', '$out096.10', '$102build_slice.14']
2024-07-15 06:11:39,997 DEBUG:dispatch pc=108, inst=LOAD_CONST(arg=2, lineno=5)
2024-07-15 06:11:39,997 DEBUG:stack []
2024-07-15 06:11:39,998 DEBUG:dispatch pc=110, inst=LOAD_FAST(arg=2, lineno=5)
2024-07-15 06:11:39,998 DEBUG:stack ['$const108.15']
2024-07-15 06:11:39,998 DEBUG:dispatch pc=112, inst=LOAD_CONST(arg=4, lineno=5)
2024-07-15 06:11:39,998 DEBUG:stack ['$const108.15', '$out0110.16']
2024-07-15 06:11:39,998 DEBUG:dispatch pc=114, inst=LOAD_CONST(arg=0, lineno=5)
2024-07-15 06:11:39,998 DEBUG:stack ['$const108.15', '$out0110.16', '$const112.17']
2024-07-15 06:11:39,998 DEBUG:dispatch pc=116, inst=BUILD_SLICE(arg=2, lineno=5)
2024-07-15 06:11:39,998 DEBUG:stack ['$const108.15', '$out0110.16', '$const112.17', '$const114.18']
2024-07-15 06:11:39,998 DEBUG:dispatch pc=118, inst=STORE_SUBSCR(arg=None, lineno=5)
2024-07-15 06:11:39,998 DEBUG:stack ['$const108.15', '$out0110.16', '$116build_slice.20']
2024-07-15 06:11:39,998 DEBUG:dispatch pc=122, inst=LOAD_GLOBAL(arg=9, lineno=6)
2024-07-15 06:11:39,998 DEBUG:stack []
2024-07-15 06:11:39,998 DEBUG:dispatch pc=134, inst=LOAD_GLOBAL(arg=11, lineno=6)
2024-07-15 06:11:39,998 DEBUG:stack ['$null$122.22', '$122load_global.21']
2024-07-15 06:11:39,998 DEBUG:dispatch pc=146, inst=LOAD_CONST(arg=2, lineno=6)
2024-07-15 06:11:39,998 DEBUG:stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23']
2024-07-15 06:11:39,998 DEBUG:dispatch pc=148, inst=LOAD_CONST(arg=4, lineno=6)
2024-07-15 06:11:39,999 DEBUG:stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25']
2024-07-15 06:11:39,999 DEBUG:dispatch pc=150, inst=PRECALL(arg=2, lineno=6)
2024-07-15 06:11:39,999 DEBUG:stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25', '$const148.26']
2024-07-15 06:11:39,999 DEBUG:dispatch pc=154, inst=CALL(arg=2, lineno=6)
2024-07-15 06:11:39,999 DEBUG:stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25', '$const148.26']
2024-07-15 06:11:39,999 DEBUG:dispatch pc=164, inst=UNARY_NEGATIVE(arg=None, lineno=6)
2024-07-15 06:11:39,999 DEBUG:stack ['$null$122.22', '$122load_global.21', '$154call.27']
2024-07-15 06:11:39,999 DEBUG:dispatch pc=166, inst=LOAD_FAST(arg=1, lineno=6)
2024-07-15 06:11:39,999 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28']
2024-07-15 06:11:39,999 DEBUG:dispatch pc=168, inst=LOAD_CONST(arg=2, lineno=6)
2024-07-15 06:11:39,999 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$full_shape0166.29']
2024-07-15 06:11:39,999 DEBUG:dispatch pc=170, inst=BINARY_SUBSCR(arg=None, lineno=6)
2024-07-15 06:11:39,999 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$full_shape0166.29', '$const168.30']
2024-07-15 06:11:39,999 DEBUG:dispatch pc=180, inst=LOAD_GLOBAL(arg=13, lineno=6)
2024-07-15 06:11:39,999 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31']
2024-07-15 06:11:39,999 DEBUG:dispatch pc=192, inst=LOAD_CONST(arg=2, lineno=6)
2024-07-15 06:11:39,999 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32']
2024-07-15 06:11:39,999 DEBUG:dispatch pc=194, inst=LOAD_CONST(arg=3, lineno=6)
2024-07-15 06:11:40,000 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34']
2024-07-15 06:11:40,000 DEBUG:dispatch pc=196, inst=PRECALL(arg=2, lineno=6)
2024-07-15 06:11:40,000 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34', '$const194.35']
2024-07-15 06:11:40,000 DEBUG:dispatch pc=200, inst=CALL(arg=2, lineno=6)
2024-07-15 06:11:40,000 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34', '$const194.35']
2024-07-15 06:11:40,000 DEBUG:dispatch pc=210, inst=BINARY_OP(arg=10, lineno=6)
2024-07-15 06:11:40,000 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$200call.36']
2024-07-15 06:11:40,000 DEBUG:dispatch pc=214, inst=PRECALL(arg=2, lineno=6)
2024-07-15 06:11:40,000 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$binop_sub210.37']
2024-07-15 06:11:40,000 DEBUG:dispatch pc=218, inst=CALL(arg=2, lineno=6)
2024-07-15 06:11:40,000 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$binop_sub210.37']
2024-07-15 06:11:40,000 DEBUG:dispatch pc=228, inst=GET_ITER(arg=None, lineno=6)
2024-07-15 06:11:40,000 DEBUG:stack ['$218call.38']
2024-07-15 06:11:40,000 DEBUG:end state. edges=[Edge(pc=230, stack=('$228get_iter.39',), blockstack=(), npush=0)]
2024-07-15 06:11:40,000 DEBUG:pending: deque([State(pc_initial=230 nstack_initial=1)])
2024-07-15 06:11:40,000 DEBUG:stack: ['$phi230.0']
2024-07-15 06:11:40,000 DEBUG:state.pc_initial: State(pc_initial=230 nstack_initial=1)
2024-07-15 06:11:40,000 DEBUG:dispatch pc=230, inst=FOR_ITER(arg=4, lineno=6)
2024-07-15 06:11:40,001 DEBUG:stack ['$phi230.0']
2024-07-15 06:11:40,001 DEBUG:end state. edges=[Edge(pc=240, stack=(), blockstack=(), npush=0), Edge(pc=232, stack=('$phi230.0', '$230for_iter.2'), blockstack=(), npush=0)]
2024-07-15 06:11:40,001 DEBUG:pending: deque([State(pc_initial=240 nstack_initial=0), State(pc_initial=232 nstack_initial=2)])
2024-07-15 06:11:40,001 DEBUG:stack: []
2024-07-15 06:11:40,001 DEBUG:state.pc_initial: State(pc_initial=240 nstack_initial=0)
2024-07-15 06:11:40,001 DEBUG:dispatch pc=240, inst=LOAD_FAST(arg=2, lineno=8)
2024-07-15 06:11:40,001 DEBUG:stack []
2024-07-15 06:11:40,001 DEBUG:dispatch pc=242, inst=RETURN_VALUE(arg=None, lineno=8)
2024-07-15 06:11:40,001 DEBUG:stack ['$out0240.0']
2024-07-15 06:11:40,001 DEBUG:end state. edges=[]
2024-07-15 06:11:40,001 DEBUG:pending: deque([State(pc_initial=232 nstack_initial=2)])
2024-07-15 06:11:40,001 DEBUG:stack: ['$phi232.0', '$phi232.1']
2024-07-15 06:11:40,001 DEBUG:state.pc_initial: State(pc_initial=232 nstack_initial=2)
2024-07-15 06:11:40,001 DEBUG:dispatch pc=232, inst=STORE_FAST(arg=3, lineno=6)
2024-07-15 06:11:40,001 DEBUG:stack ['$phi232.0', '$phi232.1']
2024-07-15 06:11:40,001 DEBUG:dispatch pc=234, inst=LOAD_CONST(arg=2, lineno=7)
2024-07-15 06:11:40,001 DEBUG:stack ['$phi232.0']
2024-07-15 06:11:40,001 DEBUG:dispatch pc=236, inst=STORE_FAST(arg=4, lineno=7)
2024-07-15 06:11:40,001 DEBUG:stack ['$phi232.0', '$const234.2']
2024-07-15 06:11:40,001 DEBUG:dispatch pc=238, inst=JUMP_BACKWARD(arg=5, lineno=7)
2024-07-15 06:11:40,002 DEBUG:stack ['$phi232.0']
2024-07-15 06:11:40,002 DEBUG:end state. edges=[Edge(pc=230, stack=('$phi232.0',), blockstack=(), npush=0)]
2024-07-15 06:11:40,002 DEBUG:pending: deque([State(pc_initial=230 nstack_initial=1)])
2024-07-15 06:11:40,002 DEBUG:-------------------------Prune PHIs-------------------------
2024-07-15 06:11:40,002 DEBUG:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=230 nstack_initial=1): {'$phi230.0'},
             State(pc_initial=232 nstack_initial=2): {'$phi232.1'},
             State(pc_initial=240 nstack_initial=0): set()})
2024-07-15 06:11:40,002 DEBUG:defmap: {'$phi230.0': State(pc_initial=0 nstack_initial=0),
 '$phi232.1': State(pc_initial=230 nstack_initial=1)}
2024-07-15 06:11:40,002 DEBUG:phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi232.0',
                            State(pc_initial=232 nstack_initial=2))},
             '$phi232.0': {('$phi230.0',
                            State(pc_initial=230 nstack_initial=1))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-07-15 06:11:40,002 DEBUG:changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi230.0',
                            State(pc_initial=230 nstack_initial=1))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-07-15 06:11:40,002 DEBUG:changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-07-15 06:11:40,003 DEBUG:changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-07-15 06:11:40,003 DEBUG:keep phismap: {'$phi230.0': {('$228get_iter.39', State(pc_initial=0 nstack_initial=0))},
 '$phi232.1': {('$230for_iter.2', State(pc_initial=230 nstack_initial=1))}}
2024-07-15 06:11:40,003 DEBUG:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi230.0': '$228get_iter.39'},
             State(pc_initial=230 nstack_initial=1): {'$phi232.1': '$230for_iter.2'}})
2024-07-15 06:11:40,003 DEBUG:----------------------DONE Prune PHIs-----------------------
2024-07-15 06:11:40,003 DEBUG:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'item': '$x4.0', 'res': '$6load_attr.1'}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'value': '$6load_attr.1'}), (18, {'idx': 1, 'res': '$18load_global.2'}), (20, {}), (22, {}), (24, {}), (26, {}), (28, {}), (30, {'item': '$18load_global.2', 'res': '$30load_method.4'}), (32, {}), (34, {}), (36, {}), (38, {}), (40, {}), (42, {}), (44, {}), (46, {}), (48, {}), (50, {}), (52, {'res': '$full_shape052.5'}), (54, {'idx': 1, 'res': '$54load_global.6'}), (56, {}), (58, {}), (60, {}), (62, {}), (64, {}), (66, {'item': '$54load_global.6', 'res': '$66load_attr.7'}), (68, {}), (70, {}), (72, {}), (74, {}), (78, {}), (80, {}), (82, {'func': '$30load_method.4', 'args': ['$full_shape052.5', '$66load_attr.7'], 'kw_names': 1, 'res': '$82call.8'}), (84, {}), (86, {}), (88, {}), (90, {}), (92, {'value': '$82call.8'}), (94, {'res': '$const94.9'}), (96, {'res': '$out096.10'}), (98, {'res': '$const98.11'}), (100, {'res': '$const100.12'}), (102, {'start': '$const98.11', 'stop': '$const100.12', 'step': None, 'res': '$102build_slice.14', 'slicevar': '$102build_slice.13'}), (104, {'target': '$out096.10', 'index': '$102build_slice.14', 'value': '$const94.9'}), (106, {}), (108, {'res': '$const108.15'}), (110, {'res': '$out0110.16'}), (112, {'res': '$const112.17'}), (114, {'res': '$const114.18'}), (116, {'start': '$const112.17', 'stop': '$const114.18', 'step': None, 'res': '$116build_slice.20', 'slicevar': '$116build_slice.19'}), (118, {'target': '$out0110.16', 'index': '$116build_slice.20', 'value': '$const108.15'}), (120, {}), (122, {'idx': 4, 'res': '$122load_global.21'}), (124, {}), (126, {}), (128, {}), (130, {}), (132, {}), (134, {'idx': 5, 'res': '$134load_global.23'}), (136, {}), (138, {}), (140, {}), (142, {}), (144, {}), (146, {'res': '$const146.25'}), (148, {'res': '$const148.26'}), (150, {}), (152, {}), (154, {'func': '$134load_global.23', 'args': ['$const146.25', '$const148.26'], 'kw_names': None, 'res': '$154call.27'}), (156, {}), (158, {}), (160, {}), (162, {}), (164, {'value': '$154call.27', 'res': '$164unary_negative.28'}), (166, {'res': '$full_shape0166.29'}), (168, {'res': '$const168.30'}), (170, {'index': '$const168.30', 'target': '$full_shape0166.29', 'res': '$170binary_subscr.31'}), (172, {}), (174, {}), (176, {}), (178, {}), (180, {'idx': 6, 'res': '$180load_global.32'}), (182, {}), (184, {}), (186, {}), (188, {}), (190, {}), (192, {'res': '$const192.34'}), (194, {'res': '$const194.35'}), (196, {}), (198, {}), (200, {'func': '$180load_global.32', 'args': ['$const192.34', '$const194.35'], 'kw_names': None, 'res': '$200call.36'}), (202, {}), (204, {}), (206, {}), (208, {}), (210, {'op': '-', 'lhs': '$170binary_subscr.31', 'rhs': '$200call.36', 'res': '$binop_sub210.37'}), (212, {}), (214, {}), (216, {}), (218, {'func': '$122load_global.21', 'args': ['$164unary_negative.28', '$binop_sub210.37'], 'kw_names': None, 'res': '$218call.38'}), (220, {}), (222, {}), (224, {}), (226, {}), (228, {'value': '$218call.38', 'res': '$228get_iter.39'})), outgoing_phis={'$phi230.0': '$228get_iter.39'}, blockstack=(), active_try_block=None, outgoing_edgepushed={230: ('$228get_iter.39',)})
2024-07-15 06:11:40,003 DEBUG:block_infos State(pc_initial=230 nstack_initial=1):
AdaptBlockInfo(insts=((230, {'iterator': '$phi230.0', 'pair': '$230for_iter.1', 'indval': '$230for_iter.2', 'pred': '$230for_iter.3'}),), outgoing_phis={'$phi232.1': '$230for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={240: (), 232: ('$phi230.0', '$230for_iter.2')})
2024-07-15 06:11:40,003 DEBUG:block_infos State(pc_initial=232 nstack_initial=2):
AdaptBlockInfo(insts=((232, {'value': '$phi232.1'}), (234, {'res': '$const234.2'}), (236, {'value': '$const234.2'}), (238, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={230: ('$phi232.0',)})
2024-07-15 06:11:40,003 DEBUG:block_infos State(pc_initial=240 nstack_initial=0):
AdaptBlockInfo(insts=((240, {'res': '$out0240.0'}), (242, {'retval': '$out0240.0', 'castval': '$242return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-15 06:11:40,004 DEBUG:label 0:
    x = arg(0, name=x)                       ['x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $18load_global.2 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$18load_global.2']
    $30load_method.4 = getattr(value=$18load_global.2, attr=empty) ['$18load_global.2', '$30load_method.4']
    $54load_global.6 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$54load_global.6']
    $66load_attr.7 = getattr(value=$54load_global.6, attr=bool_) ['$54load_global.6', '$66load_attr.7']
    out0 = call $30load_method.4(full_shape0, func=$30load_method.4, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7, <string>:3))], vararg=None, varkwarg=None, target=None) ['$30load_method.4', '$66load_attr.7', 'full_shape0', 'out0']
    $const94.9 = const(int, 0)               ['$const94.9']
    $const98.11 = const(NoneType, None)      ['$const98.11']
    $const100.12 = const(int, 1)             ['$const100.12']
    $102build_slice.13 = global(slice: <class 'slice'>) ['$102build_slice.13']
    $102build_slice.14 = call $102build_slice.13($const98.11, $const100.12, func=$102build_slice.13, args=(Var($const98.11, <string>:4), Var($const100.12, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$102build_slice.13', '$102build_slice.14', '$const100.12', '$const98.11']
    out0[$102build_slice.14] = $const94.9    ['$102build_slice.14', '$const94.9', 'out0']
    $const108.15 = const(int, 0)             ['$const108.15']
    $const112.17 = const(int, -1)            ['$const112.17']
    $const114.18 = const(NoneType, None)     ['$const114.18']
    $116build_slice.19 = global(slice: <class 'slice'>) ['$116build_slice.19']
    $116build_slice.20 = call $116build_slice.19($const112.17, $const114.18, func=$116build_slice.19, args=(Var($const112.17, <string>:5), Var($const114.18, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$116build_slice.19', '$116build_slice.20', '$const112.17', '$const114.18']
    out0[$116build_slice.20] = $const108.15  ['$116build_slice.20', '$const108.15', 'out0']
    $122load_global.21 = global(range: <class 'range'>) ['$122load_global.21']
    $134load_global.23 = global(min: <built-in function min>) ['$134load_global.23']
    $const146.25 = const(int, 0)             ['$const146.25']
    $const148.26 = const(int, -1)            ['$const148.26']
    $154call.27 = call $134load_global.23($const146.25, $const148.26, func=$134load_global.23, args=[Var($const146.25, <string>:6), Var($const148.26, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$134load_global.23', '$154call.27', '$const146.25', '$const148.26']
    $164unary_negative.28 = unary(fn=<built-in function neg>, value=$154call.27) ['$154call.27', '$164unary_negative.28']
    $const168.30 = const(int, 0)             ['$const168.30']
    $170binary_subscr.31 = getitem(value=full_shape0, index=$const168.30, fn=<built-in function getitem>) ['$170binary_subscr.31', '$const168.30', 'full_shape0']
    $180load_global.32 = global(max: <built-in function max>) ['$180load_global.32']
    $const192.34 = const(int, 0)             ['$const192.34']
    $const194.35 = const(int, 1)             ['$const194.35']
    $200call.36 = call $180load_global.32($const192.34, $const194.35, func=$180load_global.32, args=[Var($const192.34, <string>:6), Var($const194.35, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$180load_global.32', '$200call.36', '$const192.34', '$const194.35']
    $binop_sub210.37 = $170binary_subscr.31 - $200call.36 ['$170binary_subscr.31', '$200call.36', '$binop_sub210.37']
    $218call.38 = call $122load_global.21($164unary_negative.28, $binop_sub210.37, func=$122load_global.21, args=[Var($164unary_negative.28, <string>:6), Var($binop_sub210.37, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$122load_global.21', '$164unary_negative.28', '$218call.38', '$binop_sub210.37']
    $228get_iter.39 = getiter(value=$218call.38) ['$218call.38', '$228get_iter.39']
    $phi230.0 = $228get_iter.39              ['$228get_iter.39', '$phi230.0']
    jump 230                                 []
label 230:
    $230for_iter.1 = iternext(value=$phi230.0) ['$230for_iter.1', '$phi230.0']
    $230for_iter.2 = pair_first(value=$230for_iter.1) ['$230for_iter.1', '$230for_iter.2']
    $230for_iter.3 = pair_second(value=$230for_iter.1) ['$230for_iter.1', '$230for_iter.3']
    $phi232.1 = $230for_iter.2               ['$230for_iter.2', '$phi232.1']
    branch $230for_iter.3, 232, 240          ['$230for_iter.3']
label 232:
    index00 = $phi232.1                      ['$phi232.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 230                                 []
label 240:
    $242return_value.1 = cast(value=out0)    ['$242return_value.1', 'out0']
    return $242return_value.1                ['$242return_value.1']

2024-07-15 06:11:40,021 DEBUG:==== SSA block analysis pass on 0
2024-07-15 06:11:40,021 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B613DDD0>
2024-07-15 06:11:40,021 DEBUG:on stmt: x = arg(0, name=x)
2024-07-15 06:11:40,021 DEBUG:on stmt: full_shape0 = getattr(value=x, attr=shape)
2024-07-15 06:11:40,022 DEBUG:on stmt: $18load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:40,022 DEBUG:on stmt: $30load_method.4.1 = getattr(value=$18load_global.2.1, attr=empty)
2024-07-15 06:11:40,022 DEBUG:on stmt: $54load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:40,022 DEBUG:on stmt: $66load_attr.7.1 = getattr(value=$54load_global.6.1, attr=bool_)
2024-07-15 06:11:40,022 DEBUG:on stmt: out0 = call $30load_method.4.1(full_shape0, func=$30load_method.4.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:40,023 DEBUG:on stmt: $const94.9.1 = const(int, 0)
2024-07-15 06:11:40,023 DEBUG:on stmt: $const98.11.1 = const(NoneType, None)
2024-07-15 06:11:40,023 DEBUG:on stmt: $const100.12.1 = const(int, 1)
2024-07-15 06:11:40,023 DEBUG:on stmt: $102build_slice.13.1 = global(slice: <class 'slice'>)
2024-07-15 06:11:40,023 DEBUG:on stmt: $102build_slice.14.1 = call $102build_slice.13.1($const98.11.1, $const100.12.1, func=$102build_slice.13.1, args=(Var($const98.11.1, <string>:4), Var($const100.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:40,023 DEBUG:on stmt: out0[$102build_slice.14.1] = $const94.9.1
2024-07-15 06:11:40,023 DEBUG:on stmt: $const108.15.1 = const(int, 0)
2024-07-15 06:11:40,023 DEBUG:on stmt: $const112.17.1 = const(int, -1)
2024-07-15 06:11:40,023 DEBUG:on stmt: $const114.18.1 = const(NoneType, None)
2024-07-15 06:11:40,023 DEBUG:on stmt: $116build_slice.19.1 = global(slice: <class 'slice'>)
2024-07-15 06:11:40,023 DEBUG:on stmt: $116build_slice.20.1 = call $116build_slice.19.1($const112.17.1, $const114.18.1, func=$116build_slice.19.1, args=(Var($const112.17.1, <string>:5), Var($const114.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:40,023 DEBUG:on stmt: out0[$116build_slice.20.1] = $const108.15.1
2024-07-15 06:11:40,023 DEBUG:on stmt: $122load_global.21.1 = global(range: <class 'range'>)
2024-07-15 06:11:40,023 DEBUG:on stmt: $134load_global.23.1 = global(min: <built-in function min>)
2024-07-15 06:11:40,023 DEBUG:on stmt: $const146.25.1 = const(int, 0)
2024-07-15 06:11:40,023 DEBUG:on stmt: $const148.26.1 = const(int, -1)
2024-07-15 06:11:40,023 DEBUG:on stmt: $154call.27.1 = call $134load_global.23.1($const146.25.1, $const148.26.1, func=$134load_global.23.1, args=[Var($const146.25.1, <string>:6), Var($const148.26.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:40,023 DEBUG:on stmt: $164unary_negative.28.1 = unary(fn=<built-in function neg>, value=$154call.27.1)
2024-07-15 06:11:40,023 DEBUG:on stmt: $const168.30.1 = const(int, 0)
2024-07-15 06:11:40,024 DEBUG:on stmt: $170binary_subscr.31.1 = getitem(value=full_shape0, index=$const168.30.1, fn=<built-in function getitem>)
2024-07-15 06:11:40,024 DEBUG:on stmt: $180load_global.32.1 = global(max: <built-in function max>)
2024-07-15 06:11:40,024 DEBUG:on stmt: $const192.34.1 = const(int, 0)
2024-07-15 06:11:40,024 DEBUG:on stmt: $const194.35.1 = const(int, 1)
2024-07-15 06:11:40,024 DEBUG:on stmt: $200call.36.1 = call $180load_global.32.1($const192.34.1, $const194.35.1, func=$180load_global.32.1, args=[Var($const192.34.1, <string>:6), Var($const194.35.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:40,024 DEBUG:on stmt: $binop_sub210.37.1 = $170binary_subscr.31.1 - $200call.36.1
2024-07-15 06:11:40,024 DEBUG:on stmt: $218call.38.1 = call $122load_global.21.1($164unary_negative.28.1, $binop_sub210.37.1, func=$122load_global.21.1, args=[Var($164unary_negative.28.1, <string>:6), Var($binop_sub210.37.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:40,024 DEBUG:on stmt: $228get_iter.39.1 = getiter(value=$218call.38.1)
2024-07-15 06:11:40,024 DEBUG:on stmt: $phi230.0.1 = $228get_iter.39.1
2024-07-15 06:11:40,024 DEBUG:on stmt: jump 230
2024-07-15 06:11:40,024 DEBUG:==== SSA block analysis pass on 230
2024-07-15 06:11:40,024 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B613DDD0>
2024-07-15 06:11:40,024 DEBUG:on stmt: $230for_iter.1.1 = iternext(value=$phi230.0.1)
2024-07-15 06:11:40,024 DEBUG:on stmt: $230for_iter.2.1 = pair_first(value=$230for_iter.1.1)
2024-07-15 06:11:40,024 DEBUG:on stmt: $230for_iter.3.1 = pair_second(value=$230for_iter.1.1)
2024-07-15 06:11:40,024 DEBUG:on stmt: $phi232.1.1 = $230for_iter.2.1
2024-07-15 06:11:40,024 DEBUG:on stmt: branch $230for_iter.3.1, 232, 242
2024-07-15 06:11:40,025 DEBUG:==== SSA block analysis pass on 232
2024-07-15 06:11:40,025 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B613DDD0>
2024-07-15 06:11:40,025 DEBUG:on stmt: index00 = $phi232.1.1
2024-07-15 06:11:40,025 DEBUG:on stmt: jump 240
2024-07-15 06:11:40,025 DEBUG:==== SSA block analysis pass on 242
2024-07-15 06:11:40,026 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B613DDD0>
2024-07-15 06:11:40,026 DEBUG:on stmt: $242return_value.1.1 = cast(value=out0)
2024-07-15 06:11:40,026 DEBUG:on stmt: return $242return_value.1.1
2024-07-15 06:11:40,026 DEBUG:==== SSA block analysis pass on 240
2024-07-15 06:11:40,026 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B613DDD0>
2024-07-15 06:11:40,026 DEBUG:on stmt: $const6.1 = const(int, 0)
2024-07-15 06:11:40,026 DEBUG:on stmt: stencil_index = $const6.1 + index00
2024-07-15 06:11:40,026 DEBUG:on stmt: $8binary_subscr.2 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-07-15 06:11:40,026 DEBUG:on stmt: $const20.4 = const(int, -1)
2024-07-15 06:11:40,026 DEBUG:on stmt: stencil_index.1 = $const20.4 + index00
2024-07-15 06:11:40,026 DEBUG:on stmt: $22binary_subscr.5 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2024-07-15 06:11:40,026 DEBUG:on stmt: $32compare_op.6 = $8binary_subscr.2 < $22binary_subscr.5
2024-07-15 06:11:40,026 DEBUG:on stmt: $const40.8 = const(int, 0)
2024-07-15 06:11:40,026 DEBUG:on stmt: stencil_index.2 = $const40.8 + index00
2024-07-15 06:11:40,026 DEBUG:on stmt: $42binary_subscr.9 = getitem(value=x, index=stencil_index.2, fn=<built-in function getitem>)
2024-07-15 06:11:40,026 DEBUG:on stmt: $const54.11 = const(int, 1)
2024-07-15 06:11:40,026 DEBUG:on stmt: stencil_index.3 = $const54.11 + index00
2024-07-15 06:11:40,026 DEBUG:on stmt: $56binary_subscr.12 = getitem(value=x, index=stencil_index.3, fn=<built-in function getitem>)
2024-07-15 06:11:40,026 DEBUG:on stmt: $66compare_op.13 = $42binary_subscr.9 <= $56binary_subscr.12
2024-07-15 06:11:40,026 DEBUG:on stmt: $binop_and_72.14 = $32compare_op.6 & $66compare_op.13
2024-07-15 06:11:40,027 DEBUG:on stmt: $76return_value.15 = cast(value=$binop_and_72.14)
2024-07-15 06:11:40,027 DEBUG:on stmt: out0[index00] = $76return_value.15
2024-07-15 06:11:40,027 DEBUG:on stmt: jump 241
2024-07-15 06:11:40,027 DEBUG:==== SSA block analysis pass on 241
2024-07-15 06:11:40,027 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B613DDD0>
2024-07-15 06:11:40,027 DEBUG:on stmt: jump 230
2024-07-15 06:11:40,028 DEBUG:defs defaultdict(<class 'list'>,
            {'$102build_slice.13.1': [(<numba.core.ir.Assign object at 0x00000221B61432D0>,
                                       0)],
             '$102build_slice.14.1': [(<numba.core.ir.Assign object at 0x00000221B6142ED0>,
                                       0)],
             '$116build_slice.19.1': [(<numba.core.ir.Assign object at 0x00000221B6142690>,
                                       0)],
             '$116build_slice.20.1': [(<numba.core.ir.Assign object at 0x00000221B61424D0>,
                                       0)],
             '$122load_global.21.1': [(<numba.core.ir.Assign object at 0x00000221B6142190>,
                                       0)],
             '$134load_global.23.1': [(<numba.core.ir.Assign object at 0x00000221B6141E50>,
                                       0)],
             '$154call.27.1': [(<numba.core.ir.Assign object at 0x00000221B6142C10>,
                                0)],
             '$164unary_negative.28.1': [(<numba.core.ir.Assign object at 0x00000221B6141650>,
                                          0)],
             '$170binary_subscr.31.1': [(<numba.core.ir.Assign object at 0x00000221B61410D0>,
                                         0)],
             '$180load_global.32.1': [(<numba.core.ir.Assign object at 0x00000221B6140590>,
                                       0)],
             '$18load_global.2.1': [(<numba.core.ir.Assign object at 0x00000221B612DED0>,
                                     0)],
             '$200call.36.1': [(<numba.core.ir.Assign object at 0x00000221B6140A90>,
                                0)],
             '$218call.38.1': [(<numba.core.ir.Assign object at 0x00000221B689A1D0>,
                                0)],
             '$228get_iter.39.1': [(<numba.core.ir.Assign object at 0x00000221B68C83D0>,
                                    0)],
             '$22binary_subscr.5': [(<numba.core.ir.Assign object at 0x00000221B6105050>,
                                     240)],
             '$230for_iter.1.1': [(<numba.core.ir.Assign object at 0x00000221B613CED0>,
                                   230)],
             '$230for_iter.2.1': [(<numba.core.ir.Assign object at 0x00000221B613F0D0>,
                                   230)],
             '$230for_iter.3.1': [(<numba.core.ir.Assign object at 0x00000221B613FED0>,
                                   230)],
             '$242return_value.1.1': [(<numba.core.ir.Assign object at 0x00000221B613F290>,
                                       242)],
             '$30load_method.4.1': [(<numba.core.ir.Assign object at 0x00000221B612D510>,
                                     0)],
             '$32compare_op.6': [(<numba.core.ir.Assign object at 0x00000221B5E931D0>,
                                  240)],
             '$42binary_subscr.9': [(<numba.core.ir.Assign object at 0x00000221B6106B10>,
                                     240)],
             '$54load_global.6.1': [(<numba.core.ir.Assign object at 0x00000221B6142D90>,
                                     0)],
             '$56binary_subscr.12': [(<numba.core.ir.Assign object at 0x00000221B6105610>,
                                      240)],
             '$66compare_op.13': [(<numba.core.ir.Assign object at 0x00000221B611B0D0>,
                                   240)],
             '$66load_attr.7.1': [(<numba.core.ir.Assign object at 0x00000221B6143DD0>,
                                   0)],
             '$76return_value.15': [(<numba.core.ir.Assign object at 0x00000221B6104090>,
                                     240)],
             '$8binary_subscr.2': [(<numba.core.ir.Assign object at 0x00000221B6104F90>,
                                    240)],
             '$binop_and_72.14': [(<numba.core.ir.Assign object at 0x00000221B6107C10>,
                                   240)],
             '$binop_sub210.37.1': [(<numba.core.ir.Assign object at 0x00000221B6140210>,
                                     0)],
             '$const100.12.1': [(<numba.core.ir.Assign object at 0x00000221B6143450>,
                                 0)],
             '$const108.15.1': [(<numba.core.ir.Assign object at 0x00000221B6142910>,
                                 0)],
             '$const112.17.1': [(<numba.core.ir.Assign object at 0x00000221B6142450>,
                                 0)],
             '$const114.18.1': [(<numba.core.ir.Assign object at 0x00000221B61427D0>,
                                 0)],
             '$const146.25.1': [(<numba.core.ir.Assign object at 0x00000221B6141490>,
                                 0)],
             '$const148.26.1': [(<numba.core.ir.Assign object at 0x00000221B6141510>,
                                 0)],
             '$const168.30.1': [(<numba.core.ir.Assign object at 0x00000221B6141790>,
                                 0)],
             '$const192.34.1': [(<numba.core.ir.Assign object at 0x00000221B6140650>,
                                 0)],
             '$const194.35.1': [(<numba.core.ir.Assign object at 0x00000221B61406D0>,
                                 0)],
             '$const20.4': [(<numba.core.ir.Assign object at 0x00000221B5F04990>,
                             240)],
             '$const40.8': [(<numba.core.ir.Assign object at 0x00000221B5E92C90>,
                             240)],
             '$const54.11': [(<numba.core.ir.Assign object at 0x00000221B6119510>,
                              240)],
             '$const6.1': [(<numba.core.ir.Assign object at 0x00000221B5F07D50>,
                            240)],
             '$const94.9.1': [(<numba.core.ir.Assign object at 0x00000221B6143950>,
                               0)],
             '$const98.11.1': [(<numba.core.ir.Assign object at 0x00000221B6143750>,
                                0)],
             '$phi230.0.1': [(<numba.core.ir.Assign object at 0x00000221B6143CD0>,
                              0)],
             '$phi232.1.1': [(<numba.core.ir.Assign object at 0x00000221B613F610>,
                              230)],
             'full_shape0': [(<numba.core.ir.Assign object at 0x00000221B612D990>,
                              0)],
             'index00': [(<numba.core.ir.Assign object at 0x00000221B613DA10>,
                          232)],
             'out0': [(<numba.core.ir.Assign object at 0x00000221B6143E10>, 0)],
             'stencil_index': [(<numba.core.ir.Assign object at 0x00000221B6105310>,
                                240)],
             'stencil_index.1': [(<numba.core.ir.Assign object at 0x00000221B6104C50>,
                                  240)],
             'stencil_index.2': [(<numba.core.ir.Assign object at 0x00000221B6106D50>,
                                  240)],
             'stencil_index.3': [(<numba.core.ir.Assign object at 0x00000221B6105C10>,
                                  240)],
             'x': [(<numba.core.ir.Assign object at 0x00000221B612E210>, 0)]})
2024-07-15 06:11:40,028 DEBUG:SSA violators <numba.core.utils.OrderedSet object at 0x00000221B612FD50>
2024-07-15 06:11:40,310 DEBUG:bytecode dump:
>          0	NOP(arg=None, lineno=1068)
           2	RESUME(arg=0, lineno=1068)
           4	LOAD_GLOBAL(arg=1, lineno=1082)
          16	LOAD_FAST(arg=0, lineno=1082)
          18	PRECALL(arg=1, lineno=1082)
          22	CALL(arg=1, lineno=1082)
          32	LOAD_FAST(arg=1, lineno=1082)
          34	LOAD_CONST(arg=1, lineno=1082)
          36	LOAD_CONST(arg=1, lineno=1082)
          38	BUILD_SLICE(arg=2, lineno=1082)
          40	STORE_SUBSCR(arg=None, lineno=1082)
          44	LOAD_CONST(arg=1, lineno=1082)
          46	RETURN_VALUE(arg=None, lineno=1082)
2024-07-15 06:11:40,311 DEBUG:pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-15 06:11:40,311 DEBUG:stack: []
2024-07-15 06:11:40,311 DEBUG:state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-15 06:11:40,311 DEBUG:dispatch pc=0, inst=NOP(arg=None, lineno=1068)
2024-07-15 06:11:40,311 DEBUG:stack []
2024-07-15 06:11:40,311 DEBUG:dispatch pc=2, inst=RESUME(arg=0, lineno=1068)
2024-07-15 06:11:40,311 DEBUG:stack []
2024-07-15 06:11:40,311 DEBUG:dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=1082)
2024-07-15 06:11:40,311 DEBUG:stack []
2024-07-15 06:11:40,311 DEBUG:dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=1082)
2024-07-15 06:11:40,311 DEBUG:stack ['$null$4.1', '$4load_global.0']
2024-07-15 06:11:40,311 DEBUG:dispatch pc=18, inst=PRECALL(arg=1, lineno=1082)
2024-07-15 06:11:40,311 DEBUG:stack ['$null$4.1', '$4load_global.0', '$x16.2']
2024-07-15 06:11:40,311 DEBUG:dispatch pc=22, inst=CALL(arg=1, lineno=1082)
2024-07-15 06:11:40,311 DEBUG:stack ['$null$4.1', '$4load_global.0', '$x16.2']
2024-07-15 06:11:40,311 DEBUG:dispatch pc=32, inst=LOAD_FAST(arg=1, lineno=1082)
2024-07-15 06:11:40,311 DEBUG:stack ['$22call.3']
2024-07-15 06:11:40,311 DEBUG:dispatch pc=34, inst=LOAD_CONST(arg=1, lineno=1082)
2024-07-15 06:11:40,311 DEBUG:stack ['$22call.3', '$y32.4']
2024-07-15 06:11:40,311 DEBUG:dispatch pc=36, inst=LOAD_CONST(arg=1, lineno=1082)
2024-07-15 06:11:40,311 DEBUG:stack ['$22call.3', '$y32.4', '$const34.5']
2024-07-15 06:11:40,311 DEBUG:dispatch pc=38, inst=BUILD_SLICE(arg=2, lineno=1082)
2024-07-15 06:11:40,311 DEBUG:stack ['$22call.3', '$y32.4', '$const34.5', '$const36.6']
2024-07-15 06:11:40,312 DEBUG:dispatch pc=40, inst=STORE_SUBSCR(arg=None, lineno=1082)
2024-07-15 06:11:40,312 DEBUG:stack ['$22call.3', '$y32.4', '$38build_slice.8']
2024-07-15 06:11:40,312 DEBUG:dispatch pc=44, inst=LOAD_CONST(arg=1, lineno=1082)
2024-07-15 06:11:40,312 DEBUG:stack []
2024-07-15 06:11:40,312 DEBUG:dispatch pc=46, inst=RETURN_VALUE(arg=None, lineno=1082)
2024-07-15 06:11:40,312 DEBUG:stack ['$const44.9']
2024-07-15 06:11:40,312 DEBUG:end state. edges=[]
2024-07-15 06:11:40,312 DEBUG:-------------------------Prune PHIs-------------------------
2024-07-15 06:11:40,312 DEBUG:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-07-15 06:11:40,312 DEBUG:defmap: {}
2024-07-15 06:11:40,312 DEBUG:phismap: defaultdict(<class 'set'>, {})
2024-07-15 06:11:40,312 DEBUG:changing phismap: defaultdict(<class 'set'>, {})
2024-07-15 06:11:40,312 DEBUG:keep phismap: {}
2024-07-15 06:11:40,312 DEBUG:new_out: defaultdict(<class 'dict'>, {})
2024-07-15 06:11:40,312 DEBUG:----------------------DONE Prune PHIs-----------------------
2024-07-15 06:11:40,312 DEBUG:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (6, {}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$x16.2'}), (18, {}), (20, {}), (22, {'func': '$4load_global.0', 'args': ['$x16.2'], 'kw_names': None, 'res': '$22call.3'}), (24, {}), (26, {}), (28, {}), (30, {}), (32, {'res': '$y32.4'}), (34, {'res': '$const34.5'}), (36, {'res': '$const36.6'}), (38, {'start': '$const34.5', 'stop': '$const36.6', 'step': None, 'res': '$38build_slice.8', 'slicevar': '$38build_slice.7'}), (40, {'target': '$y32.4', 'index': '$38build_slice.8', 'value': '$22call.3'}), (42, {}), (44, {'res': '$const44.9'}), (46, {'retval': '$const44.9', 'castval': '$46return_value.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-15 06:11:40,313 DEBUG:label 0:
    x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    $4load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x00000221B6076710>) ['$4load_global.0']
    $22call.3 = call $4load_global.0(x, func=$4load_global.0, args=[Var(x, utils.py:1068)], kws=(), vararg=None, varkwarg=None, target=None) ['$22call.3', '$4load_global.0', 'x']
    $const34.5 = const(NoneType, None)       ['$const34.5']
    $const36.6 = const(NoneType, None)       ['$const36.6']
    $38build_slice.7 = global(slice: <class 'slice'>) ['$38build_slice.7']
    $38build_slice.8 = call $38build_slice.7($const34.5, $const36.6, func=$38build_slice.7, args=(Var($const34.5, utils.py:1082), Var($const36.6, utils.py:1082)), kws=(), vararg=None, varkwarg=None, target=None) ['$38build_slice.7', '$38build_slice.8', '$const34.5', '$const36.6']
    y[$38build_slice.8] = $22call.3          ['$22call.3', '$38build_slice.8', 'y']
    $const44.9 = const(NoneType, None)       ['$const44.9']
    $46return_value.10 = cast(value=$const44.9) ['$46return_value.10', '$const44.9']
    return $46return_value.10                ['$46return_value.10']

2024-07-15 06:11:40,318 DEBUG:==== SSA block analysis pass on 0
2024-07-15 06:11:40,318 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B7BA2710>
2024-07-15 06:11:40,318 DEBUG:on stmt: x = arg(0, name=x)
2024-07-15 06:11:40,318 DEBUG:on stmt: y = arg(1, name=y)
2024-07-15 06:11:40,318 DEBUG:on stmt: $4load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x00000221B6076710>)
2024-07-15 06:11:40,318 DEBUG:on stmt: $22call.3 = call $4load_global.0(x, func=$4load_global.0, args=[Var(x, utils.py:1068)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:40,318 DEBUG:on stmt: $const34.5 = const(NoneType, None)
2024-07-15 06:11:40,318 DEBUG:on stmt: $const36.6 = const(NoneType, None)
2024-07-15 06:11:40,318 DEBUG:on stmt: $38build_slice.7 = global(slice: <class 'slice'>)
2024-07-15 06:11:40,318 DEBUG:on stmt: $38build_slice.8 = call $38build_slice.7($const34.5, $const36.6, func=$38build_slice.7, args=(Var($const34.5, utils.py:1082), Var($const36.6, utils.py:1082)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:40,318 DEBUG:on stmt: y[slice(None, None, None)] = $22call.3
2024-07-15 06:11:40,318 DEBUG:on stmt: $const44.9 = const(NoneType, None)
2024-07-15 06:11:40,318 DEBUG:on stmt: $46return_value.10 = cast(value=$const44.9)
2024-07-15 06:11:40,318 DEBUG:on stmt: return $46return_value.10
2024-07-15 06:11:40,319 DEBUG:defs defaultdict(<class 'list'>,
            {'$22call.3': [(<numba.core.ir.Assign object at 0x00000221B7BA32D0>,
                            0)],
             '$38build_slice.7': [(<numba.core.ir.Assign object at 0x00000221B7BA2490>,
                                   0)],
             '$38build_slice.8': [(<numba.core.ir.Assign object at 0x00000221B7BA2390>,
                                   0)],
             '$46return_value.10': [(<numba.core.ir.Assign object at 0x00000221B7BA1F50>,
                                     0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x00000221B7BA2C50>,
                                  0)],
             '$const34.5': [(<numba.core.ir.Assign object at 0x00000221B7BA33D0>,
                             0)],
             '$const36.6': [(<numba.core.ir.Assign object at 0x00000221B7BA26D0>,
                             0)],
             '$const44.9': [(<numba.core.ir.Assign object at 0x00000221B7BA19D0>,
                             0)],
             'x': [(<numba.core.ir.Assign object at 0x00000221B7BA2B90>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x00000221B7BA2F90>, 0)]})
2024-07-15 06:11:40,319 DEBUG:SSA violators <numba.core.utils.OrderedSet object at 0x00000221B7BA2710>
2024-07-15 06:11:40,335 DEBUG:bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	RESUME(arg=0, lineno=1)
           4	LOAD_FAST(arg=0, lineno=2)
           6	LOAD_ATTR(arg=0, lineno=2)
          16	STORE_FAST(arg=1, lineno=2)
          18	LOAD_GLOBAL(arg=2, lineno=3)
          30	LOAD_METHOD(arg=2, lineno=3)
          52	LOAD_FAST(arg=1, lineno=3)
          54	LOAD_GLOBAL(arg=2, lineno=3)
          66	LOAD_ATTR(arg=3, lineno=3)
          76	KW_NAMES(arg=1, lineno=3)
          78	PRECALL(arg=2, lineno=3)
          82	CALL(arg=2, lineno=3)
          92	STORE_FAST(arg=2, lineno=3)
          94	LOAD_CONST(arg=2, lineno=4)
          96	LOAD_FAST(arg=2, lineno=4)
          98	LOAD_CONST(arg=0, lineno=4)
         100	LOAD_CONST(arg=3, lineno=4)
         102	BUILD_SLICE(arg=2, lineno=4)
         104	STORE_SUBSCR(arg=None, lineno=4)
         108	LOAD_CONST(arg=2, lineno=5)
         110	LOAD_FAST(arg=2, lineno=5)
         112	LOAD_CONST(arg=4, lineno=5)
         114	LOAD_CONST(arg=0, lineno=5)
         116	BUILD_SLICE(arg=2, lineno=5)
         118	STORE_SUBSCR(arg=None, lineno=5)
         122	LOAD_GLOBAL(arg=9, lineno=6)
         134	LOAD_GLOBAL(arg=11, lineno=6)
         146	LOAD_CONST(arg=2, lineno=6)
         148	LOAD_CONST(arg=4, lineno=6)
         150	PRECALL(arg=2, lineno=6)
         154	CALL(arg=2, lineno=6)
         164	UNARY_NEGATIVE(arg=None, lineno=6)
         166	LOAD_FAST(arg=1, lineno=6)
         168	LOAD_CONST(arg=2, lineno=6)
         170	BINARY_SUBSCR(arg=None, lineno=6)
         180	LOAD_GLOBAL(arg=13, lineno=6)
         192	LOAD_CONST(arg=2, lineno=6)
         194	LOAD_CONST(arg=3, lineno=6)
         196	PRECALL(arg=2, lineno=6)
         200	CALL(arg=2, lineno=6)
         210	BINARY_OP(arg=10, lineno=6)
         214	PRECALL(arg=2, lineno=6)
         218	CALL(arg=2, lineno=6)
         228	GET_ITER(arg=None, lineno=6)
>        230	FOR_ITER(arg=4, lineno=6)
         232	STORE_FAST(arg=3, lineno=6)
         234	LOAD_CONST(arg=2, lineno=7)
         236	STORE_FAST(arg=4, lineno=7)
         238	JUMP_BACKWARD(arg=5, lineno=7)
>        240	LOAD_FAST(arg=2, lineno=8)
         242	RETURN_VALUE(arg=None, lineno=8)
2024-07-15 06:11:40,335 DEBUG:pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-15 06:11:40,335 DEBUG:stack: []
2024-07-15 06:11:40,335 DEBUG:state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-15 06:11:40,335 DEBUG:dispatch pc=0, inst=NOP(arg=None, lineno=1)
2024-07-15 06:11:40,335 DEBUG:stack []
2024-07-15 06:11:40,335 DEBUG:dispatch pc=2, inst=RESUME(arg=0, lineno=1)
2024-07-15 06:11:40,335 DEBUG:stack []
2024-07-15 06:11:40,335 DEBUG:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2)
2024-07-15 06:11:40,335 DEBUG:stack []
2024-07-15 06:11:40,335 DEBUG:dispatch pc=6, inst=LOAD_ATTR(arg=0, lineno=2)
2024-07-15 06:11:40,335 DEBUG:stack ['$x4.0']
2024-07-15 06:11:40,335 DEBUG:dispatch pc=16, inst=STORE_FAST(arg=1, lineno=2)
2024-07-15 06:11:40,335 DEBUG:stack ['$6load_attr.1']
2024-07-15 06:11:40,335 DEBUG:dispatch pc=18, inst=LOAD_GLOBAL(arg=2, lineno=3)
2024-07-15 06:11:40,335 DEBUG:stack []
2024-07-15 06:11:40,335 DEBUG:dispatch pc=30, inst=LOAD_METHOD(arg=2, lineno=3)
2024-07-15 06:11:40,335 DEBUG:stack ['$18load_global.2']
2024-07-15 06:11:40,335 DEBUG:dispatch pc=52, inst=LOAD_FAST(arg=1, lineno=3)
2024-07-15 06:11:40,335 DEBUG:stack ['$null$30.3', '$30load_method.4']
2024-07-15 06:11:40,336 DEBUG:dispatch pc=54, inst=LOAD_GLOBAL(arg=2, lineno=3)
2024-07-15 06:11:40,336 DEBUG:stack ['$null$30.3', '$30load_method.4', '$full_shape052.5']
2024-07-15 06:11:40,336 DEBUG:dispatch pc=66, inst=LOAD_ATTR(arg=3, lineno=3)
2024-07-15 06:11:40,336 DEBUG:stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$54load_global.6']
2024-07-15 06:11:40,336 DEBUG:dispatch pc=76, inst=KW_NAMES(arg=1, lineno=3)
2024-07-15 06:11:40,336 DEBUG:stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
2024-07-15 06:11:40,336 DEBUG:dispatch pc=78, inst=PRECALL(arg=2, lineno=3)
2024-07-15 06:11:40,336 DEBUG:stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
2024-07-15 06:11:40,336 DEBUG:dispatch pc=82, inst=CALL(arg=2, lineno=3)
2024-07-15 06:11:40,336 DEBUG:stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
2024-07-15 06:11:40,336 DEBUG:dispatch pc=92, inst=STORE_FAST(arg=2, lineno=3)
2024-07-15 06:11:40,336 DEBUG:stack ['$82call.8']
2024-07-15 06:11:40,336 DEBUG:dispatch pc=94, inst=LOAD_CONST(arg=2, lineno=4)
2024-07-15 06:11:40,336 DEBUG:stack []
2024-07-15 06:11:40,336 DEBUG:dispatch pc=96, inst=LOAD_FAST(arg=2, lineno=4)
2024-07-15 06:11:40,336 DEBUG:stack ['$const94.9']
2024-07-15 06:11:40,336 DEBUG:dispatch pc=98, inst=LOAD_CONST(arg=0, lineno=4)
2024-07-15 06:11:40,336 DEBUG:stack ['$const94.9', '$out096.10']
2024-07-15 06:11:40,336 DEBUG:dispatch pc=100, inst=LOAD_CONST(arg=3, lineno=4)
2024-07-15 06:11:40,336 DEBUG:stack ['$const94.9', '$out096.10', '$const98.11']
2024-07-15 06:11:40,336 DEBUG:dispatch pc=102, inst=BUILD_SLICE(arg=2, lineno=4)
2024-07-15 06:11:40,336 DEBUG:stack ['$const94.9', '$out096.10', '$const98.11', '$const100.12']
2024-07-15 06:11:40,336 DEBUG:dispatch pc=104, inst=STORE_SUBSCR(arg=None, lineno=4)
2024-07-15 06:11:40,336 DEBUG:stack ['$const94.9', '$out096.10', '$102build_slice.14']
2024-07-15 06:11:40,336 DEBUG:dispatch pc=108, inst=LOAD_CONST(arg=2, lineno=5)
2024-07-15 06:11:40,336 DEBUG:stack []
2024-07-15 06:11:40,336 DEBUG:dispatch pc=110, inst=LOAD_FAST(arg=2, lineno=5)
2024-07-15 06:11:40,336 DEBUG:stack ['$const108.15']
2024-07-15 06:11:40,336 DEBUG:dispatch pc=112, inst=LOAD_CONST(arg=4, lineno=5)
2024-07-15 06:11:40,336 DEBUG:stack ['$const108.15', '$out0110.16']
2024-07-15 06:11:40,336 DEBUG:dispatch pc=114, inst=LOAD_CONST(arg=0, lineno=5)
2024-07-15 06:11:40,336 DEBUG:stack ['$const108.15', '$out0110.16', '$const112.17']
2024-07-15 06:11:40,336 DEBUG:dispatch pc=116, inst=BUILD_SLICE(arg=2, lineno=5)
2024-07-15 06:11:40,336 DEBUG:stack ['$const108.15', '$out0110.16', '$const112.17', '$const114.18']
2024-07-15 06:11:40,336 DEBUG:dispatch pc=118, inst=STORE_SUBSCR(arg=None, lineno=5)
2024-07-15 06:11:40,336 DEBUG:stack ['$const108.15', '$out0110.16', '$116build_slice.20']
2024-07-15 06:11:40,336 DEBUG:dispatch pc=122, inst=LOAD_GLOBAL(arg=9, lineno=6)
2024-07-15 06:11:40,336 DEBUG:stack []
2024-07-15 06:11:40,336 DEBUG:dispatch pc=134, inst=LOAD_GLOBAL(arg=11, lineno=6)
2024-07-15 06:11:40,336 DEBUG:stack ['$null$122.22', '$122load_global.21']
2024-07-15 06:11:40,337 DEBUG:dispatch pc=146, inst=LOAD_CONST(arg=2, lineno=6)
2024-07-15 06:11:40,337 DEBUG:stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23']
2024-07-15 06:11:40,337 DEBUG:dispatch pc=148, inst=LOAD_CONST(arg=4, lineno=6)
2024-07-15 06:11:40,337 DEBUG:stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25']
2024-07-15 06:11:40,337 DEBUG:dispatch pc=150, inst=PRECALL(arg=2, lineno=6)
2024-07-15 06:11:40,337 DEBUG:stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25', '$const148.26']
2024-07-15 06:11:40,337 DEBUG:dispatch pc=154, inst=CALL(arg=2, lineno=6)
2024-07-15 06:11:40,337 DEBUG:stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25', '$const148.26']
2024-07-15 06:11:40,337 DEBUG:dispatch pc=164, inst=UNARY_NEGATIVE(arg=None, lineno=6)
2024-07-15 06:11:40,337 DEBUG:stack ['$null$122.22', '$122load_global.21', '$154call.27']
2024-07-15 06:11:40,337 DEBUG:dispatch pc=166, inst=LOAD_FAST(arg=1, lineno=6)
2024-07-15 06:11:40,337 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28']
2024-07-15 06:11:40,337 DEBUG:dispatch pc=168, inst=LOAD_CONST(arg=2, lineno=6)
2024-07-15 06:11:40,337 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$full_shape0166.29']
2024-07-15 06:11:40,337 DEBUG:dispatch pc=170, inst=BINARY_SUBSCR(arg=None, lineno=6)
2024-07-15 06:11:40,337 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$full_shape0166.29', '$const168.30']
2024-07-15 06:11:40,337 DEBUG:dispatch pc=180, inst=LOAD_GLOBAL(arg=13, lineno=6)
2024-07-15 06:11:40,337 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31']
2024-07-15 06:11:40,337 DEBUG:dispatch pc=192, inst=LOAD_CONST(arg=2, lineno=6)
2024-07-15 06:11:40,337 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32']
2024-07-15 06:11:40,337 DEBUG:dispatch pc=194, inst=LOAD_CONST(arg=3, lineno=6)
2024-07-15 06:11:40,337 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34']
2024-07-15 06:11:40,337 DEBUG:dispatch pc=196, inst=PRECALL(arg=2, lineno=6)
2024-07-15 06:11:40,337 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34', '$const194.35']
2024-07-15 06:11:40,337 DEBUG:dispatch pc=200, inst=CALL(arg=2, lineno=6)
2024-07-15 06:11:40,337 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34', '$const194.35']
2024-07-15 06:11:40,337 DEBUG:dispatch pc=210, inst=BINARY_OP(arg=10, lineno=6)
2024-07-15 06:11:40,337 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$200call.36']
2024-07-15 06:11:40,337 DEBUG:dispatch pc=214, inst=PRECALL(arg=2, lineno=6)
2024-07-15 06:11:40,337 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$binop_sub210.37']
2024-07-15 06:11:40,337 DEBUG:dispatch pc=218, inst=CALL(arg=2, lineno=6)
2024-07-15 06:11:40,338 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$binop_sub210.37']
2024-07-15 06:11:40,338 DEBUG:dispatch pc=228, inst=GET_ITER(arg=None, lineno=6)
2024-07-15 06:11:40,338 DEBUG:stack ['$218call.38']
2024-07-15 06:11:40,338 DEBUG:end state. edges=[Edge(pc=230, stack=('$228get_iter.39',), blockstack=(), npush=0)]
2024-07-15 06:11:40,338 DEBUG:pending: deque([State(pc_initial=230 nstack_initial=1)])
2024-07-15 06:11:40,338 DEBUG:stack: ['$phi230.0']
2024-07-15 06:11:40,338 DEBUG:state.pc_initial: State(pc_initial=230 nstack_initial=1)
2024-07-15 06:11:40,338 DEBUG:dispatch pc=230, inst=FOR_ITER(arg=4, lineno=6)
2024-07-15 06:11:40,338 DEBUG:stack ['$phi230.0']
2024-07-15 06:11:40,338 DEBUG:end state. edges=[Edge(pc=240, stack=(), blockstack=(), npush=0), Edge(pc=232, stack=('$phi230.0', '$230for_iter.2'), blockstack=(), npush=0)]
2024-07-15 06:11:40,338 DEBUG:pending: deque([State(pc_initial=240 nstack_initial=0), State(pc_initial=232 nstack_initial=2)])
2024-07-15 06:11:40,338 DEBUG:stack: []
2024-07-15 06:11:40,338 DEBUG:state.pc_initial: State(pc_initial=240 nstack_initial=0)
2024-07-15 06:11:40,338 DEBUG:dispatch pc=240, inst=LOAD_FAST(arg=2, lineno=8)
2024-07-15 06:11:40,338 DEBUG:stack []
2024-07-15 06:11:40,338 DEBUG:dispatch pc=242, inst=RETURN_VALUE(arg=None, lineno=8)
2024-07-15 06:11:40,338 DEBUG:stack ['$out0240.0']
2024-07-15 06:11:40,338 DEBUG:end state. edges=[]
2024-07-15 06:11:40,338 DEBUG:pending: deque([State(pc_initial=232 nstack_initial=2)])
2024-07-15 06:11:40,338 DEBUG:stack: ['$phi232.0', '$phi232.1']
2024-07-15 06:11:40,338 DEBUG:state.pc_initial: State(pc_initial=232 nstack_initial=2)
2024-07-15 06:11:40,338 DEBUG:dispatch pc=232, inst=STORE_FAST(arg=3, lineno=6)
2024-07-15 06:11:40,338 DEBUG:stack ['$phi232.0', '$phi232.1']
2024-07-15 06:11:40,338 DEBUG:dispatch pc=234, inst=LOAD_CONST(arg=2, lineno=7)
2024-07-15 06:11:40,338 DEBUG:stack ['$phi232.0']
2024-07-15 06:11:40,338 DEBUG:dispatch pc=236, inst=STORE_FAST(arg=4, lineno=7)
2024-07-15 06:11:40,338 DEBUG:stack ['$phi232.0', '$const234.2']
2024-07-15 06:11:40,338 DEBUG:dispatch pc=238, inst=JUMP_BACKWARD(arg=5, lineno=7)
2024-07-15 06:11:40,338 DEBUG:stack ['$phi232.0']
2024-07-15 06:11:40,338 DEBUG:end state. edges=[Edge(pc=230, stack=('$phi232.0',), blockstack=(), npush=0)]
2024-07-15 06:11:40,338 DEBUG:pending: deque([State(pc_initial=230 nstack_initial=1)])
2024-07-15 06:11:40,339 DEBUG:-------------------------Prune PHIs-------------------------
2024-07-15 06:11:40,339 DEBUG:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=230 nstack_initial=1): {'$phi230.0'},
             State(pc_initial=232 nstack_initial=2): {'$phi232.1'},
             State(pc_initial=240 nstack_initial=0): set()})
2024-07-15 06:11:40,339 DEBUG:defmap: {'$phi230.0': State(pc_initial=0 nstack_initial=0),
 '$phi232.1': State(pc_initial=230 nstack_initial=1)}
2024-07-15 06:11:40,339 DEBUG:phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi232.0',
                            State(pc_initial=232 nstack_initial=2))},
             '$phi232.0': {('$phi230.0',
                            State(pc_initial=230 nstack_initial=1))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-07-15 06:11:40,339 DEBUG:changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi230.0',
                            State(pc_initial=230 nstack_initial=1))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-07-15 06:11:40,339 DEBUG:changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-07-15 06:11:40,339 DEBUG:changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-07-15 06:11:40,339 DEBUG:keep phismap: {'$phi230.0': {('$228get_iter.39', State(pc_initial=0 nstack_initial=0))},
 '$phi232.1': {('$230for_iter.2', State(pc_initial=230 nstack_initial=1))}}
2024-07-15 06:11:40,339 DEBUG:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi230.0': '$228get_iter.39'},
             State(pc_initial=230 nstack_initial=1): {'$phi232.1': '$230for_iter.2'}})
2024-07-15 06:11:40,340 DEBUG:----------------------DONE Prune PHIs-----------------------
2024-07-15 06:11:40,340 DEBUG:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'item': '$x4.0', 'res': '$6load_attr.1'}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'value': '$6load_attr.1'}), (18, {'idx': 1, 'res': '$18load_global.2'}), (20, {}), (22, {}), (24, {}), (26, {}), (28, {}), (30, {'item': '$18load_global.2', 'res': '$30load_method.4'}), (32, {}), (34, {}), (36, {}), (38, {}), (40, {}), (42, {}), (44, {}), (46, {}), (48, {}), (50, {}), (52, {'res': '$full_shape052.5'}), (54, {'idx': 1, 'res': '$54load_global.6'}), (56, {}), (58, {}), (60, {}), (62, {}), (64, {}), (66, {'item': '$54load_global.6', 'res': '$66load_attr.7'}), (68, {}), (70, {}), (72, {}), (74, {}), (78, {}), (80, {}), (82, {'func': '$30load_method.4', 'args': ['$full_shape052.5', '$66load_attr.7'], 'kw_names': 1, 'res': '$82call.8'}), (84, {}), (86, {}), (88, {}), (90, {}), (92, {'value': '$82call.8'}), (94, {'res': '$const94.9'}), (96, {'res': '$out096.10'}), (98, {'res': '$const98.11'}), (100, {'res': '$const100.12'}), (102, {'start': '$const98.11', 'stop': '$const100.12', 'step': None, 'res': '$102build_slice.14', 'slicevar': '$102build_slice.13'}), (104, {'target': '$out096.10', 'index': '$102build_slice.14', 'value': '$const94.9'}), (106, {}), (108, {'res': '$const108.15'}), (110, {'res': '$out0110.16'}), (112, {'res': '$const112.17'}), (114, {'res': '$const114.18'}), (116, {'start': '$const112.17', 'stop': '$const114.18', 'step': None, 'res': '$116build_slice.20', 'slicevar': '$116build_slice.19'}), (118, {'target': '$out0110.16', 'index': '$116build_slice.20', 'value': '$const108.15'}), (120, {}), (122, {'idx': 4, 'res': '$122load_global.21'}), (124, {}), (126, {}), (128, {}), (130, {}), (132, {}), (134, {'idx': 5, 'res': '$134load_global.23'}), (136, {}), (138, {}), (140, {}), (142, {}), (144, {}), (146, {'res': '$const146.25'}), (148, {'res': '$const148.26'}), (150, {}), (152, {}), (154, {'func': '$134load_global.23', 'args': ['$const146.25', '$const148.26'], 'kw_names': None, 'res': '$154call.27'}), (156, {}), (158, {}), (160, {}), (162, {}), (164, {'value': '$154call.27', 'res': '$164unary_negative.28'}), (166, {'res': '$full_shape0166.29'}), (168, {'res': '$const168.30'}), (170, {'index': '$const168.30', 'target': '$full_shape0166.29', 'res': '$170binary_subscr.31'}), (172, {}), (174, {}), (176, {}), (178, {}), (180, {'idx': 6, 'res': '$180load_global.32'}), (182, {}), (184, {}), (186, {}), (188, {}), (190, {}), (192, {'res': '$const192.34'}), (194, {'res': '$const194.35'}), (196, {}), (198, {}), (200, {'func': '$180load_global.32', 'args': ['$const192.34', '$const194.35'], 'kw_names': None, 'res': '$200call.36'}), (202, {}), (204, {}), (206, {}), (208, {}), (210, {'op': '-', 'lhs': '$170binary_subscr.31', 'rhs': '$200call.36', 'res': '$binop_sub210.37'}), (212, {}), (214, {}), (216, {}), (218, {'func': '$122load_global.21', 'args': ['$164unary_negative.28', '$binop_sub210.37'], 'kw_names': None, 'res': '$218call.38'}), (220, {}), (222, {}), (224, {}), (226, {}), (228, {'value': '$218call.38', 'res': '$228get_iter.39'})), outgoing_phis={'$phi230.0': '$228get_iter.39'}, blockstack=(), active_try_block=None, outgoing_edgepushed={230: ('$228get_iter.39',)})
2024-07-15 06:11:40,340 DEBUG:block_infos State(pc_initial=230 nstack_initial=1):
AdaptBlockInfo(insts=((230, {'iterator': '$phi230.0', 'pair': '$230for_iter.1', 'indval': '$230for_iter.2', 'pred': '$230for_iter.3'}),), outgoing_phis={'$phi232.1': '$230for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={240: (), 232: ('$phi230.0', '$230for_iter.2')})
2024-07-15 06:11:40,340 DEBUG:block_infos State(pc_initial=232 nstack_initial=2):
AdaptBlockInfo(insts=((232, {'value': '$phi232.1'}), (234, {'res': '$const234.2'}), (236, {'value': '$const234.2'}), (238, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={230: ('$phi232.0',)})
2024-07-15 06:11:40,340 DEBUG:block_infos State(pc_initial=240 nstack_initial=0):
AdaptBlockInfo(insts=((240, {'res': '$out0240.0'}), (242, {'retval': '$out0240.0', 'castval': '$242return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-15 06:11:40,341 DEBUG:label 0:
    x = arg(0, name=x)                       ['x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $18load_global.2 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$18load_global.2']
    $30load_method.4 = getattr(value=$18load_global.2, attr=empty) ['$18load_global.2', '$30load_method.4']
    $54load_global.6 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$54load_global.6']
    $66load_attr.7 = getattr(value=$54load_global.6, attr=bool_) ['$54load_global.6', '$66load_attr.7']
    out0 = call $30load_method.4(full_shape0, func=$30load_method.4, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7, <string>:3))], vararg=None, varkwarg=None, target=None) ['$30load_method.4', '$66load_attr.7', 'full_shape0', 'out0']
    $const94.9 = const(int, 0)               ['$const94.9']
    $const98.11 = const(NoneType, None)      ['$const98.11']
    $const100.12 = const(int, 1)             ['$const100.12']
    $102build_slice.13 = global(slice: <class 'slice'>) ['$102build_slice.13']
    $102build_slice.14 = call $102build_slice.13($const98.11, $const100.12, func=$102build_slice.13, args=(Var($const98.11, <string>:4), Var($const100.12, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$102build_slice.13', '$102build_slice.14', '$const100.12', '$const98.11']
    out0[$102build_slice.14] = $const94.9    ['$102build_slice.14', '$const94.9', 'out0']
    $const108.15 = const(int, 0)             ['$const108.15']
    $const112.17 = const(int, -1)            ['$const112.17']
    $const114.18 = const(NoneType, None)     ['$const114.18']
    $116build_slice.19 = global(slice: <class 'slice'>) ['$116build_slice.19']
    $116build_slice.20 = call $116build_slice.19($const112.17, $const114.18, func=$116build_slice.19, args=(Var($const112.17, <string>:5), Var($const114.18, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$116build_slice.19', '$116build_slice.20', '$const112.17', '$const114.18']
    out0[$116build_slice.20] = $const108.15  ['$116build_slice.20', '$const108.15', 'out0']
    $122load_global.21 = global(range: <class 'range'>) ['$122load_global.21']
    $134load_global.23 = global(min: <built-in function min>) ['$134load_global.23']
    $const146.25 = const(int, 0)             ['$const146.25']
    $const148.26 = const(int, -1)            ['$const148.26']
    $154call.27 = call $134load_global.23($const146.25, $const148.26, func=$134load_global.23, args=[Var($const146.25, <string>:6), Var($const148.26, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$134load_global.23', '$154call.27', '$const146.25', '$const148.26']
    $164unary_negative.28 = unary(fn=<built-in function neg>, value=$154call.27) ['$154call.27', '$164unary_negative.28']
    $const168.30 = const(int, 0)             ['$const168.30']
    $170binary_subscr.31 = getitem(value=full_shape0, index=$const168.30, fn=<built-in function getitem>) ['$170binary_subscr.31', '$const168.30', 'full_shape0']
    $180load_global.32 = global(max: <built-in function max>) ['$180load_global.32']
    $const192.34 = const(int, 0)             ['$const192.34']
    $const194.35 = const(int, 1)             ['$const194.35']
    $200call.36 = call $180load_global.32($const192.34, $const194.35, func=$180load_global.32, args=[Var($const192.34, <string>:6), Var($const194.35, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$180load_global.32', '$200call.36', '$const192.34', '$const194.35']
    $binop_sub210.37 = $170binary_subscr.31 - $200call.36 ['$170binary_subscr.31', '$200call.36', '$binop_sub210.37']
    $218call.38 = call $122load_global.21($164unary_negative.28, $binop_sub210.37, func=$122load_global.21, args=[Var($164unary_negative.28, <string>:6), Var($binop_sub210.37, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$122load_global.21', '$164unary_negative.28', '$218call.38', '$binop_sub210.37']
    $228get_iter.39 = getiter(value=$218call.38) ['$218call.38', '$228get_iter.39']
    $phi230.0 = $228get_iter.39              ['$228get_iter.39', '$phi230.0']
    jump 230                                 []
label 230:
    $230for_iter.1 = iternext(value=$phi230.0) ['$230for_iter.1', '$phi230.0']
    $230for_iter.2 = pair_first(value=$230for_iter.1) ['$230for_iter.1', '$230for_iter.2']
    $230for_iter.3 = pair_second(value=$230for_iter.1) ['$230for_iter.1', '$230for_iter.3']
    $phi232.1 = $230for_iter.2               ['$230for_iter.2', '$phi232.1']
    branch $230for_iter.3, 232, 240          ['$230for_iter.3']
label 232:
    index00 = $phi232.1                      ['$phi232.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 230                                 []
label 240:
    $242return_value.1 = cast(value=out0)    ['$242return_value.1', 'out0']
    return $242return_value.1                ['$242return_value.1']

2024-07-15 06:11:40,356 DEBUG:==== SSA block analysis pass on 0
2024-07-15 06:11:40,356 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B6B18810>
2024-07-15 06:11:40,356 DEBUG:on stmt: x = arg(0, name=x)
2024-07-15 06:11:40,356 DEBUG:on stmt: full_shape0 = getattr(value=x, attr=shape)
2024-07-15 06:11:40,356 DEBUG:on stmt: $18load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:40,356 DEBUG:on stmt: $30load_method.4.1 = getattr(value=$18load_global.2.1, attr=empty)
2024-07-15 06:11:40,356 DEBUG:on stmt: $54load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:40,356 DEBUG:on stmt: $66load_attr.7.1 = getattr(value=$54load_global.6.1, attr=bool_)
2024-07-15 06:11:40,356 DEBUG:on stmt: out0 = call $30load_method.4.1(full_shape0, func=$30load_method.4.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:40,356 DEBUG:on stmt: $const94.9.1 = const(int, 0)
2024-07-15 06:11:40,356 DEBUG:on stmt: $const98.11.1 = const(NoneType, None)
2024-07-15 06:11:40,356 DEBUG:on stmt: $const100.12.1 = const(int, 1)
2024-07-15 06:11:40,356 DEBUG:on stmt: $102build_slice.13.1 = global(slice: <class 'slice'>)
2024-07-15 06:11:40,356 DEBUG:on stmt: $102build_slice.14.1 = call $102build_slice.13.1($const98.11.1, $const100.12.1, func=$102build_slice.13.1, args=(Var($const98.11.1, <string>:4), Var($const100.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:40,356 DEBUG:on stmt: out0[$102build_slice.14.1] = $const94.9.1
2024-07-15 06:11:40,356 DEBUG:on stmt: $const108.15.1 = const(int, 0)
2024-07-15 06:11:40,356 DEBUG:on stmt: $const112.17.1 = const(int, -1)
2024-07-15 06:11:40,356 DEBUG:on stmt: $const114.18.1 = const(NoneType, None)
2024-07-15 06:11:40,356 DEBUG:on stmt: $116build_slice.19.1 = global(slice: <class 'slice'>)
2024-07-15 06:11:40,356 DEBUG:on stmt: $116build_slice.20.1 = call $116build_slice.19.1($const112.17.1, $const114.18.1, func=$116build_slice.19.1, args=(Var($const112.17.1, <string>:5), Var($const114.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:40,356 DEBUG:on stmt: out0[$116build_slice.20.1] = $const108.15.1
2024-07-15 06:11:40,356 DEBUG:on stmt: $122load_global.21.1 = global(range: <class 'range'>)
2024-07-15 06:11:40,356 DEBUG:on stmt: $134load_global.23.1 = global(min: <built-in function min>)
2024-07-15 06:11:40,357 DEBUG:on stmt: $const146.25.1 = const(int, 0)
2024-07-15 06:11:40,357 DEBUG:on stmt: $const148.26.1 = const(int, -1)
2024-07-15 06:11:40,357 DEBUG:on stmt: $154call.27.1 = call $134load_global.23.1($const146.25.1, $const148.26.1, func=$134load_global.23.1, args=[Var($const146.25.1, <string>:6), Var($const148.26.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:40,357 DEBUG:on stmt: $164unary_negative.28.1 = unary(fn=<built-in function neg>, value=$154call.27.1)
2024-07-15 06:11:40,357 DEBUG:on stmt: $const168.30.1 = const(int, 0)
2024-07-15 06:11:40,357 DEBUG:on stmt: $170binary_subscr.31.1 = getitem(value=full_shape0, index=$const168.30.1, fn=<built-in function getitem>)
2024-07-15 06:11:40,357 DEBUG:on stmt: $180load_global.32.1 = global(max: <built-in function max>)
2024-07-15 06:11:40,357 DEBUG:on stmt: $const192.34.1 = const(int, 0)
2024-07-15 06:11:40,357 DEBUG:on stmt: $const194.35.1 = const(int, 1)
2024-07-15 06:11:40,357 DEBUG:on stmt: $200call.36.1 = call $180load_global.32.1($const192.34.1, $const194.35.1, func=$180load_global.32.1, args=[Var($const192.34.1, <string>:6), Var($const194.35.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:40,357 DEBUG:on stmt: $binop_sub210.37.1 = $170binary_subscr.31.1 - $200call.36.1
2024-07-15 06:11:40,357 DEBUG:on stmt: $218call.38.1 = call $122load_global.21.1($164unary_negative.28.1, $binop_sub210.37.1, func=$122load_global.21.1, args=[Var($164unary_negative.28.1, <string>:6), Var($binop_sub210.37.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:40,357 DEBUG:on stmt: $228get_iter.39.1 = getiter(value=$218call.38.1)
2024-07-15 06:11:40,357 DEBUG:on stmt: $phi230.0.1 = $228get_iter.39.1
2024-07-15 06:11:40,357 DEBUG:on stmt: jump 230
2024-07-15 06:11:40,357 DEBUG:==== SSA block analysis pass on 230
2024-07-15 06:11:40,357 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B6B18810>
2024-07-15 06:11:40,357 DEBUG:on stmt: $230for_iter.1.1 = iternext(value=$phi230.0.1)
2024-07-15 06:11:40,357 DEBUG:on stmt: $230for_iter.2.1 = pair_first(value=$230for_iter.1.1)
2024-07-15 06:11:40,357 DEBUG:on stmt: $230for_iter.3.1 = pair_second(value=$230for_iter.1.1)
2024-07-15 06:11:40,357 DEBUG:on stmt: $phi232.1.1 = $230for_iter.2.1
2024-07-15 06:11:40,357 DEBUG:on stmt: branch $230for_iter.3.1, 232, 242
2024-07-15 06:11:40,357 DEBUG:==== SSA block analysis pass on 232
2024-07-15 06:11:40,357 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B6B18810>
2024-07-15 06:11:40,357 DEBUG:on stmt: index00 = $phi232.1.1
2024-07-15 06:11:40,357 DEBUG:on stmt: jump 240
2024-07-15 06:11:40,357 DEBUG:==== SSA block analysis pass on 242
2024-07-15 06:11:40,357 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B6B18810>
2024-07-15 06:11:40,357 DEBUG:on stmt: $242return_value.1.1 = cast(value=out0)
2024-07-15 06:11:40,357 DEBUG:on stmt: return $242return_value.1.1
2024-07-15 06:11:40,357 DEBUG:==== SSA block analysis pass on 240
2024-07-15 06:11:40,357 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B6B18810>
2024-07-15 06:11:40,357 DEBUG:on stmt: $const6.1 = const(int, 0)
2024-07-15 06:11:40,357 DEBUG:on stmt: stencil_index = $const6.1 + index00
2024-07-15 06:11:40,358 DEBUG:on stmt: $8binary_subscr.2 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-07-15 06:11:40,358 DEBUG:on stmt: $const20.4 = const(int, -1)
2024-07-15 06:11:40,358 DEBUG:on stmt: stencil_index.1 = $const20.4 + index00
2024-07-15 06:11:40,358 DEBUG:on stmt: $22binary_subscr.5 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2024-07-15 06:11:40,358 DEBUG:on stmt: $32compare_op.6 = $8binary_subscr.2 < $22binary_subscr.5
2024-07-15 06:11:40,358 DEBUG:on stmt: $const40.8 = const(int, 0)
2024-07-15 06:11:40,358 DEBUG:on stmt: stencil_index.2 = $const40.8 + index00
2024-07-15 06:11:40,358 DEBUG:on stmt: $42binary_subscr.9 = getitem(value=x, index=stencil_index.2, fn=<built-in function getitem>)
2024-07-15 06:11:40,358 DEBUG:on stmt: $const54.11 = const(int, 1)
2024-07-15 06:11:40,358 DEBUG:on stmt: stencil_index.3 = $const54.11 + index00
2024-07-15 06:11:40,358 DEBUG:on stmt: $56binary_subscr.12 = getitem(value=x, index=stencil_index.3, fn=<built-in function getitem>)
2024-07-15 06:11:40,358 DEBUG:on stmt: $66compare_op.13 = $42binary_subscr.9 <= $56binary_subscr.12
2024-07-15 06:11:40,358 DEBUG:on stmt: $binop_and_72.14 = $32compare_op.6 & $66compare_op.13
2024-07-15 06:11:40,358 DEBUG:on stmt: $76return_value.15 = cast(value=$binop_and_72.14)
2024-07-15 06:11:40,358 DEBUG:on stmt: out0[index00] = $76return_value.15
2024-07-15 06:11:40,358 DEBUG:on stmt: jump 241
2024-07-15 06:11:40,358 DEBUG:==== SSA block analysis pass on 241
2024-07-15 06:11:40,358 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B6B18810>
2024-07-15 06:11:40,358 DEBUG:on stmt: jump 230
2024-07-15 06:11:40,359 DEBUG:defs defaultdict(<class 'list'>,
            {'$102build_slice.13.1': [(<numba.core.ir.Assign object at 0x00000221B6B21990>,
                                       0)],
             '$102build_slice.14.1': [(<numba.core.ir.Assign object at 0x00000221B6B23B10>,
                                       0)],
             '$116build_slice.19.1': [(<numba.core.ir.Assign object at 0x00000221B6B22A90>,
                                       0)],
             '$116build_slice.20.1': [(<numba.core.ir.Assign object at 0x00000221B6B231D0>,
                                       0)],
             '$122load_global.21.1': [(<numba.core.ir.Assign object at 0x00000221B6B22E10>,
                                       0)],
             '$134load_global.23.1': [(<numba.core.ir.Assign object at 0x00000221B6B21F50>,
                                       0)],
             '$154call.27.1': [(<numba.core.ir.Assign object at 0x00000221B6B23450>,
                                0)],
             '$164unary_negative.28.1': [(<numba.core.ir.Assign object at 0x00000221B6B22B50>,
                                          0)],
             '$170binary_subscr.31.1': [(<numba.core.ir.Assign object at 0x00000221B6B22190>,
                                         0)],
             '$180load_global.32.1': [(<numba.core.ir.Assign object at 0x00000221B6B22450>,
                                       0)],
             '$18load_global.2.1': [(<numba.core.ir.Assign object at 0x00000221B6B30D50>,
                                     0)],
             '$200call.36.1': [(<numba.core.ir.Assign object at 0x00000221B6B21CD0>,
                                0)],
             '$218call.38.1': [(<numba.core.ir.Assign object at 0x00000221B6B20310>,
                                0)],
             '$228get_iter.39.1': [(<numba.core.ir.Assign object at 0x00000221B6B21590>,
                                    0)],
             '$22binary_subscr.5': [(<numba.core.ir.Assign object at 0x00000221B6B39ED0>,
                                     240)],
             '$230for_iter.1.1': [(<numba.core.ir.Assign object at 0x00000221B6B20790>,
                                   230)],
             '$230for_iter.2.1': [(<numba.core.ir.Assign object at 0x00000221B6B20810>,
                                   230)],
             '$230for_iter.3.1': [(<numba.core.ir.Assign object at 0x00000221B6B20B50>,
                                   230)],
             '$242return_value.1.1': [(<numba.core.ir.Assign object at 0x00000221B6B192D0>,
                                       242)],
             '$30load_method.4.1': [(<numba.core.ir.Assign object at 0x00000221B6B31790>,
                                     0)],
             '$32compare_op.6': [(<numba.core.ir.Assign object at 0x00000221B7B960D0>,
                                  240)],
             '$42binary_subscr.9': [(<numba.core.ir.Assign object at 0x00000221B6B39F50>,
                                     240)],
             '$54load_global.6.1': [(<numba.core.ir.Assign object at 0x00000221B6B30B50>,
                                     0)],
             '$56binary_subscr.12': [(<numba.core.ir.Assign object at 0x00000221B6B39B90>,
                                      240)],
             '$66compare_op.13': [(<numba.core.ir.Assign object at 0x00000221B6B4D690>,
                                   240)],
             '$66load_attr.7.1': [(<numba.core.ir.Assign object at 0x00000221B6B307D0>,
                                   0)],
             '$76return_value.15': [(<numba.core.ir.Assign object at 0x00000221B6B3B190>,
                                     240)],
             '$8binary_subscr.2': [(<numba.core.ir.Assign object at 0x00000221B6B3A350>,
                                    240)],
             '$binop_and_72.14': [(<numba.core.ir.Assign object at 0x00000221B6B3B610>,
                                   240)],
             '$binop_sub210.37.1': [(<numba.core.ir.Assign object at 0x00000221B6B20250>,
                                     0)],
             '$const100.12.1': [(<numba.core.ir.Assign object at 0x00000221B6B22810>,
                                 0)],
             '$const108.15.1': [(<numba.core.ir.Assign object at 0x00000221B6B23E90>,
                                 0)],
             '$const112.17.1': [(<numba.core.ir.Assign object at 0x00000221B6B23690>,
                                 0)],
             '$const114.18.1': [(<numba.core.ir.Assign object at 0x00000221B6B23790>,
                                 0)],
             '$const146.25.1': [(<numba.core.ir.Assign object at 0x00000221B6B21090>,
                                 0)],
             '$const148.26.1': [(<numba.core.ir.Assign object at 0x00000221B6B23590>,
                                 0)],
             '$const168.30.1': [(<numba.core.ir.Assign object at 0x00000221B6B23210>,
                                 0)],
             '$const192.34.1': [(<numba.core.ir.Assign object at 0x00000221B6B216D0>,
                                 0)],
             '$const194.35.1': [(<numba.core.ir.Assign object at 0x00000221B6B21910>,
                                 0)],
             '$const20.4': [(<numba.core.ir.Assign object at 0x00000221B7B95490>,
                             240)],
             '$const40.8': [(<numba.core.ir.Assign object at 0x00000221B5F06D50>,
                             240)],
             '$const54.11': [(<numba.core.ir.Assign object at 0x00000221B6B4E790>,
                              240)],
             '$const6.1': [(<numba.core.ir.Assign object at 0x00000221B7BA0A10>,
                            240)],
             '$const94.9.1': [(<numba.core.ir.Assign object at 0x00000221B6B30110>,
                               0)],
             '$const98.11.1': [(<numba.core.ir.Assign object at 0x00000221B6B21A10>,
                                0)],
             '$phi230.0.1': [(<numba.core.ir.Assign object at 0x00000221B6B31350>,
                              0)],
             '$phi232.1.1': [(<numba.core.ir.Assign object at 0x00000221B6B20B90>,
                              230)],
             'full_shape0': [(<numba.core.ir.Assign object at 0x00000221B6B31A10>,
                              0)],
             'index00': [(<numba.core.ir.Assign object at 0x00000221B6B20E90>,
                          232)],
             'out0': [(<numba.core.ir.Assign object at 0x00000221B6B303D0>, 0)],
             'stencil_index': [(<numba.core.ir.Assign object at 0x00000221B6B3A390>,
                                240)],
             'stencil_index.1': [(<numba.core.ir.Assign object at 0x00000221B6B3A290>,
                                  240)],
             'stencil_index.2': [(<numba.core.ir.Assign object at 0x00000221B6B39DD0>,
                                  240)],
             'stencil_index.3': [(<numba.core.ir.Assign object at 0x00000221B6B39AD0>,
                                  240)],
             'x': [(<numba.core.ir.Assign object at 0x00000221B6B31650>, 0)]})
2024-07-15 06:11:40,359 DEBUG:SSA violators <numba.core.utils.OrderedSet object at 0x00000221B6B18810>
2024-07-15 06:11:40,681 DEBUG:bytecode dump:
>          0	NOP(arg=None, lineno=1068)
           2	RESUME(arg=0, lineno=1068)
           4	LOAD_GLOBAL(arg=1, lineno=1082)
          16	LOAD_FAST(arg=0, lineno=1082)
          18	PRECALL(arg=1, lineno=1082)
          22	CALL(arg=1, lineno=1082)
          32	LOAD_FAST(arg=1, lineno=1082)
          34	LOAD_CONST(arg=1, lineno=1082)
          36	LOAD_CONST(arg=1, lineno=1082)
          38	BUILD_SLICE(arg=2, lineno=1082)
          40	STORE_SUBSCR(arg=None, lineno=1082)
          44	LOAD_CONST(arg=1, lineno=1082)
          46	RETURN_VALUE(arg=None, lineno=1082)
2024-07-15 06:11:40,681 DEBUG:pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-15 06:11:40,681 DEBUG:stack: []
2024-07-15 06:11:40,681 DEBUG:state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-15 06:11:40,681 DEBUG:dispatch pc=0, inst=NOP(arg=None, lineno=1068)
2024-07-15 06:11:40,681 DEBUG:stack []
2024-07-15 06:11:40,681 DEBUG:dispatch pc=2, inst=RESUME(arg=0, lineno=1068)
2024-07-15 06:11:40,681 DEBUG:stack []
2024-07-15 06:11:40,681 DEBUG:dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=1082)
2024-07-15 06:11:40,681 DEBUG:stack []
2024-07-15 06:11:40,681 DEBUG:dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=1082)
2024-07-15 06:11:40,681 DEBUG:stack ['$null$4.1', '$4load_global.0']
2024-07-15 06:11:40,681 DEBUG:dispatch pc=18, inst=PRECALL(arg=1, lineno=1082)
2024-07-15 06:11:40,681 DEBUG:stack ['$null$4.1', '$4load_global.0', '$x16.2']
2024-07-15 06:11:40,681 DEBUG:dispatch pc=22, inst=CALL(arg=1, lineno=1082)
2024-07-15 06:11:40,681 DEBUG:stack ['$null$4.1', '$4load_global.0', '$x16.2']
2024-07-15 06:11:40,681 DEBUG:dispatch pc=32, inst=LOAD_FAST(arg=1, lineno=1082)
2024-07-15 06:11:40,681 DEBUG:stack ['$22call.3']
2024-07-15 06:11:40,681 DEBUG:dispatch pc=34, inst=LOAD_CONST(arg=1, lineno=1082)
2024-07-15 06:11:40,681 DEBUG:stack ['$22call.3', '$y32.4']
2024-07-15 06:11:40,681 DEBUG:dispatch pc=36, inst=LOAD_CONST(arg=1, lineno=1082)
2024-07-15 06:11:40,682 DEBUG:stack ['$22call.3', '$y32.4', '$const34.5']
2024-07-15 06:11:40,682 DEBUG:dispatch pc=38, inst=BUILD_SLICE(arg=2, lineno=1082)
2024-07-15 06:11:40,682 DEBUG:stack ['$22call.3', '$y32.4', '$const34.5', '$const36.6']
2024-07-15 06:11:40,682 DEBUG:dispatch pc=40, inst=STORE_SUBSCR(arg=None, lineno=1082)
2024-07-15 06:11:40,682 DEBUG:stack ['$22call.3', '$y32.4', '$38build_slice.8']
2024-07-15 06:11:40,682 DEBUG:dispatch pc=44, inst=LOAD_CONST(arg=1, lineno=1082)
2024-07-15 06:11:40,682 DEBUG:stack []
2024-07-15 06:11:40,682 DEBUG:dispatch pc=46, inst=RETURN_VALUE(arg=None, lineno=1082)
2024-07-15 06:11:40,682 DEBUG:stack ['$const44.9']
2024-07-15 06:11:40,682 DEBUG:end state. edges=[]
2024-07-15 06:11:40,682 DEBUG:-------------------------Prune PHIs-------------------------
2024-07-15 06:11:40,682 DEBUG:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-07-15 06:11:40,682 DEBUG:defmap: {}
2024-07-15 06:11:40,682 DEBUG:phismap: defaultdict(<class 'set'>, {})
2024-07-15 06:11:40,682 DEBUG:changing phismap: defaultdict(<class 'set'>, {})
2024-07-15 06:11:40,682 DEBUG:keep phismap: {}
2024-07-15 06:11:40,682 DEBUG:new_out: defaultdict(<class 'dict'>, {})
2024-07-15 06:11:40,682 DEBUG:----------------------DONE Prune PHIs-----------------------
2024-07-15 06:11:40,682 DEBUG:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (6, {}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$x16.2'}), (18, {}), (20, {}), (22, {'func': '$4load_global.0', 'args': ['$x16.2'], 'kw_names': None, 'res': '$22call.3'}), (24, {}), (26, {}), (28, {}), (30, {}), (32, {'res': '$y32.4'}), (34, {'res': '$const34.5'}), (36, {'res': '$const36.6'}), (38, {'start': '$const34.5', 'stop': '$const36.6', 'step': None, 'res': '$38build_slice.8', 'slicevar': '$38build_slice.7'}), (40, {'target': '$y32.4', 'index': '$38build_slice.8', 'value': '$22call.3'}), (42, {}), (44, {'res': '$const44.9'}), (46, {'retval': '$const44.9', 'castval': '$46return_value.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-15 06:11:40,683 DEBUG:label 0:
    x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    $4load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x00000221B6076710>) ['$4load_global.0']
    $22call.3 = call $4load_global.0(x, func=$4load_global.0, args=[Var(x, utils.py:1068)], kws=(), vararg=None, varkwarg=None, target=None) ['$22call.3', '$4load_global.0', 'x']
    $const34.5 = const(NoneType, None)       ['$const34.5']
    $const36.6 = const(NoneType, None)       ['$const36.6']
    $38build_slice.7 = global(slice: <class 'slice'>) ['$38build_slice.7']
    $38build_slice.8 = call $38build_slice.7($const34.5, $const36.6, func=$38build_slice.7, args=(Var($const34.5, utils.py:1082), Var($const36.6, utils.py:1082)), kws=(), vararg=None, varkwarg=None, target=None) ['$38build_slice.7', '$38build_slice.8', '$const34.5', '$const36.6']
    y[$38build_slice.8] = $22call.3          ['$22call.3', '$38build_slice.8', 'y']
    $const44.9 = const(NoneType, None)       ['$const44.9']
    $46return_value.10 = cast(value=$const44.9) ['$46return_value.10', '$const44.9']
    return $46return_value.10                ['$46return_value.10']

2024-07-15 06:11:40,688 DEBUG:==== SSA block analysis pass on 0
2024-07-15 06:11:40,688 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5FAE710>
2024-07-15 06:11:40,688 DEBUG:on stmt: x = arg(0, name=x)
2024-07-15 06:11:40,688 DEBUG:on stmt: y = arg(1, name=y)
2024-07-15 06:11:40,688 DEBUG:on stmt: $4load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x00000221B6076710>)
2024-07-15 06:11:40,688 DEBUG:on stmt: $22call.3 = call $4load_global.0(x, func=$4load_global.0, args=[Var(x, utils.py:1068)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:40,688 DEBUG:on stmt: $const34.5 = const(NoneType, None)
2024-07-15 06:11:40,688 DEBUG:on stmt: $const36.6 = const(NoneType, None)
2024-07-15 06:11:40,688 DEBUG:on stmt: $38build_slice.7 = global(slice: <class 'slice'>)
2024-07-15 06:11:40,689 DEBUG:on stmt: $38build_slice.8 = call $38build_slice.7($const34.5, $const36.6, func=$38build_slice.7, args=(Var($const34.5, utils.py:1082), Var($const36.6, utils.py:1082)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:40,689 DEBUG:on stmt: y[slice(None, None, None)] = $22call.3
2024-07-15 06:11:40,689 DEBUG:on stmt: $const44.9 = const(NoneType, None)
2024-07-15 06:11:40,689 DEBUG:on stmt: $46return_value.10 = cast(value=$const44.9)
2024-07-15 06:11:40,689 DEBUG:on stmt: return $46return_value.10
2024-07-15 06:11:40,689 DEBUG:defs defaultdict(<class 'list'>,
            {'$22call.3': [(<numba.core.ir.Assign object at 0x00000221B5FACBD0>,
                            0)],
             '$38build_slice.7': [(<numba.core.ir.Assign object at 0x00000221B5FAF810>,
                                   0)],
             '$38build_slice.8': [(<numba.core.ir.Assign object at 0x00000221B5FAFFD0>,
                                   0)],
             '$46return_value.10': [(<numba.core.ir.Assign object at 0x00000221B5FACB50>,
                                     0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x00000221B68A6990>,
                                  0)],
             '$const34.5': [(<numba.core.ir.Assign object at 0x00000221B5FAF410>,
                             0)],
             '$const36.6': [(<numba.core.ir.Assign object at 0x00000221B5FAD090>,
                             0)],
             '$const44.9': [(<numba.core.ir.Assign object at 0x00000221B5FAD510>,
                             0)],
             'x': [(<numba.core.ir.Assign object at 0x00000221B68A4E90>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x00000221B68A5610>, 0)]})
2024-07-15 06:11:40,689 DEBUG:SSA violators <numba.core.utils.OrderedSet object at 0x00000221B5FAE710>
2024-07-15 06:11:40,706 DEBUG:bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	RESUME(arg=0, lineno=1)
           4	LOAD_FAST(arg=0, lineno=2)
           6	LOAD_ATTR(arg=0, lineno=2)
          16	STORE_FAST(arg=1, lineno=2)
          18	LOAD_GLOBAL(arg=2, lineno=3)
          30	LOAD_METHOD(arg=2, lineno=3)
          52	LOAD_FAST(arg=1, lineno=3)
          54	LOAD_GLOBAL(arg=2, lineno=3)
          66	LOAD_ATTR(arg=3, lineno=3)
          76	KW_NAMES(arg=1, lineno=3)
          78	PRECALL(arg=2, lineno=3)
          82	CALL(arg=2, lineno=3)
          92	STORE_FAST(arg=2, lineno=3)
          94	LOAD_CONST(arg=2, lineno=4)
          96	LOAD_FAST(arg=2, lineno=4)
          98	LOAD_CONST(arg=0, lineno=4)
         100	LOAD_CONST(arg=3, lineno=4)
         102	BUILD_SLICE(arg=2, lineno=4)
         104	STORE_SUBSCR(arg=None, lineno=4)
         108	LOAD_CONST(arg=2, lineno=5)
         110	LOAD_FAST(arg=2, lineno=5)
         112	LOAD_CONST(arg=4, lineno=5)
         114	LOAD_CONST(arg=0, lineno=5)
         116	BUILD_SLICE(arg=2, lineno=5)
         118	STORE_SUBSCR(arg=None, lineno=5)
         122	LOAD_GLOBAL(arg=9, lineno=6)
         134	LOAD_GLOBAL(arg=11, lineno=6)
         146	LOAD_CONST(arg=2, lineno=6)
         148	LOAD_CONST(arg=4, lineno=6)
         150	PRECALL(arg=2, lineno=6)
         154	CALL(arg=2, lineno=6)
         164	UNARY_NEGATIVE(arg=None, lineno=6)
         166	LOAD_FAST(arg=1, lineno=6)
         168	LOAD_CONST(arg=2, lineno=6)
         170	BINARY_SUBSCR(arg=None, lineno=6)
         180	LOAD_GLOBAL(arg=13, lineno=6)
         192	LOAD_CONST(arg=2, lineno=6)
         194	LOAD_CONST(arg=3, lineno=6)
         196	PRECALL(arg=2, lineno=6)
         200	CALL(arg=2, lineno=6)
         210	BINARY_OP(arg=10, lineno=6)
         214	PRECALL(arg=2, lineno=6)
         218	CALL(arg=2, lineno=6)
         228	GET_ITER(arg=None, lineno=6)
>        230	FOR_ITER(arg=4, lineno=6)
         232	STORE_FAST(arg=3, lineno=6)
         234	LOAD_CONST(arg=2, lineno=7)
         236	STORE_FAST(arg=4, lineno=7)
         238	JUMP_BACKWARD(arg=5, lineno=7)
>        240	LOAD_FAST(arg=2, lineno=8)
         242	RETURN_VALUE(arg=None, lineno=8)
2024-07-15 06:11:40,707 DEBUG:pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-15 06:11:40,707 DEBUG:stack: []
2024-07-15 06:11:40,707 DEBUG:state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-15 06:11:40,707 DEBUG:dispatch pc=0, inst=NOP(arg=None, lineno=1)
2024-07-15 06:11:40,707 DEBUG:stack []
2024-07-15 06:11:40,707 DEBUG:dispatch pc=2, inst=RESUME(arg=0, lineno=1)
2024-07-15 06:11:40,707 DEBUG:stack []
2024-07-15 06:11:40,707 DEBUG:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2)
2024-07-15 06:11:40,707 DEBUG:stack []
2024-07-15 06:11:40,707 DEBUG:dispatch pc=6, inst=LOAD_ATTR(arg=0, lineno=2)
2024-07-15 06:11:40,707 DEBUG:stack ['$x4.0']
2024-07-15 06:11:40,707 DEBUG:dispatch pc=16, inst=STORE_FAST(arg=1, lineno=2)
2024-07-15 06:11:40,707 DEBUG:stack ['$6load_attr.1']
2024-07-15 06:11:40,707 DEBUG:dispatch pc=18, inst=LOAD_GLOBAL(arg=2, lineno=3)
2024-07-15 06:11:40,707 DEBUG:stack []
2024-07-15 06:11:40,707 DEBUG:dispatch pc=30, inst=LOAD_METHOD(arg=2, lineno=3)
2024-07-15 06:11:40,707 DEBUG:stack ['$18load_global.2']
2024-07-15 06:11:40,707 DEBUG:dispatch pc=52, inst=LOAD_FAST(arg=1, lineno=3)
2024-07-15 06:11:40,707 DEBUG:stack ['$null$30.3', '$30load_method.4']
2024-07-15 06:11:40,707 DEBUG:dispatch pc=54, inst=LOAD_GLOBAL(arg=2, lineno=3)
2024-07-15 06:11:40,707 DEBUG:stack ['$null$30.3', '$30load_method.4', '$full_shape052.5']
2024-07-15 06:11:40,707 DEBUG:dispatch pc=66, inst=LOAD_ATTR(arg=3, lineno=3)
2024-07-15 06:11:40,707 DEBUG:stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$54load_global.6']
2024-07-15 06:11:40,707 DEBUG:dispatch pc=76, inst=KW_NAMES(arg=1, lineno=3)
2024-07-15 06:11:40,707 DEBUG:stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
2024-07-15 06:11:40,707 DEBUG:dispatch pc=78, inst=PRECALL(arg=2, lineno=3)
2024-07-15 06:11:40,707 DEBUG:stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
2024-07-15 06:11:40,708 DEBUG:dispatch pc=82, inst=CALL(arg=2, lineno=3)
2024-07-15 06:11:40,708 DEBUG:stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
2024-07-15 06:11:40,708 DEBUG:dispatch pc=92, inst=STORE_FAST(arg=2, lineno=3)
2024-07-15 06:11:40,708 DEBUG:stack ['$82call.8']
2024-07-15 06:11:40,708 DEBUG:dispatch pc=94, inst=LOAD_CONST(arg=2, lineno=4)
2024-07-15 06:11:40,708 DEBUG:stack []
2024-07-15 06:11:40,708 DEBUG:dispatch pc=96, inst=LOAD_FAST(arg=2, lineno=4)
2024-07-15 06:11:40,708 DEBUG:stack ['$const94.9']
2024-07-15 06:11:40,708 DEBUG:dispatch pc=98, inst=LOAD_CONST(arg=0, lineno=4)
2024-07-15 06:11:40,708 DEBUG:stack ['$const94.9', '$out096.10']
2024-07-15 06:11:40,708 DEBUG:dispatch pc=100, inst=LOAD_CONST(arg=3, lineno=4)
2024-07-15 06:11:40,708 DEBUG:stack ['$const94.9', '$out096.10', '$const98.11']
2024-07-15 06:11:40,708 DEBUG:dispatch pc=102, inst=BUILD_SLICE(arg=2, lineno=4)
2024-07-15 06:11:40,708 DEBUG:stack ['$const94.9', '$out096.10', '$const98.11', '$const100.12']
2024-07-15 06:11:40,708 DEBUG:dispatch pc=104, inst=STORE_SUBSCR(arg=None, lineno=4)
2024-07-15 06:11:40,708 DEBUG:stack ['$const94.9', '$out096.10', '$102build_slice.14']
2024-07-15 06:11:40,708 DEBUG:dispatch pc=108, inst=LOAD_CONST(arg=2, lineno=5)
2024-07-15 06:11:40,708 DEBUG:stack []
2024-07-15 06:11:40,708 DEBUG:dispatch pc=110, inst=LOAD_FAST(arg=2, lineno=5)
2024-07-15 06:11:40,708 DEBUG:stack ['$const108.15']
2024-07-15 06:11:40,708 DEBUG:dispatch pc=112, inst=LOAD_CONST(arg=4, lineno=5)
2024-07-15 06:11:40,708 DEBUG:stack ['$const108.15', '$out0110.16']
2024-07-15 06:11:40,708 DEBUG:dispatch pc=114, inst=LOAD_CONST(arg=0, lineno=5)
2024-07-15 06:11:40,708 DEBUG:stack ['$const108.15', '$out0110.16', '$const112.17']
2024-07-15 06:11:40,708 DEBUG:dispatch pc=116, inst=BUILD_SLICE(arg=2, lineno=5)
2024-07-15 06:11:40,708 DEBUG:stack ['$const108.15', '$out0110.16', '$const112.17', '$const114.18']
2024-07-15 06:11:40,708 DEBUG:dispatch pc=118, inst=STORE_SUBSCR(arg=None, lineno=5)
2024-07-15 06:11:40,708 DEBUG:stack ['$const108.15', '$out0110.16', '$116build_slice.20']
2024-07-15 06:11:40,708 DEBUG:dispatch pc=122, inst=LOAD_GLOBAL(arg=9, lineno=6)
2024-07-15 06:11:40,708 DEBUG:stack []
2024-07-15 06:11:40,708 DEBUG:dispatch pc=134, inst=LOAD_GLOBAL(arg=11, lineno=6)
2024-07-15 06:11:40,708 DEBUG:stack ['$null$122.22', '$122load_global.21']
2024-07-15 06:11:40,708 DEBUG:dispatch pc=146, inst=LOAD_CONST(arg=2, lineno=6)
2024-07-15 06:11:40,709 DEBUG:stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23']
2024-07-15 06:11:40,709 DEBUG:dispatch pc=148, inst=LOAD_CONST(arg=4, lineno=6)
2024-07-15 06:11:40,709 DEBUG:stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25']
2024-07-15 06:11:40,709 DEBUG:dispatch pc=150, inst=PRECALL(arg=2, lineno=6)
2024-07-15 06:11:40,709 DEBUG:stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25', '$const148.26']
2024-07-15 06:11:40,709 DEBUG:dispatch pc=154, inst=CALL(arg=2, lineno=6)
2024-07-15 06:11:40,709 DEBUG:stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25', '$const148.26']
2024-07-15 06:11:40,709 DEBUG:dispatch pc=164, inst=UNARY_NEGATIVE(arg=None, lineno=6)
2024-07-15 06:11:40,709 DEBUG:stack ['$null$122.22', '$122load_global.21', '$154call.27']
2024-07-15 06:11:40,709 DEBUG:dispatch pc=166, inst=LOAD_FAST(arg=1, lineno=6)
2024-07-15 06:11:40,709 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28']
2024-07-15 06:11:40,709 DEBUG:dispatch pc=168, inst=LOAD_CONST(arg=2, lineno=6)
2024-07-15 06:11:40,709 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$full_shape0166.29']
2024-07-15 06:11:40,709 DEBUG:dispatch pc=170, inst=BINARY_SUBSCR(arg=None, lineno=6)
2024-07-15 06:11:40,709 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$full_shape0166.29', '$const168.30']
2024-07-15 06:11:40,709 DEBUG:dispatch pc=180, inst=LOAD_GLOBAL(arg=13, lineno=6)
2024-07-15 06:11:40,709 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31']
2024-07-15 06:11:40,709 DEBUG:dispatch pc=192, inst=LOAD_CONST(arg=2, lineno=6)
2024-07-15 06:11:40,709 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32']
2024-07-15 06:11:40,709 DEBUG:dispatch pc=194, inst=LOAD_CONST(arg=3, lineno=6)
2024-07-15 06:11:40,709 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34']
2024-07-15 06:11:40,709 DEBUG:dispatch pc=196, inst=PRECALL(arg=2, lineno=6)
2024-07-15 06:11:40,709 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34', '$const194.35']
2024-07-15 06:11:40,709 DEBUG:dispatch pc=200, inst=CALL(arg=2, lineno=6)
2024-07-15 06:11:40,709 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34', '$const194.35']
2024-07-15 06:11:40,709 DEBUG:dispatch pc=210, inst=BINARY_OP(arg=10, lineno=6)
2024-07-15 06:11:40,709 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$200call.36']
2024-07-15 06:11:40,709 DEBUG:dispatch pc=214, inst=PRECALL(arg=2, lineno=6)
2024-07-15 06:11:40,709 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$binop_sub210.37']
2024-07-15 06:11:40,709 DEBUG:dispatch pc=218, inst=CALL(arg=2, lineno=6)
2024-07-15 06:11:40,709 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$binop_sub210.37']
2024-07-15 06:11:40,710 DEBUG:dispatch pc=228, inst=GET_ITER(arg=None, lineno=6)
2024-07-15 06:11:40,710 DEBUG:stack ['$218call.38']
2024-07-15 06:11:40,710 DEBUG:end state. edges=[Edge(pc=230, stack=('$228get_iter.39',), blockstack=(), npush=0)]
2024-07-15 06:11:40,710 DEBUG:pending: deque([State(pc_initial=230 nstack_initial=1)])
2024-07-15 06:11:40,710 DEBUG:stack: ['$phi230.0']
2024-07-15 06:11:40,710 DEBUG:state.pc_initial: State(pc_initial=230 nstack_initial=1)
2024-07-15 06:11:40,710 DEBUG:dispatch pc=230, inst=FOR_ITER(arg=4, lineno=6)
2024-07-15 06:11:40,710 DEBUG:stack ['$phi230.0']
2024-07-15 06:11:40,710 DEBUG:end state. edges=[Edge(pc=240, stack=(), blockstack=(), npush=0), Edge(pc=232, stack=('$phi230.0', '$230for_iter.2'), blockstack=(), npush=0)]
2024-07-15 06:11:40,710 DEBUG:pending: deque([State(pc_initial=240 nstack_initial=0), State(pc_initial=232 nstack_initial=2)])
2024-07-15 06:11:40,710 DEBUG:stack: []
2024-07-15 06:11:40,710 DEBUG:state.pc_initial: State(pc_initial=240 nstack_initial=0)
2024-07-15 06:11:40,710 DEBUG:dispatch pc=240, inst=LOAD_FAST(arg=2, lineno=8)
2024-07-15 06:11:40,710 DEBUG:stack []
2024-07-15 06:11:40,710 DEBUG:dispatch pc=242, inst=RETURN_VALUE(arg=None, lineno=8)
2024-07-15 06:11:40,710 DEBUG:stack ['$out0240.0']
2024-07-15 06:11:40,710 DEBUG:end state. edges=[]
2024-07-15 06:11:40,710 DEBUG:pending: deque([State(pc_initial=232 nstack_initial=2)])
2024-07-15 06:11:40,710 DEBUG:stack: ['$phi232.0', '$phi232.1']
2024-07-15 06:11:40,710 DEBUG:state.pc_initial: State(pc_initial=232 nstack_initial=2)
2024-07-15 06:11:40,710 DEBUG:dispatch pc=232, inst=STORE_FAST(arg=3, lineno=6)
2024-07-15 06:11:40,710 DEBUG:stack ['$phi232.0', '$phi232.1']
2024-07-15 06:11:40,710 DEBUG:dispatch pc=234, inst=LOAD_CONST(arg=2, lineno=7)
2024-07-15 06:11:40,710 DEBUG:stack ['$phi232.0']
2024-07-15 06:11:40,710 DEBUG:dispatch pc=236, inst=STORE_FAST(arg=4, lineno=7)
2024-07-15 06:11:40,710 DEBUG:stack ['$phi232.0', '$const234.2']
2024-07-15 06:11:40,710 DEBUG:dispatch pc=238, inst=JUMP_BACKWARD(arg=5, lineno=7)
2024-07-15 06:11:40,710 DEBUG:stack ['$phi232.0']
2024-07-15 06:11:40,710 DEBUG:end state. edges=[Edge(pc=230, stack=('$phi232.0',), blockstack=(), npush=0)]
2024-07-15 06:11:40,710 DEBUG:pending: deque([State(pc_initial=230 nstack_initial=1)])
2024-07-15 06:11:40,710 DEBUG:-------------------------Prune PHIs-------------------------
2024-07-15 06:11:40,710 DEBUG:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=230 nstack_initial=1): {'$phi230.0'},
             State(pc_initial=232 nstack_initial=2): {'$phi232.1'},
             State(pc_initial=240 nstack_initial=0): set()})
2024-07-15 06:11:40,711 DEBUG:defmap: {'$phi230.0': State(pc_initial=0 nstack_initial=0),
 '$phi232.1': State(pc_initial=230 nstack_initial=1)}
2024-07-15 06:11:40,711 DEBUG:phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi232.0',
                            State(pc_initial=232 nstack_initial=2))},
             '$phi232.0': {('$phi230.0',
                            State(pc_initial=230 nstack_initial=1))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-07-15 06:11:40,711 DEBUG:changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi230.0',
                            State(pc_initial=230 nstack_initial=1))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-07-15 06:11:40,711 DEBUG:changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-07-15 06:11:40,711 DEBUG:changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-07-15 06:11:40,711 DEBUG:keep phismap: {'$phi230.0': {('$228get_iter.39', State(pc_initial=0 nstack_initial=0))},
 '$phi232.1': {('$230for_iter.2', State(pc_initial=230 nstack_initial=1))}}
2024-07-15 06:11:40,711 DEBUG:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi230.0': '$228get_iter.39'},
             State(pc_initial=230 nstack_initial=1): {'$phi232.1': '$230for_iter.2'}})
2024-07-15 06:11:40,711 DEBUG:----------------------DONE Prune PHIs-----------------------
2024-07-15 06:11:40,711 DEBUG:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'item': '$x4.0', 'res': '$6load_attr.1'}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'value': '$6load_attr.1'}), (18, {'idx': 1, 'res': '$18load_global.2'}), (20, {}), (22, {}), (24, {}), (26, {}), (28, {}), (30, {'item': '$18load_global.2', 'res': '$30load_method.4'}), (32, {}), (34, {}), (36, {}), (38, {}), (40, {}), (42, {}), (44, {}), (46, {}), (48, {}), (50, {}), (52, {'res': '$full_shape052.5'}), (54, {'idx': 1, 'res': '$54load_global.6'}), (56, {}), (58, {}), (60, {}), (62, {}), (64, {}), (66, {'item': '$54load_global.6', 'res': '$66load_attr.7'}), (68, {}), (70, {}), (72, {}), (74, {}), (78, {}), (80, {}), (82, {'func': '$30load_method.4', 'args': ['$full_shape052.5', '$66load_attr.7'], 'kw_names': 1, 'res': '$82call.8'}), (84, {}), (86, {}), (88, {}), (90, {}), (92, {'value': '$82call.8'}), (94, {'res': '$const94.9'}), (96, {'res': '$out096.10'}), (98, {'res': '$const98.11'}), (100, {'res': '$const100.12'}), (102, {'start': '$const98.11', 'stop': '$const100.12', 'step': None, 'res': '$102build_slice.14', 'slicevar': '$102build_slice.13'}), (104, {'target': '$out096.10', 'index': '$102build_slice.14', 'value': '$const94.9'}), (106, {}), (108, {'res': '$const108.15'}), (110, {'res': '$out0110.16'}), (112, {'res': '$const112.17'}), (114, {'res': '$const114.18'}), (116, {'start': '$const112.17', 'stop': '$const114.18', 'step': None, 'res': '$116build_slice.20', 'slicevar': '$116build_slice.19'}), (118, {'target': '$out0110.16', 'index': '$116build_slice.20', 'value': '$const108.15'}), (120, {}), (122, {'idx': 4, 'res': '$122load_global.21'}), (124, {}), (126, {}), (128, {}), (130, {}), (132, {}), (134, {'idx': 5, 'res': '$134load_global.23'}), (136, {}), (138, {}), (140, {}), (142, {}), (144, {}), (146, {'res': '$const146.25'}), (148, {'res': '$const148.26'}), (150, {}), (152, {}), (154, {'func': '$134load_global.23', 'args': ['$const146.25', '$const148.26'], 'kw_names': None, 'res': '$154call.27'}), (156, {}), (158, {}), (160, {}), (162, {}), (164, {'value': '$154call.27', 'res': '$164unary_negative.28'}), (166, {'res': '$full_shape0166.29'}), (168, {'res': '$const168.30'}), (170, {'index': '$const168.30', 'target': '$full_shape0166.29', 'res': '$170binary_subscr.31'}), (172, {}), (174, {}), (176, {}), (178, {}), (180, {'idx': 6, 'res': '$180load_global.32'}), (182, {}), (184, {}), (186, {}), (188, {}), (190, {}), (192, {'res': '$const192.34'}), (194, {'res': '$const194.35'}), (196, {}), (198, {}), (200, {'func': '$180load_global.32', 'args': ['$const192.34', '$const194.35'], 'kw_names': None, 'res': '$200call.36'}), (202, {}), (204, {}), (206, {}), (208, {}), (210, {'op': '-', 'lhs': '$170binary_subscr.31', 'rhs': '$200call.36', 'res': '$binop_sub210.37'}), (212, {}), (214, {}), (216, {}), (218, {'func': '$122load_global.21', 'args': ['$164unary_negative.28', '$binop_sub210.37'], 'kw_names': None, 'res': '$218call.38'}), (220, {}), (222, {}), (224, {}), (226, {}), (228, {'value': '$218call.38', 'res': '$228get_iter.39'})), outgoing_phis={'$phi230.0': '$228get_iter.39'}, blockstack=(), active_try_block=None, outgoing_edgepushed={230: ('$228get_iter.39',)})
2024-07-15 06:11:40,712 DEBUG:block_infos State(pc_initial=230 nstack_initial=1):
AdaptBlockInfo(insts=((230, {'iterator': '$phi230.0', 'pair': '$230for_iter.1', 'indval': '$230for_iter.2', 'pred': '$230for_iter.3'}),), outgoing_phis={'$phi232.1': '$230for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={240: (), 232: ('$phi230.0', '$230for_iter.2')})
2024-07-15 06:11:40,712 DEBUG:block_infos State(pc_initial=232 nstack_initial=2):
AdaptBlockInfo(insts=((232, {'value': '$phi232.1'}), (234, {'res': '$const234.2'}), (236, {'value': '$const234.2'}), (238, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={230: ('$phi232.0',)})
2024-07-15 06:11:40,712 DEBUG:block_infos State(pc_initial=240 nstack_initial=0):
AdaptBlockInfo(insts=((240, {'res': '$out0240.0'}), (242, {'retval': '$out0240.0', 'castval': '$242return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-15 06:11:40,713 DEBUG:label 0:
    x = arg(0, name=x)                       ['x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $18load_global.2 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$18load_global.2']
    $30load_method.4 = getattr(value=$18load_global.2, attr=empty) ['$18load_global.2', '$30load_method.4']
    $54load_global.6 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$54load_global.6']
    $66load_attr.7 = getattr(value=$54load_global.6, attr=bool_) ['$54load_global.6', '$66load_attr.7']
    out0 = call $30load_method.4(full_shape0, func=$30load_method.4, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7, <string>:3))], vararg=None, varkwarg=None, target=None) ['$30load_method.4', '$66load_attr.7', 'full_shape0', 'out0']
    $const94.9 = const(int, 0)               ['$const94.9']
    $const98.11 = const(NoneType, None)      ['$const98.11']
    $const100.12 = const(int, 1)             ['$const100.12']
    $102build_slice.13 = global(slice: <class 'slice'>) ['$102build_slice.13']
    $102build_slice.14 = call $102build_slice.13($const98.11, $const100.12, func=$102build_slice.13, args=(Var($const98.11, <string>:4), Var($const100.12, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$102build_slice.13', '$102build_slice.14', '$const100.12', '$const98.11']
    out0[$102build_slice.14] = $const94.9    ['$102build_slice.14', '$const94.9', 'out0']
    $const108.15 = const(int, 0)             ['$const108.15']
    $const112.17 = const(int, -1)            ['$const112.17']
    $const114.18 = const(NoneType, None)     ['$const114.18']
    $116build_slice.19 = global(slice: <class 'slice'>) ['$116build_slice.19']
    $116build_slice.20 = call $116build_slice.19($const112.17, $const114.18, func=$116build_slice.19, args=(Var($const112.17, <string>:5), Var($const114.18, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$116build_slice.19', '$116build_slice.20', '$const112.17', '$const114.18']
    out0[$116build_slice.20] = $const108.15  ['$116build_slice.20', '$const108.15', 'out0']
    $122load_global.21 = global(range: <class 'range'>) ['$122load_global.21']
    $134load_global.23 = global(min: <built-in function min>) ['$134load_global.23']
    $const146.25 = const(int, 0)             ['$const146.25']
    $const148.26 = const(int, -1)            ['$const148.26']
    $154call.27 = call $134load_global.23($const146.25, $const148.26, func=$134load_global.23, args=[Var($const146.25, <string>:6), Var($const148.26, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$134load_global.23', '$154call.27', '$const146.25', '$const148.26']
    $164unary_negative.28 = unary(fn=<built-in function neg>, value=$154call.27) ['$154call.27', '$164unary_negative.28']
    $const168.30 = const(int, 0)             ['$const168.30']
    $170binary_subscr.31 = getitem(value=full_shape0, index=$const168.30, fn=<built-in function getitem>) ['$170binary_subscr.31', '$const168.30', 'full_shape0']
    $180load_global.32 = global(max: <built-in function max>) ['$180load_global.32']
    $const192.34 = const(int, 0)             ['$const192.34']
    $const194.35 = const(int, 1)             ['$const194.35']
    $200call.36 = call $180load_global.32($const192.34, $const194.35, func=$180load_global.32, args=[Var($const192.34, <string>:6), Var($const194.35, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$180load_global.32', '$200call.36', '$const192.34', '$const194.35']
    $binop_sub210.37 = $170binary_subscr.31 - $200call.36 ['$170binary_subscr.31', '$200call.36', '$binop_sub210.37']
    $218call.38 = call $122load_global.21($164unary_negative.28, $binop_sub210.37, func=$122load_global.21, args=[Var($164unary_negative.28, <string>:6), Var($binop_sub210.37, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$122load_global.21', '$164unary_negative.28', '$218call.38', '$binop_sub210.37']
    $228get_iter.39 = getiter(value=$218call.38) ['$218call.38', '$228get_iter.39']
    $phi230.0 = $228get_iter.39              ['$228get_iter.39', '$phi230.0']
    jump 230                                 []
label 230:
    $230for_iter.1 = iternext(value=$phi230.0) ['$230for_iter.1', '$phi230.0']
    $230for_iter.2 = pair_first(value=$230for_iter.1) ['$230for_iter.1', '$230for_iter.2']
    $230for_iter.3 = pair_second(value=$230for_iter.1) ['$230for_iter.1', '$230for_iter.3']
    $phi232.1 = $230for_iter.2               ['$230for_iter.2', '$phi232.1']
    branch $230for_iter.3, 232, 240          ['$230for_iter.3']
label 232:
    index00 = $phi232.1                      ['$phi232.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 230                                 []
label 240:
    $242return_value.1 = cast(value=out0)    ['$242return_value.1', 'out0']
    return $242return_value.1                ['$242return_value.1']

2024-07-15 06:11:40,729 DEBUG:==== SSA block analysis pass on 0
2024-07-15 06:11:40,729 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5F04B10>
2024-07-15 06:11:40,729 DEBUG:on stmt: x = arg(0, name=x)
2024-07-15 06:11:40,729 DEBUG:on stmt: full_shape0 = getattr(value=x, attr=shape)
2024-07-15 06:11:40,729 DEBUG:on stmt: $18load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:40,729 DEBUG:on stmt: $30load_method.4.1 = getattr(value=$18load_global.2.1, attr=empty)
2024-07-15 06:11:40,729 DEBUG:on stmt: $54load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:40,729 DEBUG:on stmt: $66load_attr.7.1 = getattr(value=$54load_global.6.1, attr=bool_)
2024-07-15 06:11:40,729 DEBUG:on stmt: out0 = call $30load_method.4.1(full_shape0, func=$30load_method.4.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:40,729 DEBUG:on stmt: $const94.9.1 = const(int, 0)
2024-07-15 06:11:40,729 DEBUG:on stmt: $const98.11.1 = const(NoneType, None)
2024-07-15 06:11:40,729 DEBUG:on stmt: $const100.12.1 = const(int, 1)
2024-07-15 06:11:40,729 DEBUG:on stmt: $102build_slice.13.1 = global(slice: <class 'slice'>)
2024-07-15 06:11:40,729 DEBUG:on stmt: $102build_slice.14.1 = call $102build_slice.13.1($const98.11.1, $const100.12.1, func=$102build_slice.13.1, args=(Var($const98.11.1, <string>:4), Var($const100.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:40,729 DEBUG:on stmt: out0[$102build_slice.14.1] = $const94.9.1
2024-07-15 06:11:40,729 DEBUG:on stmt: $const108.15.1 = const(int, 0)
2024-07-15 06:11:40,729 DEBUG:on stmt: $const112.17.1 = const(int, -1)
2024-07-15 06:11:40,729 DEBUG:on stmt: $const114.18.1 = const(NoneType, None)
2024-07-15 06:11:40,729 DEBUG:on stmt: $116build_slice.19.1 = global(slice: <class 'slice'>)
2024-07-15 06:11:40,729 DEBUG:on stmt: $116build_slice.20.1 = call $116build_slice.19.1($const112.17.1, $const114.18.1, func=$116build_slice.19.1, args=(Var($const112.17.1, <string>:5), Var($const114.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:40,729 DEBUG:on stmt: out0[$116build_slice.20.1] = $const108.15.1
2024-07-15 06:11:40,729 DEBUG:on stmt: $122load_global.21.1 = global(range: <class 'range'>)
2024-07-15 06:11:40,729 DEBUG:on stmt: $134load_global.23.1 = global(min: <built-in function min>)
2024-07-15 06:11:40,729 DEBUG:on stmt: $const146.25.1 = const(int, 0)
2024-07-15 06:11:40,730 DEBUG:on stmt: $const148.26.1 = const(int, -1)
2024-07-15 06:11:40,730 DEBUG:on stmt: $154call.27.1 = call $134load_global.23.1($const146.25.1, $const148.26.1, func=$134load_global.23.1, args=[Var($const146.25.1, <string>:6), Var($const148.26.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:40,730 DEBUG:on stmt: $164unary_negative.28.1 = unary(fn=<built-in function neg>, value=$154call.27.1)
2024-07-15 06:11:40,730 DEBUG:on stmt: $const168.30.1 = const(int, 0)
2024-07-15 06:11:40,730 DEBUG:on stmt: $170binary_subscr.31.1 = getitem(value=full_shape0, index=$const168.30.1, fn=<built-in function getitem>)
2024-07-15 06:11:40,730 DEBUG:on stmt: $180load_global.32.1 = global(max: <built-in function max>)
2024-07-15 06:11:40,730 DEBUG:on stmt: $const192.34.1 = const(int, 0)
2024-07-15 06:11:40,730 DEBUG:on stmt: $const194.35.1 = const(int, 1)
2024-07-15 06:11:40,730 DEBUG:on stmt: $200call.36.1 = call $180load_global.32.1($const192.34.1, $const194.35.1, func=$180load_global.32.1, args=[Var($const192.34.1, <string>:6), Var($const194.35.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:40,730 DEBUG:on stmt: $binop_sub210.37.1 = $170binary_subscr.31.1 - $200call.36.1
2024-07-15 06:11:40,730 DEBUG:on stmt: $218call.38.1 = call $122load_global.21.1($164unary_negative.28.1, $binop_sub210.37.1, func=$122load_global.21.1, args=[Var($164unary_negative.28.1, <string>:6), Var($binop_sub210.37.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:40,730 DEBUG:on stmt: $228get_iter.39.1 = getiter(value=$218call.38.1)
2024-07-15 06:11:40,730 DEBUG:on stmt: $phi230.0.1 = $228get_iter.39.1
2024-07-15 06:11:40,730 DEBUG:on stmt: jump 230
2024-07-15 06:11:40,730 DEBUG:==== SSA block analysis pass on 230
2024-07-15 06:11:40,730 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5F04B10>
2024-07-15 06:11:40,730 DEBUG:on stmt: $230for_iter.1.1 = iternext(value=$phi230.0.1)
2024-07-15 06:11:40,730 DEBUG:on stmt: $230for_iter.2.1 = pair_first(value=$230for_iter.1.1)
2024-07-15 06:11:40,730 DEBUG:on stmt: $230for_iter.3.1 = pair_second(value=$230for_iter.1.1)
2024-07-15 06:11:40,730 DEBUG:on stmt: $phi232.1.1 = $230for_iter.2.1
2024-07-15 06:11:40,730 DEBUG:on stmt: branch $230for_iter.3.1, 232, 242
2024-07-15 06:11:40,730 DEBUG:==== SSA block analysis pass on 232
2024-07-15 06:11:40,730 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5F04B10>
2024-07-15 06:11:40,730 DEBUG:on stmt: index00 = $phi232.1.1
2024-07-15 06:11:40,730 DEBUG:on stmt: jump 240
2024-07-15 06:11:40,730 DEBUG:==== SSA block analysis pass on 242
2024-07-15 06:11:40,730 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5F04B10>
2024-07-15 06:11:40,730 DEBUG:on stmt: $242return_value.1.1 = cast(value=out0)
2024-07-15 06:11:40,730 DEBUG:on stmt: return $242return_value.1.1
2024-07-15 06:11:40,730 DEBUG:==== SSA block analysis pass on 240
2024-07-15 06:11:40,730 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5F04B10>
2024-07-15 06:11:40,730 DEBUG:on stmt: $const6.1 = const(int, 0)
2024-07-15 06:11:40,731 DEBUG:on stmt: stencil_index = $const6.1 + index00
2024-07-15 06:11:40,731 DEBUG:on stmt: $8binary_subscr.2 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-07-15 06:11:40,731 DEBUG:on stmt: $const20.4 = const(int, -1)
2024-07-15 06:11:40,731 DEBUG:on stmt: stencil_index.1 = $const20.4 + index00
2024-07-15 06:11:40,731 DEBUG:on stmt: $22binary_subscr.5 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2024-07-15 06:11:40,731 DEBUG:on stmt: $32compare_op.6 = $8binary_subscr.2 < $22binary_subscr.5
2024-07-15 06:11:40,731 DEBUG:on stmt: $const40.8 = const(int, 0)
2024-07-15 06:11:40,731 DEBUG:on stmt: stencil_index.2 = $const40.8 + index00
2024-07-15 06:11:40,731 DEBUG:on stmt: $42binary_subscr.9 = getitem(value=x, index=stencil_index.2, fn=<built-in function getitem>)
2024-07-15 06:11:40,731 DEBUG:on stmt: $const54.11 = const(int, 1)
2024-07-15 06:11:40,731 DEBUG:on stmt: stencil_index.3 = $const54.11 + index00
2024-07-15 06:11:40,731 DEBUG:on stmt: $56binary_subscr.12 = getitem(value=x, index=stencil_index.3, fn=<built-in function getitem>)
2024-07-15 06:11:40,731 DEBUG:on stmt: $66compare_op.13 = $42binary_subscr.9 <= $56binary_subscr.12
2024-07-15 06:11:40,731 DEBUG:on stmt: $binop_and_72.14 = $32compare_op.6 & $66compare_op.13
2024-07-15 06:11:40,731 DEBUG:on stmt: $76return_value.15 = cast(value=$binop_and_72.14)
2024-07-15 06:11:40,731 DEBUG:on stmt: out0[index00] = $76return_value.15
2024-07-15 06:11:40,731 DEBUG:on stmt: jump 241
2024-07-15 06:11:40,731 DEBUG:==== SSA block analysis pass on 241
2024-07-15 06:11:40,731 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5F04B10>
2024-07-15 06:11:40,731 DEBUG:on stmt: jump 230
2024-07-15 06:11:40,732 DEBUG:defs defaultdict(<class 'list'>,
            {'$102build_slice.13.1': [(<numba.core.ir.Assign object at 0x00000221B7B68490>,
                                       0)],
             '$102build_slice.14.1': [(<numba.core.ir.Assign object at 0x00000221B7B69590>,
                                       0)],
             '$116build_slice.19.1': [(<numba.core.ir.Assign object at 0x00000221B7B5C850>,
                                       0)],
             '$116build_slice.20.1': [(<numba.core.ir.Assign object at 0x00000221B7B5FF10>,
                                       0)],
             '$122load_global.21.1': [(<numba.core.ir.Assign object at 0x00000221B7B5D7D0>,
                                       0)],
             '$134load_global.23.1': [(<numba.core.ir.Assign object at 0x00000221B7B5E550>,
                                       0)],
             '$154call.27.1': [(<numba.core.ir.Assign object at 0x00000221B7B5FD50>,
                                0)],
             '$164unary_negative.28.1': [(<numba.core.ir.Assign object at 0x00000221B7B5EC90>,
                                          0)],
             '$170binary_subscr.31.1': [(<numba.core.ir.Assign object at 0x00000221B7B5D6D0>,
                                         0)],
             '$180load_global.32.1': [(<numba.core.ir.Assign object at 0x00000221B7B5D690>,
                                       0)],
             '$18load_global.2.1': [(<numba.core.ir.Assign object at 0x00000221B7B68050>,
                                     0)],
             '$200call.36.1': [(<numba.core.ir.Assign object at 0x00000221B7B5F310>,
                                0)],
             '$218call.38.1': [(<numba.core.ir.Assign object at 0x00000221B7B5EE90>,
                                0)],
             '$228get_iter.39.1': [(<numba.core.ir.Assign object at 0x00000221B7B5F410>,
                                    0)],
             '$22binary_subscr.5': [(<numba.core.ir.Assign object at 0x00000221B67C3B90>,
                                     240)],
             '$230for_iter.1.1': [(<numba.core.ir.Assign object at 0x00000221B7B5ED50>,
                                   230)],
             '$230for_iter.2.1': [(<numba.core.ir.Assign object at 0x00000221B7B5F3D0>,
                                   230)],
             '$230for_iter.3.1': [(<numba.core.ir.Assign object at 0x00000221B7B5EE10>,
                                   230)],
             '$242return_value.1.1': [(<numba.core.ir.Assign object at 0x00000221B7B5DE10>,
                                       242)],
             '$30load_method.4.1': [(<numba.core.ir.Assign object at 0x00000221B7B6ADD0>,
                                     0)],
             '$32compare_op.6': [(<numba.core.ir.Assign object at 0x00000221B5F8A410>,
                                  240)],
             '$42binary_subscr.9': [(<numba.core.ir.Assign object at 0x00000221B67C2650>,
                                     240)],
             '$54load_global.6.1': [(<numba.core.ir.Assign object at 0x00000221B7B6AE90>,
                                     0)],
             '$56binary_subscr.12': [(<numba.core.ir.Assign object at 0x00000221B67C0CD0>,
                                      240)],
             '$66compare_op.13': [(<numba.core.ir.Assign object at 0x00000221B5C7A310>,
                                   240)],
             '$66load_attr.7.1': [(<numba.core.ir.Assign object at 0x00000221B7B6B290>,
                                   0)],
             '$76return_value.15': [(<numba.core.ir.Assign object at 0x00000221B6898210>,
                                     240)],
             '$8binary_subscr.2': [(<numba.core.ir.Assign object at 0x00000221B67C28D0>,
                                    240)],
             '$binop_and_72.14': [(<numba.core.ir.Assign object at 0x00000221B689A150>,
                                   240)],
             '$binop_sub210.37.1': [(<numba.core.ir.Assign object at 0x00000221B7B5F6D0>,
                                     0)],
             '$const100.12.1': [(<numba.core.ir.Assign object at 0x00000221B7B68410>,
                                 0)],
             '$const108.15.1': [(<numba.core.ir.Assign object at 0x00000221B7B6A8D0>,
                                 0)],
             '$const112.17.1': [(<numba.core.ir.Assign object at 0x00000221B7B5CF50>,
                                 0)],
             '$const114.18.1': [(<numba.core.ir.Assign object at 0x00000221B7B5DBD0>,
                                 0)],
             '$const146.25.1': [(<numba.core.ir.Assign object at 0x00000221B7B5C1D0>,
                                 0)],
             '$const148.26.1': [(<numba.core.ir.Assign object at 0x00000221B7B5CB90>,
                                 0)],
             '$const168.30.1': [(<numba.core.ir.Assign object at 0x00000221B7B5DFD0>,
                                 0)],
             '$const192.34.1': [(<numba.core.ir.Assign object at 0x00000221B7B5E910>,
                                 0)],
             '$const194.35.1': [(<numba.core.ir.Assign object at 0x00000221B7B5CE10>,
                                 0)],
             '$const20.4': [(<numba.core.ir.Assign object at 0x00000221B5F8BE90>,
                             240)],
             '$const40.8': [(<numba.core.ir.Assign object at 0x00000221B68BC4D0>,
                             240)],
             '$const54.11': [(<numba.core.ir.Assign object at 0x00000221B68BFB50>,
                              240)],
             '$const6.1': [(<numba.core.ir.Assign object at 0x00000221B5FAC9D0>,
                            240)],
             '$const94.9.1': [(<numba.core.ir.Assign object at 0x00000221B7B68C50>,
                               0)],
             '$const98.11.1': [(<numba.core.ir.Assign object at 0x00000221B7B685D0>,
                                0)],
             '$phi230.0.1': [(<numba.core.ir.Assign object at 0x00000221B7B68A10>,
                              0)],
             '$phi232.1.1': [(<numba.core.ir.Assign object at 0x00000221B7B5EA90>,
                              230)],
             'full_shape0': [(<numba.core.ir.Assign object at 0x00000221B7B6BF10>,
                              0)],
             'index00': [(<numba.core.ir.Assign object at 0x00000221B7B5FA90>,
                          232)],
             'out0': [(<numba.core.ir.Assign object at 0x00000221B7B6A0D0>, 0)],
             'stencil_index': [(<numba.core.ir.Assign object at 0x00000221B67C3B10>,
                                240)],
             'stencil_index.1': [(<numba.core.ir.Assign object at 0x00000221B67C0450>,
                                  240)],
             'stencil_index.2': [(<numba.core.ir.Assign object at 0x00000221B67C3DD0>,
                                  240)],
             'stencil_index.3': [(<numba.core.ir.Assign object at 0x00000221B67C2690>,
                                  240)],
             'x': [(<numba.core.ir.Assign object at 0x00000221B7B69B90>, 0)]})
2024-07-15 06:11:40,732 DEBUG:SSA violators <numba.core.utils.OrderedSet object at 0x00000221B5F04B10>
2024-07-15 06:11:41,015 DEBUG:bytecode dump:
>          0	NOP(arg=None, lineno=1068)
           2	RESUME(arg=0, lineno=1068)
           4	LOAD_GLOBAL(arg=1, lineno=1082)
          16	LOAD_FAST(arg=0, lineno=1082)
          18	PRECALL(arg=1, lineno=1082)
          22	CALL(arg=1, lineno=1082)
          32	LOAD_FAST(arg=1, lineno=1082)
          34	LOAD_CONST(arg=1, lineno=1082)
          36	LOAD_CONST(arg=1, lineno=1082)
          38	BUILD_SLICE(arg=2, lineno=1082)
          40	STORE_SUBSCR(arg=None, lineno=1082)
          44	LOAD_CONST(arg=1, lineno=1082)
          46	RETURN_VALUE(arg=None, lineno=1082)
2024-07-15 06:11:41,015 DEBUG:pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-15 06:11:41,015 DEBUG:stack: []
2024-07-15 06:11:41,015 DEBUG:state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-15 06:11:41,015 DEBUG:dispatch pc=0, inst=NOP(arg=None, lineno=1068)
2024-07-15 06:11:41,015 DEBUG:stack []
2024-07-15 06:11:41,016 DEBUG:dispatch pc=2, inst=RESUME(arg=0, lineno=1068)
2024-07-15 06:11:41,016 DEBUG:stack []
2024-07-15 06:11:41,016 DEBUG:dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=1082)
2024-07-15 06:11:41,016 DEBUG:stack []
2024-07-15 06:11:41,016 DEBUG:dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=1082)
2024-07-15 06:11:41,016 DEBUG:stack ['$null$4.1', '$4load_global.0']
2024-07-15 06:11:41,016 DEBUG:dispatch pc=18, inst=PRECALL(arg=1, lineno=1082)
2024-07-15 06:11:41,016 DEBUG:stack ['$null$4.1', '$4load_global.0', '$x16.2']
2024-07-15 06:11:41,016 DEBUG:dispatch pc=22, inst=CALL(arg=1, lineno=1082)
2024-07-15 06:11:41,016 DEBUG:stack ['$null$4.1', '$4load_global.0', '$x16.2']
2024-07-15 06:11:41,016 DEBUG:dispatch pc=32, inst=LOAD_FAST(arg=1, lineno=1082)
2024-07-15 06:11:41,016 DEBUG:stack ['$22call.3']
2024-07-15 06:11:41,016 DEBUG:dispatch pc=34, inst=LOAD_CONST(arg=1, lineno=1082)
2024-07-15 06:11:41,016 DEBUG:stack ['$22call.3', '$y32.4']
2024-07-15 06:11:41,016 DEBUG:dispatch pc=36, inst=LOAD_CONST(arg=1, lineno=1082)
2024-07-15 06:11:41,016 DEBUG:stack ['$22call.3', '$y32.4', '$const34.5']
2024-07-15 06:11:41,016 DEBUG:dispatch pc=38, inst=BUILD_SLICE(arg=2, lineno=1082)
2024-07-15 06:11:41,016 DEBUG:stack ['$22call.3', '$y32.4', '$const34.5', '$const36.6']
2024-07-15 06:11:41,016 DEBUG:dispatch pc=40, inst=STORE_SUBSCR(arg=None, lineno=1082)
2024-07-15 06:11:41,016 DEBUG:stack ['$22call.3', '$y32.4', '$38build_slice.8']
2024-07-15 06:11:41,016 DEBUG:dispatch pc=44, inst=LOAD_CONST(arg=1, lineno=1082)
2024-07-15 06:11:41,016 DEBUG:stack []
2024-07-15 06:11:41,016 DEBUG:dispatch pc=46, inst=RETURN_VALUE(arg=None, lineno=1082)
2024-07-15 06:11:41,016 DEBUG:stack ['$const44.9']
2024-07-15 06:11:41,016 DEBUG:end state. edges=[]
2024-07-15 06:11:41,016 DEBUG:-------------------------Prune PHIs-------------------------
2024-07-15 06:11:41,016 DEBUG:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-07-15 06:11:41,016 DEBUG:defmap: {}
2024-07-15 06:11:41,016 DEBUG:phismap: defaultdict(<class 'set'>, {})
2024-07-15 06:11:41,016 DEBUG:changing phismap: defaultdict(<class 'set'>, {})
2024-07-15 06:11:41,017 DEBUG:keep phismap: {}
2024-07-15 06:11:41,017 DEBUG:new_out: defaultdict(<class 'dict'>, {})
2024-07-15 06:11:41,017 DEBUG:----------------------DONE Prune PHIs-----------------------
2024-07-15 06:11:41,017 DEBUG:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (6, {}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$x16.2'}), (18, {}), (20, {}), (22, {'func': '$4load_global.0', 'args': ['$x16.2'], 'kw_names': None, 'res': '$22call.3'}), (24, {}), (26, {}), (28, {}), (30, {}), (32, {'res': '$y32.4'}), (34, {'res': '$const34.5'}), (36, {'res': '$const36.6'}), (38, {'start': '$const34.5', 'stop': '$const36.6', 'step': None, 'res': '$38build_slice.8', 'slicevar': '$38build_slice.7'}), (40, {'target': '$y32.4', 'index': '$38build_slice.8', 'value': '$22call.3'}), (42, {}), (44, {'res': '$const44.9'}), (46, {'retval': '$const44.9', 'castval': '$46return_value.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-15 06:11:41,017 DEBUG:label 0:
    x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    $4load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x00000221B6076710>) ['$4load_global.0']
    $22call.3 = call $4load_global.0(x, func=$4load_global.0, args=[Var(x, utils.py:1068)], kws=(), vararg=None, varkwarg=None, target=None) ['$22call.3', '$4load_global.0', 'x']
    $const34.5 = const(NoneType, None)       ['$const34.5']
    $const36.6 = const(NoneType, None)       ['$const36.6']
    $38build_slice.7 = global(slice: <class 'slice'>) ['$38build_slice.7']
    $38build_slice.8 = call $38build_slice.7($const34.5, $const36.6, func=$38build_slice.7, args=(Var($const34.5, utils.py:1082), Var($const36.6, utils.py:1082)), kws=(), vararg=None, varkwarg=None, target=None) ['$38build_slice.7', '$38build_slice.8', '$const34.5', '$const36.6']
    y[$38build_slice.8] = $22call.3          ['$22call.3', '$38build_slice.8', 'y']
    $const44.9 = const(NoneType, None)       ['$const44.9']
    $46return_value.10 = cast(value=$const44.9) ['$46return_value.10', '$const44.9']
    return $46return_value.10                ['$46return_value.10']

2024-07-15 06:11:41,024 DEBUG:==== SSA block analysis pass on 0
2024-07-15 06:11:41,024 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5BB8BD0>
2024-07-15 06:11:41,024 DEBUG:on stmt: x = arg(0, name=x)
2024-07-15 06:11:41,024 DEBUG:on stmt: y = arg(1, name=y)
2024-07-15 06:11:41,024 DEBUG:on stmt: $4load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x00000221B6076710>)
2024-07-15 06:11:41,024 DEBUG:on stmt: $22call.3 = call $4load_global.0(x, func=$4load_global.0, args=[Var(x, utils.py:1068)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:41,024 DEBUG:on stmt: $const34.5 = const(NoneType, None)
2024-07-15 06:11:41,024 DEBUG:on stmt: $const36.6 = const(NoneType, None)
2024-07-15 06:11:41,024 DEBUG:on stmt: $38build_slice.7 = global(slice: <class 'slice'>)
2024-07-15 06:11:41,024 DEBUG:on stmt: $38build_slice.8 = call $38build_slice.7($const34.5, $const36.6, func=$38build_slice.7, args=(Var($const34.5, utils.py:1082), Var($const36.6, utils.py:1082)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:41,024 DEBUG:on stmt: y[slice(None, None, None)] = $22call.3
2024-07-15 06:11:41,024 DEBUG:on stmt: $const44.9 = const(NoneType, None)
2024-07-15 06:11:41,024 DEBUG:on stmt: $46return_value.10 = cast(value=$const44.9)
2024-07-15 06:11:41,024 DEBUG:on stmt: return $46return_value.10
2024-07-15 06:11:41,025 DEBUG:defs defaultdict(<class 'list'>,
            {'$22call.3': [(<numba.core.ir.Assign object at 0x00000221B5BBA990>,
                            0)],
             '$38build_slice.7': [(<numba.core.ir.Assign object at 0x00000221B5BB9ED0>,
                                   0)],
             '$38build_slice.8': [(<numba.core.ir.Assign object at 0x00000221B5BBBF10>,
                                   0)],
             '$46return_value.10': [(<numba.core.ir.Assign object at 0x00000221B5BBBBD0>,
                                     0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x00000221B5BBBAD0>,
                                  0)],
             '$const34.5': [(<numba.core.ir.Assign object at 0x00000221B5BB8050>,
                             0)],
             '$const36.6': [(<numba.core.ir.Assign object at 0x00000221B5BB8350>,
                             0)],
             '$const44.9': [(<numba.core.ir.Assign object at 0x00000221B5BB9BD0>,
                             0)],
             'x': [(<numba.core.ir.Assign object at 0x00000221B59DDC90>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x00000221B59DE990>, 0)]})
2024-07-15 06:11:41,025 DEBUG:SSA violators <numba.core.utils.OrderedSet object at 0x00000221B5BB8BD0>
2024-07-15 06:11:41,051 DEBUG:bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	RESUME(arg=0, lineno=1)
           4	LOAD_FAST(arg=0, lineno=2)
           6	LOAD_ATTR(arg=0, lineno=2)
          16	STORE_FAST(arg=1, lineno=2)
          18	LOAD_GLOBAL(arg=2, lineno=3)
          30	LOAD_METHOD(arg=2, lineno=3)
          52	LOAD_FAST(arg=1, lineno=3)
          54	LOAD_GLOBAL(arg=2, lineno=3)
          66	LOAD_ATTR(arg=3, lineno=3)
          76	KW_NAMES(arg=1, lineno=3)
          78	PRECALL(arg=2, lineno=3)
          82	CALL(arg=2, lineno=3)
          92	STORE_FAST(arg=2, lineno=3)
          94	LOAD_CONST(arg=2, lineno=4)
          96	LOAD_FAST(arg=2, lineno=4)
          98	LOAD_CONST(arg=0, lineno=4)
         100	LOAD_CONST(arg=3, lineno=4)
         102	BUILD_SLICE(arg=2, lineno=4)
         104	STORE_SUBSCR(arg=None, lineno=4)
         108	LOAD_CONST(arg=2, lineno=5)
         110	LOAD_FAST(arg=2, lineno=5)
         112	LOAD_CONST(arg=4, lineno=5)
         114	LOAD_CONST(arg=0, lineno=5)
         116	BUILD_SLICE(arg=2, lineno=5)
         118	STORE_SUBSCR(arg=None, lineno=5)
         122	LOAD_GLOBAL(arg=9, lineno=6)
         134	LOAD_GLOBAL(arg=11, lineno=6)
         146	LOAD_CONST(arg=2, lineno=6)
         148	LOAD_CONST(arg=4, lineno=6)
         150	PRECALL(arg=2, lineno=6)
         154	CALL(arg=2, lineno=6)
         164	UNARY_NEGATIVE(arg=None, lineno=6)
         166	LOAD_FAST(arg=1, lineno=6)
         168	LOAD_CONST(arg=2, lineno=6)
         170	BINARY_SUBSCR(arg=None, lineno=6)
         180	LOAD_GLOBAL(arg=13, lineno=6)
         192	LOAD_CONST(arg=2, lineno=6)
         194	LOAD_CONST(arg=3, lineno=6)
         196	PRECALL(arg=2, lineno=6)
         200	CALL(arg=2, lineno=6)
         210	BINARY_OP(arg=10, lineno=6)
         214	PRECALL(arg=2, lineno=6)
         218	CALL(arg=2, lineno=6)
         228	GET_ITER(arg=None, lineno=6)
>        230	FOR_ITER(arg=4, lineno=6)
         232	STORE_FAST(arg=3, lineno=6)
         234	LOAD_CONST(arg=2, lineno=7)
         236	STORE_FAST(arg=4, lineno=7)
         238	JUMP_BACKWARD(arg=5, lineno=7)
>        240	LOAD_FAST(arg=2, lineno=8)
         242	RETURN_VALUE(arg=None, lineno=8)
2024-07-15 06:11:41,051 DEBUG:pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-15 06:11:41,051 DEBUG:stack: []
2024-07-15 06:11:41,051 DEBUG:state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-15 06:11:41,051 DEBUG:dispatch pc=0, inst=NOP(arg=None, lineno=1)
2024-07-15 06:11:41,051 DEBUG:stack []
2024-07-15 06:11:41,051 DEBUG:dispatch pc=2, inst=RESUME(arg=0, lineno=1)
2024-07-15 06:11:41,051 DEBUG:stack []
2024-07-15 06:11:41,051 DEBUG:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2)
2024-07-15 06:11:41,051 DEBUG:stack []
2024-07-15 06:11:41,051 DEBUG:dispatch pc=6, inst=LOAD_ATTR(arg=0, lineno=2)
2024-07-15 06:11:41,051 DEBUG:stack ['$x4.0']
2024-07-15 06:11:41,051 DEBUG:dispatch pc=16, inst=STORE_FAST(arg=1, lineno=2)
2024-07-15 06:11:41,052 DEBUG:stack ['$6load_attr.1']
2024-07-15 06:11:41,052 DEBUG:dispatch pc=18, inst=LOAD_GLOBAL(arg=2, lineno=3)
2024-07-15 06:11:41,052 DEBUG:stack []
2024-07-15 06:11:41,052 DEBUG:dispatch pc=30, inst=LOAD_METHOD(arg=2, lineno=3)
2024-07-15 06:11:41,052 DEBUG:stack ['$18load_global.2']
2024-07-15 06:11:41,052 DEBUG:dispatch pc=52, inst=LOAD_FAST(arg=1, lineno=3)
2024-07-15 06:11:41,052 DEBUG:stack ['$null$30.3', '$30load_method.4']
2024-07-15 06:11:41,052 DEBUG:dispatch pc=54, inst=LOAD_GLOBAL(arg=2, lineno=3)
2024-07-15 06:11:41,052 DEBUG:stack ['$null$30.3', '$30load_method.4', '$full_shape052.5']
2024-07-15 06:11:41,052 DEBUG:dispatch pc=66, inst=LOAD_ATTR(arg=3, lineno=3)
2024-07-15 06:11:41,052 DEBUG:stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$54load_global.6']
2024-07-15 06:11:41,052 DEBUG:dispatch pc=76, inst=KW_NAMES(arg=1, lineno=3)
2024-07-15 06:11:41,052 DEBUG:stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
2024-07-15 06:11:41,052 DEBUG:dispatch pc=78, inst=PRECALL(arg=2, lineno=3)
2024-07-15 06:11:41,052 DEBUG:stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
2024-07-15 06:11:41,052 DEBUG:dispatch pc=82, inst=CALL(arg=2, lineno=3)
2024-07-15 06:11:41,052 DEBUG:stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
2024-07-15 06:11:41,052 DEBUG:dispatch pc=92, inst=STORE_FAST(arg=2, lineno=3)
2024-07-15 06:11:41,052 DEBUG:stack ['$82call.8']
2024-07-15 06:11:41,052 DEBUG:dispatch pc=94, inst=LOAD_CONST(arg=2, lineno=4)
2024-07-15 06:11:41,052 DEBUG:stack []
2024-07-15 06:11:41,053 DEBUG:dispatch pc=96, inst=LOAD_FAST(arg=2, lineno=4)
2024-07-15 06:11:41,053 DEBUG:stack ['$const94.9']
2024-07-15 06:11:41,053 DEBUG:dispatch pc=98, inst=LOAD_CONST(arg=0, lineno=4)
2024-07-15 06:11:41,053 DEBUG:stack ['$const94.9', '$out096.10']
2024-07-15 06:11:41,053 DEBUG:dispatch pc=100, inst=LOAD_CONST(arg=3, lineno=4)
2024-07-15 06:11:41,053 DEBUG:stack ['$const94.9', '$out096.10', '$const98.11']
2024-07-15 06:11:41,053 DEBUG:dispatch pc=102, inst=BUILD_SLICE(arg=2, lineno=4)
2024-07-15 06:11:41,053 DEBUG:stack ['$const94.9', '$out096.10', '$const98.11', '$const100.12']
2024-07-15 06:11:41,053 DEBUG:dispatch pc=104, inst=STORE_SUBSCR(arg=None, lineno=4)
2024-07-15 06:11:41,053 DEBUG:stack ['$const94.9', '$out096.10', '$102build_slice.14']
2024-07-15 06:11:41,053 DEBUG:dispatch pc=108, inst=LOAD_CONST(arg=2, lineno=5)
2024-07-15 06:11:41,053 DEBUG:stack []
2024-07-15 06:11:41,053 DEBUG:dispatch pc=110, inst=LOAD_FAST(arg=2, lineno=5)
2024-07-15 06:11:41,053 DEBUG:stack ['$const108.15']
2024-07-15 06:11:41,053 DEBUG:dispatch pc=112, inst=LOAD_CONST(arg=4, lineno=5)
2024-07-15 06:11:41,053 DEBUG:stack ['$const108.15', '$out0110.16']
2024-07-15 06:11:41,053 DEBUG:dispatch pc=114, inst=LOAD_CONST(arg=0, lineno=5)
2024-07-15 06:11:41,053 DEBUG:stack ['$const108.15', '$out0110.16', '$const112.17']
2024-07-15 06:11:41,053 DEBUG:dispatch pc=116, inst=BUILD_SLICE(arg=2, lineno=5)
2024-07-15 06:11:41,053 DEBUG:stack ['$const108.15', '$out0110.16', '$const112.17', '$const114.18']
2024-07-15 06:11:41,053 DEBUG:dispatch pc=118, inst=STORE_SUBSCR(arg=None, lineno=5)
2024-07-15 06:11:41,053 DEBUG:stack ['$const108.15', '$out0110.16', '$116build_slice.20']
2024-07-15 06:11:41,054 DEBUG:dispatch pc=122, inst=LOAD_GLOBAL(arg=9, lineno=6)
2024-07-15 06:11:41,054 DEBUG:stack []
2024-07-15 06:11:41,054 DEBUG:dispatch pc=134, inst=LOAD_GLOBAL(arg=11, lineno=6)
2024-07-15 06:11:41,054 DEBUG:stack ['$null$122.22', '$122load_global.21']
2024-07-15 06:11:41,054 DEBUG:dispatch pc=146, inst=LOAD_CONST(arg=2, lineno=6)
2024-07-15 06:11:41,054 DEBUG:stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23']
2024-07-15 06:11:41,054 DEBUG:dispatch pc=148, inst=LOAD_CONST(arg=4, lineno=6)
2024-07-15 06:11:41,054 DEBUG:stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25']
2024-07-15 06:11:41,054 DEBUG:dispatch pc=150, inst=PRECALL(arg=2, lineno=6)
2024-07-15 06:11:41,054 DEBUG:stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25', '$const148.26']
2024-07-15 06:11:41,054 DEBUG:dispatch pc=154, inst=CALL(arg=2, lineno=6)
2024-07-15 06:11:41,054 DEBUG:stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25', '$const148.26']
2024-07-15 06:11:41,054 DEBUG:dispatch pc=164, inst=UNARY_NEGATIVE(arg=None, lineno=6)
2024-07-15 06:11:41,054 DEBUG:stack ['$null$122.22', '$122load_global.21', '$154call.27']
2024-07-15 06:11:41,054 DEBUG:dispatch pc=166, inst=LOAD_FAST(arg=1, lineno=6)
2024-07-15 06:11:41,054 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28']
2024-07-15 06:11:41,054 DEBUG:dispatch pc=168, inst=LOAD_CONST(arg=2, lineno=6)
2024-07-15 06:11:41,054 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$full_shape0166.29']
2024-07-15 06:11:41,054 DEBUG:dispatch pc=170, inst=BINARY_SUBSCR(arg=None, lineno=6)
2024-07-15 06:11:41,054 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$full_shape0166.29', '$const168.30']
2024-07-15 06:11:41,054 DEBUG:dispatch pc=180, inst=LOAD_GLOBAL(arg=13, lineno=6)
2024-07-15 06:11:41,054 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31']
2024-07-15 06:11:41,054 DEBUG:dispatch pc=192, inst=LOAD_CONST(arg=2, lineno=6)
2024-07-15 06:11:41,055 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32']
2024-07-15 06:11:41,055 DEBUG:dispatch pc=194, inst=LOAD_CONST(arg=3, lineno=6)
2024-07-15 06:11:41,055 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34']
2024-07-15 06:11:41,055 DEBUG:dispatch pc=196, inst=PRECALL(arg=2, lineno=6)
2024-07-15 06:11:41,055 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34', '$const194.35']
2024-07-15 06:11:41,055 DEBUG:dispatch pc=200, inst=CALL(arg=2, lineno=6)
2024-07-15 06:11:41,055 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34', '$const194.35']
2024-07-15 06:11:41,055 DEBUG:dispatch pc=210, inst=BINARY_OP(arg=10, lineno=6)
2024-07-15 06:11:41,055 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$200call.36']
2024-07-15 06:11:41,055 DEBUG:dispatch pc=214, inst=PRECALL(arg=2, lineno=6)
2024-07-15 06:11:41,055 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$binop_sub210.37']
2024-07-15 06:11:41,055 DEBUG:dispatch pc=218, inst=CALL(arg=2, lineno=6)
2024-07-15 06:11:41,055 DEBUG:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$binop_sub210.37']
2024-07-15 06:11:41,055 DEBUG:dispatch pc=228, inst=GET_ITER(arg=None, lineno=6)
2024-07-15 06:11:41,055 DEBUG:stack ['$218call.38']
2024-07-15 06:11:41,055 DEBUG:end state. edges=[Edge(pc=230, stack=('$228get_iter.39',), blockstack=(), npush=0)]
2024-07-15 06:11:41,055 DEBUG:pending: deque([State(pc_initial=230 nstack_initial=1)])
2024-07-15 06:11:41,055 DEBUG:stack: ['$phi230.0']
2024-07-15 06:11:41,055 DEBUG:state.pc_initial: State(pc_initial=230 nstack_initial=1)
2024-07-15 06:11:41,055 DEBUG:dispatch pc=230, inst=FOR_ITER(arg=4, lineno=6)
2024-07-15 06:11:41,055 DEBUG:stack ['$phi230.0']
2024-07-15 06:11:41,055 DEBUG:end state. edges=[Edge(pc=240, stack=(), blockstack=(), npush=0), Edge(pc=232, stack=('$phi230.0', '$230for_iter.2'), blockstack=(), npush=0)]
2024-07-15 06:11:41,055 DEBUG:pending: deque([State(pc_initial=240 nstack_initial=0), State(pc_initial=232 nstack_initial=2)])
2024-07-15 06:11:41,055 DEBUG:stack: []
2024-07-15 06:11:41,056 DEBUG:state.pc_initial: State(pc_initial=240 nstack_initial=0)
2024-07-15 06:11:41,056 DEBUG:dispatch pc=240, inst=LOAD_FAST(arg=2, lineno=8)
2024-07-15 06:11:41,056 DEBUG:stack []
2024-07-15 06:11:41,056 DEBUG:dispatch pc=242, inst=RETURN_VALUE(arg=None, lineno=8)
2024-07-15 06:11:41,056 DEBUG:stack ['$out0240.0']
2024-07-15 06:11:41,056 DEBUG:end state. edges=[]
2024-07-15 06:11:41,056 DEBUG:pending: deque([State(pc_initial=232 nstack_initial=2)])
2024-07-15 06:11:41,056 DEBUG:stack: ['$phi232.0', '$phi232.1']
2024-07-15 06:11:41,056 DEBUG:state.pc_initial: State(pc_initial=232 nstack_initial=2)
2024-07-15 06:11:41,056 DEBUG:dispatch pc=232, inst=STORE_FAST(arg=3, lineno=6)
2024-07-15 06:11:41,056 DEBUG:stack ['$phi232.0', '$phi232.1']
2024-07-15 06:11:41,056 DEBUG:dispatch pc=234, inst=LOAD_CONST(arg=2, lineno=7)
2024-07-15 06:11:41,056 DEBUG:stack ['$phi232.0']
2024-07-15 06:11:41,056 DEBUG:dispatch pc=236, inst=STORE_FAST(arg=4, lineno=7)
2024-07-15 06:11:41,056 DEBUG:stack ['$phi232.0', '$const234.2']
2024-07-15 06:11:41,056 DEBUG:dispatch pc=238, inst=JUMP_BACKWARD(arg=5, lineno=7)
2024-07-15 06:11:41,056 DEBUG:stack ['$phi232.0']
2024-07-15 06:11:41,056 DEBUG:end state. edges=[Edge(pc=230, stack=('$phi232.0',), blockstack=(), npush=0)]
2024-07-15 06:11:41,056 DEBUG:pending: deque([State(pc_initial=230 nstack_initial=1)])
2024-07-15 06:11:41,056 DEBUG:-------------------------Prune PHIs-------------------------
2024-07-15 06:11:41,056 DEBUG:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=230 nstack_initial=1): {'$phi230.0'},
             State(pc_initial=232 nstack_initial=2): {'$phi232.1'},
             State(pc_initial=240 nstack_initial=0): set()})
2024-07-15 06:11:41,056 DEBUG:defmap: {'$phi230.0': State(pc_initial=0 nstack_initial=0),
 '$phi232.1': State(pc_initial=230 nstack_initial=1)}
2024-07-15 06:11:41,056 DEBUG:phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi232.0',
                            State(pc_initial=232 nstack_initial=2))},
             '$phi232.0': {('$phi230.0',
                            State(pc_initial=230 nstack_initial=1))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-07-15 06:11:41,056 DEBUG:changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi230.0',
                            State(pc_initial=230 nstack_initial=1))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-07-15 06:11:41,056 DEBUG:changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-07-15 06:11:41,056 DEBUG:changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-07-15 06:11:41,056 DEBUG:keep phismap: {'$phi230.0': {('$228get_iter.39', State(pc_initial=0 nstack_initial=0))},
 '$phi232.1': {('$230for_iter.2', State(pc_initial=230 nstack_initial=1))}}
2024-07-15 06:11:41,056 DEBUG:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi230.0': '$228get_iter.39'},
             State(pc_initial=230 nstack_initial=1): {'$phi232.1': '$230for_iter.2'}})
2024-07-15 06:11:41,057 DEBUG:----------------------DONE Prune PHIs-----------------------
2024-07-15 06:11:41,057 DEBUG:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'item': '$x4.0', 'res': '$6load_attr.1'}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'value': '$6load_attr.1'}), (18, {'idx': 1, 'res': '$18load_global.2'}), (20, {}), (22, {}), (24, {}), (26, {}), (28, {}), (30, {'item': '$18load_global.2', 'res': '$30load_method.4'}), (32, {}), (34, {}), (36, {}), (38, {}), (40, {}), (42, {}), (44, {}), (46, {}), (48, {}), (50, {}), (52, {'res': '$full_shape052.5'}), (54, {'idx': 1, 'res': '$54load_global.6'}), (56, {}), (58, {}), (60, {}), (62, {}), (64, {}), (66, {'item': '$54load_global.6', 'res': '$66load_attr.7'}), (68, {}), (70, {}), (72, {}), (74, {}), (78, {}), (80, {}), (82, {'func': '$30load_method.4', 'args': ['$full_shape052.5', '$66load_attr.7'], 'kw_names': 1, 'res': '$82call.8'}), (84, {}), (86, {}), (88, {}), (90, {}), (92, {'value': '$82call.8'}), (94, {'res': '$const94.9'}), (96, {'res': '$out096.10'}), (98, {'res': '$const98.11'}), (100, {'res': '$const100.12'}), (102, {'start': '$const98.11', 'stop': '$const100.12', 'step': None, 'res': '$102build_slice.14', 'slicevar': '$102build_slice.13'}), (104, {'target': '$out096.10', 'index': '$102build_slice.14', 'value': '$const94.9'}), (106, {}), (108, {'res': '$const108.15'}), (110, {'res': '$out0110.16'}), (112, {'res': '$const112.17'}), (114, {'res': '$const114.18'}), (116, {'start': '$const112.17', 'stop': '$const114.18', 'step': None, 'res': '$116build_slice.20', 'slicevar': '$116build_slice.19'}), (118, {'target': '$out0110.16', 'index': '$116build_slice.20', 'value': '$const108.15'}), (120, {}), (122, {'idx': 4, 'res': '$122load_global.21'}), (124, {}), (126, {}), (128, {}), (130, {}), (132, {}), (134, {'idx': 5, 'res': '$134load_global.23'}), (136, {}), (138, {}), (140, {}), (142, {}), (144, {}), (146, {'res': '$const146.25'}), (148, {'res': '$const148.26'}), (150, {}), (152, {}), (154, {'func': '$134load_global.23', 'args': ['$const146.25', '$const148.26'], 'kw_names': None, 'res': '$154call.27'}), (156, {}), (158, {}), (160, {}), (162, {}), (164, {'value': '$154call.27', 'res': '$164unary_negative.28'}), (166, {'res': '$full_shape0166.29'}), (168, {'res': '$const168.30'}), (170, {'index': '$const168.30', 'target': '$full_shape0166.29', 'res': '$170binary_subscr.31'}), (172, {}), (174, {}), (176, {}), (178, {}), (180, {'idx': 6, 'res': '$180load_global.32'}), (182, {}), (184, {}), (186, {}), (188, {}), (190, {}), (192, {'res': '$const192.34'}), (194, {'res': '$const194.35'}), (196, {}), (198, {}), (200, {'func': '$180load_global.32', 'args': ['$const192.34', '$const194.35'], 'kw_names': None, 'res': '$200call.36'}), (202, {}), (204, {}), (206, {}), (208, {}), (210, {'op': '-', 'lhs': '$170binary_subscr.31', 'rhs': '$200call.36', 'res': '$binop_sub210.37'}), (212, {}), (214, {}), (216, {}), (218, {'func': '$122load_global.21', 'args': ['$164unary_negative.28', '$binop_sub210.37'], 'kw_names': None, 'res': '$218call.38'}), (220, {}), (222, {}), (224, {}), (226, {}), (228, {'value': '$218call.38', 'res': '$228get_iter.39'})), outgoing_phis={'$phi230.0': '$228get_iter.39'}, blockstack=(), active_try_block=None, outgoing_edgepushed={230: ('$228get_iter.39',)})
2024-07-15 06:11:41,057 DEBUG:block_infos State(pc_initial=230 nstack_initial=1):
AdaptBlockInfo(insts=((230, {'iterator': '$phi230.0', 'pair': '$230for_iter.1', 'indval': '$230for_iter.2', 'pred': '$230for_iter.3'}),), outgoing_phis={'$phi232.1': '$230for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={240: (), 232: ('$phi230.0', '$230for_iter.2')})
2024-07-15 06:11:41,057 DEBUG:block_infos State(pc_initial=232 nstack_initial=2):
AdaptBlockInfo(insts=((232, {'value': '$phi232.1'}), (234, {'res': '$const234.2'}), (236, {'value': '$const234.2'}), (238, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={230: ('$phi232.0',)})
2024-07-15 06:11:41,057 DEBUG:block_infos State(pc_initial=240 nstack_initial=0):
AdaptBlockInfo(insts=((240, {'res': '$out0240.0'}), (242, {'retval': '$out0240.0', 'castval': '$242return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-15 06:11:41,058 DEBUG:label 0:
    x = arg(0, name=x)                       ['x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $18load_global.2 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$18load_global.2']
    $30load_method.4 = getattr(value=$18load_global.2, attr=empty) ['$18load_global.2', '$30load_method.4']
    $54load_global.6 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$54load_global.6']
    $66load_attr.7 = getattr(value=$54load_global.6, attr=bool_) ['$54load_global.6', '$66load_attr.7']
    out0 = call $30load_method.4(full_shape0, func=$30load_method.4, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7, <string>:3))], vararg=None, varkwarg=None, target=None) ['$30load_method.4', '$66load_attr.7', 'full_shape0', 'out0']
    $const94.9 = const(int, 0)               ['$const94.9']
    $const98.11 = const(NoneType, None)      ['$const98.11']
    $const100.12 = const(int, 1)             ['$const100.12']
    $102build_slice.13 = global(slice: <class 'slice'>) ['$102build_slice.13']
    $102build_slice.14 = call $102build_slice.13($const98.11, $const100.12, func=$102build_slice.13, args=(Var($const98.11, <string>:4), Var($const100.12, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$102build_slice.13', '$102build_slice.14', '$const100.12', '$const98.11']
    out0[$102build_slice.14] = $const94.9    ['$102build_slice.14', '$const94.9', 'out0']
    $const108.15 = const(int, 0)             ['$const108.15']
    $const112.17 = const(int, -1)            ['$const112.17']
    $const114.18 = const(NoneType, None)     ['$const114.18']
    $116build_slice.19 = global(slice: <class 'slice'>) ['$116build_slice.19']
    $116build_slice.20 = call $116build_slice.19($const112.17, $const114.18, func=$116build_slice.19, args=(Var($const112.17, <string>:5), Var($const114.18, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$116build_slice.19', '$116build_slice.20', '$const112.17', '$const114.18']
    out0[$116build_slice.20] = $const108.15  ['$116build_slice.20', '$const108.15', 'out0']
    $122load_global.21 = global(range: <class 'range'>) ['$122load_global.21']
    $134load_global.23 = global(min: <built-in function min>) ['$134load_global.23']
    $const146.25 = const(int, 0)             ['$const146.25']
    $const148.26 = const(int, -1)            ['$const148.26']
    $154call.27 = call $134load_global.23($const146.25, $const148.26, func=$134load_global.23, args=[Var($const146.25, <string>:6), Var($const148.26, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$134load_global.23', '$154call.27', '$const146.25', '$const148.26']
    $164unary_negative.28 = unary(fn=<built-in function neg>, value=$154call.27) ['$154call.27', '$164unary_negative.28']
    $const168.30 = const(int, 0)             ['$const168.30']
    $170binary_subscr.31 = getitem(value=full_shape0, index=$const168.30, fn=<built-in function getitem>) ['$170binary_subscr.31', '$const168.30', 'full_shape0']
    $180load_global.32 = global(max: <built-in function max>) ['$180load_global.32']
    $const192.34 = const(int, 0)             ['$const192.34']
    $const194.35 = const(int, 1)             ['$const194.35']
    $200call.36 = call $180load_global.32($const192.34, $const194.35, func=$180load_global.32, args=[Var($const192.34, <string>:6), Var($const194.35, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$180load_global.32', '$200call.36', '$const192.34', '$const194.35']
    $binop_sub210.37 = $170binary_subscr.31 - $200call.36 ['$170binary_subscr.31', '$200call.36', '$binop_sub210.37']
    $218call.38 = call $122load_global.21($164unary_negative.28, $binop_sub210.37, func=$122load_global.21, args=[Var($164unary_negative.28, <string>:6), Var($binop_sub210.37, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$122load_global.21', '$164unary_negative.28', '$218call.38', '$binop_sub210.37']
    $228get_iter.39 = getiter(value=$218call.38) ['$218call.38', '$228get_iter.39']
    $phi230.0 = $228get_iter.39              ['$228get_iter.39', '$phi230.0']
    jump 230                                 []
label 230:
    $230for_iter.1 = iternext(value=$phi230.0) ['$230for_iter.1', '$phi230.0']
    $230for_iter.2 = pair_first(value=$230for_iter.1) ['$230for_iter.1', '$230for_iter.2']
    $230for_iter.3 = pair_second(value=$230for_iter.1) ['$230for_iter.1', '$230for_iter.3']
    $phi232.1 = $230for_iter.2               ['$230for_iter.2', '$phi232.1']
    branch $230for_iter.3, 232, 240          ['$230for_iter.3']
label 232:
    index00 = $phi232.1                      ['$phi232.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 230                                 []
label 240:
    $242return_value.1 = cast(value=out0)    ['$242return_value.1', 'out0']
    return $242return_value.1                ['$242return_value.1']

2024-07-15 06:11:41,075 DEBUG:==== SSA block analysis pass on 0
2024-07-15 06:11:41,075 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5A80290>
2024-07-15 06:11:41,075 DEBUG:on stmt: x = arg(0, name=x)
2024-07-15 06:11:41,075 DEBUG:on stmt: full_shape0 = getattr(value=x, attr=shape)
2024-07-15 06:11:41,075 DEBUG:on stmt: $18load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:41,075 DEBUG:on stmt: $30load_method.4.1 = getattr(value=$18load_global.2.1, attr=empty)
2024-07-15 06:11:41,075 DEBUG:on stmt: $54load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:41,075 DEBUG:on stmt: $66load_attr.7.1 = getattr(value=$54load_global.6.1, attr=bool_)
2024-07-15 06:11:41,075 DEBUG:on stmt: out0 = call $30load_method.4.1(full_shape0, func=$30load_method.4.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:41,075 DEBUG:on stmt: $const94.9.1 = const(int, 0)
2024-07-15 06:11:41,076 DEBUG:on stmt: $const98.11.1 = const(NoneType, None)
2024-07-15 06:11:41,076 DEBUG:on stmt: $const100.12.1 = const(int, 1)
2024-07-15 06:11:41,076 DEBUG:on stmt: $102build_slice.13.1 = global(slice: <class 'slice'>)
2024-07-15 06:11:41,076 DEBUG:on stmt: $102build_slice.14.1 = call $102build_slice.13.1($const98.11.1, $const100.12.1, func=$102build_slice.13.1, args=(Var($const98.11.1, <string>:4), Var($const100.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:41,076 DEBUG:on stmt: out0[$102build_slice.14.1] = $const94.9.1
2024-07-15 06:11:41,076 DEBUG:on stmt: $const108.15.1 = const(int, 0)
2024-07-15 06:11:41,076 DEBUG:on stmt: $const112.17.1 = const(int, -1)
2024-07-15 06:11:41,076 DEBUG:on stmt: $const114.18.1 = const(NoneType, None)
2024-07-15 06:11:41,076 DEBUG:on stmt: $116build_slice.19.1 = global(slice: <class 'slice'>)
2024-07-15 06:11:41,076 DEBUG:on stmt: $116build_slice.20.1 = call $116build_slice.19.1($const112.17.1, $const114.18.1, func=$116build_slice.19.1, args=(Var($const112.17.1, <string>:5), Var($const114.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:41,076 DEBUG:on stmt: out0[$116build_slice.20.1] = $const108.15.1
2024-07-15 06:11:41,076 DEBUG:on stmt: $122load_global.21.1 = global(range: <class 'range'>)
2024-07-15 06:11:41,076 DEBUG:on stmt: $134load_global.23.1 = global(min: <built-in function min>)
2024-07-15 06:11:41,076 DEBUG:on stmt: $const146.25.1 = const(int, 0)
2024-07-15 06:11:41,076 DEBUG:on stmt: $const148.26.1 = const(int, -1)
2024-07-15 06:11:41,076 DEBUG:on stmt: $154call.27.1 = call $134load_global.23.1($const146.25.1, $const148.26.1, func=$134load_global.23.1, args=[Var($const146.25.1, <string>:6), Var($const148.26.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:41,077 DEBUG:on stmt: $164unary_negative.28.1 = unary(fn=<built-in function neg>, value=$154call.27.1)
2024-07-15 06:11:41,077 DEBUG:on stmt: $const168.30.1 = const(int, 0)
2024-07-15 06:11:41,077 DEBUG:on stmt: $170binary_subscr.31.1 = getitem(value=full_shape0, index=$const168.30.1, fn=<built-in function getitem>)
2024-07-15 06:11:41,077 DEBUG:on stmt: $180load_global.32.1 = global(max: <built-in function max>)
2024-07-15 06:11:41,077 DEBUG:on stmt: $const192.34.1 = const(int, 0)
2024-07-15 06:11:41,077 DEBUG:on stmt: $const194.35.1 = const(int, 1)
2024-07-15 06:11:41,077 DEBUG:on stmt: $200call.36.1 = call $180load_global.32.1($const192.34.1, $const194.35.1, func=$180load_global.32.1, args=[Var($const192.34.1, <string>:6), Var($const194.35.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:41,077 DEBUG:on stmt: $binop_sub210.37.1 = $170binary_subscr.31.1 - $200call.36.1
2024-07-15 06:11:41,077 DEBUG:on stmt: $218call.38.1 = call $122load_global.21.1($164unary_negative.28.1, $binop_sub210.37.1, func=$122load_global.21.1, args=[Var($164unary_negative.28.1, <string>:6), Var($binop_sub210.37.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:41,077 DEBUG:on stmt: $228get_iter.39.1 = getiter(value=$218call.38.1)
2024-07-15 06:11:41,077 DEBUG:on stmt: $phi230.0.1 = $228get_iter.39.1
2024-07-15 06:11:41,077 DEBUG:on stmt: jump 230
2024-07-15 06:11:41,077 DEBUG:==== SSA block analysis pass on 230
2024-07-15 06:11:41,077 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5A80290>
2024-07-15 06:11:41,077 DEBUG:on stmt: $230for_iter.1.1 = iternext(value=$phi230.0.1)
2024-07-15 06:11:41,077 DEBUG:on stmt: $230for_iter.2.1 = pair_first(value=$230for_iter.1.1)
2024-07-15 06:11:41,077 DEBUG:on stmt: $230for_iter.3.1 = pair_second(value=$230for_iter.1.1)
2024-07-15 06:11:41,077 DEBUG:on stmt: $phi232.1.1 = $230for_iter.2.1
2024-07-15 06:11:41,077 DEBUG:on stmt: branch $230for_iter.3.1, 232, 242
2024-07-15 06:11:41,078 DEBUG:==== SSA block analysis pass on 232
2024-07-15 06:11:41,078 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5A80290>
2024-07-15 06:11:41,078 DEBUG:on stmt: index00 = $phi232.1.1
2024-07-15 06:11:41,078 DEBUG:on stmt: jump 240
2024-07-15 06:11:41,078 DEBUG:==== SSA block analysis pass on 242
2024-07-15 06:11:41,078 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5A80290>
2024-07-15 06:11:41,078 DEBUG:on stmt: $242return_value.1.1 = cast(value=out0)
2024-07-15 06:11:41,078 DEBUG:on stmt: return $242return_value.1.1
2024-07-15 06:11:41,078 DEBUG:==== SSA block analysis pass on 240
2024-07-15 06:11:41,078 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5A80290>
2024-07-15 06:11:41,078 DEBUG:on stmt: $const6.1 = const(int, 0)
2024-07-15 06:11:41,078 DEBUG:on stmt: stencil_index = $const6.1 + index00
2024-07-15 06:11:41,078 DEBUG:on stmt: $8binary_subscr.2 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-07-15 06:11:41,078 DEBUG:on stmt: $const20.4 = const(int, -1)
2024-07-15 06:11:41,078 DEBUG:on stmt: stencil_index.1 = $const20.4 + index00
2024-07-15 06:11:41,078 DEBUG:on stmt: $22binary_subscr.5 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2024-07-15 06:11:41,078 DEBUG:on stmt: $32compare_op.6 = $8binary_subscr.2 < $22binary_subscr.5
2024-07-15 06:11:41,078 DEBUG:on stmt: $const40.8 = const(int, 0)
2024-07-15 06:11:41,078 DEBUG:on stmt: stencil_index.2 = $const40.8 + index00
2024-07-15 06:11:41,079 DEBUG:on stmt: $42binary_subscr.9 = getitem(value=x, index=stencil_index.2, fn=<built-in function getitem>)
2024-07-15 06:11:41,079 DEBUG:on stmt: $const54.11 = const(int, 1)
2024-07-15 06:11:41,079 DEBUG:on stmt: stencil_index.3 = $const54.11 + index00
2024-07-15 06:11:41,079 DEBUG:on stmt: $56binary_subscr.12 = getitem(value=x, index=stencil_index.3, fn=<built-in function getitem>)
2024-07-15 06:11:41,079 DEBUG:on stmt: $66compare_op.13 = $42binary_subscr.9 <= $56binary_subscr.12
2024-07-15 06:11:41,079 DEBUG:on stmt: $binop_and_72.14 = $32compare_op.6 & $66compare_op.13
2024-07-15 06:11:41,079 DEBUG:on stmt: $76return_value.15 = cast(value=$binop_and_72.14)
2024-07-15 06:11:41,079 DEBUG:on stmt: out0[index00] = $76return_value.15
2024-07-15 06:11:41,079 DEBUG:on stmt: jump 241
2024-07-15 06:11:41,079 DEBUG:==== SSA block analysis pass on 241
2024-07-15 06:11:41,079 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5A80290>
2024-07-15 06:11:41,079 DEBUG:on stmt: jump 230
2024-07-15 06:11:41,080 DEBUG:defs defaultdict(<class 'list'>,
            {'$102build_slice.13.1': [(<numba.core.ir.Assign object at 0x00000221B5AC1510>,
                                       0)],
             '$102build_slice.14.1': [(<numba.core.ir.Assign object at 0x00000221B5AC2B50>,
                                       0)],
             '$116build_slice.19.1': [(<numba.core.ir.Assign object at 0x00000221B5C039D0>,
                                       0)],
             '$116build_slice.20.1': [(<numba.core.ir.Assign object at 0x00000221B5C037D0>,
                                       0)],
             '$122load_global.21.1': [(<numba.core.ir.Assign object at 0x00000221B5C03BD0>,
                                       0)],
             '$134load_global.23.1': [(<numba.core.ir.Assign object at 0x00000221B5C028D0>,
                                       0)],
             '$154call.27.1': [(<numba.core.ir.Assign object at 0x00000221B5C01150>,
                                0)],
             '$164unary_negative.28.1': [(<numba.core.ir.Assign object at 0x00000221B5C00F90>,
                                          0)],
             '$170binary_subscr.31.1': [(<numba.core.ir.Assign object at 0x00000221B5C01750>,
                                         0)],
             '$180load_global.32.1': [(<numba.core.ir.Assign object at 0x00000221B5C00A10>,
                                       0)],
             '$18load_global.2.1': [(<numba.core.ir.Assign object at 0x00000221B5AC31D0>,
                                     0)],
             '$200call.36.1': [(<numba.core.ir.Assign object at 0x00000221B5C03790>,
                                0)],
             '$218call.38.1': [(<numba.core.ir.Assign object at 0x00000221B5C000D0>,
                                0)],
             '$228get_iter.39.1': [(<numba.core.ir.Assign object at 0x00000221B5C01190>,
                                    0)],
             '$22binary_subscr.5': [(<numba.core.ir.Assign object at 0x00000221B5A73D50>,
                                     240)],
             '$230for_iter.1.1': [(<numba.core.ir.Assign object at 0x00000221B5C00D50>,
                                   230)],
             '$230for_iter.2.1': [(<numba.core.ir.Assign object at 0x00000221B5C02810>,
                                   230)],
             '$230for_iter.3.1': [(<numba.core.ir.Assign object at 0x00000221B5C03B10>,
                                   230)],
             '$242return_value.1.1': [(<numba.core.ir.Assign object at 0x00000221B5A5F690>,
                                       242)],
             '$30load_method.4.1': [(<numba.core.ir.Assign object at 0x00000221B5AC3310>,
                                     0)],
             '$32compare_op.6': [(<numba.core.ir.Assign object at 0x00000221B5BAF510>,
                                  240)],
             '$42binary_subscr.9': [(<numba.core.ir.Assign object at 0x00000221B5A2C690>,
                                     240)],
             '$54load_global.6.1': [(<numba.core.ir.Assign object at 0x00000221B5AC16D0>,
                                     0)],
             '$56binary_subscr.12': [(<numba.core.ir.Assign object at 0x00000221B5A2C410>,
                                      240)],
             '$66compare_op.13': [(<numba.core.ir.Assign object at 0x00000221B5BAC390>,
                                   240)],
             '$66load_attr.7.1': [(<numba.core.ir.Assign object at 0x00000221B5AC0E50>,
                                   0)],
             '$76return_value.15': [(<numba.core.ir.Assign object at 0x00000221B5BACB90>,
                                     240)],
             '$8binary_subscr.2': [(<numba.core.ir.Assign object at 0x00000221B7B5ED90>,
                                    240)],
             '$binop_and_72.14': [(<numba.core.ir.Assign object at 0x00000221B5BAED10>,
                                   240)],
             '$binop_sub210.37.1': [(<numba.core.ir.Assign object at 0x00000221B5C03E50>,
                                     0)],
             '$const100.12.1': [(<numba.core.ir.Assign object at 0x00000221B5AC28D0>,
                                 0)],
             '$const108.15.1': [(<numba.core.ir.Assign object at 0x00000221B5C00550>,
                                 0)],
             '$const112.17.1': [(<numba.core.ir.Assign object at 0x00000221B5C00B50>,
                                 0)],
             '$const114.18.1': [(<numba.core.ir.Assign object at 0x00000221B5C01310>,
                                 0)],
             '$const146.25.1': [(<numba.core.ir.Assign object at 0x00000221B5C03150>,
                                 0)],
             '$const148.26.1': [(<numba.core.ir.Assign object at 0x00000221B5C02650>,
                                 0)],
             '$const168.30.1': [(<numba.core.ir.Assign object at 0x00000221B5C016D0>,
                                 0)],
             '$const192.34.1': [(<numba.core.ir.Assign object at 0x00000221B5C00410>,
                                 0)],
             '$const194.35.1': [(<numba.core.ir.Assign object at 0x00000221B5C00ED0>,
                                 0)],
             '$const20.4': [(<numba.core.ir.Assign object at 0x00000221B5AD9090>,
                             240)],
             '$const40.8': [(<numba.core.ir.Assign object at 0x00000221B59EC750>,
                             240)],
             '$const54.11': [(<numba.core.ir.Assign object at 0x00000221B5BB9450>,
                              240)],
             '$const6.1': [(<numba.core.ir.Assign object at 0x00000221B5AD8DD0>,
                            240)],
             '$const94.9.1': [(<numba.core.ir.Assign object at 0x00000221B5AC3610>,
                               0)],
             '$const98.11.1': [(<numba.core.ir.Assign object at 0x00000221B5AC0510>,
                                0)],
             '$phi230.0.1': [(<numba.core.ir.Assign object at 0x00000221B5AC0310>,
                              0)],
             '$phi232.1.1': [(<numba.core.ir.Assign object at 0x00000221B5C01C50>,
                              230)],
             'full_shape0': [(<numba.core.ir.Assign object at 0x00000221B5AC3E10>,
                              0)],
             'index00': [(<numba.core.ir.Assign object at 0x00000221B5C01950>,
                          232)],
             'out0': [(<numba.core.ir.Assign object at 0x00000221B5AC1C90>, 0)],
             'stencil_index': [(<numba.core.ir.Assign object at 0x00000221B7B68290>,
                                240)],
             'stencil_index.1': [(<numba.core.ir.Assign object at 0x00000221B7B5D910>,
                                  240)],
             'stencil_index.2': [(<numba.core.ir.Assign object at 0x00000221B5A2E550>,
                                  240)],
             'stencil_index.3': [(<numba.core.ir.Assign object at 0x00000221B5A2C490>,
                                  240)],
             'x': [(<numba.core.ir.Assign object at 0x00000221B5AC0A50>, 0)]})
2024-07-15 06:11:41,080 DEBUG:SSA violators <numba.core.utils.OrderedSet object at 0x00000221B67C0610>
2024-07-15 06:11:41,955 DEBUG:bytecode dump:
>          0	NOP(arg=None, lineno=1209)
           2	RESUME(arg=0, lineno=1209)
           4	LOAD_FAST(arg=0, lineno=1221)
           6	LOAD_CONST(arg=1, lineno=1221)
           8	BINARY_SUBSCR(arg=None, lineno=1221)
          18	LOAD_GLOBAL(arg=1, lineno=1221)
          30	LOAD_ATTR(arg=1, lineno=1221)
          40	LOAD_FAST(arg=0, lineno=1221)
          42	LOAD_CONST(arg=2, lineno=1221)
          44	LOAD_GLOBAL(arg=5, lineno=1221)
          56	LOAD_FAST(arg=2, lineno=1221)
          58	LOAD_FAST(arg=0, lineno=1221)
          60	LOAD_ATTR(arg=3, lineno=1221)
          70	LOAD_CONST(arg=1, lineno=1221)
          72	BINARY_SUBSCR(arg=None, lineno=1221)
          82	PRECALL(arg=2, lineno=1221)
          86	CALL(arg=2, lineno=1221)
          96	BUILD_SLICE(arg=2, lineno=1221)
          98	BINARY_SUBSCR(arg=None, lineno=1221)
         108	PRECALL(arg=1, lineno=1221)
         112	CALL(arg=1, lineno=1221)
         122	COMPARE_OP(arg=5, lineno=1221)
         128	LOAD_FAST(arg=7, lineno=1221)
         130	LOAD_CONST(arg=1, lineno=1221)
         132	STORE_SUBSCR(arg=None, lineno=1221)
         136	LOAD_FAST(arg=7, lineno=1222)
         138	LOAD_CONST(arg=1, lineno=1222)
         140	COPY(arg=2, lineno=1222)
         142	COPY(arg=2, lineno=1222)
         144	BINARY_SUBSCR(arg=None, lineno=1222)
         154	LOAD_FAST(arg=0, lineno=1222)
         156	LOAD_CONST(arg=1, lineno=1222)
         158	BINARY_SUBSCR(arg=None, lineno=1222)
         168	LOAD_GLOBAL(arg=1, lineno=1222)
         180	LOAD_ATTR(arg=4, lineno=1222)
         190	LOAD_FAST(arg=0, lineno=1222)
         192	LOAD_CONST(arg=2, lineno=1222)
         194	LOAD_GLOBAL(arg=5, lineno=1222)
         206	LOAD_FAST(arg=4, lineno=1222)
         208	LOAD_FAST(arg=0, lineno=1222)
         210	LOAD_ATTR(arg=3, lineno=1222)
         220	LOAD_CONST(arg=1, lineno=1222)
         222	BINARY_SUBSCR(arg=None, lineno=1222)
         232	PRECALL(arg=2, lineno=1222)
         236	CALL(arg=2, lineno=1222)
         246	BUILD_SLICE(arg=2, lineno=1222)
         248	BINARY_SUBSCR(arg=None, lineno=1222)
         258	PRECALL(arg=1, lineno=1222)
         262	CALL(arg=1, lineno=1222)
         272	LOAD_FAST(arg=5, lineno=1222)
         274	BINARY_OP(arg=0, lineno=1222)
         278	COMPARE_OP(arg=5, lineno=1222)
         284	BINARY_OP(arg=14, lineno=1222)
         288	SWAP(arg=3, lineno=1222)
         290	SWAP(arg=2, lineno=1222)
         292	STORE_SUBSCR(arg=None, lineno=1222)
         296	LOAD_FAST(arg=7, lineno=1224)
         298	LOAD_CONST(arg=1, lineno=1224)
         300	BINARY_SUBSCR(arg=None, lineno=1224)
         310	POP_JUMP_FORWARD_IF_FALSE(arg=6, lineno=1224)
         312	LOAD_FAST(arg=6, lineno=1225)
         314	LOAD_CONST(arg=3, lineno=1225)
         316	BINARY_OP(arg=0, lineno=1225)
         320	STORE_FAST(arg=8, lineno=1225)
         322	JUMP_FORWARD(arg=2, lineno=1225)
>        324	LOAD_CONST(arg=3, lineno=1227)
         326	STORE_FAST(arg=8, lineno=1227)
>        328	LOAD_FAST(arg=8, lineno=1229)
         330	LOAD_FAST(arg=0, lineno=1229)
         332	LOAD_ATTR(arg=3, lineno=1229)
         342	LOAD_CONST(arg=1, lineno=1229)
         344	BINARY_SUBSCR(arg=None, lineno=1229)
         354	COMPARE_OP(arg=0, lineno=1229)
         360	POP_JUMP_FORWARD_IF_FALSE(arg=245, lineno=1229)
>        362	LOAD_GLOBAL(arg=1, lineno=1230)
         374	LOAD_ATTR(arg=1, lineno=1230)
         384	LOAD_FAST(arg=0, lineno=1230)
         386	LOAD_GLOBAL(arg=3, lineno=1230)
         398	LOAD_CONST(arg=1, lineno=1230)
         400	LOAD_FAST(arg=8, lineno=1230)
         402	LOAD_FAST(arg=1, lineno=1230)
         404	BINARY_OP(arg=10, lineno=1230)
         408	PRECALL(arg=2, lineno=1230)
         412	CALL(arg=2, lineno=1230)
         422	LOAD_GLOBAL(arg=5, lineno=1230)
         434	LOAD_FAST(arg=8, lineno=1230)
         436	LOAD_FAST(arg=2, lineno=1230)
         438	BINARY_OP(arg=0, lineno=1230)
         442	LOAD_FAST(arg=0, lineno=1230)
         444	LOAD_ATTR(arg=3, lineno=1230)
         454	LOAD_CONST(arg=1, lineno=1230)
         456	BINARY_SUBSCR(arg=None, lineno=1230)
         466	PRECALL(arg=2, lineno=1230)
         470	CALL(arg=2, lineno=1230)
         480	BUILD_SLICE(arg=2, lineno=1230)
         482	BINARY_SUBSCR(arg=None, lineno=1230)
         492	PRECALL(arg=1, lineno=1230)
         496	CALL(arg=1, lineno=1230)
         506	STORE_FAST(arg=9, lineno=1230)
         508	LOAD_FAST(arg=0, lineno=1233)
         510	LOAD_FAST(arg=8, lineno=1233)
         512	BINARY_SUBSCR(arg=None, lineno=1233)
         522	LOAD_FAST(arg=9, lineno=1233)
         524	COMPARE_OP(arg=2, lineno=1233)
         530	LOAD_FAST(arg=7, lineno=1233)
         532	LOAD_FAST(arg=8, lineno=1233)
         534	STORE_SUBSCR(arg=None, lineno=1233)
         538	LOAD_FAST(arg=7, lineno=1235)
         540	LOAD_FAST(arg=8, lineno=1235)
         542	BINARY_SUBSCR(arg=None, lineno=1235)
         552	POP_JUMP_FORWARD_IF_TRUE(arg=6, lineno=1235)
         554	LOAD_FAST(arg=8, lineno=1236)
         556	LOAD_CONST(arg=3, lineno=1236)
         558	BINARY_OP(arg=13, lineno=1236)
         562	STORE_FAST(arg=8, lineno=1236)
         564	JUMP_BACKWARD(arg=119, lineno=1237)
>        566	LOAD_GLOBAL(arg=1, lineno=1239)
         578	LOAD_ATTR(arg=4, lineno=1239)
         588	LOAD_FAST(arg=0, lineno=1239)
         590	LOAD_GLOBAL(arg=3, lineno=1239)
         602	LOAD_CONST(arg=1, lineno=1239)
         604	LOAD_FAST(arg=8, lineno=1239)
         606	LOAD_FAST(arg=3, lineno=1239)
         608	BINARY_OP(arg=10, lineno=1239)
         612	PRECALL(arg=2, lineno=1239)
         616	CALL(arg=2, lineno=1239)
         626	LOAD_GLOBAL(arg=5, lineno=1239)
         638	LOAD_FAST(arg=8, lineno=1239)
         640	LOAD_FAST(arg=4, lineno=1239)
         642	BINARY_OP(arg=0, lineno=1239)
         646	LOAD_FAST(arg=0, lineno=1239)
         648	LOAD_ATTR(arg=3, lineno=1239)
         658	LOAD_CONST(arg=1, lineno=1239)
         660	BINARY_SUBSCR(arg=None, lineno=1239)
         670	PRECALL(arg=2, lineno=1239)
         674	CALL(arg=2, lineno=1239)
         684	BUILD_SLICE(arg=2, lineno=1239)
         686	BINARY_SUBSCR(arg=None, lineno=1239)
         696	PRECALL(arg=1, lineno=1239)
         700	CALL(arg=1, lineno=1239)
         710	STORE_FAST(arg=10, lineno=1239)
         712	LOAD_FAST(arg=7, lineno=1240)
         714	LOAD_FAST(arg=8, lineno=1240)
         716	COPY(arg=2, lineno=1240)
         718	COPY(arg=2, lineno=1240)
         720	BINARY_SUBSCR(arg=None, lineno=1240)
         730	LOAD_FAST(arg=0, lineno=1240)
         732	LOAD_FAST(arg=8, lineno=1240)
         734	BINARY_SUBSCR(arg=None, lineno=1240)
         744	LOAD_FAST(arg=10, lineno=1240)
         746	LOAD_FAST(arg=5, lineno=1240)
         748	BINARY_OP(arg=0, lineno=1240)
         752	COMPARE_OP(arg=5, lineno=1240)
         758	BINARY_OP(arg=14, lineno=1240)
         762	SWAP(arg=3, lineno=1240)
         764	SWAP(arg=2, lineno=1240)
         766	STORE_SUBSCR(arg=None, lineno=1240)
         770	LOAD_FAST(arg=7, lineno=1242)
         772	LOAD_FAST(arg=8, lineno=1242)
         774	BINARY_SUBSCR(arg=None, lineno=1242)
         784	POP_JUMP_FORWARD_IF_TRUE(arg=6, lineno=1242)
         786	LOAD_FAST(arg=8, lineno=1243)
         788	LOAD_CONST(arg=3, lineno=1243)
         790	BINARY_OP(arg=13, lineno=1243)
         794	STORE_FAST(arg=8, lineno=1243)
         796	JUMP_BACKWARD(arg=235, lineno=1244)
>        798	LOAD_FAST(arg=8, lineno=1247)
         800	LOAD_FAST(arg=6, lineno=1247)
         802	LOAD_CONST(arg=3, lineno=1247)
         804	BINARY_OP(arg=0, lineno=1247)
         808	BINARY_OP(arg=13, lineno=1247)
         812	STORE_FAST(arg=8, lineno=1247)
         814	LOAD_FAST(arg=8, lineno=1229)
         816	LOAD_FAST(arg=0, lineno=1229)
         818	LOAD_ATTR(arg=3, lineno=1229)
         828	LOAD_CONST(arg=1, lineno=1229)
         830	BINARY_SUBSCR(arg=None, lineno=1229)
         840	COMPARE_OP(arg=0, lineno=1229)
         846	POP_JUMP_BACKWARD_IF_TRUE(arg=243, lineno=1229)
         848	LOAD_CONST(arg=2, lineno=1229)
         850	RETURN_VALUE(arg=None, lineno=1229)
>        852	LOAD_CONST(arg=2, lineno=1229)
         854	RETURN_VALUE(arg=None, lineno=1229)
2024-07-15 06:11:41,955 DEBUG:pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-15 06:11:41,955 DEBUG:stack: []
2024-07-15 06:11:41,955 DEBUG:state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-15 06:11:41,956 DEBUG:dispatch pc=0, inst=NOP(arg=None, lineno=1209)
2024-07-15 06:11:41,956 DEBUG:stack []
2024-07-15 06:11:41,956 DEBUG:dispatch pc=2, inst=RESUME(arg=0, lineno=1209)
2024-07-15 06:11:41,956 DEBUG:stack []
2024-07-15 06:11:41,956 DEBUG:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1221)
2024-07-15 06:11:41,956 DEBUG:stack []
2024-07-15 06:11:41,956 DEBUG:dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1221)
2024-07-15 06:11:41,956 DEBUG:stack ['$x4.0']
2024-07-15 06:11:41,956 DEBUG:dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1221)
2024-07-15 06:11:41,956 DEBUG:stack ['$x4.0', '$const6.1']
2024-07-15 06:11:41,956 DEBUG:dispatch pc=18, inst=LOAD_GLOBAL(arg=1, lineno=1221)
2024-07-15 06:11:41,956 DEBUG:stack ['$8binary_subscr.2']
2024-07-15 06:11:41,956 DEBUG:dispatch pc=30, inst=LOAD_ATTR(arg=1, lineno=1221)
2024-07-15 06:11:41,956 DEBUG:stack ['$8binary_subscr.2', '$null$18.4', '$18load_global.3']
2024-07-15 06:11:41,956 DEBUG:dispatch pc=40, inst=LOAD_FAST(arg=0, lineno=1221)
2024-07-15 06:11:41,956 DEBUG:stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5']
2024-07-15 06:11:41,956 DEBUG:dispatch pc=42, inst=LOAD_CONST(arg=2, lineno=1221)
2024-07-15 06:11:41,956 DEBUG:stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6']
2024-07-15 06:11:41,956 DEBUG:dispatch pc=44, inst=LOAD_GLOBAL(arg=5, lineno=1221)
2024-07-15 06:11:41,956 DEBUG:stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7']
2024-07-15 06:11:41,956 DEBUG:dispatch pc=56, inst=LOAD_FAST(arg=2, lineno=1221)
2024-07-15 06:11:41,956 DEBUG:stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7', '$null$44.9', '$44load_global.8']
2024-07-15 06:11:41,956 DEBUG:dispatch pc=58, inst=LOAD_FAST(arg=0, lineno=1221)
2024-07-15 06:11:41,956 DEBUG:stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7', '$null$44.9', '$44load_global.8', '$post_max56.10']
2024-07-15 06:11:41,956 DEBUG:dispatch pc=60, inst=LOAD_ATTR(arg=3, lineno=1221)
2024-07-15 06:11:41,956 DEBUG:stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7', '$null$44.9', '$44load_global.8', '$post_max56.10', '$x58.11']
2024-07-15 06:11:41,956 DEBUG:dispatch pc=70, inst=LOAD_CONST(arg=1, lineno=1221)
2024-07-15 06:11:41,956 DEBUG:stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7', '$null$44.9', '$44load_global.8', '$post_max56.10', '$60load_attr.12']
2024-07-15 06:11:41,956 DEBUG:dispatch pc=72, inst=BINARY_SUBSCR(arg=None, lineno=1221)
2024-07-15 06:11:41,956 DEBUG:stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7', '$null$44.9', '$44load_global.8', '$post_max56.10', '$60load_attr.12', '$const70.13']
2024-07-15 06:11:41,956 DEBUG:dispatch pc=82, inst=PRECALL(arg=2, lineno=1221)
2024-07-15 06:11:41,956 DEBUG:stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7', '$null$44.9', '$44load_global.8', '$post_max56.10', '$72binary_subscr.14']
2024-07-15 06:11:41,956 DEBUG:dispatch pc=86, inst=CALL(arg=2, lineno=1221)
2024-07-15 06:11:41,956 DEBUG:stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7', '$null$44.9', '$44load_global.8', '$post_max56.10', '$72binary_subscr.14']
2024-07-15 06:11:41,956 DEBUG:dispatch pc=96, inst=BUILD_SLICE(arg=2, lineno=1221)
2024-07-15 06:11:41,956 DEBUG:stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7', '$86call.15']
2024-07-15 06:11:41,956 DEBUG:dispatch pc=98, inst=BINARY_SUBSCR(arg=None, lineno=1221)
2024-07-15 06:11:41,956 DEBUG:stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$96build_slice.17']
2024-07-15 06:11:41,956 DEBUG:dispatch pc=108, inst=PRECALL(arg=1, lineno=1221)
2024-07-15 06:11:41,956 DEBUG:stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$98binary_subscr.18']
2024-07-15 06:11:41,956 DEBUG:dispatch pc=112, inst=CALL(arg=1, lineno=1221)
2024-07-15 06:11:41,956 DEBUG:stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$98binary_subscr.18']
2024-07-15 06:11:41,956 DEBUG:dispatch pc=122, inst=COMPARE_OP(arg=5, lineno=1221)
2024-07-15 06:11:41,956 DEBUG:stack ['$8binary_subscr.2', '$112call.19']
2024-07-15 06:11:41,956 DEBUG:dispatch pc=128, inst=LOAD_FAST(arg=7, lineno=1221)
2024-07-15 06:11:41,956 DEBUG:stack ['$122compare_op.20']
2024-07-15 06:11:41,956 DEBUG:dispatch pc=130, inst=LOAD_CONST(arg=1, lineno=1221)
2024-07-15 06:11:41,956 DEBUG:stack ['$122compare_op.20', '$peaks128.21']
2024-07-15 06:11:41,956 DEBUG:dispatch pc=132, inst=STORE_SUBSCR(arg=None, lineno=1221)
2024-07-15 06:11:41,956 DEBUG:stack ['$122compare_op.20', '$peaks128.21', '$const130.22']
2024-07-15 06:11:41,956 DEBUG:dispatch pc=136, inst=LOAD_FAST(arg=7, lineno=1222)
2024-07-15 06:11:41,956 DEBUG:stack []
2024-07-15 06:11:41,956 DEBUG:dispatch pc=138, inst=LOAD_CONST(arg=1, lineno=1222)
2024-07-15 06:11:41,956 DEBUG:stack ['$peaks136.23']
2024-07-15 06:11:41,956 DEBUG:dispatch pc=140, inst=COPY(arg=2, lineno=1222)
2024-07-15 06:11:41,956 DEBUG:stack ['$peaks136.23', '$const138.24']
2024-07-15 06:11:41,956 DEBUG:dispatch pc=142, inst=COPY(arg=2, lineno=1222)
2024-07-15 06:11:41,956 DEBUG:stack ['$peaks136.23', '$const138.24', '$peaks136.23']
2024-07-15 06:11:41,956 DEBUG:dispatch pc=144, inst=BINARY_SUBSCR(arg=None, lineno=1222)
2024-07-15 06:11:41,956 DEBUG:stack ['$peaks136.23', '$const138.24', '$peaks136.23', '$const138.24']
2024-07-15 06:11:41,956 DEBUG:dispatch pc=154, inst=LOAD_FAST(arg=0, lineno=1222)
2024-07-15 06:11:41,956 DEBUG:stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25']
2024-07-15 06:11:41,956 DEBUG:dispatch pc=156, inst=LOAD_CONST(arg=1, lineno=1222)
2024-07-15 06:11:41,956 DEBUG:stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$x154.26']
2024-07-15 06:11:41,956 DEBUG:dispatch pc=158, inst=BINARY_SUBSCR(arg=None, lineno=1222)
2024-07-15 06:11:41,956 DEBUG:stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$x154.26', '$const156.27']
2024-07-15 06:11:41,956 DEBUG:dispatch pc=168, inst=LOAD_GLOBAL(arg=1, lineno=1222)
2024-07-15 06:11:41,956 DEBUG:stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28']
2024-07-15 06:11:41,956 DEBUG:dispatch pc=180, inst=LOAD_ATTR(arg=4, lineno=1222)
2024-07-15 06:11:41,956 DEBUG:stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$168load_global.29']
2024-07-15 06:11:41,956 DEBUG:dispatch pc=190, inst=LOAD_FAST(arg=0, lineno=1222)
2024-07-15 06:11:41,958 DEBUG:stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31']
2024-07-15 06:11:41,958 DEBUG:dispatch pc=192, inst=LOAD_CONST(arg=2, lineno=1222)
2024-07-15 06:11:41,958 DEBUG:stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32']
2024-07-15 06:11:41,958 DEBUG:dispatch pc=194, inst=LOAD_GLOBAL(arg=5, lineno=1222)
2024-07-15 06:11:41,958 DEBUG:stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33']
2024-07-15 06:11:41,958 DEBUG:dispatch pc=206, inst=LOAD_FAST(arg=4, lineno=1222)
2024-07-15 06:11:41,958 DEBUG:stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33', '$null$194.35', '$194load_global.34']
2024-07-15 06:11:41,958 DEBUG:dispatch pc=208, inst=LOAD_FAST(arg=0, lineno=1222)
2024-07-15 06:11:41,958 DEBUG:stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33', '$null$194.35', '$194load_global.34', '$post_avg206.36']
2024-07-15 06:11:41,958 DEBUG:dispatch pc=210, inst=LOAD_ATTR(arg=3, lineno=1222)
2024-07-15 06:11:41,958 DEBUG:stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33', '$null$194.35', '$194load_global.34', '$post_avg206.36', '$x208.37']
2024-07-15 06:11:41,958 DEBUG:dispatch pc=220, inst=LOAD_CONST(arg=1, lineno=1222)
2024-07-15 06:11:41,958 DEBUG:stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33', '$null$194.35', '$194load_global.34', '$post_avg206.36', '$210load_attr.38']
2024-07-15 06:11:41,958 DEBUG:dispatch pc=222, inst=BINARY_SUBSCR(arg=None, lineno=1222)
2024-07-15 06:11:41,958 DEBUG:stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33', '$null$194.35', '$194load_global.34', '$post_avg206.36', '$210load_attr.38', '$const220.39']
2024-07-15 06:11:41,958 DEBUG:dispatch pc=232, inst=PRECALL(arg=2, lineno=1222)
2024-07-15 06:11:41,958 DEBUG:stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33', '$null$194.35', '$194load_global.34', '$post_avg206.36', '$222binary_subscr.40']
2024-07-15 06:11:41,958 DEBUG:dispatch pc=236, inst=CALL(arg=2, lineno=1222)
2024-07-15 06:11:41,958 DEBUG:stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33', '$null$194.35', '$194load_global.34', '$post_avg206.36', '$222binary_subscr.40']
2024-07-15 06:11:41,958 DEBUG:dispatch pc=246, inst=BUILD_SLICE(arg=2, lineno=1222)
2024-07-15 06:11:41,958 DEBUG:stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33', '$236call.41']
2024-07-15 06:11:41,958 DEBUG:dispatch pc=248, inst=BINARY_SUBSCR(arg=None, lineno=1222)
2024-07-15 06:11:41,958 DEBUG:stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$246build_slice.43']
2024-07-15 06:11:41,958 DEBUG:dispatch pc=258, inst=PRECALL(arg=1, lineno=1222)
2024-07-15 06:11:41,958 DEBUG:stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$248binary_subscr.44']
2024-07-15 06:11:41,958 DEBUG:dispatch pc=262, inst=CALL(arg=1, lineno=1222)
2024-07-15 06:11:41,958 DEBUG:stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$248binary_subscr.44']
2024-07-15 06:11:41,958 DEBUG:dispatch pc=272, inst=LOAD_FAST(arg=5, lineno=1222)
2024-07-15 06:11:41,958 DEBUG:stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$262call.45']
2024-07-15 06:11:41,958 DEBUG:dispatch pc=274, inst=BINARY_OP(arg=0, lineno=1222)
2024-07-15 06:11:41,958 DEBUG:stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$262call.45', '$delta272.46']
2024-07-15 06:11:41,958 DEBUG:dispatch pc=278, inst=COMPARE_OP(arg=5, lineno=1222)
2024-07-15 06:11:41,958 DEBUG:stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$binop_add274.47']
2024-07-15 06:11:41,959 DEBUG:dispatch pc=284, inst=BINARY_OP(arg=14, lineno=1222)
2024-07-15 06:11:41,959 DEBUG:stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$278compare_op.48']
2024-07-15 06:11:41,959 DEBUG:dispatch pc=288, inst=SWAP(arg=3, lineno=1222)
2024-07-15 06:11:41,959 DEBUG:stack ['$peaks136.23', '$const138.24', '$binop_iand284.49']
2024-07-15 06:11:41,959 DEBUG:dispatch pc=290, inst=SWAP(arg=2, lineno=1222)
2024-07-15 06:11:41,959 DEBUG:stack ['$binop_iand284.49', '$const138.24', '$peaks136.23']
2024-07-15 06:11:41,959 DEBUG:dispatch pc=292, inst=STORE_SUBSCR(arg=None, lineno=1222)
2024-07-15 06:11:41,959 DEBUG:stack ['$binop_iand284.49', '$peaks136.23', '$const138.24']
2024-07-15 06:11:41,959 DEBUG:dispatch pc=296, inst=LOAD_FAST(arg=7, lineno=1224)
2024-07-15 06:11:41,959 DEBUG:stack []
2024-07-15 06:11:41,959 DEBUG:dispatch pc=298, inst=LOAD_CONST(arg=1, lineno=1224)
2024-07-15 06:11:41,959 DEBUG:stack ['$peaks296.50']
2024-07-15 06:11:41,959 DEBUG:dispatch pc=300, inst=BINARY_SUBSCR(arg=None, lineno=1224)
2024-07-15 06:11:41,959 DEBUG:stack ['$peaks296.50', '$const298.51']
2024-07-15 06:11:41,959 DEBUG:dispatch pc=310, inst=POP_JUMP_FORWARD_IF_FALSE(arg=6, lineno=1224)
2024-07-15 06:11:41,959 DEBUG:stack ['$300binary_subscr.52']
2024-07-15 06:11:41,959 DEBUG:end state. edges=[Edge(pc=312, stack=(), blockstack=(), npush=0), Edge(pc=324, stack=(), blockstack=(), npush=0)]
2024-07-15 06:11:41,959 DEBUG:pending: deque([State(pc_initial=312 nstack_initial=0), State(pc_initial=324 nstack_initial=0)])
2024-07-15 06:11:41,959 DEBUG:stack: []
2024-07-15 06:11:41,959 DEBUG:state.pc_initial: State(pc_initial=312 nstack_initial=0)
2024-07-15 06:11:41,959 DEBUG:dispatch pc=312, inst=LOAD_FAST(arg=6, lineno=1225)
2024-07-15 06:11:41,959 DEBUG:stack []
2024-07-15 06:11:41,959 DEBUG:dispatch pc=314, inst=LOAD_CONST(arg=3, lineno=1225)
2024-07-15 06:11:41,959 DEBUG:stack ['$wait312.0']
2024-07-15 06:11:41,959 DEBUG:dispatch pc=316, inst=BINARY_OP(arg=0, lineno=1225)
2024-07-15 06:11:41,959 DEBUG:stack ['$wait312.0', '$const314.1']
2024-07-15 06:11:41,959 DEBUG:dispatch pc=320, inst=STORE_FAST(arg=8, lineno=1225)
2024-07-15 06:11:41,959 DEBUG:stack ['$binop_add316.2']
2024-07-15 06:11:41,959 DEBUG:dispatch pc=322, inst=JUMP_FORWARD(arg=2, lineno=1225)
2024-07-15 06:11:41,959 DEBUG:stack []
2024-07-15 06:11:41,959 DEBUG:end state. edges=[Edge(pc=328, stack=(), blockstack=(), npush=0)]
2024-07-15 06:11:41,959 DEBUG:pending: deque([State(pc_initial=324 nstack_initial=0), State(pc_initial=328 nstack_initial=0)])
2024-07-15 06:11:41,960 DEBUG:stack: []
2024-07-15 06:11:41,960 DEBUG:state.pc_initial: State(pc_initial=324 nstack_initial=0)
2024-07-15 06:11:41,960 DEBUG:dispatch pc=324, inst=LOAD_CONST(arg=3, lineno=1227)
2024-07-15 06:11:41,960 DEBUG:stack []
2024-07-15 06:11:41,960 DEBUG:dispatch pc=326, inst=STORE_FAST(arg=8, lineno=1227)
2024-07-15 06:11:41,960 DEBUG:stack ['$const324.0']
2024-07-15 06:11:41,960 DEBUG:end state. edges=[Edge(pc=328, stack=(), blockstack=(), npush=0)]
2024-07-15 06:11:41,960 DEBUG:pending: deque([State(pc_initial=328 nstack_initial=0), State(pc_initial=328 nstack_initial=0)])
2024-07-15 06:11:41,960 DEBUG:stack: []
2024-07-15 06:11:41,960 DEBUG:state.pc_initial: State(pc_initial=328 nstack_initial=0)
2024-07-15 06:11:41,960 DEBUG:dispatch pc=328, inst=LOAD_FAST(arg=8, lineno=1229)
2024-07-15 06:11:41,960 DEBUG:stack []
2024-07-15 06:11:41,960 DEBUG:dispatch pc=330, inst=LOAD_FAST(arg=0, lineno=1229)
2024-07-15 06:11:41,960 DEBUG:stack ['$n328.0']
2024-07-15 06:11:41,960 DEBUG:dispatch pc=332, inst=LOAD_ATTR(arg=3, lineno=1229)
2024-07-15 06:11:41,960 DEBUG:stack ['$n328.0', '$x330.1']
2024-07-15 06:11:41,960 DEBUG:dispatch pc=342, inst=LOAD_CONST(arg=1, lineno=1229)
2024-07-15 06:11:41,960 DEBUG:stack ['$n328.0', '$332load_attr.2']
2024-07-15 06:11:41,960 DEBUG:dispatch pc=344, inst=BINARY_SUBSCR(arg=None, lineno=1229)
2024-07-15 06:11:41,960 DEBUG:stack ['$n328.0', '$332load_attr.2', '$const342.3']
2024-07-15 06:11:41,960 DEBUG:dispatch pc=354, inst=COMPARE_OP(arg=0, lineno=1229)
2024-07-15 06:11:41,960 DEBUG:stack ['$n328.0', '$344binary_subscr.4']
2024-07-15 06:11:41,960 DEBUG:dispatch pc=360, inst=POP_JUMP_FORWARD_IF_FALSE(arg=245, lineno=1229)
2024-07-15 06:11:41,960 DEBUG:stack ['$354compare_op.5']
2024-07-15 06:11:41,960 DEBUG:end state. edges=[Edge(pc=362, stack=(), blockstack=(), npush=0), Edge(pc=852, stack=(), blockstack=(), npush=0)]
2024-07-15 06:11:41,960 DEBUG:pending: deque([State(pc_initial=328 nstack_initial=0), State(pc_initial=362 nstack_initial=0), State(pc_initial=852 nstack_initial=0)])
2024-07-15 06:11:41,960 DEBUG:pending: deque([State(pc_initial=362 nstack_initial=0), State(pc_initial=852 nstack_initial=0)])
2024-07-15 06:11:41,960 DEBUG:stack: []
2024-07-15 06:11:41,960 DEBUG:state.pc_initial: State(pc_initial=362 nstack_initial=0)
2024-07-15 06:11:41,960 DEBUG:dispatch pc=362, inst=LOAD_GLOBAL(arg=1, lineno=1230)
2024-07-15 06:11:41,960 DEBUG:stack []
2024-07-15 06:11:41,960 DEBUG:dispatch pc=374, inst=LOAD_ATTR(arg=1, lineno=1230)
2024-07-15 06:11:41,960 DEBUG:stack ['$null$362.1', '$362load_global.0']
2024-07-15 06:11:41,961 DEBUG:dispatch pc=384, inst=LOAD_FAST(arg=0, lineno=1230)
2024-07-15 06:11:41,961 DEBUG:stack ['$null$362.1', '$374load_attr.2']
2024-07-15 06:11:41,961 DEBUG:dispatch pc=386, inst=LOAD_GLOBAL(arg=3, lineno=1230)
2024-07-15 06:11:41,961 DEBUG:stack ['$null$362.1', '$374load_attr.2', '$x384.3']
2024-07-15 06:11:41,961 DEBUG:dispatch pc=398, inst=LOAD_CONST(arg=1, lineno=1230)
2024-07-15 06:11:41,961 DEBUG:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$null$386.5', '$386load_global.4']
2024-07-15 06:11:41,961 DEBUG:dispatch pc=400, inst=LOAD_FAST(arg=8, lineno=1230)
2024-07-15 06:11:41,961 DEBUG:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$null$386.5', '$386load_global.4', '$const398.6']
2024-07-15 06:11:41,961 DEBUG:dispatch pc=402, inst=LOAD_FAST(arg=1, lineno=1230)
2024-07-15 06:11:41,962 DEBUG:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$null$386.5', '$386load_global.4', '$const398.6', '$n400.7']
2024-07-15 06:11:41,962 DEBUG:dispatch pc=404, inst=BINARY_OP(arg=10, lineno=1230)
2024-07-15 06:11:41,962 DEBUG:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$null$386.5', '$386load_global.4', '$const398.6', '$n400.7', '$pre_max402.8']
2024-07-15 06:11:41,963 DEBUG:dispatch pc=408, inst=PRECALL(arg=2, lineno=1230)
2024-07-15 06:11:41,963 DEBUG:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$null$386.5', '$386load_global.4', '$const398.6', '$binop_sub404.9']
2024-07-15 06:11:41,963 DEBUG:dispatch pc=412, inst=CALL(arg=2, lineno=1230)
2024-07-15 06:11:41,963 DEBUG:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$null$386.5', '$386load_global.4', '$const398.6', '$binop_sub404.9']
2024-07-15 06:11:41,963 DEBUG:dispatch pc=422, inst=LOAD_GLOBAL(arg=5, lineno=1230)
2024-07-15 06:11:41,963 DEBUG:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10']
2024-07-15 06:11:41,963 DEBUG:dispatch pc=434, inst=LOAD_FAST(arg=8, lineno=1230)
2024-07-15 06:11:41,963 DEBUG:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11']
2024-07-15 06:11:41,963 DEBUG:dispatch pc=436, inst=LOAD_FAST(arg=2, lineno=1230)
2024-07-15 06:11:41,963 DEBUG:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$n434.13']
2024-07-15 06:11:41,963 DEBUG:dispatch pc=438, inst=BINARY_OP(arg=0, lineno=1230)
2024-07-15 06:11:41,963 DEBUG:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$n434.13', '$post_max436.14']
2024-07-15 06:11:41,963 DEBUG:dispatch pc=442, inst=LOAD_FAST(arg=0, lineno=1230)
2024-07-15 06:11:41,963 DEBUG:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$binop_add438.15']
2024-07-15 06:11:41,963 DEBUG:dispatch pc=444, inst=LOAD_ATTR(arg=3, lineno=1230)
2024-07-15 06:11:41,963 DEBUG:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$binop_add438.15', '$x442.16']
2024-07-15 06:11:41,963 DEBUG:dispatch pc=454, inst=LOAD_CONST(arg=1, lineno=1230)
2024-07-15 06:11:41,963 DEBUG:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$binop_add438.15', '$444load_attr.17']
2024-07-15 06:11:41,963 DEBUG:dispatch pc=456, inst=BINARY_SUBSCR(arg=None, lineno=1230)
2024-07-15 06:11:41,963 DEBUG:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$binop_add438.15', '$444load_attr.17', '$const454.18']
2024-07-15 06:11:41,963 DEBUG:dispatch pc=466, inst=PRECALL(arg=2, lineno=1230)
2024-07-15 06:11:41,963 DEBUG:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$binop_add438.15', '$456binary_subscr.19']
2024-07-15 06:11:41,963 DEBUG:dispatch pc=470, inst=CALL(arg=2, lineno=1230)
2024-07-15 06:11:41,963 DEBUG:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$binop_add438.15', '$456binary_subscr.19']
2024-07-15 06:11:41,963 DEBUG:dispatch pc=480, inst=BUILD_SLICE(arg=2, lineno=1230)
2024-07-15 06:11:41,963 DEBUG:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$470call.20']
2024-07-15 06:11:41,963 DEBUG:dispatch pc=482, inst=BINARY_SUBSCR(arg=None, lineno=1230)
2024-07-15 06:11:41,963 DEBUG:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$480build_slice.22']
2024-07-15 06:11:41,963 DEBUG:dispatch pc=492, inst=PRECALL(arg=1, lineno=1230)
2024-07-15 06:11:41,963 DEBUG:stack ['$null$362.1', '$374load_attr.2', '$482binary_subscr.23']
2024-07-15 06:11:41,964 DEBUG:dispatch pc=496, inst=CALL(arg=1, lineno=1230)
2024-07-15 06:11:41,964 DEBUG:stack ['$null$362.1', '$374load_attr.2', '$482binary_subscr.23']
2024-07-15 06:11:41,964 DEBUG:dispatch pc=506, inst=STORE_FAST(arg=9, lineno=1230)
2024-07-15 06:11:41,964 DEBUG:stack ['$496call.24']
2024-07-15 06:11:41,964 DEBUG:dispatch pc=508, inst=LOAD_FAST(arg=0, lineno=1233)
2024-07-15 06:11:41,964 DEBUG:stack []
2024-07-15 06:11:41,964 DEBUG:dispatch pc=510, inst=LOAD_FAST(arg=8, lineno=1233)
2024-07-15 06:11:41,964 DEBUG:stack ['$x508.25']
2024-07-15 06:11:41,964 DEBUG:dispatch pc=512, inst=BINARY_SUBSCR(arg=None, lineno=1233)
2024-07-15 06:11:41,964 DEBUG:stack ['$x508.25', '$n510.26']
2024-07-15 06:11:41,964 DEBUG:dispatch pc=522, inst=LOAD_FAST(arg=9, lineno=1233)
2024-07-15 06:11:41,964 DEBUG:stack ['$512binary_subscr.27']
2024-07-15 06:11:41,964 DEBUG:dispatch pc=524, inst=COMPARE_OP(arg=2, lineno=1233)
2024-07-15 06:11:41,964 DEBUG:stack ['$512binary_subscr.27', '$maxn522.28']
2024-07-15 06:11:41,964 DEBUG:dispatch pc=530, inst=LOAD_FAST(arg=7, lineno=1233)
2024-07-15 06:11:41,964 DEBUG:stack ['$524compare_op.29']
2024-07-15 06:11:41,964 DEBUG:dispatch pc=532, inst=LOAD_FAST(arg=8, lineno=1233)
2024-07-15 06:11:41,964 DEBUG:stack ['$524compare_op.29', '$peaks530.30']
2024-07-15 06:11:41,964 DEBUG:dispatch pc=534, inst=STORE_SUBSCR(arg=None, lineno=1233)
2024-07-15 06:11:41,964 DEBUG:stack ['$524compare_op.29', '$peaks530.30', '$n532.31']
2024-07-15 06:11:41,964 DEBUG:dispatch pc=538, inst=LOAD_FAST(arg=7, lineno=1235)
2024-07-15 06:11:41,964 DEBUG:stack []
2024-07-15 06:11:41,964 DEBUG:dispatch pc=540, inst=LOAD_FAST(arg=8, lineno=1235)
2024-07-15 06:11:41,964 DEBUG:stack ['$peaks538.32']
2024-07-15 06:11:41,964 DEBUG:dispatch pc=542, inst=BINARY_SUBSCR(arg=None, lineno=1235)
2024-07-15 06:11:41,964 DEBUG:stack ['$peaks538.32', '$n540.33']
2024-07-15 06:11:41,964 DEBUG:dispatch pc=552, inst=POP_JUMP_FORWARD_IF_TRUE(arg=6, lineno=1235)
2024-07-15 06:11:41,964 DEBUG:stack ['$542binary_subscr.34']
2024-07-15 06:11:41,964 DEBUG:end state. edges=[Edge(pc=554, stack=(), blockstack=(), npush=0), Edge(pc=566, stack=(), blockstack=(), npush=0)]
2024-07-15 06:11:41,964 DEBUG:pending: deque([State(pc_initial=852 nstack_initial=0), State(pc_initial=554 nstack_initial=0), State(pc_initial=566 nstack_initial=0)])
2024-07-15 06:11:41,964 DEBUG:stack: []
2024-07-15 06:11:41,964 DEBUG:state.pc_initial: State(pc_initial=852 nstack_initial=0)
2024-07-15 06:11:41,965 DEBUG:dispatch pc=852, inst=LOAD_CONST(arg=2, lineno=1229)
2024-07-15 06:11:41,965 DEBUG:stack []
2024-07-15 06:11:41,965 DEBUG:dispatch pc=854, inst=RETURN_VALUE(arg=None, lineno=1229)
2024-07-15 06:11:41,965 DEBUG:stack ['$const852.0']
2024-07-15 06:11:41,965 DEBUG:end state. edges=[]
2024-07-15 06:11:41,965 DEBUG:pending: deque([State(pc_initial=554 nstack_initial=0), State(pc_initial=566 nstack_initial=0)])
2024-07-15 06:11:41,965 DEBUG:stack: []
2024-07-15 06:11:41,965 DEBUG:state.pc_initial: State(pc_initial=554 nstack_initial=0)
2024-07-15 06:11:41,965 DEBUG:dispatch pc=554, inst=LOAD_FAST(arg=8, lineno=1236)
2024-07-15 06:11:41,965 DEBUG:stack []
2024-07-15 06:11:41,965 DEBUG:dispatch pc=556, inst=LOAD_CONST(arg=3, lineno=1236)
2024-07-15 06:11:41,965 DEBUG:stack ['$n554.0']
2024-07-15 06:11:41,965 DEBUG:dispatch pc=558, inst=BINARY_OP(arg=13, lineno=1236)
2024-07-15 06:11:41,965 DEBUG:stack ['$n554.0', '$const556.1']
2024-07-15 06:11:41,965 DEBUG:dispatch pc=562, inst=STORE_FAST(arg=8, lineno=1236)
2024-07-15 06:11:41,965 DEBUG:stack ['$binop_iadd558.2']
2024-07-15 06:11:41,965 DEBUG:dispatch pc=564, inst=JUMP_BACKWARD(arg=119, lineno=1237)
2024-07-15 06:11:41,965 DEBUG:stack []
2024-07-15 06:11:41,965 DEBUG:end state. edges=[Edge(pc=328, stack=(), blockstack=(), npush=0)]
2024-07-15 06:11:41,965 DEBUG:pending: deque([State(pc_initial=566 nstack_initial=0), State(pc_initial=328 nstack_initial=0)])
2024-07-15 06:11:41,965 DEBUG:stack: []
2024-07-15 06:11:41,965 DEBUG:state.pc_initial: State(pc_initial=566 nstack_initial=0)
2024-07-15 06:11:41,965 DEBUG:dispatch pc=566, inst=LOAD_GLOBAL(arg=1, lineno=1239)
2024-07-15 06:11:41,965 DEBUG:stack []
2024-07-15 06:11:41,965 DEBUG:dispatch pc=578, inst=LOAD_ATTR(arg=4, lineno=1239)
2024-07-15 06:11:41,965 DEBUG:stack ['$null$566.1', '$566load_global.0']
2024-07-15 06:11:41,965 DEBUG:dispatch pc=588, inst=LOAD_FAST(arg=0, lineno=1239)
2024-07-15 06:11:41,965 DEBUG:stack ['$null$566.1', '$578load_attr.2']
2024-07-15 06:11:41,965 DEBUG:dispatch pc=590, inst=LOAD_GLOBAL(arg=3, lineno=1239)
2024-07-15 06:11:41,965 DEBUG:stack ['$null$566.1', '$578load_attr.2', '$x588.3']
2024-07-15 06:11:41,965 DEBUG:dispatch pc=602, inst=LOAD_CONST(arg=1, lineno=1239)
2024-07-15 06:11:41,965 DEBUG:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$null$590.5', '$590load_global.4']
2024-07-15 06:11:41,966 DEBUG:dispatch pc=604, inst=LOAD_FAST(arg=8, lineno=1239)
2024-07-15 06:11:41,966 DEBUG:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$null$590.5', '$590load_global.4', '$const602.6']
2024-07-15 06:11:41,966 DEBUG:dispatch pc=606, inst=LOAD_FAST(arg=3, lineno=1239)
2024-07-15 06:11:41,966 DEBUG:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$null$590.5', '$590load_global.4', '$const602.6', '$n604.7']
2024-07-15 06:11:41,967 DEBUG:dispatch pc=608, inst=BINARY_OP(arg=10, lineno=1239)
2024-07-15 06:11:41,967 DEBUG:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$null$590.5', '$590load_global.4', '$const602.6', '$n604.7', '$pre_avg606.8']
2024-07-15 06:11:41,967 DEBUG:dispatch pc=612, inst=PRECALL(arg=2, lineno=1239)
2024-07-15 06:11:41,967 DEBUG:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$null$590.5', '$590load_global.4', '$const602.6', '$binop_sub608.9']
2024-07-15 06:11:41,967 DEBUG:dispatch pc=616, inst=CALL(arg=2, lineno=1239)
2024-07-15 06:11:41,967 DEBUG:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$null$590.5', '$590load_global.4', '$const602.6', '$binop_sub608.9']
2024-07-15 06:11:41,967 DEBUG:dispatch pc=626, inst=LOAD_GLOBAL(arg=5, lineno=1239)
2024-07-15 06:11:41,967 DEBUG:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10']
2024-07-15 06:11:41,967 DEBUG:dispatch pc=638, inst=LOAD_FAST(arg=8, lineno=1239)
2024-07-15 06:11:41,967 DEBUG:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11']
2024-07-15 06:11:41,967 DEBUG:dispatch pc=640, inst=LOAD_FAST(arg=4, lineno=1239)
2024-07-15 06:11:41,967 DEBUG:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$n638.13']
2024-07-15 06:11:41,967 DEBUG:dispatch pc=642, inst=BINARY_OP(arg=0, lineno=1239)
2024-07-15 06:11:41,967 DEBUG:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$n638.13', '$post_avg640.14']
2024-07-15 06:11:41,967 DEBUG:dispatch pc=646, inst=LOAD_FAST(arg=0, lineno=1239)
2024-07-15 06:11:41,967 DEBUG:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$binop_add642.15']
2024-07-15 06:11:41,967 DEBUG:dispatch pc=648, inst=LOAD_ATTR(arg=3, lineno=1239)
2024-07-15 06:11:41,967 DEBUG:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$binop_add642.15', '$x646.16']
2024-07-15 06:11:41,967 DEBUG:dispatch pc=658, inst=LOAD_CONST(arg=1, lineno=1239)
2024-07-15 06:11:41,967 DEBUG:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$binop_add642.15', '$648load_attr.17']
2024-07-15 06:11:41,967 DEBUG:dispatch pc=660, inst=BINARY_SUBSCR(arg=None, lineno=1239)
2024-07-15 06:11:41,967 DEBUG:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$binop_add642.15', '$648load_attr.17', '$const658.18']
2024-07-15 06:11:41,967 DEBUG:dispatch pc=670, inst=PRECALL(arg=2, lineno=1239)
2024-07-15 06:11:41,967 DEBUG:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$binop_add642.15', '$660binary_subscr.19']
2024-07-15 06:11:41,967 DEBUG:dispatch pc=674, inst=CALL(arg=2, lineno=1239)
2024-07-15 06:11:41,967 DEBUG:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$binop_add642.15', '$660binary_subscr.19']
2024-07-15 06:11:41,967 DEBUG:dispatch pc=684, inst=BUILD_SLICE(arg=2, lineno=1239)
2024-07-15 06:11:41,967 DEBUG:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$674call.20']
2024-07-15 06:11:41,967 DEBUG:dispatch pc=686, inst=BINARY_SUBSCR(arg=None, lineno=1239)
2024-07-15 06:11:41,967 DEBUG:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$684build_slice.22']
2024-07-15 06:11:41,967 DEBUG:dispatch pc=696, inst=PRECALL(arg=1, lineno=1239)
2024-07-15 06:11:41,967 DEBUG:stack ['$null$566.1', '$578load_attr.2', '$686binary_subscr.23']
2024-07-15 06:11:41,967 DEBUG:dispatch pc=700, inst=CALL(arg=1, lineno=1239)
2024-07-15 06:11:41,967 DEBUG:stack ['$null$566.1', '$578load_attr.2', '$686binary_subscr.23']
2024-07-15 06:11:41,967 DEBUG:dispatch pc=710, inst=STORE_FAST(arg=10, lineno=1239)
2024-07-15 06:11:41,967 DEBUG:stack ['$700call.24']
2024-07-15 06:11:41,967 DEBUG:dispatch pc=712, inst=LOAD_FAST(arg=7, lineno=1240)
2024-07-15 06:11:41,967 DEBUG:stack []
2024-07-15 06:11:41,967 DEBUG:dispatch pc=714, inst=LOAD_FAST(arg=8, lineno=1240)
2024-07-15 06:11:41,968 DEBUG:stack ['$peaks712.25']
2024-07-15 06:11:41,968 DEBUG:dispatch pc=716, inst=COPY(arg=2, lineno=1240)
2024-07-15 06:11:41,968 DEBUG:stack ['$peaks712.25', '$n714.26']
2024-07-15 06:11:41,968 DEBUG:dispatch pc=718, inst=COPY(arg=2, lineno=1240)
2024-07-15 06:11:41,968 DEBUG:stack ['$peaks712.25', '$n714.26', '$peaks712.25']
2024-07-15 06:11:41,968 DEBUG:dispatch pc=720, inst=BINARY_SUBSCR(arg=None, lineno=1240)
2024-07-15 06:11:41,968 DEBUG:stack ['$peaks712.25', '$n714.26', '$peaks712.25', '$n714.26']
2024-07-15 06:11:41,968 DEBUG:dispatch pc=730, inst=LOAD_FAST(arg=0, lineno=1240)
2024-07-15 06:11:41,968 DEBUG:stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27']
2024-07-15 06:11:41,968 DEBUG:dispatch pc=732, inst=LOAD_FAST(arg=8, lineno=1240)
2024-07-15 06:11:41,968 DEBUG:stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27', '$x730.28']
2024-07-15 06:11:41,968 DEBUG:dispatch pc=734, inst=BINARY_SUBSCR(arg=None, lineno=1240)
2024-07-15 06:11:41,968 DEBUG:stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27', '$x730.28', '$n732.29']
2024-07-15 06:11:41,968 DEBUG:dispatch pc=744, inst=LOAD_FAST(arg=10, lineno=1240)
2024-07-15 06:11:41,968 DEBUG:stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27', '$734binary_subscr.30']
2024-07-15 06:11:41,968 DEBUG:dispatch pc=746, inst=LOAD_FAST(arg=5, lineno=1240)
2024-07-15 06:11:41,968 DEBUG:stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27', '$734binary_subscr.30', '$avgn744.31']
2024-07-15 06:11:41,968 DEBUG:dispatch pc=748, inst=BINARY_OP(arg=0, lineno=1240)
2024-07-15 06:11:41,968 DEBUG:stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27', '$734binary_subscr.30', '$avgn744.31', '$delta746.32']
2024-07-15 06:11:41,968 DEBUG:dispatch pc=752, inst=COMPARE_OP(arg=5, lineno=1240)
2024-07-15 06:11:41,968 DEBUG:stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27', '$734binary_subscr.30', '$binop_add748.33']
2024-07-15 06:11:41,968 DEBUG:dispatch pc=758, inst=BINARY_OP(arg=14, lineno=1240)
2024-07-15 06:11:41,968 DEBUG:stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27', '$752compare_op.34']
2024-07-15 06:11:41,968 DEBUG:dispatch pc=762, inst=SWAP(arg=3, lineno=1240)
2024-07-15 06:11:41,968 DEBUG:stack ['$peaks712.25', '$n714.26', '$binop_iand758.35']
2024-07-15 06:11:41,968 DEBUG:dispatch pc=764, inst=SWAP(arg=2, lineno=1240)
2024-07-15 06:11:41,968 DEBUG:stack ['$binop_iand758.35', '$n714.26', '$peaks712.25']
2024-07-15 06:11:41,968 DEBUG:dispatch pc=766, inst=STORE_SUBSCR(arg=None, lineno=1240)
2024-07-15 06:11:41,968 DEBUG:stack ['$binop_iand758.35', '$peaks712.25', '$n714.26']
2024-07-15 06:11:41,968 DEBUG:dispatch pc=770, inst=LOAD_FAST(arg=7, lineno=1242)
2024-07-15 06:11:41,968 DEBUG:stack []
2024-07-15 06:11:41,968 DEBUG:dispatch pc=772, inst=LOAD_FAST(arg=8, lineno=1242)
2024-07-15 06:11:41,968 DEBUG:stack ['$peaks770.36']
2024-07-15 06:11:41,968 DEBUG:dispatch pc=774, inst=BINARY_SUBSCR(arg=None, lineno=1242)
2024-07-15 06:11:41,969 DEBUG:stack ['$peaks770.36', '$n772.37']
2024-07-15 06:11:41,969 DEBUG:dispatch pc=784, inst=POP_JUMP_FORWARD_IF_TRUE(arg=6, lineno=1242)
2024-07-15 06:11:41,969 DEBUG:stack ['$774binary_subscr.38']
2024-07-15 06:11:41,969 DEBUG:end state. edges=[Edge(pc=786, stack=(), blockstack=(), npush=0), Edge(pc=798, stack=(), blockstack=(), npush=0)]
2024-07-15 06:11:41,969 DEBUG:pending: deque([State(pc_initial=328 nstack_initial=0), State(pc_initial=786 nstack_initial=0), State(pc_initial=798 nstack_initial=0)])
2024-07-15 06:11:41,969 DEBUG:pending: deque([State(pc_initial=786 nstack_initial=0), State(pc_initial=798 nstack_initial=0)])
2024-07-15 06:11:41,969 DEBUG:stack: []
2024-07-15 06:11:41,969 DEBUG:state.pc_initial: State(pc_initial=786 nstack_initial=0)
2024-07-15 06:11:41,969 DEBUG:dispatch pc=786, inst=LOAD_FAST(arg=8, lineno=1243)
2024-07-15 06:11:41,969 DEBUG:stack []
2024-07-15 06:11:41,969 DEBUG:dispatch pc=788, inst=LOAD_CONST(arg=3, lineno=1243)
2024-07-15 06:11:41,969 DEBUG:stack ['$n786.0']
2024-07-15 06:11:41,969 DEBUG:dispatch pc=790, inst=BINARY_OP(arg=13, lineno=1243)
2024-07-15 06:11:41,969 DEBUG:stack ['$n786.0', '$const788.1']
2024-07-15 06:11:41,969 DEBUG:dispatch pc=794, inst=STORE_FAST(arg=8, lineno=1243)
2024-07-15 06:11:41,969 DEBUG:stack ['$binop_iadd790.2']
2024-07-15 06:11:41,969 DEBUG:dispatch pc=796, inst=JUMP_BACKWARD(arg=235, lineno=1244)
2024-07-15 06:11:41,969 DEBUG:stack []
2024-07-15 06:11:41,969 DEBUG:end state. edges=[Edge(pc=328, stack=(), blockstack=(), npush=0)]
2024-07-15 06:11:41,969 DEBUG:pending: deque([State(pc_initial=798 nstack_initial=0), State(pc_initial=328 nstack_initial=0)])
2024-07-15 06:11:41,969 DEBUG:stack: []
2024-07-15 06:11:41,969 DEBUG:state.pc_initial: State(pc_initial=798 nstack_initial=0)
2024-07-15 06:11:41,969 DEBUG:dispatch pc=798, inst=LOAD_FAST(arg=8, lineno=1247)
2024-07-15 06:11:41,969 DEBUG:stack []
2024-07-15 06:11:41,969 DEBUG:dispatch pc=800, inst=LOAD_FAST(arg=6, lineno=1247)
2024-07-15 06:11:41,969 DEBUG:stack ['$n798.0']
2024-07-15 06:11:41,969 DEBUG:dispatch pc=802, inst=LOAD_CONST(arg=3, lineno=1247)
2024-07-15 06:11:41,969 DEBUG:stack ['$n798.0', '$wait800.1']
2024-07-15 06:11:41,969 DEBUG:dispatch pc=804, inst=BINARY_OP(arg=0, lineno=1247)
2024-07-15 06:11:41,969 DEBUG:stack ['$n798.0', '$wait800.1', '$const802.2']
2024-07-15 06:11:41,969 DEBUG:dispatch pc=808, inst=BINARY_OP(arg=13, lineno=1247)
2024-07-15 06:11:41,969 DEBUG:stack ['$n798.0', '$binop_add804.3']
2024-07-15 06:11:41,969 DEBUG:dispatch pc=812, inst=STORE_FAST(arg=8, lineno=1247)
2024-07-15 06:11:41,969 DEBUG:stack ['$binop_iadd808.4']
2024-07-15 06:11:41,970 DEBUG:dispatch pc=814, inst=LOAD_FAST(arg=8, lineno=1229)
2024-07-15 06:11:41,970 DEBUG:stack []
2024-07-15 06:11:41,970 DEBUG:dispatch pc=816, inst=LOAD_FAST(arg=0, lineno=1229)
2024-07-15 06:11:41,970 DEBUG:stack ['$n814.5']
2024-07-15 06:11:41,970 DEBUG:dispatch pc=818, inst=LOAD_ATTR(arg=3, lineno=1229)
2024-07-15 06:11:41,970 DEBUG:stack ['$n814.5', '$x816.6']
2024-07-15 06:11:41,970 DEBUG:dispatch pc=828, inst=LOAD_CONST(arg=1, lineno=1229)
2024-07-15 06:11:41,970 DEBUG:stack ['$n814.5', '$818load_attr.7']
2024-07-15 06:11:41,970 DEBUG:dispatch pc=830, inst=BINARY_SUBSCR(arg=None, lineno=1229)
2024-07-15 06:11:41,970 DEBUG:stack ['$n814.5', '$818load_attr.7', '$const828.8']
2024-07-15 06:11:41,970 DEBUG:dispatch pc=840, inst=COMPARE_OP(arg=0, lineno=1229)
2024-07-15 06:11:41,970 DEBUG:stack ['$n814.5', '$830binary_subscr.9']
2024-07-15 06:11:41,970 DEBUG:dispatch pc=846, inst=POP_JUMP_BACKWARD_IF_TRUE(arg=243, lineno=1229)
2024-07-15 06:11:41,970 DEBUG:stack ['$840compare_op.10']
2024-07-15 06:11:41,970 DEBUG:end state. edges=[Edge(pc=848, stack=(), blockstack=(), npush=0), Edge(pc=362, stack=(), blockstack=(), npush=0)]
2024-07-15 06:11:41,970 DEBUG:pending: deque([State(pc_initial=328 nstack_initial=0), State(pc_initial=848 nstack_initial=0), State(pc_initial=362 nstack_initial=0)])
2024-07-15 06:11:41,970 DEBUG:pending: deque([State(pc_initial=848 nstack_initial=0), State(pc_initial=362 nstack_initial=0)])
2024-07-15 06:11:41,970 DEBUG:stack: []
2024-07-15 06:11:41,970 DEBUG:state.pc_initial: State(pc_initial=848 nstack_initial=0)
2024-07-15 06:11:41,970 DEBUG:dispatch pc=848, inst=LOAD_CONST(arg=2, lineno=1229)
2024-07-15 06:11:41,970 DEBUG:stack []
2024-07-15 06:11:41,970 DEBUG:dispatch pc=850, inst=RETURN_VALUE(arg=None, lineno=1229)
2024-07-15 06:11:41,970 DEBUG:stack ['$const848.0']
2024-07-15 06:11:41,970 DEBUG:end state. edges=[]
2024-07-15 06:11:41,970 DEBUG:pending: deque([State(pc_initial=362 nstack_initial=0)])
2024-07-15 06:11:41,970 DEBUG:-------------------------Prune PHIs-------------------------
2024-07-15 06:11:41,970 DEBUG:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=312 nstack_initial=0): set(),
             State(pc_initial=324 nstack_initial=0): set(),
             State(pc_initial=328 nstack_initial=0): set(),
             State(pc_initial=362 nstack_initial=0): set(),
             State(pc_initial=554 nstack_initial=0): set(),
             State(pc_initial=566 nstack_initial=0): set(),
             State(pc_initial=786 nstack_initial=0): set(),
             State(pc_initial=798 nstack_initial=0): set(),
             State(pc_initial=848 nstack_initial=0): set(),
             State(pc_initial=852 nstack_initial=0): set()})
2024-07-15 06:11:41,971 DEBUG:defmap: {}
2024-07-15 06:11:41,971 DEBUG:phismap: defaultdict(<class 'set'>, {})
2024-07-15 06:11:41,971 DEBUG:changing phismap: defaultdict(<class 'set'>, {})
2024-07-15 06:11:41,971 DEBUG:keep phismap: {}
2024-07-15 06:11:41,972 DEBUG:new_out: defaultdict(<class 'dict'>, {})
2024-07-15 06:11:41,972 DEBUG:----------------------DONE Prune PHIs-----------------------
2024-07-15 06:11:41,972 DEBUG:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1'}), (8, {'index': '$const6.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'idx': 0, 'res': '$18load_global.3'}), (20, {}), (22, {}), (24, {}), (26, {}), (28, {}), (30, {'item': '$18load_global.3', 'res': '$30load_attr.5'}), (32, {}), (34, {}), (36, {}), (38, {}), (40, {'res': '$x40.6'}), (42, {'res': '$const42.7'}), (44, {'idx': 2, 'res': '$44load_global.8'}), (46, {}), (48, {}), (50, {}), (52, {}), (54, {}), (56, {'res': '$post_max56.10'}), (58, {'res': '$x58.11'}), (60, {'item': '$x58.11', 'res': '$60load_attr.12'}), (62, {}), (64, {}), (66, {}), (68, {}), (70, {'res': '$const70.13'}), (72, {'index': '$const70.13', 'target': '$60load_attr.12', 'res': '$72binary_subscr.14'}), (74, {}), (76, {}), (78, {}), (80, {}), (82, {}), (84, {}), (86, {'func': '$44load_global.8', 'args': ['$post_max56.10', '$72binary_subscr.14'], 'kw_names': None, 'res': '$86call.15'}), (88, {}), (90, {}), (92, {}), (94, {}), (96, {'start': '$const42.7', 'stop': '$86call.15', 'step': None, 'res': '$96build_slice.17', 'slicevar': '$96build_slice.16'}), (98, {'index': '$96build_slice.17', 'target': '$x40.6', 'res': '$98binary_subscr.18'}), (100, {}), (102, {}), (104, {}), (106, {}), (108, {}), (110, {}), (112, {'func': '$30load_attr.5', 'args': ['$98binary_subscr.18'], 'kw_names': None, 'res': '$112call.19'}), (114, {}), (116, {}), (118, {}), (120, {}), (122, {'lhs': '$8binary_subscr.2', 'rhs': '$112call.19', 'res': '$122compare_op.20'}), (124, {}), (126, {}), (128, {'res': '$peaks128.21'}), (130, {'res': '$const130.22'}), (132, {'target': '$peaks128.21', 'index': '$const130.22', 'value': '$122compare_op.20'}), (134, {}), (136, {'res': '$peaks136.23'}), (138, {'res': '$const138.24'}), (144, {'index': '$const138.24', 'target': '$peaks136.23', 'res': '$144binary_subscr.25'}), (146, {}), (148, {}), (150, {}), (152, {}), (154, {'res': '$x154.26'}), (156, {'res': '$const156.27'}), (158, {'index': '$const156.27', 'target': '$x154.26', 'res': '$158binary_subscr.28'}), (160, {}), (162, {}), (164, {}), (166, {}), (168, {'idx': 0, 'res': '$168load_global.29'}), (170, {}), (172, {}), (174, {}), (176, {}), (178, {}), (180, {'item': '$168load_global.29', 'res': '$180load_attr.31'}), (182, {}), (184, {}), (186, {}), (188, {}), (190, {'res': '$x190.32'}), (192, {'res': '$const192.33'}), (194, {'idx': 2, 'res': '$194load_global.34'}), (196, {}), (198, {}), (200, {}), (202, {}), (204, {}), (206, {'res': '$post_avg206.36'}), (208, {'res': '$x208.37'}), (210, {'item': '$x208.37', 'res': '$210load_attr.38'}), (212, {}), (214, {}), (216, {}), (218, {}), (220, {'res': '$const220.39'}), (222, {'index': '$const220.39', 'target': '$210load_attr.38', 'res': '$222binary_subscr.40'}), (224, {}), (226, {}), (228, {}), (230, {}), (232, {}), (234, {}), (236, {'func': '$194load_global.34', 'args': ['$post_avg206.36', '$222binary_subscr.40'], 'kw_names': None, 'res': '$236call.41'}), (238, {}), (240, {}), (242, {}), (244, {}), (246, {'start': '$const192.33', 'stop': '$236call.41', 'step': None, 'res': '$246build_slice.43', 'slicevar': '$246build_slice.42'}), (248, {'index': '$246build_slice.43', 'target': '$x190.32', 'res': '$248binary_subscr.44'}), (250, {}), (252, {}), (254, {}), (256, {}), (258, {}), (260, {}), (262, {'func': '$180load_attr.31', 'args': ['$248binary_subscr.44'], 'kw_names': None, 'res': '$262call.45'}), (264, {}), (266, {}), (268, {}), (270, {}), (272, {'res': '$delta272.46'}), (274, {'op': '+', 'lhs': '$262call.45', 'rhs': '$delta272.46', 'res': '$binop_add274.47'}), (276, {}), (278, {'lhs': '$158binary_subscr.28', 'rhs': '$binop_add274.47', 'res': '$278compare_op.48'}), (280, {}), (282, {}), (284, {'op': '&=', 'lhs': '$144binary_subscr.25', 'rhs': '$278compare_op.48', 'res': '$binop_iand284.49'}), (286, {}), (292, {'target': '$peaks136.23', 'index': '$const138.24', 'value': '$binop_iand284.49'}), (294, {}), (296, {'res': '$peaks296.50'}), (298, {'res': '$const298.51'}), (300, {'index': '$const298.51', 'target': '$peaks296.50', 'res': '$300binary_subscr.52'}), (302, {}), (304, {}), (306, {}), (308, {}), (310, {'pred': '$300binary_subscr.52'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={312: (), 324: ()})
2024-07-15 06:11:41,972 DEBUG:block_infos State(pc_initial=312 nstack_initial=0):
AdaptBlockInfo(insts=((312, {'res': '$wait312.0'}), (314, {'res': '$const314.1'}), (316, {'op': '+', 'lhs': '$wait312.0', 'rhs': '$const314.1', 'res': '$binop_add316.2'}), (318, {}), (320, {'value': '$binop_add316.2'}), (322, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={328: ()})
2024-07-15 06:11:41,972 DEBUG:block_infos State(pc_initial=324 nstack_initial=0):
AdaptBlockInfo(insts=((324, {'res': '$const324.0'}), (326, {'value': '$const324.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={328: ()})
2024-07-15 06:11:41,972 DEBUG:block_infos State(pc_initial=328 nstack_initial=0):
AdaptBlockInfo(insts=((328, {'res': '$n328.0'}), (330, {'res': '$x330.1'}), (332, {'item': '$x330.1', 'res': '$332load_attr.2'}), (334, {}), (336, {}), (338, {}), (340, {}), (342, {'res': '$const342.3'}), (344, {'index': '$const342.3', 'target': '$332load_attr.2', 'res': '$344binary_subscr.4'}), (346, {}), (348, {}), (350, {}), (352, {}), (354, {'lhs': '$n328.0', 'rhs': '$344binary_subscr.4', 'res': '$354compare_op.5'}), (356, {}), (358, {}), (360, {'pred': '$354compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={362: (), 852: ()})
2024-07-15 06:11:41,972 DEBUG:block_infos State(pc_initial=362 nstack_initial=0):
AdaptBlockInfo(insts=((362, {'idx': 0, 'res': '$362load_global.0'}), (364, {}), (366, {}), (368, {}), (370, {}), (372, {}), (374, {'item': '$362load_global.0', 'res': '$374load_attr.2'}), (376, {}), (378, {}), (380, {}), (382, {}), (384, {'res': '$x384.3'}), (386, {'idx': 1, 'res': '$386load_global.4'}), (388, {}), (390, {}), (392, {}), (394, {}), (396, {}), (398, {'res': '$const398.6'}), (400, {'res': '$n400.7'}), (402, {'res': '$pre_max402.8'}), (404, {'op': '-', 'lhs': '$n400.7', 'rhs': '$pre_max402.8', 'res': '$binop_sub404.9'}), (406, {}), (408, {}), (410, {}), (412, {'func': '$386load_global.4', 'args': ['$const398.6', '$binop_sub404.9'], 'kw_names': None, 'res': '$412call.10'}), (414, {}), (416, {}), (418, {}), (420, {}), (422, {'idx': 2, 'res': '$422load_global.11'}), (424, {}), (426, {}), (428, {}), (430, {}), (432, {}), (434, {'res': '$n434.13'}), (436, {'res': '$post_max436.14'}), (438, {'op': '+', 'lhs': '$n434.13', 'rhs': '$post_max436.14', 'res': '$binop_add438.15'}), (440, {}), (442, {'res': '$x442.16'}), (444, {'item': '$x442.16', 'res': '$444load_attr.17'}), (446, {}), (448, {}), (450, {}), (452, {}), (454, {'res': '$const454.18'}), (456, {'index': '$const454.18', 'target': '$444load_attr.17', 'res': '$456binary_subscr.19'}), (458, {}), (460, {}), (462, {}), (464, {}), (466, {}), (468, {}), (470, {'func': '$422load_global.11', 'args': ['$binop_add438.15', '$456binary_subscr.19'], 'kw_names': None, 'res': '$470call.20'}), (472, {}), (474, {}), (476, {}), (478, {}), (480, {'start': '$412call.10', 'stop': '$470call.20', 'step': None, 'res': '$480build_slice.22', 'slicevar': '$480build_slice.21'}), (482, {'index': '$480build_slice.22', 'target': '$x384.3', 'res': '$482binary_subscr.23'}), (484, {}), (486, {}), (488, {}), (490, {}), (492, {}), (494, {}), (496, {'func': '$374load_attr.2', 'args': ['$482binary_subscr.23'], 'kw_names': None, 'res': '$496call.24'}), (498, {}), (500, {}), (502, {}), (504, {}), (506, {'value': '$496call.24'}), (508, {'res': '$x508.25'}), (510, {'res': '$n510.26'}), (512, {'index': '$n510.26', 'target': '$x508.25', 'res': '$512binary_subscr.27'}), (514, {}), (516, {}), (518, {}), (520, {}), (522, {'res': '$maxn522.28'}), (524, {'lhs': '$512binary_subscr.27', 'rhs': '$maxn522.28', 'res': '$524compare_op.29'}), (526, {}), (528, {}), (530, {'res': '$peaks530.30'}), (532, {'res': '$n532.31'}), (534, {'target': '$peaks530.30', 'index': '$n532.31', 'value': '$524compare_op.29'}), (536, {}), (538, {'res': '$peaks538.32'}), (540, {'res': '$n540.33'}), (542, {'index': '$n540.33', 'target': '$peaks538.32', 'res': '$542binary_subscr.34'}), (544, {}), (546, {}), (548, {}), (550, {}), (552, {'pred': '$542binary_subscr.34'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={554: (), 566: ()})
2024-07-15 06:11:41,972 DEBUG:block_infos State(pc_initial=554 nstack_initial=0):
AdaptBlockInfo(insts=((554, {'res': '$n554.0'}), (556, {'res': '$const556.1'}), (558, {'op': '+=', 'lhs': '$n554.0', 'rhs': '$const556.1', 'res': '$binop_iadd558.2'}), (560, {}), (562, {'value': '$binop_iadd558.2'}), (564, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={328: ()})
2024-07-15 06:11:41,972 DEBUG:block_infos State(pc_initial=566 nstack_initial=0):
AdaptBlockInfo(insts=((566, {'idx': 0, 'res': '$566load_global.0'}), (568, {}), (570, {}), (572, {}), (574, {}), (576, {}), (578, {'item': '$566load_global.0', 'res': '$578load_attr.2'}), (580, {}), (582, {}), (584, {}), (586, {}), (588, {'res': '$x588.3'}), (590, {'idx': 1, 'res': '$590load_global.4'}), (592, {}), (594, {}), (596, {}), (598, {}), (600, {}), (602, {'res': '$const602.6'}), (604, {'res': '$n604.7'}), (606, {'res': '$pre_avg606.8'}), (608, {'op': '-', 'lhs': '$n604.7', 'rhs': '$pre_avg606.8', 'res': '$binop_sub608.9'}), (610, {}), (612, {}), (614, {}), (616, {'func': '$590load_global.4', 'args': ['$const602.6', '$binop_sub608.9'], 'kw_names': None, 'res': '$616call.10'}), (618, {}), (620, {}), (622, {}), (624, {}), (626, {'idx': 2, 'res': '$626load_global.11'}), (628, {}), (630, {}), (632, {}), (634, {}), (636, {}), (638, {'res': '$n638.13'}), (640, {'res': '$post_avg640.14'}), (642, {'op': '+', 'lhs': '$n638.13', 'rhs': '$post_avg640.14', 'res': '$binop_add642.15'}), (644, {}), (646, {'res': '$x646.16'}), (648, {'item': '$x646.16', 'res': '$648load_attr.17'}), (650, {}), (652, {}), (654, {}), (656, {}), (658, {'res': '$const658.18'}), (660, {'index': '$const658.18', 'target': '$648load_attr.17', 'res': '$660binary_subscr.19'}), (662, {}), (664, {}), (666, {}), (668, {}), (670, {}), (672, {}), (674, {'func': '$626load_global.11', 'args': ['$binop_add642.15', '$660binary_subscr.19'], 'kw_names': None, 'res': '$674call.20'}), (676, {}), (678, {}), (680, {}), (682, {}), (684, {'start': '$616call.10', 'stop': '$674call.20', 'step': None, 'res': '$684build_slice.22', 'slicevar': '$684build_slice.21'}), (686, {'index': '$684build_slice.22', 'target': '$x588.3', 'res': '$686binary_subscr.23'}), (688, {}), (690, {}), (692, {}), (694, {}), (696, {}), (698, {}), (700, {'func': '$578load_attr.2', 'args': ['$686binary_subscr.23'], 'kw_names': None, 'res': '$700call.24'}), (702, {}), (704, {}), (706, {}), (708, {}), (710, {'value': '$700call.24'}), (712, {'res': '$peaks712.25'}), (714, {'res': '$n714.26'}), (720, {'index': '$n714.26', 'target': '$peaks712.25', 'res': '$720binary_subscr.27'}), (722, {}), (724, {}), (726, {}), (728, {}), (730, {'res': '$x730.28'}), (732, {'res': '$n732.29'}), (734, {'index': '$n732.29', 'target': '$x730.28', 'res': '$734binary_subscr.30'}), (736, {}), (738, {}), (740, {}), (742, {}), (744, {'res': '$avgn744.31'}), (746, {'res': '$delta746.32'}), (748, {'op': '+', 'lhs': '$avgn744.31', 'rhs': '$delta746.32', 'res': '$binop_add748.33'}), (750, {}), (752, {'lhs': '$734binary_subscr.30', 'rhs': '$binop_add748.33', 'res': '$752compare_op.34'}), (754, {}), (756, {}), (758, {'op': '&=', 'lhs': '$720binary_subscr.27', 'rhs': '$752compare_op.34', 'res': '$binop_iand758.35'}), (760, {}), (766, {'target': '$peaks712.25', 'index': '$n714.26', 'value': '$binop_iand758.35'}), (768, {}), (770, {'res': '$peaks770.36'}), (772, {'res': '$n772.37'}), (774, {'index': '$n772.37', 'target': '$peaks770.36', 'res': '$774binary_subscr.38'}), (776, {}), (778, {}), (780, {}), (782, {}), (784, {'pred': '$774binary_subscr.38'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={786: (), 798: ()})
2024-07-15 06:11:41,972 DEBUG:block_infos State(pc_initial=786 nstack_initial=0):
AdaptBlockInfo(insts=((786, {'res': '$n786.0'}), (788, {'res': '$const788.1'}), (790, {'op': '+=', 'lhs': '$n786.0', 'rhs': '$const788.1', 'res': '$binop_iadd790.2'}), (792, {}), (794, {'value': '$binop_iadd790.2'}), (796, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={328: ()})
2024-07-15 06:11:41,972 DEBUG:block_infos State(pc_initial=798 nstack_initial=0):
AdaptBlockInfo(insts=((798, {'res': '$n798.0'}), (800, {'res': '$wait800.1'}), (802, {'res': '$const802.2'}), (804, {'op': '+', 'lhs': '$wait800.1', 'rhs': '$const802.2', 'res': '$binop_add804.3'}), (806, {}), (808, {'op': '+=', 'lhs': '$n798.0', 'rhs': '$binop_add804.3', 'res': '$binop_iadd808.4'}), (810, {}), (812, {'value': '$binop_iadd808.4'}), (814, {'res': '$n814.5'}), (816, {'res': '$x816.6'}), (818, {'item': '$x816.6', 'res': '$818load_attr.7'}), (820, {}), (822, {}), (824, {}), (826, {}), (828, {'res': '$const828.8'}), (830, {'index': '$const828.8', 'target': '$818load_attr.7', 'res': '$830binary_subscr.9'}), (832, {}), (834, {}), (836, {}), (838, {}), (840, {'lhs': '$n814.5', 'rhs': '$830binary_subscr.9', 'res': '$840compare_op.10'}), (842, {}), (844, {}), (846, {'pred': '$840compare_op.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={848: (), 362: ()})
2024-07-15 06:11:41,972 DEBUG:block_infos State(pc_initial=848 nstack_initial=0):
AdaptBlockInfo(insts=((848, {'res': '$const848.0'}), (850, {'retval': '$const848.0', 'castval': '$850return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-15 06:11:41,972 DEBUG:block_infos State(pc_initial=852 nstack_initial=0):
AdaptBlockInfo(insts=((852, {'res': '$const852.0'}), (854, {'retval': '$const852.0', 'castval': '$854return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-15 06:11:41,976 DEBUG:label 0:
    x = arg(0, name=x)                       ['x']
    pre_max = arg(1, name=pre_max)           ['pre_max']
    post_max = arg(2, name=post_max)         ['post_max']
    pre_avg = arg(3, name=pre_avg)           ['pre_avg']
    post_avg = arg(4, name=post_avg)         ['post_avg']
    delta = arg(5, name=delta)               ['delta']
    wait = arg(6, name=wait)                 ['wait']
    peaks = arg(7, name=peaks)               ['peaks']
    $const6.1 = const(int, 0)                ['$const6.1']
    $8binary_subscr.2 = getitem(value=x, index=$const6.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1', 'x']
    $18load_global.3 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$18load_global.3']
    $30load_attr.5 = getattr(value=$18load_global.3, attr=max) ['$18load_global.3', '$30load_attr.5']
    $const42.7 = const(NoneType, None)       ['$const42.7']
    $44load_global.8 = global(min: <built-in function min>) ['$44load_global.8']
    $60load_attr.12 = getattr(value=x, attr=shape) ['$60load_attr.12', 'x']
    $const70.13 = const(int, 0)              ['$const70.13']
    $72binary_subscr.14 = getitem(value=$60load_attr.12, index=$const70.13, fn=<built-in function getitem>) ['$60load_attr.12', '$72binary_subscr.14', '$const70.13']
    $86call.15 = call $44load_global.8(post_max, $72binary_subscr.14, func=$44load_global.8, args=[Var(post_max, utils.py:1209), Var($72binary_subscr.14, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None) ['$44load_global.8', '$72binary_subscr.14', '$86call.15', 'post_max']
    $96build_slice.16 = global(slice: <class 'slice'>) ['$96build_slice.16']
    $96build_slice.17 = call $96build_slice.16($const42.7, $86call.15, func=$96build_slice.16, args=(Var($const42.7, utils.py:1221), Var($86call.15, utils.py:1221)), kws=(), vararg=None, varkwarg=None, target=None) ['$86call.15', '$96build_slice.16', '$96build_slice.17', '$const42.7']
    $98binary_subscr.18 = getitem(value=x, index=$96build_slice.17, fn=<built-in function getitem>) ['$96build_slice.17', '$98binary_subscr.18', 'x']
    $112call.19 = call $30load_attr.5($98binary_subscr.18, func=$30load_attr.5, args=[Var($98binary_subscr.18, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None) ['$112call.19', '$30load_attr.5', '$98binary_subscr.18']
    $122compare_op.20 = $8binary_subscr.2 >= $112call.19 ['$112call.19', '$122compare_op.20', '$8binary_subscr.2']
    $const130.22 = const(int, 0)             ['$const130.22']
    peaks[$const130.22] = $122compare_op.20  ['$122compare_op.20', '$const130.22', 'peaks']
    $const138.24 = const(int, 0)             ['$const138.24']
    $144binary_subscr.25 = getitem(value=peaks, index=$const138.24, fn=<built-in function getitem>) ['$144binary_subscr.25', '$const138.24', 'peaks']
    $const156.27 = const(int, 0)             ['$const156.27']
    $158binary_subscr.28 = getitem(value=x, index=$const156.27, fn=<built-in function getitem>) ['$158binary_subscr.28', '$const156.27', 'x']
    $168load_global.29 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$168load_global.29']
    $180load_attr.31 = getattr(value=$168load_global.29, attr=mean) ['$168load_global.29', '$180load_attr.31']
    $const192.33 = const(NoneType, None)     ['$const192.33']
    $194load_global.34 = global(min: <built-in function min>) ['$194load_global.34']
    $210load_attr.38 = getattr(value=x, attr=shape) ['$210load_attr.38', 'x']
    $const220.39 = const(int, 0)             ['$const220.39']
    $222binary_subscr.40 = getitem(value=$210load_attr.38, index=$const220.39, fn=<built-in function getitem>) ['$210load_attr.38', '$222binary_subscr.40', '$const220.39']
    $236call.41 = call $194load_global.34(post_avg, $222binary_subscr.40, func=$194load_global.34, args=[Var(post_avg, utils.py:1209), Var($222binary_subscr.40, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None) ['$194load_global.34', '$222binary_subscr.40', '$236call.41', 'post_avg']
    $246build_slice.42 = global(slice: <class 'slice'>) ['$246build_slice.42']
    $246build_slice.43 = call $246build_slice.42($const192.33, $236call.41, func=$246build_slice.42, args=(Var($const192.33, utils.py:1222), Var($236call.41, utils.py:1222)), kws=(), vararg=None, varkwarg=None, target=None) ['$236call.41', '$246build_slice.42', '$246build_slice.43', '$const192.33']
    $248binary_subscr.44 = getitem(value=x, index=$246build_slice.43, fn=<built-in function getitem>) ['$246build_slice.43', '$248binary_subscr.44', 'x']
    $262call.45 = call $180load_attr.31($248binary_subscr.44, func=$180load_attr.31, args=[Var($248binary_subscr.44, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None) ['$180load_attr.31', '$248binary_subscr.44', '$262call.45']
    $binop_add274.47 = $262call.45 + delta   ['$262call.45', '$binop_add274.47', 'delta']
    $278compare_op.48 = $158binary_subscr.28 >= $binop_add274.47 ['$158binary_subscr.28', '$278compare_op.48', '$binop_add274.47']
    $binop_iand284.49 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$144binary_subscr.25, rhs=$278compare_op.48, static_lhs=Undefined, static_rhs=Undefined) ['$144binary_subscr.25', '$278compare_op.48', '$binop_iand284.49']
    peaks[$const138.24] = $binop_iand284.49  ['$binop_iand284.49', '$const138.24', 'peaks']
    $const298.51 = const(int, 0)             ['$const298.51']
    $300binary_subscr.52 = getitem(value=peaks, index=$const298.51, fn=<built-in function getitem>) ['$300binary_subscr.52', '$const298.51', 'peaks']
    bool310 = global(bool: <class 'bool'>)   ['bool310']
    $310pred = call bool310($300binary_subscr.52, func=bool310, args=(Var($300binary_subscr.52, utils.py:1224),), kws=(), vararg=None, varkwarg=None, target=None) ['$300binary_subscr.52', '$310pred', 'bool310']
    branch $310pred, 312, 324                ['$310pred']
label 312:
    $const314.1 = const(int, 1)              ['$const314.1']
    n = wait + $const314.1                   ['$const314.1', 'n', 'wait']
    jump 328                                 []
label 324:
    n = const(int, 1)                        ['n']
    jump 328                                 []
label 328:
    $332load_attr.2 = getattr(value=x, attr=shape) ['$332load_attr.2', 'x']
    $const342.3 = const(int, 0)              ['$const342.3']
    $344binary_subscr.4 = getitem(value=$332load_attr.2, index=$const342.3, fn=<built-in function getitem>) ['$332load_attr.2', '$344binary_subscr.4', '$const342.3']
    $354compare_op.5 = n < $344binary_subscr.4 ['$344binary_subscr.4', '$354compare_op.5', 'n']
    bool360 = global(bool: <class 'bool'>)   ['bool360']
    $360pred = call bool360($354compare_op.5, func=bool360, args=(Var($354compare_op.5, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None) ['$354compare_op.5', '$360pred', 'bool360']
    branch $360pred, 362, 852                ['$360pred']
label 362:
    $362load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$362load_global.0']
    $374load_attr.2 = getattr(value=$362load_global.0, attr=max) ['$362load_global.0', '$374load_attr.2']
    $386load_global.4 = global(max: <built-in function max>) ['$386load_global.4']
    $const398.6 = const(int, 0)              ['$const398.6']
    $binop_sub404.9 = n - pre_max            ['$binop_sub404.9', 'n', 'pre_max']
    $412call.10 = call $386load_global.4($const398.6, $binop_sub404.9, func=$386load_global.4, args=[Var($const398.6, utils.py:1230), Var($binop_sub404.9, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None) ['$386load_global.4', '$412call.10', '$binop_sub404.9', '$const398.6']
    $422load_global.11 = global(min: <built-in function min>) ['$422load_global.11']
    $binop_add438.15 = n + post_max          ['$binop_add438.15', 'n', 'post_max']
    $444load_attr.17 = getattr(value=x, attr=shape) ['$444load_attr.17', 'x']
    $const454.18 = const(int, 0)             ['$const454.18']
    $456binary_subscr.19 = getitem(value=$444load_attr.17, index=$const454.18, fn=<built-in function getitem>) ['$444load_attr.17', '$456binary_subscr.19', '$const454.18']
    $470call.20 = call $422load_global.11($binop_add438.15, $456binary_subscr.19, func=$422load_global.11, args=[Var($binop_add438.15, utils.py:1230), Var($456binary_subscr.19, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None) ['$422load_global.11', '$456binary_subscr.19', '$470call.20', '$binop_add438.15']
    $480build_slice.21 = global(slice: <class 'slice'>) ['$480build_slice.21']
    $480build_slice.22 = call $480build_slice.21($412call.10, $470call.20, func=$480build_slice.21, args=(Var($412call.10, utils.py:1230), Var($470call.20, utils.py:1230)), kws=(), vararg=None, varkwarg=None, target=None) ['$412call.10', '$470call.20', '$480build_slice.21', '$480build_slice.22']
    $482binary_subscr.23 = getitem(value=x, index=$480build_slice.22, fn=<built-in function getitem>) ['$480build_slice.22', '$482binary_subscr.23', 'x']
    maxn = call $374load_attr.2($482binary_subscr.23, func=$374load_attr.2, args=[Var($482binary_subscr.23, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None) ['$374load_attr.2', '$482binary_subscr.23', 'maxn']
    $512binary_subscr.27 = getitem(value=x, index=n, fn=<built-in function getitem>) ['$512binary_subscr.27', 'n', 'x']
    $524compare_op.29 = $512binary_subscr.27 == maxn ['$512binary_subscr.27', '$524compare_op.29', 'maxn']
    peaks[n] = $524compare_op.29             ['$524compare_op.29', 'n', 'peaks']
    $542binary_subscr.34 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$542binary_subscr.34', 'n', 'peaks']
    bool552 = global(bool: <class 'bool'>)   ['bool552']
    $552pred = call bool552($542binary_subscr.34, func=bool552, args=(Var($542binary_subscr.34, utils.py:1235),), kws=(), vararg=None, varkwarg=None, target=None) ['$542binary_subscr.34', '$552pred', 'bool552']
    branch $552pred, 566, 554                ['$552pred']
label 554:
    $const556.1 = const(int, 1)              ['$const556.1']
    $binop_iadd558.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const556.1, static_lhs=Undefined, static_rhs=Undefined) ['$binop_iadd558.2', '$const556.1', 'n']
    n = $binop_iadd558.2                     ['$binop_iadd558.2', 'n']
    jump 328                                 []
label 566:
    $566load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$566load_global.0']
    $578load_attr.2 = getattr(value=$566load_global.0, attr=mean) ['$566load_global.0', '$578load_attr.2']
    $590load_global.4 = global(max: <built-in function max>) ['$590load_global.4']
    $const602.6 = const(int, 0)              ['$const602.6']
    $binop_sub608.9 = n - pre_avg            ['$binop_sub608.9', 'n', 'pre_avg']
    $616call.10 = call $590load_global.4($const602.6, $binop_sub608.9, func=$590load_global.4, args=[Var($const602.6, utils.py:1239), Var($binop_sub608.9, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None) ['$590load_global.4', '$616call.10', '$binop_sub608.9', '$const602.6']
    $626load_global.11 = global(min: <built-in function min>) ['$626load_global.11']
    $binop_add642.15 = n + post_avg          ['$binop_add642.15', 'n', 'post_avg']
    $648load_attr.17 = getattr(value=x, attr=shape) ['$648load_attr.17', 'x']
    $const658.18 = const(int, 0)             ['$const658.18']
    $660binary_subscr.19 = getitem(value=$648load_attr.17, index=$const658.18, fn=<built-in function getitem>) ['$648load_attr.17', '$660binary_subscr.19', '$const658.18']
    $674call.20 = call $626load_global.11($binop_add642.15, $660binary_subscr.19, func=$626load_global.11, args=[Var($binop_add642.15, utils.py:1239), Var($660binary_subscr.19, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None) ['$626load_global.11', '$660binary_subscr.19', '$674call.20', '$binop_add642.15']
    $684build_slice.21 = global(slice: <class 'slice'>) ['$684build_slice.21']
    $684build_slice.22 = call $684build_slice.21($616call.10, $674call.20, func=$684build_slice.21, args=(Var($616call.10, utils.py:1239), Var($674call.20, utils.py:1239)), kws=(), vararg=None, varkwarg=None, target=None) ['$616call.10', '$674call.20', '$684build_slice.21', '$684build_slice.22']
    $686binary_subscr.23 = getitem(value=x, index=$684build_slice.22, fn=<built-in function getitem>) ['$684build_slice.22', '$686binary_subscr.23', 'x']
    avgn = call $578load_attr.2($686binary_subscr.23, func=$578load_attr.2, args=[Var($686binary_subscr.23, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None) ['$578load_attr.2', '$686binary_subscr.23', 'avgn']
    $720binary_subscr.27 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$720binary_subscr.27', 'n', 'peaks']
    $734binary_subscr.30 = getitem(value=x, index=n, fn=<built-in function getitem>) ['$734binary_subscr.30', 'n', 'x']
    $binop_add748.33 = avgn + delta          ['$binop_add748.33', 'avgn', 'delta']
    $752compare_op.34 = $734binary_subscr.30 >= $binop_add748.33 ['$734binary_subscr.30', '$752compare_op.34', '$binop_add748.33']
    $binop_iand758.35 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$720binary_subscr.27, rhs=$752compare_op.34, static_lhs=Undefined, static_rhs=Undefined) ['$720binary_subscr.27', '$752compare_op.34', '$binop_iand758.35']
    peaks[n] = $binop_iand758.35             ['$binop_iand758.35', 'n', 'peaks']
    $774binary_subscr.38 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$774binary_subscr.38', 'n', 'peaks']
    bool784 = global(bool: <class 'bool'>)   ['bool784']
    $784pred = call bool784($774binary_subscr.38, func=bool784, args=(Var($774binary_subscr.38, utils.py:1242),), kws=(), vararg=None, varkwarg=None, target=None) ['$774binary_subscr.38', '$784pred', 'bool784']
    branch $784pred, 798, 786                ['$784pred']
label 786:
    $const788.1 = const(int, 1)              ['$const788.1']
    $binop_iadd790.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const788.1, static_lhs=Undefined, static_rhs=Undefined) ['$binop_iadd790.2', '$const788.1', 'n']
    n = $binop_iadd790.2                     ['$binop_iadd790.2', 'n']
    jump 328                                 []
label 798:
    $const802.2 = const(int, 1)              ['$const802.2']
    $binop_add804.3 = wait + $const802.2     ['$binop_add804.3', '$const802.2', 'wait']
    $binop_iadd808.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$binop_add804.3, static_lhs=Undefined, static_rhs=Undefined) ['$binop_add804.3', '$binop_iadd808.4', 'n']
    n = $binop_iadd808.4                     ['$binop_iadd808.4', 'n']
    $818load_attr.7 = getattr(value=x, attr=shape) ['$818load_attr.7', 'x']
    $const828.8 = const(int, 0)              ['$const828.8']
    $830binary_subscr.9 = getitem(value=$818load_attr.7, index=$const828.8, fn=<built-in function getitem>) ['$818load_attr.7', '$830binary_subscr.9', '$const828.8']
    $840compare_op.10 = n < $830binary_subscr.9 ['$830binary_subscr.9', '$840compare_op.10', 'n']
    bool846 = global(bool: <class 'bool'>)   ['bool846']
    $846pred = call bool846($840compare_op.10, func=bool846, args=(Var($840compare_op.10, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None) ['$840compare_op.10', '$846pred', 'bool846']
    branch $846pred, 362, 848                ['$846pred']
label 848:
    $const848.0 = const(NoneType, None)      ['$const848.0']
    $850return_value.1 = cast(value=$const848.0) ['$850return_value.1', '$const848.0']
    return $850return_value.1                ['$850return_value.1']
label 852:
    $const852.0 = const(NoneType, None)      ['$const852.0']
    $854return_value.1 = cast(value=$const852.0) ['$854return_value.1', '$const852.0']
    return $854return_value.1                ['$854return_value.1']

2024-07-15 06:11:42,016 DEBUG:==== SSA block analysis pass on 0
2024-07-15 06:11:42,016 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B697F7D0>
2024-07-15 06:11:42,016 DEBUG:on stmt: x = arg(0, name=x)
2024-07-15 06:11:42,016 DEBUG:on stmt: pre_max = arg(1, name=pre_max)
2024-07-15 06:11:42,016 DEBUG:on stmt: post_max = arg(2, name=post_max)
2024-07-15 06:11:42,016 DEBUG:on stmt: pre_avg = arg(3, name=pre_avg)
2024-07-15 06:11:42,016 DEBUG:on stmt: post_avg = arg(4, name=post_avg)
2024-07-15 06:11:42,016 DEBUG:on stmt: delta = arg(5, name=delta)
2024-07-15 06:11:42,016 DEBUG:on stmt: wait = arg(6, name=wait)
2024-07-15 06:11:42,016 DEBUG:on stmt: peaks = arg(7, name=peaks)
2024-07-15 06:11:42,016 DEBUG:on stmt: $const6.1 = const(int, 0)
2024-07-15 06:11:42,016 DEBUG:on stmt: $8binary_subscr.2 = static_getitem(value=x, index=0, index_var=$const6.1, fn=<built-in function getitem>)
2024-07-15 06:11:42,016 DEBUG:on stmt: $18load_global.3 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:42,016 DEBUG:on stmt: $30load_attr.5 = getattr(value=$18load_global.3, attr=max)
2024-07-15 06:11:42,016 DEBUG:on stmt: $const42.7 = const(NoneType, None)
2024-07-15 06:11:42,016 DEBUG:on stmt: $44load_global.8 = global(min: <built-in function min>)
2024-07-15 06:11:42,016 DEBUG:on stmt: $60load_attr.12 = getattr(value=x, attr=shape)
2024-07-15 06:11:42,016 DEBUG:on stmt: $const70.13 = const(int, 0)
2024-07-15 06:11:42,016 DEBUG:on stmt: $72binary_subscr.14 = static_getitem(value=$60load_attr.12, index=0, index_var=$const70.13, fn=<built-in function getitem>)
2024-07-15 06:11:42,016 DEBUG:on stmt: $86call.15 = call $44load_global.8(post_max, $72binary_subscr.14, func=$44load_global.8, args=[Var(post_max, utils.py:1209), Var($72binary_subscr.14, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,017 DEBUG:on stmt: $96build_slice.16 = global(slice: <class 'slice'>)
2024-07-15 06:11:42,017 DEBUG:on stmt: $96build_slice.17 = call $96build_slice.16($const42.7, $86call.15, func=$96build_slice.16, args=(Var($const42.7, utils.py:1221), Var($86call.15, utils.py:1221)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,017 DEBUG:on stmt: $98binary_subscr.18 = getitem(value=x, index=$96build_slice.17, fn=<built-in function getitem>)
2024-07-15 06:11:42,017 DEBUG:on stmt: $112call.19 = call $30load_attr.5($98binary_subscr.18, func=$30load_attr.5, args=[Var($98binary_subscr.18, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,017 DEBUG:on stmt: $122compare_op.20 = $8binary_subscr.2 >= $112call.19
2024-07-15 06:11:42,017 DEBUG:on stmt: $const130.22 = const(int, 0)
2024-07-15 06:11:42,017 DEBUG:on stmt: peaks[0] = $122compare_op.20
2024-07-15 06:11:42,017 DEBUG:on stmt: $const138.24 = const(int, 0)
2024-07-15 06:11:42,017 DEBUG:on stmt: $144binary_subscr.25 = static_getitem(value=peaks, index=0, index_var=$const138.24, fn=<built-in function getitem>)
2024-07-15 06:11:42,017 DEBUG:on stmt: $const156.27 = const(int, 0)
2024-07-15 06:11:42,017 DEBUG:on stmt: $158binary_subscr.28 = static_getitem(value=x, index=0, index_var=$const156.27, fn=<built-in function getitem>)
2024-07-15 06:11:42,017 DEBUG:on stmt: $168load_global.29 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:42,017 DEBUG:on stmt: $180load_attr.31 = getattr(value=$168load_global.29, attr=mean)
2024-07-15 06:11:42,017 DEBUG:on stmt: $const192.33 = const(NoneType, None)
2024-07-15 06:11:42,017 DEBUG:on stmt: $194load_global.34 = global(min: <built-in function min>)
2024-07-15 06:11:42,017 DEBUG:on stmt: $210load_attr.38 = getattr(value=x, attr=shape)
2024-07-15 06:11:42,017 DEBUG:on stmt: $const220.39 = const(int, 0)
2024-07-15 06:11:42,017 DEBUG:on stmt: $222binary_subscr.40 = static_getitem(value=$210load_attr.38, index=0, index_var=$const220.39, fn=<built-in function getitem>)
2024-07-15 06:11:42,017 DEBUG:on stmt: $236call.41 = call $194load_global.34(post_avg, $222binary_subscr.40, func=$194load_global.34, args=[Var(post_avg, utils.py:1209), Var($222binary_subscr.40, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,017 DEBUG:on stmt: $246build_slice.42 = global(slice: <class 'slice'>)
2024-07-15 06:11:42,017 DEBUG:on stmt: $246build_slice.43 = call $246build_slice.42($const192.33, $236call.41, func=$246build_slice.42, args=(Var($const192.33, utils.py:1222), Var($236call.41, utils.py:1222)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,017 DEBUG:on stmt: $248binary_subscr.44 = getitem(value=x, index=$246build_slice.43, fn=<built-in function getitem>)
2024-07-15 06:11:42,017 DEBUG:on stmt: $262call.45 = call $180load_attr.31($248binary_subscr.44, func=$180load_attr.31, args=[Var($248binary_subscr.44, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,017 DEBUG:on stmt: $binop_add274.47 = $262call.45 + delta
2024-07-15 06:11:42,017 DEBUG:on stmt: $278compare_op.48 = $158binary_subscr.28 >= $binop_add274.47
2024-07-15 06:11:42,017 DEBUG:on stmt: $binop_iand284.49 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$144binary_subscr.25, rhs=$278compare_op.48, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:42,018 DEBUG:on stmt: peaks[0] = $binop_iand284.49
2024-07-15 06:11:42,018 DEBUG:on stmt: $const298.51 = const(int, 0)
2024-07-15 06:11:42,018 DEBUG:on stmt: $300binary_subscr.52 = static_getitem(value=peaks, index=0, index_var=$const298.51, fn=<built-in function getitem>)
2024-07-15 06:11:42,018 DEBUG:on stmt: bool310 = global(bool: <class 'bool'>)
2024-07-15 06:11:42,018 DEBUG:on stmt: $310pred = call bool310($300binary_subscr.52, func=bool310, args=(Var($300binary_subscr.52, utils.py:1224),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,018 DEBUG:on stmt: branch $310pred, 312, 324
2024-07-15 06:11:42,018 DEBUG:==== SSA block analysis pass on 312
2024-07-15 06:11:42,018 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B697F7D0>
2024-07-15 06:11:42,018 DEBUG:on stmt: $const314.1 = const(int, 1)
2024-07-15 06:11:42,018 DEBUG:on stmt: n = wait + $const314.1
2024-07-15 06:11:42,018 DEBUG:on stmt: jump 328
2024-07-15 06:11:42,018 DEBUG:==== SSA block analysis pass on 324
2024-07-15 06:11:42,018 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B697F7D0>
2024-07-15 06:11:42,018 DEBUG:on stmt: n = const(int, 1)
2024-07-15 06:11:42,018 DEBUG:on stmt: jump 328
2024-07-15 06:11:42,018 DEBUG:==== SSA block analysis pass on 328
2024-07-15 06:11:42,018 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B697F7D0>
2024-07-15 06:11:42,018 DEBUG:on stmt: $332load_attr.2 = getattr(value=x, attr=shape)
2024-07-15 06:11:42,018 DEBUG:on stmt: $const342.3 = const(int, 0)
2024-07-15 06:11:42,018 DEBUG:on stmt: $344binary_subscr.4 = static_getitem(value=$332load_attr.2, index=0, index_var=$const342.3, fn=<built-in function getitem>)
2024-07-15 06:11:42,018 DEBUG:on stmt: $354compare_op.5 = n < $344binary_subscr.4
2024-07-15 06:11:42,018 DEBUG:on stmt: bool360 = global(bool: <class 'bool'>)
2024-07-15 06:11:42,018 DEBUG:on stmt: $360pred = call bool360($354compare_op.5, func=bool360, args=(Var($354compare_op.5, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,018 DEBUG:on stmt: branch $360pred, 362, 852
2024-07-15 06:11:42,018 DEBUG:==== SSA block analysis pass on 362
2024-07-15 06:11:42,018 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B697F7D0>
2024-07-15 06:11:42,018 DEBUG:on stmt: $362load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:42,018 DEBUG:on stmt: $374load_attr.2 = getattr(value=$362load_global.0, attr=max)
2024-07-15 06:11:42,018 DEBUG:on stmt: $386load_global.4 = global(max: <built-in function max>)
2024-07-15 06:11:42,018 DEBUG:on stmt: $const398.6 = const(int, 0)
2024-07-15 06:11:42,018 DEBUG:on stmt: $binop_sub404.9 = n - pre_max
2024-07-15 06:11:42,018 DEBUG:on stmt: $412call.10 = call $386load_global.4($const398.6, $binop_sub404.9, func=$386load_global.4, args=[Var($const398.6, utils.py:1230), Var($binop_sub404.9, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,019 DEBUG:on stmt: $422load_global.11 = global(min: <built-in function min>)
2024-07-15 06:11:42,019 DEBUG:on stmt: $binop_add438.15 = n + post_max
2024-07-15 06:11:42,019 DEBUG:on stmt: $444load_attr.17 = getattr(value=x, attr=shape)
2024-07-15 06:11:42,019 DEBUG:on stmt: $const454.18 = const(int, 0)
2024-07-15 06:11:42,019 DEBUG:on stmt: $456binary_subscr.19 = static_getitem(value=$444load_attr.17, index=0, index_var=$const454.18, fn=<built-in function getitem>)
2024-07-15 06:11:42,019 DEBUG:on stmt: $470call.20 = call $422load_global.11($binop_add438.15, $456binary_subscr.19, func=$422load_global.11, args=[Var($binop_add438.15, utils.py:1230), Var($456binary_subscr.19, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,019 DEBUG:on stmt: $480build_slice.21 = global(slice: <class 'slice'>)
2024-07-15 06:11:42,019 DEBUG:on stmt: $480build_slice.22 = call $480build_slice.21($412call.10, $470call.20, func=$480build_slice.21, args=(Var($412call.10, utils.py:1230), Var($470call.20, utils.py:1230)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,019 DEBUG:on stmt: $482binary_subscr.23 = getitem(value=x, index=$480build_slice.22, fn=<built-in function getitem>)
2024-07-15 06:11:42,019 DEBUG:on stmt: maxn = call $374load_attr.2($482binary_subscr.23, func=$374load_attr.2, args=[Var($482binary_subscr.23, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,019 DEBUG:on stmt: $512binary_subscr.27 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-07-15 06:11:42,019 DEBUG:on stmt: $524compare_op.29 = $512binary_subscr.27 == maxn
2024-07-15 06:11:42,019 DEBUG:on stmt: peaks[n] = $524compare_op.29
2024-07-15 06:11:42,019 DEBUG:on stmt: $542binary_subscr.34 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-07-15 06:11:42,019 DEBUG:on stmt: bool552 = global(bool: <class 'bool'>)
2024-07-15 06:11:42,019 DEBUG:on stmt: $552pred = call bool552($542binary_subscr.34, func=bool552, args=(Var($542binary_subscr.34, utils.py:1235),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,019 DEBUG:on stmt: branch $552pred, 566, 554
2024-07-15 06:11:42,019 DEBUG:==== SSA block analysis pass on 554
2024-07-15 06:11:42,019 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B697F7D0>
2024-07-15 06:11:42,019 DEBUG:on stmt: $const556.1 = const(int, 1)
2024-07-15 06:11:42,019 DEBUG:on stmt: $binop_iadd558.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const556.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:42,019 DEBUG:on stmt: n = $binop_iadd558.2
2024-07-15 06:11:42,019 DEBUG:on stmt: jump 853
2024-07-15 06:11:42,019 DEBUG:==== SSA block analysis pass on 566
2024-07-15 06:11:42,019 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B697F7D0>
2024-07-15 06:11:42,019 DEBUG:on stmt: $566load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:42,019 DEBUG:on stmt: $578load_attr.2 = getattr(value=$566load_global.0, attr=mean)
2024-07-15 06:11:42,019 DEBUG:on stmt: $590load_global.4 = global(max: <built-in function max>)
2024-07-15 06:11:42,020 DEBUG:on stmt: $const602.6 = const(int, 0)
2024-07-15 06:11:42,020 DEBUG:on stmt: $binop_sub608.9 = n - pre_avg
2024-07-15 06:11:42,020 DEBUG:on stmt: $616call.10 = call $590load_global.4($const602.6, $binop_sub608.9, func=$590load_global.4, args=[Var($const602.6, utils.py:1239), Var($binop_sub608.9, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,020 DEBUG:on stmt: $626load_global.11 = global(min: <built-in function min>)
2024-07-15 06:11:42,020 DEBUG:on stmt: $binop_add642.15 = n + post_avg
2024-07-15 06:11:42,020 DEBUG:on stmt: $648load_attr.17 = getattr(value=x, attr=shape)
2024-07-15 06:11:42,020 DEBUG:on stmt: $const658.18 = const(int, 0)
2024-07-15 06:11:42,020 DEBUG:on stmt: $660binary_subscr.19 = static_getitem(value=$648load_attr.17, index=0, index_var=$const658.18, fn=<built-in function getitem>)
2024-07-15 06:11:42,020 DEBUG:on stmt: $674call.20 = call $626load_global.11($binop_add642.15, $660binary_subscr.19, func=$626load_global.11, args=[Var($binop_add642.15, utils.py:1239), Var($660binary_subscr.19, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,020 DEBUG:on stmt: $684build_slice.21 = global(slice: <class 'slice'>)
2024-07-15 06:11:42,020 DEBUG:on stmt: $684build_slice.22 = call $684build_slice.21($616call.10, $674call.20, func=$684build_slice.21, args=(Var($616call.10, utils.py:1239), Var($674call.20, utils.py:1239)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,020 DEBUG:on stmt: $686binary_subscr.23 = getitem(value=x, index=$684build_slice.22, fn=<built-in function getitem>)
2024-07-15 06:11:42,020 DEBUG:on stmt: avgn = call $578load_attr.2($686binary_subscr.23, func=$578load_attr.2, args=[Var($686binary_subscr.23, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,020 DEBUG:on stmt: $720binary_subscr.27 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-07-15 06:11:42,020 DEBUG:on stmt: $734binary_subscr.30 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-07-15 06:11:42,020 DEBUG:on stmt: $binop_add748.33 = avgn + delta
2024-07-15 06:11:42,020 DEBUG:on stmt: $752compare_op.34 = $734binary_subscr.30 >= $binop_add748.33
2024-07-15 06:11:42,020 DEBUG:on stmt: $binop_iand758.35 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$720binary_subscr.27, rhs=$752compare_op.34, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:42,020 DEBUG:on stmt: peaks[n] = $binop_iand758.35
2024-07-15 06:11:42,020 DEBUG:on stmt: $774binary_subscr.38 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-07-15 06:11:42,020 DEBUG:on stmt: bool784 = global(bool: <class 'bool'>)
2024-07-15 06:11:42,020 DEBUG:on stmt: $784pred = call bool784($774binary_subscr.38, func=bool784, args=(Var($774binary_subscr.38, utils.py:1242),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,020 DEBUG:on stmt: branch $784pred, 798, 786
2024-07-15 06:11:42,020 DEBUG:==== SSA block analysis pass on 786
2024-07-15 06:11:42,020 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B697F7D0>
2024-07-15 06:11:42,020 DEBUG:on stmt: $const788.1 = const(int, 1)
2024-07-15 06:11:42,020 DEBUG:on stmt: $binop_iadd790.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const788.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:42,020 DEBUG:on stmt: n = $binop_iadd790.2
2024-07-15 06:11:42,020 DEBUG:on stmt: jump 853
2024-07-15 06:11:42,021 DEBUG:==== SSA block analysis pass on 798
2024-07-15 06:11:42,021 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B697F7D0>
2024-07-15 06:11:42,021 DEBUG:on stmt: $const802.2 = const(int, 1)
2024-07-15 06:11:42,021 DEBUG:on stmt: $binop_add804.3 = wait + $const802.2
2024-07-15 06:11:42,021 DEBUG:on stmt: $binop_iadd808.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$binop_add804.3, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:42,021 DEBUG:on stmt: n = $binop_iadd808.4
2024-07-15 06:11:42,021 DEBUG:on stmt: $818load_attr.7 = getattr(value=x, attr=shape)
2024-07-15 06:11:42,021 DEBUG:on stmt: $const828.8 = const(int, 0)
2024-07-15 06:11:42,021 DEBUG:on stmt: $830binary_subscr.9 = static_getitem(value=$818load_attr.7, index=0, index_var=$const828.8, fn=<built-in function getitem>)
2024-07-15 06:11:42,021 DEBUG:on stmt: $840compare_op.10 = n < $830binary_subscr.9
2024-07-15 06:11:42,021 DEBUG:on stmt: bool846 = global(bool: <class 'bool'>)
2024-07-15 06:11:42,021 DEBUG:on stmt: $846pred = call bool846($840compare_op.10, func=bool846, args=(Var($840compare_op.10, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,021 DEBUG:on stmt: branch $846pred, 362, 848
2024-07-15 06:11:42,021 DEBUG:==== SSA block analysis pass on 848
2024-07-15 06:11:42,021 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B697F7D0>
2024-07-15 06:11:42,021 DEBUG:on stmt: $const848.0 = const(NoneType, None)
2024-07-15 06:11:42,021 DEBUG:on stmt: $850return_value.1 = cast(value=$const848.0)
2024-07-15 06:11:42,021 DEBUG:on stmt: return $850return_value.1
2024-07-15 06:11:42,021 DEBUG:==== SSA block analysis pass on 852
2024-07-15 06:11:42,021 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B697F7D0>
2024-07-15 06:11:42,021 DEBUG:on stmt: $const852.0 = const(NoneType, None)
2024-07-15 06:11:42,021 DEBUG:on stmt: $854return_value.1 = cast(value=$const852.0)
2024-07-15 06:11:42,021 DEBUG:on stmt: return $854return_value.1
2024-07-15 06:11:42,021 DEBUG:==== SSA block analysis pass on 853
2024-07-15 06:11:42,021 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B697F7D0>
2024-07-15 06:11:42,021 DEBUG:on stmt: jump 328
2024-07-15 06:11:42,023 DEBUG:defs defaultdict(<class 'list'>,
            {'$112call.19': [(<numba.core.ir.Assign object at 0x00000221B697DAD0>,
                              0)],
             '$122compare_op.20': [(<numba.core.ir.Assign object at 0x00000221B697C210>,
                                    0)],
             '$144binary_subscr.25': [(<numba.core.ir.Assign object at 0x00000221B67A0ED0>,
                                       0)],
             '$158binary_subscr.28': [(<numba.core.ir.Assign object at 0x00000221B67A3E90>,
                                       0)],
             '$168load_global.29': [(<numba.core.ir.Assign object at 0x00000221B697C9D0>,
                                     0)],
             '$180load_attr.31': [(<numba.core.ir.Assign object at 0x00000221B697D2D0>,
                                   0)],
             '$18load_global.3': [(<numba.core.ir.Assign object at 0x00000221B6167F10>,
                                   0)],
             '$194load_global.34': [(<numba.core.ir.Assign object at 0x00000221B697C690>,
                                     0)],
             '$210load_attr.38': [(<numba.core.ir.Assign object at 0x00000221B6949B50>,
                                   0)],
             '$222binary_subscr.40': [(<numba.core.ir.Assign object at 0x00000221B67A0510>,
                                       0)],
             '$236call.41': [(<numba.core.ir.Assign object at 0x00000221B6949E90>,
                              0)],
             '$246build_slice.42': [(<numba.core.ir.Assign object at 0x00000221B6948F90>,
                                     0)],
             '$246build_slice.43': [(<numba.core.ir.Assign object at 0x00000221B6948110>,
                                     0)],
             '$248binary_subscr.44': [(<numba.core.ir.Assign object at 0x00000221B6949190>,
                                       0)],
             '$262call.45': [(<numba.core.ir.Assign object at 0x00000221B6948690>,
                              0)],
             '$278compare_op.48': [(<numba.core.ir.Assign object at 0x00000221B69494D0>,
                                    0)],
             '$300binary_subscr.52': [(<numba.core.ir.Assign object at 0x00000221B67A3290>,
                                       0)],
             '$30load_attr.5': [(<numba.core.ir.Assign object at 0x00000221B6167D90>,
                                 0)],
             '$310pred': [(<numba.core.ir.Assign object at 0x00000221B694AAD0>,
                           0)],
             '$332load_attr.2': [(<numba.core.ir.Assign object at 0x00000221B694BD50>,
                                  328)],
             '$344binary_subscr.4': [(<numba.core.ir.Assign object at 0x00000221B681B950>,
                                      328)],
             '$354compare_op.5': [(<numba.core.ir.Assign object at 0x00000221B6949F90>,
                                   328)],
             '$360pred': [(<numba.core.ir.Assign object at 0x00000221B681B490>,
                           328)],
             '$362load_global.0': [(<numba.core.ir.Assign object at 0x00000221B681AF90>,
                                    362)],
             '$374load_attr.2': [(<numba.core.ir.Assign object at 0x00000221B681A7D0>,
                                  362)],
             '$386load_global.4': [(<numba.core.ir.Assign object at 0x00000221B681A590>,
                                    362)],
             '$412call.10': [(<numba.core.ir.Assign object at 0x00000221B681A550>,
                              362)],
             '$422load_global.11': [(<numba.core.ir.Assign object at 0x00000221B6818890>,
                                     362)],
             '$444load_attr.17': [(<numba.core.ir.Assign object at 0x00000221B6819BD0>,
                                   362)],
             '$44load_global.8': [(<numba.core.ir.Assign object at 0x00000221B6167650>,
                                   0)],
             '$456binary_subscr.19': [(<numba.core.ir.Assign object at 0x00000221B67A38D0>,
                                       362)],
             '$470call.20': [(<numba.core.ir.Assign object at 0x00000221B68182D0>,
                              362)],
             '$480build_slice.21': [(<numba.core.ir.Assign object at 0x00000221B6818C50>,
                                     362)],
             '$480build_slice.22': [(<numba.core.ir.Assign object at 0x00000221B681AED0>,
                                     362)],
             '$482binary_subscr.23': [(<numba.core.ir.Assign object at 0x00000221B681B3D0>,
                                       362)],
             '$512binary_subscr.27': [(<numba.core.ir.Assign object at 0x00000221B681B810>,
                                       362)],
             '$524compare_op.29': [(<numba.core.ir.Assign object at 0x00000221B681B650>,
                                    362)],
             '$542binary_subscr.34': [(<numba.core.ir.Assign object at 0x00000221B6A1F390>,
                                       362)],
             '$552pred': [(<numba.core.ir.Assign object at 0x00000221B6A1CF90>,
                           362)],
             '$566load_global.0': [(<numba.core.ir.Assign object at 0x00000221B6A1D210>,
                                    566)],
             '$578load_attr.2': [(<numba.core.ir.Assign object at 0x00000221B6A1FBD0>,
                                  566)],
             '$590load_global.4': [(<numba.core.ir.Assign object at 0x00000221B6980090>,
                                    566)],
             '$60load_attr.12': [(<numba.core.ir.Assign object at 0x00000221B6166710>,
                                  0)],
             '$616call.10': [(<numba.core.ir.Assign object at 0x00000221B678D7D0>,
                              566)],
             '$626load_global.11': [(<numba.core.ir.Assign object at 0x00000221B678F690>,
                                     566)],
             '$648load_attr.17': [(<numba.core.ir.Assign object at 0x00000221B678F410>,
                                   566)],
             '$660binary_subscr.19': [(<numba.core.ir.Assign object at 0x00000221B686F050>,
                                       566)],
             '$674call.20': [(<numba.core.ir.Assign object at 0x00000221B678C250>,
                              566)],
             '$684build_slice.21': [(<numba.core.ir.Assign object at 0x00000221B678ED10>,
                                     566)],
             '$684build_slice.22': [(<numba.core.ir.Assign object at 0x00000221B678E190>,
                                     566)],
             '$686binary_subscr.23': [(<numba.core.ir.Assign object at 0x00000221B678EA90>,
                                       566)],
             '$720binary_subscr.27': [(<numba.core.ir.Assign object at 0x00000221B678D310>,
                                       566)],
             '$72binary_subscr.14': [(<numba.core.ir.Assign object at 0x00000221B67A3950>,
                                      0)],
             '$734binary_subscr.30': [(<numba.core.ir.Assign object at 0x00000221B678C990>,
                                       566)],
             '$752compare_op.34': [(<numba.core.ir.Assign object at 0x00000221B678E850>,
                                    566)],
             '$774binary_subscr.38': [(<numba.core.ir.Assign object at 0x00000221B678E650>,
                                       566)],
             '$784pred': [(<numba.core.ir.Assign object at 0x00000221B678CED0>,
                           566)],
             '$818load_attr.7': [(<numba.core.ir.Assign object at 0x00000221B608DF10>,
                                  798)],
             '$830binary_subscr.9': [(<numba.core.ir.Assign object at 0x00000221B6960C10>,
                                      798)],
             '$840compare_op.10': [(<numba.core.ir.Assign object at 0x00000221B608FE50>,
                                    798)],
             '$846pred': [(<numba.core.ir.Assign object at 0x00000221B608E690>,
                           798)],
             '$850return_value.1': [(<numba.core.ir.Assign object at 0x00000221B69971D0>,
                                     848)],
             '$854return_value.1': [(<numba.core.ir.Assign object at 0x00000221B6996750>,
                                     852)],
             '$86call.15': [(<numba.core.ir.Assign object at 0x00000221B6166B10>,
                             0)],
             '$8binary_subscr.2': [(<numba.core.ir.Assign object at 0x00000221B67A2290>,
                                    0)],
             '$96build_slice.16': [(<numba.core.ir.Assign object at 0x00000221B6166090>,
                                    0)],
             '$96build_slice.17': [(<numba.core.ir.Assign object at 0x00000221B6164810>,
                                    0)],
             '$98binary_subscr.18': [(<numba.core.ir.Assign object at 0x00000221B697F290>,
                                      0)],
             '$binop_add274.47': [(<numba.core.ir.Assign object at 0x00000221B6948BD0>,
                                   0)],
             '$binop_add438.15': [(<numba.core.ir.Assign object at 0x00000221B6819D10>,
                                   362)],
             '$binop_add642.15': [(<numba.core.ir.Assign object at 0x00000221B678F710>,
                                   566)],
             '$binop_add748.33': [(<numba.core.ir.Assign object at 0x00000221B678CDD0>,
                                   566)],
             '$binop_add804.3': [(<numba.core.ir.Assign object at 0x00000221B608D790>,
                                  798)],
             '$binop_iadd558.2': [(<numba.core.ir.Assign object at 0x00000221B6A1F450>,
                                   554)],
             '$binop_iadd790.2': [(<numba.core.ir.Assign object at 0x00000221B678F0D0>,
                                   786)],
             '$binop_iadd808.4': [(<numba.core.ir.Assign object at 0x00000221B608CB10>,
                                   798)],
             '$binop_iand284.49': [(<numba.core.ir.Assign object at 0x00000221B69495D0>,
                                    0)],
             '$binop_iand758.35': [(<numba.core.ir.Assign object at 0x00000221B678DBD0>,
                                    566)],
             '$binop_sub404.9': [(<numba.core.ir.Assign object at 0x00000221B6819D50>,
                                  362)],
             '$binop_sub608.9': [(<numba.core.ir.Assign object at 0x00000221B6980310>,
                                  566)],
             '$const130.22': [(<numba.core.ir.Assign object at 0x00000221B697F050>,
                               0)],
             '$const138.24': [(<numba.core.ir.Assign object at 0x00000221B697D790>,
                               0)],
             '$const156.27': [(<numba.core.ir.Assign object at 0x00000221B697CB10>,
                               0)],
             '$const192.33': [(<numba.core.ir.Assign object at 0x00000221B697EC50>,
                               0)],
             '$const220.39': [(<numba.core.ir.Assign object at 0x00000221B694A3D0>,
                               0)],
             '$const298.51': [(<numba.core.ir.Assign object at 0x00000221B694ACD0>,
                               0)],
             '$const314.1': [(<numba.core.ir.Assign object at 0x00000221B694A7D0>,
                              312)],
             '$const342.3': [(<numba.core.ir.Assign object at 0x00000221B694BC50>,
                              328)],
             '$const398.6': [(<numba.core.ir.Assign object at 0x00000221B6818910>,
                              362)],
             '$const42.7': [(<numba.core.ir.Assign object at 0x00000221B6166CD0>,
                             0)],
             '$const454.18': [(<numba.core.ir.Assign object at 0x00000221B6819150>,
                               362)],
             '$const556.1': [(<numba.core.ir.Assign object at 0x00000221B6A1F5D0>,
                              554)],
             '$const6.1': [(<numba.core.ir.Assign object at 0x00000221B6167B10>,
                            0)],
             '$const602.6': [(<numba.core.ir.Assign object at 0x00000221B6980690>,
                              566)],
             '$const658.18': [(<numba.core.ir.Assign object at 0x00000221B678D410>,
                               566)],
             '$const70.13': [(<numba.core.ir.Assign object at 0x00000221B6166610>,
                              0)],
             '$const788.1': [(<numba.core.ir.Assign object at 0x00000221B678C550>,
                              786)],
             '$const802.2': [(<numba.core.ir.Assign object at 0x00000221B608D850>,
                              798)],
             '$const828.8': [(<numba.core.ir.Assign object at 0x00000221B608D4D0>,
                              798)],
             '$const848.0': [(<numba.core.ir.Assign object at 0x00000221B6996950>,
                              848)],
             '$const852.0': [(<numba.core.ir.Assign object at 0x00000221B6996610>,
                              852)],
             'avgn': [(<numba.core.ir.Assign object at 0x00000221B678D390>,
                       566)],
             'bool310': [(<numba.core.ir.Assign object at 0x00000221B694AFD0>,
                          0)],
             'bool360': [(<numba.core.ir.Assign object at 0x00000221B681B510>,
                          328)],
             'bool552': [(<numba.core.ir.Assign object at 0x00000221B6A1D010>,
                          362)],
             'bool784': [(<numba.core.ir.Assign object at 0x00000221B678D210>,
                          566)],
             'bool846': [(<numba.core.ir.Assign object at 0x00000221B608DD90>,
                          798)],
             'delta': [(<numba.core.ir.Assign object at 0x00000221B6A0BED0>,
                        0)],
             'maxn': [(<numba.core.ir.Assign object at 0x00000221B6819F50>,
                       362)],
             'n': [(<numba.core.ir.Assign object at 0x00000221B694A590>, 312),
                   (<numba.core.ir.Assign object at 0x00000221B694B490>, 324),
                   (<numba.core.ir.Assign object at 0x00000221B6A1F110>, 554),
                   (<numba.core.ir.Assign object at 0x00000221B678C050>, 786),
                   (<numba.core.ir.Assign object at 0x00000221B608E7D0>, 798)],
             'peaks': [(<numba.core.ir.Assign object at 0x00000221B6165AD0>,
                        0)],
             'post_avg': [(<numba.core.ir.Assign object at 0x00000221B67A2D90>,
                           0)],
             'post_max': [(<numba.core.ir.Assign object at 0x00000221B6960910>,
                           0)],
             'pre_avg': [(<numba.core.ir.Assign object at 0x00000221B69610D0>,
                          0)],
             'pre_max': [(<numba.core.ir.Assign object at 0x00000221B6963A10>,
                          0)],
             'wait': [(<numba.core.ir.Assign object at 0x00000221B6165310>, 0)],
             'x': [(<numba.core.ir.Assign object at 0x00000221B686C810>, 0)]})
2024-07-15 06:11:42,023 DEBUG:SSA violators <numba.core.utils.OrderedSet object at 0x00000221B697F7D0>
2024-07-15 06:11:42,023 DEBUG:Fix SSA violator on var n
2024-07-15 06:11:42,024 DEBUG:==== SSA block rewrite pass on 0
2024-07-15 06:11:42,024 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6960310>
2024-07-15 06:11:42,024 DEBUG:on stmt: x = arg(0, name=x)
2024-07-15 06:11:42,024 DEBUG:on stmt: pre_max = arg(1, name=pre_max)
2024-07-15 06:11:42,024 DEBUG:on stmt: post_max = arg(2, name=post_max)
2024-07-15 06:11:42,024 DEBUG:on stmt: pre_avg = arg(3, name=pre_avg)
2024-07-15 06:11:42,024 DEBUG:on stmt: post_avg = arg(4, name=post_avg)
2024-07-15 06:11:42,024 DEBUG:on stmt: delta = arg(5, name=delta)
2024-07-15 06:11:42,024 DEBUG:on stmt: wait = arg(6, name=wait)
2024-07-15 06:11:42,024 DEBUG:on stmt: peaks = arg(7, name=peaks)
2024-07-15 06:11:42,024 DEBUG:on stmt: $const6.1 = const(int, 0)
2024-07-15 06:11:42,024 DEBUG:on stmt: $8binary_subscr.2 = static_getitem(value=x, index=0, index_var=$const6.1, fn=<built-in function getitem>)
2024-07-15 06:11:42,024 DEBUG:on stmt: $18load_global.3 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:42,024 DEBUG:on stmt: $30load_attr.5 = getattr(value=$18load_global.3, attr=max)
2024-07-15 06:11:42,024 DEBUG:on stmt: $const42.7 = const(NoneType, None)
2024-07-15 06:11:42,024 DEBUG:on stmt: $44load_global.8 = global(min: <built-in function min>)
2024-07-15 06:11:42,024 DEBUG:on stmt: $60load_attr.12 = getattr(value=x, attr=shape)
2024-07-15 06:11:42,024 DEBUG:on stmt: $const70.13 = const(int, 0)
2024-07-15 06:11:42,024 DEBUG:on stmt: $72binary_subscr.14 = static_getitem(value=$60load_attr.12, index=0, index_var=$const70.13, fn=<built-in function getitem>)
2024-07-15 06:11:42,024 DEBUG:on stmt: $86call.15 = call $44load_global.8(post_max, $72binary_subscr.14, func=$44load_global.8, args=[Var(post_max, utils.py:1209), Var($72binary_subscr.14, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,024 DEBUG:on stmt: $96build_slice.16 = global(slice: <class 'slice'>)
2024-07-15 06:11:42,024 DEBUG:on stmt: $96build_slice.17 = call $96build_slice.16($const42.7, $86call.15, func=$96build_slice.16, args=(Var($const42.7, utils.py:1221), Var($86call.15, utils.py:1221)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,024 DEBUG:on stmt: $98binary_subscr.18 = getitem(value=x, index=$96build_slice.17, fn=<built-in function getitem>)
2024-07-15 06:11:42,024 DEBUG:on stmt: $112call.19 = call $30load_attr.5($98binary_subscr.18, func=$30load_attr.5, args=[Var($98binary_subscr.18, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,024 DEBUG:on stmt: $122compare_op.20 = $8binary_subscr.2 >= $112call.19
2024-07-15 06:11:42,024 DEBUG:on stmt: $const130.22 = const(int, 0)
2024-07-15 06:11:42,024 DEBUG:on stmt: peaks[0] = $122compare_op.20
2024-07-15 06:11:42,024 DEBUG:on stmt: $const138.24 = const(int, 0)
2024-07-15 06:11:42,024 DEBUG:on stmt: $144binary_subscr.25 = static_getitem(value=peaks, index=0, index_var=$const138.24, fn=<built-in function getitem>)
2024-07-15 06:11:42,024 DEBUG:on stmt: $const156.27 = const(int, 0)
2024-07-15 06:11:42,024 DEBUG:on stmt: $158binary_subscr.28 = static_getitem(value=x, index=0, index_var=$const156.27, fn=<built-in function getitem>)
2024-07-15 06:11:42,024 DEBUG:on stmt: $168load_global.29 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:42,024 DEBUG:on stmt: $180load_attr.31 = getattr(value=$168load_global.29, attr=mean)
2024-07-15 06:11:42,024 DEBUG:on stmt: $const192.33 = const(NoneType, None)
2024-07-15 06:11:42,025 DEBUG:on stmt: $194load_global.34 = global(min: <built-in function min>)
2024-07-15 06:11:42,025 DEBUG:on stmt: $210load_attr.38 = getattr(value=x, attr=shape)
2024-07-15 06:11:42,025 DEBUG:on stmt: $const220.39 = const(int, 0)
2024-07-15 06:11:42,025 DEBUG:on stmt: $222binary_subscr.40 = static_getitem(value=$210load_attr.38, index=0, index_var=$const220.39, fn=<built-in function getitem>)
2024-07-15 06:11:42,025 DEBUG:on stmt: $236call.41 = call $194load_global.34(post_avg, $222binary_subscr.40, func=$194load_global.34, args=[Var(post_avg, utils.py:1209), Var($222binary_subscr.40, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,025 DEBUG:on stmt: $246build_slice.42 = global(slice: <class 'slice'>)
2024-07-15 06:11:42,025 DEBUG:on stmt: $246build_slice.43 = call $246build_slice.42($const192.33, $236call.41, func=$246build_slice.42, args=(Var($const192.33, utils.py:1222), Var($236call.41, utils.py:1222)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,026 DEBUG:on stmt: $248binary_subscr.44 = getitem(value=x, index=$246build_slice.43, fn=<built-in function getitem>)
2024-07-15 06:11:42,026 DEBUG:on stmt: $262call.45 = call $180load_attr.31($248binary_subscr.44, func=$180load_attr.31, args=[Var($248binary_subscr.44, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,026 DEBUG:on stmt: $binop_add274.47 = $262call.45 + delta
2024-07-15 06:11:42,026 DEBUG:on stmt: $278compare_op.48 = $158binary_subscr.28 >= $binop_add274.47
2024-07-15 06:11:42,026 DEBUG:on stmt: $binop_iand284.49 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$144binary_subscr.25, rhs=$278compare_op.48, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:42,026 DEBUG:on stmt: peaks[0] = $binop_iand284.49
2024-07-15 06:11:42,026 DEBUG:on stmt: $const298.51 = const(int, 0)
2024-07-15 06:11:42,026 DEBUG:on stmt: $300binary_subscr.52 = static_getitem(value=peaks, index=0, index_var=$const298.51, fn=<built-in function getitem>)
2024-07-15 06:11:42,026 DEBUG:on stmt: bool310 = global(bool: <class 'bool'>)
2024-07-15 06:11:42,026 DEBUG:on stmt: $310pred = call bool310($300binary_subscr.52, func=bool310, args=(Var($300binary_subscr.52, utils.py:1224),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,026 DEBUG:on stmt: branch $310pred, 312, 324
2024-07-15 06:11:42,026 DEBUG:==== SSA block rewrite pass on 312
2024-07-15 06:11:42,026 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6960310>
2024-07-15 06:11:42,026 DEBUG:on stmt: $const314.1 = const(int, 1)
2024-07-15 06:11:42,026 DEBUG:on stmt: n = wait + $const314.1
2024-07-15 06:11:42,026 DEBUG:first assign: n
2024-07-15 06:11:42,026 DEBUG:replaced with: n = wait + $const314.1
2024-07-15 06:11:42,026 DEBUG:on stmt: jump 328
2024-07-15 06:11:42,026 DEBUG:==== SSA block rewrite pass on 324
2024-07-15 06:11:42,026 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6960310>
2024-07-15 06:11:42,026 DEBUG:on stmt: n = const(int, 1)
2024-07-15 06:11:42,026 DEBUG:replaced with: n.1 = const(int, 1)
2024-07-15 06:11:42,026 DEBUG:on stmt: jump 328
2024-07-15 06:11:42,026 DEBUG:==== SSA block rewrite pass on 328
2024-07-15 06:11:42,026 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6960310>
2024-07-15 06:11:42,026 DEBUG:on stmt: $332load_attr.2 = getattr(value=x, attr=shape)
2024-07-15 06:11:42,026 DEBUG:on stmt: $const342.3 = const(int, 0)
2024-07-15 06:11:42,026 DEBUG:on stmt: $344binary_subscr.4 = static_getitem(value=$332load_attr.2, index=0, index_var=$const342.3, fn=<built-in function getitem>)
2024-07-15 06:11:42,026 DEBUG:on stmt: $354compare_op.5 = n < $344binary_subscr.4
2024-07-15 06:11:42,026 DEBUG:on stmt: bool360 = global(bool: <class 'bool'>)
2024-07-15 06:11:42,026 DEBUG:on stmt: $360pred = call bool360($354compare_op.5, func=bool360, args=(Var($354compare_op.5, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,027 DEBUG:on stmt: branch $360pred, 362, 852
2024-07-15 06:11:42,027 DEBUG:==== SSA block rewrite pass on 362
2024-07-15 06:11:42,027 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6960310>
2024-07-15 06:11:42,027 DEBUG:on stmt: $362load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:42,027 DEBUG:on stmt: $374load_attr.2 = getattr(value=$362load_global.0, attr=max)
2024-07-15 06:11:42,027 DEBUG:on stmt: $386load_global.4 = global(max: <built-in function max>)
2024-07-15 06:11:42,027 DEBUG:on stmt: $const398.6 = const(int, 0)
2024-07-15 06:11:42,027 DEBUG:on stmt: $binop_sub404.9 = n - pre_max
2024-07-15 06:11:42,027 DEBUG:on stmt: $412call.10 = call $386load_global.4($const398.6, $binop_sub404.9, func=$386load_global.4, args=[Var($const398.6, utils.py:1230), Var($binop_sub404.9, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,027 DEBUG:on stmt: $422load_global.11 = global(min: <built-in function min>)
2024-07-15 06:11:42,027 DEBUG:on stmt: $binop_add438.15 = n + post_max
2024-07-15 06:11:42,027 DEBUG:on stmt: $444load_attr.17 = getattr(value=x, attr=shape)
2024-07-15 06:11:42,027 DEBUG:on stmt: $const454.18 = const(int, 0)
2024-07-15 06:11:42,027 DEBUG:on stmt: $456binary_subscr.19 = static_getitem(value=$444load_attr.17, index=0, index_var=$const454.18, fn=<built-in function getitem>)
2024-07-15 06:11:42,027 DEBUG:on stmt: $470call.20 = call $422load_global.11($binop_add438.15, $456binary_subscr.19, func=$422load_global.11, args=[Var($binop_add438.15, utils.py:1230), Var($456binary_subscr.19, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,027 DEBUG:on stmt: $480build_slice.21 = global(slice: <class 'slice'>)
2024-07-15 06:11:42,027 DEBUG:on stmt: $480build_slice.22 = call $480build_slice.21($412call.10, $470call.20, func=$480build_slice.21, args=(Var($412call.10, utils.py:1230), Var($470call.20, utils.py:1230)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,027 DEBUG:on stmt: $482binary_subscr.23 = getitem(value=x, index=$480build_slice.22, fn=<built-in function getitem>)
2024-07-15 06:11:42,027 DEBUG:on stmt: maxn = call $374load_attr.2($482binary_subscr.23, func=$374load_attr.2, args=[Var($482binary_subscr.23, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,027 DEBUG:on stmt: $512binary_subscr.27 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-07-15 06:11:42,027 DEBUG:on stmt: $524compare_op.29 = $512binary_subscr.27 == maxn
2024-07-15 06:11:42,027 DEBUG:on stmt: peaks[n] = $524compare_op.29
2024-07-15 06:11:42,027 DEBUG:on stmt: $542binary_subscr.34 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-07-15 06:11:42,027 DEBUG:on stmt: bool552 = global(bool: <class 'bool'>)
2024-07-15 06:11:42,027 DEBUG:on stmt: $552pred = call bool552($542binary_subscr.34, func=bool552, args=(Var($542binary_subscr.34, utils.py:1235),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,027 DEBUG:on stmt: branch $552pred, 566, 554
2024-07-15 06:11:42,027 DEBUG:==== SSA block rewrite pass on 554
2024-07-15 06:11:42,027 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6960310>
2024-07-15 06:11:42,028 DEBUG:on stmt: $const556.1 = const(int, 1)
2024-07-15 06:11:42,028 DEBUG:on stmt: $binop_iadd558.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const556.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:42,028 DEBUG:on stmt: n = $binop_iadd558.2
2024-07-15 06:11:42,028 DEBUG:replaced with: n.2 = $binop_iadd558.2
2024-07-15 06:11:42,028 DEBUG:on stmt: jump 853
2024-07-15 06:11:42,028 DEBUG:==== SSA block rewrite pass on 566
2024-07-15 06:11:42,028 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6960310>
2024-07-15 06:11:42,028 DEBUG:on stmt: $566load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:42,028 DEBUG:on stmt: $578load_attr.2 = getattr(value=$566load_global.0, attr=mean)
2024-07-15 06:11:42,028 DEBUG:on stmt: $590load_global.4 = global(max: <built-in function max>)
2024-07-15 06:11:42,028 DEBUG:on stmt: $const602.6 = const(int, 0)
2024-07-15 06:11:42,028 DEBUG:on stmt: $binop_sub608.9 = n - pre_avg
2024-07-15 06:11:42,028 DEBUG:on stmt: $616call.10 = call $590load_global.4($const602.6, $binop_sub608.9, func=$590load_global.4, args=[Var($const602.6, utils.py:1239), Var($binop_sub608.9, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,028 DEBUG:on stmt: $626load_global.11 = global(min: <built-in function min>)
2024-07-15 06:11:42,028 DEBUG:on stmt: $binop_add642.15 = n + post_avg
2024-07-15 06:11:42,028 DEBUG:on stmt: $648load_attr.17 = getattr(value=x, attr=shape)
2024-07-15 06:11:42,029 DEBUG:on stmt: $const658.18 = const(int, 0)
2024-07-15 06:11:42,029 DEBUG:on stmt: $660binary_subscr.19 = static_getitem(value=$648load_attr.17, index=0, index_var=$const658.18, fn=<built-in function getitem>)
2024-07-15 06:11:42,029 DEBUG:on stmt: $674call.20 = call $626load_global.11($binop_add642.15, $660binary_subscr.19, func=$626load_global.11, args=[Var($binop_add642.15, utils.py:1239), Var($660binary_subscr.19, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,029 DEBUG:on stmt: $684build_slice.21 = global(slice: <class 'slice'>)
2024-07-15 06:11:42,029 DEBUG:on stmt: $684build_slice.22 = call $684build_slice.21($616call.10, $674call.20, func=$684build_slice.21, args=(Var($616call.10, utils.py:1239), Var($674call.20, utils.py:1239)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,029 DEBUG:on stmt: $686binary_subscr.23 = getitem(value=x, index=$684build_slice.22, fn=<built-in function getitem>)
2024-07-15 06:11:42,029 DEBUG:on stmt: avgn = call $578load_attr.2($686binary_subscr.23, func=$578load_attr.2, args=[Var($686binary_subscr.23, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,029 DEBUG:on stmt: $720binary_subscr.27 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-07-15 06:11:42,029 DEBUG:on stmt: $734binary_subscr.30 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-07-15 06:11:42,029 DEBUG:on stmt: $binop_add748.33 = avgn + delta
2024-07-15 06:11:42,029 DEBUG:on stmt: $752compare_op.34 = $734binary_subscr.30 >= $binop_add748.33
2024-07-15 06:11:42,029 DEBUG:on stmt: $binop_iand758.35 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$720binary_subscr.27, rhs=$752compare_op.34, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:42,029 DEBUG:on stmt: peaks[n] = $binop_iand758.35
2024-07-15 06:11:42,029 DEBUG:on stmt: $774binary_subscr.38 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-07-15 06:11:42,029 DEBUG:on stmt: bool784 = global(bool: <class 'bool'>)
2024-07-15 06:11:42,029 DEBUG:on stmt: $784pred = call bool784($774binary_subscr.38, func=bool784, args=(Var($774binary_subscr.38, utils.py:1242),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,029 DEBUG:on stmt: branch $784pred, 798, 786
2024-07-15 06:11:42,029 DEBUG:==== SSA block rewrite pass on 786
2024-07-15 06:11:42,029 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6960310>
2024-07-15 06:11:42,029 DEBUG:on stmt: $const788.1 = const(int, 1)
2024-07-15 06:11:42,029 DEBUG:on stmt: $binop_iadd790.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const788.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:42,029 DEBUG:on stmt: n = $binop_iadd790.2
2024-07-15 06:11:42,029 DEBUG:replaced with: n.3 = $binop_iadd790.2
2024-07-15 06:11:42,029 DEBUG:on stmt: jump 853
2024-07-15 06:11:42,029 DEBUG:==== SSA block rewrite pass on 798
2024-07-15 06:11:42,029 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6960310>
2024-07-15 06:11:42,029 DEBUG:on stmt: $const802.2 = const(int, 1)
2024-07-15 06:11:42,030 DEBUG:on stmt: $binop_add804.3 = wait + $const802.2
2024-07-15 06:11:42,030 DEBUG:on stmt: $binop_iadd808.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$binop_add804.3, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:42,030 DEBUG:on stmt: n = $binop_iadd808.4
2024-07-15 06:11:42,030 DEBUG:replaced with: n.4 = $binop_iadd808.4
2024-07-15 06:11:42,030 DEBUG:on stmt: $818load_attr.7 = getattr(value=x, attr=shape)
2024-07-15 06:11:42,030 DEBUG:on stmt: $const828.8 = const(int, 0)
2024-07-15 06:11:42,030 DEBUG:on stmt: $830binary_subscr.9 = static_getitem(value=$818load_attr.7, index=0, index_var=$const828.8, fn=<built-in function getitem>)
2024-07-15 06:11:42,030 DEBUG:on stmt: $840compare_op.10 = n < $830binary_subscr.9
2024-07-15 06:11:42,030 DEBUG:on stmt: bool846 = global(bool: <class 'bool'>)
2024-07-15 06:11:42,030 DEBUG:on stmt: $846pred = call bool846($840compare_op.10, func=bool846, args=(Var($840compare_op.10, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,030 DEBUG:on stmt: branch $846pred, 362, 848
2024-07-15 06:11:42,030 DEBUG:==== SSA block rewrite pass on 848
2024-07-15 06:11:42,030 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6960310>
2024-07-15 06:11:42,030 DEBUG:on stmt: $const848.0 = const(NoneType, None)
2024-07-15 06:11:42,030 DEBUG:on stmt: $850return_value.1 = cast(value=$const848.0)
2024-07-15 06:11:42,030 DEBUG:on stmt: return $850return_value.1
2024-07-15 06:11:42,030 DEBUG:==== SSA block rewrite pass on 852
2024-07-15 06:11:42,030 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6960310>
2024-07-15 06:11:42,030 DEBUG:on stmt: $const852.0 = const(NoneType, None)
2024-07-15 06:11:42,030 DEBUG:on stmt: $854return_value.1 = cast(value=$const852.0)
2024-07-15 06:11:42,030 DEBUG:on stmt: return $854return_value.1
2024-07-15 06:11:42,030 DEBUG:==== SSA block rewrite pass on 853
2024-07-15 06:11:42,030 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6960310>
2024-07-15 06:11:42,030 DEBUG:on stmt: jump 328
2024-07-15 06:11:42,030 DEBUG:Replaced assignments: defaultdict(<class 'list'>,
            {312: [<numba.core.ir.Assign object at 0x00000221B6960150>],
             324: [<numba.core.ir.Assign object at 0x00000221B6962410>],
             554: [<numba.core.ir.Assign object at 0x00000221B69612D0>],
             786: [<numba.core.ir.Assign object at 0x00000221B6960450>],
             798: [<numba.core.ir.Assign object at 0x00000221B6962CD0>]})
2024-07-15 06:11:42,030 DEBUG:==== SSA block rewrite pass on 0
2024-07-15 06:11:42,031 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B6962550>
2024-07-15 06:11:42,031 DEBUG:on stmt: x = arg(0, name=x)
2024-07-15 06:11:42,031 DEBUG:on stmt: pre_max = arg(1, name=pre_max)
2024-07-15 06:11:42,031 DEBUG:on stmt: post_max = arg(2, name=post_max)
2024-07-15 06:11:42,031 DEBUG:on stmt: pre_avg = arg(3, name=pre_avg)
2024-07-15 06:11:42,031 DEBUG:on stmt: post_avg = arg(4, name=post_avg)
2024-07-15 06:11:42,031 DEBUG:on stmt: delta = arg(5, name=delta)
2024-07-15 06:11:42,031 DEBUG:on stmt: wait = arg(6, name=wait)
2024-07-15 06:11:42,031 DEBUG:on stmt: peaks = arg(7, name=peaks)
2024-07-15 06:11:42,031 DEBUG:on stmt: $const6.1 = const(int, 0)
2024-07-15 06:11:42,031 DEBUG:on stmt: $8binary_subscr.2 = static_getitem(value=x, index=0, index_var=$const6.1, fn=<built-in function getitem>)
2024-07-15 06:11:42,031 DEBUG:on stmt: $18load_global.3 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:42,031 DEBUG:on stmt: $30load_attr.5 = getattr(value=$18load_global.3, attr=max)
2024-07-15 06:11:42,031 DEBUG:on stmt: $const42.7 = const(NoneType, None)
2024-07-15 06:11:42,031 DEBUG:on stmt: $44load_global.8 = global(min: <built-in function min>)
2024-07-15 06:11:42,031 DEBUG:on stmt: $60load_attr.12 = getattr(value=x, attr=shape)
2024-07-15 06:11:42,031 DEBUG:on stmt: $const70.13 = const(int, 0)
2024-07-15 06:11:42,031 DEBUG:on stmt: $72binary_subscr.14 = static_getitem(value=$60load_attr.12, index=0, index_var=$const70.13, fn=<built-in function getitem>)
2024-07-15 06:11:42,031 DEBUG:on stmt: $86call.15 = call $44load_global.8(post_max, $72binary_subscr.14, func=$44load_global.8, args=[Var(post_max, utils.py:1209), Var($72binary_subscr.14, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,031 DEBUG:on stmt: $96build_slice.16 = global(slice: <class 'slice'>)
2024-07-15 06:11:42,031 DEBUG:on stmt: $96build_slice.17 = call $96build_slice.16($const42.7, $86call.15, func=$96build_slice.16, args=(Var($const42.7, utils.py:1221), Var($86call.15, utils.py:1221)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,031 DEBUG:on stmt: $98binary_subscr.18 = getitem(value=x, index=$96build_slice.17, fn=<built-in function getitem>)
2024-07-15 06:11:42,031 DEBUG:on stmt: $112call.19 = call $30load_attr.5($98binary_subscr.18, func=$30load_attr.5, args=[Var($98binary_subscr.18, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,032 DEBUG:on stmt: $122compare_op.20 = $8binary_subscr.2 >= $112call.19
2024-07-15 06:11:42,032 DEBUG:on stmt: $const130.22 = const(int, 0)
2024-07-15 06:11:42,032 DEBUG:on stmt: peaks[0] = $122compare_op.20
2024-07-15 06:11:42,032 DEBUG:on stmt: $const138.24 = const(int, 0)
2024-07-15 06:11:42,032 DEBUG:on stmt: $144binary_subscr.25 = static_getitem(value=peaks, index=0, index_var=$const138.24, fn=<built-in function getitem>)
2024-07-15 06:11:42,032 DEBUG:on stmt: $const156.27 = const(int, 0)
2024-07-15 06:11:42,032 DEBUG:on stmt: $158binary_subscr.28 = static_getitem(value=x, index=0, index_var=$const156.27, fn=<built-in function getitem>)
2024-07-15 06:11:42,032 DEBUG:on stmt: $168load_global.29 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:42,032 DEBUG:on stmt: $180load_attr.31 = getattr(value=$168load_global.29, attr=mean)
2024-07-15 06:11:42,032 DEBUG:on stmt: $const192.33 = const(NoneType, None)
2024-07-15 06:11:42,032 DEBUG:on stmt: $194load_global.34 = global(min: <built-in function min>)
2024-07-15 06:11:42,032 DEBUG:on stmt: $210load_attr.38 = getattr(value=x, attr=shape)
2024-07-15 06:11:42,032 DEBUG:on stmt: $const220.39 = const(int, 0)
2024-07-15 06:11:42,032 DEBUG:on stmt: $222binary_subscr.40 = static_getitem(value=$210load_attr.38, index=0, index_var=$const220.39, fn=<built-in function getitem>)
2024-07-15 06:11:42,032 DEBUG:on stmt: $236call.41 = call $194load_global.34(post_avg, $222binary_subscr.40, func=$194load_global.34, args=[Var(post_avg, utils.py:1209), Var($222binary_subscr.40, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,032 DEBUG:on stmt: $246build_slice.42 = global(slice: <class 'slice'>)
2024-07-15 06:11:42,032 DEBUG:on stmt: $246build_slice.43 = call $246build_slice.42($const192.33, $236call.41, func=$246build_slice.42, args=(Var($const192.33, utils.py:1222), Var($236call.41, utils.py:1222)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,032 DEBUG:on stmt: $248binary_subscr.44 = getitem(value=x, index=$246build_slice.43, fn=<built-in function getitem>)
2024-07-15 06:11:42,032 DEBUG:on stmt: $262call.45 = call $180load_attr.31($248binary_subscr.44, func=$180load_attr.31, args=[Var($248binary_subscr.44, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,032 DEBUG:on stmt: $binop_add274.47 = $262call.45 + delta
2024-07-15 06:11:42,032 DEBUG:on stmt: $278compare_op.48 = $158binary_subscr.28 >= $binop_add274.47
2024-07-15 06:11:42,033 DEBUG:on stmt: $binop_iand284.49 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$144binary_subscr.25, rhs=$278compare_op.48, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:42,033 DEBUG:on stmt: peaks[0] = $binop_iand284.49
2024-07-15 06:11:42,033 DEBUG:on stmt: $const298.51 = const(int, 0)
2024-07-15 06:11:42,033 DEBUG:on stmt: $300binary_subscr.52 = static_getitem(value=peaks, index=0, index_var=$const298.51, fn=<built-in function getitem>)
2024-07-15 06:11:42,033 DEBUG:on stmt: bool310 = global(bool: <class 'bool'>)
2024-07-15 06:11:42,033 DEBUG:on stmt: $310pred = call bool310($300binary_subscr.52, func=bool310, args=(Var($300binary_subscr.52, utils.py:1224),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,033 DEBUG:on stmt: branch $310pred, 312, 324
2024-07-15 06:11:42,033 DEBUG:==== SSA block rewrite pass on 312
2024-07-15 06:11:42,033 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B6962550>
2024-07-15 06:11:42,033 DEBUG:on stmt: $const314.1 = const(int, 1)
2024-07-15 06:11:42,033 DEBUG:on stmt: n = wait + $const314.1
2024-07-15 06:11:42,033 DEBUG:on stmt: jump 328
2024-07-15 06:11:42,033 DEBUG:==== SSA block rewrite pass on 324
2024-07-15 06:11:42,033 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B6962550>
2024-07-15 06:11:42,033 DEBUG:on stmt: n.1 = const(int, 1)
2024-07-15 06:11:42,033 DEBUG:on stmt: jump 328
2024-07-15 06:11:42,033 DEBUG:==== SSA block rewrite pass on 328
2024-07-15 06:11:42,033 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B6962550>
2024-07-15 06:11:42,033 DEBUG:on stmt: $332load_attr.2 = getattr(value=x, attr=shape)
2024-07-15 06:11:42,033 DEBUG:on stmt: $const342.3 = const(int, 0)
2024-07-15 06:11:42,033 DEBUG:on stmt: $344binary_subscr.4 = static_getitem(value=$332load_attr.2, index=0, index_var=$const342.3, fn=<built-in function getitem>)
2024-07-15 06:11:42,033 DEBUG:on stmt: $354compare_op.5 = n < $344binary_subscr.4
2024-07-15 06:11:42,033 DEBUG:find_def var='n' stmt=$354compare_op.5 = n < $344binary_subscr.4
2024-07-15 06:11:42,034 DEBUG:find_def_from_top label 328
2024-07-15 06:11:42,034 DEBUG:insert phi node n.5 = phi(incoming_values=[], incoming_blocks=[]) at 328
2024-07-15 06:11:42,034 DEBUG:find_def_from_bottom label 312
2024-07-15 06:11:42,034 DEBUG:incoming_def n = wait + $const314.1
2024-07-15 06:11:42,034 DEBUG:find_def_from_bottom label 324
2024-07-15 06:11:42,034 DEBUG:incoming_def n.1 = const(int, 1)
2024-07-15 06:11:42,034 DEBUG:find_def_from_bottom label 853
2024-07-15 06:11:42,034 DEBUG:find_def_from_top label 853
2024-07-15 06:11:42,034 DEBUG:insert phi node n.6 = phi(incoming_values=[], incoming_blocks=[]) at 853
2024-07-15 06:11:42,034 DEBUG:find_def_from_bottom label 554
2024-07-15 06:11:42,034 DEBUG:incoming_def n.2 = $binop_iadd558.2
2024-07-15 06:11:42,034 DEBUG:find_def_from_bottom label 786
2024-07-15 06:11:42,034 DEBUG:incoming_def n.3 = $binop_iadd790.2
2024-07-15 06:11:42,034 DEBUG:incoming_def n.6 = phi(incoming_values=[Var(n.2, utils.py:1236), Var(n.3, utils.py:1243)], incoming_blocks=[554, 786])
2024-07-15 06:11:42,034 DEBUG:replaced with: $354compare_op.5 = n.5 < $344binary_subscr.4
2024-07-15 06:11:42,035 DEBUG:on stmt: bool360 = global(bool: <class 'bool'>)
2024-07-15 06:11:42,035 DEBUG:on stmt: $360pred = call bool360($354compare_op.5, func=bool360, args=(Var($354compare_op.5, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,035 DEBUG:on stmt: branch $360pred, 362, 852
2024-07-15 06:11:42,035 DEBUG:==== SSA block rewrite pass on 362
2024-07-15 06:11:42,035 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B6962550>
2024-07-15 06:11:42,035 DEBUG:on stmt: $362load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:42,035 DEBUG:on stmt: $374load_attr.2 = getattr(value=$362load_global.0, attr=max)
2024-07-15 06:11:42,035 DEBUG:on stmt: $386load_global.4 = global(max: <built-in function max>)
2024-07-15 06:11:42,035 DEBUG:on stmt: $const398.6 = const(int, 0)
2024-07-15 06:11:42,035 DEBUG:on stmt: $binop_sub404.9 = n - pre_max
2024-07-15 06:11:42,035 DEBUG:find_def var='n' stmt=$binop_sub404.9 = n - pre_max
2024-07-15 06:11:42,036 DEBUG:find_def_from_top label 362
2024-07-15 06:11:42,036 DEBUG:insert phi node n.7 = phi(incoming_values=[], incoming_blocks=[]) at 362
2024-07-15 06:11:42,036 DEBUG:find_def_from_bottom label 328
2024-07-15 06:11:42,036 DEBUG:incoming_def n.5 = phi(incoming_values=[Var(n, utils.py:1225), Var(n.1, utils.py:1227), Var(n.6, utils.py:1229)], incoming_blocks=[312, 324, 853])
2024-07-15 06:11:42,036 DEBUG:find_def_from_bottom label 798
2024-07-15 06:11:42,036 DEBUG:incoming_def n.4 = $binop_iadd808.4
2024-07-15 06:11:42,036 DEBUG:replaced with: $binop_sub404.9 = n.7 - pre_max
2024-07-15 06:11:42,036 DEBUG:on stmt: $412call.10 = call $386load_global.4($const398.6, $binop_sub404.9, func=$386load_global.4, args=[Var($const398.6, utils.py:1230), Var($binop_sub404.9, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,036 DEBUG:on stmt: $422load_global.11 = global(min: <built-in function min>)
2024-07-15 06:11:42,036 DEBUG:on stmt: $binop_add438.15 = n + post_max
2024-07-15 06:11:42,036 DEBUG:find_def var='n' stmt=$binop_add438.15 = n + post_max
2024-07-15 06:11:42,036 DEBUG:replaced with: $binop_add438.15 = n.7 + post_max
2024-07-15 06:11:42,036 DEBUG:on stmt: $444load_attr.17 = getattr(value=x, attr=shape)
2024-07-15 06:11:42,036 DEBUG:on stmt: $const454.18 = const(int, 0)
2024-07-15 06:11:42,036 DEBUG:on stmt: $456binary_subscr.19 = static_getitem(value=$444load_attr.17, index=0, index_var=$const454.18, fn=<built-in function getitem>)
2024-07-15 06:11:42,036 DEBUG:on stmt: $470call.20 = call $422load_global.11($binop_add438.15, $456binary_subscr.19, func=$422load_global.11, args=[Var($binop_add438.15, utils.py:1230), Var($456binary_subscr.19, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,036 DEBUG:on stmt: $480build_slice.21 = global(slice: <class 'slice'>)
2024-07-15 06:11:42,036 DEBUG:on stmt: $480build_slice.22 = call $480build_slice.21($412call.10, $470call.20, func=$480build_slice.21, args=(Var($412call.10, utils.py:1230), Var($470call.20, utils.py:1230)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,037 DEBUG:on stmt: $482binary_subscr.23 = getitem(value=x, index=$480build_slice.22, fn=<built-in function getitem>)
2024-07-15 06:11:42,037 DEBUG:on stmt: maxn = call $374load_attr.2($482binary_subscr.23, func=$374load_attr.2, args=[Var($482binary_subscr.23, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,037 DEBUG:on stmt: $512binary_subscr.27 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-07-15 06:11:42,037 DEBUG:find_def var='n' stmt=$512binary_subscr.27 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-07-15 06:11:42,037 DEBUG:replaced with: $512binary_subscr.27 = getitem(value=x, index=n.7, fn=<built-in function getitem>)
2024-07-15 06:11:42,037 DEBUG:on stmt: $524compare_op.29 = $512binary_subscr.27 == maxn
2024-07-15 06:11:42,037 DEBUG:on stmt: peaks[n] = $524compare_op.29
2024-07-15 06:11:42,037 DEBUG:find_def var='n' stmt=peaks[n] = $524compare_op.29
2024-07-15 06:11:42,037 DEBUG:replaced with: peaks[n.7] = $524compare_op.29
2024-07-15 06:11:42,037 DEBUG:on stmt: $542binary_subscr.34 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-07-15 06:11:42,037 DEBUG:find_def var='n' stmt=$542binary_subscr.34 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-07-15 06:11:42,037 DEBUG:replaced with: $542binary_subscr.34 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)
2024-07-15 06:11:42,037 DEBUG:on stmt: bool552 = global(bool: <class 'bool'>)
2024-07-15 06:11:42,037 DEBUG:on stmt: $552pred = call bool552($542binary_subscr.34, func=bool552, args=(Var($542binary_subscr.34, utils.py:1235),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,037 DEBUG:on stmt: branch $552pred, 566, 554
2024-07-15 06:11:42,037 DEBUG:==== SSA block rewrite pass on 554
2024-07-15 06:11:42,037 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B6962550>
2024-07-15 06:11:42,038 DEBUG:on stmt: $const556.1 = const(int, 1)
2024-07-15 06:11:42,038 DEBUG:on stmt: $binop_iadd558.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const556.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:42,038 DEBUG:find_def var='n' stmt=$binop_iadd558.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const556.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:42,038 DEBUG:find_def_from_top label 554
2024-07-15 06:11:42,038 DEBUG:idom 362 from label 554
2024-07-15 06:11:42,038 DEBUG:find_def_from_bottom label 362
2024-07-15 06:11:42,038 DEBUG:replaced with: $binop_iadd558.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$const556.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:42,038 DEBUG:on stmt: n.2 = $binop_iadd558.2
2024-07-15 06:11:42,038 DEBUG:on stmt: jump 853
2024-07-15 06:11:42,038 DEBUG:==== SSA block rewrite pass on 566
2024-07-15 06:11:42,038 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B6962550>
2024-07-15 06:11:42,038 DEBUG:on stmt: $566load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:42,038 DEBUG:on stmt: $578load_attr.2 = getattr(value=$566load_global.0, attr=mean)
2024-07-15 06:11:42,038 DEBUG:on stmt: $590load_global.4 = global(max: <built-in function max>)
2024-07-15 06:11:42,038 DEBUG:on stmt: $const602.6 = const(int, 0)
2024-07-15 06:11:42,038 DEBUG:on stmt: $binop_sub608.9 = n - pre_avg
2024-07-15 06:11:42,038 DEBUG:find_def var='n' stmt=$binop_sub608.9 = n - pre_avg
2024-07-15 06:11:42,038 DEBUG:find_def_from_top label 566
2024-07-15 06:11:42,038 DEBUG:idom 362 from label 566
2024-07-15 06:11:42,038 DEBUG:find_def_from_bottom label 362
2024-07-15 06:11:42,038 DEBUG:replaced with: $binop_sub608.9 = n.7 - pre_avg
2024-07-15 06:11:42,038 DEBUG:on stmt: $616call.10 = call $590load_global.4($const602.6, $binop_sub608.9, func=$590load_global.4, args=[Var($const602.6, utils.py:1239), Var($binop_sub608.9, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,039 DEBUG:on stmt: $626load_global.11 = global(min: <built-in function min>)
2024-07-15 06:11:42,039 DEBUG:on stmt: $binop_add642.15 = n + post_avg
2024-07-15 06:11:42,039 DEBUG:find_def var='n' stmt=$binop_add642.15 = n + post_avg
2024-07-15 06:11:42,039 DEBUG:find_def_from_top label 566
2024-07-15 06:11:42,039 DEBUG:idom 362 from label 566
2024-07-15 06:11:42,039 DEBUG:find_def_from_bottom label 362
2024-07-15 06:11:42,039 DEBUG:replaced with: $binop_add642.15 = n.7 + post_avg
2024-07-15 06:11:42,039 DEBUG:on stmt: $648load_attr.17 = getattr(value=x, attr=shape)
2024-07-15 06:11:42,039 DEBUG:on stmt: $const658.18 = const(int, 0)
2024-07-15 06:11:42,039 DEBUG:on stmt: $660binary_subscr.19 = static_getitem(value=$648load_attr.17, index=0, index_var=$const658.18, fn=<built-in function getitem>)
2024-07-15 06:11:42,039 DEBUG:on stmt: $674call.20 = call $626load_global.11($binop_add642.15, $660binary_subscr.19, func=$626load_global.11, args=[Var($binop_add642.15, utils.py:1239), Var($660binary_subscr.19, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,039 DEBUG:on stmt: $684build_slice.21 = global(slice: <class 'slice'>)
2024-07-15 06:11:42,039 DEBUG:on stmt: $684build_slice.22 = call $684build_slice.21($616call.10, $674call.20, func=$684build_slice.21, args=(Var($616call.10, utils.py:1239), Var($674call.20, utils.py:1239)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,039 DEBUG:on stmt: $686binary_subscr.23 = getitem(value=x, index=$684build_slice.22, fn=<built-in function getitem>)
2024-07-15 06:11:42,039 DEBUG:on stmt: avgn = call $578load_attr.2($686binary_subscr.23, func=$578load_attr.2, args=[Var($686binary_subscr.23, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,039 DEBUG:on stmt: $720binary_subscr.27 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-07-15 06:11:42,039 DEBUG:find_def var='n' stmt=$720binary_subscr.27 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-07-15 06:11:42,040 DEBUG:find_def_from_top label 566
2024-07-15 06:11:42,040 DEBUG:idom 362 from label 566
2024-07-15 06:11:42,040 DEBUG:find_def_from_bottom label 362
2024-07-15 06:11:42,040 DEBUG:replaced with: $720binary_subscr.27 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)
2024-07-15 06:11:42,040 DEBUG:on stmt: $734binary_subscr.30 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-07-15 06:11:42,040 DEBUG:find_def var='n' stmt=$734binary_subscr.30 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-07-15 06:11:42,040 DEBUG:find_def_from_top label 566
2024-07-15 06:11:42,040 DEBUG:idom 362 from label 566
2024-07-15 06:11:42,040 DEBUG:find_def_from_bottom label 362
2024-07-15 06:11:42,040 DEBUG:replaced with: $734binary_subscr.30 = getitem(value=x, index=n.7, fn=<built-in function getitem>)
2024-07-15 06:11:42,040 DEBUG:on stmt: $binop_add748.33 = avgn + delta
2024-07-15 06:11:42,040 DEBUG:on stmt: $752compare_op.34 = $734binary_subscr.30 >= $binop_add748.33
2024-07-15 06:11:42,040 DEBUG:on stmt: $binop_iand758.35 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$720binary_subscr.27, rhs=$752compare_op.34, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:42,040 DEBUG:on stmt: peaks[n] = $binop_iand758.35
2024-07-15 06:11:42,040 DEBUG:find_def var='n' stmt=peaks[n] = $binop_iand758.35
2024-07-15 06:11:42,040 DEBUG:find_def_from_top label 566
2024-07-15 06:11:42,040 DEBUG:idom 362 from label 566
2024-07-15 06:11:42,040 DEBUG:find_def_from_bottom label 362
2024-07-15 06:11:42,040 DEBUG:replaced with: peaks[n.7] = $binop_iand758.35
2024-07-15 06:11:42,041 DEBUG:on stmt: $774binary_subscr.38 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-07-15 06:11:42,041 DEBUG:find_def var='n' stmt=$774binary_subscr.38 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-07-15 06:11:42,041 DEBUG:find_def_from_top label 566
2024-07-15 06:11:42,041 DEBUG:idom 362 from label 566
2024-07-15 06:11:42,041 DEBUG:find_def_from_bottom label 362
2024-07-15 06:11:42,041 DEBUG:replaced with: $774binary_subscr.38 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)
2024-07-15 06:11:42,041 DEBUG:on stmt: bool784 = global(bool: <class 'bool'>)
2024-07-15 06:11:42,041 DEBUG:on stmt: $784pred = call bool784($774binary_subscr.38, func=bool784, args=(Var($774binary_subscr.38, utils.py:1242),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,041 DEBUG:on stmt: branch $784pred, 798, 786
2024-07-15 06:11:42,041 DEBUG:==== SSA block rewrite pass on 786
2024-07-15 06:11:42,041 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B6962550>
2024-07-15 06:11:42,041 DEBUG:on stmt: $const788.1 = const(int, 1)
2024-07-15 06:11:42,041 DEBUG:on stmt: $binop_iadd790.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const788.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:42,041 DEBUG:find_def var='n' stmt=$binop_iadd790.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const788.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:42,041 DEBUG:find_def_from_top label 786
2024-07-15 06:11:42,041 DEBUG:idom 566 from label 786
2024-07-15 06:11:42,041 DEBUG:find_def_from_bottom label 566
2024-07-15 06:11:42,041 DEBUG:find_def_from_top label 566
2024-07-15 06:11:42,041 DEBUG:idom 362 from label 566
2024-07-15 06:11:42,041 DEBUG:find_def_from_bottom label 362
2024-07-15 06:11:42,041 DEBUG:replaced with: $binop_iadd790.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$const788.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:42,042 DEBUG:on stmt: n.3 = $binop_iadd790.2
2024-07-15 06:11:42,042 DEBUG:on stmt: jump 853
2024-07-15 06:11:42,042 DEBUG:==== SSA block rewrite pass on 798
2024-07-15 06:11:42,042 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B6962550>
2024-07-15 06:11:42,042 DEBUG:on stmt: $const802.2 = const(int, 1)
2024-07-15 06:11:42,042 DEBUG:on stmt: $binop_add804.3 = wait + $const802.2
2024-07-15 06:11:42,042 DEBUG:on stmt: $binop_iadd808.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$binop_add804.3, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:42,042 DEBUG:find_def var='n' stmt=$binop_iadd808.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$binop_add804.3, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:42,042 DEBUG:find_def_from_top label 798
2024-07-15 06:11:42,042 DEBUG:idom 566 from label 798
2024-07-15 06:11:42,042 DEBUG:find_def_from_bottom label 566
2024-07-15 06:11:42,042 DEBUG:find_def_from_top label 566
2024-07-15 06:11:42,042 DEBUG:idom 362 from label 566
2024-07-15 06:11:42,042 DEBUG:find_def_from_bottom label 362
2024-07-15 06:11:42,042 DEBUG:replaced with: $binop_iadd808.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$binop_add804.3, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:42,042 DEBUG:on stmt: n.4 = $binop_iadd808.4
2024-07-15 06:11:42,042 DEBUG:on stmt: $818load_attr.7 = getattr(value=x, attr=shape)
2024-07-15 06:11:42,042 DEBUG:on stmt: $const828.8 = const(int, 0)
2024-07-15 06:11:42,042 DEBUG:on stmt: $830binary_subscr.9 = static_getitem(value=$818load_attr.7, index=0, index_var=$const828.8, fn=<built-in function getitem>)
2024-07-15 06:11:42,042 DEBUG:on stmt: $840compare_op.10 = n < $830binary_subscr.9
2024-07-15 06:11:42,042 DEBUG:find_def var='n' stmt=$840compare_op.10 = n < $830binary_subscr.9
2024-07-15 06:11:42,043 DEBUG:replaced with: $840compare_op.10 = n.4 < $830binary_subscr.9
2024-07-15 06:11:42,043 DEBUG:on stmt: bool846 = global(bool: <class 'bool'>)
2024-07-15 06:11:42,043 DEBUG:on stmt: $846pred = call bool846($840compare_op.10, func=bool846, args=(Var($840compare_op.10, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,043 DEBUG:on stmt: branch $846pred, 362, 848
2024-07-15 06:11:42,043 DEBUG:==== SSA block rewrite pass on 848
2024-07-15 06:11:42,043 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B6962550>
2024-07-15 06:11:42,043 DEBUG:on stmt: $const848.0 = const(NoneType, None)
2024-07-15 06:11:42,043 DEBUG:on stmt: $850return_value.1 = cast(value=$const848.0)
2024-07-15 06:11:42,043 DEBUG:on stmt: return $850return_value.1
2024-07-15 06:11:42,043 DEBUG:==== SSA block rewrite pass on 852
2024-07-15 06:11:42,043 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B6962550>
2024-07-15 06:11:42,043 DEBUG:on stmt: $const852.0 = const(NoneType, None)
2024-07-15 06:11:42,043 DEBUG:on stmt: $854return_value.1 = cast(value=$const852.0)
2024-07-15 06:11:42,043 DEBUG:on stmt: return $854return_value.1
2024-07-15 06:11:42,044 DEBUG:==== SSA block rewrite pass on 853
2024-07-15 06:11:42,044 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B6962550>
2024-07-15 06:11:42,044 DEBUG:on stmt: jump 328
2024-07-15 06:11:42,075 DEBUG:bytecode dump:
>          0	NOP(arg=None, lineno=570)
           2	COPY_FREE_VARS(arg=2, lineno=570)
           4	RESUME(arg=0, lineno=570)
           6	LOAD_FAST(arg=0, lineno=571)
           8	LOAD_ATTR(arg=0, lineno=571)
          18	LOAD_CONST(arg=1, lineno=571)
          20	COMPARE_OP(arg=2, lineno=571)
          26	POP_JUMP_FORWARD_IF_FALSE(arg=15, lineno=571)
          28	LOAD_GLOBAL(arg=3, lineno=572)
          40	LOAD_CONST(arg=2, lineno=572)
          42	PRECALL(arg=1, lineno=572)
          46	CALL(arg=1, lineno=572)
          56	RAISE_VARARGS(arg=1, lineno=572)
>         58	LOAD_GLOBAL(arg=5, lineno=575)
          70	LOAD_ATTR(arg=3, lineno=575)
          80	LOAD_FAST(arg=0, lineno=575)
          82	PRECALL(arg=1, lineno=575)
          86	CALL(arg=1, lineno=575)
          96	STORE_FAST(arg=1, lineno=575)
          98	LOAD_GLOBAL(arg=9, lineno=576)
         110	LOAD_FAST(arg=1, lineno=576)
         112	PRECALL(arg=1, lineno=576)
         116	CALL(arg=1, lineno=576)
         126	LOAD_METHOD(arg=5, lineno=576)
         148	LOAD_CONST(arg=1, lineno=576)
         150	PRECALL(arg=1, lineno=576)
         154	CALL(arg=1, lineno=576)
         164	STORE_FAST(arg=2, lineno=576)
         166	PUSH_NULL(arg=None, lineno=577)
         168	LOAD_DEREF(arg=6, lineno=577)
         170	LOAD_FAST(arg=2, lineno=577)
         172	PRECALL(arg=1, lineno=577)
         176	CALL(arg=1, lineno=577)
         186	POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=577)
         188	LOAD_FAST(arg=2, lineno=578)
         190	RETURN_VALUE(arg=None, lineno=578)
>        192	LOAD_FAST(arg=1, lineno=580)
         194	GET_ITER(arg=None, lineno=580)
>        196	FOR_ITER(arg=51, lineno=580)
         198	STORE_FAST(arg=3, lineno=580)
         200	LOAD_FAST(arg=3, lineno=581)
         202	LOAD_METHOD(arg=6, lineno=581)
         224	PRECALL(arg=0, lineno=581)
         228	CALL(arg=0, lineno=581)
         238	STORE_FAST(arg=4, lineno=581)
         240	PUSH_NULL(arg=None, lineno=582)
         242	LOAD_DEREF(arg=6, lineno=582)
         244	LOAD_FAST(arg=4, lineno=582)
         246	PRECALL(arg=1, lineno=582)
         250	CALL(arg=1, lineno=582)
         260	POP_JUMP_FORWARD_IF_FALSE(arg=4, lineno=582)
         262	LOAD_FAST(arg=4, lineno=583)
         264	SWAP(arg=2, lineno=583)
         266	POP_TOP(arg=None, lineno=583)
         268	RETURN_VALUE(arg=None, lineno=583)
>        270	PUSH_NULL(arg=None, lineno=584)
         272	LOAD_DEREF(arg=5, lineno=584)
         274	LOAD_FAST(arg=4, lineno=584)
         276	LOAD_FAST(arg=2, lineno=584)
         278	PRECALL(arg=2, lineno=584)
         282	CALL(arg=2, lineno=584)
         292	POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=584)
         294	LOAD_FAST(arg=4, lineno=585)
         296	STORE_FAST(arg=2, lineno=585)
>        298	JUMP_BACKWARD(arg=52, lineno=585)
>        300	LOAD_FAST(arg=2, lineno=586)
         302	RETURN_VALUE(arg=None, lineno=586)
2024-07-15 06:11:42,075 DEBUG:pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-15 06:11:42,075 DEBUG:stack: []
2024-07-15 06:11:42,075 DEBUG:state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-15 06:11:42,075 DEBUG:dispatch pc=0, inst=NOP(arg=None, lineno=570)
2024-07-15 06:11:42,075 DEBUG:stack []
2024-07-15 06:11:42,075 DEBUG:dispatch pc=2, inst=COPY_FREE_VARS(arg=2, lineno=570)
2024-07-15 06:11:42,075 DEBUG:stack []
2024-07-15 06:11:42,075 DEBUG:dispatch pc=4, inst=RESUME(arg=0, lineno=570)
2024-07-15 06:11:42,076 DEBUG:stack []
2024-07-15 06:11:42,076 DEBUG:dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=571)
2024-07-15 06:11:42,076 DEBUG:stack []
2024-07-15 06:11:42,076 DEBUG:dispatch pc=8, inst=LOAD_ATTR(arg=0, lineno=571)
2024-07-15 06:11:42,076 DEBUG:stack ['$a6.0']
2024-07-15 06:11:42,076 DEBUG:dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=571)
2024-07-15 06:11:42,076 DEBUG:stack ['$8load_attr.1']
2024-07-15 06:11:42,076 DEBUG:dispatch pc=20, inst=COMPARE_OP(arg=2, lineno=571)
2024-07-15 06:11:42,076 DEBUG:stack ['$8load_attr.1', '$const18.2']
2024-07-15 06:11:42,076 DEBUG:dispatch pc=26, inst=POP_JUMP_FORWARD_IF_FALSE(arg=15, lineno=571)
2024-07-15 06:11:42,076 DEBUG:stack ['$20compare_op.3']
2024-07-15 06:11:42,076 DEBUG:end state. edges=[Edge(pc=28, stack=(), blockstack=(), npush=0), Edge(pc=58, stack=(), blockstack=(), npush=0)]
2024-07-15 06:11:42,076 DEBUG:pending: deque([State(pc_initial=28 nstack_initial=0), State(pc_initial=58 nstack_initial=0)])
2024-07-15 06:11:42,077 DEBUG:stack: []
2024-07-15 06:11:42,077 DEBUG:state.pc_initial: State(pc_initial=28 nstack_initial=0)
2024-07-15 06:11:42,077 DEBUG:dispatch pc=28, inst=LOAD_GLOBAL(arg=3, lineno=572)
2024-07-15 06:11:42,077 DEBUG:stack []
2024-07-15 06:11:42,077 DEBUG:dispatch pc=40, inst=LOAD_CONST(arg=2, lineno=572)
2024-07-15 06:11:42,077 DEBUG:stack ['$null$28.1', '$28load_global.0']
2024-07-15 06:11:42,077 DEBUG:dispatch pc=42, inst=PRECALL(arg=1, lineno=572)
2024-07-15 06:11:42,077 DEBUG:stack ['$null$28.1', '$28load_global.0', '$const40.2']
2024-07-15 06:11:42,077 DEBUG:dispatch pc=46, inst=CALL(arg=1, lineno=572)
2024-07-15 06:11:42,077 DEBUG:stack ['$null$28.1', '$28load_global.0', '$const40.2']
2024-07-15 06:11:42,077 DEBUG:dispatch pc=56, inst=RAISE_VARARGS(arg=1, lineno=572)
2024-07-15 06:11:42,077 DEBUG:stack ['$46call.3']
2024-07-15 06:11:42,078 DEBUG:end state. edges=[]
2024-07-15 06:11:42,078 DEBUG:pending: deque([State(pc_initial=58 nstack_initial=0)])
2024-07-15 06:11:42,078 DEBUG:stack: []
2024-07-15 06:11:42,078 DEBUG:state.pc_initial: State(pc_initial=58 nstack_initial=0)
2024-07-15 06:11:42,078 DEBUG:dispatch pc=58, inst=LOAD_GLOBAL(arg=5, lineno=575)
2024-07-15 06:11:42,078 DEBUG:stack []
2024-07-15 06:11:42,078 DEBUG:dispatch pc=70, inst=LOAD_ATTR(arg=3, lineno=575)
2024-07-15 06:11:42,079 DEBUG:stack ['$null$58.1', '$58load_global.0']
2024-07-15 06:11:42,079 DEBUG:dispatch pc=80, inst=LOAD_FAST(arg=0, lineno=575)
2024-07-15 06:11:42,079 DEBUG:stack ['$null$58.1', '$70load_attr.2']
2024-07-15 06:11:42,079 DEBUG:dispatch pc=82, inst=PRECALL(arg=1, lineno=575)
2024-07-15 06:11:42,079 DEBUG:stack ['$null$58.1', '$70load_attr.2', '$a80.3']
2024-07-15 06:11:42,079 DEBUG:dispatch pc=86, inst=CALL(arg=1, lineno=575)
2024-07-15 06:11:42,079 DEBUG:stack ['$null$58.1', '$70load_attr.2', '$a80.3']
2024-07-15 06:11:42,079 DEBUG:dispatch pc=96, inst=STORE_FAST(arg=1, lineno=575)
2024-07-15 06:11:42,079 DEBUG:stack ['$86call.4']
2024-07-15 06:11:42,079 DEBUG:dispatch pc=98, inst=LOAD_GLOBAL(arg=9, lineno=576)
2024-07-15 06:11:42,080 DEBUG:stack []
2024-07-15 06:11:42,080 DEBUG:dispatch pc=110, inst=LOAD_FAST(arg=1, lineno=576)
2024-07-15 06:11:42,080 DEBUG:stack ['$null$98.6', '$98load_global.5']
2024-07-15 06:11:42,080 DEBUG:dispatch pc=112, inst=PRECALL(arg=1, lineno=576)
2024-07-15 06:11:42,080 DEBUG:stack ['$null$98.6', '$98load_global.5', '$it110.7']
2024-07-15 06:11:42,080 DEBUG:dispatch pc=116, inst=CALL(arg=1, lineno=576)
2024-07-15 06:11:42,080 DEBUG:stack ['$null$98.6', '$98load_global.5', '$it110.7']
2024-07-15 06:11:42,080 DEBUG:dispatch pc=126, inst=LOAD_METHOD(arg=5, lineno=576)
2024-07-15 06:11:42,080 DEBUG:stack ['$116call.8']
2024-07-15 06:11:42,080 DEBUG:dispatch pc=148, inst=LOAD_CONST(arg=1, lineno=576)
2024-07-15 06:11:42,080 DEBUG:stack ['$null$126.9', '$126load_method.10']
2024-07-15 06:11:42,080 DEBUG:dispatch pc=150, inst=PRECALL(arg=1, lineno=576)
2024-07-15 06:11:42,080 DEBUG:stack ['$null$126.9', '$126load_method.10', '$const148.11']
2024-07-15 06:11:42,080 DEBUG:dispatch pc=154, inst=CALL(arg=1, lineno=576)
2024-07-15 06:11:42,080 DEBUG:stack ['$null$126.9', '$126load_method.10', '$const148.11']
2024-07-15 06:11:42,080 DEBUG:dispatch pc=164, inst=STORE_FAST(arg=2, lineno=576)
2024-07-15 06:11:42,080 DEBUG:stack ['$154call.12']
2024-07-15 06:11:42,081 DEBUG:dispatch pc=166, inst=PUSH_NULL(arg=None, lineno=577)
2024-07-15 06:11:42,081 DEBUG:stack []
2024-07-15 06:11:42,081 DEBUG:dispatch pc=168, inst=LOAD_DEREF(arg=6, lineno=577)
2024-07-15 06:11:42,081 DEBUG:stack ['$null$166.13']
2024-07-15 06:11:42,081 DEBUG:dispatch pc=170, inst=LOAD_FAST(arg=2, lineno=577)
2024-07-15 06:11:42,081 DEBUG:stack ['$null$166.13', '$168load_deref.14']
2024-07-15 06:11:42,081 DEBUG:dispatch pc=172, inst=PRECALL(arg=1, lineno=577)
2024-07-15 06:11:42,081 DEBUG:stack ['$null$166.13', '$168load_deref.14', '$max_value170.15']
2024-07-15 06:11:42,081 DEBUG:dispatch pc=176, inst=CALL(arg=1, lineno=577)
2024-07-15 06:11:42,081 DEBUG:stack ['$null$166.13', '$168load_deref.14', '$max_value170.15']
2024-07-15 06:11:42,081 DEBUG:dispatch pc=186, inst=POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=577)
2024-07-15 06:11:42,081 DEBUG:stack ['$176call.16']
2024-07-15 06:11:42,081 DEBUG:end state. edges=[Edge(pc=188, stack=(), blockstack=(), npush=0), Edge(pc=192, stack=(), blockstack=(), npush=0)]
2024-07-15 06:11:42,081 DEBUG:pending: deque([State(pc_initial=188 nstack_initial=0), State(pc_initial=192 nstack_initial=0)])
2024-07-15 06:11:42,081 DEBUG:stack: []
2024-07-15 06:11:42,081 DEBUG:state.pc_initial: State(pc_initial=188 nstack_initial=0)
2024-07-15 06:11:42,081 DEBUG:dispatch pc=188, inst=LOAD_FAST(arg=2, lineno=578)
2024-07-15 06:11:42,081 DEBUG:stack []
2024-07-15 06:11:42,081 DEBUG:dispatch pc=190, inst=RETURN_VALUE(arg=None, lineno=578)
2024-07-15 06:11:42,081 DEBUG:stack ['$max_value188.0']
2024-07-15 06:11:42,081 DEBUG:end state. edges=[]
2024-07-15 06:11:42,081 DEBUG:pending: deque([State(pc_initial=192 nstack_initial=0)])
2024-07-15 06:11:42,081 DEBUG:stack: []
2024-07-15 06:11:42,081 DEBUG:state.pc_initial: State(pc_initial=192 nstack_initial=0)
2024-07-15 06:11:42,081 DEBUG:dispatch pc=192, inst=LOAD_FAST(arg=1, lineno=580)
2024-07-15 06:11:42,081 DEBUG:stack []
2024-07-15 06:11:42,081 DEBUG:dispatch pc=194, inst=GET_ITER(arg=None, lineno=580)
2024-07-15 06:11:42,081 DEBUG:stack ['$it192.0']
2024-07-15 06:11:42,082 DEBUG:end state. edges=[Edge(pc=196, stack=('$194get_iter.1',), blockstack=(), npush=0)]
2024-07-15 06:11:42,082 DEBUG:pending: deque([State(pc_initial=196 nstack_initial=1)])
2024-07-15 06:11:42,082 DEBUG:stack: ['$phi196.0']
2024-07-15 06:11:42,082 DEBUG:state.pc_initial: State(pc_initial=196 nstack_initial=1)
2024-07-15 06:11:42,082 DEBUG:dispatch pc=196, inst=FOR_ITER(arg=51, lineno=580)
2024-07-15 06:11:42,082 DEBUG:stack ['$phi196.0']
2024-07-15 06:11:42,082 DEBUG:end state. edges=[Edge(pc=300, stack=(), blockstack=(), npush=0), Edge(pc=198, stack=('$phi196.0', '$196for_iter.2'), blockstack=(), npush=0)]
2024-07-15 06:11:42,082 DEBUG:pending: deque([State(pc_initial=300 nstack_initial=0), State(pc_initial=198 nstack_initial=2)])
2024-07-15 06:11:42,082 DEBUG:stack: []
2024-07-15 06:11:42,082 DEBUG:state.pc_initial: State(pc_initial=300 nstack_initial=0)
2024-07-15 06:11:42,082 DEBUG:dispatch pc=300, inst=LOAD_FAST(arg=2, lineno=586)
2024-07-15 06:11:42,082 DEBUG:stack []
2024-07-15 06:11:42,082 DEBUG:dispatch pc=302, inst=RETURN_VALUE(arg=None, lineno=586)
2024-07-15 06:11:42,082 DEBUG:stack ['$max_value300.0']
2024-07-15 06:11:42,082 DEBUG:end state. edges=[]
2024-07-15 06:11:42,082 DEBUG:pending: deque([State(pc_initial=198 nstack_initial=2)])
2024-07-15 06:11:42,082 DEBUG:stack: ['$phi198.0', '$phi198.1']
2024-07-15 06:11:42,082 DEBUG:state.pc_initial: State(pc_initial=198 nstack_initial=2)
2024-07-15 06:11:42,082 DEBUG:dispatch pc=198, inst=STORE_FAST(arg=3, lineno=580)
2024-07-15 06:11:42,082 DEBUG:stack ['$phi198.0', '$phi198.1']
2024-07-15 06:11:42,082 DEBUG:dispatch pc=200, inst=LOAD_FAST(arg=3, lineno=581)
2024-07-15 06:11:42,082 DEBUG:stack ['$phi198.0']
2024-07-15 06:11:42,082 DEBUG:dispatch pc=202, inst=LOAD_METHOD(arg=6, lineno=581)
2024-07-15 06:11:42,082 DEBUG:stack ['$phi198.0', '$view200.2']
2024-07-15 06:11:42,082 DEBUG:dispatch pc=224, inst=PRECALL(arg=0, lineno=581)
2024-07-15 06:11:42,082 DEBUG:stack ['$phi198.0', '$null$202.3', '$202load_method.4']
2024-07-15 06:11:42,082 DEBUG:dispatch pc=228, inst=CALL(arg=0, lineno=581)
2024-07-15 06:11:42,082 DEBUG:stack ['$phi198.0', '$null$202.3', '$202load_method.4']
2024-07-15 06:11:42,082 DEBUG:dispatch pc=238, inst=STORE_FAST(arg=4, lineno=581)
2024-07-15 06:11:42,082 DEBUG:stack ['$phi198.0', '$228call.5']
2024-07-15 06:11:42,083 DEBUG:dispatch pc=240, inst=PUSH_NULL(arg=None, lineno=582)
2024-07-15 06:11:42,083 DEBUG:stack ['$phi198.0']
2024-07-15 06:11:42,083 DEBUG:dispatch pc=242, inst=LOAD_DEREF(arg=6, lineno=582)
2024-07-15 06:11:42,083 DEBUG:stack ['$phi198.0', '$null$240.6']
2024-07-15 06:11:42,083 DEBUG:dispatch pc=244, inst=LOAD_FAST(arg=4, lineno=582)
2024-07-15 06:11:42,083 DEBUG:stack ['$phi198.0', '$null$240.6', '$242load_deref.7']
2024-07-15 06:11:42,083 DEBUG:dispatch pc=246, inst=PRECALL(arg=1, lineno=582)
2024-07-15 06:11:42,083 DEBUG:stack ['$phi198.0', '$null$240.6', '$242load_deref.7', '$v244.8']
2024-07-15 06:11:42,083 DEBUG:dispatch pc=250, inst=CALL(arg=1, lineno=582)
2024-07-15 06:11:42,083 DEBUG:stack ['$phi198.0', '$null$240.6', '$242load_deref.7', '$v244.8']
2024-07-15 06:11:42,083 DEBUG:dispatch pc=260, inst=POP_JUMP_FORWARD_IF_FALSE(arg=4, lineno=582)
2024-07-15 06:11:42,083 DEBUG:stack ['$phi198.0', '$250call.9']
2024-07-15 06:11:42,083 DEBUG:end state. edges=[Edge(pc=262, stack=('$phi198.0',), blockstack=(), npush=0), Edge(pc=270, stack=('$phi198.0',), blockstack=(), npush=0)]
2024-07-15 06:11:42,083 DEBUG:pending: deque([State(pc_initial=262 nstack_initial=1), State(pc_initial=270 nstack_initial=1)])
2024-07-15 06:11:42,083 DEBUG:stack: ['$phi262.0']
2024-07-15 06:11:42,083 DEBUG:state.pc_initial: State(pc_initial=262 nstack_initial=1)
2024-07-15 06:11:42,083 DEBUG:dispatch pc=262, inst=LOAD_FAST(arg=4, lineno=583)
2024-07-15 06:11:42,083 DEBUG:stack ['$phi262.0']
2024-07-15 06:11:42,083 DEBUG:dispatch pc=264, inst=SWAP(arg=2, lineno=583)
2024-07-15 06:11:42,083 DEBUG:stack ['$phi262.0', '$v262.1']
2024-07-15 06:11:42,083 DEBUG:dispatch pc=266, inst=POP_TOP(arg=None, lineno=583)
2024-07-15 06:11:42,083 DEBUG:stack ['$v262.1', '$phi262.0']
2024-07-15 06:11:42,083 DEBUG:dispatch pc=268, inst=RETURN_VALUE(arg=None, lineno=583)
2024-07-15 06:11:42,083 DEBUG:stack ['$v262.1']
2024-07-15 06:11:42,083 DEBUG:end state. edges=[]
2024-07-15 06:11:42,083 DEBUG:pending: deque([State(pc_initial=270 nstack_initial=1)])
2024-07-15 06:11:42,083 DEBUG:stack: ['$phi270.0']
2024-07-15 06:11:42,083 DEBUG:state.pc_initial: State(pc_initial=270 nstack_initial=1)
2024-07-15 06:11:42,083 DEBUG:dispatch pc=270, inst=PUSH_NULL(arg=None, lineno=584)
2024-07-15 06:11:42,083 DEBUG:stack ['$phi270.0']
2024-07-15 06:11:42,083 DEBUG:dispatch pc=272, inst=LOAD_DEREF(arg=5, lineno=584)
2024-07-15 06:11:42,083 DEBUG:stack ['$phi270.0', '$null$270.1']
2024-07-15 06:11:42,083 DEBUG:dispatch pc=274, inst=LOAD_FAST(arg=4, lineno=584)
2024-07-15 06:11:42,083 DEBUG:stack ['$phi270.0', '$null$270.1', '$272load_deref.2']
2024-07-15 06:11:42,084 DEBUG:dispatch pc=276, inst=LOAD_FAST(arg=2, lineno=584)
2024-07-15 06:11:42,084 DEBUG:stack ['$phi270.0', '$null$270.1', '$272load_deref.2', '$v274.3']
2024-07-15 06:11:42,084 DEBUG:dispatch pc=278, inst=PRECALL(arg=2, lineno=584)
2024-07-15 06:11:42,084 DEBUG:stack ['$phi270.0', '$null$270.1', '$272load_deref.2', '$v274.3', '$max_value276.4']
2024-07-15 06:11:42,084 DEBUG:dispatch pc=282, inst=CALL(arg=2, lineno=584)
2024-07-15 06:11:42,084 DEBUG:stack ['$phi270.0', '$null$270.1', '$272load_deref.2', '$v274.3', '$max_value276.4']
2024-07-15 06:11:42,084 DEBUG:dispatch pc=292, inst=POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=584)
2024-07-15 06:11:42,084 DEBUG:stack ['$phi270.0', '$282call.5']
2024-07-15 06:11:42,084 DEBUG:end state. edges=[Edge(pc=294, stack=('$phi270.0',), blockstack=(), npush=0), Edge(pc=298, stack=('$phi270.0',), blockstack=(), npush=0)]
2024-07-15 06:11:42,084 DEBUG:pending: deque([State(pc_initial=294 nstack_initial=1), State(pc_initial=298 nstack_initial=1)])
2024-07-15 06:11:42,084 DEBUG:stack: ['$phi294.0']
2024-07-15 06:11:42,084 DEBUG:state.pc_initial: State(pc_initial=294 nstack_initial=1)
2024-07-15 06:11:42,084 DEBUG:dispatch pc=294, inst=LOAD_FAST(arg=4, lineno=585)
2024-07-15 06:11:42,084 DEBUG:stack ['$phi294.0']
2024-07-15 06:11:42,084 DEBUG:dispatch pc=296, inst=STORE_FAST(arg=2, lineno=585)
2024-07-15 06:11:42,084 DEBUG:stack ['$phi294.0', '$v294.1']
2024-07-15 06:11:42,084 DEBUG:end state. edges=[Edge(pc=298, stack=('$phi294.0',), blockstack=(), npush=0)]
2024-07-15 06:11:42,084 DEBUG:pending: deque([State(pc_initial=298 nstack_initial=1), State(pc_initial=298 nstack_initial=1)])
2024-07-15 06:11:42,084 DEBUG:stack: ['$phi298.0']
2024-07-15 06:11:42,084 DEBUG:state.pc_initial: State(pc_initial=298 nstack_initial=1)
2024-07-15 06:11:42,084 DEBUG:dispatch pc=298, inst=JUMP_BACKWARD(arg=52, lineno=585)
2024-07-15 06:11:42,084 DEBUG:stack ['$phi298.0']
2024-07-15 06:11:42,084 DEBUG:end state. edges=[Edge(pc=196, stack=('$phi298.0',), blockstack=(), npush=0)]
2024-07-15 06:11:42,084 DEBUG:pending: deque([State(pc_initial=298 nstack_initial=1), State(pc_initial=196 nstack_initial=1)])
2024-07-15 06:11:42,084 DEBUG:pending: deque([State(pc_initial=196 nstack_initial=1)])
2024-07-15 06:11:42,084 DEBUG:-------------------------Prune PHIs-------------------------
2024-07-15 06:11:42,084 DEBUG:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=28 nstack_initial=0): set(),
             State(pc_initial=58 nstack_initial=0): set(),
             State(pc_initial=188 nstack_initial=0): set(),
             State(pc_initial=192 nstack_initial=0): set(),
             State(pc_initial=196 nstack_initial=1): {'$phi196.0'},
             State(pc_initial=198 nstack_initial=2): {'$phi198.1'},
             State(pc_initial=262 nstack_initial=1): set(),
             State(pc_initial=270 nstack_initial=1): set(),
             State(pc_initial=294 nstack_initial=1): set(),
             State(pc_initial=298 nstack_initial=1): set(),
             State(pc_initial=300 nstack_initial=0): set()})
2024-07-15 06:11:42,085 DEBUG:defmap: {'$phi196.0': State(pc_initial=192 nstack_initial=0),
 '$phi198.1': State(pc_initial=196 nstack_initial=1)}
2024-07-15 06:11:42,085 DEBUG:phismap: defaultdict(<class 'set'>,
            {'$phi196.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0)),
                           ('$phi298.0',
                            State(pc_initial=298 nstack_initial=1))},
             '$phi198.0': {('$phi196.0',
                            State(pc_initial=196 nstack_initial=1))},
             '$phi198.1': {('$196for_iter.2',
                            State(pc_initial=196 nstack_initial=1))},
             '$phi262.0': {('$phi198.0',
                            State(pc_initial=198 nstack_initial=2))},
             '$phi270.0': {('$phi198.0',
                            State(pc_initial=198 nstack_initial=2))},
             '$phi294.0': {('$phi270.0',
                            State(pc_initial=270 nstack_initial=1))},
             '$phi298.0': {('$phi270.0',
                            State(pc_initial=270 nstack_initial=1)),
                           ('$phi294.0',
                            State(pc_initial=294 nstack_initial=1))}})
2024-07-15 06:11:42,085 DEBUG:changing phismap: defaultdict(<class 'set'>,
            {'$phi196.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0)),
                           ('$phi270.0',
                            State(pc_initial=270 nstack_initial=1)),
                           ('$phi294.0',
                            State(pc_initial=294 nstack_initial=1))},
             '$phi198.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0)),
                           ('$phi270.0',
                            State(pc_initial=270 nstack_initial=1)),
                           ('$phi294.0',
                            State(pc_initial=294 nstack_initial=1))},
             '$phi198.1': {('$196for_iter.2',
                            State(pc_initial=196 nstack_initial=1))},
             '$phi262.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0)),
                           ('$phi270.0',
                            State(pc_initial=270 nstack_initial=1)),
                           ('$phi294.0',
                            State(pc_initial=294 nstack_initial=1))},
             '$phi270.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0)),
                           ('$phi270.0',
                            State(pc_initial=270 nstack_initial=1)),
                           ('$phi294.0',
                            State(pc_initial=294 nstack_initial=1))},
             '$phi294.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0)),
                           ('$phi294.0',
                            State(pc_initial=294 nstack_initial=1))},
             '$phi298.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))}})
2024-07-15 06:11:42,085 DEBUG:changing phismap: defaultdict(<class 'set'>,
            {'$phi196.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi198.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi198.1': {('$196for_iter.2',
                            State(pc_initial=196 nstack_initial=1))},
             '$phi262.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi270.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi294.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi298.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))}})
2024-07-15 06:11:42,085 DEBUG:changing phismap: defaultdict(<class 'set'>,
            {'$phi196.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi198.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi198.1': {('$196for_iter.2',
                            State(pc_initial=196 nstack_initial=1))},
             '$phi262.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi270.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi294.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi298.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))}})
2024-07-15 06:11:42,086 DEBUG:keep phismap: {'$phi196.0': {('$194get_iter.1', State(pc_initial=192 nstack_initial=0))},
 '$phi198.1': {('$196for_iter.2', State(pc_initial=196 nstack_initial=1))}}
2024-07-15 06:11:42,086 DEBUG:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=192 nstack_initial=0): {'$phi196.0': '$194get_iter.1'},
             State(pc_initial=196 nstack_initial=1): {'$phi198.1': '$196for_iter.2'}})
2024-07-15 06:11:42,086 DEBUG:----------------------DONE Prune PHIs-----------------------
2024-07-15 06:11:42,086 DEBUG:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {}), (6, {'res': '$a6.0'}), (8, {'item': '$a6.0', 'res': '$8load_attr.1'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'res': '$const18.2'}), (20, {'lhs': '$8load_attr.1', 'rhs': '$const18.2', 'res': '$20compare_op.3'}), (22, {}), (24, {}), (26, {'pred': '$20compare_op.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={28: (), 58: ()})
2024-07-15 06:11:42,086 DEBUG:block_infos State(pc_initial=28 nstack_initial=0):
AdaptBlockInfo(insts=((28, {'idx': 1, 'res': '$28load_global.0'}), (30, {}), (32, {}), (34, {}), (36, {}), (38, {}), (40, {'res': '$const40.2'}), (42, {}), (44, {}), (46, {'func': '$28load_global.0', 'args': ['$const40.2'], 'kw_names': None, 'res': '$46call.3'}), (48, {}), (50, {}), (52, {}), (54, {}), (56, {'exc': '$46call.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-15 06:11:42,086 DEBUG:block_infos State(pc_initial=58 nstack_initial=0):
AdaptBlockInfo(insts=((58, {'idx': 2, 'res': '$58load_global.0'}), (60, {}), (62, {}), (64, {}), (66, {}), (68, {}), (70, {'item': '$58load_global.0', 'res': '$70load_attr.2'}), (72, {}), (74, {}), (76, {}), (78, {}), (80, {'res': '$a80.3'}), (82, {}), (84, {}), (86, {'func': '$70load_attr.2', 'args': ['$a80.3'], 'kw_names': None, 'res': '$86call.4'}), (88, {}), (90, {}), (92, {}), (94, {}), (96, {'value': '$86call.4'}), (98, {'idx': 4, 'res': '$98load_global.5'}), (100, {}), (102, {}), (104, {}), (106, {}), (108, {}), (110, {'res': '$it110.7'}), (112, {}), (114, {}), (116, {'func': '$98load_global.5', 'args': ['$it110.7'], 'kw_names': None, 'res': '$116call.8'}), (118, {}), (120, {}), (122, {}), (124, {}), (126, {'item': '$116call.8', 'res': '$126load_method.10'}), (128, {}), (130, {}), (132, {}), (134, {}), (136, {}), (138, {}), (140, {}), (142, {}), (144, {}), (146, {}), (148, {'res': '$const148.11'}), (150, {}), (152, {}), (154, {'func': '$126load_method.10', 'args': ['$const148.11'], 'kw_names': None, 'res': '$154call.12'}), (156, {}), (158, {}), (160, {}), (162, {}), (164, {'value': '$154call.12'}), (166, {}), (168, {'res': '$168load_deref.14'}), (170, {'res': '$max_value170.15'}), (172, {}), (174, {}), (176, {'func': '$168load_deref.14', 'args': ['$max_value170.15'], 'kw_names': None, 'res': '$176call.16'}), (178, {}), (180, {}), (182, {}), (184, {}), (186, {'pred': '$176call.16'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={188: (), 192: ()})
2024-07-15 06:11:42,086 DEBUG:block_infos State(pc_initial=188 nstack_initial=0):
AdaptBlockInfo(insts=((188, {'res': '$max_value188.0'}), (190, {'retval': '$max_value188.0', 'castval': '$190return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-15 06:11:42,086 DEBUG:block_infos State(pc_initial=192 nstack_initial=0):
AdaptBlockInfo(insts=((192, {'res': '$it192.0'}), (194, {'value': '$it192.0', 'res': '$194get_iter.1'})), outgoing_phis={'$phi196.0': '$194get_iter.1'}, blockstack=(), active_try_block=None, outgoing_edgepushed={196: ('$194get_iter.1',)})
2024-07-15 06:11:42,086 DEBUG:block_infos State(pc_initial=196 nstack_initial=1):
AdaptBlockInfo(insts=((196, {'iterator': '$phi196.0', 'pair': '$196for_iter.1', 'indval': '$196for_iter.2', 'pred': '$196for_iter.3'}),), outgoing_phis={'$phi198.1': '$196for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={300: (), 198: ('$phi196.0', '$196for_iter.2')})
2024-07-15 06:11:42,086 DEBUG:block_infos State(pc_initial=198 nstack_initial=2):
AdaptBlockInfo(insts=((198, {'value': '$phi198.1'}), (200, {'res': '$view200.2'}), (202, {'item': '$view200.2', 'res': '$202load_method.4'}), (204, {}), (206, {}), (208, {}), (210, {}), (212, {}), (214, {}), (216, {}), (218, {}), (220, {}), (222, {}), (224, {}), (226, {}), (228, {'func': '$202load_method.4', 'args': [], 'kw_names': None, 'res': '$228call.5'}), (230, {}), (232, {}), (234, {}), (236, {}), (238, {'value': '$228call.5'}), (240, {}), (242, {'res': '$242load_deref.7'}), (244, {'res': '$v244.8'}), (246, {}), (248, {}), (250, {'func': '$242load_deref.7', 'args': ['$v244.8'], 'kw_names': None, 'res': '$250call.9'}), (252, {}), (254, {}), (256, {}), (258, {}), (260, {'pred': '$250call.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={262: ('$phi198.0',), 270: ('$phi198.0',)})
2024-07-15 06:11:42,086 DEBUG:block_infos State(pc_initial=262 nstack_initial=1):
AdaptBlockInfo(insts=((262, {'res': '$v262.1'}), (268, {'retval': '$v262.1', 'castval': '$268return_value.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-15 06:11:42,086 DEBUG:block_infos State(pc_initial=270 nstack_initial=1):
AdaptBlockInfo(insts=((270, {}), (272, {'res': '$272load_deref.2'}), (274, {'res': '$v274.3'}), (276, {'res': '$max_value276.4'}), (278, {}), (280, {}), (282, {'func': '$272load_deref.2', 'args': ['$v274.3', '$max_value276.4'], 'kw_names': None, 'res': '$282call.5'}), (284, {}), (286, {}), (288, {}), (290, {}), (292, {'pred': '$282call.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={294: ('$phi270.0',), 298: ('$phi270.0',)})
2024-07-15 06:11:42,086 DEBUG:block_infos State(pc_initial=294 nstack_initial=1):
AdaptBlockInfo(insts=((294, {'res': '$v294.1'}), (296, {'value': '$v294.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={298: ('$phi294.0',)})
2024-07-15 06:11:42,086 DEBUG:block_infos State(pc_initial=298 nstack_initial=1):
AdaptBlockInfo(insts=((298, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={196: ('$phi298.0',)})
2024-07-15 06:11:42,086 DEBUG:block_infos State(pc_initial=300 nstack_initial=0):
AdaptBlockInfo(insts=((300, {'res': '$max_value300.0'}), (302, {'retval': '$max_value300.0', 'castval': '$302return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-15 06:11:42,087 DEBUG:label 0:
    a = arg(0, name=a)                       ['a']
    $8load_attr.1 = getattr(value=a, attr=size) ['$8load_attr.1', 'a']
    $const18.2 = const(int, 0)               ['$const18.2']
    $20compare_op.3 = $8load_attr.1 == $const18.2 ['$20compare_op.3', '$8load_attr.1', '$const18.2']
    bool26 = global(bool: <class 'bool'>)    ['bool26']
    $26pred = call bool26($20compare_op.3, func=bool26, args=(Var($20compare_op.3, arraymath.py:571),), kws=(), vararg=None, varkwarg=None, target=None) ['$20compare_op.3', '$26pred', 'bool26']
    branch $26pred, 28, 58                   ['$26pred']
label 28:
    $28load_global.0 = global(ValueError: <class 'ValueError'>) ['$28load_global.0']
    $const40.2 = const(str, zero-size array to reduction operation maximum which has no identity) ['$const40.2']
    $46call.3 = call $28load_global.0($const40.2, func=$28load_global.0, args=[Var($const40.2, arraymath.py:572)], kws=(), vararg=None, varkwarg=None, target=None) ['$28load_global.0', '$46call.3', '$const40.2']
    raise $46call.3                          ['$46call.3']
label 58:
    $58load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$58load_global.0']
    $70load_attr.2 = getattr(value=$58load_global.0, attr=nditer) ['$58load_global.0', '$70load_attr.2']
    it = call $70load_attr.2(a, func=$70load_attr.2, args=[Var(a, arraymath.py:570)], kws=(), vararg=None, varkwarg=None, target=None) ['$70load_attr.2', 'a', 'it']
    $98load_global.5 = global(next: <built-in function next>) ['$98load_global.5']
    $116call.8 = call $98load_global.5(it, func=$98load_global.5, args=[Var(it, arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None) ['$116call.8', '$98load_global.5', 'it']
    $126load_method.10 = getattr(value=$116call.8, attr=take) ['$116call.8', '$126load_method.10']
    $const148.11 = const(int, 0)             ['$const148.11']
    max_value = call $126load_method.10($const148.11, func=$126load_method.10, args=[Var($const148.11, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None) ['$126load_method.10', '$const148.11', 'max_value']
    $168load_deref.14 = freevar(pre_return_func: <ufunc 'isnan'>) ['$168load_deref.14']
    $176call.16 = call $168load_deref.14(max_value, func=$168load_deref.14, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None) ['$168load_deref.14', '$176call.16', 'max_value']
    bool186 = global(bool: <class 'bool'>)   ['bool186']
    $186pred = call bool186($176call.16, func=bool186, args=(Var($176call.16, arraymath.py:577),), kws=(), vararg=None, varkwarg=None, target=None) ['$176call.16', '$186pred', 'bool186']
    branch $186pred, 188, 192                ['$186pred']
label 188:
    $190return_value.1 = cast(value=max_value) ['$190return_value.1', 'max_value']
    return $190return_value.1                ['$190return_value.1']
label 192:
    $194get_iter.1 = getiter(value=it)       ['$194get_iter.1', 'it']
    $phi196.0 = $194get_iter.1               ['$194get_iter.1', '$phi196.0']
    jump 196                                 []
label 196:
    $196for_iter.1 = iternext(value=$phi196.0) ['$196for_iter.1', '$phi196.0']
    $196for_iter.2 = pair_first(value=$196for_iter.1) ['$196for_iter.1', '$196for_iter.2']
    $196for_iter.3 = pair_second(value=$196for_iter.1) ['$196for_iter.1', '$196for_iter.3']
    $phi198.1 = $196for_iter.2               ['$196for_iter.2', '$phi198.1']
    branch $196for_iter.3, 198, 300          ['$196for_iter.3']
label 198:
    view = $phi198.1                         ['$phi198.1', 'view']
    $202load_method.4 = getattr(value=view, attr=item) ['$202load_method.4', 'view']
    v = call $202load_method.4(func=$202load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$202load_method.4', 'v']
    $242load_deref.7 = freevar(pre_return_func: <ufunc 'isnan'>) ['$242load_deref.7']
    $250call.9 = call $242load_deref.7(v, func=$242load_deref.7, args=[Var(v, arraymath.py:581)], kws=(), vararg=None, varkwarg=None, target=None) ['$242load_deref.7', '$250call.9', 'v']
    bool260 = global(bool: <class 'bool'>)   ['bool260']
    $260pred = call bool260($250call.9, func=bool260, args=(Var($250call.9, arraymath.py:582),), kws=(), vararg=None, varkwarg=None, target=None) ['$250call.9', '$260pred', 'bool260']
    branch $260pred, 262, 270                ['$260pred']
label 262:
    $268return_value.2 = cast(value=v)       ['$268return_value.2', 'v']
    return $268return_value.2                ['$268return_value.2']
label 270:
    $272load_deref.2 = freevar(comparator: <function max_comparator at 0x00000221B53CA3E0>) ['$272load_deref.2']
    $282call.5 = call $272load_deref.2(v, max_value, func=$272load_deref.2, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None) ['$272load_deref.2', '$282call.5', 'max_value', 'v']
    bool292 = global(bool: <class 'bool'>)   ['bool292']
    $292pred = call bool292($282call.5, func=bool292, args=(Var($282call.5, arraymath.py:584),), kws=(), vararg=None, varkwarg=None, target=None) ['$282call.5', '$292pred', 'bool292']
    branch $292pred, 294, 298                ['$292pred']
label 294:
    max_value = v                            ['max_value', 'v']
    jump 298                                 []
label 298:
    jump 196                                 []
label 300:
    $302return_value.1 = cast(value=max_value) ['$302return_value.1', 'max_value']
    return $302return_value.1                ['$302return_value.1']

2024-07-15 06:11:42,109 DEBUG:==== SSA block analysis pass on 0
2024-07-15 06:11:42,109 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B697C610>
2024-07-15 06:11:42,109 DEBUG:on stmt: a = arg(0, name=a)
2024-07-15 06:11:42,109 DEBUG:on stmt: $8load_attr.1 = getattr(value=a, attr=size)
2024-07-15 06:11:42,109 DEBUG:on stmt: $const18.2 = const(int, 0)
2024-07-15 06:11:42,109 DEBUG:on stmt: $20compare_op.3 = $8load_attr.1 == $const18.2
2024-07-15 06:11:42,109 DEBUG:on stmt: bool26 = global(bool: <class 'bool'>)
2024-07-15 06:11:42,109 DEBUG:on stmt: $26pred = call bool26($20compare_op.3, func=bool26, args=(Var($20compare_op.3, arraymath.py:571),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,109 DEBUG:on stmt: branch $26pred, 28, 58
2024-07-15 06:11:42,109 DEBUG:==== SSA block analysis pass on 28
2024-07-15 06:11:42,109 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B697C610>
2024-07-15 06:11:42,109 DEBUG:on stmt: $28load_global.0 = global(ValueError: <class 'ValueError'>)
2024-07-15 06:11:42,109 DEBUG:on stmt: $const40.2 = const(str, zero-size array to reduction operation maximum which has no identity)
2024-07-15 06:11:42,109 DEBUG:on stmt: $46call.3 = call $28load_global.0($const40.2, func=$28load_global.0, args=[Var($const40.2, arraymath.py:572)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,109 DEBUG:on stmt: <static> raise <class 'ValueError'>('zero-size array to reduction operation maximum which has no identity')
2024-07-15 06:11:42,109 DEBUG:==== SSA block analysis pass on 58
2024-07-15 06:11:42,109 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B697C610>
2024-07-15 06:11:42,109 DEBUG:on stmt: $58load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:42,109 DEBUG:on stmt: $70load_attr.2 = getattr(value=$58load_global.0, attr=nditer)
2024-07-15 06:11:42,110 DEBUG:on stmt: it = call $70load_attr.2(a, func=$70load_attr.2, args=[Var(a, arraymath.py:570)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,110 DEBUG:on stmt: $98load_global.5 = global(next: <built-in function next>)
2024-07-15 06:11:42,110 DEBUG:on stmt: $116call.8 = call $98load_global.5(it, func=$98load_global.5, args=[Var(it, arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,110 DEBUG:on stmt: $126load_method.10 = getattr(value=$116call.8, attr=take)
2024-07-15 06:11:42,110 DEBUG:on stmt: $const148.11 = const(int, 0)
2024-07-15 06:11:42,110 DEBUG:on stmt: max_value = call $126load_method.10($const148.11, func=$126load_method.10, args=[Var($const148.11, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,110 DEBUG:on stmt: $168load_deref.14 = freevar(pre_return_func: <ufunc 'isnan'>)
2024-07-15 06:11:42,110 DEBUG:on stmt: $176call.16 = call $168load_deref.14(max_value, func=$168load_deref.14, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,110 DEBUG:on stmt: bool186 = global(bool: <class 'bool'>)
2024-07-15 06:11:42,110 DEBUG:on stmt: $186pred = call bool186($176call.16, func=bool186, args=(Var($176call.16, arraymath.py:577),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,110 DEBUG:on stmt: branch $186pred, 188, 192
2024-07-15 06:11:42,110 DEBUG:==== SSA block analysis pass on 188
2024-07-15 06:11:42,110 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B697C610>
2024-07-15 06:11:42,110 DEBUG:on stmt: $190return_value.1 = cast(value=max_value)
2024-07-15 06:11:42,110 DEBUG:on stmt: return $190return_value.1
2024-07-15 06:11:42,110 DEBUG:==== SSA block analysis pass on 192
2024-07-15 06:11:42,110 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B697C610>
2024-07-15 06:11:42,110 DEBUG:on stmt: $194get_iter.1 = getiter(value=it)
2024-07-15 06:11:42,110 DEBUG:on stmt: $phi196.0 = $194get_iter.1
2024-07-15 06:11:42,110 DEBUG:on stmt: jump 196
2024-07-15 06:11:42,110 DEBUG:==== SSA block analysis pass on 196
2024-07-15 06:11:42,110 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B697C610>
2024-07-15 06:11:42,110 DEBUG:on stmt: $196for_iter.1 = iternext(value=$phi196.0)
2024-07-15 06:11:42,110 DEBUG:on stmt: $196for_iter.2 = pair_first(value=$196for_iter.1)
2024-07-15 06:11:42,110 DEBUG:on stmt: $196for_iter.3 = pair_second(value=$196for_iter.1)
2024-07-15 06:11:42,110 DEBUG:on stmt: $phi198.1 = $196for_iter.2
2024-07-15 06:11:42,110 DEBUG:on stmt: branch $196for_iter.3, 198, 300
2024-07-15 06:11:42,110 DEBUG:==== SSA block analysis pass on 198
2024-07-15 06:11:42,110 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B697C610>
2024-07-15 06:11:42,110 DEBUG:on stmt: view = $phi198.1
2024-07-15 06:11:42,110 DEBUG:on stmt: $202load_method.4 = getattr(value=view, attr=item)
2024-07-15 06:11:42,110 DEBUG:on stmt: v = call $202load_method.4(func=$202load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,111 DEBUG:on stmt: $242load_deref.7 = freevar(pre_return_func: <ufunc 'isnan'>)
2024-07-15 06:11:42,111 DEBUG:on stmt: $250call.9 = call $242load_deref.7(v, func=$242load_deref.7, args=[Var(v, arraymath.py:581)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,111 DEBUG:on stmt: bool260 = global(bool: <class 'bool'>)
2024-07-15 06:11:42,111 DEBUG:on stmt: $260pred = call bool260($250call.9, func=bool260, args=(Var($250call.9, arraymath.py:582),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,111 DEBUG:on stmt: branch $260pred, 262, 270
2024-07-15 06:11:42,111 DEBUG:==== SSA block analysis pass on 262
2024-07-15 06:11:42,111 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B697C610>
2024-07-15 06:11:42,111 DEBUG:on stmt: $268return_value.2 = cast(value=v)
2024-07-15 06:11:42,111 DEBUG:on stmt: return $268return_value.2
2024-07-15 06:11:42,111 DEBUG:==== SSA block analysis pass on 270
2024-07-15 06:11:42,111 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B697C610>
2024-07-15 06:11:42,111 DEBUG:on stmt: $272load_deref.2 = freevar(comparator: <function max_comparator at 0x00000221B53CA3E0>)
2024-07-15 06:11:42,111 DEBUG:on stmt: $282call.5 = call $272load_deref.2(v, max_value, func=$272load_deref.2, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,111 DEBUG:on stmt: bool292 = global(bool: <class 'bool'>)
2024-07-15 06:11:42,111 DEBUG:on stmt: $292pred = call bool292($282call.5, func=bool292, args=(Var($282call.5, arraymath.py:584),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,111 DEBUG:on stmt: branch $292pred, 294, 298
2024-07-15 06:11:42,111 DEBUG:==== SSA block analysis pass on 294
2024-07-15 06:11:42,111 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B697C610>
2024-07-15 06:11:42,111 DEBUG:on stmt: max_value = v
2024-07-15 06:11:42,111 DEBUG:on stmt: jump 298
2024-07-15 06:11:42,111 DEBUG:==== SSA block analysis pass on 298
2024-07-15 06:11:42,111 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B697C610>
2024-07-15 06:11:42,111 DEBUG:on stmt: jump 196
2024-07-15 06:11:42,111 DEBUG:==== SSA block analysis pass on 300
2024-07-15 06:11:42,111 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B697C610>
2024-07-15 06:11:42,111 DEBUG:on stmt: $302return_value.1 = cast(value=max_value)
2024-07-15 06:11:42,111 DEBUG:on stmt: return $302return_value.1
2024-07-15 06:11:42,113 DEBUG:defs defaultdict(<class 'list'>,
            {'$116call.8': [(<numba.core.ir.Assign object at 0x00000221B678B190>,
                             58)],
             '$126load_method.10': [(<numba.core.ir.Assign object at 0x00000221B6841D10>,
                                     58)],
             '$168load_deref.14': [(<numba.core.ir.Assign object at 0x00000221B5AC2A90>,
                                    58)],
             '$176call.16': [(<numba.core.ir.Assign object at 0x00000221B6A2D790>,
                              58)],
             '$186pred': [(<numba.core.ir.Assign object at 0x00000221B6A2CD90>,
                           58)],
             '$190return_value.1': [(<numba.core.ir.Assign object at 0x00000221B6A2DB50>,
                                     188)],
             '$194get_iter.1': [(<numba.core.ir.Assign object at 0x00000221B6A2D110>,
                                 192)],
             '$196for_iter.1': [(<numba.core.ir.Assign object at 0x00000221B6A2FA10>,
                                 196)],
             '$196for_iter.2': [(<numba.core.ir.Assign object at 0x00000221B6A2E6D0>,
                                 196)],
             '$196for_iter.3': [(<numba.core.ir.Assign object at 0x00000221B6A2CA50>,
                                 196)],
             '$202load_method.4': [(<numba.core.ir.Assign object at 0x00000221B6A2F950>,
                                    198)],
             '$20compare_op.3': [(<numba.core.ir.Assign object at 0x00000221B6789D10>,
                                  0)],
             '$242load_deref.7': [(<numba.core.ir.Assign object at 0x00000221B6A2C290>,
                                   198)],
             '$250call.9': [(<numba.core.ir.Assign object at 0x00000221B6A2C550>,
                             198)],
             '$260pred': [(<numba.core.ir.Assign object at 0x00000221B6A2E5D0>,
                           198)],
             '$268return_value.2': [(<numba.core.ir.Assign object at 0x00000221B6A2D590>,
                                     262)],
             '$26pred': [(<numba.core.ir.Assign object at 0x00000221B678B390>,
                          0)],
             '$272load_deref.2': [(<numba.core.ir.Assign object at 0x00000221B6A2DD50>,
                                   270)],
             '$282call.5': [(<numba.core.ir.Assign object at 0x00000221B60CB290>,
                             270)],
             '$28load_global.0': [(<numba.core.ir.Assign object at 0x00000221B678AAD0>,
                                   28)],
             '$292pred': [(<numba.core.ir.Assign object at 0x00000221B60CBBD0>,
                           270)],
             '$302return_value.1': [(<numba.core.ir.Assign object at 0x00000221B60C9290>,
                                     300)],
             '$46call.3': [(<numba.core.ir.Assign object at 0x00000221B6789910>,
                            28)],
             '$58load_global.0': [(<numba.core.ir.Assign object at 0x00000221B678A6D0>,
                                   58)],
             '$70load_attr.2': [(<numba.core.ir.Assign object at 0x00000221B678A190>,
                                 58)],
             '$8load_attr.1': [(<numba.core.ir.Assign object at 0x00000221B698EE50>,
                                0)],
             '$98load_global.5': [(<numba.core.ir.Assign object at 0x00000221B6789150>,
                                   58)],
             '$const148.11': [(<numba.core.ir.Assign object at 0x00000221B6840A10>,
                               58)],
             '$const18.2': [(<numba.core.ir.Assign object at 0x00000221B69B7890>,
                             0)],
             '$const40.2': [(<numba.core.ir.Assign object at 0x00000221B6788E90>,
                             28)],
             '$phi196.0': [(<numba.core.ir.Assign object at 0x00000221B6A2C210>,
                            192)],
             '$phi198.1': [(<numba.core.ir.Assign object at 0x00000221B6A2FB50>,
                            196)],
             'a': [(<numba.core.ir.Assign object at 0x00000221B698C250>, 0)],
             'bool186': [(<numba.core.ir.Assign object at 0x00000221B6A2CA10>,
                          58)],
             'bool26': [(<numba.core.ir.Assign object at 0x00000221B678A450>,
                         0)],
             'bool260': [(<numba.core.ir.Assign object at 0x00000221B6A2D9D0>,
                          198)],
             'bool292': [(<numba.core.ir.Assign object at 0x00000221B60CAE10>,
                          270)],
             'it': [(<numba.core.ir.Assign object at 0x00000221B678B710>, 58)],
             'max_value': [(<numba.core.ir.Assign object at 0x00000221B6A2C990>,
                            58),
                           (<numba.core.ir.Assign object at 0x00000221B60C9F10>,
                            294)],
             'v': [(<numba.core.ir.Assign object at 0x00000221B6A2F810>, 198)],
             'view': [(<numba.core.ir.Assign object at 0x00000221B6A2F450>,
                       198)]})
2024-07-15 06:11:42,113 DEBUG:SSA violators <numba.core.utils.OrderedSet object at 0x00000221B6A0AE50>
2024-07-15 06:11:42,113 DEBUG:Fix SSA violator on var max_value
2024-07-15 06:11:42,113 DEBUG:==== SSA block rewrite pass on 0
2024-07-15 06:11:42,113 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B697C610>
2024-07-15 06:11:42,113 DEBUG:on stmt: a = arg(0, name=a)
2024-07-15 06:11:42,113 DEBUG:on stmt: $8load_attr.1 = getattr(value=a, attr=size)
2024-07-15 06:11:42,113 DEBUG:on stmt: $const18.2 = const(int, 0)
2024-07-15 06:11:42,113 DEBUG:on stmt: $20compare_op.3 = $8load_attr.1 == $const18.2
2024-07-15 06:11:42,113 DEBUG:on stmt: bool26 = global(bool: <class 'bool'>)
2024-07-15 06:11:42,113 DEBUG:on stmt: $26pred = call bool26($20compare_op.3, func=bool26, args=(Var($20compare_op.3, arraymath.py:571),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,113 DEBUG:on stmt: branch $26pred, 28, 58
2024-07-15 06:11:42,113 DEBUG:==== SSA block rewrite pass on 28
2024-07-15 06:11:42,113 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B697C610>
2024-07-15 06:11:42,113 DEBUG:on stmt: $28load_global.0 = global(ValueError: <class 'ValueError'>)
2024-07-15 06:11:42,113 DEBUG:on stmt: $const40.2 = const(str, zero-size array to reduction operation maximum which has no identity)
2024-07-15 06:11:42,113 DEBUG:on stmt: $46call.3 = call $28load_global.0($const40.2, func=$28load_global.0, args=[Var($const40.2, arraymath.py:572)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,113 DEBUG:on stmt: <static> raise <class 'ValueError'>('zero-size array to reduction operation maximum which has no identity')
2024-07-15 06:11:42,113 DEBUG:==== SSA block rewrite pass on 58
2024-07-15 06:11:42,113 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B697C610>
2024-07-15 06:11:42,113 DEBUG:on stmt: $58load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:42,114 DEBUG:on stmt: $70load_attr.2 = getattr(value=$58load_global.0, attr=nditer)
2024-07-15 06:11:42,114 DEBUG:on stmt: it = call $70load_attr.2(a, func=$70load_attr.2, args=[Var(a, arraymath.py:570)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,114 DEBUG:on stmt: $98load_global.5 = global(next: <built-in function next>)
2024-07-15 06:11:42,114 DEBUG:on stmt: $116call.8 = call $98load_global.5(it, func=$98load_global.5, args=[Var(it, arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,114 DEBUG:on stmt: $126load_method.10 = getattr(value=$116call.8, attr=take)
2024-07-15 06:11:42,114 DEBUG:on stmt: $const148.11 = const(int, 0)
2024-07-15 06:11:42,114 DEBUG:on stmt: max_value = call $126load_method.10($const148.11, func=$126load_method.10, args=[Var($const148.11, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,114 DEBUG:first assign: max_value
2024-07-15 06:11:42,114 DEBUG:replaced with: max_value = call $126load_method.10($const148.11, func=$126load_method.10, args=[Var($const148.11, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,114 DEBUG:on stmt: $168load_deref.14 = freevar(pre_return_func: <ufunc 'isnan'>)
2024-07-15 06:11:42,114 DEBUG:on stmt: $176call.16 = call $168load_deref.14(max_value, func=$168load_deref.14, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,114 DEBUG:on stmt: bool186 = global(bool: <class 'bool'>)
2024-07-15 06:11:42,114 DEBUG:on stmt: $186pred = call bool186($176call.16, func=bool186, args=(Var($176call.16, arraymath.py:577),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,114 DEBUG:on stmt: branch $186pred, 188, 192
2024-07-15 06:11:42,114 DEBUG:==== SSA block rewrite pass on 188
2024-07-15 06:11:42,114 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B697C610>
2024-07-15 06:11:42,114 DEBUG:on stmt: $190return_value.1 = cast(value=max_value)
2024-07-15 06:11:42,114 DEBUG:on stmt: return $190return_value.1
2024-07-15 06:11:42,114 DEBUG:==== SSA block rewrite pass on 192
2024-07-15 06:11:42,114 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B697C610>
2024-07-15 06:11:42,114 DEBUG:on stmt: $194get_iter.1 = getiter(value=it)
2024-07-15 06:11:42,114 DEBUG:on stmt: $phi196.0 = $194get_iter.1
2024-07-15 06:11:42,114 DEBUG:on stmt: jump 196
2024-07-15 06:11:42,114 DEBUG:==== SSA block rewrite pass on 196
2024-07-15 06:11:42,114 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B697C610>
2024-07-15 06:11:42,114 DEBUG:on stmt: $196for_iter.1 = iternext(value=$phi196.0)
2024-07-15 06:11:42,114 DEBUG:on stmt: $196for_iter.2 = pair_first(value=$196for_iter.1)
2024-07-15 06:11:42,114 DEBUG:on stmt: $196for_iter.3 = pair_second(value=$196for_iter.1)
2024-07-15 06:11:42,114 DEBUG:on stmt: $phi198.1 = $196for_iter.2
2024-07-15 06:11:42,114 DEBUG:on stmt: branch $196for_iter.3, 198, 300
2024-07-15 06:11:42,114 DEBUG:==== SSA block rewrite pass on 198
2024-07-15 06:11:42,114 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B697C610>
2024-07-15 06:11:42,114 DEBUG:on stmt: view = $phi198.1
2024-07-15 06:11:42,114 DEBUG:on stmt: $202load_method.4 = getattr(value=view, attr=item)
2024-07-15 06:11:42,114 DEBUG:on stmt: v = call $202load_method.4(func=$202load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,114 DEBUG:on stmt: $242load_deref.7 = freevar(pre_return_func: <ufunc 'isnan'>)
2024-07-15 06:11:42,115 DEBUG:on stmt: $250call.9 = call $242load_deref.7(v, func=$242load_deref.7, args=[Var(v, arraymath.py:581)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,115 DEBUG:on stmt: bool260 = global(bool: <class 'bool'>)
2024-07-15 06:11:42,115 DEBUG:on stmt: $260pred = call bool260($250call.9, func=bool260, args=(Var($250call.9, arraymath.py:582),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,115 DEBUG:on stmt: branch $260pred, 262, 270
2024-07-15 06:11:42,115 DEBUG:==== SSA block rewrite pass on 262
2024-07-15 06:11:42,115 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B697C610>
2024-07-15 06:11:42,115 DEBUG:on stmt: $268return_value.2 = cast(value=v)
2024-07-15 06:11:42,115 DEBUG:on stmt: return $268return_value.2
2024-07-15 06:11:42,115 DEBUG:==== SSA block rewrite pass on 270
2024-07-15 06:11:42,115 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B697C610>
2024-07-15 06:11:42,115 DEBUG:on stmt: $272load_deref.2 = freevar(comparator: <function max_comparator at 0x00000221B53CA3E0>)
2024-07-15 06:11:42,115 DEBUG:on stmt: $282call.5 = call $272load_deref.2(v, max_value, func=$272load_deref.2, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,115 DEBUG:on stmt: bool292 = global(bool: <class 'bool'>)
2024-07-15 06:11:42,115 DEBUG:on stmt: $292pred = call bool292($282call.5, func=bool292, args=(Var($282call.5, arraymath.py:584),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,115 DEBUG:on stmt: branch $292pred, 294, 298
2024-07-15 06:11:42,115 DEBUG:==== SSA block rewrite pass on 294
2024-07-15 06:11:42,115 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B697C610>
2024-07-15 06:11:42,115 DEBUG:on stmt: max_value = v
2024-07-15 06:11:42,115 DEBUG:replaced with: max_value.1 = v
2024-07-15 06:11:42,115 DEBUG:on stmt: jump 298
2024-07-15 06:11:42,115 DEBUG:==== SSA block rewrite pass on 298
2024-07-15 06:11:42,115 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B697C610>
2024-07-15 06:11:42,115 DEBUG:on stmt: jump 196
2024-07-15 06:11:42,115 DEBUG:==== SSA block rewrite pass on 300
2024-07-15 06:11:42,115 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B697C610>
2024-07-15 06:11:42,115 DEBUG:on stmt: $302return_value.1 = cast(value=max_value)
2024-07-15 06:11:42,115 DEBUG:on stmt: return $302return_value.1
2024-07-15 06:11:42,115 DEBUG:Replaced assignments: defaultdict(<class 'list'>,
            {58: [<numba.core.ir.Assign object at 0x00000221B5A6F710>],
             294: [<numba.core.ir.Assign object at 0x00000221B5A6D450>]})
2024-07-15 06:11:42,115 DEBUG:==== SSA block rewrite pass on 0
2024-07-15 06:11:42,115 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5A6D250>
2024-07-15 06:11:42,115 DEBUG:on stmt: a = arg(0, name=a)
2024-07-15 06:11:42,115 DEBUG:on stmt: $8load_attr.1 = getattr(value=a, attr=size)
2024-07-15 06:11:42,115 DEBUG:on stmt: $const18.2 = const(int, 0)
2024-07-15 06:11:42,115 DEBUG:on stmt: $20compare_op.3 = $8load_attr.1 == $const18.2
2024-07-15 06:11:42,116 DEBUG:on stmt: bool26 = global(bool: <class 'bool'>)
2024-07-15 06:11:42,116 DEBUG:on stmt: $26pred = call bool26($20compare_op.3, func=bool26, args=(Var($20compare_op.3, arraymath.py:571),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,116 DEBUG:on stmt: branch $26pred, 28, 58
2024-07-15 06:11:42,116 DEBUG:==== SSA block rewrite pass on 28
2024-07-15 06:11:42,116 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5A6D250>
2024-07-15 06:11:42,116 DEBUG:on stmt: $28load_global.0 = global(ValueError: <class 'ValueError'>)
2024-07-15 06:11:42,116 DEBUG:on stmt: $const40.2 = const(str, zero-size array to reduction operation maximum which has no identity)
2024-07-15 06:11:42,116 DEBUG:on stmt: $46call.3 = call $28load_global.0($const40.2, func=$28load_global.0, args=[Var($const40.2, arraymath.py:572)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,116 DEBUG:on stmt: <static> raise <class 'ValueError'>('zero-size array to reduction operation maximum which has no identity')
2024-07-15 06:11:42,116 DEBUG:==== SSA block rewrite pass on 58
2024-07-15 06:11:42,116 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5A6D250>
2024-07-15 06:11:42,116 DEBUG:on stmt: $58load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:42,116 DEBUG:on stmt: $70load_attr.2 = getattr(value=$58load_global.0, attr=nditer)
2024-07-15 06:11:42,116 DEBUG:on stmt: it = call $70load_attr.2(a, func=$70load_attr.2, args=[Var(a, arraymath.py:570)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,116 DEBUG:on stmt: $98load_global.5 = global(next: <built-in function next>)
2024-07-15 06:11:42,116 DEBUG:on stmt: $116call.8 = call $98load_global.5(it, func=$98load_global.5, args=[Var(it, arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,116 DEBUG:on stmt: $126load_method.10 = getattr(value=$116call.8, attr=take)
2024-07-15 06:11:42,116 DEBUG:on stmt: $const148.11 = const(int, 0)
2024-07-15 06:11:42,116 DEBUG:on stmt: max_value = call $126load_method.10($const148.11, func=$126load_method.10, args=[Var($const148.11, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,116 DEBUG:on stmt: $168load_deref.14 = freevar(pre_return_func: <ufunc 'isnan'>)
2024-07-15 06:11:42,116 DEBUG:on stmt: $176call.16 = call $168load_deref.14(max_value, func=$168load_deref.14, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,116 DEBUG:find_def var='max_value' stmt=$176call.16 = call $168load_deref.14(max_value, func=$168load_deref.14, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,116 DEBUG:on stmt: bool186 = global(bool: <class 'bool'>)
2024-07-15 06:11:42,116 DEBUG:on stmt: $186pred = call bool186($176call.16, func=bool186, args=(Var($176call.16, arraymath.py:577),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,116 DEBUG:on stmt: branch $186pred, 188, 192
2024-07-15 06:11:42,116 DEBUG:==== SSA block rewrite pass on 188
2024-07-15 06:11:42,116 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5A6D250>
2024-07-15 06:11:42,116 DEBUG:on stmt: $190return_value.1 = cast(value=max_value)
2024-07-15 06:11:42,116 DEBUG:find_def var='max_value' stmt=$190return_value.1 = cast(value=max_value)
2024-07-15 06:11:42,116 DEBUG:find_def_from_top label 188
2024-07-15 06:11:42,116 DEBUG:idom 58 from label 188
2024-07-15 06:11:42,116 DEBUG:find_def_from_bottom label 58
2024-07-15 06:11:42,116 DEBUG:on stmt: return $190return_value.1
2024-07-15 06:11:42,116 DEBUG:==== SSA block rewrite pass on 192
2024-07-15 06:11:42,116 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5A6D250>
2024-07-15 06:11:42,116 DEBUG:on stmt: $194get_iter.1 = getiter(value=it)
2024-07-15 06:11:42,116 DEBUG:on stmt: $phi196.0 = $194get_iter.1
2024-07-15 06:11:42,116 DEBUG:on stmt: jump 196
2024-07-15 06:11:42,116 DEBUG:==== SSA block rewrite pass on 196
2024-07-15 06:11:42,116 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5A6D250>
2024-07-15 06:11:42,116 DEBUG:on stmt: $196for_iter.1 = iternext(value=$phi196.0)
2024-07-15 06:11:42,117 DEBUG:on stmt: $196for_iter.2 = pair_first(value=$196for_iter.1)
2024-07-15 06:11:42,117 DEBUG:on stmt: $196for_iter.3 = pair_second(value=$196for_iter.1)
2024-07-15 06:11:42,117 DEBUG:on stmt: $phi198.1 = $196for_iter.2
2024-07-15 06:11:42,117 DEBUG:on stmt: branch $196for_iter.3, 198, 300
2024-07-15 06:11:42,117 DEBUG:==== SSA block rewrite pass on 198
2024-07-15 06:11:42,117 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5A6D250>
2024-07-15 06:11:42,117 DEBUG:on stmt: view = $phi198.1
2024-07-15 06:11:42,117 DEBUG:on stmt: $202load_method.4 = getattr(value=view, attr=item)
2024-07-15 06:11:42,117 DEBUG:on stmt: v = call $202load_method.4(func=$202load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,117 DEBUG:on stmt: $242load_deref.7 = freevar(pre_return_func: <ufunc 'isnan'>)
2024-07-15 06:11:42,117 DEBUG:on stmt: $250call.9 = call $242load_deref.7(v, func=$242load_deref.7, args=[Var(v, arraymath.py:581)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,117 DEBUG:on stmt: bool260 = global(bool: <class 'bool'>)
2024-07-15 06:11:42,117 DEBUG:on stmt: $260pred = call bool260($250call.9, func=bool260, args=(Var($250call.9, arraymath.py:582),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,117 DEBUG:on stmt: branch $260pred, 262, 270
2024-07-15 06:11:42,117 DEBUG:==== SSA block rewrite pass on 262
2024-07-15 06:11:42,117 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5A6D250>
2024-07-15 06:11:42,117 DEBUG:on stmt: $268return_value.2 = cast(value=v)
2024-07-15 06:11:42,117 DEBUG:on stmt: return $268return_value.2
2024-07-15 06:11:42,117 DEBUG:==== SSA block rewrite pass on 270
2024-07-15 06:11:42,117 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5A6D250>
2024-07-15 06:11:42,117 DEBUG:on stmt: $272load_deref.2 = freevar(comparator: <function max_comparator at 0x00000221B53CA3E0>)
2024-07-15 06:11:42,117 DEBUG:on stmt: $282call.5 = call $272load_deref.2(v, max_value, func=$272load_deref.2, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,117 DEBUG:find_def var='max_value' stmt=$282call.5 = call $272load_deref.2(v, max_value, func=$272load_deref.2, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,118 DEBUG:find_def_from_top label 270
2024-07-15 06:11:42,118 DEBUG:idom 198 from label 270
2024-07-15 06:11:42,118 DEBUG:find_def_from_bottom label 198
2024-07-15 06:11:42,118 DEBUG:find_def_from_top label 198
2024-07-15 06:11:42,118 DEBUG:idom 196 from label 198
2024-07-15 06:11:42,118 DEBUG:find_def_from_bottom label 196
2024-07-15 06:11:42,118 DEBUG:find_def_from_top label 196
2024-07-15 06:11:42,118 DEBUG:insert phi node max_value.2 = phi(incoming_values=[], incoming_blocks=[]) at 196
2024-07-15 06:11:42,118 DEBUG:find_def_from_bottom label 192
2024-07-15 06:11:42,118 DEBUG:find_def_from_top label 192
2024-07-15 06:11:42,118 DEBUG:idom 58 from label 192
2024-07-15 06:11:42,118 DEBUG:find_def_from_bottom label 58
2024-07-15 06:11:42,118 DEBUG:incoming_def max_value = call $126load_method.10($const148.11, func=$126load_method.10, args=[Var($const148.11, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,118 DEBUG:find_def_from_bottom label 298
2024-07-15 06:11:42,118 DEBUG:find_def_from_top label 298
2024-07-15 06:11:42,118 DEBUG:insert phi node max_value.3 = phi(incoming_values=[], incoming_blocks=[]) at 298
2024-07-15 06:11:42,118 DEBUG:find_def_from_bottom label 294
2024-07-15 06:11:42,118 DEBUG:incoming_def max_value.1 = v
2024-07-15 06:11:42,118 DEBUG:find_def_from_bottom label 270
2024-07-15 06:11:42,118 DEBUG:find_def_from_top label 270
2024-07-15 06:11:42,118 DEBUG:idom 198 from label 270
2024-07-15 06:11:42,118 DEBUG:find_def_from_bottom label 198
2024-07-15 06:11:42,118 DEBUG:find_def_from_top label 198
2024-07-15 06:11:42,118 DEBUG:idom 196 from label 198
2024-07-15 06:11:42,118 DEBUG:find_def_from_bottom label 196
2024-07-15 06:11:42,118 DEBUG:incoming_def max_value.2 = phi(incoming_values=[Var(max_value, arraymath.py:576)], incoming_blocks=[192])
2024-07-15 06:11:42,119 DEBUG:incoming_def max_value.3 = phi(incoming_values=[Var(max_value.1, arraymath.py:585), Var(max_value.2, arraymath.py:584)], incoming_blocks=[294, 270])
2024-07-15 06:11:42,119 DEBUG:replaced with: $282call.5 = call $272load_deref.2(v, max_value.2, func=$272load_deref.2, args=[Var(v, arraymath.py:581), Var(max_value.2, arraymath.py:584)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,119 DEBUG:on stmt: bool292 = global(bool: <class 'bool'>)
2024-07-15 06:11:42,119 DEBUG:on stmt: $292pred = call bool292($282call.5, func=bool292, args=(Var($282call.5, arraymath.py:584),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,119 DEBUG:on stmt: branch $292pred, 294, 298
2024-07-15 06:11:42,119 DEBUG:==== SSA block rewrite pass on 294
2024-07-15 06:11:42,119 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5A6D250>
2024-07-15 06:11:42,119 DEBUG:on stmt: max_value.1 = v
2024-07-15 06:11:42,119 DEBUG:on stmt: jump 298
2024-07-15 06:11:42,119 DEBUG:==== SSA block rewrite pass on 298
2024-07-15 06:11:42,119 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5A6D250>
2024-07-15 06:11:42,119 DEBUG:on stmt: jump 196
2024-07-15 06:11:42,119 DEBUG:==== SSA block rewrite pass on 300
2024-07-15 06:11:42,119 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5A6D250>
2024-07-15 06:11:42,119 DEBUG:on stmt: $302return_value.1 = cast(value=max_value)
2024-07-15 06:11:42,119 DEBUG:find_def var='max_value' stmt=$302return_value.1 = cast(value=max_value)
2024-07-15 06:11:42,119 DEBUG:find_def_from_top label 300
2024-07-15 06:11:42,119 DEBUG:idom 196 from label 300
2024-07-15 06:11:42,119 DEBUG:find_def_from_bottom label 196
2024-07-15 06:11:42,119 DEBUG:replaced with: $302return_value.1 = cast(value=max_value.2)
2024-07-15 06:11:42,119 DEBUG:on stmt: return $302return_value.1
2024-07-15 06:11:42,129 DEBUG:bytecode dump:
>          0	NOP(arg=None, lineno=4691)
           2	RESUME(arg=0, lineno=4691)
           4	LOAD_FAST(arg=1, lineno=4692)
           6	LOAD_FAST(arg=0, lineno=4692)
           8	LOAD_ATTR(arg=0, lineno=4692)
          18	LOAD_CONST(arg=1, lineno=4692)
          20	BINARY_OP(arg=10, lineno=4692)
          24	COMPARE_OP(arg=4, lineno=4692)
          30	POP_JUMP_FORWARD_IF_TRUE(arg=12, lineno=4692)
          32	LOAD_FAST(arg=1, lineno=4692)
          34	LOAD_FAST(arg=0, lineno=4692)
          36	LOAD_ATTR(arg=0, lineno=4692)
          46	UNARY_NEGATIVE(arg=None, lineno=4692)
          48	COMPARE_OP(arg=0, lineno=4692)
          54	POP_JUMP_FORWARD_IF_FALSE(arg=15, lineno=4692)
>         56	LOAD_GLOBAL(arg=3, lineno=4693)
          68	LOAD_CONST(arg=2, lineno=4693)
          70	PRECALL(arg=1, lineno=4693)
          74	CALL(arg=1, lineno=4693)
          84	RAISE_VARARGS(arg=1, lineno=4693)
>         86	LOAD_FAST(arg=0, lineno=4694)
          88	LOAD_METHOD(arg=2, lineno=4694)
         110	PRECALL(arg=0, lineno=4694)
         114	CALL(arg=0, lineno=4694)
         124	LOAD_FAST(arg=1, lineno=4694)
         126	BINARY_SUBSCR(arg=None, lineno=4694)
         136	RETURN_VALUE(arg=None, lineno=4694)
2024-07-15 06:11:42,129 DEBUG:pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-15 06:11:42,129 DEBUG:stack: []
2024-07-15 06:11:42,129 DEBUG:state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-15 06:11:42,129 DEBUG:dispatch pc=0, inst=NOP(arg=None, lineno=4691)
2024-07-15 06:11:42,129 DEBUG:stack []
2024-07-15 06:11:42,129 DEBUG:dispatch pc=2, inst=RESUME(arg=0, lineno=4691)
2024-07-15 06:11:42,129 DEBUG:stack []
2024-07-15 06:11:42,129 DEBUG:dispatch pc=4, inst=LOAD_FAST(arg=1, lineno=4692)
2024-07-15 06:11:42,129 DEBUG:stack []
2024-07-15 06:11:42,129 DEBUG:dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=4692)
2024-07-15 06:11:42,129 DEBUG:stack ['$indices4.0']
2024-07-15 06:11:42,129 DEBUG:dispatch pc=8, inst=LOAD_ATTR(arg=0, lineno=4692)
2024-07-15 06:11:42,129 DEBUG:stack ['$indices4.0', '$a6.1']
2024-07-15 06:11:42,130 DEBUG:dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=4692)
2024-07-15 06:11:42,130 DEBUG:stack ['$indices4.0', '$8load_attr.2']
2024-07-15 06:11:42,130 DEBUG:dispatch pc=20, inst=BINARY_OP(arg=10, lineno=4692)
2024-07-15 06:11:42,130 DEBUG:stack ['$indices4.0', '$8load_attr.2', '$const18.3']
2024-07-15 06:11:42,130 DEBUG:dispatch pc=24, inst=COMPARE_OP(arg=4, lineno=4692)
2024-07-15 06:11:42,130 DEBUG:stack ['$indices4.0', '$binop_sub20.4']
2024-07-15 06:11:42,130 DEBUG:dispatch pc=30, inst=POP_JUMP_FORWARD_IF_TRUE(arg=12, lineno=4692)
2024-07-15 06:11:42,130 DEBUG:stack ['$24compare_op.5']
2024-07-15 06:11:42,130 DEBUG:end state. edges=[Edge(pc=32, stack=(), blockstack=(), npush=0), Edge(pc=56, stack=(), blockstack=(), npush=0)]
2024-07-15 06:11:42,130 DEBUG:pending: deque([State(pc_initial=32 nstack_initial=0), State(pc_initial=56 nstack_initial=0)])
2024-07-15 06:11:42,130 DEBUG:stack: []
2024-07-15 06:11:42,130 DEBUG:state.pc_initial: State(pc_initial=32 nstack_initial=0)
2024-07-15 06:11:42,130 DEBUG:dispatch pc=32, inst=LOAD_FAST(arg=1, lineno=4692)
2024-07-15 06:11:42,130 DEBUG:stack []
2024-07-15 06:11:42,130 DEBUG:dispatch pc=34, inst=LOAD_FAST(arg=0, lineno=4692)
2024-07-15 06:11:42,130 DEBUG:stack ['$indices32.0']
2024-07-15 06:11:42,130 DEBUG:dispatch pc=36, inst=LOAD_ATTR(arg=0, lineno=4692)
2024-07-15 06:11:42,130 DEBUG:stack ['$indices32.0', '$a34.1']
2024-07-15 06:11:42,130 DEBUG:dispatch pc=46, inst=UNARY_NEGATIVE(arg=None, lineno=4692)
2024-07-15 06:11:42,130 DEBUG:stack ['$indices32.0', '$36load_attr.2']
2024-07-15 06:11:42,130 DEBUG:dispatch pc=48, inst=COMPARE_OP(arg=0, lineno=4692)
2024-07-15 06:11:42,130 DEBUG:stack ['$indices32.0', '$46unary_negative.3']
2024-07-15 06:11:42,130 DEBUG:dispatch pc=54, inst=POP_JUMP_FORWARD_IF_FALSE(arg=15, lineno=4692)
2024-07-15 06:11:42,130 DEBUG:stack ['$48compare_op.4']
2024-07-15 06:11:42,130 DEBUG:end state. edges=[Edge(pc=56, stack=(), blockstack=(), npush=0), Edge(pc=86, stack=(), blockstack=(), npush=0)]
2024-07-15 06:11:42,130 DEBUG:pending: deque([State(pc_initial=56 nstack_initial=0), State(pc_initial=56 nstack_initial=0), State(pc_initial=86 nstack_initial=0)])
2024-07-15 06:11:42,130 DEBUG:stack: []
2024-07-15 06:11:42,130 DEBUG:state.pc_initial: State(pc_initial=56 nstack_initial=0)
2024-07-15 06:11:42,130 DEBUG:dispatch pc=56, inst=LOAD_GLOBAL(arg=3, lineno=4693)
2024-07-15 06:11:42,130 DEBUG:stack []
2024-07-15 06:11:42,131 DEBUG:dispatch pc=68, inst=LOAD_CONST(arg=2, lineno=4693)
2024-07-15 06:11:42,131 DEBUG:stack ['$null$56.1', '$56load_global.0']
2024-07-15 06:11:42,131 DEBUG:dispatch pc=70, inst=PRECALL(arg=1, lineno=4693)
2024-07-15 06:11:42,131 DEBUG:stack ['$null$56.1', '$56load_global.0', '$const68.2']
2024-07-15 06:11:42,131 DEBUG:dispatch pc=74, inst=CALL(arg=1, lineno=4693)
2024-07-15 06:11:42,131 DEBUG:stack ['$null$56.1', '$56load_global.0', '$const68.2']
2024-07-15 06:11:42,131 DEBUG:dispatch pc=84, inst=RAISE_VARARGS(arg=1, lineno=4693)
2024-07-15 06:11:42,131 DEBUG:stack ['$74call.3']
2024-07-15 06:11:42,131 DEBUG:end state. edges=[]
2024-07-15 06:11:42,131 DEBUG:pending: deque([State(pc_initial=56 nstack_initial=0), State(pc_initial=86 nstack_initial=0)])
2024-07-15 06:11:42,131 DEBUG:pending: deque([State(pc_initial=86 nstack_initial=0)])
2024-07-15 06:11:42,131 DEBUG:stack: []
2024-07-15 06:11:42,131 DEBUG:state.pc_initial: State(pc_initial=86 nstack_initial=0)
2024-07-15 06:11:42,131 DEBUG:dispatch pc=86, inst=LOAD_FAST(arg=0, lineno=4694)
2024-07-15 06:11:42,131 DEBUG:stack []
2024-07-15 06:11:42,131 DEBUG:dispatch pc=88, inst=LOAD_METHOD(arg=2, lineno=4694)
2024-07-15 06:11:42,131 DEBUG:stack ['$a86.0']
2024-07-15 06:11:42,131 DEBUG:dispatch pc=110, inst=PRECALL(arg=0, lineno=4694)
2024-07-15 06:11:42,131 DEBUG:stack ['$null$88.1', '$88load_method.2']
2024-07-15 06:11:42,131 DEBUG:dispatch pc=114, inst=CALL(arg=0, lineno=4694)
2024-07-15 06:11:42,131 DEBUG:stack ['$null$88.1', '$88load_method.2']
2024-07-15 06:11:42,131 DEBUG:dispatch pc=124, inst=LOAD_FAST(arg=1, lineno=4694)
2024-07-15 06:11:42,131 DEBUG:stack ['$114call.3']
2024-07-15 06:11:42,131 DEBUG:dispatch pc=126, inst=BINARY_SUBSCR(arg=None, lineno=4694)
2024-07-15 06:11:42,131 DEBUG:stack ['$114call.3', '$indices124.4']
2024-07-15 06:11:42,131 DEBUG:dispatch pc=136, inst=RETURN_VALUE(arg=None, lineno=4694)
2024-07-15 06:11:42,131 DEBUG:stack ['$126binary_subscr.5']
2024-07-15 06:11:42,131 DEBUG:end state. edges=[]
2024-07-15 06:11:42,131 DEBUG:-------------------------Prune PHIs-------------------------
2024-07-15 06:11:42,131 DEBUG:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=32 nstack_initial=0): set(),
             State(pc_initial=56 nstack_initial=0): set(),
             State(pc_initial=86 nstack_initial=0): set()})
2024-07-15 06:11:42,132 DEBUG:defmap: {}
2024-07-15 06:11:42,132 DEBUG:phismap: defaultdict(<class 'set'>, {})
2024-07-15 06:11:42,132 DEBUG:changing phismap: defaultdict(<class 'set'>, {})
2024-07-15 06:11:42,132 DEBUG:keep phismap: {}
2024-07-15 06:11:42,132 DEBUG:new_out: defaultdict(<class 'dict'>, {})
2024-07-15 06:11:42,132 DEBUG:----------------------DONE Prune PHIs-----------------------
2024-07-15 06:11:42,132 DEBUG:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$indices4.0'}), (6, {'res': '$a6.1'}), (8, {'item': '$a6.1', 'res': '$8load_attr.2'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'res': '$const18.3'}), (20, {'op': '-', 'lhs': '$8load_attr.2', 'rhs': '$const18.3', 'res': '$binop_sub20.4'}), (22, {}), (24, {'lhs': '$indices4.0', 'rhs': '$binop_sub20.4', 'res': '$24compare_op.5'}), (26, {}), (28, {}), (30, {'pred': '$24compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={32: (), 56: ()})
2024-07-15 06:11:42,132 DEBUG:block_infos State(pc_initial=32 nstack_initial=0):
AdaptBlockInfo(insts=((32, {'res': '$indices32.0'}), (34, {'res': '$a34.1'}), (36, {'item': '$a34.1', 'res': '$36load_attr.2'}), (38, {}), (40, {}), (42, {}), (44, {}), (46, {'value': '$36load_attr.2', 'res': '$46unary_negative.3'}), (48, {'lhs': '$indices32.0', 'rhs': '$46unary_negative.3', 'res': '$48compare_op.4'}), (50, {}), (52, {}), (54, {'pred': '$48compare_op.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={56: (), 86: ()})
2024-07-15 06:11:42,132 DEBUG:block_infos State(pc_initial=56 nstack_initial=0):
AdaptBlockInfo(insts=((56, {'idx': 1, 'res': '$56load_global.0'}), (58, {}), (60, {}), (62, {}), (64, {}), (66, {}), (68, {'res': '$const68.2'}), (70, {}), (72, {}), (74, {'func': '$56load_global.0', 'args': ['$const68.2'], 'kw_names': None, 'res': '$74call.3'}), (76, {}), (78, {}), (80, {}), (82, {}), (84, {'exc': '$74call.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-15 06:11:42,132 DEBUG:block_infos State(pc_initial=86 nstack_initial=0):
AdaptBlockInfo(insts=((86, {'res': '$a86.0'}), (88, {'item': '$a86.0', 'res': '$88load_method.2'}), (90, {}), (92, {}), (94, {}), (96, {}), (98, {}), (100, {}), (102, {}), (104, {}), (106, {}), (108, {}), (110, {}), (112, {}), (114, {'func': '$88load_method.2', 'args': [], 'kw_names': None, 'res': '$114call.3'}), (116, {}), (118, {}), (120, {}), (122, {}), (124, {'res': '$indices124.4'}), (126, {'index': '$indices124.4', 'target': '$114call.3', 'res': '$126binary_subscr.5'}), (128, {}), (130, {}), (132, {}), (134, {}), (136, {'retval': '$126binary_subscr.5', 'castval': '$136return_value.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-15 06:11:42,132 DEBUG:label 0:
    a = arg(0, name=a)                       ['a']
    indices = arg(1, name=indices)           ['indices']
    $8load_attr.2 = getattr(value=a, attr=size) ['$8load_attr.2', 'a']
    $const18.3 = const(int, 1)               ['$const18.3']
    $binop_sub20.4 = $8load_attr.2 - $const18.3 ['$8load_attr.2', '$binop_sub20.4', '$const18.3']
    $24compare_op.5 = indices > $binop_sub20.4 ['$24compare_op.5', '$binop_sub20.4', 'indices']
    bool30 = global(bool: <class 'bool'>)    ['bool30']
    $30pred = call bool30($24compare_op.5, func=bool30, args=(Var($24compare_op.5, arrayobj.py:4692),), kws=(), vararg=None, varkwarg=None, target=None) ['$24compare_op.5', '$30pred', 'bool30']
    branch $30pred, 56, 32                   ['$30pred']
label 32:
    $36load_attr.2 = getattr(value=a, attr=size) ['$36load_attr.2', 'a']
    $46unary_negative.3 = unary(fn=<built-in function neg>, value=$36load_attr.2) ['$36load_attr.2', '$46unary_negative.3']
    $48compare_op.4 = indices < $46unary_negative.3 ['$46unary_negative.3', '$48compare_op.4', 'indices']
    bool54 = global(bool: <class 'bool'>)    ['bool54']
    $54pred = call bool54($48compare_op.4, func=bool54, args=(Var($48compare_op.4, arrayobj.py:4692),), kws=(), vararg=None, varkwarg=None, target=None) ['$48compare_op.4', '$54pred', 'bool54']
    branch $54pred, 56, 86                   ['$54pred']
label 56:
    $56load_global.0 = global(IndexError: <class 'IndexError'>) ['$56load_global.0']
    $const68.2 = const(str, Index out of bounds) ['$const68.2']
    $74call.3 = call $56load_global.0($const68.2, func=$56load_global.0, args=[Var($const68.2, arrayobj.py:4693)], kws=(), vararg=None, varkwarg=None, target=None) ['$56load_global.0', '$74call.3', '$const68.2']
    raise $74call.3                          ['$74call.3']
label 86:
    $88load_method.2 = getattr(value=a, attr=ravel) ['$88load_method.2', 'a']
    $114call.3 = call $88load_method.2(func=$88load_method.2, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$114call.3', '$88load_method.2']
    $126binary_subscr.5 = getitem(value=$114call.3, index=indices, fn=<built-in function getitem>) ['$114call.3', '$126binary_subscr.5', 'indices']
    $136return_value.6 = cast(value=$126binary_subscr.5) ['$126binary_subscr.5', '$136return_value.6']
    return $136return_value.6                ['$136return_value.6']

2024-07-15 06:11:42,148 DEBUG:==== SSA block analysis pass on 0
2024-07-15 06:11:42,148 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5A6D490>
2024-07-15 06:11:42,148 DEBUG:on stmt: a = arg(0, name=a)
2024-07-15 06:11:42,148 DEBUG:on stmt: indices = arg(1, name=indices)
2024-07-15 06:11:42,148 DEBUG:on stmt: $8load_attr.2 = getattr(value=a, attr=size)
2024-07-15 06:11:42,148 DEBUG:on stmt: $const18.3 = const(int, 1)
2024-07-15 06:11:42,148 DEBUG:on stmt: $binop_sub20.4 = $8load_attr.2 - $const18.3
2024-07-15 06:11:42,148 DEBUG:on stmt: $24compare_op.5 = indices > $binop_sub20.4
2024-07-15 06:11:42,148 DEBUG:on stmt: bool30 = global(bool: <class 'bool'>)
2024-07-15 06:11:42,148 DEBUG:on stmt: $30pred = call bool30($24compare_op.5, func=bool30, args=(Var($24compare_op.5, arrayobj.py:4692),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,148 DEBUG:on stmt: branch $30pred, 56, 32
2024-07-15 06:11:42,148 DEBUG:==== SSA block analysis pass on 32
2024-07-15 06:11:42,148 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5A6D490>
2024-07-15 06:11:42,149 DEBUG:on stmt: $36load_attr.2 = getattr(value=a, attr=size)
2024-07-15 06:11:42,149 DEBUG:on stmt: $46unary_negative.3 = unary(fn=<built-in function neg>, value=$36load_attr.2)
2024-07-15 06:11:42,149 DEBUG:on stmt: $48compare_op.4 = indices < $46unary_negative.3
2024-07-15 06:11:42,149 DEBUG:on stmt: bool54 = global(bool: <class 'bool'>)
2024-07-15 06:11:42,149 DEBUG:on stmt: $54pred = call bool54($48compare_op.4, func=bool54, args=(Var($48compare_op.4, arrayobj.py:4692),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,149 DEBUG:on stmt: branch $54pred, 56, 86
2024-07-15 06:11:42,149 DEBUG:==== SSA block analysis pass on 56
2024-07-15 06:11:42,149 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5A6D490>
2024-07-15 06:11:42,149 DEBUG:on stmt: $56load_global.0 = global(IndexError: <class 'IndexError'>)
2024-07-15 06:11:42,149 DEBUG:on stmt: $const68.2 = const(str, Index out of bounds)
2024-07-15 06:11:42,149 DEBUG:on stmt: $74call.3 = call $56load_global.0($const68.2, func=$56load_global.0, args=[Var($const68.2, arrayobj.py:4693)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,149 DEBUG:on stmt: <static> raise <class 'IndexError'>('Index out of bounds')
2024-07-15 06:11:42,149 DEBUG:==== SSA block analysis pass on 86
2024-07-15 06:11:42,149 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5A6D490>
2024-07-15 06:11:42,149 DEBUG:on stmt: $88load_method.2 = getattr(value=a, attr=ravel)
2024-07-15 06:11:42,149 DEBUG:on stmt: $114call.3 = call $88load_method.2(func=$88load_method.2, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,149 DEBUG:on stmt: $126binary_subscr.5 = getitem(value=$114call.3, index=indices, fn=<built-in function getitem>)
2024-07-15 06:11:42,149 DEBUG:on stmt: $136return_value.6 = cast(value=$126binary_subscr.5)
2024-07-15 06:11:42,149 DEBUG:on stmt: return $136return_value.6
2024-07-15 06:11:42,149 DEBUG:defs defaultdict(<class 'list'>,
            {'$114call.3': [(<numba.core.ir.Assign object at 0x00000221B693EF90>,
                             86)],
             '$126binary_subscr.5': [(<numba.core.ir.Assign object at 0x00000221B693E410>,
                                      86)],
             '$136return_value.6': [(<numba.core.ir.Assign object at 0x00000221B693D190>,
                                     86)],
             '$24compare_op.5': [(<numba.core.ir.Assign object at 0x00000221B6A6A790>,
                                  0)],
             '$30pred': [(<numba.core.ir.Assign object at 0x00000221B6A69C10>,
                          0)],
             '$36load_attr.2': [(<numba.core.ir.Assign object at 0x00000221B6A6A010>,
                                 32)],
             '$46unary_negative.3': [(<numba.core.ir.Assign object at 0x00000221B6A69250>,
                                      32)],
             '$48compare_op.4': [(<numba.core.ir.Assign object at 0x00000221B6A695D0>,
                                  32)],
             '$54pred': [(<numba.core.ir.Assign object at 0x00000221B693F490>,
                          32)],
             '$56load_global.0': [(<numba.core.ir.Assign object at 0x00000221B693F750>,
                                   56)],
             '$74call.3': [(<numba.core.ir.Assign object at 0x00000221B693DB90>,
                            56)],
             '$88load_method.2': [(<numba.core.ir.Assign object at 0x00000221B693C7D0>,
                                   86)],
             '$8load_attr.2': [(<numba.core.ir.Assign object at 0x00000221B6A69490>,
                                0)],
             '$binop_sub20.4': [(<numba.core.ir.Assign object at 0x00000221B6A6AD50>,
                                 0)],
             '$const18.3': [(<numba.core.ir.Assign object at 0x00000221B6A6A810>,
                             0)],
             '$const68.2': [(<numba.core.ir.Assign object at 0x00000221B693CED0>,
                             56)],
             'a': [(<numba.core.ir.Assign object at 0x00000221B6A68750>, 0)],
             'bool30': [(<numba.core.ir.Assign object at 0x00000221B6A6A5D0>,
                         0)],
             'bool54': [(<numba.core.ir.Assign object at 0x00000221B6A69990>,
                         32)],
             'indices': [(<numba.core.ir.Assign object at 0x00000221B6A68F90>,
                          0)]})
2024-07-15 06:11:42,150 DEBUG:SSA violators <numba.core.utils.OrderedSet object at 0x00000221B5A6D490>
2024-07-15 06:11:42,176 DEBUG:bytecode dump:
>          0	NOP(arg=None, lineno=2230)
           2	RESUME(arg=0, lineno=2230)
           4	LOAD_FAST(arg=0, lineno=2232)
           6	LOAD_METHOD(arg=0, lineno=2232)
          28	LOAD_FAST(arg=0, lineno=2232)
          30	LOAD_ATTR(arg=1, lineno=2232)
          40	PRECALL(arg=1, lineno=2232)
          44	CALL(arg=1, lineno=2232)
          54	RETURN_VALUE(arg=None, lineno=2232)
2024-07-15 06:11:42,177 DEBUG:pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-15 06:11:42,177 DEBUG:stack: []
2024-07-15 06:11:42,177 DEBUG:state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-15 06:11:42,177 DEBUG:dispatch pc=0, inst=NOP(arg=None, lineno=2230)
2024-07-15 06:11:42,177 DEBUG:stack []
2024-07-15 06:11:42,177 DEBUG:dispatch pc=2, inst=RESUME(arg=0, lineno=2230)
2024-07-15 06:11:42,177 DEBUG:stack []
2024-07-15 06:11:42,177 DEBUG:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2232)
2024-07-15 06:11:42,177 DEBUG:stack []
2024-07-15 06:11:42,177 DEBUG:dispatch pc=6, inst=LOAD_METHOD(arg=0, lineno=2232)
2024-07-15 06:11:42,177 DEBUG:stack ['$ary4.0']
2024-07-15 06:11:42,177 DEBUG:dispatch pc=28, inst=LOAD_FAST(arg=0, lineno=2232)
2024-07-15 06:11:42,177 DEBUG:stack ['$null$6.1', '$6load_method.2']
2024-07-15 06:11:42,177 DEBUG:dispatch pc=30, inst=LOAD_ATTR(arg=1, lineno=2232)
2024-07-15 06:11:42,177 DEBUG:stack ['$null$6.1', '$6load_method.2', '$ary28.3']
2024-07-15 06:11:42,177 DEBUG:dispatch pc=40, inst=PRECALL(arg=1, lineno=2232)
2024-07-15 06:11:42,177 DEBUG:stack ['$null$6.1', '$6load_method.2', '$30load_attr.4']
2024-07-15 06:11:42,177 DEBUG:dispatch pc=44, inst=CALL(arg=1, lineno=2232)
2024-07-15 06:11:42,177 DEBUG:stack ['$null$6.1', '$6load_method.2', '$30load_attr.4']
2024-07-15 06:11:42,177 DEBUG:dispatch pc=54, inst=RETURN_VALUE(arg=None, lineno=2232)
2024-07-15 06:11:42,177 DEBUG:stack ['$44call.5']
2024-07-15 06:11:42,177 DEBUG:end state. edges=[]
2024-07-15 06:11:42,177 DEBUG:-------------------------Prune PHIs-------------------------
2024-07-15 06:11:42,177 DEBUG:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-07-15 06:11:42,177 DEBUG:defmap: {}
2024-07-15 06:11:42,177 DEBUG:phismap: defaultdict(<class 'set'>, {})
2024-07-15 06:11:42,178 DEBUG:changing phismap: defaultdict(<class 'set'>, {})
2024-07-15 06:11:42,178 DEBUG:keep phismap: {}
2024-07-15 06:11:42,178 DEBUG:new_out: defaultdict(<class 'dict'>, {})
2024-07-15 06:11:42,178 DEBUG:----------------------DONE Prune PHIs-----------------------
2024-07-15 06:11:42,178 DEBUG:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$ary4.0'}), (6, {'item': '$ary4.0', 'res': '$6load_method.2'}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {}), (20, {}), (22, {}), (24, {}), (26, {}), (28, {'res': '$ary28.3'}), (30, {'item': '$ary28.3', 'res': '$30load_attr.4'}), (32, {}), (34, {}), (36, {}), (38, {}), (40, {}), (42, {}), (44, {'func': '$6load_method.2', 'args': ['$30load_attr.4'], 'kw_names': None, 'res': '$44call.5'}), (46, {}), (48, {}), (50, {}), (52, {}), (54, {'retval': '$44call.5', 'castval': '$54return_value.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-15 06:11:42,178 DEBUG:label 0:
    ary = arg(0, name=ary)                   ['ary']
    $6load_method.2 = getattr(value=ary, attr=reshape) ['$6load_method.2', 'ary']
    $30load_attr.4 = getattr(value=ary, attr=size) ['$30load_attr.4', 'ary']
    $44call.5 = call $6load_method.2($30load_attr.4, func=$6load_method.2, args=[Var($30load_attr.4, arrayobj.py:2232)], kws=(), vararg=None, varkwarg=None, target=None) ['$30load_attr.4', '$44call.5', '$6load_method.2']
    $54return_value.6 = cast(value=$44call.5) ['$44call.5', '$54return_value.6']
    return $54return_value.6                 ['$54return_value.6']

2024-07-15 06:11:42,188 DEBUG:==== SSA block analysis pass on 0
2024-07-15 06:11:42,188 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B6970050>
2024-07-15 06:11:42,188 DEBUG:on stmt: ary = arg(0, name=ary)
2024-07-15 06:11:42,188 DEBUG:on stmt: $6load_method.2 = getattr(value=ary, attr=reshape)
2024-07-15 06:11:42,188 DEBUG:on stmt: $30load_attr.4 = getattr(value=ary, attr=size)
2024-07-15 06:11:42,188 DEBUG:on stmt: $44call.5 = call $6load_method.2($30load_attr.4, func=$6load_method.2, args=[Var($30load_attr.4, arrayobj.py:2232)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,188 DEBUG:on stmt: $54return_value.6 = cast(value=$44call.5)
2024-07-15 06:11:42,188 DEBUG:on stmt: return $54return_value.6
2024-07-15 06:11:42,188 DEBUG:defs defaultdict(<class 'list'>,
            {'$30load_attr.4': [(<numba.core.ir.Assign object at 0x00000221B69E6390>,
                                 0)],
             '$44call.5': [(<numba.core.ir.Assign object at 0x00000221B69E5910>,
                            0)],
             '$54return_value.6': [(<numba.core.ir.Assign object at 0x00000221B69E5790>,
                                    0)],
             '$6load_method.2': [(<numba.core.ir.Assign object at 0x00000221B69E4550>,
                                  0)],
             'ary': [(<numba.core.ir.Assign object at 0x00000221B69E6B10>, 0)]})
2024-07-15 06:11:42,188 DEBUG:SSA violators <numba.core.utils.OrderedSet object at 0x00000221B6970050>
2024-07-15 06:11:42,196 DEBUG:bytecode dump:
>          0	NOP(arg=None, lineno=2046)
           2	RESUME(arg=0, lineno=2046)
           4	LOAD_CONST(arg=1, lineno=2047)
           6	STORE_FAST(arg=2, lineno=2047)
           8	LOAD_CONST(arg=2, lineno=2048)
          10	STORE_FAST(arg=3, lineno=2048)
          12	LOAD_GLOBAL(arg=1, lineno=2049)
          24	LOAD_FAST(arg=1, lineno=2049)
          26	PRECALL(arg=1, lineno=2049)
          30	CALL(arg=1, lineno=2049)
          40	GET_ITER(arg=None, lineno=2049)
>         42	FOR_ITER(arg=24, lineno=2049)
          44	UNPACK_SEQUENCE(arg=2, lineno=2049)
          48	STORE_FAST(arg=4, lineno=2049)
          50	STORE_FAST(arg=5, lineno=2049)
          52	LOAD_FAST(arg=5, lineno=2050)
          54	LOAD_CONST(arg=1, lineno=2050)
          56	COMPARE_OP(arg=0, lineno=2050)
          62	POP_JUMP_FORWARD_IF_FALSE(arg=8, lineno=2050)
          64	LOAD_FAST(arg=2, lineno=2051)
          66	LOAD_CONST(arg=2, lineno=2051)
          68	BINARY_OP(arg=13, lineno=2051)
          72	STORE_FAST(arg=2, lineno=2051)
          74	LOAD_FAST(arg=4, lineno=2052)
          76	STORE_FAST(arg=6, lineno=2052)
          78	JUMP_BACKWARD(arg=19, lineno=2052)
>         80	LOAD_FAST(arg=3, lineno=2054)
          82	LOAD_FAST(arg=5, lineno=2054)
          84	BINARY_OP(arg=18, lineno=2054)
          88	STORE_FAST(arg=3, lineno=2054)
          90	JUMP_BACKWARD(arg=25, lineno=2054)
>         92	LOAD_FAST(arg=2, lineno=2056)
          94	LOAD_CONST(arg=1, lineno=2056)
          96	COMPARE_OP(arg=2, lineno=2056)
         102	POP_JUMP_FORWARD_IF_FALSE(arg=23, lineno=2056)
         104	LOAD_FAST(arg=0, lineno=2057)
         106	LOAD_FAST(arg=3, lineno=2057)
         108	COMPARE_OP(arg=3, lineno=2057)
         114	POP_JUMP_FORWARD_IF_FALSE(arg=15, lineno=2057)
         116	LOAD_GLOBAL(arg=3, lineno=2058)
         128	LOAD_CONST(arg=3, lineno=2058)
         130	PRECALL(arg=1, lineno=2058)
         134	CALL(arg=1, lineno=2058)
         144	RAISE_VARARGS(arg=1, lineno=2058)
>        146	LOAD_CONST(arg=0, lineno=2057)
         148	RETURN_VALUE(arg=None, lineno=2057)
>        150	LOAD_FAST(arg=2, lineno=2060)
         152	LOAD_CONST(arg=2, lineno=2060)
         154	COMPARE_OP(arg=2, lineno=2060)
         160	POP_JUMP_FORWARD_IF_FALSE(arg=53, lineno=2060)
         162	LOAD_FAST(arg=3, lineno=2062)
         164	LOAD_CONST(arg=1, lineno=2062)
         166	COMPARE_OP(arg=2, lineno=2062)
         172	POP_JUMP_FORWARD_IF_FALSE(arg=9, lineno=2062)
         174	LOAD_CONST(arg=1, lineno=2063)
         176	STORE_FAST(arg=7, lineno=2063)
         178	LOAD_FAST(arg=0, lineno=2064)
         180	LOAD_CONST(arg=1, lineno=2064)
         182	COMPARE_OP(arg=2, lineno=2064)
         188	STORE_FAST(arg=8, lineno=2064)
         190	JUMP_FORWARD(arg=14, lineno=2064)
>        192	LOAD_FAST(arg=0, lineno=2066)
         194	LOAD_FAST(arg=3, lineno=2066)
         196	BINARY_OP(arg=2, lineno=2066)
         200	STORE_FAST(arg=7, lineno=2066)
         202	LOAD_FAST(arg=0, lineno=2067)
         204	LOAD_FAST(arg=3, lineno=2067)
         206	BINARY_OP(arg=6, lineno=2067)
         210	LOAD_CONST(arg=1, lineno=2067)
         212	COMPARE_OP(arg=2, lineno=2067)
         218	STORE_FAST(arg=8, lineno=2067)
>        220	LOAD_FAST(arg=8, lineno=2068)
         222	POP_JUMP_FORWARD_IF_TRUE(arg=15, lineno=2068)
         224	LOAD_GLOBAL(arg=3, lineno=2069)
         236	LOAD_CONST(arg=3, lineno=2069)
         238	PRECALL(arg=1, lineno=2069)
         242	CALL(arg=1, lineno=2069)
         252	RAISE_VARARGS(arg=1, lineno=2069)
>        254	LOAD_FAST(arg=7, lineno=2070)
         256	LOAD_FAST(arg=1, lineno=2070)
         258	LOAD_FAST(arg=6, lineno=2070)
         260	STORE_SUBSCR(arg=None, lineno=2070)
         264	LOAD_CONST(arg=0, lineno=2070)
         266	RETURN_VALUE(arg=None, lineno=2070)
>        268	LOAD_GLOBAL(arg=3, lineno=2073)
         280	LOAD_CONST(arg=4, lineno=2073)
         282	PRECALL(arg=1, lineno=2073)
         286	CALL(arg=1, lineno=2073)
         296	RAISE_VARARGS(arg=1, lineno=2073)
2024-07-15 06:11:42,197 DEBUG:pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-15 06:11:42,197 DEBUG:stack: []
2024-07-15 06:11:42,197 DEBUG:state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-15 06:11:42,197 DEBUG:dispatch pc=0, inst=NOP(arg=None, lineno=2046)
2024-07-15 06:11:42,197 DEBUG:stack []
2024-07-15 06:11:42,197 DEBUG:dispatch pc=2, inst=RESUME(arg=0, lineno=2046)
2024-07-15 06:11:42,197 DEBUG:stack []
2024-07-15 06:11:42,197 DEBUG:dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=2047)
2024-07-15 06:11:42,197 DEBUG:stack []
2024-07-15 06:11:42,197 DEBUG:dispatch pc=6, inst=STORE_FAST(arg=2, lineno=2047)
2024-07-15 06:11:42,197 DEBUG:stack ['$const4.0']
2024-07-15 06:11:42,197 DEBUG:dispatch pc=8, inst=LOAD_CONST(arg=2, lineno=2048)
2024-07-15 06:11:42,197 DEBUG:stack []
2024-07-15 06:11:42,197 DEBUG:dispatch pc=10, inst=STORE_FAST(arg=3, lineno=2048)
2024-07-15 06:11:42,197 DEBUG:stack ['$const8.1']
2024-07-15 06:11:42,197 DEBUG:dispatch pc=12, inst=LOAD_GLOBAL(arg=1, lineno=2049)
2024-07-15 06:11:42,197 DEBUG:stack []
2024-07-15 06:11:42,197 DEBUG:dispatch pc=24, inst=LOAD_FAST(arg=1, lineno=2049)
2024-07-15 06:11:42,197 DEBUG:stack ['$null$12.3', '$12load_global.2']
2024-07-15 06:11:42,197 DEBUG:dispatch pc=26, inst=PRECALL(arg=1, lineno=2049)
2024-07-15 06:11:42,197 DEBUG:stack ['$null$12.3', '$12load_global.2', '$shape24.4']
2024-07-15 06:11:42,197 DEBUG:dispatch pc=30, inst=CALL(arg=1, lineno=2049)
2024-07-15 06:11:42,197 DEBUG:stack ['$null$12.3', '$12load_global.2', '$shape24.4']
2024-07-15 06:11:42,197 DEBUG:dispatch pc=40, inst=GET_ITER(arg=None, lineno=2049)
2024-07-15 06:11:42,197 DEBUG:stack ['$30call.5']
2024-07-15 06:11:42,197 DEBUG:end state. edges=[Edge(pc=42, stack=('$40get_iter.6',), blockstack=(), npush=0)]
2024-07-15 06:11:42,197 DEBUG:pending: deque([State(pc_initial=42 nstack_initial=1)])
2024-07-15 06:11:42,197 DEBUG:stack: ['$phi42.0']
2024-07-15 06:11:42,197 DEBUG:state.pc_initial: State(pc_initial=42 nstack_initial=1)
2024-07-15 06:11:42,197 DEBUG:dispatch pc=42, inst=FOR_ITER(arg=24, lineno=2049)
2024-07-15 06:11:42,197 DEBUG:stack ['$phi42.0']
2024-07-15 06:11:42,197 DEBUG:end state. edges=[Edge(pc=92, stack=(), blockstack=(), npush=0), Edge(pc=44, stack=('$phi42.0', '$42for_iter.2'), blockstack=(), npush=0)]
2024-07-15 06:11:42,197 DEBUG:pending: deque([State(pc_initial=92 nstack_initial=0), State(pc_initial=44 nstack_initial=2)])
2024-07-15 06:11:42,197 DEBUG:stack: []
2024-07-15 06:11:42,198 DEBUG:state.pc_initial: State(pc_initial=92 nstack_initial=0)
2024-07-15 06:11:42,198 DEBUG:dispatch pc=92, inst=LOAD_FAST(arg=2, lineno=2056)
2024-07-15 06:11:42,198 DEBUG:stack []
2024-07-15 06:11:42,198 DEBUG:dispatch pc=94, inst=LOAD_CONST(arg=1, lineno=2056)
2024-07-15 06:11:42,198 DEBUG:stack ['$num_neg_value92.0']
2024-07-15 06:11:42,198 DEBUG:dispatch pc=96, inst=COMPARE_OP(arg=2, lineno=2056)
2024-07-15 06:11:42,198 DEBUG:stack ['$num_neg_value92.0', '$const94.1']
2024-07-15 06:11:42,198 DEBUG:dispatch pc=102, inst=POP_JUMP_FORWARD_IF_FALSE(arg=23, lineno=2056)
2024-07-15 06:11:42,198 DEBUG:stack ['$96compare_op.2']
2024-07-15 06:11:42,198 DEBUG:end state. edges=[Edge(pc=104, stack=(), blockstack=(), npush=0), Edge(pc=150, stack=(), blockstack=(), npush=0)]
2024-07-15 06:11:42,198 DEBUG:pending: deque([State(pc_initial=44 nstack_initial=2), State(pc_initial=104 nstack_initial=0), State(pc_initial=150 nstack_initial=0)])
2024-07-15 06:11:42,198 DEBUG:stack: ['$phi44.0', '$phi44.1']
2024-07-15 06:11:42,198 DEBUG:state.pc_initial: State(pc_initial=44 nstack_initial=2)
2024-07-15 06:11:42,198 DEBUG:dispatch pc=44, inst=UNPACK_SEQUENCE(arg=2, lineno=2049)
2024-07-15 06:11:42,198 DEBUG:stack ['$phi44.0', '$phi44.1']
2024-07-15 06:11:42,198 DEBUG:dispatch pc=48, inst=STORE_FAST(arg=4, lineno=2049)
2024-07-15 06:11:42,198 DEBUG:stack ['$phi44.0', '$44unpack_sequence.3', '$44unpack_sequence.2']
2024-07-15 06:11:42,198 DEBUG:dispatch pc=50, inst=STORE_FAST(arg=5, lineno=2049)
2024-07-15 06:11:42,198 DEBUG:stack ['$phi44.0', '$44unpack_sequence.3']
2024-07-15 06:11:42,198 DEBUG:dispatch pc=52, inst=LOAD_FAST(arg=5, lineno=2050)
2024-07-15 06:11:42,198 DEBUG:stack ['$phi44.0']
2024-07-15 06:11:42,198 DEBUG:dispatch pc=54, inst=LOAD_CONST(arg=1, lineno=2050)
2024-07-15 06:11:42,198 DEBUG:stack ['$phi44.0', '$s52.5']
2024-07-15 06:11:42,198 DEBUG:dispatch pc=56, inst=COMPARE_OP(arg=0, lineno=2050)
2024-07-15 06:11:42,198 DEBUG:stack ['$phi44.0', '$s52.5', '$const54.6']
2024-07-15 06:11:42,198 DEBUG:dispatch pc=62, inst=POP_JUMP_FORWARD_IF_FALSE(arg=8, lineno=2050)
2024-07-15 06:11:42,198 DEBUG:stack ['$phi44.0', '$56compare_op.7']
2024-07-15 06:11:42,198 DEBUG:end state. edges=[Edge(pc=64, stack=('$phi44.0',), blockstack=(), npush=0), Edge(pc=80, stack=('$phi44.0',), blockstack=(), npush=0)]
2024-07-15 06:11:42,198 DEBUG:pending: deque([State(pc_initial=104 nstack_initial=0), State(pc_initial=150 nstack_initial=0), State(pc_initial=64 nstack_initial=1), State(pc_initial=80 nstack_initial=1)])
2024-07-15 06:11:42,198 DEBUG:stack: []
2024-07-15 06:11:42,198 DEBUG:state.pc_initial: State(pc_initial=104 nstack_initial=0)
2024-07-15 06:11:42,199 DEBUG:dispatch pc=104, inst=LOAD_FAST(arg=0, lineno=2057)
2024-07-15 06:11:42,199 DEBUG:stack []
2024-07-15 06:11:42,199 DEBUG:dispatch pc=106, inst=LOAD_FAST(arg=3, lineno=2057)
2024-07-15 06:11:42,199 DEBUG:stack ['$origsize104.0']
2024-07-15 06:11:42,199 DEBUG:dispatch pc=108, inst=COMPARE_OP(arg=3, lineno=2057)
2024-07-15 06:11:42,199 DEBUG:stack ['$origsize104.0', '$known_size106.1']
2024-07-15 06:11:42,199 DEBUG:dispatch pc=114, inst=POP_JUMP_FORWARD_IF_FALSE(arg=15, lineno=2057)
2024-07-15 06:11:42,199 DEBUG:stack ['$108compare_op.2']
2024-07-15 06:11:42,199 DEBUG:end state. edges=[Edge(pc=116, stack=(), blockstack=(), npush=0), Edge(pc=146, stack=(), blockstack=(), npush=0)]
2024-07-15 06:11:42,199 DEBUG:pending: deque([State(pc_initial=150 nstack_initial=0), State(pc_initial=64 nstack_initial=1), State(pc_initial=80 nstack_initial=1), State(pc_initial=116 nstack_initial=0), State(pc_initial=146 nstack_initial=0)])
2024-07-15 06:11:42,199 DEBUG:stack: []
2024-07-15 06:11:42,199 DEBUG:state.pc_initial: State(pc_initial=150 nstack_initial=0)
2024-07-15 06:11:42,199 DEBUG:dispatch pc=150, inst=LOAD_FAST(arg=2, lineno=2060)
2024-07-15 06:11:42,199 DEBUG:stack []
2024-07-15 06:11:42,199 DEBUG:dispatch pc=152, inst=LOAD_CONST(arg=2, lineno=2060)
2024-07-15 06:11:42,199 DEBUG:stack ['$num_neg_value150.0']
2024-07-15 06:11:42,199 DEBUG:dispatch pc=154, inst=COMPARE_OP(arg=2, lineno=2060)
2024-07-15 06:11:42,199 DEBUG:stack ['$num_neg_value150.0', '$const152.1']
2024-07-15 06:11:42,199 DEBUG:dispatch pc=160, inst=POP_JUMP_FORWARD_IF_FALSE(arg=53, lineno=2060)
2024-07-15 06:11:42,199 DEBUG:stack ['$154compare_op.2']
2024-07-15 06:11:42,199 DEBUG:end state. edges=[Edge(pc=162, stack=(), blockstack=(), npush=0), Edge(pc=268, stack=(), blockstack=(), npush=0)]
2024-07-15 06:11:42,199 DEBUG:pending: deque([State(pc_initial=64 nstack_initial=1), State(pc_initial=80 nstack_initial=1), State(pc_initial=116 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=162 nstack_initial=0), State(pc_initial=268 nstack_initial=0)])
2024-07-15 06:11:42,199 DEBUG:stack: ['$phi64.0']
2024-07-15 06:11:42,199 DEBUG:state.pc_initial: State(pc_initial=64 nstack_initial=1)
2024-07-15 06:11:42,199 DEBUG:dispatch pc=64, inst=LOAD_FAST(arg=2, lineno=2051)
2024-07-15 06:11:42,199 DEBUG:stack ['$phi64.0']
2024-07-15 06:11:42,199 DEBUG:dispatch pc=66, inst=LOAD_CONST(arg=2, lineno=2051)
2024-07-15 06:11:42,199 DEBUG:stack ['$phi64.0', '$num_neg_value64.1']
2024-07-15 06:11:42,199 DEBUG:dispatch pc=68, inst=BINARY_OP(arg=13, lineno=2051)
2024-07-15 06:11:42,199 DEBUG:stack ['$phi64.0', '$num_neg_value64.1', '$const66.2']
2024-07-15 06:11:42,199 DEBUG:dispatch pc=72, inst=STORE_FAST(arg=2, lineno=2051)
2024-07-15 06:11:42,199 DEBUG:stack ['$phi64.0', '$binop_iadd68.3']
2024-07-15 06:11:42,199 DEBUG:dispatch pc=74, inst=LOAD_FAST(arg=4, lineno=2052)
2024-07-15 06:11:42,200 DEBUG:stack ['$phi64.0']
2024-07-15 06:11:42,200 DEBUG:dispatch pc=76, inst=STORE_FAST(arg=6, lineno=2052)
2024-07-15 06:11:42,200 DEBUG:stack ['$phi64.0', '$ax74.4']
2024-07-15 06:11:42,200 DEBUG:dispatch pc=78, inst=JUMP_BACKWARD(arg=19, lineno=2052)
2024-07-15 06:11:42,200 DEBUG:stack ['$phi64.0']
2024-07-15 06:11:42,200 DEBUG:end state. edges=[Edge(pc=42, stack=('$phi64.0',), blockstack=(), npush=0)]
2024-07-15 06:11:42,200 DEBUG:pending: deque([State(pc_initial=80 nstack_initial=1), State(pc_initial=116 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=162 nstack_initial=0), State(pc_initial=268 nstack_initial=0), State(pc_initial=42 nstack_initial=1)])
2024-07-15 06:11:42,200 DEBUG:stack: ['$phi80.0']
2024-07-15 06:11:42,200 DEBUG:state.pc_initial: State(pc_initial=80 nstack_initial=1)
2024-07-15 06:11:42,200 DEBUG:dispatch pc=80, inst=LOAD_FAST(arg=3, lineno=2054)
2024-07-15 06:11:42,200 DEBUG:stack ['$phi80.0']
2024-07-15 06:11:42,200 DEBUG:dispatch pc=82, inst=LOAD_FAST(arg=5, lineno=2054)
2024-07-15 06:11:42,200 DEBUG:stack ['$phi80.0', '$known_size80.1']
2024-07-15 06:11:42,200 DEBUG:dispatch pc=84, inst=BINARY_OP(arg=18, lineno=2054)
2024-07-15 06:11:42,200 DEBUG:stack ['$phi80.0', '$known_size80.1', '$s82.2']
2024-07-15 06:11:42,200 DEBUG:dispatch pc=88, inst=STORE_FAST(arg=3, lineno=2054)
2024-07-15 06:11:42,200 DEBUG:stack ['$phi80.0', '$binop_imul84.3']
2024-07-15 06:11:42,200 DEBUG:dispatch pc=90, inst=JUMP_BACKWARD(arg=25, lineno=2054)
2024-07-15 06:11:42,200 DEBUG:stack ['$phi80.0']
2024-07-15 06:11:42,200 DEBUG:end state. edges=[Edge(pc=42, stack=('$phi80.0',), blockstack=(), npush=0)]
2024-07-15 06:11:42,200 DEBUG:pending: deque([State(pc_initial=116 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=162 nstack_initial=0), State(pc_initial=268 nstack_initial=0), State(pc_initial=42 nstack_initial=1), State(pc_initial=42 nstack_initial=1)])
2024-07-15 06:11:42,200 DEBUG:stack: []
2024-07-15 06:11:42,201 DEBUG:state.pc_initial: State(pc_initial=116 nstack_initial=0)
2024-07-15 06:11:42,201 DEBUG:dispatch pc=116, inst=LOAD_GLOBAL(arg=3, lineno=2058)
2024-07-15 06:11:42,201 DEBUG:stack []
2024-07-15 06:11:42,201 DEBUG:dispatch pc=128, inst=LOAD_CONST(arg=3, lineno=2058)
2024-07-15 06:11:42,201 DEBUG:stack ['$null$116.1', '$116load_global.0']
2024-07-15 06:11:42,201 DEBUG:dispatch pc=130, inst=PRECALL(arg=1, lineno=2058)
2024-07-15 06:11:42,201 DEBUG:stack ['$null$116.1', '$116load_global.0', '$const128.2']
2024-07-15 06:11:42,201 DEBUG:dispatch pc=134, inst=CALL(arg=1, lineno=2058)
2024-07-15 06:11:42,201 DEBUG:stack ['$null$116.1', '$116load_global.0', '$const128.2']
2024-07-15 06:11:42,201 DEBUG:dispatch pc=144, inst=RAISE_VARARGS(arg=1, lineno=2058)
2024-07-15 06:11:42,201 DEBUG:stack ['$134call.3']
2024-07-15 06:11:42,201 DEBUG:end state. edges=[]
2024-07-15 06:11:42,201 DEBUG:pending: deque([State(pc_initial=146 nstack_initial=0), State(pc_initial=162 nstack_initial=0), State(pc_initial=268 nstack_initial=0), State(pc_initial=42 nstack_initial=1), State(pc_initial=42 nstack_initial=1)])
2024-07-15 06:11:42,201 DEBUG:stack: []
2024-07-15 06:11:42,201 DEBUG:state.pc_initial: State(pc_initial=146 nstack_initial=0)
2024-07-15 06:11:42,201 DEBUG:dispatch pc=146, inst=LOAD_CONST(arg=0, lineno=2057)
2024-07-15 06:11:42,201 DEBUG:stack []
2024-07-15 06:11:42,201 DEBUG:dispatch pc=148, inst=RETURN_VALUE(arg=None, lineno=2057)
2024-07-15 06:11:42,201 DEBUG:stack ['$const146.0']
2024-07-15 06:11:42,201 DEBUG:end state. edges=[]
2024-07-15 06:11:42,201 DEBUG:pending: deque([State(pc_initial=162 nstack_initial=0), State(pc_initial=268 nstack_initial=0), State(pc_initial=42 nstack_initial=1), State(pc_initial=42 nstack_initial=1)])
2024-07-15 06:11:42,201 DEBUG:stack: []
2024-07-15 06:11:42,201 DEBUG:state.pc_initial: State(pc_initial=162 nstack_initial=0)
2024-07-15 06:11:42,201 DEBUG:dispatch pc=162, inst=LOAD_FAST(arg=3, lineno=2062)
2024-07-15 06:11:42,201 DEBUG:stack []
2024-07-15 06:11:42,201 DEBUG:dispatch pc=164, inst=LOAD_CONST(arg=1, lineno=2062)
2024-07-15 06:11:42,201 DEBUG:stack ['$known_size162.0']
2024-07-15 06:11:42,202 DEBUG:dispatch pc=166, inst=COMPARE_OP(arg=2, lineno=2062)
2024-07-15 06:11:42,202 DEBUG:stack ['$known_size162.0', '$const164.1']
2024-07-15 06:11:42,202 DEBUG:dispatch pc=172, inst=POP_JUMP_FORWARD_IF_FALSE(arg=9, lineno=2062)
2024-07-15 06:11:42,202 DEBUG:stack ['$166compare_op.2']
2024-07-15 06:11:42,202 DEBUG:end state. edges=[Edge(pc=174, stack=(), blockstack=(), npush=0), Edge(pc=192, stack=(), blockstack=(), npush=0)]
2024-07-15 06:11:42,202 DEBUG:pending: deque([State(pc_initial=268 nstack_initial=0), State(pc_initial=42 nstack_initial=1), State(pc_initial=42 nstack_initial=1), State(pc_initial=174 nstack_initial=0), State(pc_initial=192 nstack_initial=0)])
2024-07-15 06:11:42,202 DEBUG:stack: []
2024-07-15 06:11:42,202 DEBUG:state.pc_initial: State(pc_initial=268 nstack_initial=0)
2024-07-15 06:11:42,202 DEBUG:dispatch pc=268, inst=LOAD_GLOBAL(arg=3, lineno=2073)
2024-07-15 06:11:42,202 DEBUG:stack []
2024-07-15 06:11:42,202 DEBUG:dispatch pc=280, inst=LOAD_CONST(arg=4, lineno=2073)
2024-07-15 06:11:42,202 DEBUG:stack ['$null$268.1', '$268load_global.0']
2024-07-15 06:11:42,202 DEBUG:dispatch pc=282, inst=PRECALL(arg=1, lineno=2073)
2024-07-15 06:11:42,202 DEBUG:stack ['$null$268.1', '$268load_global.0', '$const280.2']
2024-07-15 06:11:42,202 DEBUG:dispatch pc=286, inst=CALL(arg=1, lineno=2073)
2024-07-15 06:11:42,202 DEBUG:stack ['$null$268.1', '$268load_global.0', '$const280.2']
2024-07-15 06:11:42,202 DEBUG:dispatch pc=296, inst=RAISE_VARARGS(arg=1, lineno=2073)
2024-07-15 06:11:42,202 DEBUG:stack ['$286call.3']
2024-07-15 06:11:42,202 DEBUG:end state. edges=[]
2024-07-15 06:11:42,202 DEBUG:pending: deque([State(pc_initial=42 nstack_initial=1), State(pc_initial=42 nstack_initial=1), State(pc_initial=174 nstack_initial=0), State(pc_initial=192 nstack_initial=0)])
2024-07-15 06:11:42,202 DEBUG:pending: deque([State(pc_initial=42 nstack_initial=1), State(pc_initial=174 nstack_initial=0), State(pc_initial=192 nstack_initial=0)])
2024-07-15 06:11:42,202 DEBUG:pending: deque([State(pc_initial=174 nstack_initial=0), State(pc_initial=192 nstack_initial=0)])
2024-07-15 06:11:42,202 DEBUG:stack: []
2024-07-15 06:11:42,202 DEBUG:state.pc_initial: State(pc_initial=174 nstack_initial=0)
2024-07-15 06:11:42,202 DEBUG:dispatch pc=174, inst=LOAD_CONST(arg=1, lineno=2063)
2024-07-15 06:11:42,203 DEBUG:stack []
2024-07-15 06:11:42,203 DEBUG:dispatch pc=176, inst=STORE_FAST(arg=7, lineno=2063)
2024-07-15 06:11:42,203 DEBUG:stack ['$const174.0']
2024-07-15 06:11:42,203 DEBUG:dispatch pc=178, inst=LOAD_FAST(arg=0, lineno=2064)
2024-07-15 06:11:42,203 DEBUG:stack []
2024-07-15 06:11:42,203 DEBUG:dispatch pc=180, inst=LOAD_CONST(arg=1, lineno=2064)
2024-07-15 06:11:42,203 DEBUG:stack ['$origsize178.1']
2024-07-15 06:11:42,203 DEBUG:dispatch pc=182, inst=COMPARE_OP(arg=2, lineno=2064)
2024-07-15 06:11:42,203 DEBUG:stack ['$origsize178.1', '$const180.2']
2024-07-15 06:11:42,203 DEBUG:dispatch pc=188, inst=STORE_FAST(arg=8, lineno=2064)
2024-07-15 06:11:42,203 DEBUG:stack ['$182compare_op.3']
2024-07-15 06:11:42,204 DEBUG:dispatch pc=190, inst=JUMP_FORWARD(arg=14, lineno=2064)
2024-07-15 06:11:42,204 DEBUG:stack []
2024-07-15 06:11:42,204 DEBUG:end state. edges=[Edge(pc=220, stack=(), blockstack=(), npush=0)]
2024-07-15 06:11:42,204 DEBUG:pending: deque([State(pc_initial=192 nstack_initial=0), State(pc_initial=220 nstack_initial=0)])
2024-07-15 06:11:42,204 DEBUG:stack: []
2024-07-15 06:11:42,204 DEBUG:state.pc_initial: State(pc_initial=192 nstack_initial=0)
2024-07-15 06:11:42,204 DEBUG:dispatch pc=192, inst=LOAD_FAST(arg=0, lineno=2066)
2024-07-15 06:11:42,204 DEBUG:stack []
2024-07-15 06:11:42,204 DEBUG:dispatch pc=194, inst=LOAD_FAST(arg=3, lineno=2066)
2024-07-15 06:11:42,204 DEBUG:stack ['$origsize192.0']
2024-07-15 06:11:42,204 DEBUG:dispatch pc=196, inst=BINARY_OP(arg=2, lineno=2066)
2024-07-15 06:11:42,204 DEBUG:stack ['$origsize192.0', '$known_size194.1']
2024-07-15 06:11:42,205 DEBUG:dispatch pc=200, inst=STORE_FAST(arg=7, lineno=2066)
2024-07-15 06:11:42,205 DEBUG:stack ['$binop_floordiv196.2']
2024-07-15 06:11:42,205 DEBUG:dispatch pc=202, inst=LOAD_FAST(arg=0, lineno=2067)
2024-07-15 06:11:42,205 DEBUG:stack []
2024-07-15 06:11:42,205 DEBUG:dispatch pc=204, inst=LOAD_FAST(arg=3, lineno=2067)
2024-07-15 06:11:42,205 DEBUG:stack ['$origsize202.3']
2024-07-15 06:11:42,205 DEBUG:dispatch pc=206, inst=BINARY_OP(arg=6, lineno=2067)
2024-07-15 06:11:42,205 DEBUG:stack ['$origsize202.3', '$known_size204.4']
2024-07-15 06:11:42,205 DEBUG:dispatch pc=210, inst=LOAD_CONST(arg=1, lineno=2067)
2024-07-15 06:11:42,205 DEBUG:stack ['$binop_mod206.5']
2024-07-15 06:11:42,205 DEBUG:dispatch pc=212, inst=COMPARE_OP(arg=2, lineno=2067)
2024-07-15 06:11:42,205 DEBUG:stack ['$binop_mod206.5', '$const210.6']
2024-07-15 06:11:42,205 DEBUG:dispatch pc=218, inst=STORE_FAST(arg=8, lineno=2067)
2024-07-15 06:11:42,205 DEBUG:stack ['$212compare_op.7']
2024-07-15 06:11:42,206 DEBUG:end state. edges=[Edge(pc=220, stack=(), blockstack=(), npush=0)]
2024-07-15 06:11:42,206 DEBUG:pending: deque([State(pc_initial=220 nstack_initial=0), State(pc_initial=220 nstack_initial=0)])
2024-07-15 06:11:42,206 DEBUG:stack: []
2024-07-15 06:11:42,206 DEBUG:state.pc_initial: State(pc_initial=220 nstack_initial=0)
2024-07-15 06:11:42,206 DEBUG:dispatch pc=220, inst=LOAD_FAST(arg=8, lineno=2068)
2024-07-15 06:11:42,206 DEBUG:stack []
2024-07-15 06:11:42,206 DEBUG:dispatch pc=222, inst=POP_JUMP_FORWARD_IF_TRUE(arg=15, lineno=2068)
2024-07-15 06:11:42,206 DEBUG:stack ['$ok220.0']
2024-07-15 06:11:42,206 DEBUG:end state. edges=[Edge(pc=224, stack=(), blockstack=(), npush=0), Edge(pc=254, stack=(), blockstack=(), npush=0)]
2024-07-15 06:11:42,206 DEBUG:pending: deque([State(pc_initial=220 nstack_initial=0), State(pc_initial=224 nstack_initial=0), State(pc_initial=254 nstack_initial=0)])
2024-07-15 06:11:42,206 DEBUG:pending: deque([State(pc_initial=224 nstack_initial=0), State(pc_initial=254 nstack_initial=0)])
2024-07-15 06:11:42,206 DEBUG:stack: []
2024-07-15 06:11:42,206 DEBUG:state.pc_initial: State(pc_initial=224 nstack_initial=0)
2024-07-15 06:11:42,207 DEBUG:dispatch pc=224, inst=LOAD_GLOBAL(arg=3, lineno=2069)
2024-07-15 06:11:42,207 DEBUG:stack []
2024-07-15 06:11:42,207 DEBUG:dispatch pc=236, inst=LOAD_CONST(arg=3, lineno=2069)
2024-07-15 06:11:42,207 DEBUG:stack ['$null$224.1', '$224load_global.0']
2024-07-15 06:11:42,207 DEBUG:dispatch pc=238, inst=PRECALL(arg=1, lineno=2069)
2024-07-15 06:11:42,207 DEBUG:stack ['$null$224.1', '$224load_global.0', '$const236.2']
2024-07-15 06:11:42,207 DEBUG:dispatch pc=242, inst=CALL(arg=1, lineno=2069)
2024-07-15 06:11:42,207 DEBUG:stack ['$null$224.1', '$224load_global.0', '$const236.2']
2024-07-15 06:11:42,207 DEBUG:dispatch pc=252, inst=RAISE_VARARGS(arg=1, lineno=2069)
2024-07-15 06:11:42,207 DEBUG:stack ['$242call.3']
2024-07-15 06:11:42,207 DEBUG:end state. edges=[]
2024-07-15 06:11:42,207 DEBUG:pending: deque([State(pc_initial=254 nstack_initial=0)])
2024-07-15 06:11:42,207 DEBUG:stack: []
2024-07-15 06:11:42,207 DEBUG:state.pc_initial: State(pc_initial=254 nstack_initial=0)
2024-07-15 06:11:42,207 DEBUG:dispatch pc=254, inst=LOAD_FAST(arg=7, lineno=2070)
2024-07-15 06:11:42,207 DEBUG:stack []
2024-07-15 06:11:42,208 DEBUG:dispatch pc=256, inst=LOAD_FAST(arg=1, lineno=2070)
2024-07-15 06:11:42,208 DEBUG:stack ['$inferred254.0']
2024-07-15 06:11:42,208 DEBUG:dispatch pc=258, inst=LOAD_FAST(arg=6, lineno=2070)
2024-07-15 06:11:42,208 DEBUG:stack ['$inferred254.0', '$shape256.1']
2024-07-15 06:11:42,208 DEBUG:dispatch pc=260, inst=STORE_SUBSCR(arg=None, lineno=2070)
2024-07-15 06:11:42,208 DEBUG:stack ['$inferred254.0', '$shape256.1', '$neg_ax258.2']
2024-07-15 06:11:42,208 DEBUG:dispatch pc=264, inst=LOAD_CONST(arg=0, lineno=2070)
2024-07-15 06:11:42,208 DEBUG:stack []
2024-07-15 06:11:42,208 DEBUG:dispatch pc=266, inst=RETURN_VALUE(arg=None, lineno=2070)
2024-07-15 06:11:42,208 DEBUG:stack ['$const264.3']
2024-07-15 06:11:42,208 DEBUG:end state. edges=[]
2024-07-15 06:11:42,208 DEBUG:-------------------------Prune PHIs-------------------------
2024-07-15 06:11:42,208 DEBUG:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=42 nstack_initial=1): {'$phi42.0'},
             State(pc_initial=44 nstack_initial=2): {'$phi44.1'},
             State(pc_initial=64 nstack_initial=1): set(),
             State(pc_initial=80 nstack_initial=1): set(),
             State(pc_initial=92 nstack_initial=0): set(),
             State(pc_initial=104 nstack_initial=0): set(),
             State(pc_initial=116 nstack_initial=0): set(),
             State(pc_initial=146 nstack_initial=0): set(),
             State(pc_initial=150 nstack_initial=0): set(),
             State(pc_initial=162 nstack_initial=0): set(),
             State(pc_initial=174 nstack_initial=0): set(),
             State(pc_initial=192 nstack_initial=0): set(),
             State(pc_initial=220 nstack_initial=0): set(),
             State(pc_initial=224 nstack_initial=0): set(),
             State(pc_initial=254 nstack_initial=0): set(),
             State(pc_initial=268 nstack_initial=0): set()})
2024-07-15 06:11:42,209 DEBUG:defmap: {'$phi42.0': State(pc_initial=0 nstack_initial=0),
 '$phi44.1': State(pc_initial=42 nstack_initial=1)}
2024-07-15 06:11:42,209 DEBUG:phismap: defaultdict(<class 'set'>,
            {'$phi42.0': {('$40get_iter.6',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi64.0', State(pc_initial=64 nstack_initial=1)),
                          ('$phi80.0', State(pc_initial=80 nstack_initial=1))},
             '$phi44.0': {('$phi42.0', State(pc_initial=42 nstack_initial=1))},
             '$phi44.1': {('$42for_iter.2',
                           State(pc_initial=42 nstack_initial=1))},
             '$phi64.0': {('$phi44.0', State(pc_initial=44 nstack_initial=2))},
             '$phi80.0': {('$phi44.0', State(pc_initial=44 nstack_initial=2))}})
2024-07-15 06:11:42,209 DEBUG:changing phismap: defaultdict(<class 'set'>,
            {'$phi42.0': {('$40get_iter.6',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi44.0', State(pc_initial=44 nstack_initial=2))},
             '$phi44.0': {('$40get_iter.6',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi44.0', State(pc_initial=44 nstack_initial=2))},
             '$phi44.1': {('$42for_iter.2',
                           State(pc_initial=42 nstack_initial=1))},
             '$phi64.0': {('$40get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi80.0': {('$40get_iter.6',
                           State(pc_initial=0 nstack_initial=0))}})
2024-07-15 06:11:42,209 DEBUG:changing phismap: defaultdict(<class 'set'>,
            {'$phi42.0': {('$40get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi44.0': {('$40get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi44.1': {('$42for_iter.2',
                           State(pc_initial=42 nstack_initial=1))},
             '$phi64.0': {('$40get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi80.0': {('$40get_iter.6',
                           State(pc_initial=0 nstack_initial=0))}})
2024-07-15 06:11:42,210 DEBUG:changing phismap: defaultdict(<class 'set'>,
            {'$phi42.0': {('$40get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi44.0': {('$40get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi44.1': {('$42for_iter.2',
                           State(pc_initial=42 nstack_initial=1))},
             '$phi64.0': {('$40get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi80.0': {('$40get_iter.6',
                           State(pc_initial=0 nstack_initial=0))}})
2024-07-15 06:11:42,210 DEBUG:keep phismap: {'$phi42.0': {('$40get_iter.6', State(pc_initial=0 nstack_initial=0))},
 '$phi44.1': {('$42for_iter.2', State(pc_initial=42 nstack_initial=1))}}
2024-07-15 06:11:42,210 DEBUG:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi42.0': '$40get_iter.6'},
             State(pc_initial=42 nstack_initial=1): {'$phi44.1': '$42for_iter.2'}})
2024-07-15 06:11:42,210 DEBUG:----------------------DONE Prune PHIs-----------------------
2024-07-15 06:11:42,210 DEBUG:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$const4.0'}), (6, {'value': '$const4.0'}), (8, {'res': '$const8.1'}), (10, {'value': '$const8.1'}), (12, {'idx': 0, 'res': '$12load_global.2'}), (14, {}), (16, {}), (18, {}), (20, {}), (22, {}), (24, {'res': '$shape24.4'}), (26, {}), (28, {}), (30, {'func': '$12load_global.2', 'args': ['$shape24.4'], 'kw_names': None, 'res': '$30call.5'}), (32, {}), (34, {}), (36, {}), (38, {}), (40, {'value': '$30call.5', 'res': '$40get_iter.6'})), outgoing_phis={'$phi42.0': '$40get_iter.6'}, blockstack=(), active_try_block=None, outgoing_edgepushed={42: ('$40get_iter.6',)})
2024-07-15 06:11:42,210 DEBUG:block_infos State(pc_initial=42 nstack_initial=1):
AdaptBlockInfo(insts=((42, {'iterator': '$phi42.0', 'pair': '$42for_iter.1', 'indval': '$42for_iter.2', 'pred': '$42for_iter.3'}),), outgoing_phis={'$phi44.1': '$42for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={92: (), 44: ('$phi42.0', '$42for_iter.2')})
2024-07-15 06:11:42,210 DEBUG:block_infos State(pc_initial=44 nstack_initial=2):
AdaptBlockInfo(insts=((44, {'iterable': '$phi44.1', 'stores': ['$44unpack_sequence.2', '$44unpack_sequence.3'], 'tupleobj': '$44unpack_sequence.4'}), (46, {}), (48, {'value': '$44unpack_sequence.2'}), (50, {'value': '$44unpack_sequence.3'}), (52, {'res': '$s52.5'}), (54, {'res': '$const54.6'}), (56, {'lhs': '$s52.5', 'rhs': '$const54.6', 'res': '$56compare_op.7'}), (58, {}), (60, {}), (62, {'pred': '$56compare_op.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={64: ('$phi44.0',), 80: ('$phi44.0',)})
2024-07-15 06:11:42,210 DEBUG:block_infos State(pc_initial=64 nstack_initial=1):
AdaptBlockInfo(insts=((64, {'res': '$num_neg_value64.1'}), (66, {'res': '$const66.2'}), (68, {'op': '+=', 'lhs': '$num_neg_value64.1', 'rhs': '$const66.2', 'res': '$binop_iadd68.3'}), (70, {}), (72, {'value': '$binop_iadd68.3'}), (74, {'res': '$ax74.4'}), (76, {'value': '$ax74.4'}), (78, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={42: ('$phi64.0',)})
2024-07-15 06:11:42,210 DEBUG:block_infos State(pc_initial=80 nstack_initial=1):
AdaptBlockInfo(insts=((80, {'res': '$known_size80.1'}), (82, {'res': '$s82.2'}), (84, {'op': '*=', 'lhs': '$known_size80.1', 'rhs': '$s82.2', 'res': '$binop_imul84.3'}), (86, {}), (88, {'value': '$binop_imul84.3'}), (90, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={42: ('$phi80.0',)})
2024-07-15 06:11:42,211 DEBUG:block_infos State(pc_initial=92 nstack_initial=0):
AdaptBlockInfo(insts=((92, {'res': '$num_neg_value92.0'}), (94, {'res': '$const94.1'}), (96, {'lhs': '$num_neg_value92.0', 'rhs': '$const94.1', 'res': '$96compare_op.2'}), (98, {}), (100, {}), (102, {'pred': '$96compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={104: (), 150: ()})
2024-07-15 06:11:42,211 DEBUG:block_infos State(pc_initial=104 nstack_initial=0):
AdaptBlockInfo(insts=((104, {'res': '$origsize104.0'}), (106, {'res': '$known_size106.1'}), (108, {'lhs': '$origsize104.0', 'rhs': '$known_size106.1', 'res': '$108compare_op.2'}), (110, {}), (112, {}), (114, {'pred': '$108compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={116: (), 146: ()})
2024-07-15 06:11:42,211 DEBUG:block_infos State(pc_initial=116 nstack_initial=0):
AdaptBlockInfo(insts=((116, {'idx': 1, 'res': '$116load_global.0'}), (118, {}), (120, {}), (122, {}), (124, {}), (126, {}), (128, {'res': '$const128.2'}), (130, {}), (132, {}), (134, {'func': '$116load_global.0', 'args': ['$const128.2'], 'kw_names': None, 'res': '$134call.3'}), (136, {}), (138, {}), (140, {}), (142, {}), (144, {'exc': '$134call.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-15 06:11:42,211 DEBUG:block_infos State(pc_initial=146 nstack_initial=0):
AdaptBlockInfo(insts=((146, {'res': '$const146.0'}), (148, {'retval': '$const146.0', 'castval': '$148return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-15 06:11:42,211 DEBUG:block_infos State(pc_initial=150 nstack_initial=0):
AdaptBlockInfo(insts=((150, {'res': '$num_neg_value150.0'}), (152, {'res': '$const152.1'}), (154, {'lhs': '$num_neg_value150.0', 'rhs': '$const152.1', 'res': '$154compare_op.2'}), (156, {}), (158, {}), (160, {'pred': '$154compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={162: (), 268: ()})
2024-07-15 06:11:42,211 DEBUG:block_infos State(pc_initial=162 nstack_initial=0):
AdaptBlockInfo(insts=((162, {'res': '$known_size162.0'}), (164, {'res': '$const164.1'}), (166, {'lhs': '$known_size162.0', 'rhs': '$const164.1', 'res': '$166compare_op.2'}), (168, {}), (170, {}), (172, {'pred': '$166compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={174: (), 192: ()})
2024-07-15 06:11:42,211 DEBUG:block_infos State(pc_initial=174 nstack_initial=0):
AdaptBlockInfo(insts=((174, {'res': '$const174.0'}), (176, {'value': '$const174.0'}), (178, {'res': '$origsize178.1'}), (180, {'res': '$const180.2'}), (182, {'lhs': '$origsize178.1', 'rhs': '$const180.2', 'res': '$182compare_op.3'}), (184, {}), (186, {}), (188, {'value': '$182compare_op.3'}), (190, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={220: ()})
2024-07-15 06:11:42,211 DEBUG:block_infos State(pc_initial=192 nstack_initial=0):
AdaptBlockInfo(insts=((192, {'res': '$origsize192.0'}), (194, {'res': '$known_size194.1'}), (196, {'op': '//', 'lhs': '$origsize192.0', 'rhs': '$known_size194.1', 'res': '$binop_floordiv196.2'}), (198, {}), (200, {'value': '$binop_floordiv196.2'}), (202, {'res': '$origsize202.3'}), (204, {'res': '$known_size204.4'}), (206, {'op': '%', 'lhs': '$origsize202.3', 'rhs': '$known_size204.4', 'res': '$binop_mod206.5'}), (208, {}), (210, {'res': '$const210.6'}), (212, {'lhs': '$binop_mod206.5', 'rhs': '$const210.6', 'res': '$212compare_op.7'}), (214, {}), (216, {}), (218, {'value': '$212compare_op.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={220: ()})
2024-07-15 06:11:42,211 DEBUG:block_infos State(pc_initial=220 nstack_initial=0):
AdaptBlockInfo(insts=((220, {'res': '$ok220.0'}), (222, {'pred': '$ok220.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={224: (), 254: ()})
2024-07-15 06:11:42,211 DEBUG:block_infos State(pc_initial=224 nstack_initial=0):
AdaptBlockInfo(insts=((224, {'idx': 1, 'res': '$224load_global.0'}), (226, {}), (228, {}), (230, {}), (232, {}), (234, {}), (236, {'res': '$const236.2'}), (238, {}), (240, {}), (242, {'func': '$224load_global.0', 'args': ['$const236.2'], 'kw_names': None, 'res': '$242call.3'}), (244, {}), (246, {}), (248, {}), (250, {}), (252, {'exc': '$242call.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-15 06:11:42,211 DEBUG:block_infos State(pc_initial=254 nstack_initial=0):
AdaptBlockInfo(insts=((254, {'res': '$inferred254.0'}), (256, {'res': '$shape256.1'}), (258, {'res': '$neg_ax258.2'}), (260, {'target': '$shape256.1', 'index': '$neg_ax258.2', 'value': '$inferred254.0'}), (262, {}), (264, {'res': '$const264.3'}), (266, {'retval': '$const264.3', 'castval': '$266return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-15 06:11:42,211 DEBUG:block_infos State(pc_initial=268 nstack_initial=0):
AdaptBlockInfo(insts=((268, {'idx': 1, 'res': '$268load_global.0'}), (270, {}), (272, {}), (274, {}), (276, {}), (278, {}), (280, {'res': '$const280.2'}), (282, {}), (284, {}), (286, {'func': '$268load_global.0', 'args': ['$const280.2'], 'kw_names': None, 'res': '$286call.3'}), (288, {}), (290, {}), (292, {}), (294, {}), (296, {'exc': '$286call.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-15 06:11:42,213 DEBUG:label 0:
    origsize = arg(0, name=origsize)         ['origsize']
    shape = arg(1, name=shape)               ['shape']
    num_neg_value = const(int, 0)            ['num_neg_value']
    known_size = const(int, 1)               ['known_size']
    $12load_global.2 = global(enumerate: <class 'enumerate'>) ['$12load_global.2']
    $30call.5 = call $12load_global.2(shape, func=$12load_global.2, args=[Var(shape, arrayobj.py:2046)], kws=(), vararg=None, varkwarg=None, target=None) ['$12load_global.2', '$30call.5', 'shape']
    $40get_iter.6 = getiter(value=$30call.5) ['$30call.5', '$40get_iter.6']
    $phi42.0 = $40get_iter.6                 ['$40get_iter.6', '$phi42.0']
    jump 42                                  []
label 42:
    $42for_iter.1 = iternext(value=$phi42.0) ['$42for_iter.1', '$phi42.0']
    $42for_iter.2 = pair_first(value=$42for_iter.1) ['$42for_iter.1', '$42for_iter.2']
    $42for_iter.3 = pair_second(value=$42for_iter.1) ['$42for_iter.1', '$42for_iter.3']
    $phi44.1 = $42for_iter.2                 ['$42for_iter.2', '$phi44.1']
    branch $42for_iter.3, 44, 92             ['$42for_iter.3']
label 44:
    $44unpack_sequence.4 = exhaust_iter(value=$phi44.1, count=2) ['$44unpack_sequence.4', '$phi44.1']
    $44unpack_sequence.2 = static_getitem(value=$44unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>) ['$44unpack_sequence.2', '$44unpack_sequence.4']
    $44unpack_sequence.3 = static_getitem(value=$44unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>) ['$44unpack_sequence.3', '$44unpack_sequence.4']
    ax = $44unpack_sequence.2                ['$44unpack_sequence.2', 'ax']
    s = $44unpack_sequence.3                 ['$44unpack_sequence.3', 's']
    $const54.6 = const(int, 0)               ['$const54.6']
    $56compare_op.7 = s < $const54.6         ['$56compare_op.7', '$const54.6', 's']
    bool62 = global(bool: <class 'bool'>)    ['bool62']
    $62pred = call bool62($56compare_op.7, func=bool62, args=(Var($56compare_op.7, arrayobj.py:2050),), kws=(), vararg=None, varkwarg=None, target=None) ['$56compare_op.7', '$62pred', 'bool62']
    branch $62pred, 64, 80                   ['$62pred']
label 64:
    $const66.2 = const(int, 1)               ['$const66.2']
    $binop_iadd68.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value, rhs=$const66.2, static_lhs=Undefined, static_rhs=Undefined) ['$binop_iadd68.3', '$const66.2', 'num_neg_value']
    num_neg_value = $binop_iadd68.3          ['$binop_iadd68.3', 'num_neg_value']
    neg_ax = ax                              ['ax', 'neg_ax']
    jump 42                                  []
label 80:
    $binop_imul84.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size, rhs=s, static_lhs=Undefined, static_rhs=Undefined) ['$binop_imul84.3', 'known_size', 's']
    known_size = $binop_imul84.3             ['$binop_imul84.3', 'known_size']
    jump 42                                  []
label 92:
    $const94.1 = const(int, 0)               ['$const94.1']
    $96compare_op.2 = num_neg_value == $const94.1 ['$96compare_op.2', '$const94.1', 'num_neg_value']
    bool102 = global(bool: <class 'bool'>)   ['bool102']
    $102pred = call bool102($96compare_op.2, func=bool102, args=(Var($96compare_op.2, arrayobj.py:2056),), kws=(), vararg=None, varkwarg=None, target=None) ['$102pred', '$96compare_op.2', 'bool102']
    branch $102pred, 104, 150                ['$102pred']
label 104:
    $108compare_op.2 = origsize != known_size ['$108compare_op.2', 'known_size', 'origsize']
    bool114 = global(bool: <class 'bool'>)   ['bool114']
    $114pred = call bool114($108compare_op.2, func=bool114, args=(Var($108compare_op.2, arrayobj.py:2057),), kws=(), vararg=None, varkwarg=None, target=None) ['$108compare_op.2', '$114pred', 'bool114']
    branch $114pred, 116, 146                ['$114pred']
label 116:
    $116load_global.0 = global(ValueError: <class 'ValueError'>) ['$116load_global.0']
    $const128.2 = const(str, total size of new array must be unchanged) ['$const128.2']
    $134call.3 = call $116load_global.0($const128.2, func=$116load_global.0, args=[Var($const128.2, arrayobj.py:2058)], kws=(), vararg=None, varkwarg=None, target=None) ['$116load_global.0', '$134call.3', '$const128.2']
    raise $134call.3                         ['$134call.3']
label 146:
    $const146.0 = const(NoneType, None)      ['$const146.0']
    $148return_value.1 = cast(value=$const146.0) ['$148return_value.1', '$const146.0']
    return $148return_value.1                ['$148return_value.1']
label 150:
    $const152.1 = const(int, 1)              ['$const152.1']
    $154compare_op.2 = num_neg_value == $const152.1 ['$154compare_op.2', '$const152.1', 'num_neg_value']
    bool160 = global(bool: <class 'bool'>)   ['bool160']
    $160pred = call bool160($154compare_op.2, func=bool160, args=(Var($154compare_op.2, arrayobj.py:2060),), kws=(), vararg=None, varkwarg=None, target=None) ['$154compare_op.2', '$160pred', 'bool160']
    branch $160pred, 162, 268                ['$160pred']
label 162:
    $const164.1 = const(int, 0)              ['$const164.1']
    $166compare_op.2 = known_size == $const164.1 ['$166compare_op.2', '$const164.1', 'known_size']
    bool172 = global(bool: <class 'bool'>)   ['bool172']
    $172pred = call bool172($166compare_op.2, func=bool172, args=(Var($166compare_op.2, arrayobj.py:2062),), kws=(), vararg=None, varkwarg=None, target=None) ['$166compare_op.2', '$172pred', 'bool172']
    branch $172pred, 174, 192                ['$172pred']
label 174:
    inferred = const(int, 0)                 ['inferred']
    $const180.2 = const(int, 0)              ['$const180.2']
    ok = origsize == $const180.2             ['$const180.2', 'ok', 'origsize']
    jump 220                                 []
label 192:
    inferred = origsize // known_size        ['inferred', 'known_size', 'origsize']
    $binop_mod206.5 = origsize % known_size  ['$binop_mod206.5', 'known_size', 'origsize']
    $const210.6 = const(int, 0)              ['$const210.6']
    ok = $binop_mod206.5 == $const210.6      ['$binop_mod206.5', '$const210.6', 'ok']
    jump 220                                 []
label 220:
    bool222 = global(bool: <class 'bool'>)   ['bool222']
    $222pred = call bool222(ok, func=bool222, args=(Var(ok, arrayobj.py:2064),), kws=(), vararg=None, varkwarg=None, target=None) ['$222pred', 'bool222', 'ok']
    branch $222pred, 254, 224                ['$222pred']
label 224:
    $224load_global.0 = global(ValueError: <class 'ValueError'>) ['$224load_global.0']
    $const236.2 = const(str, total size of new array must be unchanged) ['$const236.2']
    $242call.3 = call $224load_global.0($const236.2, func=$224load_global.0, args=[Var($const236.2, arrayobj.py:2069)], kws=(), vararg=None, varkwarg=None, target=None) ['$224load_global.0', '$242call.3', '$const236.2']
    raise $242call.3                         ['$242call.3']
label 254:
    shape[neg_ax] = inferred                 ['inferred', 'neg_ax', 'shape']
    $const264.3 = const(NoneType, None)      ['$const264.3']
    $266return_value.4 = cast(value=$const264.3) ['$266return_value.4', '$const264.3']
    return $266return_value.4                ['$266return_value.4']
label 268:
    $268load_global.0 = global(ValueError: <class 'ValueError'>) ['$268load_global.0']
    $const280.2 = const(str, multiple negative shape values) ['$const280.2']
    $286call.3 = call $268load_global.0($const280.2, func=$268load_global.0, args=[Var($const280.2, arrayobj.py:2073)], kws=(), vararg=None, varkwarg=None, target=None) ['$268load_global.0', '$286call.3', '$const280.2']
    raise $286call.3                         ['$286call.3']

2024-07-15 06:11:42,228 DEBUG:==== SSA block analysis pass on 0
2024-07-15 06:11:42,228 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B6956A10>
2024-07-15 06:11:42,228 DEBUG:on stmt: origsize = arg(0, name=origsize)
2024-07-15 06:11:42,228 DEBUG:on stmt: shape = arg(1, name=shape)
2024-07-15 06:11:42,228 DEBUG:on stmt: num_neg_value = const(int, 0)
2024-07-15 06:11:42,228 DEBUG:on stmt: known_size = const(int, 1)
2024-07-15 06:11:42,228 DEBUG:on stmt: $12load_global.2 = global(enumerate: <class 'enumerate'>)
2024-07-15 06:11:42,228 DEBUG:on stmt: $30call.5 = call $12load_global.2(shape, func=$12load_global.2, args=[Var(shape, arrayobj.py:2046)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,228 DEBUG:on stmt: $40get_iter.6 = getiter(value=$30call.5)
2024-07-15 06:11:42,228 DEBUG:on stmt: $phi42.0 = $40get_iter.6
2024-07-15 06:11:42,228 DEBUG:on stmt: jump 42
2024-07-15 06:11:42,228 DEBUG:==== SSA block analysis pass on 42
2024-07-15 06:11:42,228 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B6956A10>
2024-07-15 06:11:42,228 DEBUG:on stmt: $42for_iter.1 = iternext(value=$phi42.0)
2024-07-15 06:11:42,228 DEBUG:on stmt: $42for_iter.2 = pair_first(value=$42for_iter.1)
2024-07-15 06:11:42,228 DEBUG:on stmt: $42for_iter.3 = pair_second(value=$42for_iter.1)
2024-07-15 06:11:42,229 DEBUG:on stmt: $phi44.1 = $42for_iter.2
2024-07-15 06:11:42,229 DEBUG:on stmt: branch $42for_iter.3, 44, 92
2024-07-15 06:11:42,229 DEBUG:==== SSA block analysis pass on 44
2024-07-15 06:11:42,229 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B6956A10>
2024-07-15 06:11:42,229 DEBUG:on stmt: $44unpack_sequence.4 = exhaust_iter(value=$phi44.1, count=2)
2024-07-15 06:11:42,229 DEBUG:on stmt: $44unpack_sequence.2 = static_getitem(value=$44unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>)
2024-07-15 06:11:42,229 DEBUG:on stmt: $44unpack_sequence.3 = static_getitem(value=$44unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>)
2024-07-15 06:11:42,229 DEBUG:on stmt: ax = $44unpack_sequence.2
2024-07-15 06:11:42,229 DEBUG:on stmt: s = $44unpack_sequence.3
2024-07-15 06:11:42,229 DEBUG:on stmt: $const54.6 = const(int, 0)
2024-07-15 06:11:42,229 DEBUG:on stmt: $56compare_op.7 = s < $const54.6
2024-07-15 06:11:42,229 DEBUG:on stmt: bool62 = global(bool: <class 'bool'>)
2024-07-15 06:11:42,229 DEBUG:on stmt: $62pred = call bool62($56compare_op.7, func=bool62, args=(Var($56compare_op.7, arrayobj.py:2050),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,229 DEBUG:on stmt: branch $62pred, 64, 80
2024-07-15 06:11:42,229 DEBUG:==== SSA block analysis pass on 64
2024-07-15 06:11:42,229 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B6956A10>
2024-07-15 06:11:42,229 DEBUG:on stmt: $const66.2 = const(int, 1)
2024-07-15 06:11:42,229 DEBUG:on stmt: $binop_iadd68.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value, rhs=$const66.2, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:42,229 DEBUG:on stmt: num_neg_value = $binop_iadd68.3
2024-07-15 06:11:42,229 DEBUG:on stmt: neg_ax = ax
2024-07-15 06:11:42,229 DEBUG:on stmt: jump 269
2024-07-15 06:11:42,229 DEBUG:==== SSA block analysis pass on 80
2024-07-15 06:11:42,229 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B6956A10>
2024-07-15 06:11:42,230 DEBUG:on stmt: $binop_imul84.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:42,230 DEBUG:on stmt: known_size = $binop_imul84.3
2024-07-15 06:11:42,230 DEBUG:on stmt: jump 269
2024-07-15 06:11:42,230 DEBUG:==== SSA block analysis pass on 92
2024-07-15 06:11:42,230 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B6956A10>
2024-07-15 06:11:42,230 DEBUG:on stmt: $const94.1 = const(int, 0)
2024-07-15 06:11:42,230 DEBUG:on stmt: $96compare_op.2 = num_neg_value == $const94.1
2024-07-15 06:11:42,230 DEBUG:on stmt: bool102 = global(bool: <class 'bool'>)
2024-07-15 06:11:42,230 DEBUG:on stmt: $102pred = call bool102($96compare_op.2, func=bool102, args=(Var($96compare_op.2, arrayobj.py:2056),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,231 DEBUG:on stmt: branch $102pred, 104, 150
2024-07-15 06:11:42,231 DEBUG:==== SSA block analysis pass on 104
2024-07-15 06:11:42,231 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B6956A10>
2024-07-15 06:11:42,231 DEBUG:on stmt: $108compare_op.2 = origsize != known_size
2024-07-15 06:11:42,231 DEBUG:on stmt: bool114 = global(bool: <class 'bool'>)
2024-07-15 06:11:42,231 DEBUG:on stmt: $114pred = call bool114($108compare_op.2, func=bool114, args=(Var($108compare_op.2, arrayobj.py:2057),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,231 DEBUG:on stmt: branch $114pred, 116, 146
2024-07-15 06:11:42,231 DEBUG:==== SSA block analysis pass on 116
2024-07-15 06:11:42,231 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B6956A10>
2024-07-15 06:11:42,231 DEBUG:on stmt: $116load_global.0 = global(ValueError: <class 'ValueError'>)
2024-07-15 06:11:42,231 DEBUG:on stmt: $const128.2 = const(str, total size of new array must be unchanged)
2024-07-15 06:11:42,231 DEBUG:on stmt: $134call.3 = call $116load_global.0($const128.2, func=$116load_global.0, args=[Var($const128.2, arrayobj.py:2058)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,231 DEBUG:on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2024-07-15 06:11:42,231 DEBUG:==== SSA block analysis pass on 146
2024-07-15 06:11:42,231 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B6956A10>
2024-07-15 06:11:42,231 DEBUG:on stmt: $const146.0 = const(NoneType, None)
2024-07-15 06:11:42,231 DEBUG:on stmt: $148return_value.1 = cast(value=$const146.0)
2024-07-15 06:11:42,231 DEBUG:on stmt: return $148return_value.1
2024-07-15 06:11:42,231 DEBUG:==== SSA block analysis pass on 150
2024-07-15 06:11:42,231 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B6956A10>
2024-07-15 06:11:42,231 DEBUG:on stmt: $const152.1 = const(int, 1)
2024-07-15 06:11:42,231 DEBUG:on stmt: $154compare_op.2 = num_neg_value == $const152.1
2024-07-15 06:11:42,231 DEBUG:on stmt: bool160 = global(bool: <class 'bool'>)
2024-07-15 06:11:42,231 DEBUG:on stmt: $160pred = call bool160($154compare_op.2, func=bool160, args=(Var($154compare_op.2, arrayobj.py:2060),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,231 DEBUG:on stmt: branch $160pred, 162, 268
2024-07-15 06:11:42,231 DEBUG:==== SSA block analysis pass on 162
2024-07-15 06:11:42,231 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B6956A10>
2024-07-15 06:11:42,231 DEBUG:on stmt: $const164.1 = const(int, 0)
2024-07-15 06:11:42,231 DEBUG:on stmt: $166compare_op.2 = known_size == $const164.1
2024-07-15 06:11:42,231 DEBUG:on stmt: bool172 = global(bool: <class 'bool'>)
2024-07-15 06:11:42,232 DEBUG:on stmt: $172pred = call bool172($166compare_op.2, func=bool172, args=(Var($166compare_op.2, arrayobj.py:2062),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,232 DEBUG:on stmt: branch $172pred, 174, 192
2024-07-15 06:11:42,232 DEBUG:==== SSA block analysis pass on 174
2024-07-15 06:11:42,232 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B6956A10>
2024-07-15 06:11:42,232 DEBUG:on stmt: inferred = const(int, 0)
2024-07-15 06:11:42,232 DEBUG:on stmt: $const180.2 = const(int, 0)
2024-07-15 06:11:42,232 DEBUG:on stmt: ok = origsize == $const180.2
2024-07-15 06:11:42,232 DEBUG:on stmt: jump 220
2024-07-15 06:11:42,232 DEBUG:==== SSA block analysis pass on 192
2024-07-15 06:11:42,232 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B6956A10>
2024-07-15 06:11:42,232 DEBUG:on stmt: inferred = origsize // known_size
2024-07-15 06:11:42,232 DEBUG:on stmt: $binop_mod206.5 = origsize % known_size
2024-07-15 06:11:42,232 DEBUG:on stmt: $const210.6 = const(int, 0)
2024-07-15 06:11:42,232 DEBUG:on stmt: ok = $binop_mod206.5 == $const210.6
2024-07-15 06:11:42,232 DEBUG:on stmt: jump 220
2024-07-15 06:11:42,232 DEBUG:==== SSA block analysis pass on 220
2024-07-15 06:11:42,232 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B6956A10>
2024-07-15 06:11:42,232 DEBUG:on stmt: bool222 = global(bool: <class 'bool'>)
2024-07-15 06:11:42,232 DEBUG:on stmt: $222pred = call bool222(ok, func=bool222, args=(Var(ok, arrayobj.py:2064),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,233 DEBUG:on stmt: branch $222pred, 254, 224
2024-07-15 06:11:42,233 DEBUG:==== SSA block analysis pass on 224
2024-07-15 06:11:42,233 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B6956A10>
2024-07-15 06:11:42,233 DEBUG:on stmt: $224load_global.0 = global(ValueError: <class 'ValueError'>)
2024-07-15 06:11:42,233 DEBUG:on stmt: $const236.2 = const(str, total size of new array must be unchanged)
2024-07-15 06:11:42,233 DEBUG:on stmt: $242call.3 = call $224load_global.0($const236.2, func=$224load_global.0, args=[Var($const236.2, arrayobj.py:2069)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,233 DEBUG:on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2024-07-15 06:11:42,233 DEBUG:==== SSA block analysis pass on 254
2024-07-15 06:11:42,233 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B6956A10>
2024-07-15 06:11:42,233 DEBUG:on stmt: shape[neg_ax] = inferred
2024-07-15 06:11:42,233 DEBUG:on stmt: $const264.3 = const(NoneType, None)
2024-07-15 06:11:42,233 DEBUG:on stmt: $266return_value.4 = cast(value=$const264.3)
2024-07-15 06:11:42,233 DEBUG:on stmt: return $266return_value.4
2024-07-15 06:11:42,233 DEBUG:==== SSA block analysis pass on 268
2024-07-15 06:11:42,233 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B6956A10>
2024-07-15 06:11:42,233 DEBUG:on stmt: $268load_global.0 = global(ValueError: <class 'ValueError'>)
2024-07-15 06:11:42,233 DEBUG:on stmt: $const280.2 = const(str, multiple negative shape values)
2024-07-15 06:11:42,234 DEBUG:on stmt: $286call.3 = call $268load_global.0($const280.2, func=$268load_global.0, args=[Var($const280.2, arrayobj.py:2073)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,234 DEBUG:on stmt: <static> raise <class 'ValueError'>('multiple negative shape values')
2024-07-15 06:11:42,234 DEBUG:==== SSA block analysis pass on 269
2024-07-15 06:11:42,234 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B6956A10>
2024-07-15 06:11:42,234 DEBUG:on stmt: jump 42
2024-07-15 06:11:42,236 DEBUG:defs defaultdict(<class 'list'>,
            {'$102pred': [(<numba.core.ir.Assign object at 0x00000221B5CA2250>,
                           92)],
             '$108compare_op.2': [(<numba.core.ir.Assign object at 0x00000221B5CA2F10>,
                                   104)],
             '$114pred': [(<numba.core.ir.Assign object at 0x00000221B5CA3A10>,
                           104)],
             '$116load_global.0': [(<numba.core.ir.Assign object at 0x00000221B5CA0050>,
                                    116)],
             '$12load_global.2': [(<numba.core.ir.Assign object at 0x00000221B682C190>,
                                   0)],
             '$134call.3': [(<numba.core.ir.Assign object at 0x00000221B5CA0CD0>,
                             116)],
             '$148return_value.1': [(<numba.core.ir.Assign object at 0x00000221B5CA0C50>,
                                     146)],
             '$154compare_op.2': [(<numba.core.ir.Assign object at 0x00000221B5CA07D0>,
                                   150)],
             '$160pred': [(<numba.core.ir.Assign object at 0x00000221B5CA1950>,
                           150)],
             '$166compare_op.2': [(<numba.core.ir.Assign object at 0x00000221B5CA26D0>,
                                   162)],
             '$172pred': [(<numba.core.ir.Assign object at 0x00000221B5CA3850>,
                           162)],
             '$222pred': [(<numba.core.ir.Assign object at 0x00000221B695AE50>,
                           220)],
             '$224load_global.0': [(<numba.core.ir.Assign object at 0x00000221B695B210>,
                                    224)],
             '$242call.3': [(<numba.core.ir.Assign object at 0x00000221B6959190>,
                             224)],
             '$266return_value.4': [(<numba.core.ir.Assign object at 0x00000221B69581D0>,
                                     254)],
             '$268load_global.0': [(<numba.core.ir.Assign object at 0x00000221B6959D50>,
                                    268)],
             '$286call.3': [(<numba.core.ir.Assign object at 0x00000221B695A690>,
                             268)],
             '$30call.5': [(<numba.core.ir.Assign object at 0x00000221B6926410>,
                            0)],
             '$40get_iter.6': [(<numba.core.ir.Assign object at 0x00000221B69264D0>,
                                0)],
             '$42for_iter.1': [(<numba.core.ir.Assign object at 0x00000221B6927ED0>,
                                42)],
             '$42for_iter.2': [(<numba.core.ir.Assign object at 0x00000221B6927F10>,
                                42)],
             '$42for_iter.3': [(<numba.core.ir.Assign object at 0x00000221B6924B10>,
                                42)],
             '$44unpack_sequence.2': [(<numba.core.ir.Assign object at 0x00000221B6927D50>,
                                       44)],
             '$44unpack_sequence.3': [(<numba.core.ir.Assign object at 0x00000221B6924090>,
                                       44)],
             '$44unpack_sequence.4': [(<numba.core.ir.Assign object at 0x00000221B6925F50>,
                                       44)],
             '$56compare_op.7': [(<numba.core.ir.Assign object at 0x00000221B6924D50>,
                                  44)],
             '$62pred': [(<numba.core.ir.Assign object at 0x00000221B6924690>,
                          44)],
             '$96compare_op.2': [(<numba.core.ir.Assign object at 0x00000221B5CA0210>,
                                  92)],
             '$binop_iadd68.3': [(<numba.core.ir.Assign object at 0x00000221B6925E50>,
                                  64)],
             '$binop_imul84.3': [(<numba.core.ir.Assign object at 0x00000221B5CA1A90>,
                                  80)],
             '$binop_mod206.5': [(<numba.core.ir.Assign object at 0x00000221B695AF50>,
                                  192)],
             '$const128.2': [(<numba.core.ir.Assign object at 0x00000221B5CA36D0>,
                              116)],
             '$const146.0': [(<numba.core.ir.Assign object at 0x00000221B5CA14D0>,
                              146)],
             '$const152.1': [(<numba.core.ir.Assign object at 0x00000221B5CA0850>,
                              150)],
             '$const164.1': [(<numba.core.ir.Assign object at 0x00000221B5CA1B90>,
                              162)],
             '$const180.2': [(<numba.core.ir.Assign object at 0x00000221B695A5D0>,
                              174)],
             '$const210.6': [(<numba.core.ir.Assign object at 0x00000221B695BC50>,
                              192)],
             '$const236.2': [(<numba.core.ir.Assign object at 0x00000221B695BF10>,
                              224)],
             '$const264.3': [(<numba.core.ir.Assign object at 0x00000221B6959F50>,
                              254)],
             '$const280.2': [(<numba.core.ir.Assign object at 0x00000221B695BFD0>,
                              268)],
             '$const54.6': [(<numba.core.ir.Assign object at 0x00000221B6925510>,
                             44)],
             '$const66.2': [(<numba.core.ir.Assign object at 0x00000221B6927150>,
                             64)],
             '$const94.1': [(<numba.core.ir.Assign object at 0x00000221B5CA1210>,
                             92)],
             '$phi42.0': [(<numba.core.ir.Assign object at 0x00000221B682C050>,
                           0)],
             '$phi44.1': [(<numba.core.ir.Assign object at 0x00000221B6925210>,
                           42)],
             'ax': [(<numba.core.ir.Assign object at 0x00000221B6925890>, 44)],
             'bool102': [(<numba.core.ir.Assign object at 0x00000221B5CA2450>,
                          92)],
             'bool114': [(<numba.core.ir.Assign object at 0x00000221B5CA2390>,
                          104)],
             'bool160': [(<numba.core.ir.Assign object at 0x00000221B5CA1CD0>,
                          150)],
             'bool172': [(<numba.core.ir.Assign object at 0x00000221B5CA1410>,
                          162)],
             'bool222': [(<numba.core.ir.Assign object at 0x00000221B695BAD0>,
                          220)],
             'bool62': [(<numba.core.ir.Assign object at 0x00000221B6924B50>,
                         44)],
             'inferred': [(<numba.core.ir.Assign object at 0x00000221B5CA1FD0>,
                           174),
                          (<numba.core.ir.Assign object at 0x00000221B6959590>,
                           192)],
             'known_size': [(<numba.core.ir.Assign object at 0x00000221B682D410>,
                             0),
                            (<numba.core.ir.Assign object at 0x00000221B5CA0090>,
                             80)],
             'neg_ax': [(<numba.core.ir.Assign object at 0x00000221B69276D0>,
                         64)],
             'num_neg_value': [(<numba.core.ir.Assign object at 0x00000221B69FCF50>,
                                0),
                               (<numba.core.ir.Assign object at 0x00000221B6927A10>,
                                64)],
             'ok': [(<numba.core.ir.Assign object at 0x00000221B695AC90>, 174),
                    (<numba.core.ir.Assign object at 0x00000221B695B7D0>, 192)],
             'origsize': [(<numba.core.ir.Assign object at 0x00000221B69E9AD0>,
                           0)],
             's': [(<numba.core.ir.Assign object at 0x00000221B6927010>, 44)],
             'shape': [(<numba.core.ir.Assign object at 0x00000221B69E9E90>,
                        0)]})
2024-07-15 06:11:42,236 DEBUG:SSA violators <numba.core.utils.OrderedSet object at 0x00000221B6956A10>
2024-07-15 06:11:42,236 DEBUG:Fix SSA violator on var num_neg_value
2024-07-15 06:11:42,236 DEBUG:==== SSA block rewrite pass on 0
2024-07-15 06:11:42,236 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6958350>
2024-07-15 06:11:42,236 DEBUG:on stmt: origsize = arg(0, name=origsize)
2024-07-15 06:11:42,236 DEBUG:on stmt: shape = arg(1, name=shape)
2024-07-15 06:11:42,236 DEBUG:on stmt: num_neg_value = const(int, 0)
2024-07-15 06:11:42,236 DEBUG:first assign: num_neg_value
2024-07-15 06:11:42,236 DEBUG:replaced with: num_neg_value = const(int, 0)
2024-07-15 06:11:42,236 DEBUG:on stmt: known_size = const(int, 1)
2024-07-15 06:11:42,236 DEBUG:on stmt: $12load_global.2 = global(enumerate: <class 'enumerate'>)
2024-07-15 06:11:42,236 DEBUG:on stmt: $30call.5 = call $12load_global.2(shape, func=$12load_global.2, args=[Var(shape, arrayobj.py:2046)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,237 DEBUG:on stmt: $40get_iter.6 = getiter(value=$30call.5)
2024-07-15 06:11:42,237 DEBUG:on stmt: $phi42.0 = $40get_iter.6
2024-07-15 06:11:42,237 DEBUG:on stmt: jump 42
2024-07-15 06:11:42,237 DEBUG:==== SSA block rewrite pass on 42
2024-07-15 06:11:42,237 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6958350>
2024-07-15 06:11:42,237 DEBUG:on stmt: $42for_iter.1 = iternext(value=$phi42.0)
2024-07-15 06:11:42,237 DEBUG:on stmt: $42for_iter.2 = pair_first(value=$42for_iter.1)
2024-07-15 06:11:42,237 DEBUG:on stmt: $42for_iter.3 = pair_second(value=$42for_iter.1)
2024-07-15 06:11:42,237 DEBUG:on stmt: $phi44.1 = $42for_iter.2
2024-07-15 06:11:42,237 DEBUG:on stmt: branch $42for_iter.3, 44, 92
2024-07-15 06:11:42,237 DEBUG:==== SSA block rewrite pass on 44
2024-07-15 06:11:42,237 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6958350>
2024-07-15 06:11:42,237 DEBUG:on stmt: $44unpack_sequence.4 = exhaust_iter(value=$phi44.1, count=2)
2024-07-15 06:11:42,237 DEBUG:on stmt: $44unpack_sequence.2 = static_getitem(value=$44unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>)
2024-07-15 06:11:42,237 DEBUG:on stmt: $44unpack_sequence.3 = static_getitem(value=$44unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>)
2024-07-15 06:11:42,238 DEBUG:on stmt: ax = $44unpack_sequence.2
2024-07-15 06:11:42,238 DEBUG:on stmt: s = $44unpack_sequence.3
2024-07-15 06:11:42,238 DEBUG:on stmt: $const54.6 = const(int, 0)
2024-07-15 06:11:42,238 DEBUG:on stmt: $56compare_op.7 = s < $const54.6
2024-07-15 06:11:42,238 DEBUG:on stmt: bool62 = global(bool: <class 'bool'>)
2024-07-15 06:11:42,238 DEBUG:on stmt: $62pred = call bool62($56compare_op.7, func=bool62, args=(Var($56compare_op.7, arrayobj.py:2050),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,238 DEBUG:on stmt: branch $62pred, 64, 80
2024-07-15 06:11:42,238 DEBUG:==== SSA block rewrite pass on 64
2024-07-15 06:11:42,238 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6958350>
2024-07-15 06:11:42,238 DEBUG:on stmt: $const66.2 = const(int, 1)
2024-07-15 06:11:42,238 DEBUG:on stmt: $binop_iadd68.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value, rhs=$const66.2, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:42,238 DEBUG:on stmt: num_neg_value = $binop_iadd68.3
2024-07-15 06:11:42,238 DEBUG:replaced with: num_neg_value.1 = $binop_iadd68.3
2024-07-15 06:11:42,238 DEBUG:on stmt: neg_ax = ax
2024-07-15 06:11:42,238 DEBUG:on stmt: jump 269
2024-07-15 06:11:42,238 DEBUG:==== SSA block rewrite pass on 80
2024-07-15 06:11:42,238 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6958350>
2024-07-15 06:11:42,238 DEBUG:on stmt: $binop_imul84.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:42,238 DEBUG:on stmt: known_size = $binop_imul84.3
2024-07-15 06:11:42,238 DEBUG:on stmt: jump 269
2024-07-15 06:11:42,238 DEBUG:==== SSA block rewrite pass on 92
2024-07-15 06:11:42,238 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6958350>
2024-07-15 06:11:42,238 DEBUG:on stmt: $const94.1 = const(int, 0)
2024-07-15 06:11:42,238 DEBUG:on stmt: $96compare_op.2 = num_neg_value == $const94.1
2024-07-15 06:11:42,238 DEBUG:on stmt: bool102 = global(bool: <class 'bool'>)
2024-07-15 06:11:42,238 DEBUG:on stmt: $102pred = call bool102($96compare_op.2, func=bool102, args=(Var($96compare_op.2, arrayobj.py:2056),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,238 DEBUG:on stmt: branch $102pred, 104, 150
2024-07-15 06:11:42,238 DEBUG:==== SSA block rewrite pass on 104
2024-07-15 06:11:42,238 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6958350>
2024-07-15 06:11:42,238 DEBUG:on stmt: $108compare_op.2 = origsize != known_size
2024-07-15 06:11:42,238 DEBUG:on stmt: bool114 = global(bool: <class 'bool'>)
2024-07-15 06:11:42,238 DEBUG:on stmt: $114pred = call bool114($108compare_op.2, func=bool114, args=(Var($108compare_op.2, arrayobj.py:2057),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,239 DEBUG:on stmt: branch $114pred, 116, 146
2024-07-15 06:11:42,239 DEBUG:==== SSA block rewrite pass on 116
2024-07-15 06:11:42,239 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6958350>
2024-07-15 06:11:42,239 DEBUG:on stmt: $116load_global.0 = global(ValueError: <class 'ValueError'>)
2024-07-15 06:11:42,239 DEBUG:on stmt: $const128.2 = const(str, total size of new array must be unchanged)
2024-07-15 06:11:42,239 DEBUG:on stmt: $134call.3 = call $116load_global.0($const128.2, func=$116load_global.0, args=[Var($const128.2, arrayobj.py:2058)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,239 DEBUG:on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2024-07-15 06:11:42,239 DEBUG:==== SSA block rewrite pass on 146
2024-07-15 06:11:42,239 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6958350>
2024-07-15 06:11:42,239 DEBUG:on stmt: $const146.0 = const(NoneType, None)
2024-07-15 06:11:42,239 DEBUG:on stmt: $148return_value.1 = cast(value=$const146.0)
2024-07-15 06:11:42,239 DEBUG:on stmt: return $148return_value.1
2024-07-15 06:11:42,239 DEBUG:==== SSA block rewrite pass on 150
2024-07-15 06:11:42,239 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6958350>
2024-07-15 06:11:42,239 DEBUG:on stmt: $const152.1 = const(int, 1)
2024-07-15 06:11:42,239 DEBUG:on stmt: $154compare_op.2 = num_neg_value == $const152.1
2024-07-15 06:11:42,239 DEBUG:on stmt: bool160 = global(bool: <class 'bool'>)
2024-07-15 06:11:42,239 DEBUG:on stmt: $160pred = call bool160($154compare_op.2, func=bool160, args=(Var($154compare_op.2, arrayobj.py:2060),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,239 DEBUG:on stmt: branch $160pred, 162, 268
2024-07-15 06:11:42,239 DEBUG:==== SSA block rewrite pass on 162
2024-07-15 06:11:42,239 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6958350>
2024-07-15 06:11:42,240 DEBUG:on stmt: $const164.1 = const(int, 0)
2024-07-15 06:11:42,240 DEBUG:on stmt: $166compare_op.2 = known_size == $const164.1
2024-07-15 06:11:42,240 DEBUG:on stmt: bool172 = global(bool: <class 'bool'>)
2024-07-15 06:11:42,240 DEBUG:on stmt: $172pred = call bool172($166compare_op.2, func=bool172, args=(Var($166compare_op.2, arrayobj.py:2062),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,240 DEBUG:on stmt: branch $172pred, 174, 192
2024-07-15 06:11:42,240 DEBUG:==== SSA block rewrite pass on 174
2024-07-15 06:11:42,240 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6958350>
2024-07-15 06:11:42,240 DEBUG:on stmt: inferred = const(int, 0)
2024-07-15 06:11:42,240 DEBUG:on stmt: $const180.2 = const(int, 0)
2024-07-15 06:11:42,240 DEBUG:on stmt: ok = origsize == $const180.2
2024-07-15 06:11:42,240 DEBUG:on stmt: jump 220
2024-07-15 06:11:42,240 DEBUG:==== SSA block rewrite pass on 192
2024-07-15 06:11:42,240 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6958350>
2024-07-15 06:11:42,240 DEBUG:on stmt: inferred = origsize // known_size
2024-07-15 06:11:42,240 DEBUG:on stmt: $binop_mod206.5 = origsize % known_size
2024-07-15 06:11:42,240 DEBUG:on stmt: $const210.6 = const(int, 0)
2024-07-15 06:11:42,240 DEBUG:on stmt: ok = $binop_mod206.5 == $const210.6
2024-07-15 06:11:42,240 DEBUG:on stmt: jump 220
2024-07-15 06:11:42,240 DEBUG:==== SSA block rewrite pass on 220
2024-07-15 06:11:42,240 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6958350>
2024-07-15 06:11:42,240 DEBUG:on stmt: bool222 = global(bool: <class 'bool'>)
2024-07-15 06:11:42,241 DEBUG:on stmt: $222pred = call bool222(ok, func=bool222, args=(Var(ok, arrayobj.py:2064),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,241 DEBUG:on stmt: branch $222pred, 254, 224
2024-07-15 06:11:42,241 DEBUG:==== SSA block rewrite pass on 224
2024-07-15 06:11:42,241 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6958350>
2024-07-15 06:11:42,242 DEBUG:on stmt: $224load_global.0 = global(ValueError: <class 'ValueError'>)
2024-07-15 06:11:42,242 DEBUG:on stmt: $const236.2 = const(str, total size of new array must be unchanged)
2024-07-15 06:11:42,242 DEBUG:on stmt: $242call.3 = call $224load_global.0($const236.2, func=$224load_global.0, args=[Var($const236.2, arrayobj.py:2069)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,242 DEBUG:on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2024-07-15 06:11:42,242 DEBUG:==== SSA block rewrite pass on 254
2024-07-15 06:11:42,242 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6958350>
2024-07-15 06:11:42,242 DEBUG:on stmt: shape[neg_ax] = inferred
2024-07-15 06:11:42,242 DEBUG:on stmt: $const264.3 = const(NoneType, None)
2024-07-15 06:11:42,242 DEBUG:on stmt: $266return_value.4 = cast(value=$const264.3)
2024-07-15 06:11:42,242 DEBUG:on stmt: return $266return_value.4
2024-07-15 06:11:42,242 DEBUG:==== SSA block rewrite pass on 268
2024-07-15 06:11:42,242 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6958350>
2024-07-15 06:11:42,242 DEBUG:on stmt: $268load_global.0 = global(ValueError: <class 'ValueError'>)
2024-07-15 06:11:42,242 DEBUG:on stmt: $const280.2 = const(str, multiple negative shape values)
2024-07-15 06:11:42,242 DEBUG:on stmt: $286call.3 = call $268load_global.0($const280.2, func=$268load_global.0, args=[Var($const280.2, arrayobj.py:2073)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,242 DEBUG:on stmt: <static> raise <class 'ValueError'>('multiple negative shape values')
2024-07-15 06:11:42,242 DEBUG:==== SSA block rewrite pass on 269
2024-07-15 06:11:42,242 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6958350>
2024-07-15 06:11:42,242 DEBUG:on stmt: jump 42
2024-07-15 06:11:42,242 DEBUG:Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x00000221B6958BD0>],
             64: [<numba.core.ir.Assign object at 0x00000221B69B4990>]})
2024-07-15 06:11:42,242 DEBUG:==== SSA block rewrite pass on 0
2024-07-15 06:11:42,243 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B69E93D0>
2024-07-15 06:11:42,243 DEBUG:on stmt: origsize = arg(0, name=origsize)
2024-07-15 06:11:42,243 DEBUG:on stmt: shape = arg(1, name=shape)
2024-07-15 06:11:42,243 DEBUG:on stmt: num_neg_value = const(int, 0)
2024-07-15 06:11:42,243 DEBUG:on stmt: known_size = const(int, 1)
2024-07-15 06:11:42,243 DEBUG:on stmt: $12load_global.2 = global(enumerate: <class 'enumerate'>)
2024-07-15 06:11:42,243 DEBUG:on stmt: $30call.5 = call $12load_global.2(shape, func=$12load_global.2, args=[Var(shape, arrayobj.py:2046)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,243 DEBUG:on stmt: $40get_iter.6 = getiter(value=$30call.5)
2024-07-15 06:11:42,243 DEBUG:on stmt: $phi42.0 = $40get_iter.6
2024-07-15 06:11:42,243 DEBUG:on stmt: jump 42
2024-07-15 06:11:42,243 DEBUG:==== SSA block rewrite pass on 42
2024-07-15 06:11:42,243 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B69E93D0>
2024-07-15 06:11:42,243 DEBUG:on stmt: $42for_iter.1 = iternext(value=$phi42.0)
2024-07-15 06:11:42,243 DEBUG:on stmt: $42for_iter.2 = pair_first(value=$42for_iter.1)
2024-07-15 06:11:42,243 DEBUG:on stmt: $42for_iter.3 = pair_second(value=$42for_iter.1)
2024-07-15 06:11:42,244 DEBUG:on stmt: $phi44.1 = $42for_iter.2
2024-07-15 06:11:42,244 DEBUG:on stmt: branch $42for_iter.3, 44, 92
2024-07-15 06:11:42,244 DEBUG:==== SSA block rewrite pass on 44
2024-07-15 06:11:42,244 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B69E93D0>
2024-07-15 06:11:42,245 DEBUG:on stmt: $44unpack_sequence.4 = exhaust_iter(value=$phi44.1, count=2)
2024-07-15 06:11:42,245 DEBUG:on stmt: $44unpack_sequence.2 = static_getitem(value=$44unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>)
2024-07-15 06:11:42,245 DEBUG:on stmt: $44unpack_sequence.3 = static_getitem(value=$44unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>)
2024-07-15 06:11:42,245 DEBUG:on stmt: ax = $44unpack_sequence.2
2024-07-15 06:11:42,245 DEBUG:on stmt: s = $44unpack_sequence.3
2024-07-15 06:11:42,245 DEBUG:on stmt: $const54.6 = const(int, 0)
2024-07-15 06:11:42,245 DEBUG:on stmt: $56compare_op.7 = s < $const54.6
2024-07-15 06:11:42,245 DEBUG:on stmt: bool62 = global(bool: <class 'bool'>)
2024-07-15 06:11:42,245 DEBUG:on stmt: $62pred = call bool62($56compare_op.7, func=bool62, args=(Var($56compare_op.7, arrayobj.py:2050),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,245 DEBUG:on stmt: branch $62pred, 64, 80
2024-07-15 06:11:42,245 DEBUG:==== SSA block rewrite pass on 64
2024-07-15 06:11:42,245 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B69E93D0>
2024-07-15 06:11:42,245 DEBUG:on stmt: $const66.2 = const(int, 1)
2024-07-15 06:11:42,245 DEBUG:on stmt: $binop_iadd68.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value, rhs=$const66.2, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:42,245 DEBUG:find_def var='num_neg_value' stmt=$binop_iadd68.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value, rhs=$const66.2, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:42,245 DEBUG:find_def_from_top label 64
2024-07-15 06:11:42,245 DEBUG:idom 44 from label 64
2024-07-15 06:11:42,246 DEBUG:find_def_from_bottom label 44
2024-07-15 06:11:42,246 DEBUG:find_def_from_top label 44
2024-07-15 06:11:42,246 DEBUG:idom 42 from label 44
2024-07-15 06:11:42,246 DEBUG:find_def_from_bottom label 42
2024-07-15 06:11:42,246 DEBUG:find_def_from_top label 42
2024-07-15 06:11:42,246 DEBUG:insert phi node num_neg_value.2 = phi(incoming_values=[], incoming_blocks=[]) at 42
2024-07-15 06:11:42,246 DEBUG:find_def_from_bottom label 0
2024-07-15 06:11:42,246 DEBUG:incoming_def num_neg_value = const(int, 0)
2024-07-15 06:11:42,246 DEBUG:find_def_from_bottom label 269
2024-07-15 06:11:42,246 DEBUG:find_def_from_top label 269
2024-07-15 06:11:42,246 DEBUG:insert phi node num_neg_value.3 = phi(incoming_values=[], incoming_blocks=[]) at 269
2024-07-15 06:11:42,246 DEBUG:find_def_from_bottom label 64
2024-07-15 06:11:42,246 DEBUG:incoming_def num_neg_value.1 = $binop_iadd68.3
2024-07-15 06:11:42,246 DEBUG:find_def_from_bottom label 80
2024-07-15 06:11:42,247 DEBUG:find_def_from_top label 80
2024-07-15 06:11:42,247 DEBUG:idom 44 from label 80
2024-07-15 06:11:42,247 DEBUG:find_def_from_bottom label 44
2024-07-15 06:11:42,247 DEBUG:find_def_from_top label 44
2024-07-15 06:11:42,247 DEBUG:idom 42 from label 44
2024-07-15 06:11:42,247 DEBUG:find_def_from_bottom label 42
2024-07-15 06:11:42,247 DEBUG:incoming_def num_neg_value.2 = phi(incoming_values=[Var(num_neg_value, arrayobj.py:2047)], incoming_blocks=[0])
2024-07-15 06:11:42,247 DEBUG:incoming_def num_neg_value.3 = phi(incoming_values=[Var(num_neg_value.1, arrayobj.py:2051), Var(num_neg_value.2, arrayobj.py:2051)], incoming_blocks=[64, 80])
2024-07-15 06:11:42,247 DEBUG:replaced with: $binop_iadd68.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value.2, rhs=$const66.2, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:42,247 DEBUG:on stmt: num_neg_value.1 = $binop_iadd68.3
2024-07-15 06:11:42,247 DEBUG:on stmt: neg_ax = ax
2024-07-15 06:11:42,247 DEBUG:on stmt: jump 269
2024-07-15 06:11:42,247 DEBUG:==== SSA block rewrite pass on 80
2024-07-15 06:11:42,247 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B69E93D0>
2024-07-15 06:11:42,247 DEBUG:on stmt: $binop_imul84.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:42,247 DEBUG:on stmt: known_size = $binop_imul84.3
2024-07-15 06:11:42,247 DEBUG:on stmt: jump 269
2024-07-15 06:11:42,248 DEBUG:==== SSA block rewrite pass on 92
2024-07-15 06:11:42,248 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B69E93D0>
2024-07-15 06:11:42,248 DEBUG:on stmt: $const94.1 = const(int, 0)
2024-07-15 06:11:42,248 DEBUG:on stmt: $96compare_op.2 = num_neg_value == $const94.1
2024-07-15 06:11:42,248 DEBUG:find_def var='num_neg_value' stmt=$96compare_op.2 = num_neg_value == $const94.1
2024-07-15 06:11:42,248 DEBUG:find_def_from_top label 92
2024-07-15 06:11:42,248 DEBUG:idom 42 from label 92
2024-07-15 06:11:42,248 DEBUG:find_def_from_bottom label 42
2024-07-15 06:11:42,248 DEBUG:replaced with: $96compare_op.2 = num_neg_value.2 == $const94.1
2024-07-15 06:11:42,248 DEBUG:on stmt: bool102 = global(bool: <class 'bool'>)
2024-07-15 06:11:42,248 DEBUG:on stmt: $102pred = call bool102($96compare_op.2, func=bool102, args=(Var($96compare_op.2, arrayobj.py:2056),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,248 DEBUG:on stmt: branch $102pred, 104, 150
2024-07-15 06:11:42,248 DEBUG:==== SSA block rewrite pass on 104
2024-07-15 06:11:42,248 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B69E93D0>
2024-07-15 06:11:42,248 DEBUG:on stmt: $108compare_op.2 = origsize != known_size
2024-07-15 06:11:42,248 DEBUG:on stmt: bool114 = global(bool: <class 'bool'>)
2024-07-15 06:11:42,248 DEBUG:on stmt: $114pred = call bool114($108compare_op.2, func=bool114, args=(Var($108compare_op.2, arrayobj.py:2057),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,248 DEBUG:on stmt: branch $114pred, 116, 146
2024-07-15 06:11:42,249 DEBUG:==== SSA block rewrite pass on 116
2024-07-15 06:11:42,249 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B69E93D0>
2024-07-15 06:11:42,249 DEBUG:on stmt: $116load_global.0 = global(ValueError: <class 'ValueError'>)
2024-07-15 06:11:42,249 DEBUG:on stmt: $const128.2 = const(str, total size of new array must be unchanged)
2024-07-15 06:11:42,249 DEBUG:on stmt: $134call.3 = call $116load_global.0($const128.2, func=$116load_global.0, args=[Var($const128.2, arrayobj.py:2058)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,249 DEBUG:on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2024-07-15 06:11:42,249 DEBUG:==== SSA block rewrite pass on 146
2024-07-15 06:11:42,249 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B69E93D0>
2024-07-15 06:11:42,249 DEBUG:on stmt: $const146.0 = const(NoneType, None)
2024-07-15 06:11:42,249 DEBUG:on stmt: $148return_value.1 = cast(value=$const146.0)
2024-07-15 06:11:42,249 DEBUG:on stmt: return $148return_value.1
2024-07-15 06:11:42,249 DEBUG:==== SSA block rewrite pass on 150
2024-07-15 06:11:42,249 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B69E93D0>
2024-07-15 06:11:42,249 DEBUG:on stmt: $const152.1 = const(int, 1)
2024-07-15 06:11:42,249 DEBUG:on stmt: $154compare_op.2 = num_neg_value == $const152.1
2024-07-15 06:11:42,249 DEBUG:find_def var='num_neg_value' stmt=$154compare_op.2 = num_neg_value == $const152.1
2024-07-15 06:11:42,249 DEBUG:find_def_from_top label 150
2024-07-15 06:11:42,250 DEBUG:idom 92 from label 150
2024-07-15 06:11:42,250 DEBUG:find_def_from_bottom label 92
2024-07-15 06:11:42,250 DEBUG:find_def_from_top label 92
2024-07-15 06:11:42,250 DEBUG:idom 42 from label 92
2024-07-15 06:11:42,250 DEBUG:find_def_from_bottom label 42
2024-07-15 06:11:42,250 DEBUG:replaced with: $154compare_op.2 = num_neg_value.2 == $const152.1
2024-07-15 06:11:42,250 DEBUG:on stmt: bool160 = global(bool: <class 'bool'>)
2024-07-15 06:11:42,250 DEBUG:on stmt: $160pred = call bool160($154compare_op.2, func=bool160, args=(Var($154compare_op.2, arrayobj.py:2060),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,250 DEBUG:on stmt: branch $160pred, 162, 268
2024-07-15 06:11:42,250 DEBUG:==== SSA block rewrite pass on 162
2024-07-15 06:11:42,250 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B69E93D0>
2024-07-15 06:11:42,250 DEBUG:on stmt: $const164.1 = const(int, 0)
2024-07-15 06:11:42,250 DEBUG:on stmt: $166compare_op.2 = known_size == $const164.1
2024-07-15 06:11:42,250 DEBUG:on stmt: bool172 = global(bool: <class 'bool'>)
2024-07-15 06:11:42,250 DEBUG:on stmt: $172pred = call bool172($166compare_op.2, func=bool172, args=(Var($166compare_op.2, arrayobj.py:2062),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,250 DEBUG:on stmt: branch $172pred, 174, 192
2024-07-15 06:11:42,250 DEBUG:==== SSA block rewrite pass on 174
2024-07-15 06:11:42,251 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B69E93D0>
2024-07-15 06:11:42,251 DEBUG:on stmt: inferred = const(int, 0)
2024-07-15 06:11:42,251 DEBUG:on stmt: $const180.2 = const(int, 0)
2024-07-15 06:11:42,251 DEBUG:on stmt: ok = origsize == $const180.2
2024-07-15 06:11:42,251 DEBUG:on stmt: jump 220
2024-07-15 06:11:42,251 DEBUG:==== SSA block rewrite pass on 192
2024-07-15 06:11:42,251 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B69E93D0>
2024-07-15 06:11:42,251 DEBUG:on stmt: inferred = origsize // known_size
2024-07-15 06:11:42,251 DEBUG:on stmt: $binop_mod206.5 = origsize % known_size
2024-07-15 06:11:42,251 DEBUG:on stmt: $const210.6 = const(int, 0)
2024-07-15 06:11:42,251 DEBUG:on stmt: ok = $binop_mod206.5 == $const210.6
2024-07-15 06:11:42,251 DEBUG:on stmt: jump 220
2024-07-15 06:11:42,251 DEBUG:==== SSA block rewrite pass on 220
2024-07-15 06:11:42,251 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B69E93D0>
2024-07-15 06:11:42,251 DEBUG:on stmt: bool222 = global(bool: <class 'bool'>)
2024-07-15 06:11:42,251 DEBUG:on stmt: $222pred = call bool222(ok, func=bool222, args=(Var(ok, arrayobj.py:2064),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,251 DEBUG:on stmt: branch $222pred, 254, 224
2024-07-15 06:11:42,251 DEBUG:==== SSA block rewrite pass on 224
2024-07-15 06:11:42,251 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B69E93D0>
2024-07-15 06:11:42,251 DEBUG:on stmt: $224load_global.0 = global(ValueError: <class 'ValueError'>)
2024-07-15 06:11:42,251 DEBUG:on stmt: $const236.2 = const(str, total size of new array must be unchanged)
2024-07-15 06:11:42,252 DEBUG:on stmt: $242call.3 = call $224load_global.0($const236.2, func=$224load_global.0, args=[Var($const236.2, arrayobj.py:2069)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,252 DEBUG:on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2024-07-15 06:11:42,252 DEBUG:==== SSA block rewrite pass on 254
2024-07-15 06:11:42,252 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B69E93D0>
2024-07-15 06:11:42,252 DEBUG:on stmt: shape[neg_ax] = inferred
2024-07-15 06:11:42,252 DEBUG:on stmt: $const264.3 = const(NoneType, None)
2024-07-15 06:11:42,252 DEBUG:on stmt: $266return_value.4 = cast(value=$const264.3)
2024-07-15 06:11:42,252 DEBUG:on stmt: return $266return_value.4
2024-07-15 06:11:42,252 DEBUG:==== SSA block rewrite pass on 268
2024-07-15 06:11:42,252 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B69E93D0>
2024-07-15 06:11:42,252 DEBUG:on stmt: $268load_global.0 = global(ValueError: <class 'ValueError'>)
2024-07-15 06:11:42,252 DEBUG:on stmt: $const280.2 = const(str, multiple negative shape values)
2024-07-15 06:11:42,252 DEBUG:on stmt: $286call.3 = call $268load_global.0($const280.2, func=$268load_global.0, args=[Var($const280.2, arrayobj.py:2073)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,252 DEBUG:on stmt: <static> raise <class 'ValueError'>('multiple negative shape values')
2024-07-15 06:11:42,252 DEBUG:==== SSA block rewrite pass on 269
2024-07-15 06:11:42,252 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B69E93D0>
2024-07-15 06:11:42,252 DEBUG:on stmt: jump 42
2024-07-15 06:11:42,252 DEBUG:Fix SSA violator on var known_size
2024-07-15 06:11:42,252 DEBUG:==== SSA block rewrite pass on 0
2024-07-15 06:11:42,253 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B678C5D0>
2024-07-15 06:11:42,253 DEBUG:on stmt: origsize = arg(0, name=origsize)
2024-07-15 06:11:42,253 DEBUG:on stmt: shape = arg(1, name=shape)
2024-07-15 06:11:42,253 DEBUG:on stmt: num_neg_value = const(int, 0)
2024-07-15 06:11:42,253 DEBUG:on stmt: known_size = const(int, 1)
2024-07-15 06:11:42,253 DEBUG:first assign: known_size
2024-07-15 06:11:42,253 DEBUG:replaced with: known_size = const(int, 1)
2024-07-15 06:11:42,253 DEBUG:on stmt: $12load_global.2 = global(enumerate: <class 'enumerate'>)
2024-07-15 06:11:42,253 DEBUG:on stmt: $30call.5 = call $12load_global.2(shape, func=$12load_global.2, args=[Var(shape, arrayobj.py:2046)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,253 DEBUG:on stmt: $40get_iter.6 = getiter(value=$30call.5)
2024-07-15 06:11:42,253 DEBUG:on stmt: $phi42.0 = $40get_iter.6
2024-07-15 06:11:42,253 DEBUG:on stmt: jump 42
2024-07-15 06:11:42,253 DEBUG:==== SSA block rewrite pass on 42
2024-07-15 06:11:42,253 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B678C5D0>
2024-07-15 06:11:42,253 DEBUG:on stmt: num_neg_value.2 = phi(incoming_values=[Var(num_neg_value, arrayobj.py:2047), Var(num_neg_value.3, arrayobj.py:2051)], incoming_blocks=[0, 269])
2024-07-15 06:11:42,253 DEBUG:on stmt: $42for_iter.1 = iternext(value=$phi42.0)
2024-07-15 06:11:42,253 DEBUG:on stmt: $42for_iter.2 = pair_first(value=$42for_iter.1)
2024-07-15 06:11:42,253 DEBUG:on stmt: $42for_iter.3 = pair_second(value=$42for_iter.1)
2024-07-15 06:11:42,253 DEBUG:on stmt: $phi44.1 = $42for_iter.2
2024-07-15 06:11:42,253 DEBUG:on stmt: branch $42for_iter.3, 44, 92
2024-07-15 06:11:42,253 DEBUG:==== SSA block rewrite pass on 44
2024-07-15 06:11:42,253 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B678C5D0>
2024-07-15 06:11:42,253 DEBUG:on stmt: $44unpack_sequence.4 = exhaust_iter(value=$phi44.1, count=2)
2024-07-15 06:11:42,253 DEBUG:on stmt: $44unpack_sequence.2 = static_getitem(value=$44unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>)
2024-07-15 06:11:42,253 DEBUG:on stmt: $44unpack_sequence.3 = static_getitem(value=$44unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>)
2024-07-15 06:11:42,254 DEBUG:on stmt: ax = $44unpack_sequence.2
2024-07-15 06:11:42,254 DEBUG:on stmt: s = $44unpack_sequence.3
2024-07-15 06:11:42,254 DEBUG:on stmt: $const54.6 = const(int, 0)
2024-07-15 06:11:42,254 DEBUG:on stmt: $56compare_op.7 = s < $const54.6
2024-07-15 06:11:42,254 DEBUG:on stmt: bool62 = global(bool: <class 'bool'>)
2024-07-15 06:11:42,254 DEBUG:on stmt: $62pred = call bool62($56compare_op.7, func=bool62, args=(Var($56compare_op.7, arrayobj.py:2050),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,255 DEBUG:on stmt: branch $62pred, 64, 80
2024-07-15 06:11:42,255 DEBUG:==== SSA block rewrite pass on 64
2024-07-15 06:11:42,255 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B678C5D0>
2024-07-15 06:11:42,255 DEBUG:on stmt: $const66.2 = const(int, 1)
2024-07-15 06:11:42,255 DEBUG:on stmt: $binop_iadd68.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value.2, rhs=$const66.2, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:42,255 DEBUG:on stmt: num_neg_value.1 = $binop_iadd68.3
2024-07-15 06:11:42,255 DEBUG:on stmt: neg_ax = ax
2024-07-15 06:11:42,255 DEBUG:on stmt: jump 269
2024-07-15 06:11:42,255 DEBUG:==== SSA block rewrite pass on 80
2024-07-15 06:11:42,255 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B678C5D0>
2024-07-15 06:11:42,255 DEBUG:on stmt: $binop_imul84.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:42,255 DEBUG:on stmt: known_size = $binop_imul84.3
2024-07-15 06:11:42,255 DEBUG:replaced with: known_size.1 = $binop_imul84.3
2024-07-15 06:11:42,255 DEBUG:on stmt: jump 269
2024-07-15 06:11:42,255 DEBUG:==== SSA block rewrite pass on 92
2024-07-15 06:11:42,255 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B678C5D0>
2024-07-15 06:11:42,256 DEBUG:on stmt: $const94.1 = const(int, 0)
2024-07-15 06:11:42,256 DEBUG:on stmt: $96compare_op.2 = num_neg_value.2 == $const94.1
2024-07-15 06:11:42,256 DEBUG:on stmt: bool102 = global(bool: <class 'bool'>)
2024-07-15 06:11:42,256 DEBUG:on stmt: $102pred = call bool102($96compare_op.2, func=bool102, args=(Var($96compare_op.2, arrayobj.py:2056),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,256 DEBUG:on stmt: branch $102pred, 104, 150
2024-07-15 06:11:42,256 DEBUG:==== SSA block rewrite pass on 104
2024-07-15 06:11:42,256 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B678C5D0>
2024-07-15 06:11:42,256 DEBUG:on stmt: $108compare_op.2 = origsize != known_size
2024-07-15 06:11:42,256 DEBUG:on stmt: bool114 = global(bool: <class 'bool'>)
2024-07-15 06:11:42,256 DEBUG:on stmt: $114pred = call bool114($108compare_op.2, func=bool114, args=(Var($108compare_op.2, arrayobj.py:2057),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,256 DEBUG:on stmt: branch $114pred, 116, 146
2024-07-15 06:11:42,256 DEBUG:==== SSA block rewrite pass on 116
2024-07-15 06:11:42,256 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B678C5D0>
2024-07-15 06:11:42,256 DEBUG:on stmt: $116load_global.0 = global(ValueError: <class 'ValueError'>)
2024-07-15 06:11:42,256 DEBUG:on stmt: $const128.2 = const(str, total size of new array must be unchanged)
2024-07-15 06:11:42,256 DEBUG:on stmt: $134call.3 = call $116load_global.0($const128.2, func=$116load_global.0, args=[Var($const128.2, arrayobj.py:2058)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,256 DEBUG:on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2024-07-15 06:11:42,256 DEBUG:==== SSA block rewrite pass on 146
2024-07-15 06:11:42,256 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B678C5D0>
2024-07-15 06:11:42,256 DEBUG:on stmt: $const146.0 = const(NoneType, None)
2024-07-15 06:11:42,257 DEBUG:on stmt: $148return_value.1 = cast(value=$const146.0)
2024-07-15 06:11:42,257 DEBUG:on stmt: return $148return_value.1
2024-07-15 06:11:42,257 DEBUG:==== SSA block rewrite pass on 150
2024-07-15 06:11:42,257 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B678C5D0>
2024-07-15 06:11:42,257 DEBUG:on stmt: $const152.1 = const(int, 1)
2024-07-15 06:11:42,257 DEBUG:on stmt: $154compare_op.2 = num_neg_value.2 == $const152.1
2024-07-15 06:11:42,257 DEBUG:on stmt: bool160 = global(bool: <class 'bool'>)
2024-07-15 06:11:42,257 DEBUG:on stmt: $160pred = call bool160($154compare_op.2, func=bool160, args=(Var($154compare_op.2, arrayobj.py:2060),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,257 DEBUG:on stmt: branch $160pred, 162, 268
2024-07-15 06:11:42,257 DEBUG:==== SSA block rewrite pass on 162
2024-07-15 06:11:42,257 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B678C5D0>
2024-07-15 06:11:42,257 DEBUG:on stmt: $const164.1 = const(int, 0)
2024-07-15 06:11:42,257 DEBUG:on stmt: $166compare_op.2 = known_size == $const164.1
2024-07-15 06:11:42,257 DEBUG:on stmt: bool172 = global(bool: <class 'bool'>)
2024-07-15 06:11:42,257 DEBUG:on stmt: $172pred = call bool172($166compare_op.2, func=bool172, args=(Var($166compare_op.2, arrayobj.py:2062),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,257 DEBUG:on stmt: branch $172pred, 174, 192
2024-07-15 06:11:42,257 DEBUG:==== SSA block rewrite pass on 174
2024-07-15 06:11:42,257 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B678C5D0>
2024-07-15 06:11:42,257 DEBUG:on stmt: inferred = const(int, 0)
2024-07-15 06:11:42,257 DEBUG:on stmt: $const180.2 = const(int, 0)
2024-07-15 06:11:42,257 DEBUG:on stmt: ok = origsize == $const180.2
2024-07-15 06:11:42,257 DEBUG:on stmt: jump 220
2024-07-15 06:11:42,257 DEBUG:==== SSA block rewrite pass on 192
2024-07-15 06:11:42,257 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B678C5D0>
2024-07-15 06:11:42,257 DEBUG:on stmt: inferred = origsize // known_size
2024-07-15 06:11:42,257 DEBUG:on stmt: $binop_mod206.5 = origsize % known_size
2024-07-15 06:11:42,257 DEBUG:on stmt: $const210.6 = const(int, 0)
2024-07-15 06:11:42,257 DEBUG:on stmt: ok = $binop_mod206.5 == $const210.6
2024-07-15 06:11:42,257 DEBUG:on stmt: jump 220
2024-07-15 06:11:42,257 DEBUG:==== SSA block rewrite pass on 220
2024-07-15 06:11:42,257 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B678C5D0>
2024-07-15 06:11:42,258 DEBUG:on stmt: bool222 = global(bool: <class 'bool'>)
2024-07-15 06:11:42,258 DEBUG:on stmt: $222pred = call bool222(ok, func=bool222, args=(Var(ok, arrayobj.py:2064),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,258 DEBUG:on stmt: branch $222pred, 254, 224
2024-07-15 06:11:42,258 DEBUG:==== SSA block rewrite pass on 224
2024-07-15 06:11:42,258 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B678C5D0>
2024-07-15 06:11:42,258 DEBUG:on stmt: $224load_global.0 = global(ValueError: <class 'ValueError'>)
2024-07-15 06:11:42,258 DEBUG:on stmt: $const236.2 = const(str, total size of new array must be unchanged)
2024-07-15 06:11:42,258 DEBUG:on stmt: $242call.3 = call $224load_global.0($const236.2, func=$224load_global.0, args=[Var($const236.2, arrayobj.py:2069)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,258 DEBUG:on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2024-07-15 06:11:42,258 DEBUG:==== SSA block rewrite pass on 254
2024-07-15 06:11:42,258 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B678C5D0>
2024-07-15 06:11:42,258 DEBUG:on stmt: shape[neg_ax] = inferred
2024-07-15 06:11:42,258 DEBUG:on stmt: $const264.3 = const(NoneType, None)
2024-07-15 06:11:42,258 DEBUG:on stmt: $266return_value.4 = cast(value=$const264.3)
2024-07-15 06:11:42,258 DEBUG:on stmt: return $266return_value.4
2024-07-15 06:11:42,258 DEBUG:==== SSA block rewrite pass on 268
2024-07-15 06:11:42,258 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B678C5D0>
2024-07-15 06:11:42,258 DEBUG:on stmt: $268load_global.0 = global(ValueError: <class 'ValueError'>)
2024-07-15 06:11:42,258 DEBUG:on stmt: $const280.2 = const(str, multiple negative shape values)
2024-07-15 06:11:42,258 DEBUG:on stmt: $286call.3 = call $268load_global.0($const280.2, func=$268load_global.0, args=[Var($const280.2, arrayobj.py:2073)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,259 DEBUG:on stmt: <static> raise <class 'ValueError'>('multiple negative shape values')
2024-07-15 06:11:42,259 DEBUG:==== SSA block rewrite pass on 269
2024-07-15 06:11:42,259 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B678C5D0>
2024-07-15 06:11:42,259 DEBUG:on stmt: num_neg_value.3 = phi(incoming_values=[Var(num_neg_value.1, arrayobj.py:2051), Var(num_neg_value.2, arrayobj.py:2051)], incoming_blocks=[64, 80])
2024-07-15 06:11:42,259 DEBUG:on stmt: jump 42
2024-07-15 06:11:42,259 DEBUG:Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x00000221B6959B50>],
             80: [<numba.core.ir.Assign object at 0x00000221B69E8D50>]})
2024-07-15 06:11:42,259 DEBUG:==== SSA block rewrite pass on 0
2024-07-15 06:11:42,259 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B682C150>
2024-07-15 06:11:42,259 DEBUG:on stmt: origsize = arg(0, name=origsize)
2024-07-15 06:11:42,259 DEBUG:on stmt: shape = arg(1, name=shape)
2024-07-15 06:11:42,259 DEBUG:on stmt: num_neg_value = const(int, 0)
2024-07-15 06:11:42,259 DEBUG:on stmt: known_size = const(int, 1)
2024-07-15 06:11:42,259 DEBUG:on stmt: $12load_global.2 = global(enumerate: <class 'enumerate'>)
2024-07-15 06:11:42,259 DEBUG:on stmt: $30call.5 = call $12load_global.2(shape, func=$12load_global.2, args=[Var(shape, arrayobj.py:2046)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,259 DEBUG:on stmt: $40get_iter.6 = getiter(value=$30call.5)
2024-07-15 06:11:42,259 DEBUG:on stmt: $phi42.0 = $40get_iter.6
2024-07-15 06:11:42,259 DEBUG:on stmt: jump 42
2024-07-15 06:11:42,259 DEBUG:==== SSA block rewrite pass on 42
2024-07-15 06:11:42,260 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B682C150>
2024-07-15 06:11:42,260 DEBUG:on stmt: num_neg_value.2 = phi(incoming_values=[Var(num_neg_value, arrayobj.py:2047), Var(num_neg_value.3, arrayobj.py:2051)], incoming_blocks=[0, 269])
2024-07-15 06:11:42,260 DEBUG:on stmt: $42for_iter.1 = iternext(value=$phi42.0)
2024-07-15 06:11:42,260 DEBUG:on stmt: $42for_iter.2 = pair_first(value=$42for_iter.1)
2024-07-15 06:11:42,260 DEBUG:on stmt: $42for_iter.3 = pair_second(value=$42for_iter.1)
2024-07-15 06:11:42,260 DEBUG:on stmt: $phi44.1 = $42for_iter.2
2024-07-15 06:11:42,260 DEBUG:on stmt: branch $42for_iter.3, 44, 92
2024-07-15 06:11:42,260 DEBUG:==== SSA block rewrite pass on 44
2024-07-15 06:11:42,260 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B682C150>
2024-07-15 06:11:42,260 DEBUG:on stmt: $44unpack_sequence.4 = exhaust_iter(value=$phi44.1, count=2)
2024-07-15 06:11:42,260 DEBUG:on stmt: $44unpack_sequence.2 = static_getitem(value=$44unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>)
2024-07-15 06:11:42,260 DEBUG:on stmt: $44unpack_sequence.3 = static_getitem(value=$44unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>)
2024-07-15 06:11:42,260 DEBUG:on stmt: ax = $44unpack_sequence.2
2024-07-15 06:11:42,260 DEBUG:on stmt: s = $44unpack_sequence.3
2024-07-15 06:11:42,260 DEBUG:on stmt: $const54.6 = const(int, 0)
2024-07-15 06:11:42,260 DEBUG:on stmt: $56compare_op.7 = s < $const54.6
2024-07-15 06:11:42,260 DEBUG:on stmt: bool62 = global(bool: <class 'bool'>)
2024-07-15 06:11:42,260 DEBUG:on stmt: $62pred = call bool62($56compare_op.7, func=bool62, args=(Var($56compare_op.7, arrayobj.py:2050),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,260 DEBUG:on stmt: branch $62pred, 64, 80
2024-07-15 06:11:42,260 DEBUG:==== SSA block rewrite pass on 64
2024-07-15 06:11:42,260 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B682C150>
2024-07-15 06:11:42,261 DEBUG:on stmt: $const66.2 = const(int, 1)
2024-07-15 06:11:42,261 DEBUG:on stmt: $binop_iadd68.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value.2, rhs=$const66.2, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:42,261 DEBUG:on stmt: num_neg_value.1 = $binop_iadd68.3
2024-07-15 06:11:42,261 DEBUG:on stmt: neg_ax = ax
2024-07-15 06:11:42,261 DEBUG:on stmt: jump 269
2024-07-15 06:11:42,261 DEBUG:==== SSA block rewrite pass on 80
2024-07-15 06:11:42,261 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B682C150>
2024-07-15 06:11:42,261 DEBUG:on stmt: $binop_imul84.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:42,261 DEBUG:find_def var='known_size' stmt=$binop_imul84.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:42,261 DEBUG:find_def_from_top label 80
2024-07-15 06:11:42,261 DEBUG:idom 44 from label 80
2024-07-15 06:11:42,261 DEBUG:find_def_from_bottom label 44
2024-07-15 06:11:42,261 DEBUG:find_def_from_top label 44
2024-07-15 06:11:42,261 DEBUG:idom 42 from label 44
2024-07-15 06:11:42,261 DEBUG:find_def_from_bottom label 42
2024-07-15 06:11:42,261 DEBUG:find_def_from_top label 42
2024-07-15 06:11:42,261 DEBUG:insert phi node known_size.2 = phi(incoming_values=[], incoming_blocks=[]) at 42
2024-07-15 06:11:42,261 DEBUG:find_def_from_bottom label 0
2024-07-15 06:11:42,261 DEBUG:incoming_def known_size = const(int, 1)
2024-07-15 06:11:42,262 DEBUG:find_def_from_bottom label 269
2024-07-15 06:11:42,262 DEBUG:find_def_from_top label 269
2024-07-15 06:11:42,262 DEBUG:insert phi node known_size.3 = phi(incoming_values=[], incoming_blocks=[]) at 269
2024-07-15 06:11:42,262 DEBUG:find_def_from_bottom label 64
2024-07-15 06:11:42,262 DEBUG:find_def_from_top label 64
2024-07-15 06:11:42,262 DEBUG:idom 44 from label 64
2024-07-15 06:11:42,263 DEBUG:find_def_from_bottom label 44
2024-07-15 06:11:42,263 DEBUG:find_def_from_top label 44
2024-07-15 06:11:42,263 DEBUG:idom 42 from label 44
2024-07-15 06:11:42,263 DEBUG:find_def_from_bottom label 42
2024-07-15 06:11:42,263 DEBUG:incoming_def known_size.2 = phi(incoming_values=[Var(known_size, arrayobj.py:2048)], incoming_blocks=[0])
2024-07-15 06:11:42,263 DEBUG:find_def_from_bottom label 80
2024-07-15 06:11:42,264 DEBUG:incoming_def known_size.1 = $binop_imul84.3
2024-07-15 06:11:42,264 DEBUG:incoming_def known_size.3 = phi(incoming_values=[Var(known_size.2, arrayobj.py:2054), Var(known_size.1, arrayobj.py:2054)], incoming_blocks=[64, 80])
2024-07-15 06:11:42,264 DEBUG:replaced with: $binop_imul84.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size.2, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:42,264 DEBUG:on stmt: known_size.1 = $binop_imul84.3
2024-07-15 06:11:42,264 DEBUG:on stmt: jump 269
2024-07-15 06:11:42,264 DEBUG:==== SSA block rewrite pass on 92
2024-07-15 06:11:42,265 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B682C150>
2024-07-15 06:11:42,265 DEBUG:on stmt: $const94.1 = const(int, 0)
2024-07-15 06:11:42,265 DEBUG:on stmt: $96compare_op.2 = num_neg_value.2 == $const94.1
2024-07-15 06:11:42,265 DEBUG:on stmt: bool102 = global(bool: <class 'bool'>)
2024-07-15 06:11:42,265 DEBUG:on stmt: $102pred = call bool102($96compare_op.2, func=bool102, args=(Var($96compare_op.2, arrayobj.py:2056),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,265 DEBUG:on stmt: branch $102pred, 104, 150
2024-07-15 06:11:42,265 DEBUG:==== SSA block rewrite pass on 104
2024-07-15 06:11:42,265 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B682C150>
2024-07-15 06:11:42,265 DEBUG:on stmt: $108compare_op.2 = origsize != known_size
2024-07-15 06:11:42,265 DEBUG:find_def var='known_size' stmt=$108compare_op.2 = origsize != known_size
2024-07-15 06:11:42,266 DEBUG:find_def_from_top label 104
2024-07-15 06:11:42,266 DEBUG:idom 92 from label 104
2024-07-15 06:11:42,266 DEBUG:find_def_from_bottom label 92
2024-07-15 06:11:42,266 DEBUG:find_def_from_top label 92
2024-07-15 06:11:42,266 DEBUG:idom 42 from label 92
2024-07-15 06:11:42,266 DEBUG:find_def_from_bottom label 42
2024-07-15 06:11:42,266 DEBUG:replaced with: $108compare_op.2 = origsize != known_size.2
2024-07-15 06:11:42,266 DEBUG:on stmt: bool114 = global(bool: <class 'bool'>)
2024-07-15 06:11:42,266 DEBUG:on stmt: $114pred = call bool114($108compare_op.2, func=bool114, args=(Var($108compare_op.2, arrayobj.py:2057),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,266 DEBUG:on stmt: branch $114pred, 116, 146
2024-07-15 06:11:42,266 DEBUG:==== SSA block rewrite pass on 116
2024-07-15 06:11:42,266 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B682C150>
2024-07-15 06:11:42,266 DEBUG:on stmt: $116load_global.0 = global(ValueError: <class 'ValueError'>)
2024-07-15 06:11:42,266 DEBUG:on stmt: $const128.2 = const(str, total size of new array must be unchanged)
2024-07-15 06:11:42,266 DEBUG:on stmt: $134call.3 = call $116load_global.0($const128.2, func=$116load_global.0, args=[Var($const128.2, arrayobj.py:2058)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,266 DEBUG:on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2024-07-15 06:11:42,266 DEBUG:==== SSA block rewrite pass on 146
2024-07-15 06:11:42,266 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B682C150>
2024-07-15 06:11:42,266 DEBUG:on stmt: $const146.0 = const(NoneType, None)
2024-07-15 06:11:42,266 DEBUG:on stmt: $148return_value.1 = cast(value=$const146.0)
2024-07-15 06:11:42,266 DEBUG:on stmt: return $148return_value.1
2024-07-15 06:11:42,266 DEBUG:==== SSA block rewrite pass on 150
2024-07-15 06:11:42,266 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B682C150>
2024-07-15 06:11:42,266 DEBUG:on stmt: $const152.1 = const(int, 1)
2024-07-15 06:11:42,267 DEBUG:on stmt: $154compare_op.2 = num_neg_value.2 == $const152.1
2024-07-15 06:11:42,267 DEBUG:on stmt: bool160 = global(bool: <class 'bool'>)
2024-07-15 06:11:42,267 DEBUG:on stmt: $160pred = call bool160($154compare_op.2, func=bool160, args=(Var($154compare_op.2, arrayobj.py:2060),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,267 DEBUG:on stmt: branch $160pred, 162, 268
2024-07-15 06:11:42,267 DEBUG:==== SSA block rewrite pass on 162
2024-07-15 06:11:42,267 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B682C150>
2024-07-15 06:11:42,267 DEBUG:on stmt: $const164.1 = const(int, 0)
2024-07-15 06:11:42,267 DEBUG:on stmt: $166compare_op.2 = known_size == $const164.1
2024-07-15 06:11:42,267 DEBUG:find_def var='known_size' stmt=$166compare_op.2 = known_size == $const164.1
2024-07-15 06:11:42,267 DEBUG:find_def_from_top label 162
2024-07-15 06:11:42,267 DEBUG:idom 150 from label 162
2024-07-15 06:11:42,267 DEBUG:find_def_from_bottom label 150
2024-07-15 06:11:42,267 DEBUG:find_def_from_top label 150
2024-07-15 06:11:42,267 DEBUG:idom 92 from label 150
2024-07-15 06:11:42,267 DEBUG:find_def_from_bottom label 92
2024-07-15 06:11:42,267 DEBUG:find_def_from_top label 92
2024-07-15 06:11:42,267 DEBUG:idom 42 from label 92
2024-07-15 06:11:42,267 DEBUG:find_def_from_bottom label 42
2024-07-15 06:11:42,267 DEBUG:replaced with: $166compare_op.2 = known_size.2 == $const164.1
2024-07-15 06:11:42,267 DEBUG:on stmt: bool172 = global(bool: <class 'bool'>)
2024-07-15 06:11:42,268 DEBUG:on stmt: $172pred = call bool172($166compare_op.2, func=bool172, args=(Var($166compare_op.2, arrayobj.py:2062),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,268 DEBUG:on stmt: branch $172pred, 174, 192
2024-07-15 06:11:42,268 DEBUG:==== SSA block rewrite pass on 174
2024-07-15 06:11:42,268 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B682C150>
2024-07-15 06:11:42,268 DEBUG:on stmt: inferred = const(int, 0)
2024-07-15 06:11:42,268 DEBUG:on stmt: $const180.2 = const(int, 0)
2024-07-15 06:11:42,268 DEBUG:on stmt: ok = origsize == $const180.2
2024-07-15 06:11:42,268 DEBUG:on stmt: jump 220
2024-07-15 06:11:42,268 DEBUG:==== SSA block rewrite pass on 192
2024-07-15 06:11:42,268 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B682C150>
2024-07-15 06:11:42,268 DEBUG:on stmt: inferred = origsize // known_size
2024-07-15 06:11:42,268 DEBUG:find_def var='known_size' stmt=inferred = origsize // known_size
2024-07-15 06:11:42,268 DEBUG:find_def_from_top label 192
2024-07-15 06:11:42,268 DEBUG:idom 162 from label 192
2024-07-15 06:11:42,268 DEBUG:find_def_from_bottom label 162
2024-07-15 06:11:42,268 DEBUG:find_def_from_top label 162
2024-07-15 06:11:42,268 DEBUG:idom 150 from label 162
2024-07-15 06:11:42,268 DEBUG:find_def_from_bottom label 150
2024-07-15 06:11:42,268 DEBUG:find_def_from_top label 150
2024-07-15 06:11:42,268 DEBUG:idom 92 from label 150
2024-07-15 06:11:42,268 DEBUG:find_def_from_bottom label 92
2024-07-15 06:11:42,268 DEBUG:find_def_from_top label 92
2024-07-15 06:11:42,268 DEBUG:idom 42 from label 92
2024-07-15 06:11:42,269 DEBUG:find_def_from_bottom label 42
2024-07-15 06:11:42,269 DEBUG:replaced with: inferred = origsize // known_size.2
2024-07-15 06:11:42,269 DEBUG:on stmt: $binop_mod206.5 = origsize % known_size
2024-07-15 06:11:42,269 DEBUG:find_def var='known_size' stmt=$binop_mod206.5 = origsize % known_size
2024-07-15 06:11:42,269 DEBUG:find_def_from_top label 192
2024-07-15 06:11:42,269 DEBUG:idom 162 from label 192
2024-07-15 06:11:42,269 DEBUG:find_def_from_bottom label 162
2024-07-15 06:11:42,269 DEBUG:find_def_from_top label 162
2024-07-15 06:11:42,269 DEBUG:idom 150 from label 162
2024-07-15 06:11:42,269 DEBUG:find_def_from_bottom label 150
2024-07-15 06:11:42,269 DEBUG:find_def_from_top label 150
2024-07-15 06:11:42,269 DEBUG:idom 92 from label 150
2024-07-15 06:11:42,269 DEBUG:find_def_from_bottom label 92
2024-07-15 06:11:42,269 DEBUG:find_def_from_top label 92
2024-07-15 06:11:42,269 DEBUG:idom 42 from label 92
2024-07-15 06:11:42,270 DEBUG:find_def_from_bottom label 42
2024-07-15 06:11:42,270 DEBUG:replaced with: $binop_mod206.5 = origsize % known_size.2
2024-07-15 06:11:42,270 DEBUG:on stmt: $const210.6 = const(int, 0)
2024-07-15 06:11:42,270 DEBUG:on stmt: ok = $binop_mod206.5 == $const210.6
2024-07-15 06:11:42,270 DEBUG:on stmt: jump 220
2024-07-15 06:11:42,270 DEBUG:==== SSA block rewrite pass on 220
2024-07-15 06:11:42,270 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B682C150>
2024-07-15 06:11:42,270 DEBUG:on stmt: bool222 = global(bool: <class 'bool'>)
2024-07-15 06:11:42,270 DEBUG:on stmt: $222pred = call bool222(ok, func=bool222, args=(Var(ok, arrayobj.py:2064),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,270 DEBUG:on stmt: branch $222pred, 254, 224
2024-07-15 06:11:42,270 DEBUG:==== SSA block rewrite pass on 224
2024-07-15 06:11:42,270 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B682C150>
2024-07-15 06:11:42,270 DEBUG:on stmt: $224load_global.0 = global(ValueError: <class 'ValueError'>)
2024-07-15 06:11:42,271 DEBUG:on stmt: $const236.2 = const(str, total size of new array must be unchanged)
2024-07-15 06:11:42,271 DEBUG:on stmt: $242call.3 = call $224load_global.0($const236.2, func=$224load_global.0, args=[Var($const236.2, arrayobj.py:2069)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,271 DEBUG:on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2024-07-15 06:11:42,271 DEBUG:==== SSA block rewrite pass on 254
2024-07-15 06:11:42,271 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B682C150>
2024-07-15 06:11:42,271 DEBUG:on stmt: shape[neg_ax] = inferred
2024-07-15 06:11:42,271 DEBUG:on stmt: $const264.3 = const(NoneType, None)
2024-07-15 06:11:42,271 DEBUG:on stmt: $266return_value.4 = cast(value=$const264.3)
2024-07-15 06:11:42,271 DEBUG:on stmt: return $266return_value.4
2024-07-15 06:11:42,271 DEBUG:==== SSA block rewrite pass on 268
2024-07-15 06:11:42,271 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B682C150>
2024-07-15 06:11:42,271 DEBUG:on stmt: $268load_global.0 = global(ValueError: <class 'ValueError'>)
2024-07-15 06:11:42,271 DEBUG:on stmt: $const280.2 = const(str, multiple negative shape values)
2024-07-15 06:11:42,271 DEBUG:on stmt: $286call.3 = call $268load_global.0($const280.2, func=$268load_global.0, args=[Var($const280.2, arrayobj.py:2073)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,271 DEBUG:on stmt: <static> raise <class 'ValueError'>('multiple negative shape values')
2024-07-15 06:11:42,271 DEBUG:==== SSA block rewrite pass on 269
2024-07-15 06:11:42,271 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B682C150>
2024-07-15 06:11:42,271 DEBUG:on stmt: num_neg_value.3 = phi(incoming_values=[Var(num_neg_value.1, arrayobj.py:2051), Var(num_neg_value.2, arrayobj.py:2051)], incoming_blocks=[64, 80])
2024-07-15 06:11:42,272 DEBUG:on stmt: jump 42
2024-07-15 06:11:42,272 DEBUG:Fix SSA violator on var inferred
2024-07-15 06:11:42,272 DEBUG:==== SSA block rewrite pass on 0
2024-07-15 06:11:42,272 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5CA3AD0>
2024-07-15 06:11:42,272 DEBUG:on stmt: origsize = arg(0, name=origsize)
2024-07-15 06:11:42,272 DEBUG:on stmt: shape = arg(1, name=shape)
2024-07-15 06:11:42,272 DEBUG:on stmt: num_neg_value = const(int, 0)
2024-07-15 06:11:42,272 DEBUG:on stmt: known_size = const(int, 1)
2024-07-15 06:11:42,272 DEBUG:on stmt: $12load_global.2 = global(enumerate: <class 'enumerate'>)
2024-07-15 06:11:42,272 DEBUG:on stmt: $30call.5 = call $12load_global.2(shape, func=$12load_global.2, args=[Var(shape, arrayobj.py:2046)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,272 DEBUG:on stmt: $40get_iter.6 = getiter(value=$30call.5)
2024-07-15 06:11:42,272 DEBUG:on stmt: $phi42.0 = $40get_iter.6
2024-07-15 06:11:42,272 DEBUG:on stmt: jump 42
2024-07-15 06:11:42,272 DEBUG:==== SSA block rewrite pass on 42
2024-07-15 06:11:42,272 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5CA3AD0>
2024-07-15 06:11:42,272 DEBUG:on stmt: known_size.2 = phi(incoming_values=[Var(known_size, arrayobj.py:2048), Var(known_size.3, arrayobj.py:2054)], incoming_blocks=[0, 269])
2024-07-15 06:11:42,272 DEBUG:on stmt: num_neg_value.2 = phi(incoming_values=[Var(num_neg_value, arrayobj.py:2047), Var(num_neg_value.3, arrayobj.py:2051)], incoming_blocks=[0, 269])
2024-07-15 06:11:42,273 DEBUG:on stmt: $42for_iter.1 = iternext(value=$phi42.0)
2024-07-15 06:11:42,273 DEBUG:on stmt: $42for_iter.2 = pair_first(value=$42for_iter.1)
2024-07-15 06:11:42,273 DEBUG:on stmt: $42for_iter.3 = pair_second(value=$42for_iter.1)
2024-07-15 06:11:42,273 DEBUG:on stmt: $phi44.1 = $42for_iter.2
2024-07-15 06:11:42,273 DEBUG:on stmt: branch $42for_iter.3, 44, 92
2024-07-15 06:11:42,273 DEBUG:==== SSA block rewrite pass on 44
2024-07-15 06:11:42,273 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5CA3AD0>
2024-07-15 06:11:42,273 DEBUG:on stmt: $44unpack_sequence.4 = exhaust_iter(value=$phi44.1, count=2)
2024-07-15 06:11:42,273 DEBUG:on stmt: $44unpack_sequence.2 = static_getitem(value=$44unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>)
2024-07-15 06:11:42,273 DEBUG:on stmt: $44unpack_sequence.3 = static_getitem(value=$44unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>)
2024-07-15 06:11:42,273 DEBUG:on stmt: ax = $44unpack_sequence.2
2024-07-15 06:11:42,273 DEBUG:on stmt: s = $44unpack_sequence.3
2024-07-15 06:11:42,273 DEBUG:on stmt: $const54.6 = const(int, 0)
2024-07-15 06:11:42,273 DEBUG:on stmt: $56compare_op.7 = s < $const54.6
2024-07-15 06:11:42,273 DEBUG:on stmt: bool62 = global(bool: <class 'bool'>)
2024-07-15 06:11:42,273 DEBUG:on stmt: $62pred = call bool62($56compare_op.7, func=bool62, args=(Var($56compare_op.7, arrayobj.py:2050),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,273 DEBUG:on stmt: branch $62pred, 64, 80
2024-07-15 06:11:42,273 DEBUG:==== SSA block rewrite pass on 64
2024-07-15 06:11:42,273 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5CA3AD0>
2024-07-15 06:11:42,273 DEBUG:on stmt: $const66.2 = const(int, 1)
2024-07-15 06:11:42,273 DEBUG:on stmt: $binop_iadd68.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value.2, rhs=$const66.2, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:42,273 DEBUG:on stmt: num_neg_value.1 = $binop_iadd68.3
2024-07-15 06:11:42,274 DEBUG:on stmt: neg_ax = ax
2024-07-15 06:11:42,274 DEBUG:on stmt: jump 269
2024-07-15 06:11:42,274 DEBUG:==== SSA block rewrite pass on 80
2024-07-15 06:11:42,274 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5CA3AD0>
2024-07-15 06:11:42,274 DEBUG:on stmt: $binop_imul84.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size.2, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:42,274 DEBUG:on stmt: known_size.1 = $binop_imul84.3
2024-07-15 06:11:42,274 DEBUG:on stmt: jump 269
2024-07-15 06:11:42,274 DEBUG:==== SSA block rewrite pass on 92
2024-07-15 06:11:42,274 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5CA3AD0>
2024-07-15 06:11:42,274 DEBUG:on stmt: $const94.1 = const(int, 0)
2024-07-15 06:11:42,274 DEBUG:on stmt: $96compare_op.2 = num_neg_value.2 == $const94.1
2024-07-15 06:11:42,274 DEBUG:on stmt: bool102 = global(bool: <class 'bool'>)
2024-07-15 06:11:42,274 DEBUG:on stmt: $102pred = call bool102($96compare_op.2, func=bool102, args=(Var($96compare_op.2, arrayobj.py:2056),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,274 DEBUG:on stmt: branch $102pred, 104, 150
2024-07-15 06:11:42,274 DEBUG:==== SSA block rewrite pass on 104
2024-07-15 06:11:42,274 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5CA3AD0>
2024-07-15 06:11:42,274 DEBUG:on stmt: $108compare_op.2 = origsize != known_size.2
2024-07-15 06:11:42,274 DEBUG:on stmt: bool114 = global(bool: <class 'bool'>)
2024-07-15 06:11:42,274 DEBUG:on stmt: $114pred = call bool114($108compare_op.2, func=bool114, args=(Var($108compare_op.2, arrayobj.py:2057),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,274 DEBUG:on stmt: branch $114pred, 116, 146
2024-07-15 06:11:42,274 DEBUG:==== SSA block rewrite pass on 116
2024-07-15 06:11:42,275 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5CA3AD0>
2024-07-15 06:11:42,275 DEBUG:on stmt: $116load_global.0 = global(ValueError: <class 'ValueError'>)
2024-07-15 06:11:42,275 DEBUG:on stmt: $const128.2 = const(str, total size of new array must be unchanged)
2024-07-15 06:11:42,275 DEBUG:on stmt: $134call.3 = call $116load_global.0($const128.2, func=$116load_global.0, args=[Var($const128.2, arrayobj.py:2058)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,275 DEBUG:on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2024-07-15 06:11:42,275 DEBUG:==== SSA block rewrite pass on 146
2024-07-15 06:11:42,275 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5CA3AD0>
2024-07-15 06:11:42,275 DEBUG:on stmt: $const146.0 = const(NoneType, None)
2024-07-15 06:11:42,275 DEBUG:on stmt: $148return_value.1 = cast(value=$const146.0)
2024-07-15 06:11:42,275 DEBUG:on stmt: return $148return_value.1
2024-07-15 06:11:42,275 DEBUG:==== SSA block rewrite pass on 150
2024-07-15 06:11:42,275 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5CA3AD0>
2024-07-15 06:11:42,275 DEBUG:on stmt: $const152.1 = const(int, 1)
2024-07-15 06:11:42,275 DEBUG:on stmt: $154compare_op.2 = num_neg_value.2 == $const152.1
2024-07-15 06:11:42,275 DEBUG:on stmt: bool160 = global(bool: <class 'bool'>)
2024-07-15 06:11:42,275 DEBUG:on stmt: $160pred = call bool160($154compare_op.2, func=bool160, args=(Var($154compare_op.2, arrayobj.py:2060),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,275 DEBUG:on stmt: branch $160pred, 162, 268
2024-07-15 06:11:42,275 DEBUG:==== SSA block rewrite pass on 162
2024-07-15 06:11:42,275 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5CA3AD0>
2024-07-15 06:11:42,275 DEBUG:on stmt: $const164.1 = const(int, 0)
2024-07-15 06:11:42,275 DEBUG:on stmt: $166compare_op.2 = known_size.2 == $const164.1
2024-07-15 06:11:42,276 DEBUG:on stmt: bool172 = global(bool: <class 'bool'>)
2024-07-15 06:11:42,276 DEBUG:on stmt: $172pred = call bool172($166compare_op.2, func=bool172, args=(Var($166compare_op.2, arrayobj.py:2062),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,276 DEBUG:on stmt: branch $172pred, 174, 192
2024-07-15 06:11:42,276 DEBUG:==== SSA block rewrite pass on 174
2024-07-15 06:11:42,276 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5CA3AD0>
2024-07-15 06:11:42,276 DEBUG:on stmt: inferred = const(int, 0)
2024-07-15 06:11:42,276 DEBUG:first assign: inferred
2024-07-15 06:11:42,276 DEBUG:replaced with: inferred = const(int, 0)
2024-07-15 06:11:42,276 DEBUG:on stmt: $const180.2 = const(int, 0)
2024-07-15 06:11:42,276 DEBUG:on stmt: ok = origsize == $const180.2
2024-07-15 06:11:42,276 DEBUG:on stmt: jump 220
2024-07-15 06:11:42,276 DEBUG:==== SSA block rewrite pass on 192
2024-07-15 06:11:42,276 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5CA3AD0>
2024-07-15 06:11:42,276 DEBUG:on stmt: inferred = origsize // known_size.2
2024-07-15 06:11:42,276 DEBUG:replaced with: inferred.1 = origsize // known_size.2
2024-07-15 06:11:42,276 DEBUG:on stmt: $binop_mod206.5 = origsize % known_size.2
2024-07-15 06:11:42,276 DEBUG:on stmt: $const210.6 = const(int, 0)
2024-07-15 06:11:42,276 DEBUG:on stmt: ok = $binop_mod206.5 == $const210.6
2024-07-15 06:11:42,276 DEBUG:on stmt: jump 220
2024-07-15 06:11:42,276 DEBUG:==== SSA block rewrite pass on 220
2024-07-15 06:11:42,276 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5CA3AD0>
2024-07-15 06:11:42,276 DEBUG:on stmt: bool222 = global(bool: <class 'bool'>)
2024-07-15 06:11:42,277 DEBUG:on stmt: $222pred = call bool222(ok, func=bool222, args=(Var(ok, arrayobj.py:2064),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,277 DEBUG:on stmt: branch $222pred, 254, 224
2024-07-15 06:11:42,277 DEBUG:==== SSA block rewrite pass on 224
2024-07-15 06:11:42,277 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5CA3AD0>
2024-07-15 06:11:42,277 DEBUG:on stmt: $224load_global.0 = global(ValueError: <class 'ValueError'>)
2024-07-15 06:11:42,277 DEBUG:on stmt: $const236.2 = const(str, total size of new array must be unchanged)
2024-07-15 06:11:42,277 DEBUG:on stmt: $242call.3 = call $224load_global.0($const236.2, func=$224load_global.0, args=[Var($const236.2, arrayobj.py:2069)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,277 DEBUG:on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2024-07-15 06:11:42,277 DEBUG:==== SSA block rewrite pass on 254
2024-07-15 06:11:42,277 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5CA3AD0>
2024-07-15 06:11:42,277 DEBUG:on stmt: shape[neg_ax] = inferred
2024-07-15 06:11:42,277 DEBUG:on stmt: $const264.3 = const(NoneType, None)
2024-07-15 06:11:42,277 DEBUG:on stmt: $266return_value.4 = cast(value=$const264.3)
2024-07-15 06:11:42,277 DEBUG:on stmt: return $266return_value.4
2024-07-15 06:11:42,277 DEBUG:==== SSA block rewrite pass on 268
2024-07-15 06:11:42,277 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5CA3AD0>
2024-07-15 06:11:42,277 DEBUG:on stmt: $268load_global.0 = global(ValueError: <class 'ValueError'>)
2024-07-15 06:11:42,277 DEBUG:on stmt: $const280.2 = const(str, multiple negative shape values)
2024-07-15 06:11:42,277 DEBUG:on stmt: $286call.3 = call $268load_global.0($const280.2, func=$268load_global.0, args=[Var($const280.2, arrayobj.py:2073)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,277 DEBUG:on stmt: <static> raise <class 'ValueError'>('multiple negative shape values')
2024-07-15 06:11:42,277 DEBUG:==== SSA block rewrite pass on 269
2024-07-15 06:11:42,278 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5CA3AD0>
2024-07-15 06:11:42,278 DEBUG:on stmt: known_size.3 = phi(incoming_values=[Var(known_size.2, arrayobj.py:2054), Var(known_size.1, arrayobj.py:2054)], incoming_blocks=[64, 80])
2024-07-15 06:11:42,278 DEBUG:on stmt: num_neg_value.3 = phi(incoming_values=[Var(num_neg_value.1, arrayobj.py:2051), Var(num_neg_value.2, arrayobj.py:2051)], incoming_blocks=[64, 80])
2024-07-15 06:11:42,278 DEBUG:on stmt: jump 42
2024-07-15 06:11:42,278 DEBUG:Replaced assignments: defaultdict(<class 'list'>,
            {174: [<numba.core.ir.Assign object at 0x00000221B69EAE50>],
             192: [<numba.core.ir.Assign object at 0x00000221B5CDAD50>]})
2024-07-15 06:11:42,278 DEBUG:==== SSA block rewrite pass on 0
2024-07-15 06:11:42,278 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B682EBD0>
2024-07-15 06:11:42,278 DEBUG:on stmt: origsize = arg(0, name=origsize)
2024-07-15 06:11:42,278 DEBUG:on stmt: shape = arg(1, name=shape)
2024-07-15 06:11:42,278 DEBUG:on stmt: num_neg_value = const(int, 0)
2024-07-15 06:11:42,278 DEBUG:on stmt: known_size = const(int, 1)
2024-07-15 06:11:42,278 DEBUG:on stmt: $12load_global.2 = global(enumerate: <class 'enumerate'>)
2024-07-15 06:11:42,278 DEBUG:on stmt: $30call.5 = call $12load_global.2(shape, func=$12load_global.2, args=[Var(shape, arrayobj.py:2046)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,278 DEBUG:on stmt: $40get_iter.6 = getiter(value=$30call.5)
2024-07-15 06:11:42,278 DEBUG:on stmt: $phi42.0 = $40get_iter.6
2024-07-15 06:11:42,278 DEBUG:on stmt: jump 42
2024-07-15 06:11:42,278 DEBUG:==== SSA block rewrite pass on 42
2024-07-15 06:11:42,278 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B682EBD0>
2024-07-15 06:11:42,278 DEBUG:on stmt: known_size.2 = phi(incoming_values=[Var(known_size, arrayobj.py:2048), Var(known_size.3, arrayobj.py:2054)], incoming_blocks=[0, 269])
2024-07-15 06:11:42,278 DEBUG:on stmt: num_neg_value.2 = phi(incoming_values=[Var(num_neg_value, arrayobj.py:2047), Var(num_neg_value.3, arrayobj.py:2051)], incoming_blocks=[0, 269])
2024-07-15 06:11:42,281 DEBUG:on stmt: $42for_iter.1 = iternext(value=$phi42.0)
2024-07-15 06:11:42,281 DEBUG:on stmt: $42for_iter.2 = pair_first(value=$42for_iter.1)
2024-07-15 06:11:42,281 DEBUG:on stmt: $42for_iter.3 = pair_second(value=$42for_iter.1)
2024-07-15 06:11:42,286 DEBUG:on stmt: $phi44.1 = $42for_iter.2
2024-07-15 06:11:42,286 DEBUG:on stmt: branch $42for_iter.3, 44, 92
2024-07-15 06:11:42,286 DEBUG:==== SSA block rewrite pass on 44
2024-07-15 06:11:42,286 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B682EBD0>
2024-07-15 06:11:42,286 DEBUG:on stmt: $44unpack_sequence.4 = exhaust_iter(value=$phi44.1, count=2)
2024-07-15 06:11:42,286 DEBUG:on stmt: $44unpack_sequence.2 = static_getitem(value=$44unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>)
2024-07-15 06:11:42,286 DEBUG:on stmt: $44unpack_sequence.3 = static_getitem(value=$44unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>)
2024-07-15 06:11:42,286 DEBUG:on stmt: ax = $44unpack_sequence.2
2024-07-15 06:11:42,286 DEBUG:on stmt: s = $44unpack_sequence.3
2024-07-15 06:11:42,286 DEBUG:on stmt: $const54.6 = const(int, 0)
2024-07-15 06:11:42,286 DEBUG:on stmt: $56compare_op.7 = s < $const54.6
2024-07-15 06:11:42,286 DEBUG:on stmt: bool62 = global(bool: <class 'bool'>)
2024-07-15 06:11:42,286 DEBUG:on stmt: $62pred = call bool62($56compare_op.7, func=bool62, args=(Var($56compare_op.7, arrayobj.py:2050),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,286 DEBUG:on stmt: branch $62pred, 64, 80
2024-07-15 06:11:42,286 DEBUG:==== SSA block rewrite pass on 64
2024-07-15 06:11:42,286 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B682EBD0>
2024-07-15 06:11:42,286 DEBUG:on stmt: $const66.2 = const(int, 1)
2024-07-15 06:11:42,286 DEBUG:on stmt: $binop_iadd68.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value.2, rhs=$const66.2, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:42,286 DEBUG:on stmt: num_neg_value.1 = $binop_iadd68.3
2024-07-15 06:11:42,286 DEBUG:on stmt: neg_ax = ax
2024-07-15 06:11:42,286 DEBUG:on stmt: jump 269
2024-07-15 06:11:42,286 DEBUG:==== SSA block rewrite pass on 80
2024-07-15 06:11:42,286 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B682EBD0>
2024-07-15 06:11:42,287 DEBUG:on stmt: $binop_imul84.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size.2, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:42,287 DEBUG:on stmt: known_size.1 = $binop_imul84.3
2024-07-15 06:11:42,287 DEBUG:on stmt: jump 269
2024-07-15 06:11:42,287 DEBUG:==== SSA block rewrite pass on 92
2024-07-15 06:11:42,287 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B682EBD0>
2024-07-15 06:11:42,287 DEBUG:on stmt: $const94.1 = const(int, 0)
2024-07-15 06:11:42,287 DEBUG:on stmt: $96compare_op.2 = num_neg_value.2 == $const94.1
2024-07-15 06:11:42,287 DEBUG:on stmt: bool102 = global(bool: <class 'bool'>)
2024-07-15 06:11:42,287 DEBUG:on stmt: $102pred = call bool102($96compare_op.2, func=bool102, args=(Var($96compare_op.2, arrayobj.py:2056),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,287 DEBUG:on stmt: branch $102pred, 104, 150
2024-07-15 06:11:42,287 DEBUG:==== SSA block rewrite pass on 104
2024-07-15 06:11:42,287 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B682EBD0>
2024-07-15 06:11:42,287 DEBUG:on stmt: $108compare_op.2 = origsize != known_size.2
2024-07-15 06:11:42,287 DEBUG:on stmt: bool114 = global(bool: <class 'bool'>)
2024-07-15 06:11:42,287 DEBUG:on stmt: $114pred = call bool114($108compare_op.2, func=bool114, args=(Var($108compare_op.2, arrayobj.py:2057),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,287 DEBUG:on stmt: branch $114pred, 116, 146
2024-07-15 06:11:42,287 DEBUG:==== SSA block rewrite pass on 116
2024-07-15 06:11:42,287 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B682EBD0>
2024-07-15 06:11:42,287 DEBUG:on stmt: $116load_global.0 = global(ValueError: <class 'ValueError'>)
2024-07-15 06:11:42,287 DEBUG:on stmt: $const128.2 = const(str, total size of new array must be unchanged)
2024-07-15 06:11:42,287 DEBUG:on stmt: $134call.3 = call $116load_global.0($const128.2, func=$116load_global.0, args=[Var($const128.2, arrayobj.py:2058)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,288 DEBUG:on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2024-07-15 06:11:42,288 DEBUG:==== SSA block rewrite pass on 146
2024-07-15 06:11:42,288 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B682EBD0>
2024-07-15 06:11:42,288 DEBUG:on stmt: $const146.0 = const(NoneType, None)
2024-07-15 06:11:42,288 DEBUG:on stmt: $148return_value.1 = cast(value=$const146.0)
2024-07-15 06:11:42,288 DEBUG:on stmt: return $148return_value.1
2024-07-15 06:11:42,288 DEBUG:==== SSA block rewrite pass on 150
2024-07-15 06:11:42,288 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B682EBD0>
2024-07-15 06:11:42,288 DEBUG:on stmt: $const152.1 = const(int, 1)
2024-07-15 06:11:42,288 DEBUG:on stmt: $154compare_op.2 = num_neg_value.2 == $const152.1
2024-07-15 06:11:42,288 DEBUG:on stmt: bool160 = global(bool: <class 'bool'>)
2024-07-15 06:11:42,288 DEBUG:on stmt: $160pred = call bool160($154compare_op.2, func=bool160, args=(Var($154compare_op.2, arrayobj.py:2060),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,288 DEBUG:on stmt: branch $160pred, 162, 268
2024-07-15 06:11:42,288 DEBUG:==== SSA block rewrite pass on 162
2024-07-15 06:11:42,288 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B682EBD0>
2024-07-15 06:11:42,288 DEBUG:on stmt: $const164.1 = const(int, 0)
2024-07-15 06:11:42,288 DEBUG:on stmt: $166compare_op.2 = known_size.2 == $const164.1
2024-07-15 06:11:42,288 DEBUG:on stmt: bool172 = global(bool: <class 'bool'>)
2024-07-15 06:11:42,288 DEBUG:on stmt: $172pred = call bool172($166compare_op.2, func=bool172, args=(Var($166compare_op.2, arrayobj.py:2062),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,289 DEBUG:on stmt: branch $172pred, 174, 192
2024-07-15 06:11:42,289 DEBUG:==== SSA block rewrite pass on 174
2024-07-15 06:11:42,289 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B682EBD0>
2024-07-15 06:11:42,289 DEBUG:on stmt: inferred = const(int, 0)
2024-07-15 06:11:42,289 DEBUG:on stmt: $const180.2 = const(int, 0)
2024-07-15 06:11:42,289 DEBUG:on stmt: ok = origsize == $const180.2
2024-07-15 06:11:42,289 DEBUG:on stmt: jump 220
2024-07-15 06:11:42,289 DEBUG:==== SSA block rewrite pass on 192
2024-07-15 06:11:42,289 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B682EBD0>
2024-07-15 06:11:42,289 DEBUG:on stmt: inferred.1 = origsize // known_size.2
2024-07-15 06:11:42,289 DEBUG:on stmt: $binop_mod206.5 = origsize % known_size.2
2024-07-15 06:11:42,289 DEBUG:on stmt: $const210.6 = const(int, 0)
2024-07-15 06:11:42,289 DEBUG:on stmt: ok = $binop_mod206.5 == $const210.6
2024-07-15 06:11:42,289 DEBUG:on stmt: jump 220
2024-07-15 06:11:42,290 DEBUG:==== SSA block rewrite pass on 220
2024-07-15 06:11:42,290 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B682EBD0>
2024-07-15 06:11:42,290 DEBUG:on stmt: bool222 = global(bool: <class 'bool'>)
2024-07-15 06:11:42,290 DEBUG:on stmt: $222pred = call bool222(ok, func=bool222, args=(Var(ok, arrayobj.py:2064),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,290 DEBUG:on stmt: branch $222pred, 254, 224
2024-07-15 06:11:42,290 DEBUG:==== SSA block rewrite pass on 224
2024-07-15 06:11:42,290 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B682EBD0>
2024-07-15 06:11:42,290 DEBUG:on stmt: $224load_global.0 = global(ValueError: <class 'ValueError'>)
2024-07-15 06:11:42,290 DEBUG:on stmt: $const236.2 = const(str, total size of new array must be unchanged)
2024-07-15 06:11:42,290 DEBUG:on stmt: $242call.3 = call $224load_global.0($const236.2, func=$224load_global.0, args=[Var($const236.2, arrayobj.py:2069)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,290 DEBUG:on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2024-07-15 06:11:42,290 DEBUG:==== SSA block rewrite pass on 254
2024-07-15 06:11:42,290 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B682EBD0>
2024-07-15 06:11:42,290 DEBUG:on stmt: shape[neg_ax] = inferred
2024-07-15 06:11:42,290 DEBUG:find_def var='inferred' stmt=shape[neg_ax] = inferred
2024-07-15 06:11:42,290 DEBUG:find_def_from_top label 254
2024-07-15 06:11:42,290 DEBUG:idom 220 from label 254
2024-07-15 06:11:42,290 DEBUG:find_def_from_bottom label 220
2024-07-15 06:11:42,290 DEBUG:find_def_from_top label 220
2024-07-15 06:11:42,290 DEBUG:insert phi node inferred.2 = phi(incoming_values=[], incoming_blocks=[]) at 220
2024-07-15 06:11:42,291 DEBUG:find_def_from_bottom label 192
2024-07-15 06:11:42,291 DEBUG:incoming_def inferred.1 = origsize // known_size.2
2024-07-15 06:11:42,291 DEBUG:find_def_from_bottom label 174
2024-07-15 06:11:42,291 DEBUG:incoming_def inferred = const(int, 0)
2024-07-15 06:11:42,291 DEBUG:replaced with: shape[neg_ax] = inferred.2
2024-07-15 06:11:42,291 DEBUG:on stmt: $const264.3 = const(NoneType, None)
2024-07-15 06:11:42,291 DEBUG:on stmt: $266return_value.4 = cast(value=$const264.3)
2024-07-15 06:11:42,291 DEBUG:on stmt: return $266return_value.4
2024-07-15 06:11:42,291 DEBUG:==== SSA block rewrite pass on 268
2024-07-15 06:11:42,291 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B682EBD0>
2024-07-15 06:11:42,291 DEBUG:on stmt: $268load_global.0 = global(ValueError: <class 'ValueError'>)
2024-07-15 06:11:42,291 DEBUG:on stmt: $const280.2 = const(str, multiple negative shape values)
2024-07-15 06:11:42,291 DEBUG:on stmt: $286call.3 = call $268load_global.0($const280.2, func=$268load_global.0, args=[Var($const280.2, arrayobj.py:2073)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,291 DEBUG:on stmt: <static> raise <class 'ValueError'>('multiple negative shape values')
2024-07-15 06:11:42,292 DEBUG:==== SSA block rewrite pass on 269
2024-07-15 06:11:42,292 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B682EBD0>
2024-07-15 06:11:42,292 DEBUG:on stmt: known_size.3 = phi(incoming_values=[Var(known_size.2, arrayobj.py:2054), Var(known_size.1, arrayobj.py:2054)], incoming_blocks=[64, 80])
2024-07-15 06:11:42,292 DEBUG:on stmt: num_neg_value.3 = phi(incoming_values=[Var(num_neg_value.1, arrayobj.py:2051), Var(num_neg_value.2, arrayobj.py:2051)], incoming_blocks=[64, 80])
2024-07-15 06:11:42,292 DEBUG:on stmt: jump 42
2024-07-15 06:11:42,292 DEBUG:Fix SSA violator on var ok
2024-07-15 06:11:42,292 DEBUG:==== SSA block rewrite pass on 0
2024-07-15 06:11:42,292 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6958210>
2024-07-15 06:11:42,292 DEBUG:on stmt: origsize = arg(0, name=origsize)
2024-07-15 06:11:42,292 DEBUG:on stmt: shape = arg(1, name=shape)
2024-07-15 06:11:42,292 DEBUG:on stmt: num_neg_value = const(int, 0)
2024-07-15 06:11:42,292 DEBUG:on stmt: known_size = const(int, 1)
2024-07-15 06:11:42,293 DEBUG:on stmt: $12load_global.2 = global(enumerate: <class 'enumerate'>)
2024-07-15 06:11:42,293 DEBUG:on stmt: $30call.5 = call $12load_global.2(shape, func=$12load_global.2, args=[Var(shape, arrayobj.py:2046)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,293 DEBUG:on stmt: $40get_iter.6 = getiter(value=$30call.5)
2024-07-15 06:11:42,293 DEBUG:on stmt: $phi42.0 = $40get_iter.6
2024-07-15 06:11:42,293 DEBUG:on stmt: jump 42
2024-07-15 06:11:42,293 DEBUG:==== SSA block rewrite pass on 42
2024-07-15 06:11:42,293 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6958210>
2024-07-15 06:11:42,293 DEBUG:on stmt: known_size.2 = phi(incoming_values=[Var(known_size, arrayobj.py:2048), Var(known_size.3, arrayobj.py:2054)], incoming_blocks=[0, 269])
2024-07-15 06:11:42,293 DEBUG:on stmt: num_neg_value.2 = phi(incoming_values=[Var(num_neg_value, arrayobj.py:2047), Var(num_neg_value.3, arrayobj.py:2051)], incoming_blocks=[0, 269])
2024-07-15 06:11:42,293 DEBUG:on stmt: $42for_iter.1 = iternext(value=$phi42.0)
2024-07-15 06:11:42,293 DEBUG:on stmt: $42for_iter.2 = pair_first(value=$42for_iter.1)
2024-07-15 06:11:42,293 DEBUG:on stmt: $42for_iter.3 = pair_second(value=$42for_iter.1)
2024-07-15 06:11:42,293 DEBUG:on stmt: $phi44.1 = $42for_iter.2
2024-07-15 06:11:42,293 DEBUG:on stmt: branch $42for_iter.3, 44, 92
2024-07-15 06:11:42,293 DEBUG:==== SSA block rewrite pass on 44
2024-07-15 06:11:42,293 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6958210>
2024-07-15 06:11:42,293 DEBUG:on stmt: $44unpack_sequence.4 = exhaust_iter(value=$phi44.1, count=2)
2024-07-15 06:11:42,293 DEBUG:on stmt: $44unpack_sequence.2 = static_getitem(value=$44unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>)
2024-07-15 06:11:42,293 DEBUG:on stmt: $44unpack_sequence.3 = static_getitem(value=$44unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>)
2024-07-15 06:11:42,293 DEBUG:on stmt: ax = $44unpack_sequence.2
2024-07-15 06:11:42,293 DEBUG:on stmt: s = $44unpack_sequence.3
2024-07-15 06:11:42,293 DEBUG:on stmt: $const54.6 = const(int, 0)
2024-07-15 06:11:42,294 DEBUG:on stmt: $56compare_op.7 = s < $const54.6
2024-07-15 06:11:42,294 DEBUG:on stmt: bool62 = global(bool: <class 'bool'>)
2024-07-15 06:11:42,294 DEBUG:on stmt: $62pred = call bool62($56compare_op.7, func=bool62, args=(Var($56compare_op.7, arrayobj.py:2050),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,294 DEBUG:on stmt: branch $62pred, 64, 80
2024-07-15 06:11:42,294 DEBUG:==== SSA block rewrite pass on 64
2024-07-15 06:11:42,294 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6958210>
2024-07-15 06:11:42,294 DEBUG:on stmt: $const66.2 = const(int, 1)
2024-07-15 06:11:42,294 DEBUG:on stmt: $binop_iadd68.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value.2, rhs=$const66.2, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:42,294 DEBUG:on stmt: num_neg_value.1 = $binop_iadd68.3
2024-07-15 06:11:42,294 DEBUG:on stmt: neg_ax = ax
2024-07-15 06:11:42,294 DEBUG:on stmt: jump 269
2024-07-15 06:11:42,294 DEBUG:==== SSA block rewrite pass on 80
2024-07-15 06:11:42,294 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6958210>
2024-07-15 06:11:42,294 DEBUG:on stmt: $binop_imul84.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size.2, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:42,294 DEBUG:on stmt: known_size.1 = $binop_imul84.3
2024-07-15 06:11:42,294 DEBUG:on stmt: jump 269
2024-07-15 06:11:42,294 DEBUG:==== SSA block rewrite pass on 92
2024-07-15 06:11:42,294 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6958210>
2024-07-15 06:11:42,294 DEBUG:on stmt: $const94.1 = const(int, 0)
2024-07-15 06:11:42,294 DEBUG:on stmt: $96compare_op.2 = num_neg_value.2 == $const94.1
2024-07-15 06:11:42,294 DEBUG:on stmt: bool102 = global(bool: <class 'bool'>)
2024-07-15 06:11:42,295 DEBUG:on stmt: $102pred = call bool102($96compare_op.2, func=bool102, args=(Var($96compare_op.2, arrayobj.py:2056),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,295 DEBUG:on stmt: branch $102pred, 104, 150
2024-07-15 06:11:42,295 DEBUG:==== SSA block rewrite pass on 104
2024-07-15 06:11:42,295 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6958210>
2024-07-15 06:11:42,295 DEBUG:on stmt: $108compare_op.2 = origsize != known_size.2
2024-07-15 06:11:42,295 DEBUG:on stmt: bool114 = global(bool: <class 'bool'>)
2024-07-15 06:11:42,295 DEBUG:on stmt: $114pred = call bool114($108compare_op.2, func=bool114, args=(Var($108compare_op.2, arrayobj.py:2057),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,295 DEBUG:on stmt: branch $114pred, 116, 146
2024-07-15 06:11:42,295 DEBUG:==== SSA block rewrite pass on 116
2024-07-15 06:11:42,295 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6958210>
2024-07-15 06:11:42,295 DEBUG:on stmt: $116load_global.0 = global(ValueError: <class 'ValueError'>)
2024-07-15 06:11:42,295 DEBUG:on stmt: $const128.2 = const(str, total size of new array must be unchanged)
2024-07-15 06:11:42,295 DEBUG:on stmt: $134call.3 = call $116load_global.0($const128.2, func=$116load_global.0, args=[Var($const128.2, arrayobj.py:2058)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,295 DEBUG:on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2024-07-15 06:11:42,295 DEBUG:==== SSA block rewrite pass on 146
2024-07-15 06:11:42,295 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6958210>
2024-07-15 06:11:42,296 DEBUG:on stmt: $const146.0 = const(NoneType, None)
2024-07-15 06:11:42,296 DEBUG:on stmt: $148return_value.1 = cast(value=$const146.0)
2024-07-15 06:11:42,296 DEBUG:on stmt: return $148return_value.1
2024-07-15 06:11:42,296 DEBUG:==== SSA block rewrite pass on 150
2024-07-15 06:11:42,296 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6958210>
2024-07-15 06:11:42,296 DEBUG:on stmt: $const152.1 = const(int, 1)
2024-07-15 06:11:42,296 DEBUG:on stmt: $154compare_op.2 = num_neg_value.2 == $const152.1
2024-07-15 06:11:42,296 DEBUG:on stmt: bool160 = global(bool: <class 'bool'>)
2024-07-15 06:11:42,296 DEBUG:on stmt: $160pred = call bool160($154compare_op.2, func=bool160, args=(Var($154compare_op.2, arrayobj.py:2060),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,296 DEBUG:on stmt: branch $160pred, 162, 268
2024-07-15 06:11:42,296 DEBUG:==== SSA block rewrite pass on 162
2024-07-15 06:11:42,296 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6958210>
2024-07-15 06:11:42,296 DEBUG:on stmt: $const164.1 = const(int, 0)
2024-07-15 06:11:42,296 DEBUG:on stmt: $166compare_op.2 = known_size.2 == $const164.1
2024-07-15 06:11:42,296 DEBUG:on stmt: bool172 = global(bool: <class 'bool'>)
2024-07-15 06:11:42,296 DEBUG:on stmt: $172pred = call bool172($166compare_op.2, func=bool172, args=(Var($166compare_op.2, arrayobj.py:2062),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,296 DEBUG:on stmt: branch $172pred, 174, 192
2024-07-15 06:11:42,296 DEBUG:==== SSA block rewrite pass on 174
2024-07-15 06:11:42,296 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6958210>
2024-07-15 06:11:42,296 DEBUG:on stmt: inferred = const(int, 0)
2024-07-15 06:11:42,297 DEBUG:on stmt: $const180.2 = const(int, 0)
2024-07-15 06:11:42,297 DEBUG:on stmt: ok = origsize == $const180.2
2024-07-15 06:11:42,297 DEBUG:first assign: ok
2024-07-15 06:11:42,297 DEBUG:replaced with: ok = origsize == $const180.2
2024-07-15 06:11:42,297 DEBUG:on stmt: jump 220
2024-07-15 06:11:42,297 DEBUG:==== SSA block rewrite pass on 192
2024-07-15 06:11:42,297 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6958210>
2024-07-15 06:11:42,297 DEBUG:on stmt: inferred.1 = origsize // known_size.2
2024-07-15 06:11:42,297 DEBUG:on stmt: $binop_mod206.5 = origsize % known_size.2
2024-07-15 06:11:42,297 DEBUG:on stmt: $const210.6 = const(int, 0)
2024-07-15 06:11:42,297 DEBUG:on stmt: ok = $binop_mod206.5 == $const210.6
2024-07-15 06:11:42,297 DEBUG:replaced with: ok.1 = $binop_mod206.5 == $const210.6
2024-07-15 06:11:42,297 DEBUG:on stmt: jump 220
2024-07-15 06:11:42,297 DEBUG:==== SSA block rewrite pass on 220
2024-07-15 06:11:42,297 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6958210>
2024-07-15 06:11:42,297 DEBUG:on stmt: inferred.2 = phi(incoming_values=[Var(inferred.1, arrayobj.py:2066), Var(inferred, arrayobj.py:2063)], incoming_blocks=[192, 174])
2024-07-15 06:11:42,297 DEBUG:on stmt: bool222 = global(bool: <class 'bool'>)
2024-07-15 06:11:42,297 DEBUG:on stmt: $222pred = call bool222(ok, func=bool222, args=(Var(ok, arrayobj.py:2064),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,297 DEBUG:on stmt: branch $222pred, 254, 224
2024-07-15 06:11:42,297 DEBUG:==== SSA block rewrite pass on 224
2024-07-15 06:11:42,298 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6958210>
2024-07-15 06:11:42,298 DEBUG:on stmt: $224load_global.0 = global(ValueError: <class 'ValueError'>)
2024-07-15 06:11:42,298 DEBUG:on stmt: $const236.2 = const(str, total size of new array must be unchanged)
2024-07-15 06:11:42,298 DEBUG:on stmt: $242call.3 = call $224load_global.0($const236.2, func=$224load_global.0, args=[Var($const236.2, arrayobj.py:2069)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,298 DEBUG:on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2024-07-15 06:11:42,298 DEBUG:==== SSA block rewrite pass on 254
2024-07-15 06:11:42,298 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6958210>
2024-07-15 06:11:42,298 DEBUG:on stmt: shape[neg_ax] = inferred.2
2024-07-15 06:11:42,298 DEBUG:on stmt: $const264.3 = const(NoneType, None)
2024-07-15 06:11:42,298 DEBUG:on stmt: $266return_value.4 = cast(value=$const264.3)
2024-07-15 06:11:42,298 DEBUG:on stmt: return $266return_value.4
2024-07-15 06:11:42,298 DEBUG:==== SSA block rewrite pass on 268
2024-07-15 06:11:42,298 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6958210>
2024-07-15 06:11:42,298 DEBUG:on stmt: $268load_global.0 = global(ValueError: <class 'ValueError'>)
2024-07-15 06:11:42,298 DEBUG:on stmt: $const280.2 = const(str, multiple negative shape values)
2024-07-15 06:11:42,298 DEBUG:on stmt: $286call.3 = call $268load_global.0($const280.2, func=$268load_global.0, args=[Var($const280.2, arrayobj.py:2073)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,298 DEBUG:on stmt: <static> raise <class 'ValueError'>('multiple negative shape values')
2024-07-15 06:11:42,298 DEBUG:==== SSA block rewrite pass on 269
2024-07-15 06:11:42,298 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6958210>
2024-07-15 06:11:42,298 DEBUG:on stmt: known_size.3 = phi(incoming_values=[Var(known_size.2, arrayobj.py:2054), Var(known_size.1, arrayobj.py:2054)], incoming_blocks=[64, 80])
2024-07-15 06:11:42,299 DEBUG:on stmt: num_neg_value.3 = phi(incoming_values=[Var(num_neg_value.1, arrayobj.py:2051), Var(num_neg_value.2, arrayobj.py:2051)], incoming_blocks=[64, 80])
2024-07-15 06:11:42,299 DEBUG:on stmt: jump 42
2024-07-15 06:11:42,299 DEBUG:Replaced assignments: defaultdict(<class 'list'>,
            {174: [<numba.core.ir.Assign object at 0x00000221B5CDAC90>],
             192: [<numba.core.ir.Assign object at 0x00000221B5CD8090>]})
2024-07-15 06:11:42,299 DEBUG:==== SSA block rewrite pass on 0
2024-07-15 06:11:42,299 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B682CD90>
2024-07-15 06:11:42,299 DEBUG:on stmt: origsize = arg(0, name=origsize)
2024-07-15 06:11:42,299 DEBUG:on stmt: shape = arg(1, name=shape)
2024-07-15 06:11:42,299 DEBUG:on stmt: num_neg_value = const(int, 0)
2024-07-15 06:11:42,299 DEBUG:on stmt: known_size = const(int, 1)
2024-07-15 06:11:42,299 DEBUG:on stmt: $12load_global.2 = global(enumerate: <class 'enumerate'>)
2024-07-15 06:11:42,299 DEBUG:on stmt: $30call.5 = call $12load_global.2(shape, func=$12load_global.2, args=[Var(shape, arrayobj.py:2046)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,299 DEBUG:on stmt: $40get_iter.6 = getiter(value=$30call.5)
2024-07-15 06:11:42,299 DEBUG:on stmt: $phi42.0 = $40get_iter.6
2024-07-15 06:11:42,299 DEBUG:on stmt: jump 42
2024-07-15 06:11:42,299 DEBUG:==== SSA block rewrite pass on 42
2024-07-15 06:11:42,300 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B682CD90>
2024-07-15 06:11:42,300 DEBUG:on stmt: known_size.2 = phi(incoming_values=[Var(known_size, arrayobj.py:2048), Var(known_size.3, arrayobj.py:2054)], incoming_blocks=[0, 269])
2024-07-15 06:11:42,300 DEBUG:on stmt: num_neg_value.2 = phi(incoming_values=[Var(num_neg_value, arrayobj.py:2047), Var(num_neg_value.3, arrayobj.py:2051)], incoming_blocks=[0, 269])
2024-07-15 06:11:42,300 DEBUG:on stmt: $42for_iter.1 = iternext(value=$phi42.0)
2024-07-15 06:11:42,300 DEBUG:on stmt: $42for_iter.2 = pair_first(value=$42for_iter.1)
2024-07-15 06:11:42,300 DEBUG:on stmt: $42for_iter.3 = pair_second(value=$42for_iter.1)
2024-07-15 06:11:42,300 DEBUG:on stmt: $phi44.1 = $42for_iter.2
2024-07-15 06:11:42,300 DEBUG:on stmt: branch $42for_iter.3, 44, 92
2024-07-15 06:11:42,300 DEBUG:==== SSA block rewrite pass on 44
2024-07-15 06:11:42,300 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B682CD90>
2024-07-15 06:11:42,300 DEBUG:on stmt: $44unpack_sequence.4 = exhaust_iter(value=$phi44.1, count=2)
2024-07-15 06:11:42,300 DEBUG:on stmt: $44unpack_sequence.2 = static_getitem(value=$44unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>)
2024-07-15 06:11:42,300 DEBUG:on stmt: $44unpack_sequence.3 = static_getitem(value=$44unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>)
2024-07-15 06:11:42,300 DEBUG:on stmt: ax = $44unpack_sequence.2
2024-07-15 06:11:42,300 DEBUG:on stmt: s = $44unpack_sequence.3
2024-07-15 06:11:42,300 DEBUG:on stmt: $const54.6 = const(int, 0)
2024-07-15 06:11:42,300 DEBUG:on stmt: $56compare_op.7 = s < $const54.6
2024-07-15 06:11:42,300 DEBUG:on stmt: bool62 = global(bool: <class 'bool'>)
2024-07-15 06:11:42,300 DEBUG:on stmt: $62pred = call bool62($56compare_op.7, func=bool62, args=(Var($56compare_op.7, arrayobj.py:2050),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,300 DEBUG:on stmt: branch $62pred, 64, 80
2024-07-15 06:11:42,301 DEBUG:==== SSA block rewrite pass on 64
2024-07-15 06:11:42,301 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B682CD90>
2024-07-15 06:11:42,301 DEBUG:on stmt: $const66.2 = const(int, 1)
2024-07-15 06:11:42,301 DEBUG:on stmt: $binop_iadd68.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value.2, rhs=$const66.2, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:42,301 DEBUG:on stmt: num_neg_value.1 = $binop_iadd68.3
2024-07-15 06:11:42,301 DEBUG:on stmt: neg_ax = ax
2024-07-15 06:11:42,301 DEBUG:on stmt: jump 269
2024-07-15 06:11:42,301 DEBUG:==== SSA block rewrite pass on 80
2024-07-15 06:11:42,301 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B682CD90>
2024-07-15 06:11:42,301 DEBUG:on stmt: $binop_imul84.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size.2, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:42,301 DEBUG:on stmt: known_size.1 = $binop_imul84.3
2024-07-15 06:11:42,301 DEBUG:on stmt: jump 269
2024-07-15 06:11:42,301 DEBUG:==== SSA block rewrite pass on 92
2024-07-15 06:11:42,301 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B682CD90>
2024-07-15 06:11:42,301 DEBUG:on stmt: $const94.1 = const(int, 0)
2024-07-15 06:11:42,301 DEBUG:on stmt: $96compare_op.2 = num_neg_value.2 == $const94.1
2024-07-15 06:11:42,301 DEBUG:on stmt: bool102 = global(bool: <class 'bool'>)
2024-07-15 06:11:42,301 DEBUG:on stmt: $102pred = call bool102($96compare_op.2, func=bool102, args=(Var($96compare_op.2, arrayobj.py:2056),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,301 DEBUG:on stmt: branch $102pred, 104, 150
2024-07-15 06:11:42,301 DEBUG:==== SSA block rewrite pass on 104
2024-07-15 06:11:42,301 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B682CD90>
2024-07-15 06:11:42,302 DEBUG:on stmt: $108compare_op.2 = origsize != known_size.2
2024-07-15 06:11:42,302 DEBUG:on stmt: bool114 = global(bool: <class 'bool'>)
2024-07-15 06:11:42,302 DEBUG:on stmt: $114pred = call bool114($108compare_op.2, func=bool114, args=(Var($108compare_op.2, arrayobj.py:2057),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,302 DEBUG:on stmt: branch $114pred, 116, 146
2024-07-15 06:11:42,302 DEBUG:==== SSA block rewrite pass on 116
2024-07-15 06:11:42,302 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B682CD90>
2024-07-15 06:11:42,302 DEBUG:on stmt: $116load_global.0 = global(ValueError: <class 'ValueError'>)
2024-07-15 06:11:42,302 DEBUG:on stmt: $const128.2 = const(str, total size of new array must be unchanged)
2024-07-15 06:11:42,302 DEBUG:on stmt: $134call.3 = call $116load_global.0($const128.2, func=$116load_global.0, args=[Var($const128.2, arrayobj.py:2058)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,302 DEBUG:on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2024-07-15 06:11:42,302 DEBUG:==== SSA block rewrite pass on 146
2024-07-15 06:11:42,302 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B682CD90>
2024-07-15 06:11:42,302 DEBUG:on stmt: $const146.0 = const(NoneType, None)
2024-07-15 06:11:42,302 DEBUG:on stmt: $148return_value.1 = cast(value=$const146.0)
2024-07-15 06:11:42,302 DEBUG:on stmt: return $148return_value.1
2024-07-15 06:11:42,302 DEBUG:==== SSA block rewrite pass on 150
2024-07-15 06:11:42,302 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B682CD90>
2024-07-15 06:11:42,302 DEBUG:on stmt: $const152.1 = const(int, 1)
2024-07-15 06:11:42,302 DEBUG:on stmt: $154compare_op.2 = num_neg_value.2 == $const152.1
2024-07-15 06:11:42,303 DEBUG:on stmt: bool160 = global(bool: <class 'bool'>)
2024-07-15 06:11:42,303 DEBUG:on stmt: $160pred = call bool160($154compare_op.2, func=bool160, args=(Var($154compare_op.2, arrayobj.py:2060),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,303 DEBUG:on stmt: branch $160pred, 162, 268
2024-07-15 06:11:42,303 DEBUG:==== SSA block rewrite pass on 162
2024-07-15 06:11:42,303 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B682CD90>
2024-07-15 06:11:42,303 DEBUG:on stmt: $const164.1 = const(int, 0)
2024-07-15 06:11:42,303 DEBUG:on stmt: $166compare_op.2 = known_size.2 == $const164.1
2024-07-15 06:11:42,303 DEBUG:on stmt: bool172 = global(bool: <class 'bool'>)
2024-07-15 06:11:42,303 DEBUG:on stmt: $172pred = call bool172($166compare_op.2, func=bool172, args=(Var($166compare_op.2, arrayobj.py:2062),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,303 DEBUG:on stmt: branch $172pred, 174, 192
2024-07-15 06:11:42,303 DEBUG:==== SSA block rewrite pass on 174
2024-07-15 06:11:42,303 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B682CD90>
2024-07-15 06:11:42,303 DEBUG:on stmt: inferred = const(int, 0)
2024-07-15 06:11:42,303 DEBUG:on stmt: $const180.2 = const(int, 0)
2024-07-15 06:11:42,303 DEBUG:on stmt: ok = origsize == $const180.2
2024-07-15 06:11:42,303 DEBUG:on stmt: jump 220
2024-07-15 06:11:42,303 DEBUG:==== SSA block rewrite pass on 192
2024-07-15 06:11:42,303 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B682CD90>
2024-07-15 06:11:42,303 DEBUG:on stmt: inferred.1 = origsize // known_size.2
2024-07-15 06:11:42,303 DEBUG:on stmt: $binop_mod206.5 = origsize % known_size.2
2024-07-15 06:11:42,303 DEBUG:on stmt: $const210.6 = const(int, 0)
2024-07-15 06:11:42,303 DEBUG:on stmt: ok.1 = $binop_mod206.5 == $const210.6
2024-07-15 06:11:42,304 DEBUG:on stmt: jump 220
2024-07-15 06:11:42,304 DEBUG:==== SSA block rewrite pass on 220
2024-07-15 06:11:42,304 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B682CD90>
2024-07-15 06:11:42,304 DEBUG:on stmt: inferred.2 = phi(incoming_values=[Var(inferred.1, arrayobj.py:2066), Var(inferred, arrayobj.py:2063)], incoming_blocks=[192, 174])
2024-07-15 06:11:42,304 DEBUG:on stmt: bool222 = global(bool: <class 'bool'>)
2024-07-15 06:11:42,304 DEBUG:on stmt: $222pred = call bool222(ok, func=bool222, args=(Var(ok, arrayobj.py:2064),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,304 DEBUG:find_def var='ok' stmt=$222pred = call bool222(ok, func=bool222, args=(Var(ok, arrayobj.py:2064),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,304 DEBUG:find_def_from_top label 220
2024-07-15 06:11:42,304 DEBUG:insert phi node ok.2 = phi(incoming_values=[], incoming_blocks=[]) at 220
2024-07-15 06:11:42,304 DEBUG:find_def_from_bottom label 192
2024-07-15 06:11:42,304 DEBUG:incoming_def ok.1 = $binop_mod206.5 == $const210.6
2024-07-15 06:11:42,304 DEBUG:find_def_from_bottom label 174
2024-07-15 06:11:42,304 DEBUG:incoming_def ok = origsize == $const180.2
2024-07-15 06:11:42,304 DEBUG:replaced with: $222pred = call bool222(ok.2, func=bool222, args=(Var(ok.2, arrayobj.py:2068),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,304 DEBUG:on stmt: branch $222pred, 254, 224
2024-07-15 06:11:42,304 DEBUG:==== SSA block rewrite pass on 224
2024-07-15 06:11:42,304 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B682CD90>
2024-07-15 06:11:42,304 DEBUG:on stmt: $224load_global.0 = global(ValueError: <class 'ValueError'>)
2024-07-15 06:11:42,304 DEBUG:on stmt: $const236.2 = const(str, total size of new array must be unchanged)
2024-07-15 06:11:42,304 DEBUG:on stmt: $242call.3 = call $224load_global.0($const236.2, func=$224load_global.0, args=[Var($const236.2, arrayobj.py:2069)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,304 DEBUG:on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2024-07-15 06:11:42,304 DEBUG:==== SSA block rewrite pass on 254
2024-07-15 06:11:42,304 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B682CD90>
2024-07-15 06:11:42,304 DEBUG:on stmt: shape[neg_ax] = inferred.2
2024-07-15 06:11:42,305 DEBUG:on stmt: $const264.3 = const(NoneType, None)
2024-07-15 06:11:42,305 DEBUG:on stmt: $266return_value.4 = cast(value=$const264.3)
2024-07-15 06:11:42,305 DEBUG:on stmt: return $266return_value.4
2024-07-15 06:11:42,305 DEBUG:==== SSA block rewrite pass on 268
2024-07-15 06:11:42,305 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B682CD90>
2024-07-15 06:11:42,305 DEBUG:on stmt: $268load_global.0 = global(ValueError: <class 'ValueError'>)
2024-07-15 06:11:42,305 DEBUG:on stmt: $const280.2 = const(str, multiple negative shape values)
2024-07-15 06:11:42,305 DEBUG:on stmt: $286call.3 = call $268load_global.0($const280.2, func=$268load_global.0, args=[Var($const280.2, arrayobj.py:2073)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,305 DEBUG:on stmt: <static> raise <class 'ValueError'>('multiple negative shape values')
2024-07-15 06:11:42,305 DEBUG:==== SSA block rewrite pass on 269
2024-07-15 06:11:42,305 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B682CD90>
2024-07-15 06:11:42,305 DEBUG:on stmt: known_size.3 = phi(incoming_values=[Var(known_size.2, arrayobj.py:2054), Var(known_size.1, arrayobj.py:2054)], incoming_blocks=[64, 80])
2024-07-15 06:11:42,305 DEBUG:on stmt: num_neg_value.3 = phi(incoming_values=[Var(num_neg_value.1, arrayobj.py:2051), Var(num_neg_value.2, arrayobj.py:2051)], incoming_blocks=[64, 80])
2024-07-15 06:11:42,305 DEBUG:on stmt: jump 42
2024-07-15 06:11:42,305 DEBUG:Fix SSA violator on var neg_ax
2024-07-15 06:11:42,305 DEBUG:==== SSA block rewrite pass on 0
2024-07-15 06:11:42,306 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B69E81D0>
2024-07-15 06:11:42,306 DEBUG:on stmt: origsize = arg(0, name=origsize)
2024-07-15 06:11:42,306 DEBUG:on stmt: shape = arg(1, name=shape)
2024-07-15 06:11:42,306 DEBUG:on stmt: num_neg_value = const(int, 0)
2024-07-15 06:11:42,306 DEBUG:on stmt: known_size = const(int, 1)
2024-07-15 06:11:42,306 DEBUG:on stmt: $12load_global.2 = global(enumerate: <class 'enumerate'>)
2024-07-15 06:11:42,306 DEBUG:on stmt: $30call.5 = call $12load_global.2(shape, func=$12load_global.2, args=[Var(shape, arrayobj.py:2046)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,306 DEBUG:on stmt: $40get_iter.6 = getiter(value=$30call.5)
2024-07-15 06:11:42,306 DEBUG:on stmt: $phi42.0 = $40get_iter.6
2024-07-15 06:11:42,306 DEBUG:on stmt: jump 42
2024-07-15 06:11:42,306 DEBUG:==== SSA block rewrite pass on 42
2024-07-15 06:11:42,306 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B69E81D0>
2024-07-15 06:11:42,306 DEBUG:on stmt: known_size.2 = phi(incoming_values=[Var(known_size, arrayobj.py:2048), Var(known_size.3, arrayobj.py:2054)], incoming_blocks=[0, 269])
2024-07-15 06:11:42,306 DEBUG:on stmt: num_neg_value.2 = phi(incoming_values=[Var(num_neg_value, arrayobj.py:2047), Var(num_neg_value.3, arrayobj.py:2051)], incoming_blocks=[0, 269])
2024-07-15 06:11:42,306 DEBUG:on stmt: $42for_iter.1 = iternext(value=$phi42.0)
2024-07-15 06:11:42,306 DEBUG:on stmt: $42for_iter.2 = pair_first(value=$42for_iter.1)
2024-07-15 06:11:42,306 DEBUG:on stmt: $42for_iter.3 = pair_second(value=$42for_iter.1)
2024-07-15 06:11:42,306 DEBUG:on stmt: $phi44.1 = $42for_iter.2
2024-07-15 06:11:42,306 DEBUG:on stmt: branch $42for_iter.3, 44, 92
2024-07-15 06:11:42,306 DEBUG:==== SSA block rewrite pass on 44
2024-07-15 06:11:42,306 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B69E81D0>
2024-07-15 06:11:42,306 DEBUG:on stmt: $44unpack_sequence.4 = exhaust_iter(value=$phi44.1, count=2)
2024-07-15 06:11:42,306 DEBUG:on stmt: $44unpack_sequence.2 = static_getitem(value=$44unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>)
2024-07-15 06:11:42,307 DEBUG:on stmt: $44unpack_sequence.3 = static_getitem(value=$44unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>)
2024-07-15 06:11:42,307 DEBUG:on stmt: ax = $44unpack_sequence.2
2024-07-15 06:11:42,307 DEBUG:on stmt: s = $44unpack_sequence.3
2024-07-15 06:11:42,307 DEBUG:on stmt: $const54.6 = const(int, 0)
2024-07-15 06:11:42,307 DEBUG:on stmt: $56compare_op.7 = s < $const54.6
2024-07-15 06:11:42,307 DEBUG:on stmt: bool62 = global(bool: <class 'bool'>)
2024-07-15 06:11:42,307 DEBUG:on stmt: $62pred = call bool62($56compare_op.7, func=bool62, args=(Var($56compare_op.7, arrayobj.py:2050),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,307 DEBUG:on stmt: branch $62pred, 64, 80
2024-07-15 06:11:42,307 DEBUG:==== SSA block rewrite pass on 64
2024-07-15 06:11:42,307 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B69E81D0>
2024-07-15 06:11:42,307 DEBUG:on stmt: $const66.2 = const(int, 1)
2024-07-15 06:11:42,307 DEBUG:on stmt: $binop_iadd68.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value.2, rhs=$const66.2, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:42,307 DEBUG:on stmt: num_neg_value.1 = $binop_iadd68.3
2024-07-15 06:11:42,307 DEBUG:on stmt: neg_ax = ax
2024-07-15 06:11:42,307 DEBUG:first assign: neg_ax
2024-07-15 06:11:42,307 DEBUG:replaced with: neg_ax = ax
2024-07-15 06:11:42,307 DEBUG:on stmt: jump 269
2024-07-15 06:11:42,307 DEBUG:==== SSA block rewrite pass on 80
2024-07-15 06:11:42,307 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B69E81D0>
2024-07-15 06:11:42,307 DEBUG:on stmt: $binop_imul84.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size.2, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:42,307 DEBUG:on stmt: known_size.1 = $binop_imul84.3
2024-07-15 06:11:42,307 DEBUG:on stmt: jump 269
2024-07-15 06:11:42,307 DEBUG:==== SSA block rewrite pass on 92
2024-07-15 06:11:42,307 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B69E81D0>
2024-07-15 06:11:42,307 DEBUG:on stmt: $const94.1 = const(int, 0)
2024-07-15 06:11:42,307 DEBUG:on stmt: $96compare_op.2 = num_neg_value.2 == $const94.1
2024-07-15 06:11:42,308 DEBUG:on stmt: bool102 = global(bool: <class 'bool'>)
2024-07-15 06:11:42,308 DEBUG:on stmt: $102pred = call bool102($96compare_op.2, func=bool102, args=(Var($96compare_op.2, arrayobj.py:2056),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,308 DEBUG:on stmt: branch $102pred, 104, 150
2024-07-15 06:11:42,308 DEBUG:==== SSA block rewrite pass on 104
2024-07-15 06:11:42,308 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B69E81D0>
2024-07-15 06:11:42,308 DEBUG:on stmt: $108compare_op.2 = origsize != known_size.2
2024-07-15 06:11:42,308 DEBUG:on stmt: bool114 = global(bool: <class 'bool'>)
2024-07-15 06:11:42,308 DEBUG:on stmt: $114pred = call bool114($108compare_op.2, func=bool114, args=(Var($108compare_op.2, arrayobj.py:2057),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,308 DEBUG:on stmt: branch $114pred, 116, 146
2024-07-15 06:11:42,308 DEBUG:==== SSA block rewrite pass on 116
2024-07-15 06:11:42,308 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B69E81D0>
2024-07-15 06:11:42,308 DEBUG:on stmt: $116load_global.0 = global(ValueError: <class 'ValueError'>)
2024-07-15 06:11:42,308 DEBUG:on stmt: $const128.2 = const(str, total size of new array must be unchanged)
2024-07-15 06:11:42,308 DEBUG:on stmt: $134call.3 = call $116load_global.0($const128.2, func=$116load_global.0, args=[Var($const128.2, arrayobj.py:2058)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,308 DEBUG:on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2024-07-15 06:11:42,308 DEBUG:==== SSA block rewrite pass on 146
2024-07-15 06:11:42,308 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B69E81D0>
2024-07-15 06:11:42,308 DEBUG:on stmt: $const146.0 = const(NoneType, None)
2024-07-15 06:11:42,308 DEBUG:on stmt: $148return_value.1 = cast(value=$const146.0)
2024-07-15 06:11:42,308 DEBUG:on stmt: return $148return_value.1
2024-07-15 06:11:42,309 DEBUG:==== SSA block rewrite pass on 150
2024-07-15 06:11:42,309 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B69E81D0>
2024-07-15 06:11:42,309 DEBUG:on stmt: $const152.1 = const(int, 1)
2024-07-15 06:11:42,309 DEBUG:on stmt: $154compare_op.2 = num_neg_value.2 == $const152.1
2024-07-15 06:11:42,309 DEBUG:on stmt: bool160 = global(bool: <class 'bool'>)
2024-07-15 06:11:42,309 DEBUG:on stmt: $160pred = call bool160($154compare_op.2, func=bool160, args=(Var($154compare_op.2, arrayobj.py:2060),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,309 DEBUG:on stmt: branch $160pred, 162, 268
2024-07-15 06:11:42,309 DEBUG:==== SSA block rewrite pass on 162
2024-07-15 06:11:42,309 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B69E81D0>
2024-07-15 06:11:42,309 DEBUG:on stmt: $const164.1 = const(int, 0)
2024-07-15 06:11:42,309 DEBUG:on stmt: $166compare_op.2 = known_size.2 == $const164.1
2024-07-15 06:11:42,309 DEBUG:on stmt: bool172 = global(bool: <class 'bool'>)
2024-07-15 06:11:42,309 DEBUG:on stmt: $172pred = call bool172($166compare_op.2, func=bool172, args=(Var($166compare_op.2, arrayobj.py:2062),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,309 DEBUG:on stmt: branch $172pred, 174, 192
2024-07-15 06:11:42,309 DEBUG:==== SSA block rewrite pass on 174
2024-07-15 06:11:42,309 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B69E81D0>
2024-07-15 06:11:42,309 DEBUG:on stmt: inferred = const(int, 0)
2024-07-15 06:11:42,309 DEBUG:on stmt: $const180.2 = const(int, 0)
2024-07-15 06:11:42,310 DEBUG:on stmt: ok = origsize == $const180.2
2024-07-15 06:11:42,310 DEBUG:on stmt: jump 220
2024-07-15 06:11:42,310 DEBUG:==== SSA block rewrite pass on 192
2024-07-15 06:11:42,310 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B69E81D0>
2024-07-15 06:11:42,310 DEBUG:on stmt: inferred.1 = origsize // known_size.2
2024-07-15 06:11:42,310 DEBUG:on stmt: $binop_mod206.5 = origsize % known_size.2
2024-07-15 06:11:42,310 DEBUG:on stmt: $const210.6 = const(int, 0)
2024-07-15 06:11:42,310 DEBUG:on stmt: ok.1 = $binop_mod206.5 == $const210.6
2024-07-15 06:11:42,310 DEBUG:on stmt: jump 220
2024-07-15 06:11:42,310 DEBUG:==== SSA block rewrite pass on 220
2024-07-15 06:11:42,310 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B69E81D0>
2024-07-15 06:11:42,310 DEBUG:on stmt: ok.2 = phi(incoming_values=[Var(ok.1, arrayobj.py:2067), Var(ok, arrayobj.py:2064)], incoming_blocks=[192, 174])
2024-07-15 06:11:42,310 DEBUG:on stmt: inferred.2 = phi(incoming_values=[Var(inferred.1, arrayobj.py:2066), Var(inferred, arrayobj.py:2063)], incoming_blocks=[192, 174])
2024-07-15 06:11:42,310 DEBUG:on stmt: bool222 = global(bool: <class 'bool'>)
2024-07-15 06:11:42,310 DEBUG:on stmt: $222pred = call bool222(ok.2, func=bool222, args=(Var(ok.2, arrayobj.py:2068),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,310 DEBUG:on stmt: branch $222pred, 254, 224
2024-07-15 06:11:42,310 DEBUG:==== SSA block rewrite pass on 224
2024-07-15 06:11:42,310 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B69E81D0>
2024-07-15 06:11:42,311 DEBUG:on stmt: $224load_global.0 = global(ValueError: <class 'ValueError'>)
2024-07-15 06:11:42,311 DEBUG:on stmt: $const236.2 = const(str, total size of new array must be unchanged)
2024-07-15 06:11:42,311 DEBUG:on stmt: $242call.3 = call $224load_global.0($const236.2, func=$224load_global.0, args=[Var($const236.2, arrayobj.py:2069)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,311 DEBUG:on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2024-07-15 06:11:42,311 DEBUG:==== SSA block rewrite pass on 254
2024-07-15 06:11:42,311 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B69E81D0>
2024-07-15 06:11:42,311 DEBUG:on stmt: shape[neg_ax] = inferred.2
2024-07-15 06:11:42,311 DEBUG:on stmt: $const264.3 = const(NoneType, None)
2024-07-15 06:11:42,311 DEBUG:on stmt: $266return_value.4 = cast(value=$const264.3)
2024-07-15 06:11:42,311 DEBUG:on stmt: return $266return_value.4
2024-07-15 06:11:42,311 DEBUG:==== SSA block rewrite pass on 268
2024-07-15 06:11:42,311 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B69E81D0>
2024-07-15 06:11:42,311 DEBUG:on stmt: $268load_global.0 = global(ValueError: <class 'ValueError'>)
2024-07-15 06:11:42,311 DEBUG:on stmt: $const280.2 = const(str, multiple negative shape values)
2024-07-15 06:11:42,311 DEBUG:on stmt: $286call.3 = call $268load_global.0($const280.2, func=$268load_global.0, args=[Var($const280.2, arrayobj.py:2073)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,311 DEBUG:on stmt: <static> raise <class 'ValueError'>('multiple negative shape values')
2024-07-15 06:11:42,311 DEBUG:==== SSA block rewrite pass on 269
2024-07-15 06:11:42,311 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B69E81D0>
2024-07-15 06:11:42,311 DEBUG:on stmt: known_size.3 = phi(incoming_values=[Var(known_size.2, arrayobj.py:2054), Var(known_size.1, arrayobj.py:2054)], incoming_blocks=[64, 80])
2024-07-15 06:11:42,311 DEBUG:on stmt: num_neg_value.3 = phi(incoming_values=[Var(num_neg_value.1, arrayobj.py:2051), Var(num_neg_value.2, arrayobj.py:2051)], incoming_blocks=[64, 80])
2024-07-15 06:11:42,312 DEBUG:on stmt: jump 42
2024-07-15 06:11:42,312 DEBUG:Replaced assignments: defaultdict(<class 'list'>,
            {64: [<numba.core.ir.Assign object at 0x00000221B69FDF50>]})
2024-07-15 06:11:42,312 DEBUG:==== SSA block rewrite pass on 0
2024-07-15 06:11:42,312 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B6927E90>
2024-07-15 06:11:42,312 DEBUG:on stmt: origsize = arg(0, name=origsize)
2024-07-15 06:11:42,312 DEBUG:on stmt: shape = arg(1, name=shape)
2024-07-15 06:11:42,312 DEBUG:on stmt: num_neg_value = const(int, 0)
2024-07-15 06:11:42,312 DEBUG:on stmt: known_size = const(int, 1)
2024-07-15 06:11:42,312 DEBUG:on stmt: $12load_global.2 = global(enumerate: <class 'enumerate'>)
2024-07-15 06:11:42,312 DEBUG:on stmt: $30call.5 = call $12load_global.2(shape, func=$12load_global.2, args=[Var(shape, arrayobj.py:2046)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,312 DEBUG:on stmt: $40get_iter.6 = getiter(value=$30call.5)
2024-07-15 06:11:42,312 DEBUG:on stmt: $phi42.0 = $40get_iter.6
2024-07-15 06:11:42,312 DEBUG:on stmt: jump 42
2024-07-15 06:11:42,312 DEBUG:==== SSA block rewrite pass on 42
2024-07-15 06:11:42,312 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B6927E90>
2024-07-15 06:11:42,312 DEBUG:on stmt: known_size.2 = phi(incoming_values=[Var(known_size, arrayobj.py:2048), Var(known_size.3, arrayobj.py:2054)], incoming_blocks=[0, 269])
2024-07-15 06:11:42,313 DEBUG:on stmt: num_neg_value.2 = phi(incoming_values=[Var(num_neg_value, arrayobj.py:2047), Var(num_neg_value.3, arrayobj.py:2051)], incoming_blocks=[0, 269])
2024-07-15 06:11:42,313 DEBUG:on stmt: $42for_iter.1 = iternext(value=$phi42.0)
2024-07-15 06:11:42,313 DEBUG:on stmt: $42for_iter.2 = pair_first(value=$42for_iter.1)
2024-07-15 06:11:42,313 DEBUG:on stmt: $42for_iter.3 = pair_second(value=$42for_iter.1)
2024-07-15 06:11:42,313 DEBUG:on stmt: $phi44.1 = $42for_iter.2
2024-07-15 06:11:42,313 DEBUG:on stmt: branch $42for_iter.3, 44, 92
2024-07-15 06:11:42,313 DEBUG:==== SSA block rewrite pass on 44
2024-07-15 06:11:42,313 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B6927E90>
2024-07-15 06:11:42,313 DEBUG:on stmt: $44unpack_sequence.4 = exhaust_iter(value=$phi44.1, count=2)
2024-07-15 06:11:42,313 DEBUG:on stmt: $44unpack_sequence.2 = static_getitem(value=$44unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>)
2024-07-15 06:11:42,313 DEBUG:on stmt: $44unpack_sequence.3 = static_getitem(value=$44unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>)
2024-07-15 06:11:42,313 DEBUG:on stmt: ax = $44unpack_sequence.2
2024-07-15 06:11:42,313 DEBUG:on stmt: s = $44unpack_sequence.3
2024-07-15 06:11:42,313 DEBUG:on stmt: $const54.6 = const(int, 0)
2024-07-15 06:11:42,313 DEBUG:on stmt: $56compare_op.7 = s < $const54.6
2024-07-15 06:11:42,313 DEBUG:on stmt: bool62 = global(bool: <class 'bool'>)
2024-07-15 06:11:42,313 DEBUG:on stmt: $62pred = call bool62($56compare_op.7, func=bool62, args=(Var($56compare_op.7, arrayobj.py:2050),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,313 DEBUG:on stmt: branch $62pred, 64, 80
2024-07-15 06:11:42,313 DEBUG:==== SSA block rewrite pass on 64
2024-07-15 06:11:42,313 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B6927E90>
2024-07-15 06:11:42,313 DEBUG:on stmt: $const66.2 = const(int, 1)
2024-07-15 06:11:42,314 DEBUG:on stmt: $binop_iadd68.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value.2, rhs=$const66.2, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:42,314 DEBUG:on stmt: num_neg_value.1 = $binop_iadd68.3
2024-07-15 06:11:42,314 DEBUG:on stmt: neg_ax = ax
2024-07-15 06:11:42,314 DEBUG:on stmt: jump 269
2024-07-15 06:11:42,314 DEBUG:==== SSA block rewrite pass on 80
2024-07-15 06:11:42,314 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B6927E90>
2024-07-15 06:11:42,314 DEBUG:on stmt: $binop_imul84.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size.2, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:42,314 DEBUG:on stmt: known_size.1 = $binop_imul84.3
2024-07-15 06:11:42,314 DEBUG:on stmt: jump 269
2024-07-15 06:11:42,314 DEBUG:==== SSA block rewrite pass on 92
2024-07-15 06:11:42,314 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B6927E90>
2024-07-15 06:11:42,314 DEBUG:on stmt: $const94.1 = const(int, 0)
2024-07-15 06:11:42,314 DEBUG:on stmt: $96compare_op.2 = num_neg_value.2 == $const94.1
2024-07-15 06:11:42,314 DEBUG:on stmt: bool102 = global(bool: <class 'bool'>)
2024-07-15 06:11:42,314 DEBUG:on stmt: $102pred = call bool102($96compare_op.2, func=bool102, args=(Var($96compare_op.2, arrayobj.py:2056),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,314 DEBUG:on stmt: branch $102pred, 104, 150
2024-07-15 06:11:42,314 DEBUG:==== SSA block rewrite pass on 104
2024-07-15 06:11:42,314 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B6927E90>
2024-07-15 06:11:42,314 DEBUG:on stmt: $108compare_op.2 = origsize != known_size.2
2024-07-15 06:11:42,314 DEBUG:on stmt: bool114 = global(bool: <class 'bool'>)
2024-07-15 06:11:42,314 DEBUG:on stmt: $114pred = call bool114($108compare_op.2, func=bool114, args=(Var($108compare_op.2, arrayobj.py:2057),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,315 DEBUG:on stmt: branch $114pred, 116, 146
2024-07-15 06:11:42,315 DEBUG:==== SSA block rewrite pass on 116
2024-07-15 06:11:42,315 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B6927E90>
2024-07-15 06:11:42,315 DEBUG:on stmt: $116load_global.0 = global(ValueError: <class 'ValueError'>)
2024-07-15 06:11:42,315 DEBUG:on stmt: $const128.2 = const(str, total size of new array must be unchanged)
2024-07-15 06:11:42,315 DEBUG:on stmt: $134call.3 = call $116load_global.0($const128.2, func=$116load_global.0, args=[Var($const128.2, arrayobj.py:2058)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,315 DEBUG:on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2024-07-15 06:11:42,315 DEBUG:==== SSA block rewrite pass on 146
2024-07-15 06:11:42,315 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B6927E90>
2024-07-15 06:11:42,315 DEBUG:on stmt: $const146.0 = const(NoneType, None)
2024-07-15 06:11:42,315 DEBUG:on stmt: $148return_value.1 = cast(value=$const146.0)
2024-07-15 06:11:42,315 DEBUG:on stmt: return $148return_value.1
2024-07-15 06:11:42,315 DEBUG:==== SSA block rewrite pass on 150
2024-07-15 06:11:42,315 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B6927E90>
2024-07-15 06:11:42,315 DEBUG:on stmt: $const152.1 = const(int, 1)
2024-07-15 06:11:42,315 DEBUG:on stmt: $154compare_op.2 = num_neg_value.2 == $const152.1
2024-07-15 06:11:42,315 DEBUG:on stmt: bool160 = global(bool: <class 'bool'>)
2024-07-15 06:11:42,316 DEBUG:on stmt: $160pred = call bool160($154compare_op.2, func=bool160, args=(Var($154compare_op.2, arrayobj.py:2060),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,316 DEBUG:on stmt: branch $160pred, 162, 268
2024-07-15 06:11:42,316 DEBUG:==== SSA block rewrite pass on 162
2024-07-15 06:11:42,316 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B6927E90>
2024-07-15 06:11:42,316 DEBUG:on stmt: $const164.1 = const(int, 0)
2024-07-15 06:11:42,316 DEBUG:on stmt: $166compare_op.2 = known_size.2 == $const164.1
2024-07-15 06:11:42,316 DEBUG:on stmt: bool172 = global(bool: <class 'bool'>)
2024-07-15 06:11:42,316 DEBUG:on stmt: $172pred = call bool172($166compare_op.2, func=bool172, args=(Var($166compare_op.2, arrayobj.py:2062),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,317 DEBUG:on stmt: branch $172pred, 174, 192
2024-07-15 06:11:42,317 DEBUG:==== SSA block rewrite pass on 174
2024-07-15 06:11:42,317 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B6927E90>
2024-07-15 06:11:42,317 DEBUG:on stmt: inferred = const(int, 0)
2024-07-15 06:11:42,317 DEBUG:on stmt: $const180.2 = const(int, 0)
2024-07-15 06:11:42,317 DEBUG:on stmt: ok = origsize == $const180.2
2024-07-15 06:11:42,317 DEBUG:on stmt: jump 220
2024-07-15 06:11:42,317 DEBUG:==== SSA block rewrite pass on 192
2024-07-15 06:11:42,317 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B6927E90>
2024-07-15 06:11:42,317 DEBUG:on stmt: inferred.1 = origsize // known_size.2
2024-07-15 06:11:42,317 DEBUG:on stmt: $binop_mod206.5 = origsize % known_size.2
2024-07-15 06:11:42,317 DEBUG:on stmt: $const210.6 = const(int, 0)
2024-07-15 06:11:42,317 DEBUG:on stmt: ok.1 = $binop_mod206.5 == $const210.6
2024-07-15 06:11:42,317 DEBUG:on stmt: jump 220
2024-07-15 06:11:42,317 DEBUG:==== SSA block rewrite pass on 220
2024-07-15 06:11:42,317 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B6927E90>
2024-07-15 06:11:42,317 DEBUG:on stmt: ok.2 = phi(incoming_values=[Var(ok.1, arrayobj.py:2067), Var(ok, arrayobj.py:2064)], incoming_blocks=[192, 174])
2024-07-15 06:11:42,317 DEBUG:on stmt: inferred.2 = phi(incoming_values=[Var(inferred.1, arrayobj.py:2066), Var(inferred, arrayobj.py:2063)], incoming_blocks=[192, 174])
2024-07-15 06:11:42,317 DEBUG:on stmt: bool222 = global(bool: <class 'bool'>)
2024-07-15 06:11:42,317 DEBUG:on stmt: $222pred = call bool222(ok.2, func=bool222, args=(Var(ok.2, arrayobj.py:2068),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,317 DEBUG:on stmt: branch $222pred, 254, 224
2024-07-15 06:11:42,317 DEBUG:==== SSA block rewrite pass on 224
2024-07-15 06:11:42,317 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B6927E90>
2024-07-15 06:11:42,318 DEBUG:on stmt: $224load_global.0 = global(ValueError: <class 'ValueError'>)
2024-07-15 06:11:42,318 DEBUG:on stmt: $const236.2 = const(str, total size of new array must be unchanged)
2024-07-15 06:11:42,318 DEBUG:on stmt: $242call.3 = call $224load_global.0($const236.2, func=$224load_global.0, args=[Var($const236.2, arrayobj.py:2069)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,318 DEBUG:on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2024-07-15 06:11:42,318 DEBUG:==== SSA block rewrite pass on 254
2024-07-15 06:11:42,318 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B6927E90>
2024-07-15 06:11:42,318 DEBUG:on stmt: shape[neg_ax] = inferred.2
2024-07-15 06:11:42,318 DEBUG:find_def var='neg_ax' stmt=shape[neg_ax] = inferred.2
2024-07-15 06:11:42,318 DEBUG:find_def_from_top label 254
2024-07-15 06:11:42,318 DEBUG:idom 220 from label 254
2024-07-15 06:11:42,318 DEBUG:find_def_from_bottom label 220
2024-07-15 06:11:42,318 DEBUG:find_def_from_top label 220
2024-07-15 06:11:42,318 DEBUG:idom 162 from label 220
2024-07-15 06:11:42,318 DEBUG:find_def_from_bottom label 162
2024-07-15 06:11:42,318 DEBUG:find_def_from_top label 162
2024-07-15 06:11:42,318 DEBUG:idom 150 from label 162
2024-07-15 06:11:42,318 DEBUG:find_def_from_bottom label 150
2024-07-15 06:11:42,318 DEBUG:find_def_from_top label 150
2024-07-15 06:11:42,318 DEBUG:idom 92 from label 150
2024-07-15 06:11:42,319 DEBUG:find_def_from_bottom label 92
2024-07-15 06:11:42,319 DEBUG:find_def_from_top label 92
2024-07-15 06:11:42,319 DEBUG:idom 42 from label 92
2024-07-15 06:11:42,319 DEBUG:find_def_from_bottom label 42
2024-07-15 06:11:42,319 DEBUG:find_def_from_top label 42
2024-07-15 06:11:42,319 DEBUG:insert phi node neg_ax.1 = phi(incoming_values=[], incoming_blocks=[]) at 42
2024-07-15 06:11:42,319 DEBUG:find_def_from_bottom label 0
2024-07-15 06:11:42,319 DEBUG:find_def_from_top label 0
2024-07-15 06:11:42,319 DEBUG:incoming_def <class 'numba.core.ssa.UndefinedVariable'>
2024-07-15 06:11:42,319 DEBUG:find_def_from_bottom label 269
2024-07-15 06:11:42,320 DEBUG:find_def_from_top label 269
2024-07-15 06:11:42,320 DEBUG:insert phi node neg_ax.2 = phi(incoming_values=[], incoming_blocks=[]) at 269
2024-07-15 06:11:42,320 DEBUG:find_def_from_bottom label 64
2024-07-15 06:11:42,320 DEBUG:incoming_def neg_ax = ax
2024-07-15 06:11:42,320 DEBUG:find_def_from_bottom label 80
2024-07-15 06:11:42,320 DEBUG:find_def_from_top label 80
2024-07-15 06:11:42,320 DEBUG:idom 44 from label 80
2024-07-15 06:11:42,320 DEBUG:find_def_from_bottom label 44
2024-07-15 06:11:42,320 DEBUG:find_def_from_top label 44
2024-07-15 06:11:42,320 DEBUG:idom 42 from label 44
2024-07-15 06:11:42,320 DEBUG:find_def_from_bottom label 42
2024-07-15 06:11:42,320 DEBUG:incoming_def neg_ax.1 = phi(incoming_values=[Undefined], incoming_blocks=[0])
2024-07-15 06:11:42,320 DEBUG:incoming_def neg_ax.2 = phi(incoming_values=[Var(neg_ax, arrayobj.py:2052), Var(neg_ax.1, arrayobj.py:2070)], incoming_blocks=[64, 80])
2024-07-15 06:11:42,320 DEBUG:replaced with: shape[neg_ax.1] = inferred.2
2024-07-15 06:11:42,320 DEBUG:on stmt: $const264.3 = const(NoneType, None)
2024-07-15 06:11:42,320 DEBUG:on stmt: $266return_value.4 = cast(value=$const264.3)
2024-07-15 06:11:42,321 DEBUG:on stmt: return $266return_value.4
2024-07-15 06:11:42,321 DEBUG:==== SSA block rewrite pass on 268
2024-07-15 06:11:42,321 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B6927E90>
2024-07-15 06:11:42,321 DEBUG:on stmt: $268load_global.0 = global(ValueError: <class 'ValueError'>)
2024-07-15 06:11:42,321 DEBUG:on stmt: $const280.2 = const(str, multiple negative shape values)
2024-07-15 06:11:42,321 DEBUG:on stmt: $286call.3 = call $268load_global.0($const280.2, func=$268load_global.0, args=[Var($const280.2, arrayobj.py:2073)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,321 DEBUG:on stmt: <static> raise <class 'ValueError'>('multiple negative shape values')
2024-07-15 06:11:42,321 DEBUG:==== SSA block rewrite pass on 269
2024-07-15 06:11:42,321 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B6927E90>
2024-07-15 06:11:42,321 DEBUG:on stmt: known_size.3 = phi(incoming_values=[Var(known_size.2, arrayobj.py:2054), Var(known_size.1, arrayobj.py:2054)], incoming_blocks=[64, 80])
2024-07-15 06:11:42,321 DEBUG:on stmt: num_neg_value.3 = phi(incoming_values=[Var(num_neg_value.1, arrayobj.py:2051), Var(num_neg_value.2, arrayobj.py:2051)], incoming_blocks=[64, 80])
2024-07-15 06:11:42,321 DEBUG:on stmt: jump 42
2024-07-15 06:11:42,528 DEBUG:bytecode dump:
>          0	NOP(arg=None, lineno=481)
           2	RESUME(arg=0, lineno=481)
           4	LOAD_FAST(arg=0, lineno=483)
           6	LOAD_FAST(arg=1, lineno=483)
           8	COMPARE_OP(arg=4, lineno=483)
          14	RETURN_VALUE(arg=None, lineno=483)
2024-07-15 06:11:42,528 DEBUG:pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-15 06:11:42,528 DEBUG:stack: []
2024-07-15 06:11:42,528 DEBUG:state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-15 06:11:42,528 DEBUG:dispatch pc=0, inst=NOP(arg=None, lineno=481)
2024-07-15 06:11:42,528 DEBUG:stack []
2024-07-15 06:11:42,528 DEBUG:dispatch pc=2, inst=RESUME(arg=0, lineno=481)
2024-07-15 06:11:42,528 DEBUG:stack []
2024-07-15 06:11:42,528 DEBUG:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=483)
2024-07-15 06:11:42,529 DEBUG:stack []
2024-07-15 06:11:42,529 DEBUG:dispatch pc=6, inst=LOAD_FAST(arg=1, lineno=483)
2024-07-15 06:11:42,529 DEBUG:stack ['$a4.0']
2024-07-15 06:11:42,529 DEBUG:dispatch pc=8, inst=COMPARE_OP(arg=4, lineno=483)
2024-07-15 06:11:42,529 DEBUG:stack ['$a4.0', '$min_val6.1']
2024-07-15 06:11:42,529 DEBUG:dispatch pc=14, inst=RETURN_VALUE(arg=None, lineno=483)
2024-07-15 06:11:42,529 DEBUG:stack ['$8compare_op.2']
2024-07-15 06:11:42,529 DEBUG:end state. edges=[]
2024-07-15 06:11:42,529 DEBUG:-------------------------Prune PHIs-------------------------
2024-07-15 06:11:42,529 DEBUG:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-07-15 06:11:42,529 DEBUG:defmap: {}
2024-07-15 06:11:42,529 DEBUG:phismap: defaultdict(<class 'set'>, {})
2024-07-15 06:11:42,529 DEBUG:changing phismap: defaultdict(<class 'set'>, {})
2024-07-15 06:11:42,529 DEBUG:keep phismap: {}
2024-07-15 06:11:42,529 DEBUG:new_out: defaultdict(<class 'dict'>, {})
2024-07-15 06:11:42,529 DEBUG:----------------------DONE Prune PHIs-----------------------
2024-07-15 06:11:42,529 DEBUG:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$a4.0'}), (6, {'res': '$min_val6.1'}), (8, {'lhs': '$a4.0', 'rhs': '$min_val6.1', 'res': '$8compare_op.2'}), (10, {}), (12, {}), (14, {'retval': '$8compare_op.2', 'castval': '$14return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-15 06:11:42,529 DEBUG:label 0:
    a = arg(0, name=a)                       ['a']
    min_val = arg(1, name=min_val)           ['min_val']
    $8compare_op.2 = a > min_val             ['$8compare_op.2', 'a', 'min_val']
    $14return_value.3 = cast(value=$8compare_op.2) ['$14return_value.3', '$8compare_op.2']
    return $14return_value.3                 ['$14return_value.3']

2024-07-15 06:11:42,532 DEBUG:==== SSA block analysis pass on 0
2024-07-15 06:11:42,532 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B7B27590>
2024-07-15 06:11:42,532 DEBUG:on stmt: a = arg(0, name=a)
2024-07-15 06:11:42,532 DEBUG:on stmt: min_val = arg(1, name=min_val)
2024-07-15 06:11:42,532 DEBUG:on stmt: $8compare_op.2 = a > min_val
2024-07-15 06:11:42,532 DEBUG:on stmt: $14return_value.3 = cast(value=$8compare_op.2)
2024-07-15 06:11:42,532 DEBUG:on stmt: return $14return_value.3
2024-07-15 06:11:42,532 DEBUG:defs defaultdict(<class 'list'>,
            {'$14return_value.3': [(<numba.core.ir.Assign object at 0x00000221B7B27C90>,
                                    0)],
             '$8compare_op.2': [(<numba.core.ir.Assign object at 0x00000221B7B27AD0>,
                                 0)],
             'a': [(<numba.core.ir.Assign object at 0x00000221B7B380D0>, 0)],
             'min_val': [(<numba.core.ir.Assign object at 0x00000221B7B38150>,
                          0)]})
2024-07-15 06:11:42,532 DEBUG:SSA violators <numba.core.utils.OrderedSet object at 0x00000221B7B27590>
2024-07-15 06:11:42,574 DEBUG:bytecode dump:
>          0	NOP(arg=None, lineno=3535)
           2	RESUME(arg=0, lineno=3535)
           4	LOAD_GLOBAL(arg=1, lineno=3536)
          16	LOAD_FAST(arg=0, lineno=3536)
          18	PRECALL(arg=1, lineno=3536)
          22	CALL(arg=1, lineno=3536)
          32	STORE_FAST(arg=2, lineno=3536)
          34	LOAD_GLOBAL(arg=3, lineno=3537)
          46	LOAD_FAST(arg=2, lineno=3537)
          48	PRECALL(arg=1, lineno=3537)
          52	CALL(arg=1, lineno=3537)
          62	GET_ITER(arg=None, lineno=3537)
>         64	FOR_ITER(arg=54, lineno=3537)
          66	STORE_FAST(arg=3, lineno=3537)
          68	LOAD_FAST(arg=0, lineno=3538)
          70	LOAD_FAST(arg=3, lineno=3538)
          72	BINARY_SUBSCR(arg=None, lineno=3538)
          82	LOAD_FAST(arg=1, lineno=3538)
          84	LOAD_GLOBAL(arg=1, lineno=3538)
          96	LOAD_FAST(arg=1, lineno=3538)
          98	PRECALL(arg=1, lineno=3538)
         102	CALL(arg=1, lineno=3538)
         112	LOAD_FAST(arg=2, lineno=3538)
         114	BINARY_OP(arg=10, lineno=3538)
         118	LOAD_FAST(arg=3, lineno=3538)
         120	BINARY_OP(arg=0, lineno=3538)
         124	BINARY_SUBSCR(arg=None, lineno=3538)
         134	COMPARE_OP(arg=3, lineno=3538)
         140	POP_JUMP_FORWARD_IF_FALSE(arg=15, lineno=3538)
         142	LOAD_GLOBAL(arg=5, lineno=3539)
         154	LOAD_CONST(arg=1, lineno=3539)
         156	PRECALL(arg=1, lineno=3539)
         160	CALL(arg=1, lineno=3539)
         170	RAISE_VARARGS(arg=1, lineno=3539)
>        172	JUMP_BACKWARD(arg=55, lineno=3538)
>        174	LOAD_CONST(arg=0, lineno=3537)
         176	RETURN_VALUE(arg=None, lineno=3537)
2024-07-15 06:11:42,574 DEBUG:pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-15 06:11:42,574 DEBUG:stack: []
2024-07-15 06:11:42,574 DEBUG:state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-15 06:11:42,574 DEBUG:dispatch pc=0, inst=NOP(arg=None, lineno=3535)
2024-07-15 06:11:42,574 DEBUG:stack []
2024-07-15 06:11:42,574 DEBUG:dispatch pc=2, inst=RESUME(arg=0, lineno=3535)
2024-07-15 06:11:42,574 DEBUG:stack []
2024-07-15 06:11:42,575 DEBUG:dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=3536)
2024-07-15 06:11:42,575 DEBUG:stack []
2024-07-15 06:11:42,575 DEBUG:dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=3536)
2024-07-15 06:11:42,575 DEBUG:stack ['$null$4.1', '$4load_global.0']
2024-07-15 06:11:42,575 DEBUG:dispatch pc=18, inst=PRECALL(arg=1, lineno=3536)
2024-07-15 06:11:42,575 DEBUG:stack ['$null$4.1', '$4load_global.0', '$shape16.2']
2024-07-15 06:11:42,575 DEBUG:dispatch pc=22, inst=CALL(arg=1, lineno=3536)
2024-07-15 06:11:42,575 DEBUG:stack ['$null$4.1', '$4load_global.0', '$shape16.2']
2024-07-15 06:11:42,575 DEBUG:dispatch pc=32, inst=STORE_FAST(arg=2, lineno=3536)
2024-07-15 06:11:42,575 DEBUG:stack ['$22call.3']
2024-07-15 06:11:42,575 DEBUG:dispatch pc=34, inst=LOAD_GLOBAL(arg=3, lineno=3537)
2024-07-15 06:11:42,575 DEBUG:stack []
2024-07-15 06:11:42,575 DEBUG:dispatch pc=46, inst=LOAD_FAST(arg=2, lineno=3537)
2024-07-15 06:11:42,575 DEBUG:stack ['$null$34.5', '$34load_global.4']
2024-07-15 06:11:42,575 DEBUG:dispatch pc=48, inst=PRECALL(arg=1, lineno=3537)
2024-07-15 06:11:42,575 DEBUG:stack ['$null$34.5', '$34load_global.4', '$n46.6']
2024-07-15 06:11:42,575 DEBUG:dispatch pc=52, inst=CALL(arg=1, lineno=3537)
2024-07-15 06:11:42,575 DEBUG:stack ['$null$34.5', '$34load_global.4', '$n46.6']
2024-07-15 06:11:42,575 DEBUG:dispatch pc=62, inst=GET_ITER(arg=None, lineno=3537)
2024-07-15 06:11:42,575 DEBUG:stack ['$52call.7']
2024-07-15 06:11:42,575 DEBUG:end state. edges=[Edge(pc=64, stack=('$62get_iter.8',), blockstack=(), npush=0)]
2024-07-15 06:11:42,575 DEBUG:pending: deque([State(pc_initial=64 nstack_initial=1)])
2024-07-15 06:11:42,575 DEBUG:stack: ['$phi64.0']
2024-07-15 06:11:42,575 DEBUG:state.pc_initial: State(pc_initial=64 nstack_initial=1)
2024-07-15 06:11:42,575 DEBUG:dispatch pc=64, inst=FOR_ITER(arg=54, lineno=3537)
2024-07-15 06:11:42,575 DEBUG:stack ['$phi64.0']
2024-07-15 06:11:42,575 DEBUG:end state. edges=[Edge(pc=174, stack=(), blockstack=(), npush=0), Edge(pc=66, stack=('$phi64.0', '$64for_iter.2'), blockstack=(), npush=0)]
2024-07-15 06:11:42,575 DEBUG:pending: deque([State(pc_initial=174 nstack_initial=0), State(pc_initial=66 nstack_initial=2)])
2024-07-15 06:11:42,575 DEBUG:stack: []
2024-07-15 06:11:42,576 DEBUG:state.pc_initial: State(pc_initial=174 nstack_initial=0)
2024-07-15 06:11:42,576 DEBUG:dispatch pc=174, inst=LOAD_CONST(arg=0, lineno=3537)
2024-07-15 06:11:42,576 DEBUG:stack []
2024-07-15 06:11:42,576 DEBUG:dispatch pc=176, inst=RETURN_VALUE(arg=None, lineno=3537)
2024-07-15 06:11:42,576 DEBUG:stack ['$const174.0']
2024-07-15 06:11:42,576 DEBUG:end state. edges=[]
2024-07-15 06:11:42,576 DEBUG:pending: deque([State(pc_initial=66 nstack_initial=2)])
2024-07-15 06:11:42,576 DEBUG:stack: ['$phi66.0', '$phi66.1']
2024-07-15 06:11:42,576 DEBUG:state.pc_initial: State(pc_initial=66 nstack_initial=2)
2024-07-15 06:11:42,576 DEBUG:dispatch pc=66, inst=STORE_FAST(arg=3, lineno=3537)
2024-07-15 06:11:42,576 DEBUG:stack ['$phi66.0', '$phi66.1']
2024-07-15 06:11:42,576 DEBUG:dispatch pc=68, inst=LOAD_FAST(arg=0, lineno=3538)
2024-07-15 06:11:42,576 DEBUG:stack ['$phi66.0']
2024-07-15 06:11:42,576 DEBUG:dispatch pc=70, inst=LOAD_FAST(arg=3, lineno=3538)
2024-07-15 06:11:42,576 DEBUG:stack ['$phi66.0', '$shape68.2']
2024-07-15 06:11:42,576 DEBUG:dispatch pc=72, inst=BINARY_SUBSCR(arg=None, lineno=3538)
2024-07-15 06:11:42,576 DEBUG:stack ['$phi66.0', '$shape68.2', '$i70.3']
2024-07-15 06:11:42,576 DEBUG:dispatch pc=82, inst=LOAD_FAST(arg=1, lineno=3538)
2024-07-15 06:11:42,576 DEBUG:stack ['$phi66.0', '$72binary_subscr.4']
2024-07-15 06:11:42,576 DEBUG:dispatch pc=84, inst=LOAD_GLOBAL(arg=1, lineno=3538)
2024-07-15 06:11:42,576 DEBUG:stack ['$phi66.0', '$72binary_subscr.4', '$main_shape82.5']
2024-07-15 06:11:42,576 DEBUG:dispatch pc=96, inst=LOAD_FAST(arg=1, lineno=3538)
2024-07-15 06:11:42,576 DEBUG:stack ['$phi66.0', '$72binary_subscr.4', '$main_shape82.5', '$null$84.7', '$84load_global.6']
2024-07-15 06:11:42,576 DEBUG:dispatch pc=98, inst=PRECALL(arg=1, lineno=3538)
2024-07-15 06:11:42,576 DEBUG:stack ['$phi66.0', '$72binary_subscr.4', '$main_shape82.5', '$null$84.7', '$84load_global.6', '$main_shape96.8']
2024-07-15 06:11:42,576 DEBUG:dispatch pc=102, inst=CALL(arg=1, lineno=3538)
2024-07-15 06:11:42,576 DEBUG:stack ['$phi66.0', '$72binary_subscr.4', '$main_shape82.5', '$null$84.7', '$84load_global.6', '$main_shape96.8']
2024-07-15 06:11:42,576 DEBUG:dispatch pc=112, inst=LOAD_FAST(arg=2, lineno=3538)
2024-07-15 06:11:42,576 DEBUG:stack ['$phi66.0', '$72binary_subscr.4', '$main_shape82.5', '$102call.9']
2024-07-15 06:11:42,577 DEBUG:dispatch pc=114, inst=BINARY_OP(arg=10, lineno=3538)
2024-07-15 06:11:42,577 DEBUG:stack ['$phi66.0', '$72binary_subscr.4', '$main_shape82.5', '$102call.9', '$n112.10']
2024-07-15 06:11:42,577 DEBUG:dispatch pc=118, inst=LOAD_FAST(arg=3, lineno=3538)
2024-07-15 06:11:42,577 DEBUG:stack ['$phi66.0', '$72binary_subscr.4', '$main_shape82.5', '$binop_sub114.11']
2024-07-15 06:11:42,577 DEBUG:dispatch pc=120, inst=BINARY_OP(arg=0, lineno=3538)
2024-07-15 06:11:42,577 DEBUG:stack ['$phi66.0', '$72binary_subscr.4', '$main_shape82.5', '$binop_sub114.11', '$i118.12']
2024-07-15 06:11:42,577 DEBUG:dispatch pc=124, inst=BINARY_SUBSCR(arg=None, lineno=3538)
2024-07-15 06:11:42,577 DEBUG:stack ['$phi66.0', '$72binary_subscr.4', '$main_shape82.5', '$binop_add120.13']
2024-07-15 06:11:42,577 DEBUG:dispatch pc=134, inst=COMPARE_OP(arg=3, lineno=3538)
2024-07-15 06:11:42,577 DEBUG:stack ['$phi66.0', '$72binary_subscr.4', '$124binary_subscr.14']
2024-07-15 06:11:42,577 DEBUG:dispatch pc=140, inst=POP_JUMP_FORWARD_IF_FALSE(arg=15, lineno=3538)
2024-07-15 06:11:42,577 DEBUG:stack ['$phi66.0', '$134compare_op.15']
2024-07-15 06:11:42,577 DEBUG:end state. edges=[Edge(pc=142, stack=('$phi66.0',), blockstack=(), npush=0), Edge(pc=172, stack=('$phi66.0',), blockstack=(), npush=0)]
2024-07-15 06:11:42,577 DEBUG:pending: deque([State(pc_initial=142 nstack_initial=1), State(pc_initial=172 nstack_initial=1)])
2024-07-15 06:11:42,577 DEBUG:stack: ['$phi142.0']
2024-07-15 06:11:42,577 DEBUG:state.pc_initial: State(pc_initial=142 nstack_initial=1)
2024-07-15 06:11:42,577 DEBUG:dispatch pc=142, inst=LOAD_GLOBAL(arg=5, lineno=3539)
2024-07-15 06:11:42,577 DEBUG:stack ['$phi142.0']
2024-07-15 06:11:42,577 DEBUG:dispatch pc=154, inst=LOAD_CONST(arg=1, lineno=3539)
2024-07-15 06:11:42,577 DEBUG:stack ['$phi142.0', '$null$142.2', '$142load_global.1']
2024-07-15 06:11:42,577 DEBUG:dispatch pc=156, inst=PRECALL(arg=1, lineno=3539)
2024-07-15 06:11:42,577 DEBUG:stack ['$phi142.0', '$null$142.2', '$142load_global.1', '$const154.3']
2024-07-15 06:11:42,577 DEBUG:dispatch pc=160, inst=CALL(arg=1, lineno=3539)
2024-07-15 06:11:42,577 DEBUG:stack ['$phi142.0', '$null$142.2', '$142load_global.1', '$const154.3']
2024-07-15 06:11:42,577 DEBUG:dispatch pc=170, inst=RAISE_VARARGS(arg=1, lineno=3539)
2024-07-15 06:11:42,577 DEBUG:stack ['$phi142.0', '$160call.4']
2024-07-15 06:11:42,577 DEBUG:end state. edges=[]
2024-07-15 06:11:42,577 DEBUG:pending: deque([State(pc_initial=172 nstack_initial=1)])
2024-07-15 06:11:42,577 DEBUG:stack: ['$phi172.0']
2024-07-15 06:11:42,578 DEBUG:state.pc_initial: State(pc_initial=172 nstack_initial=1)
2024-07-15 06:11:42,578 DEBUG:dispatch pc=172, inst=JUMP_BACKWARD(arg=55, lineno=3538)
2024-07-15 06:11:42,578 DEBUG:stack ['$phi172.0']
2024-07-15 06:11:42,578 DEBUG:end state. edges=[Edge(pc=64, stack=('$phi172.0',), blockstack=(), npush=0)]
2024-07-15 06:11:42,578 DEBUG:pending: deque([State(pc_initial=64 nstack_initial=1)])
2024-07-15 06:11:42,578 DEBUG:-------------------------Prune PHIs-------------------------
2024-07-15 06:11:42,578 DEBUG:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=64 nstack_initial=1): {'$phi64.0'},
             State(pc_initial=66 nstack_initial=2): {'$phi66.1'},
             State(pc_initial=142 nstack_initial=1): set(),
             State(pc_initial=172 nstack_initial=1): set(),
             State(pc_initial=174 nstack_initial=0): set()})
2024-07-15 06:11:42,578 DEBUG:defmap: {'$phi64.0': State(pc_initial=0 nstack_initial=0),
 '$phi66.1': State(pc_initial=64 nstack_initial=1)}
2024-07-15 06:11:42,578 DEBUG:phismap: defaultdict(<class 'set'>,
            {'$phi142.0': {('$phi66.0', State(pc_initial=66 nstack_initial=2))},
             '$phi172.0': {('$phi66.0', State(pc_initial=66 nstack_initial=2))},
             '$phi64.0': {('$62get_iter.8',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi172.0',
                           State(pc_initial=172 nstack_initial=1))},
             '$phi66.0': {('$phi64.0', State(pc_initial=64 nstack_initial=1))},
             '$phi66.1': {('$64for_iter.2',
                           State(pc_initial=64 nstack_initial=1))}})
2024-07-15 06:11:42,578 DEBUG:changing phismap: defaultdict(<class 'set'>,
            {'$phi142.0': {('$phi64.0', State(pc_initial=64 nstack_initial=1))},
             '$phi172.0': {('$phi64.0', State(pc_initial=64 nstack_initial=1))},
             '$phi64.0': {('$62get_iter.8',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi64.0', State(pc_initial=64 nstack_initial=1))},
             '$phi66.0': {('$62get_iter.8',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi66.1': {('$64for_iter.2',
                           State(pc_initial=64 nstack_initial=1))}})
2024-07-15 06:11:42,578 DEBUG:changing phismap: defaultdict(<class 'set'>,
            {'$phi142.0': {('$62get_iter.8',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi172.0': {('$62get_iter.8',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi64.0': {('$62get_iter.8',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi66.0': {('$62get_iter.8',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi66.1': {('$64for_iter.2',
                           State(pc_initial=64 nstack_initial=1))}})
2024-07-15 06:11:42,578 DEBUG:changing phismap: defaultdict(<class 'set'>,
            {'$phi142.0': {('$62get_iter.8',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi172.0': {('$62get_iter.8',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi64.0': {('$62get_iter.8',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi66.0': {('$62get_iter.8',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi66.1': {('$64for_iter.2',
                           State(pc_initial=64 nstack_initial=1))}})
2024-07-15 06:11:42,578 DEBUG:keep phismap: {'$phi64.0': {('$62get_iter.8', State(pc_initial=0 nstack_initial=0))},
 '$phi66.1': {('$64for_iter.2', State(pc_initial=64 nstack_initial=1))}}
2024-07-15 06:11:42,578 DEBUG:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi64.0': '$62get_iter.8'},
             State(pc_initial=64 nstack_initial=1): {'$phi66.1': '$64for_iter.2'}})
2024-07-15 06:11:42,579 DEBUG:----------------------DONE Prune PHIs-----------------------
2024-07-15 06:11:42,579 DEBUG:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (6, {}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$shape16.2'}), (18, {}), (20, {}), (22, {'func': '$4load_global.0', 'args': ['$shape16.2'], 'kw_names': None, 'res': '$22call.3'}), (24, {}), (26, {}), (28, {}), (30, {}), (32, {'value': '$22call.3'}), (34, {'idx': 1, 'res': '$34load_global.4'}), (36, {}), (38, {}), (40, {}), (42, {}), (44, {}), (46, {'res': '$n46.6'}), (48, {}), (50, {}), (52, {'func': '$34load_global.4', 'args': ['$n46.6'], 'kw_names': None, 'res': '$52call.7'}), (54, {}), (56, {}), (58, {}), (60, {}), (62, {'value': '$52call.7', 'res': '$62get_iter.8'})), outgoing_phis={'$phi64.0': '$62get_iter.8'}, blockstack=(), active_try_block=None, outgoing_edgepushed={64: ('$62get_iter.8',)})
2024-07-15 06:11:42,579 DEBUG:block_infos State(pc_initial=64 nstack_initial=1):
AdaptBlockInfo(insts=((64, {'iterator': '$phi64.0', 'pair': '$64for_iter.1', 'indval': '$64for_iter.2', 'pred': '$64for_iter.3'}),), outgoing_phis={'$phi66.1': '$64for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={174: (), 66: ('$phi64.0', '$64for_iter.2')})
2024-07-15 06:11:42,579 DEBUG:block_infos State(pc_initial=66 nstack_initial=2):
AdaptBlockInfo(insts=((66, {'value': '$phi66.1'}), (68, {'res': '$shape68.2'}), (70, {'res': '$i70.3'}), (72, {'index': '$i70.3', 'target': '$shape68.2', 'res': '$72binary_subscr.4'}), (74, {}), (76, {}), (78, {}), (80, {}), (82, {'res': '$main_shape82.5'}), (84, {'idx': 0, 'res': '$84load_global.6'}), (86, {}), (88, {}), (90, {}), (92, {}), (94, {}), (96, {'res': '$main_shape96.8'}), (98, {}), (100, {}), (102, {'func': '$84load_global.6', 'args': ['$main_shape96.8'], 'kw_names': None, 'res': '$102call.9'}), (104, {}), (106, {}), (108, {}), (110, {}), (112, {'res': '$n112.10'}), (114, {'op': '-', 'lhs': '$102call.9', 'rhs': '$n112.10', 'res': '$binop_sub114.11'}), (116, {}), (118, {'res': '$i118.12'}), (120, {'op': '+', 'lhs': '$binop_sub114.11', 'rhs': '$i118.12', 'res': '$binop_add120.13'}), (122, {}), (124, {'index': '$binop_add120.13', 'target': '$main_shape82.5', 'res': '$124binary_subscr.14'}), (126, {}), (128, {}), (130, {}), (132, {}), (134, {'lhs': '$72binary_subscr.4', 'rhs': '$124binary_subscr.14', 'res': '$134compare_op.15'}), (136, {}), (138, {}), (140, {'pred': '$134compare_op.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={142: ('$phi66.0',), 172: ('$phi66.0',)})
2024-07-15 06:11:42,579 DEBUG:block_infos State(pc_initial=142 nstack_initial=1):
AdaptBlockInfo(insts=((142, {'idx': 2, 'res': '$142load_global.1'}), (144, {}), (146, {}), (148, {}), (150, {}), (152, {}), (154, {'res': '$const154.3'}), (156, {}), (158, {}), (160, {'func': '$142load_global.1', 'args': ['$const154.3'], 'kw_names': None, 'res': '$160call.4'}), (162, {}), (164, {}), (166, {}), (168, {}), (170, {'exc': '$160call.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-15 06:11:42,579 DEBUG:block_infos State(pc_initial=172 nstack_initial=1):
AdaptBlockInfo(insts=((172, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={64: ('$phi172.0',)})
2024-07-15 06:11:42,579 DEBUG:block_infos State(pc_initial=174 nstack_initial=0):
AdaptBlockInfo(insts=((174, {'res': '$const174.0'}), (176, {'retval': '$const174.0', 'castval': '$176return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-15 06:11:42,580 DEBUG:label 0:
    shape = arg(0, name=shape)               ['shape']
    main_shape = arg(1, name=main_shape)     ['main_shape']
    $4load_global.0 = global(len: <built-in function len>) ['$4load_global.0']
    n = call $4load_global.0(shape, func=$4load_global.0, args=[Var(shape, arrayobj.py:3535)], kws=(), vararg=None, varkwarg=None, target=None) ['$4load_global.0', 'n', 'shape']
    $34load_global.4 = global(range: <class 'range'>) ['$34load_global.4']
    $52call.7 = call $34load_global.4(n, func=$34load_global.4, args=[Var(n, arrayobj.py:3536)], kws=(), vararg=None, varkwarg=None, target=None) ['$34load_global.4', '$52call.7', 'n']
    $62get_iter.8 = getiter(value=$52call.7) ['$52call.7', '$62get_iter.8']
    $phi64.0 = $62get_iter.8                 ['$62get_iter.8', '$phi64.0']
    jump 64                                  []
label 64:
    $64for_iter.1 = iternext(value=$phi64.0) ['$64for_iter.1', '$phi64.0']
    $64for_iter.2 = pair_first(value=$64for_iter.1) ['$64for_iter.1', '$64for_iter.2']
    $64for_iter.3 = pair_second(value=$64for_iter.1) ['$64for_iter.1', '$64for_iter.3']
    $phi66.1 = $64for_iter.2                 ['$64for_iter.2', '$phi66.1']
    branch $64for_iter.3, 66, 174            ['$64for_iter.3']
label 66:
    i = $phi66.1                             ['$phi66.1', 'i']
    $72binary_subscr.4 = getitem(value=shape, index=i, fn=<built-in function getitem>) ['$72binary_subscr.4', 'i', 'shape']
    $84load_global.6 = global(len: <built-in function len>) ['$84load_global.6']
    $102call.9 = call $84load_global.6(main_shape, func=$84load_global.6, args=[Var(main_shape, arrayobj.py:3535)], kws=(), vararg=None, varkwarg=None, target=None) ['$102call.9', '$84load_global.6', 'main_shape']
    $binop_sub114.11 = $102call.9 - n        ['$102call.9', '$binop_sub114.11', 'n']
    $binop_add120.13 = $binop_sub114.11 + i  ['$binop_add120.13', '$binop_sub114.11', 'i']
    $124binary_subscr.14 = getitem(value=main_shape, index=$binop_add120.13, fn=<built-in function getitem>) ['$124binary_subscr.14', '$binop_add120.13', 'main_shape']
    $134compare_op.15 = $72binary_subscr.4 != $124binary_subscr.14 ['$124binary_subscr.14', '$134compare_op.15', '$72binary_subscr.4']
    bool140 = global(bool: <class 'bool'>)   ['bool140']
    $140pred = call bool140($134compare_op.15, func=bool140, args=(Var($134compare_op.15, arrayobj.py:3538),), kws=(), vararg=None, varkwarg=None, target=None) ['$134compare_op.15', '$140pred', 'bool140']
    branch $140pred, 142, 172                ['$140pred']
label 142:
    $142load_global.1 = global(ValueError: <class 'ValueError'>) ['$142load_global.1']
    $const154.3 = const(str, nditer(): operands could not be broadcast together) ['$const154.3']
    $160call.4 = call $142load_global.1($const154.3, func=$142load_global.1, args=[Var($const154.3, arrayobj.py:3539)], kws=(), vararg=None, varkwarg=None, target=None) ['$142load_global.1', '$160call.4', '$const154.3']
    raise $160call.4                         ['$160call.4']
label 172:
    jump 64                                  []
label 174:
    $const174.0 = const(NoneType, None)      ['$const174.0']
    $176return_value.1 = cast(value=$const174.0) ['$176return_value.1', '$const174.0']
    return $176return_value.1                ['$176return_value.1']

2024-07-15 06:11:42,590 DEBUG:==== SSA block analysis pass on 0
2024-07-15 06:11:42,591 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B7B27210>
2024-07-15 06:11:42,591 DEBUG:on stmt: shape = arg(0, name=shape)
2024-07-15 06:11:42,591 DEBUG:on stmt: main_shape = arg(1, name=main_shape)
2024-07-15 06:11:42,591 DEBUG:on stmt: $4load_global.0 = global(len: <built-in function len>)
2024-07-15 06:11:42,591 DEBUG:on stmt: n = const(int, 1)
2024-07-15 06:11:42,591 DEBUG:on stmt: $34load_global.4 = global(range: <class 'range'>)
2024-07-15 06:11:42,591 DEBUG:on stmt: $52call.7 = call $34load_global.4(n, func=$34load_global.4, args=[Var(n, arrayobj.py:3536)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,591 DEBUG:on stmt: $62get_iter.8 = getiter(value=$52call.7)
2024-07-15 06:11:42,591 DEBUG:on stmt: $phi64.0 = $62get_iter.8
2024-07-15 06:11:42,591 DEBUG:on stmt: jump 64
2024-07-15 06:11:42,591 DEBUG:==== SSA block analysis pass on 64
2024-07-15 06:11:42,591 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B7B27210>
2024-07-15 06:11:42,591 DEBUG:on stmt: $64for_iter.1 = iternext(value=$phi64.0)
2024-07-15 06:11:42,591 DEBUG:on stmt: $64for_iter.2 = pair_first(value=$64for_iter.1)
2024-07-15 06:11:42,591 DEBUG:on stmt: $64for_iter.3 = pair_second(value=$64for_iter.1)
2024-07-15 06:11:42,591 DEBUG:on stmt: $phi66.1 = $64for_iter.2
2024-07-15 06:11:42,591 DEBUG:on stmt: branch $64for_iter.3, 66, 174
2024-07-15 06:11:42,591 DEBUG:==== SSA block analysis pass on 66
2024-07-15 06:11:42,591 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B7B27210>
2024-07-15 06:11:42,591 DEBUG:on stmt: i = $phi66.1
2024-07-15 06:11:42,591 DEBUG:on stmt: $72binary_subscr.4 = getitem(value=shape, index=i, fn=<built-in function getitem>)
2024-07-15 06:11:42,591 DEBUG:on stmt: $84load_global.6 = global(len: <built-in function len>)
2024-07-15 06:11:42,591 DEBUG:on stmt: $102call.9 = const(int, 1)
2024-07-15 06:11:42,591 DEBUG:on stmt: $binop_sub114.11 = $102call.9 - n
2024-07-15 06:11:42,591 DEBUG:on stmt: $binop_add120.13 = $binop_sub114.11 + i
2024-07-15 06:11:42,591 DEBUG:on stmt: $124binary_subscr.14 = getitem(value=main_shape, index=$binop_add120.13, fn=<built-in function getitem>)
2024-07-15 06:11:42,591 DEBUG:on stmt: $134compare_op.15 = $72binary_subscr.4 != $124binary_subscr.14
2024-07-15 06:11:42,591 DEBUG:on stmt: bool140 = global(bool: <class 'bool'>)
2024-07-15 06:11:42,591 DEBUG:on stmt: $140pred = call bool140($134compare_op.15, func=bool140, args=(Var($134compare_op.15, arrayobj.py:3538),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,591 DEBUG:on stmt: branch $140pred, 142, 172
2024-07-15 06:11:42,592 DEBUG:==== SSA block analysis pass on 142
2024-07-15 06:11:42,592 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B7B27210>
2024-07-15 06:11:42,592 DEBUG:on stmt: $142load_global.1 = global(ValueError: <class 'ValueError'>)
2024-07-15 06:11:42,592 DEBUG:on stmt: $const154.3 = const(str, nditer(): operands could not be broadcast together)
2024-07-15 06:11:42,592 DEBUG:on stmt: $160call.4 = call $142load_global.1($const154.3, func=$142load_global.1, args=[Var($const154.3, arrayobj.py:3539)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,592 DEBUG:on stmt: <static> raise <class 'ValueError'>('nditer(): operands could not be broadcast together')
2024-07-15 06:11:42,592 DEBUG:==== SSA block analysis pass on 172
2024-07-15 06:11:42,592 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B7B27210>
2024-07-15 06:11:42,592 DEBUG:on stmt: jump 64
2024-07-15 06:11:42,592 DEBUG:==== SSA block analysis pass on 174
2024-07-15 06:11:42,592 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B7B27210>
2024-07-15 06:11:42,592 DEBUG:on stmt: $const174.0 = const(NoneType, None)
2024-07-15 06:11:42,592 DEBUG:on stmt: $176return_value.1 = cast(value=$const174.0)
2024-07-15 06:11:42,592 DEBUG:on stmt: return $176return_value.1
2024-07-15 06:11:42,592 DEBUG:defs defaultdict(<class 'list'>,
            {'$102call.9': [(<numba.core.ir.Assign object at 0x00000221B5E9B610>,
                             66)],
             '$124binary_subscr.14': [(<numba.core.ir.Assign object at 0x00000221B5E9BC90>,
                                       66)],
             '$134compare_op.15': [(<numba.core.ir.Assign object at 0x00000221B5E98650>,
                                    66)],
             '$140pred': [(<numba.core.ir.Assign object at 0x00000221B5E9A810>,
                           66)],
             '$142load_global.1': [(<numba.core.ir.Assign object at 0x00000221B5E9A710>,
                                    142)],
             '$160call.4': [(<numba.core.ir.Assign object at 0x00000221B5E99F50>,
                             142)],
             '$176return_value.1': [(<numba.core.ir.Assign object at 0x00000221B5EB0090>,
                                     174)],
             '$34load_global.4': [(<numba.core.ir.Assign object at 0x00000221B5E9A4D0>,
                                   0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x00000221B5EA7ED0>,
                                  0)],
             '$52call.7': [(<numba.core.ir.Assign object at 0x00000221B5E99F90>,
                            0)],
             '$62get_iter.8': [(<numba.core.ir.Assign object at 0x00000221B5E98150>,
                                0)],
             '$64for_iter.1': [(<numba.core.ir.Assign object at 0x00000221B5E98750>,
                                64)],
             '$64for_iter.2': [(<numba.core.ir.Assign object at 0x00000221B5E99250>,
                                64)],
             '$64for_iter.3': [(<numba.core.ir.Assign object at 0x00000221B5E99A90>,
                                64)],
             '$72binary_subscr.4': [(<numba.core.ir.Assign object at 0x00000221B5E987D0>,
                                     66)],
             '$84load_global.6': [(<numba.core.ir.Assign object at 0x00000221B5E99C10>,
                                   66)],
             '$binop_add120.13': [(<numba.core.ir.Assign object at 0x00000221B5E9AC10>,
                                   66)],
             '$binop_sub114.11': [(<numba.core.ir.Assign object at 0x00000221B5E9AF50>,
                                   66)],
             '$const154.3': [(<numba.core.ir.Assign object at 0x00000221B5E9AE90>,
                              142)],
             '$const174.0': [(<numba.core.ir.Assign object at 0x00000221B5E9AAD0>,
                              174)],
             '$phi64.0': [(<numba.core.ir.Assign object at 0x00000221B5E98490>,
                           0)],
             '$phi66.1': [(<numba.core.ir.Assign object at 0x00000221B5E98B90>,
                           64)],
             'bool140': [(<numba.core.ir.Assign object at 0x00000221B5E9B010>,
                          66)],
             'i': [(<numba.core.ir.Assign object at 0x00000221B5E98F10>, 66)],
             'main_shape': [(<numba.core.ir.Assign object at 0x00000221B5EA6510>,
                             0)],
             'n': [(<numba.core.ir.Assign object at 0x00000221B5E9AC90>, 0)],
             'shape': [(<numba.core.ir.Assign object at 0x00000221B5EA6A90>,
                        0)]})
2024-07-15 06:11:42,592 DEBUG:SSA violators <numba.core.utils.OrderedSet object at 0x00000221B7B27210>
2024-07-15 06:11:42,741 DEBUG:bytecode dump:
>          0	NOP(arg=None, lineno=437)
           2	COPY_FREE_VARS(arg=1, lineno=437)
           4	RESUME(arg=0, lineno=437)
           6	LOAD_DEREF(arg=3, lineno=440)
           8	STORE_FAST(arg=1, lineno=440)
          10	LOAD_GLOBAL(arg=1, lineno=441)
          22	LOAD_ATTR(arg=1, lineno=441)
          32	LOAD_FAST(arg=0, lineno=441)
          34	PRECALL(arg=1, lineno=441)
          38	CALL(arg=1, lineno=441)
          48	GET_ITER(arg=None, lineno=441)
>         50	FOR_ITER(arg=25, lineno=441)
          52	STORE_FAST(arg=2, lineno=441)
          54	LOAD_FAST(arg=1, lineno=442)
          56	LOAD_FAST(arg=2, lineno=442)
          58	LOAD_METHOD(arg=2, lineno=442)
          80	PRECALL(arg=0, lineno=442)
          84	CALL(arg=0, lineno=442)
          94	BINARY_OP(arg=13, lineno=442)
          98	STORE_FAST(arg=1, lineno=442)
         100	JUMP_BACKWARD(arg=26, lineno=442)
>        102	LOAD_FAST(arg=1, lineno=443)
         104	LOAD_FAST(arg=0, lineno=443)
         106	LOAD_ATTR(arg=3, lineno=443)
         116	BINARY_OP(arg=11, lineno=443)
         120	RETURN_VALUE(arg=None, lineno=443)
2024-07-15 06:11:42,742 DEBUG:pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-15 06:11:42,742 DEBUG:stack: []
2024-07-15 06:11:42,742 DEBUG:state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-15 06:11:42,742 DEBUG:dispatch pc=0, inst=NOP(arg=None, lineno=437)
2024-07-15 06:11:42,742 DEBUG:stack []
2024-07-15 06:11:42,742 DEBUG:dispatch pc=2, inst=COPY_FREE_VARS(arg=1, lineno=437)
2024-07-15 06:11:42,742 DEBUG:stack []
2024-07-15 06:11:42,742 DEBUG:dispatch pc=4, inst=RESUME(arg=0, lineno=437)
2024-07-15 06:11:42,742 DEBUG:stack []
2024-07-15 06:11:42,742 DEBUG:dispatch pc=6, inst=LOAD_DEREF(arg=3, lineno=440)
2024-07-15 06:11:42,742 DEBUG:stack []
2024-07-15 06:11:42,742 DEBUG:dispatch pc=8, inst=STORE_FAST(arg=1, lineno=440)
2024-07-15 06:11:42,742 DEBUG:stack ['$6load_deref.0']
2024-07-15 06:11:42,743 DEBUG:dispatch pc=10, inst=LOAD_GLOBAL(arg=1, lineno=441)
2024-07-15 06:11:42,743 DEBUG:stack []
2024-07-15 06:11:42,743 DEBUG:dispatch pc=22, inst=LOAD_ATTR(arg=1, lineno=441)
2024-07-15 06:11:42,743 DEBUG:stack ['$null$10.2', '$10load_global.1']
2024-07-15 06:11:42,743 DEBUG:dispatch pc=32, inst=LOAD_FAST(arg=0, lineno=441)
2024-07-15 06:11:42,743 DEBUG:stack ['$null$10.2', '$22load_attr.3']
2024-07-15 06:11:42,743 DEBUG:dispatch pc=34, inst=PRECALL(arg=1, lineno=441)
2024-07-15 06:11:42,743 DEBUG:stack ['$null$10.2', '$22load_attr.3', '$a32.4']
2024-07-15 06:11:42,743 DEBUG:dispatch pc=38, inst=CALL(arg=1, lineno=441)
2024-07-15 06:11:42,743 DEBUG:stack ['$null$10.2', '$22load_attr.3', '$a32.4']
2024-07-15 06:11:42,743 DEBUG:dispatch pc=48, inst=GET_ITER(arg=None, lineno=441)
2024-07-15 06:11:42,743 DEBUG:stack ['$38call.5']
2024-07-15 06:11:42,743 DEBUG:end state. edges=[Edge(pc=50, stack=('$48get_iter.6',), blockstack=(), npush=0)]
2024-07-15 06:11:42,744 DEBUG:pending: deque([State(pc_initial=50 nstack_initial=1)])
2024-07-15 06:11:42,744 DEBUG:stack: ['$phi50.0']
2024-07-15 06:11:42,744 DEBUG:state.pc_initial: State(pc_initial=50 nstack_initial=1)
2024-07-15 06:11:42,744 DEBUG:dispatch pc=50, inst=FOR_ITER(arg=25, lineno=441)
2024-07-15 06:11:42,744 DEBUG:stack ['$phi50.0']
2024-07-15 06:11:42,744 DEBUG:end state. edges=[Edge(pc=102, stack=(), blockstack=(), npush=0), Edge(pc=52, stack=('$phi50.0', '$50for_iter.2'), blockstack=(), npush=0)]
2024-07-15 06:11:42,744 DEBUG:pending: deque([State(pc_initial=102 nstack_initial=0), State(pc_initial=52 nstack_initial=2)])
2024-07-15 06:11:42,744 DEBUG:stack: []
2024-07-15 06:11:42,744 DEBUG:state.pc_initial: State(pc_initial=102 nstack_initial=0)
2024-07-15 06:11:42,744 DEBUG:dispatch pc=102, inst=LOAD_FAST(arg=1, lineno=443)
2024-07-15 06:11:42,744 DEBUG:stack []
2024-07-15 06:11:42,744 DEBUG:dispatch pc=104, inst=LOAD_FAST(arg=0, lineno=443)
2024-07-15 06:11:42,744 DEBUG:stack ['$c102.0']
2024-07-15 06:11:42,744 DEBUG:dispatch pc=106, inst=LOAD_ATTR(arg=3, lineno=443)
2024-07-15 06:11:42,744 DEBUG:stack ['$c102.0', '$a104.1']
2024-07-15 06:11:42,745 DEBUG:dispatch pc=116, inst=BINARY_OP(arg=11, lineno=443)
2024-07-15 06:11:42,745 DEBUG:stack ['$c102.0', '$106load_attr.2']
2024-07-15 06:11:42,745 DEBUG:dispatch pc=120, inst=RETURN_VALUE(arg=None, lineno=443)
2024-07-15 06:11:42,745 DEBUG:stack ['$binop_truediv116.3']
2024-07-15 06:11:42,745 DEBUG:end state. edges=[]
2024-07-15 06:11:42,745 DEBUG:pending: deque([State(pc_initial=52 nstack_initial=2)])
2024-07-15 06:11:42,745 DEBUG:stack: ['$phi52.0', '$phi52.1']
2024-07-15 06:11:42,745 DEBUG:state.pc_initial: State(pc_initial=52 nstack_initial=2)
2024-07-15 06:11:42,745 DEBUG:dispatch pc=52, inst=STORE_FAST(arg=2, lineno=441)
2024-07-15 06:11:42,745 DEBUG:stack ['$phi52.0', '$phi52.1']
2024-07-15 06:11:42,745 DEBUG:dispatch pc=54, inst=LOAD_FAST(arg=1, lineno=442)
2024-07-15 06:11:42,745 DEBUG:stack ['$phi52.0']
2024-07-15 06:11:42,745 DEBUG:dispatch pc=56, inst=LOAD_FAST(arg=2, lineno=442)
2024-07-15 06:11:42,745 DEBUG:stack ['$phi52.0', '$c54.2']
2024-07-15 06:11:42,745 DEBUG:dispatch pc=58, inst=LOAD_METHOD(arg=2, lineno=442)
2024-07-15 06:11:42,745 DEBUG:stack ['$phi52.0', '$c54.2', '$v56.3']
2024-07-15 06:11:42,746 DEBUG:dispatch pc=80, inst=PRECALL(arg=0, lineno=442)
2024-07-15 06:11:42,746 DEBUG:stack ['$phi52.0', '$c54.2', '$null$58.4', '$58load_method.5']
2024-07-15 06:11:42,746 DEBUG:dispatch pc=84, inst=CALL(arg=0, lineno=442)
2024-07-15 06:11:42,746 DEBUG:stack ['$phi52.0', '$c54.2', '$null$58.4', '$58load_method.5']
2024-07-15 06:11:42,746 DEBUG:dispatch pc=94, inst=BINARY_OP(arg=13, lineno=442)
2024-07-15 06:11:42,746 DEBUG:stack ['$phi52.0', '$c54.2', '$84call.6']
2024-07-15 06:11:42,746 DEBUG:dispatch pc=98, inst=STORE_FAST(arg=1, lineno=442)
2024-07-15 06:11:42,746 DEBUG:stack ['$phi52.0', '$binop_iadd94.7']
2024-07-15 06:11:42,746 DEBUG:dispatch pc=100, inst=JUMP_BACKWARD(arg=26, lineno=442)
2024-07-15 06:11:42,746 DEBUG:stack ['$phi52.0']
2024-07-15 06:11:42,746 DEBUG:end state. edges=[Edge(pc=50, stack=('$phi52.0',), blockstack=(), npush=0)]
2024-07-15 06:11:42,746 DEBUG:pending: deque([State(pc_initial=50 nstack_initial=1)])
2024-07-15 06:11:42,746 DEBUG:-------------------------Prune PHIs-------------------------
2024-07-15 06:11:42,746 DEBUG:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=50 nstack_initial=1): {'$phi50.0'},
             State(pc_initial=52 nstack_initial=2): {'$phi52.1'},
             State(pc_initial=102 nstack_initial=0): set()})
2024-07-15 06:11:42,746 DEBUG:defmap: {'$phi50.0': State(pc_initial=0 nstack_initial=0),
 '$phi52.1': State(pc_initial=50 nstack_initial=1)}
2024-07-15 06:11:42,746 DEBUG:phismap: defaultdict(<class 'set'>,
            {'$phi50.0': {('$48get_iter.6',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi52.0', State(pc_initial=52 nstack_initial=2))},
             '$phi52.0': {('$phi50.0', State(pc_initial=50 nstack_initial=1))},
             '$phi52.1': {('$50for_iter.2',
                           State(pc_initial=50 nstack_initial=1))}})
2024-07-15 06:11:42,746 DEBUG:changing phismap: defaultdict(<class 'set'>,
            {'$phi50.0': {('$48get_iter.6',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi50.0', State(pc_initial=50 nstack_initial=1))},
             '$phi52.0': {('$48get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.1': {('$50for_iter.2',
                           State(pc_initial=50 nstack_initial=1))}})
2024-07-15 06:11:42,747 DEBUG:changing phismap: defaultdict(<class 'set'>,
            {'$phi50.0': {('$48get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.0': {('$48get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.1': {('$50for_iter.2',
                           State(pc_initial=50 nstack_initial=1))}})
2024-07-15 06:11:42,747 DEBUG:changing phismap: defaultdict(<class 'set'>,
            {'$phi50.0': {('$48get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.0': {('$48get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.1': {('$50for_iter.2',
                           State(pc_initial=50 nstack_initial=1))}})
2024-07-15 06:11:42,747 DEBUG:keep phismap: {'$phi50.0': {('$48get_iter.6', State(pc_initial=0 nstack_initial=0))},
 '$phi52.1': {('$50for_iter.2', State(pc_initial=50 nstack_initial=1))}}
2024-07-15 06:11:42,747 DEBUG:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi50.0': '$48get_iter.6'},
             State(pc_initial=50 nstack_initial=1): {'$phi52.1': '$50for_iter.2'}})
2024-07-15 06:11:42,747 DEBUG:----------------------DONE Prune PHIs-----------------------
2024-07-15 06:11:42,747 DEBUG:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {}), (6, {'res': '$6load_deref.0'}), (8, {'value': '$6load_deref.0'}), (10, {'idx': 0, 'res': '$10load_global.1'}), (12, {}), (14, {}), (16, {}), (18, {}), (20, {}), (22, {'item': '$10load_global.1', 'res': '$22load_attr.3'}), (24, {}), (26, {}), (28, {}), (30, {}), (32, {'res': '$a32.4'}), (34, {}), (36, {}), (38, {'func': '$22load_attr.3', 'args': ['$a32.4'], 'kw_names': None, 'res': '$38call.5'}), (40, {}), (42, {}), (44, {}), (46, {}), (48, {'value': '$38call.5', 'res': '$48get_iter.6'})), outgoing_phis={'$phi50.0': '$48get_iter.6'}, blockstack=(), active_try_block=None, outgoing_edgepushed={50: ('$48get_iter.6',)})
2024-07-15 06:11:42,747 DEBUG:block_infos State(pc_initial=50 nstack_initial=1):
AdaptBlockInfo(insts=((50, {'iterator': '$phi50.0', 'pair': '$50for_iter.1', 'indval': '$50for_iter.2', 'pred': '$50for_iter.3'}),), outgoing_phis={'$phi52.1': '$50for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={102: (), 52: ('$phi50.0', '$50for_iter.2')})
2024-07-15 06:11:42,747 DEBUG:block_infos State(pc_initial=52 nstack_initial=2):
AdaptBlockInfo(insts=((52, {'value': '$phi52.1'}), (54, {'res': '$c54.2'}), (56, {'res': '$v56.3'}), (58, {'item': '$v56.3', 'res': '$58load_method.5'}), (60, {}), (62, {}), (64, {}), (66, {}), (68, {}), (70, {}), (72, {}), (74, {}), (76, {}), (78, {}), (80, {}), (82, {}), (84, {'func': '$58load_method.5', 'args': [], 'kw_names': None, 'res': '$84call.6'}), (86, {}), (88, {}), (90, {}), (92, {}), (94, {'op': '+=', 'lhs': '$c54.2', 'rhs': '$84call.6', 'res': '$binop_iadd94.7'}), (96, {}), (98, {'value': '$binop_iadd94.7'}), (100, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={50: ('$phi52.0',)})
2024-07-15 06:11:42,747 DEBUG:block_infos State(pc_initial=102 nstack_initial=0):
AdaptBlockInfo(insts=((102, {'res': '$c102.0'}), (104, {'res': '$a104.1'}), (106, {'item': '$a104.1', 'res': '$106load_attr.2'}), (108, {}), (110, {}), (112, {}), (114, {}), (116, {'op': '/', 'lhs': '$c102.0', 'rhs': '$106load_attr.2', 'res': '$binop_truediv116.3'}), (118, {}), (120, {'retval': '$binop_truediv116.3', 'castval': '$120return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-15 06:11:42,748 DEBUG:label 0:
    a = arg(0, name=a)                       ['a']
    c = freevar(acc_init: 0.0)               ['c']
    $10load_global.1 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$10load_global.1']
    $22load_attr.3 = getattr(value=$10load_global.1, attr=nditer) ['$10load_global.1', '$22load_attr.3']
    $38call.5 = call $22load_attr.3(a, func=$22load_attr.3, args=[Var(a, arraymath.py:437)], kws=(), vararg=None, varkwarg=None, target=None) ['$22load_attr.3', '$38call.5', 'a']
    $48get_iter.6 = getiter(value=$38call.5) ['$38call.5', '$48get_iter.6']
    $phi50.0 = $48get_iter.6                 ['$48get_iter.6', '$phi50.0']
    jump 50                                  []
label 50:
    $50for_iter.1 = iternext(value=$phi50.0) ['$50for_iter.1', '$phi50.0']
    $50for_iter.2 = pair_first(value=$50for_iter.1) ['$50for_iter.1', '$50for_iter.2']
    $50for_iter.3 = pair_second(value=$50for_iter.1) ['$50for_iter.1', '$50for_iter.3']
    $phi52.1 = $50for_iter.2                 ['$50for_iter.2', '$phi52.1']
    branch $50for_iter.3, 52, 102            ['$50for_iter.3']
label 52:
    v = $phi52.1                             ['$phi52.1', 'v']
    $58load_method.5 = getattr(value=v, attr=item) ['$58load_method.5', 'v']
    $84call.6 = call $58load_method.5(func=$58load_method.5, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$58load_method.5', '$84call.6']
    $binop_iadd94.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$84call.6, static_lhs=Undefined, static_rhs=Undefined) ['$84call.6', '$binop_iadd94.7', 'c']
    c = $binop_iadd94.7                      ['$binop_iadd94.7', 'c']
    jump 50                                  []
label 102:
    $106load_attr.2 = getattr(value=a, attr=size) ['$106load_attr.2', 'a']
    $binop_truediv116.3 = c / $106load_attr.2 ['$106load_attr.2', '$binop_truediv116.3', 'c']
    $120return_value.4 = cast(value=$binop_truediv116.3) ['$120return_value.4', '$binop_truediv116.3']
    return $120return_value.4                ['$120return_value.4']

2024-07-15 06:11:42,760 DEBUG:==== SSA block analysis pass on 0
2024-07-15 06:11:42,761 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B69B4910>
2024-07-15 06:11:42,761 DEBUG:on stmt: a = arg(0, name=a)
2024-07-15 06:11:42,761 DEBUG:on stmt: c = freevar(acc_init: 0.0)
2024-07-15 06:11:42,761 DEBUG:on stmt: $10load_global.1 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:42,761 DEBUG:on stmt: $22load_attr.3 = getattr(value=$10load_global.1, attr=nditer)
2024-07-15 06:11:42,761 DEBUG:on stmt: $38call.5 = call $22load_attr.3(a, func=$22load_attr.3, args=[Var(a, arraymath.py:437)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,761 DEBUG:on stmt: $48get_iter.6 = getiter(value=$38call.5)
2024-07-15 06:11:42,761 DEBUG:on stmt: $phi50.0 = $48get_iter.6
2024-07-15 06:11:42,761 DEBUG:on stmt: jump 50
2024-07-15 06:11:42,761 DEBUG:==== SSA block analysis pass on 50
2024-07-15 06:11:42,761 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B69B4910>
2024-07-15 06:11:42,761 DEBUG:on stmt: $50for_iter.1 = iternext(value=$phi50.0)
2024-07-15 06:11:42,761 DEBUG:on stmt: $50for_iter.2 = pair_first(value=$50for_iter.1)
2024-07-15 06:11:42,761 DEBUG:on stmt: $50for_iter.3 = pair_second(value=$50for_iter.1)
2024-07-15 06:11:42,761 DEBUG:on stmt: $phi52.1 = $50for_iter.2
2024-07-15 06:11:42,761 DEBUG:on stmt: branch $50for_iter.3, 52, 102
2024-07-15 06:11:42,761 DEBUG:==== SSA block analysis pass on 52
2024-07-15 06:11:42,761 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B69B4910>
2024-07-15 06:11:42,761 DEBUG:on stmt: v = $phi52.1
2024-07-15 06:11:42,761 DEBUG:on stmt: $58load_method.5 = getattr(value=v, attr=item)
2024-07-15 06:11:42,761 DEBUG:on stmt: $84call.6 = call $58load_method.5(func=$58load_method.5, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,761 DEBUG:on stmt: $binop_iadd94.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$84call.6, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:42,761 DEBUG:on stmt: c = $binop_iadd94.7
2024-07-15 06:11:42,761 DEBUG:on stmt: jump 50
2024-07-15 06:11:42,761 DEBUG:==== SSA block analysis pass on 102
2024-07-15 06:11:42,761 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B69B4910>
2024-07-15 06:11:42,761 DEBUG:on stmt: $106load_attr.2 = getattr(value=a, attr=size)
2024-07-15 06:11:42,761 DEBUG:on stmt: $binop_truediv116.3 = c / $106load_attr.2
2024-07-15 06:11:42,761 DEBUG:on stmt: $120return_value.4 = cast(value=$binop_truediv116.3)
2024-07-15 06:11:42,761 DEBUG:on stmt: return $120return_value.4
2024-07-15 06:11:42,762 DEBUG:defs defaultdict(<class 'list'>,
            {'$106load_attr.2': [(<numba.core.ir.Assign object at 0x00000221B6A3D390>,
                                  102)],
             '$10load_global.1': [(<numba.core.ir.Assign object at 0x00000221B6A3FF50>,
                                   0)],
             '$120return_value.4': [(<numba.core.ir.Assign object at 0x00000221B6A3D150>,
                                     102)],
             '$22load_attr.3': [(<numba.core.ir.Assign object at 0x00000221B6A3E610>,
                                 0)],
             '$38call.5': [(<numba.core.ir.Assign object at 0x00000221B6A3FB10>,
                            0)],
             '$48get_iter.6': [(<numba.core.ir.Assign object at 0x00000221B6A3F810>,
                                0)],
             '$50for_iter.1': [(<numba.core.ir.Assign object at 0x00000221B5A6F590>,
                                50)],
             '$50for_iter.2': [(<numba.core.ir.Assign object at 0x00000221B6A44B50>,
                                50)],
             '$50for_iter.3': [(<numba.core.ir.Assign object at 0x00000221B698F310>,
                                50)],
             '$58load_method.5': [(<numba.core.ir.Assign object at 0x00000221B6A3EE10>,
                                   52)],
             '$84call.6': [(<numba.core.ir.Assign object at 0x00000221B6A3E850>,
                            52)],
             '$binop_iadd94.7': [(<numba.core.ir.Assign object at 0x00000221B6A3E910>,
                                  52)],
             '$binop_truediv116.3': [(<numba.core.ir.Assign object at 0x00000221B6A3C390>,
                                      102)],
             '$phi50.0': [(<numba.core.ir.Assign object at 0x00000221B6A3FED0>,
                           0)],
             '$phi52.1': [(<numba.core.ir.Assign object at 0x00000221B7C18750>,
                           50)],
             'a': [(<numba.core.ir.Assign object at 0x00000221B69653D0>, 0)],
             'c': [(<numba.core.ir.Assign object at 0x00000221B7C14D10>, 0),
                   (<numba.core.ir.Assign object at 0x00000221B6A3E310>, 52)],
             'v': [(<numba.core.ir.Assign object at 0x00000221B6A3F850>, 52)]})
2024-07-15 06:11:42,762 DEBUG:SSA violators <numba.core.utils.OrderedSet object at 0x00000221B69B4910>
2024-07-15 06:11:42,762 DEBUG:Fix SSA violator on var c
2024-07-15 06:11:42,762 DEBUG:==== SSA block rewrite pass on 0
2024-07-15 06:11:42,762 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6985B90>
2024-07-15 06:11:42,762 DEBUG:on stmt: a = arg(0, name=a)
2024-07-15 06:11:42,762 DEBUG:on stmt: c = freevar(acc_init: 0.0)
2024-07-15 06:11:42,762 DEBUG:first assign: c
2024-07-15 06:11:42,762 DEBUG:replaced with: c = freevar(acc_init: 0.0)
2024-07-15 06:11:42,762 DEBUG:on stmt: $10load_global.1 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:42,762 DEBUG:on stmt: $22load_attr.3 = getattr(value=$10load_global.1, attr=nditer)
2024-07-15 06:11:42,762 DEBUG:on stmt: $38call.5 = call $22load_attr.3(a, func=$22load_attr.3, args=[Var(a, arraymath.py:437)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,762 DEBUG:on stmt: $48get_iter.6 = getiter(value=$38call.5)
2024-07-15 06:11:42,762 DEBUG:on stmt: $phi50.0 = $48get_iter.6
2024-07-15 06:11:42,763 DEBUG:on stmt: jump 50
2024-07-15 06:11:42,763 DEBUG:==== SSA block rewrite pass on 50
2024-07-15 06:11:42,763 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6985B90>
2024-07-15 06:11:42,763 DEBUG:on stmt: $50for_iter.1 = iternext(value=$phi50.0)
2024-07-15 06:11:42,763 DEBUG:on stmt: $50for_iter.2 = pair_first(value=$50for_iter.1)
2024-07-15 06:11:42,763 DEBUG:on stmt: $50for_iter.3 = pair_second(value=$50for_iter.1)
2024-07-15 06:11:42,763 DEBUG:on stmt: $phi52.1 = $50for_iter.2
2024-07-15 06:11:42,763 DEBUG:on stmt: branch $50for_iter.3, 52, 102
2024-07-15 06:11:42,763 DEBUG:==== SSA block rewrite pass on 52
2024-07-15 06:11:42,763 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6985B90>
2024-07-15 06:11:42,763 DEBUG:on stmt: v = $phi52.1
2024-07-15 06:11:42,763 DEBUG:on stmt: $58load_method.5 = getattr(value=v, attr=item)
2024-07-15 06:11:42,763 DEBUG:on stmt: $84call.6 = call $58load_method.5(func=$58load_method.5, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,763 DEBUG:on stmt: $binop_iadd94.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$84call.6, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:42,763 DEBUG:on stmt: c = $binop_iadd94.7
2024-07-15 06:11:42,763 DEBUG:replaced with: c.1 = $binop_iadd94.7
2024-07-15 06:11:42,763 DEBUG:on stmt: jump 50
2024-07-15 06:11:42,763 DEBUG:==== SSA block rewrite pass on 102
2024-07-15 06:11:42,763 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6985B90>
2024-07-15 06:11:42,763 DEBUG:on stmt: $106load_attr.2 = getattr(value=a, attr=size)
2024-07-15 06:11:42,763 DEBUG:on stmt: $binop_truediv116.3 = c / $106load_attr.2
2024-07-15 06:11:42,763 DEBUG:on stmt: $120return_value.4 = cast(value=$binop_truediv116.3)
2024-07-15 06:11:42,763 DEBUG:on stmt: return $120return_value.4
2024-07-15 06:11:42,763 DEBUG:Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x00000221B6985910>],
             52: [<numba.core.ir.Assign object at 0x00000221B6984F50>]})
2024-07-15 06:11:42,763 DEBUG:==== SSA block rewrite pass on 0
2024-07-15 06:11:42,763 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B6985AD0>
2024-07-15 06:11:42,763 DEBUG:on stmt: a = arg(0, name=a)
2024-07-15 06:11:42,763 DEBUG:on stmt: c = freevar(acc_init: 0.0)
2024-07-15 06:11:42,763 DEBUG:on stmt: $10load_global.1 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:42,763 DEBUG:on stmt: $22load_attr.3 = getattr(value=$10load_global.1, attr=nditer)
2024-07-15 06:11:42,763 DEBUG:on stmt: $38call.5 = call $22load_attr.3(a, func=$22load_attr.3, args=[Var(a, arraymath.py:437)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,763 DEBUG:on stmt: $48get_iter.6 = getiter(value=$38call.5)
2024-07-15 06:11:42,763 DEBUG:on stmt: $phi50.0 = $48get_iter.6
2024-07-15 06:11:42,763 DEBUG:on stmt: jump 50
2024-07-15 06:11:42,764 DEBUG:==== SSA block rewrite pass on 50
2024-07-15 06:11:42,764 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B6985AD0>
2024-07-15 06:11:42,764 DEBUG:on stmt: $50for_iter.1 = iternext(value=$phi50.0)
2024-07-15 06:11:42,764 DEBUG:on stmt: $50for_iter.2 = pair_first(value=$50for_iter.1)
2024-07-15 06:11:42,764 DEBUG:on stmt: $50for_iter.3 = pair_second(value=$50for_iter.1)
2024-07-15 06:11:42,764 DEBUG:on stmt: $phi52.1 = $50for_iter.2
2024-07-15 06:11:42,764 DEBUG:on stmt: branch $50for_iter.3, 52, 102
2024-07-15 06:11:42,764 DEBUG:==== SSA block rewrite pass on 52
2024-07-15 06:11:42,764 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B6985AD0>
2024-07-15 06:11:42,764 DEBUG:on stmt: v = $phi52.1
2024-07-15 06:11:42,764 DEBUG:on stmt: $58load_method.5 = getattr(value=v, attr=item)
2024-07-15 06:11:42,764 DEBUG:on stmt: $84call.6 = call $58load_method.5(func=$58load_method.5, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:42,764 DEBUG:on stmt: $binop_iadd94.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$84call.6, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:42,764 DEBUG:find_def var='c' stmt=$binop_iadd94.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$84call.6, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:42,764 DEBUG:find_def_from_top label 52
2024-07-15 06:11:42,764 DEBUG:idom 50 from label 52
2024-07-15 06:11:42,764 DEBUG:find_def_from_bottom label 50
2024-07-15 06:11:42,764 DEBUG:find_def_from_top label 50
2024-07-15 06:11:42,764 DEBUG:insert phi node c.2 = phi(incoming_values=[], incoming_blocks=[]) at 50
2024-07-15 06:11:42,764 DEBUG:find_def_from_bottom label 0
2024-07-15 06:11:42,764 DEBUG:incoming_def c = freevar(acc_init: 0.0)
2024-07-15 06:11:42,764 DEBUG:find_def_from_bottom label 52
2024-07-15 06:11:42,764 DEBUG:incoming_def c.1 = $binop_iadd94.7
2024-07-15 06:11:42,764 DEBUG:replaced with: $binop_iadd94.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c.2, rhs=$84call.6, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:42,764 DEBUG:on stmt: c.1 = $binop_iadd94.7
2024-07-15 06:11:42,764 DEBUG:on stmt: jump 50
2024-07-15 06:11:42,764 DEBUG:==== SSA block rewrite pass on 102
2024-07-15 06:11:42,764 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B6985AD0>
2024-07-15 06:11:42,764 DEBUG:on stmt: $106load_attr.2 = getattr(value=a, attr=size)
2024-07-15 06:11:42,765 DEBUG:on stmt: $binop_truediv116.3 = c / $106load_attr.2
2024-07-15 06:11:42,765 DEBUG:find_def var='c' stmt=$binop_truediv116.3 = c / $106load_attr.2
2024-07-15 06:11:42,765 DEBUG:find_def_from_top label 102
2024-07-15 06:11:42,765 DEBUG:idom 50 from label 102
2024-07-15 06:11:42,765 DEBUG:find_def_from_bottom label 50
2024-07-15 06:11:42,765 DEBUG:replaced with: $binop_truediv116.3 = c.2 / $106load_attr.2
2024-07-15 06:11:42,765 DEBUG:on stmt: $120return_value.4 = cast(value=$binop_truediv116.3)
2024-07-15 06:11:42,765 DEBUG:on stmt: return $120return_value.4
2024-07-15 06:11:43,219 DEBUG:bytecode dump:
>          0	NOP(arg=None, lineno=1209)
           2	RESUME(arg=0, lineno=1209)
           4	LOAD_FAST(arg=0, lineno=1221)
           6	LOAD_CONST(arg=1, lineno=1221)
           8	BINARY_SUBSCR(arg=None, lineno=1221)
          18	LOAD_GLOBAL(arg=1, lineno=1221)
          30	LOAD_ATTR(arg=1, lineno=1221)
          40	LOAD_FAST(arg=0, lineno=1221)
          42	LOAD_CONST(arg=2, lineno=1221)
          44	LOAD_GLOBAL(arg=5, lineno=1221)
          56	LOAD_FAST(arg=2, lineno=1221)
          58	LOAD_FAST(arg=0, lineno=1221)
          60	LOAD_ATTR(arg=3, lineno=1221)
          70	LOAD_CONST(arg=1, lineno=1221)
          72	BINARY_SUBSCR(arg=None, lineno=1221)
          82	PRECALL(arg=2, lineno=1221)
          86	CALL(arg=2, lineno=1221)
          96	BUILD_SLICE(arg=2, lineno=1221)
          98	BINARY_SUBSCR(arg=None, lineno=1221)
         108	PRECALL(arg=1, lineno=1221)
         112	CALL(arg=1, lineno=1221)
         122	COMPARE_OP(arg=5, lineno=1221)
         128	LOAD_FAST(arg=7, lineno=1221)
         130	LOAD_CONST(arg=1, lineno=1221)
         132	STORE_SUBSCR(arg=None, lineno=1221)
         136	LOAD_FAST(arg=7, lineno=1222)
         138	LOAD_CONST(arg=1, lineno=1222)
         140	COPY(arg=2, lineno=1222)
         142	COPY(arg=2, lineno=1222)
         144	BINARY_SUBSCR(arg=None, lineno=1222)
         154	LOAD_FAST(arg=0, lineno=1222)
         156	LOAD_CONST(arg=1, lineno=1222)
         158	BINARY_SUBSCR(arg=None, lineno=1222)
         168	LOAD_GLOBAL(arg=1, lineno=1222)
         180	LOAD_ATTR(arg=4, lineno=1222)
         190	LOAD_FAST(arg=0, lineno=1222)
         192	LOAD_CONST(arg=2, lineno=1222)
         194	LOAD_GLOBAL(arg=5, lineno=1222)
         206	LOAD_FAST(arg=4, lineno=1222)
         208	LOAD_FAST(arg=0, lineno=1222)
         210	LOAD_ATTR(arg=3, lineno=1222)
         220	LOAD_CONST(arg=1, lineno=1222)
         222	BINARY_SUBSCR(arg=None, lineno=1222)
         232	PRECALL(arg=2, lineno=1222)
         236	CALL(arg=2, lineno=1222)
         246	BUILD_SLICE(arg=2, lineno=1222)
         248	BINARY_SUBSCR(arg=None, lineno=1222)
         258	PRECALL(arg=1, lineno=1222)
         262	CALL(arg=1, lineno=1222)
         272	LOAD_FAST(arg=5, lineno=1222)
         274	BINARY_OP(arg=0, lineno=1222)
         278	COMPARE_OP(arg=5, lineno=1222)
         284	BINARY_OP(arg=14, lineno=1222)
         288	SWAP(arg=3, lineno=1222)
         290	SWAP(arg=2, lineno=1222)
         292	STORE_SUBSCR(arg=None, lineno=1222)
         296	LOAD_FAST(arg=7, lineno=1224)
         298	LOAD_CONST(arg=1, lineno=1224)
         300	BINARY_SUBSCR(arg=None, lineno=1224)
         310	POP_JUMP_FORWARD_IF_FALSE(arg=6, lineno=1224)
         312	LOAD_FAST(arg=6, lineno=1225)
         314	LOAD_CONST(arg=3, lineno=1225)
         316	BINARY_OP(arg=0, lineno=1225)
         320	STORE_FAST(arg=8, lineno=1225)
         322	JUMP_FORWARD(arg=2, lineno=1225)
>        324	LOAD_CONST(arg=3, lineno=1227)
         326	STORE_FAST(arg=8, lineno=1227)
>        328	LOAD_FAST(arg=8, lineno=1229)
         330	LOAD_FAST(arg=0, lineno=1229)
         332	LOAD_ATTR(arg=3, lineno=1229)
         342	LOAD_CONST(arg=1, lineno=1229)
         344	BINARY_SUBSCR(arg=None, lineno=1229)
         354	COMPARE_OP(arg=0, lineno=1229)
         360	POP_JUMP_FORWARD_IF_FALSE(arg=245, lineno=1229)
>        362	LOAD_GLOBAL(arg=1, lineno=1230)
         374	LOAD_ATTR(arg=1, lineno=1230)
         384	LOAD_FAST(arg=0, lineno=1230)
         386	LOAD_GLOBAL(arg=3, lineno=1230)
         398	LOAD_CONST(arg=1, lineno=1230)
         400	LOAD_FAST(arg=8, lineno=1230)
         402	LOAD_FAST(arg=1, lineno=1230)
         404	BINARY_OP(arg=10, lineno=1230)
         408	PRECALL(arg=2, lineno=1230)
         412	CALL(arg=2, lineno=1230)
         422	LOAD_GLOBAL(arg=5, lineno=1230)
         434	LOAD_FAST(arg=8, lineno=1230)
         436	LOAD_FAST(arg=2, lineno=1230)
         438	BINARY_OP(arg=0, lineno=1230)
         442	LOAD_FAST(arg=0, lineno=1230)
         444	LOAD_ATTR(arg=3, lineno=1230)
         454	LOAD_CONST(arg=1, lineno=1230)
         456	BINARY_SUBSCR(arg=None, lineno=1230)
         466	PRECALL(arg=2, lineno=1230)
         470	CALL(arg=2, lineno=1230)
         480	BUILD_SLICE(arg=2, lineno=1230)
         482	BINARY_SUBSCR(arg=None, lineno=1230)
         492	PRECALL(arg=1, lineno=1230)
         496	CALL(arg=1, lineno=1230)
         506	STORE_FAST(arg=9, lineno=1230)
         508	LOAD_FAST(arg=0, lineno=1233)
         510	LOAD_FAST(arg=8, lineno=1233)
         512	BINARY_SUBSCR(arg=None, lineno=1233)
         522	LOAD_FAST(arg=9, lineno=1233)
         524	COMPARE_OP(arg=2, lineno=1233)
         530	LOAD_FAST(arg=7, lineno=1233)
         532	LOAD_FAST(arg=8, lineno=1233)
         534	STORE_SUBSCR(arg=None, lineno=1233)
         538	LOAD_FAST(arg=7, lineno=1235)
         540	LOAD_FAST(arg=8, lineno=1235)
         542	BINARY_SUBSCR(arg=None, lineno=1235)
         552	POP_JUMP_FORWARD_IF_TRUE(arg=6, lineno=1235)
         554	LOAD_FAST(arg=8, lineno=1236)
         556	LOAD_CONST(arg=3, lineno=1236)
         558	BINARY_OP(arg=13, lineno=1236)
         562	STORE_FAST(arg=8, lineno=1236)
         564	JUMP_BACKWARD(arg=119, lineno=1237)
>        566	LOAD_GLOBAL(arg=1, lineno=1239)
         578	LOAD_ATTR(arg=4, lineno=1239)
         588	LOAD_FAST(arg=0, lineno=1239)
         590	LOAD_GLOBAL(arg=3, lineno=1239)
         602	LOAD_CONST(arg=1, lineno=1239)
         604	LOAD_FAST(arg=8, lineno=1239)
         606	LOAD_FAST(arg=3, lineno=1239)
         608	BINARY_OP(arg=10, lineno=1239)
         612	PRECALL(arg=2, lineno=1239)
         616	CALL(arg=2, lineno=1239)
         626	LOAD_GLOBAL(arg=5, lineno=1239)
         638	LOAD_FAST(arg=8, lineno=1239)
         640	LOAD_FAST(arg=4, lineno=1239)
         642	BINARY_OP(arg=0, lineno=1239)
         646	LOAD_FAST(arg=0, lineno=1239)
         648	LOAD_ATTR(arg=3, lineno=1239)
         658	LOAD_CONST(arg=1, lineno=1239)
         660	BINARY_SUBSCR(arg=None, lineno=1239)
         670	PRECALL(arg=2, lineno=1239)
         674	CALL(arg=2, lineno=1239)
         684	BUILD_SLICE(arg=2, lineno=1239)
         686	BINARY_SUBSCR(arg=None, lineno=1239)
         696	PRECALL(arg=1, lineno=1239)
         700	CALL(arg=1, lineno=1239)
         710	STORE_FAST(arg=10, lineno=1239)
         712	LOAD_FAST(arg=7, lineno=1240)
         714	LOAD_FAST(arg=8, lineno=1240)
         716	COPY(arg=2, lineno=1240)
         718	COPY(arg=2, lineno=1240)
         720	BINARY_SUBSCR(arg=None, lineno=1240)
         730	LOAD_FAST(arg=0, lineno=1240)
         732	LOAD_FAST(arg=8, lineno=1240)
         734	BINARY_SUBSCR(arg=None, lineno=1240)
         744	LOAD_FAST(arg=10, lineno=1240)
         746	LOAD_FAST(arg=5, lineno=1240)
         748	BINARY_OP(arg=0, lineno=1240)
         752	COMPARE_OP(arg=5, lineno=1240)
         758	BINARY_OP(arg=14, lineno=1240)
         762	SWAP(arg=3, lineno=1240)
         764	SWAP(arg=2, lineno=1240)
         766	STORE_SUBSCR(arg=None, lineno=1240)
         770	LOAD_FAST(arg=7, lineno=1242)
         772	LOAD_FAST(arg=8, lineno=1242)
         774	BINARY_SUBSCR(arg=None, lineno=1242)
         784	POP_JUMP_FORWARD_IF_TRUE(arg=6, lineno=1242)
         786	LOAD_FAST(arg=8, lineno=1243)
         788	LOAD_CONST(arg=3, lineno=1243)
         790	BINARY_OP(arg=13, lineno=1243)
         794	STORE_FAST(arg=8, lineno=1243)
         796	JUMP_BACKWARD(arg=235, lineno=1244)
>        798	LOAD_FAST(arg=8, lineno=1247)
         800	LOAD_FAST(arg=6, lineno=1247)
         802	LOAD_CONST(arg=3, lineno=1247)
         804	BINARY_OP(arg=0, lineno=1247)
         808	BINARY_OP(arg=13, lineno=1247)
         812	STORE_FAST(arg=8, lineno=1247)
         814	LOAD_FAST(arg=8, lineno=1229)
         816	LOAD_FAST(arg=0, lineno=1229)
         818	LOAD_ATTR(arg=3, lineno=1229)
         828	LOAD_CONST(arg=1, lineno=1229)
         830	BINARY_SUBSCR(arg=None, lineno=1229)
         840	COMPARE_OP(arg=0, lineno=1229)
         846	POP_JUMP_BACKWARD_IF_TRUE(arg=243, lineno=1229)
         848	LOAD_CONST(arg=2, lineno=1229)
         850	RETURN_VALUE(arg=None, lineno=1229)
>        852	LOAD_CONST(arg=2, lineno=1229)
         854	RETURN_VALUE(arg=None, lineno=1229)
2024-07-15 06:11:43,219 DEBUG:pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-15 06:11:43,219 DEBUG:stack: []
2024-07-15 06:11:43,219 DEBUG:state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-15 06:11:43,219 DEBUG:dispatch pc=0, inst=NOP(arg=None, lineno=1209)
2024-07-15 06:11:43,219 DEBUG:stack []
2024-07-15 06:11:43,219 DEBUG:dispatch pc=2, inst=RESUME(arg=0, lineno=1209)
2024-07-15 06:11:43,219 DEBUG:stack []
2024-07-15 06:11:43,219 DEBUG:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1221)
2024-07-15 06:11:43,219 DEBUG:stack []
2024-07-15 06:11:43,219 DEBUG:dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1221)
2024-07-15 06:11:43,219 DEBUG:stack ['$x4.0']
2024-07-15 06:11:43,219 DEBUG:dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1221)
2024-07-15 06:11:43,219 DEBUG:stack ['$x4.0', '$const6.1']
2024-07-15 06:11:43,219 DEBUG:dispatch pc=18, inst=LOAD_GLOBAL(arg=1, lineno=1221)
2024-07-15 06:11:43,219 DEBUG:stack ['$8binary_subscr.2']
2024-07-15 06:11:43,219 DEBUG:dispatch pc=30, inst=LOAD_ATTR(arg=1, lineno=1221)
2024-07-15 06:11:43,219 DEBUG:stack ['$8binary_subscr.2', '$null$18.4', '$18load_global.3']
2024-07-15 06:11:43,219 DEBUG:dispatch pc=40, inst=LOAD_FAST(arg=0, lineno=1221)
2024-07-15 06:11:43,219 DEBUG:stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5']
2024-07-15 06:11:43,219 DEBUG:dispatch pc=42, inst=LOAD_CONST(arg=2, lineno=1221)
2024-07-15 06:11:43,219 DEBUG:stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6']
2024-07-15 06:11:43,220 DEBUG:dispatch pc=44, inst=LOAD_GLOBAL(arg=5, lineno=1221)
2024-07-15 06:11:43,220 DEBUG:stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7']
2024-07-15 06:11:43,220 DEBUG:dispatch pc=56, inst=LOAD_FAST(arg=2, lineno=1221)
2024-07-15 06:11:43,220 DEBUG:stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7', '$null$44.9', '$44load_global.8']
2024-07-15 06:11:43,220 DEBUG:dispatch pc=58, inst=LOAD_FAST(arg=0, lineno=1221)
2024-07-15 06:11:43,220 DEBUG:stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7', '$null$44.9', '$44load_global.8', '$post_max56.10']
2024-07-15 06:11:43,220 DEBUG:dispatch pc=60, inst=LOAD_ATTR(arg=3, lineno=1221)
2024-07-15 06:11:43,220 DEBUG:stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7', '$null$44.9', '$44load_global.8', '$post_max56.10', '$x58.11']
2024-07-15 06:11:43,220 DEBUG:dispatch pc=70, inst=LOAD_CONST(arg=1, lineno=1221)
2024-07-15 06:11:43,220 DEBUG:stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7', '$null$44.9', '$44load_global.8', '$post_max56.10', '$60load_attr.12']
2024-07-15 06:11:43,220 DEBUG:dispatch pc=72, inst=BINARY_SUBSCR(arg=None, lineno=1221)
2024-07-15 06:11:43,220 DEBUG:stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7', '$null$44.9', '$44load_global.8', '$post_max56.10', '$60load_attr.12', '$const70.13']
2024-07-15 06:11:43,220 DEBUG:dispatch pc=82, inst=PRECALL(arg=2, lineno=1221)
2024-07-15 06:11:43,220 DEBUG:stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7', '$null$44.9', '$44load_global.8', '$post_max56.10', '$72binary_subscr.14']
2024-07-15 06:11:43,220 DEBUG:dispatch pc=86, inst=CALL(arg=2, lineno=1221)
2024-07-15 06:11:43,220 DEBUG:stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7', '$null$44.9', '$44load_global.8', '$post_max56.10', '$72binary_subscr.14']
2024-07-15 06:11:43,220 DEBUG:dispatch pc=96, inst=BUILD_SLICE(arg=2, lineno=1221)
2024-07-15 06:11:43,220 DEBUG:stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7', '$86call.15']
2024-07-15 06:11:43,220 DEBUG:dispatch pc=98, inst=BINARY_SUBSCR(arg=None, lineno=1221)
2024-07-15 06:11:43,220 DEBUG:stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$96build_slice.17']
2024-07-15 06:11:43,220 DEBUG:dispatch pc=108, inst=PRECALL(arg=1, lineno=1221)
2024-07-15 06:11:43,220 DEBUG:stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$98binary_subscr.18']
2024-07-15 06:11:43,220 DEBUG:dispatch pc=112, inst=CALL(arg=1, lineno=1221)
2024-07-15 06:11:43,220 DEBUG:stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$98binary_subscr.18']
2024-07-15 06:11:43,220 DEBUG:dispatch pc=122, inst=COMPARE_OP(arg=5, lineno=1221)
2024-07-15 06:11:43,220 DEBUG:stack ['$8binary_subscr.2', '$112call.19']
2024-07-15 06:11:43,220 DEBUG:dispatch pc=128, inst=LOAD_FAST(arg=7, lineno=1221)
2024-07-15 06:11:43,220 DEBUG:stack ['$122compare_op.20']
2024-07-15 06:11:43,220 DEBUG:dispatch pc=130, inst=LOAD_CONST(arg=1, lineno=1221)
2024-07-15 06:11:43,220 DEBUG:stack ['$122compare_op.20', '$peaks128.21']
2024-07-15 06:11:43,220 DEBUG:dispatch pc=132, inst=STORE_SUBSCR(arg=None, lineno=1221)
2024-07-15 06:11:43,221 DEBUG:stack ['$122compare_op.20', '$peaks128.21', '$const130.22']
2024-07-15 06:11:43,221 DEBUG:dispatch pc=136, inst=LOAD_FAST(arg=7, lineno=1222)
2024-07-15 06:11:43,221 DEBUG:stack []
2024-07-15 06:11:43,221 DEBUG:dispatch pc=138, inst=LOAD_CONST(arg=1, lineno=1222)
2024-07-15 06:11:43,221 DEBUG:stack ['$peaks136.23']
2024-07-15 06:11:43,221 DEBUG:dispatch pc=140, inst=COPY(arg=2, lineno=1222)
2024-07-15 06:11:43,221 DEBUG:stack ['$peaks136.23', '$const138.24']
2024-07-15 06:11:43,221 DEBUG:dispatch pc=142, inst=COPY(arg=2, lineno=1222)
2024-07-15 06:11:43,221 DEBUG:stack ['$peaks136.23', '$const138.24', '$peaks136.23']
2024-07-15 06:11:43,221 DEBUG:dispatch pc=144, inst=BINARY_SUBSCR(arg=None, lineno=1222)
2024-07-15 06:11:43,221 DEBUG:stack ['$peaks136.23', '$const138.24', '$peaks136.23', '$const138.24']
2024-07-15 06:11:43,221 DEBUG:dispatch pc=154, inst=LOAD_FAST(arg=0, lineno=1222)
2024-07-15 06:11:43,221 DEBUG:stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25']
2024-07-15 06:11:43,221 DEBUG:dispatch pc=156, inst=LOAD_CONST(arg=1, lineno=1222)
2024-07-15 06:11:43,221 DEBUG:stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$x154.26']
2024-07-15 06:11:43,221 DEBUG:dispatch pc=158, inst=BINARY_SUBSCR(arg=None, lineno=1222)
2024-07-15 06:11:43,221 DEBUG:stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$x154.26', '$const156.27']
2024-07-15 06:11:43,221 DEBUG:dispatch pc=168, inst=LOAD_GLOBAL(arg=1, lineno=1222)
2024-07-15 06:11:43,221 DEBUG:stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28']
2024-07-15 06:11:43,221 DEBUG:dispatch pc=180, inst=LOAD_ATTR(arg=4, lineno=1222)
2024-07-15 06:11:43,221 DEBUG:stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$168load_global.29']
2024-07-15 06:11:43,221 DEBUG:dispatch pc=190, inst=LOAD_FAST(arg=0, lineno=1222)
2024-07-15 06:11:43,221 DEBUG:stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31']
2024-07-15 06:11:43,221 DEBUG:dispatch pc=192, inst=LOAD_CONST(arg=2, lineno=1222)
2024-07-15 06:11:43,221 DEBUG:stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32']
2024-07-15 06:11:43,222 DEBUG:dispatch pc=194, inst=LOAD_GLOBAL(arg=5, lineno=1222)
2024-07-15 06:11:43,222 DEBUG:stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33']
2024-07-15 06:11:43,222 DEBUG:dispatch pc=206, inst=LOAD_FAST(arg=4, lineno=1222)
2024-07-15 06:11:43,222 DEBUG:stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33', '$null$194.35', '$194load_global.34']
2024-07-15 06:11:43,222 DEBUG:dispatch pc=208, inst=LOAD_FAST(arg=0, lineno=1222)
2024-07-15 06:11:43,222 DEBUG:stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33', '$null$194.35', '$194load_global.34', '$post_avg206.36']
2024-07-15 06:11:43,222 DEBUG:dispatch pc=210, inst=LOAD_ATTR(arg=3, lineno=1222)
2024-07-15 06:11:43,222 DEBUG:stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33', '$null$194.35', '$194load_global.34', '$post_avg206.36', '$x208.37']
2024-07-15 06:11:43,222 DEBUG:dispatch pc=220, inst=LOAD_CONST(arg=1, lineno=1222)
2024-07-15 06:11:43,222 DEBUG:stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33', '$null$194.35', '$194load_global.34', '$post_avg206.36', '$210load_attr.38']
2024-07-15 06:11:43,222 DEBUG:dispatch pc=222, inst=BINARY_SUBSCR(arg=None, lineno=1222)
2024-07-15 06:11:43,222 DEBUG:stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33', '$null$194.35', '$194load_global.34', '$post_avg206.36', '$210load_attr.38', '$const220.39']
2024-07-15 06:11:43,222 DEBUG:dispatch pc=232, inst=PRECALL(arg=2, lineno=1222)
2024-07-15 06:11:43,222 DEBUG:stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33', '$null$194.35', '$194load_global.34', '$post_avg206.36', '$222binary_subscr.40']
2024-07-15 06:11:43,222 DEBUG:dispatch pc=236, inst=CALL(arg=2, lineno=1222)
2024-07-15 06:11:43,222 DEBUG:stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33', '$null$194.35', '$194load_global.34', '$post_avg206.36', '$222binary_subscr.40']
2024-07-15 06:11:43,222 DEBUG:dispatch pc=246, inst=BUILD_SLICE(arg=2, lineno=1222)
2024-07-15 06:11:43,222 DEBUG:stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33', '$236call.41']
2024-07-15 06:11:43,222 DEBUG:dispatch pc=248, inst=BINARY_SUBSCR(arg=None, lineno=1222)
2024-07-15 06:11:43,222 DEBUG:stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$246build_slice.43']
2024-07-15 06:11:43,222 DEBUG:dispatch pc=258, inst=PRECALL(arg=1, lineno=1222)
2024-07-15 06:11:43,222 DEBUG:stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$248binary_subscr.44']
2024-07-15 06:11:43,223 DEBUG:dispatch pc=262, inst=CALL(arg=1, lineno=1222)
2024-07-15 06:11:43,223 DEBUG:stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$248binary_subscr.44']
2024-07-15 06:11:43,223 DEBUG:dispatch pc=272, inst=LOAD_FAST(arg=5, lineno=1222)
2024-07-15 06:11:43,223 DEBUG:stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$262call.45']
2024-07-15 06:11:43,223 DEBUG:dispatch pc=274, inst=BINARY_OP(arg=0, lineno=1222)
2024-07-15 06:11:43,223 DEBUG:stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$262call.45', '$delta272.46']
2024-07-15 06:11:43,223 DEBUG:dispatch pc=278, inst=COMPARE_OP(arg=5, lineno=1222)
2024-07-15 06:11:43,223 DEBUG:stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$binop_add274.47']
2024-07-15 06:11:43,223 DEBUG:dispatch pc=284, inst=BINARY_OP(arg=14, lineno=1222)
2024-07-15 06:11:43,223 DEBUG:stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$278compare_op.48']
2024-07-15 06:11:43,223 DEBUG:dispatch pc=288, inst=SWAP(arg=3, lineno=1222)
2024-07-15 06:11:43,223 DEBUG:stack ['$peaks136.23', '$const138.24', '$binop_iand284.49']
2024-07-15 06:11:43,223 DEBUG:dispatch pc=290, inst=SWAP(arg=2, lineno=1222)
2024-07-15 06:11:43,223 DEBUG:stack ['$binop_iand284.49', '$const138.24', '$peaks136.23']
2024-07-15 06:11:43,223 DEBUG:dispatch pc=292, inst=STORE_SUBSCR(arg=None, lineno=1222)
2024-07-15 06:11:43,223 DEBUG:stack ['$binop_iand284.49', '$peaks136.23', '$const138.24']
2024-07-15 06:11:43,223 DEBUG:dispatch pc=296, inst=LOAD_FAST(arg=7, lineno=1224)
2024-07-15 06:11:43,223 DEBUG:stack []
2024-07-15 06:11:43,223 DEBUG:dispatch pc=298, inst=LOAD_CONST(arg=1, lineno=1224)
2024-07-15 06:11:43,223 DEBUG:stack ['$peaks296.50']
2024-07-15 06:11:43,223 DEBUG:dispatch pc=300, inst=BINARY_SUBSCR(arg=None, lineno=1224)
2024-07-15 06:11:43,223 DEBUG:stack ['$peaks296.50', '$const298.51']
2024-07-15 06:11:43,224 DEBUG:dispatch pc=310, inst=POP_JUMP_FORWARD_IF_FALSE(arg=6, lineno=1224)
2024-07-15 06:11:43,224 DEBUG:stack ['$300binary_subscr.52']
2024-07-15 06:11:43,224 DEBUG:end state. edges=[Edge(pc=312, stack=(), blockstack=(), npush=0), Edge(pc=324, stack=(), blockstack=(), npush=0)]
2024-07-15 06:11:43,224 DEBUG:pending: deque([State(pc_initial=312 nstack_initial=0), State(pc_initial=324 nstack_initial=0)])
2024-07-15 06:11:43,224 DEBUG:stack: []
2024-07-15 06:11:43,224 DEBUG:state.pc_initial: State(pc_initial=312 nstack_initial=0)
2024-07-15 06:11:43,224 DEBUG:dispatch pc=312, inst=LOAD_FAST(arg=6, lineno=1225)
2024-07-15 06:11:43,224 DEBUG:stack []
2024-07-15 06:11:43,225 DEBUG:dispatch pc=314, inst=LOAD_CONST(arg=3, lineno=1225)
2024-07-15 06:11:43,225 DEBUG:stack ['$wait312.0']
2024-07-15 06:11:43,225 DEBUG:dispatch pc=316, inst=BINARY_OP(arg=0, lineno=1225)
2024-07-15 06:11:43,225 DEBUG:stack ['$wait312.0', '$const314.1']
2024-07-15 06:11:43,225 DEBUG:dispatch pc=320, inst=STORE_FAST(arg=8, lineno=1225)
2024-07-15 06:11:43,225 DEBUG:stack ['$binop_add316.2']
2024-07-15 06:11:43,225 DEBUG:dispatch pc=322, inst=JUMP_FORWARD(arg=2, lineno=1225)
2024-07-15 06:11:43,225 DEBUG:stack []
2024-07-15 06:11:43,225 DEBUG:end state. edges=[Edge(pc=328, stack=(), blockstack=(), npush=0)]
2024-07-15 06:11:43,225 DEBUG:pending: deque([State(pc_initial=324 nstack_initial=0), State(pc_initial=328 nstack_initial=0)])
2024-07-15 06:11:43,225 DEBUG:stack: []
2024-07-15 06:11:43,225 DEBUG:state.pc_initial: State(pc_initial=324 nstack_initial=0)
2024-07-15 06:11:43,225 DEBUG:dispatch pc=324, inst=LOAD_CONST(arg=3, lineno=1227)
2024-07-15 06:11:43,225 DEBUG:stack []
2024-07-15 06:11:43,225 DEBUG:dispatch pc=326, inst=STORE_FAST(arg=8, lineno=1227)
2024-07-15 06:11:43,225 DEBUG:stack ['$const324.0']
2024-07-15 06:11:43,225 DEBUG:end state. edges=[Edge(pc=328, stack=(), blockstack=(), npush=0)]
2024-07-15 06:11:43,225 DEBUG:pending: deque([State(pc_initial=328 nstack_initial=0), State(pc_initial=328 nstack_initial=0)])
2024-07-15 06:11:43,225 DEBUG:stack: []
2024-07-15 06:11:43,225 DEBUG:state.pc_initial: State(pc_initial=328 nstack_initial=0)
2024-07-15 06:11:43,225 DEBUG:dispatch pc=328, inst=LOAD_FAST(arg=8, lineno=1229)
2024-07-15 06:11:43,226 DEBUG:stack []
2024-07-15 06:11:43,226 DEBUG:dispatch pc=330, inst=LOAD_FAST(arg=0, lineno=1229)
2024-07-15 06:11:43,226 DEBUG:stack ['$n328.0']
2024-07-15 06:11:43,226 DEBUG:dispatch pc=332, inst=LOAD_ATTR(arg=3, lineno=1229)
2024-07-15 06:11:43,226 DEBUG:stack ['$n328.0', '$x330.1']
2024-07-15 06:11:43,226 DEBUG:dispatch pc=342, inst=LOAD_CONST(arg=1, lineno=1229)
2024-07-15 06:11:43,226 DEBUG:stack ['$n328.0', '$332load_attr.2']
2024-07-15 06:11:43,226 DEBUG:dispatch pc=344, inst=BINARY_SUBSCR(arg=None, lineno=1229)
2024-07-15 06:11:43,226 DEBUG:stack ['$n328.0', '$332load_attr.2', '$const342.3']
2024-07-15 06:11:43,226 DEBUG:dispatch pc=354, inst=COMPARE_OP(arg=0, lineno=1229)
2024-07-15 06:11:43,226 DEBUG:stack ['$n328.0', '$344binary_subscr.4']
2024-07-15 06:11:43,226 DEBUG:dispatch pc=360, inst=POP_JUMP_FORWARD_IF_FALSE(arg=245, lineno=1229)
2024-07-15 06:11:43,226 DEBUG:stack ['$354compare_op.5']
2024-07-15 06:11:43,226 DEBUG:end state. edges=[Edge(pc=362, stack=(), blockstack=(), npush=0), Edge(pc=852, stack=(), blockstack=(), npush=0)]
2024-07-15 06:11:43,226 DEBUG:pending: deque([State(pc_initial=328 nstack_initial=0), State(pc_initial=362 nstack_initial=0), State(pc_initial=852 nstack_initial=0)])
2024-07-15 06:11:43,226 DEBUG:pending: deque([State(pc_initial=362 nstack_initial=0), State(pc_initial=852 nstack_initial=0)])
2024-07-15 06:11:43,226 DEBUG:stack: []
2024-07-15 06:11:43,226 DEBUG:state.pc_initial: State(pc_initial=362 nstack_initial=0)
2024-07-15 06:11:43,226 DEBUG:dispatch pc=362, inst=LOAD_GLOBAL(arg=1, lineno=1230)
2024-07-15 06:11:43,226 DEBUG:stack []
2024-07-15 06:11:43,226 DEBUG:dispatch pc=374, inst=LOAD_ATTR(arg=1, lineno=1230)
2024-07-15 06:11:43,226 DEBUG:stack ['$null$362.1', '$362load_global.0']
2024-07-15 06:11:43,226 DEBUG:dispatch pc=384, inst=LOAD_FAST(arg=0, lineno=1230)
2024-07-15 06:11:43,226 DEBUG:stack ['$null$362.1', '$374load_attr.2']
2024-07-15 06:11:43,226 DEBUG:dispatch pc=386, inst=LOAD_GLOBAL(arg=3, lineno=1230)
2024-07-15 06:11:43,226 DEBUG:stack ['$null$362.1', '$374load_attr.2', '$x384.3']
2024-07-15 06:11:43,227 DEBUG:dispatch pc=398, inst=LOAD_CONST(arg=1, lineno=1230)
2024-07-15 06:11:43,227 DEBUG:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$null$386.5', '$386load_global.4']
2024-07-15 06:11:43,227 DEBUG:dispatch pc=400, inst=LOAD_FAST(arg=8, lineno=1230)
2024-07-15 06:11:43,227 DEBUG:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$null$386.5', '$386load_global.4', '$const398.6']
2024-07-15 06:11:43,227 DEBUG:dispatch pc=402, inst=LOAD_FAST(arg=1, lineno=1230)
2024-07-15 06:11:43,227 DEBUG:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$null$386.5', '$386load_global.4', '$const398.6', '$n400.7']
2024-07-15 06:11:43,227 DEBUG:dispatch pc=404, inst=BINARY_OP(arg=10, lineno=1230)
2024-07-15 06:11:43,227 DEBUG:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$null$386.5', '$386load_global.4', '$const398.6', '$n400.7', '$pre_max402.8']
2024-07-15 06:11:43,227 DEBUG:dispatch pc=408, inst=PRECALL(arg=2, lineno=1230)
2024-07-15 06:11:43,227 DEBUG:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$null$386.5', '$386load_global.4', '$const398.6', '$binop_sub404.9']
2024-07-15 06:11:43,227 DEBUG:dispatch pc=412, inst=CALL(arg=2, lineno=1230)
2024-07-15 06:11:43,227 DEBUG:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$null$386.5', '$386load_global.4', '$const398.6', '$binop_sub404.9']
2024-07-15 06:11:43,227 DEBUG:dispatch pc=422, inst=LOAD_GLOBAL(arg=5, lineno=1230)
2024-07-15 06:11:43,227 DEBUG:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10']
2024-07-15 06:11:43,227 DEBUG:dispatch pc=434, inst=LOAD_FAST(arg=8, lineno=1230)
2024-07-15 06:11:43,227 DEBUG:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11']
2024-07-15 06:11:43,227 DEBUG:dispatch pc=436, inst=LOAD_FAST(arg=2, lineno=1230)
2024-07-15 06:11:43,227 DEBUG:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$n434.13']
2024-07-15 06:11:43,227 DEBUG:dispatch pc=438, inst=BINARY_OP(arg=0, lineno=1230)
2024-07-15 06:11:43,227 DEBUG:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$n434.13', '$post_max436.14']
2024-07-15 06:11:43,227 DEBUG:dispatch pc=442, inst=LOAD_FAST(arg=0, lineno=1230)
2024-07-15 06:11:43,227 DEBUG:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$binop_add438.15']
2024-07-15 06:11:43,227 DEBUG:dispatch pc=444, inst=LOAD_ATTR(arg=3, lineno=1230)
2024-07-15 06:11:43,227 DEBUG:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$binop_add438.15', '$x442.16']
2024-07-15 06:11:43,227 DEBUG:dispatch pc=454, inst=LOAD_CONST(arg=1, lineno=1230)
2024-07-15 06:11:43,227 DEBUG:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$binop_add438.15', '$444load_attr.17']
2024-07-15 06:11:43,227 DEBUG:dispatch pc=456, inst=BINARY_SUBSCR(arg=None, lineno=1230)
2024-07-15 06:11:43,228 DEBUG:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$binop_add438.15', '$444load_attr.17', '$const454.18']
2024-07-15 06:11:43,228 DEBUG:dispatch pc=466, inst=PRECALL(arg=2, lineno=1230)
2024-07-15 06:11:43,228 DEBUG:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$binop_add438.15', '$456binary_subscr.19']
2024-07-15 06:11:43,228 DEBUG:dispatch pc=470, inst=CALL(arg=2, lineno=1230)
2024-07-15 06:11:43,228 DEBUG:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$binop_add438.15', '$456binary_subscr.19']
2024-07-15 06:11:43,228 DEBUG:dispatch pc=480, inst=BUILD_SLICE(arg=2, lineno=1230)
2024-07-15 06:11:43,228 DEBUG:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$470call.20']
2024-07-15 06:11:43,228 DEBUG:dispatch pc=482, inst=BINARY_SUBSCR(arg=None, lineno=1230)
2024-07-15 06:11:43,228 DEBUG:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$480build_slice.22']
2024-07-15 06:11:43,228 DEBUG:dispatch pc=492, inst=PRECALL(arg=1, lineno=1230)
2024-07-15 06:11:43,228 DEBUG:stack ['$null$362.1', '$374load_attr.2', '$482binary_subscr.23']
2024-07-15 06:11:43,228 DEBUG:dispatch pc=496, inst=CALL(arg=1, lineno=1230)
2024-07-15 06:11:43,228 DEBUG:stack ['$null$362.1', '$374load_attr.2', '$482binary_subscr.23']
2024-07-15 06:11:43,228 DEBUG:dispatch pc=506, inst=STORE_FAST(arg=9, lineno=1230)
2024-07-15 06:11:43,228 DEBUG:stack ['$496call.24']
2024-07-15 06:11:43,228 DEBUG:dispatch pc=508, inst=LOAD_FAST(arg=0, lineno=1233)
2024-07-15 06:11:43,228 DEBUG:stack []
2024-07-15 06:11:43,228 DEBUG:dispatch pc=510, inst=LOAD_FAST(arg=8, lineno=1233)
2024-07-15 06:11:43,228 DEBUG:stack ['$x508.25']
2024-07-15 06:11:43,228 DEBUG:dispatch pc=512, inst=BINARY_SUBSCR(arg=None, lineno=1233)
2024-07-15 06:11:43,228 DEBUG:stack ['$x508.25', '$n510.26']
2024-07-15 06:11:43,228 DEBUG:dispatch pc=522, inst=LOAD_FAST(arg=9, lineno=1233)
2024-07-15 06:11:43,228 DEBUG:stack ['$512binary_subscr.27']
2024-07-15 06:11:43,228 DEBUG:dispatch pc=524, inst=COMPARE_OP(arg=2, lineno=1233)
2024-07-15 06:11:43,228 DEBUG:stack ['$512binary_subscr.27', '$maxn522.28']
2024-07-15 06:11:43,228 DEBUG:dispatch pc=530, inst=LOAD_FAST(arg=7, lineno=1233)
2024-07-15 06:11:43,228 DEBUG:stack ['$524compare_op.29']
2024-07-15 06:11:43,229 DEBUG:dispatch pc=532, inst=LOAD_FAST(arg=8, lineno=1233)
2024-07-15 06:11:43,229 DEBUG:stack ['$524compare_op.29', '$peaks530.30']
2024-07-15 06:11:43,229 DEBUG:dispatch pc=534, inst=STORE_SUBSCR(arg=None, lineno=1233)
2024-07-15 06:11:43,229 DEBUG:stack ['$524compare_op.29', '$peaks530.30', '$n532.31']
2024-07-15 06:11:43,229 DEBUG:dispatch pc=538, inst=LOAD_FAST(arg=7, lineno=1235)
2024-07-15 06:11:43,229 DEBUG:stack []
2024-07-15 06:11:43,229 DEBUG:dispatch pc=540, inst=LOAD_FAST(arg=8, lineno=1235)
2024-07-15 06:11:43,229 DEBUG:stack ['$peaks538.32']
2024-07-15 06:11:43,229 DEBUG:dispatch pc=542, inst=BINARY_SUBSCR(arg=None, lineno=1235)
2024-07-15 06:11:43,229 DEBUG:stack ['$peaks538.32', '$n540.33']
2024-07-15 06:11:43,229 DEBUG:dispatch pc=552, inst=POP_JUMP_FORWARD_IF_TRUE(arg=6, lineno=1235)
2024-07-15 06:11:43,229 DEBUG:stack ['$542binary_subscr.34']
2024-07-15 06:11:43,229 DEBUG:end state. edges=[Edge(pc=554, stack=(), blockstack=(), npush=0), Edge(pc=566, stack=(), blockstack=(), npush=0)]
2024-07-15 06:11:43,229 DEBUG:pending: deque([State(pc_initial=852 nstack_initial=0), State(pc_initial=554 nstack_initial=0), State(pc_initial=566 nstack_initial=0)])
2024-07-15 06:11:43,229 DEBUG:stack: []
2024-07-15 06:11:43,229 DEBUG:state.pc_initial: State(pc_initial=852 nstack_initial=0)
2024-07-15 06:11:43,229 DEBUG:dispatch pc=852, inst=LOAD_CONST(arg=2, lineno=1229)
2024-07-15 06:11:43,229 DEBUG:stack []
2024-07-15 06:11:43,229 DEBUG:dispatch pc=854, inst=RETURN_VALUE(arg=None, lineno=1229)
2024-07-15 06:11:43,229 DEBUG:stack ['$const852.0']
2024-07-15 06:11:43,229 DEBUG:end state. edges=[]
2024-07-15 06:11:43,229 DEBUG:pending: deque([State(pc_initial=554 nstack_initial=0), State(pc_initial=566 nstack_initial=0)])
2024-07-15 06:11:43,229 DEBUG:stack: []
2024-07-15 06:11:43,229 DEBUG:state.pc_initial: State(pc_initial=554 nstack_initial=0)
2024-07-15 06:11:43,229 DEBUG:dispatch pc=554, inst=LOAD_FAST(arg=8, lineno=1236)
2024-07-15 06:11:43,229 DEBUG:stack []
2024-07-15 06:11:43,229 DEBUG:dispatch pc=556, inst=LOAD_CONST(arg=3, lineno=1236)
2024-07-15 06:11:43,229 DEBUG:stack ['$n554.0']
2024-07-15 06:11:43,229 DEBUG:dispatch pc=558, inst=BINARY_OP(arg=13, lineno=1236)
2024-07-15 06:11:43,229 DEBUG:stack ['$n554.0', '$const556.1']
2024-07-15 06:11:43,229 DEBUG:dispatch pc=562, inst=STORE_FAST(arg=8, lineno=1236)
2024-07-15 06:11:43,229 DEBUG:stack ['$binop_iadd558.2']
2024-07-15 06:11:43,229 DEBUG:dispatch pc=564, inst=JUMP_BACKWARD(arg=119, lineno=1237)
2024-07-15 06:11:43,230 DEBUG:stack []
2024-07-15 06:11:43,230 DEBUG:end state. edges=[Edge(pc=328, stack=(), blockstack=(), npush=0)]
2024-07-15 06:11:43,230 DEBUG:pending: deque([State(pc_initial=566 nstack_initial=0), State(pc_initial=328 nstack_initial=0)])
2024-07-15 06:11:43,230 DEBUG:stack: []
2024-07-15 06:11:43,230 DEBUG:state.pc_initial: State(pc_initial=566 nstack_initial=0)
2024-07-15 06:11:43,230 DEBUG:dispatch pc=566, inst=LOAD_GLOBAL(arg=1, lineno=1239)
2024-07-15 06:11:43,230 DEBUG:stack []
2024-07-15 06:11:43,230 DEBUG:dispatch pc=578, inst=LOAD_ATTR(arg=4, lineno=1239)
2024-07-15 06:11:43,230 DEBUG:stack ['$null$566.1', '$566load_global.0']
2024-07-15 06:11:43,230 DEBUG:dispatch pc=588, inst=LOAD_FAST(arg=0, lineno=1239)
2024-07-15 06:11:43,230 DEBUG:stack ['$null$566.1', '$578load_attr.2']
2024-07-15 06:11:43,230 DEBUG:dispatch pc=590, inst=LOAD_GLOBAL(arg=3, lineno=1239)
2024-07-15 06:11:43,230 DEBUG:stack ['$null$566.1', '$578load_attr.2', '$x588.3']
2024-07-15 06:11:43,230 DEBUG:dispatch pc=602, inst=LOAD_CONST(arg=1, lineno=1239)
2024-07-15 06:11:43,230 DEBUG:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$null$590.5', '$590load_global.4']
2024-07-15 06:11:43,230 DEBUG:dispatch pc=604, inst=LOAD_FAST(arg=8, lineno=1239)
2024-07-15 06:11:43,230 DEBUG:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$null$590.5', '$590load_global.4', '$const602.6']
2024-07-15 06:11:43,230 DEBUG:dispatch pc=606, inst=LOAD_FAST(arg=3, lineno=1239)
2024-07-15 06:11:43,230 DEBUG:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$null$590.5', '$590load_global.4', '$const602.6', '$n604.7']
2024-07-15 06:11:43,230 DEBUG:dispatch pc=608, inst=BINARY_OP(arg=10, lineno=1239)
2024-07-15 06:11:43,230 DEBUG:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$null$590.5', '$590load_global.4', '$const602.6', '$n604.7', '$pre_avg606.8']
2024-07-15 06:11:43,230 DEBUG:dispatch pc=612, inst=PRECALL(arg=2, lineno=1239)
2024-07-15 06:11:43,230 DEBUG:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$null$590.5', '$590load_global.4', '$const602.6', '$binop_sub608.9']
2024-07-15 06:11:43,230 DEBUG:dispatch pc=616, inst=CALL(arg=2, lineno=1239)
2024-07-15 06:11:43,230 DEBUG:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$null$590.5', '$590load_global.4', '$const602.6', '$binop_sub608.9']
2024-07-15 06:11:43,231 DEBUG:dispatch pc=626, inst=LOAD_GLOBAL(arg=5, lineno=1239)
2024-07-15 06:11:43,231 DEBUG:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10']
2024-07-15 06:11:43,231 DEBUG:dispatch pc=638, inst=LOAD_FAST(arg=8, lineno=1239)
2024-07-15 06:11:43,231 DEBUG:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11']
2024-07-15 06:11:43,231 DEBUG:dispatch pc=640, inst=LOAD_FAST(arg=4, lineno=1239)
2024-07-15 06:11:43,231 DEBUG:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$n638.13']
2024-07-15 06:11:43,231 DEBUG:dispatch pc=642, inst=BINARY_OP(arg=0, lineno=1239)
2024-07-15 06:11:43,231 DEBUG:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$n638.13', '$post_avg640.14']
2024-07-15 06:11:43,231 DEBUG:dispatch pc=646, inst=LOAD_FAST(arg=0, lineno=1239)
2024-07-15 06:11:43,231 DEBUG:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$binop_add642.15']
2024-07-15 06:11:43,231 DEBUG:dispatch pc=648, inst=LOAD_ATTR(arg=3, lineno=1239)
2024-07-15 06:11:43,231 DEBUG:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$binop_add642.15', '$x646.16']
2024-07-15 06:11:43,231 DEBUG:dispatch pc=658, inst=LOAD_CONST(arg=1, lineno=1239)
2024-07-15 06:11:43,231 DEBUG:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$binop_add642.15', '$648load_attr.17']
2024-07-15 06:11:43,231 DEBUG:dispatch pc=660, inst=BINARY_SUBSCR(arg=None, lineno=1239)
2024-07-15 06:11:43,231 DEBUG:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$binop_add642.15', '$648load_attr.17', '$const658.18']
2024-07-15 06:11:43,231 DEBUG:dispatch pc=670, inst=PRECALL(arg=2, lineno=1239)
2024-07-15 06:11:43,231 DEBUG:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$binop_add642.15', '$660binary_subscr.19']
2024-07-15 06:11:43,231 DEBUG:dispatch pc=674, inst=CALL(arg=2, lineno=1239)
2024-07-15 06:11:43,231 DEBUG:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$binop_add642.15', '$660binary_subscr.19']
2024-07-15 06:11:43,231 DEBUG:dispatch pc=684, inst=BUILD_SLICE(arg=2, lineno=1239)
2024-07-15 06:11:43,231 DEBUG:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$674call.20']
2024-07-15 06:11:43,231 DEBUG:dispatch pc=686, inst=BINARY_SUBSCR(arg=None, lineno=1239)
2024-07-15 06:11:43,231 DEBUG:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$684build_slice.22']
2024-07-15 06:11:43,231 DEBUG:dispatch pc=696, inst=PRECALL(arg=1, lineno=1239)
2024-07-15 06:11:43,231 DEBUG:stack ['$null$566.1', '$578load_attr.2', '$686binary_subscr.23']
2024-07-15 06:11:43,231 DEBUG:dispatch pc=700, inst=CALL(arg=1, lineno=1239)
2024-07-15 06:11:43,232 DEBUG:stack ['$null$566.1', '$578load_attr.2', '$686binary_subscr.23']
2024-07-15 06:11:43,232 DEBUG:dispatch pc=710, inst=STORE_FAST(arg=10, lineno=1239)
2024-07-15 06:11:43,232 DEBUG:stack ['$700call.24']
2024-07-15 06:11:43,232 DEBUG:dispatch pc=712, inst=LOAD_FAST(arg=7, lineno=1240)
2024-07-15 06:11:43,232 DEBUG:stack []
2024-07-15 06:11:43,232 DEBUG:dispatch pc=714, inst=LOAD_FAST(arg=8, lineno=1240)
2024-07-15 06:11:43,232 DEBUG:stack ['$peaks712.25']
2024-07-15 06:11:43,232 DEBUG:dispatch pc=716, inst=COPY(arg=2, lineno=1240)
2024-07-15 06:11:43,232 DEBUG:stack ['$peaks712.25', '$n714.26']
2024-07-15 06:11:43,232 DEBUG:dispatch pc=718, inst=COPY(arg=2, lineno=1240)
2024-07-15 06:11:43,232 DEBUG:stack ['$peaks712.25', '$n714.26', '$peaks712.25']
2024-07-15 06:11:43,232 DEBUG:dispatch pc=720, inst=BINARY_SUBSCR(arg=None, lineno=1240)
2024-07-15 06:11:43,232 DEBUG:stack ['$peaks712.25', '$n714.26', '$peaks712.25', '$n714.26']
2024-07-15 06:11:43,232 DEBUG:dispatch pc=730, inst=LOAD_FAST(arg=0, lineno=1240)
2024-07-15 06:11:43,232 DEBUG:stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27']
2024-07-15 06:11:43,232 DEBUG:dispatch pc=732, inst=LOAD_FAST(arg=8, lineno=1240)
2024-07-15 06:11:43,232 DEBUG:stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27', '$x730.28']
2024-07-15 06:11:43,232 DEBUG:dispatch pc=734, inst=BINARY_SUBSCR(arg=None, lineno=1240)
2024-07-15 06:11:43,232 DEBUG:stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27', '$x730.28', '$n732.29']
2024-07-15 06:11:43,232 DEBUG:dispatch pc=744, inst=LOAD_FAST(arg=10, lineno=1240)
2024-07-15 06:11:43,232 DEBUG:stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27', '$734binary_subscr.30']
2024-07-15 06:11:43,232 DEBUG:dispatch pc=746, inst=LOAD_FAST(arg=5, lineno=1240)
2024-07-15 06:11:43,232 DEBUG:stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27', '$734binary_subscr.30', '$avgn744.31']
2024-07-15 06:11:43,232 DEBUG:dispatch pc=748, inst=BINARY_OP(arg=0, lineno=1240)
2024-07-15 06:11:43,232 DEBUG:stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27', '$734binary_subscr.30', '$avgn744.31', '$delta746.32']
2024-07-15 06:11:43,232 DEBUG:dispatch pc=752, inst=COMPARE_OP(arg=5, lineno=1240)
2024-07-15 06:11:43,232 DEBUG:stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27', '$734binary_subscr.30', '$binop_add748.33']
2024-07-15 06:11:43,232 DEBUG:dispatch pc=758, inst=BINARY_OP(arg=14, lineno=1240)
2024-07-15 06:11:43,232 DEBUG:stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27', '$752compare_op.34']
2024-07-15 06:11:43,233 DEBUG:dispatch pc=762, inst=SWAP(arg=3, lineno=1240)
2024-07-15 06:11:43,233 DEBUG:stack ['$peaks712.25', '$n714.26', '$binop_iand758.35']
2024-07-15 06:11:43,233 DEBUG:dispatch pc=764, inst=SWAP(arg=2, lineno=1240)
2024-07-15 06:11:43,233 DEBUG:stack ['$binop_iand758.35', '$n714.26', '$peaks712.25']
2024-07-15 06:11:43,233 DEBUG:dispatch pc=766, inst=STORE_SUBSCR(arg=None, lineno=1240)
2024-07-15 06:11:43,233 DEBUG:stack ['$binop_iand758.35', '$peaks712.25', '$n714.26']
2024-07-15 06:11:43,233 DEBUG:dispatch pc=770, inst=LOAD_FAST(arg=7, lineno=1242)
2024-07-15 06:11:43,233 DEBUG:stack []
2024-07-15 06:11:43,233 DEBUG:dispatch pc=772, inst=LOAD_FAST(arg=8, lineno=1242)
2024-07-15 06:11:43,233 DEBUG:stack ['$peaks770.36']
2024-07-15 06:11:43,233 DEBUG:dispatch pc=774, inst=BINARY_SUBSCR(arg=None, lineno=1242)
2024-07-15 06:11:43,233 DEBUG:stack ['$peaks770.36', '$n772.37']
2024-07-15 06:11:43,233 DEBUG:dispatch pc=784, inst=POP_JUMP_FORWARD_IF_TRUE(arg=6, lineno=1242)
2024-07-15 06:11:43,233 DEBUG:stack ['$774binary_subscr.38']
2024-07-15 06:11:43,233 DEBUG:end state. edges=[Edge(pc=786, stack=(), blockstack=(), npush=0), Edge(pc=798, stack=(), blockstack=(), npush=0)]
2024-07-15 06:11:43,233 DEBUG:pending: deque([State(pc_initial=328 nstack_initial=0), State(pc_initial=786 nstack_initial=0), State(pc_initial=798 nstack_initial=0)])
2024-07-15 06:11:43,233 DEBUG:pending: deque([State(pc_initial=786 nstack_initial=0), State(pc_initial=798 nstack_initial=0)])
2024-07-15 06:11:43,233 DEBUG:stack: []
2024-07-15 06:11:43,233 DEBUG:state.pc_initial: State(pc_initial=786 nstack_initial=0)
2024-07-15 06:11:43,233 DEBUG:dispatch pc=786, inst=LOAD_FAST(arg=8, lineno=1243)
2024-07-15 06:11:43,233 DEBUG:stack []
2024-07-15 06:11:43,233 DEBUG:dispatch pc=788, inst=LOAD_CONST(arg=3, lineno=1243)
2024-07-15 06:11:43,233 DEBUG:stack ['$n786.0']
2024-07-15 06:11:43,233 DEBUG:dispatch pc=790, inst=BINARY_OP(arg=13, lineno=1243)
2024-07-15 06:11:43,233 DEBUG:stack ['$n786.0', '$const788.1']
2024-07-15 06:11:43,233 DEBUG:dispatch pc=794, inst=STORE_FAST(arg=8, lineno=1243)
2024-07-15 06:11:43,233 DEBUG:stack ['$binop_iadd790.2']
2024-07-15 06:11:43,233 DEBUG:dispatch pc=796, inst=JUMP_BACKWARD(arg=235, lineno=1244)
2024-07-15 06:11:43,233 DEBUG:stack []
2024-07-15 06:11:43,234 DEBUG:end state. edges=[Edge(pc=328, stack=(), blockstack=(), npush=0)]
2024-07-15 06:11:43,234 DEBUG:pending: deque([State(pc_initial=798 nstack_initial=0), State(pc_initial=328 nstack_initial=0)])
2024-07-15 06:11:43,234 DEBUG:stack: []
2024-07-15 06:11:43,234 DEBUG:state.pc_initial: State(pc_initial=798 nstack_initial=0)
2024-07-15 06:11:43,234 DEBUG:dispatch pc=798, inst=LOAD_FAST(arg=8, lineno=1247)
2024-07-15 06:11:43,234 DEBUG:stack []
2024-07-15 06:11:43,234 DEBUG:dispatch pc=800, inst=LOAD_FAST(arg=6, lineno=1247)
2024-07-15 06:11:43,234 DEBUG:stack ['$n798.0']
2024-07-15 06:11:43,234 DEBUG:dispatch pc=802, inst=LOAD_CONST(arg=3, lineno=1247)
2024-07-15 06:11:43,234 DEBUG:stack ['$n798.0', '$wait800.1']
2024-07-15 06:11:43,234 DEBUG:dispatch pc=804, inst=BINARY_OP(arg=0, lineno=1247)
2024-07-15 06:11:43,234 DEBUG:stack ['$n798.0', '$wait800.1', '$const802.2']
2024-07-15 06:11:43,234 DEBUG:dispatch pc=808, inst=BINARY_OP(arg=13, lineno=1247)
2024-07-15 06:11:43,234 DEBUG:stack ['$n798.0', '$binop_add804.3']
2024-07-15 06:11:43,234 DEBUG:dispatch pc=812, inst=STORE_FAST(arg=8, lineno=1247)
2024-07-15 06:11:43,234 DEBUG:stack ['$binop_iadd808.4']
2024-07-15 06:11:43,234 DEBUG:dispatch pc=814, inst=LOAD_FAST(arg=8, lineno=1229)
2024-07-15 06:11:43,234 DEBUG:stack []
2024-07-15 06:11:43,234 DEBUG:dispatch pc=816, inst=LOAD_FAST(arg=0, lineno=1229)
2024-07-15 06:11:43,234 DEBUG:stack ['$n814.5']
2024-07-15 06:11:43,234 DEBUG:dispatch pc=818, inst=LOAD_ATTR(arg=3, lineno=1229)
2024-07-15 06:11:43,234 DEBUG:stack ['$n814.5', '$x816.6']
2024-07-15 06:11:43,234 DEBUG:dispatch pc=828, inst=LOAD_CONST(arg=1, lineno=1229)
2024-07-15 06:11:43,234 DEBUG:stack ['$n814.5', '$818load_attr.7']
2024-07-15 06:11:43,234 DEBUG:dispatch pc=830, inst=BINARY_SUBSCR(arg=None, lineno=1229)
2024-07-15 06:11:43,234 DEBUG:stack ['$n814.5', '$818load_attr.7', '$const828.8']
2024-07-15 06:11:43,234 DEBUG:dispatch pc=840, inst=COMPARE_OP(arg=0, lineno=1229)
2024-07-15 06:11:43,234 DEBUG:stack ['$n814.5', '$830binary_subscr.9']
2024-07-15 06:11:43,234 DEBUG:dispatch pc=846, inst=POP_JUMP_BACKWARD_IF_TRUE(arg=243, lineno=1229)
2024-07-15 06:11:43,234 DEBUG:stack ['$840compare_op.10']
2024-07-15 06:11:43,235 DEBUG:end state. edges=[Edge(pc=848, stack=(), blockstack=(), npush=0), Edge(pc=362, stack=(), blockstack=(), npush=0)]
2024-07-15 06:11:43,235 DEBUG:pending: deque([State(pc_initial=328 nstack_initial=0), State(pc_initial=848 nstack_initial=0), State(pc_initial=362 nstack_initial=0)])
2024-07-15 06:11:43,235 DEBUG:pending: deque([State(pc_initial=848 nstack_initial=0), State(pc_initial=362 nstack_initial=0)])
2024-07-15 06:11:43,235 DEBUG:stack: []
2024-07-15 06:11:43,235 DEBUG:state.pc_initial: State(pc_initial=848 nstack_initial=0)
2024-07-15 06:11:43,235 DEBUG:dispatch pc=848, inst=LOAD_CONST(arg=2, lineno=1229)
2024-07-15 06:11:43,235 DEBUG:stack []
2024-07-15 06:11:43,235 DEBUG:dispatch pc=850, inst=RETURN_VALUE(arg=None, lineno=1229)
2024-07-15 06:11:43,235 DEBUG:stack ['$const848.0']
2024-07-15 06:11:43,235 DEBUG:end state. edges=[]
2024-07-15 06:11:43,235 DEBUG:pending: deque([State(pc_initial=362 nstack_initial=0)])
2024-07-15 06:11:43,235 DEBUG:-------------------------Prune PHIs-------------------------
2024-07-15 06:11:43,235 DEBUG:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=312 nstack_initial=0): set(),
             State(pc_initial=324 nstack_initial=0): set(),
             State(pc_initial=328 nstack_initial=0): set(),
             State(pc_initial=362 nstack_initial=0): set(),
             State(pc_initial=554 nstack_initial=0): set(),
             State(pc_initial=566 nstack_initial=0): set(),
             State(pc_initial=786 nstack_initial=0): set(),
             State(pc_initial=798 nstack_initial=0): set(),
             State(pc_initial=848 nstack_initial=0): set(),
             State(pc_initial=852 nstack_initial=0): set()})
2024-07-15 06:11:43,235 DEBUG:defmap: {}
2024-07-15 06:11:43,235 DEBUG:phismap: defaultdict(<class 'set'>, {})
2024-07-15 06:11:43,235 DEBUG:changing phismap: defaultdict(<class 'set'>, {})
2024-07-15 06:11:43,235 DEBUG:keep phismap: {}
2024-07-15 06:11:43,235 DEBUG:new_out: defaultdict(<class 'dict'>, {})
2024-07-15 06:11:43,235 DEBUG:----------------------DONE Prune PHIs-----------------------
2024-07-15 06:11:43,235 DEBUG:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1'}), (8, {'index': '$const6.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'idx': 0, 'res': '$18load_global.3'}), (20, {}), (22, {}), (24, {}), (26, {}), (28, {}), (30, {'item': '$18load_global.3', 'res': '$30load_attr.5'}), (32, {}), (34, {}), (36, {}), (38, {}), (40, {'res': '$x40.6'}), (42, {'res': '$const42.7'}), (44, {'idx': 2, 'res': '$44load_global.8'}), (46, {}), (48, {}), (50, {}), (52, {}), (54, {}), (56, {'res': '$post_max56.10'}), (58, {'res': '$x58.11'}), (60, {'item': '$x58.11', 'res': '$60load_attr.12'}), (62, {}), (64, {}), (66, {}), (68, {}), (70, {'res': '$const70.13'}), (72, {'index': '$const70.13', 'target': '$60load_attr.12', 'res': '$72binary_subscr.14'}), (74, {}), (76, {}), (78, {}), (80, {}), (82, {}), (84, {}), (86, {'func': '$44load_global.8', 'args': ['$post_max56.10', '$72binary_subscr.14'], 'kw_names': None, 'res': '$86call.15'}), (88, {}), (90, {}), (92, {}), (94, {}), (96, {'start': '$const42.7', 'stop': '$86call.15', 'step': None, 'res': '$96build_slice.17', 'slicevar': '$96build_slice.16'}), (98, {'index': '$96build_slice.17', 'target': '$x40.6', 'res': '$98binary_subscr.18'}), (100, {}), (102, {}), (104, {}), (106, {}), (108, {}), (110, {}), (112, {'func': '$30load_attr.5', 'args': ['$98binary_subscr.18'], 'kw_names': None, 'res': '$112call.19'}), (114, {}), (116, {}), (118, {}), (120, {}), (122, {'lhs': '$8binary_subscr.2', 'rhs': '$112call.19', 'res': '$122compare_op.20'}), (124, {}), (126, {}), (128, {'res': '$peaks128.21'}), (130, {'res': '$const130.22'}), (132, {'target': '$peaks128.21', 'index': '$const130.22', 'value': '$122compare_op.20'}), (134, {}), (136, {'res': '$peaks136.23'}), (138, {'res': '$const138.24'}), (144, {'index': '$const138.24', 'target': '$peaks136.23', 'res': '$144binary_subscr.25'}), (146, {}), (148, {}), (150, {}), (152, {}), (154, {'res': '$x154.26'}), (156, {'res': '$const156.27'}), (158, {'index': '$const156.27', 'target': '$x154.26', 'res': '$158binary_subscr.28'}), (160, {}), (162, {}), (164, {}), (166, {}), (168, {'idx': 0, 'res': '$168load_global.29'}), (170, {}), (172, {}), (174, {}), (176, {}), (178, {}), (180, {'item': '$168load_global.29', 'res': '$180load_attr.31'}), (182, {}), (184, {}), (186, {}), (188, {}), (190, {'res': '$x190.32'}), (192, {'res': '$const192.33'}), (194, {'idx': 2, 'res': '$194load_global.34'}), (196, {}), (198, {}), (200, {}), (202, {}), (204, {}), (206, {'res': '$post_avg206.36'}), (208, {'res': '$x208.37'}), (210, {'item': '$x208.37', 'res': '$210load_attr.38'}), (212, {}), (214, {}), (216, {}), (218, {}), (220, {'res': '$const220.39'}), (222, {'index': '$const220.39', 'target': '$210load_attr.38', 'res': '$222binary_subscr.40'}), (224, {}), (226, {}), (228, {}), (230, {}), (232, {}), (234, {}), (236, {'func': '$194load_global.34', 'args': ['$post_avg206.36', '$222binary_subscr.40'], 'kw_names': None, 'res': '$236call.41'}), (238, {}), (240, {}), (242, {}), (244, {}), (246, {'start': '$const192.33', 'stop': '$236call.41', 'step': None, 'res': '$246build_slice.43', 'slicevar': '$246build_slice.42'}), (248, {'index': '$246build_slice.43', 'target': '$x190.32', 'res': '$248binary_subscr.44'}), (250, {}), (252, {}), (254, {}), (256, {}), (258, {}), (260, {}), (262, {'func': '$180load_attr.31', 'args': ['$248binary_subscr.44'], 'kw_names': None, 'res': '$262call.45'}), (264, {}), (266, {}), (268, {}), (270, {}), (272, {'res': '$delta272.46'}), (274, {'op': '+', 'lhs': '$262call.45', 'rhs': '$delta272.46', 'res': '$binop_add274.47'}), (276, {}), (278, {'lhs': '$158binary_subscr.28', 'rhs': '$binop_add274.47', 'res': '$278compare_op.48'}), (280, {}), (282, {}), (284, {'op': '&=', 'lhs': '$144binary_subscr.25', 'rhs': '$278compare_op.48', 'res': '$binop_iand284.49'}), (286, {}), (292, {'target': '$peaks136.23', 'index': '$const138.24', 'value': '$binop_iand284.49'}), (294, {}), (296, {'res': '$peaks296.50'}), (298, {'res': '$const298.51'}), (300, {'index': '$const298.51', 'target': '$peaks296.50', 'res': '$300binary_subscr.52'}), (302, {}), (304, {}), (306, {}), (308, {}), (310, {'pred': '$300binary_subscr.52'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={312: (), 324: ()})
2024-07-15 06:11:43,235 DEBUG:block_infos State(pc_initial=312 nstack_initial=0):
AdaptBlockInfo(insts=((312, {'res': '$wait312.0'}), (314, {'res': '$const314.1'}), (316, {'op': '+', 'lhs': '$wait312.0', 'rhs': '$const314.1', 'res': '$binop_add316.2'}), (318, {}), (320, {'value': '$binop_add316.2'}), (322, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={328: ()})
2024-07-15 06:11:43,236 DEBUG:block_infos State(pc_initial=324 nstack_initial=0):
AdaptBlockInfo(insts=((324, {'res': '$const324.0'}), (326, {'value': '$const324.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={328: ()})
2024-07-15 06:11:43,236 DEBUG:block_infos State(pc_initial=328 nstack_initial=0):
AdaptBlockInfo(insts=((328, {'res': '$n328.0'}), (330, {'res': '$x330.1'}), (332, {'item': '$x330.1', 'res': '$332load_attr.2'}), (334, {}), (336, {}), (338, {}), (340, {}), (342, {'res': '$const342.3'}), (344, {'index': '$const342.3', 'target': '$332load_attr.2', 'res': '$344binary_subscr.4'}), (346, {}), (348, {}), (350, {}), (352, {}), (354, {'lhs': '$n328.0', 'rhs': '$344binary_subscr.4', 'res': '$354compare_op.5'}), (356, {}), (358, {}), (360, {'pred': '$354compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={362: (), 852: ()})
2024-07-15 06:11:43,236 DEBUG:block_infos State(pc_initial=362 nstack_initial=0):
AdaptBlockInfo(insts=((362, {'idx': 0, 'res': '$362load_global.0'}), (364, {}), (366, {}), (368, {}), (370, {}), (372, {}), (374, {'item': '$362load_global.0', 'res': '$374load_attr.2'}), (376, {}), (378, {}), (380, {}), (382, {}), (384, {'res': '$x384.3'}), (386, {'idx': 1, 'res': '$386load_global.4'}), (388, {}), (390, {}), (392, {}), (394, {}), (396, {}), (398, {'res': '$const398.6'}), (400, {'res': '$n400.7'}), (402, {'res': '$pre_max402.8'}), (404, {'op': '-', 'lhs': '$n400.7', 'rhs': '$pre_max402.8', 'res': '$binop_sub404.9'}), (406, {}), (408, {}), (410, {}), (412, {'func': '$386load_global.4', 'args': ['$const398.6', '$binop_sub404.9'], 'kw_names': None, 'res': '$412call.10'}), (414, {}), (416, {}), (418, {}), (420, {}), (422, {'idx': 2, 'res': '$422load_global.11'}), (424, {}), (426, {}), (428, {}), (430, {}), (432, {}), (434, {'res': '$n434.13'}), (436, {'res': '$post_max436.14'}), (438, {'op': '+', 'lhs': '$n434.13', 'rhs': '$post_max436.14', 'res': '$binop_add438.15'}), (440, {}), (442, {'res': '$x442.16'}), (444, {'item': '$x442.16', 'res': '$444load_attr.17'}), (446, {}), (448, {}), (450, {}), (452, {}), (454, {'res': '$const454.18'}), (456, {'index': '$const454.18', 'target': '$444load_attr.17', 'res': '$456binary_subscr.19'}), (458, {}), (460, {}), (462, {}), (464, {}), (466, {}), (468, {}), (470, {'func': '$422load_global.11', 'args': ['$binop_add438.15', '$456binary_subscr.19'], 'kw_names': None, 'res': '$470call.20'}), (472, {}), (474, {}), (476, {}), (478, {}), (480, {'start': '$412call.10', 'stop': '$470call.20', 'step': None, 'res': '$480build_slice.22', 'slicevar': '$480build_slice.21'}), (482, {'index': '$480build_slice.22', 'target': '$x384.3', 'res': '$482binary_subscr.23'}), (484, {}), (486, {}), (488, {}), (490, {}), (492, {}), (494, {}), (496, {'func': '$374load_attr.2', 'args': ['$482binary_subscr.23'], 'kw_names': None, 'res': '$496call.24'}), (498, {}), (500, {}), (502, {}), (504, {}), (506, {'value': '$496call.24'}), (508, {'res': '$x508.25'}), (510, {'res': '$n510.26'}), (512, {'index': '$n510.26', 'target': '$x508.25', 'res': '$512binary_subscr.27'}), (514, {}), (516, {}), (518, {}), (520, {}), (522, {'res': '$maxn522.28'}), (524, {'lhs': '$512binary_subscr.27', 'rhs': '$maxn522.28', 'res': '$524compare_op.29'}), (526, {}), (528, {}), (530, {'res': '$peaks530.30'}), (532, {'res': '$n532.31'}), (534, {'target': '$peaks530.30', 'index': '$n532.31', 'value': '$524compare_op.29'}), (536, {}), (538, {'res': '$peaks538.32'}), (540, {'res': '$n540.33'}), (542, {'index': '$n540.33', 'target': '$peaks538.32', 'res': '$542binary_subscr.34'}), (544, {}), (546, {}), (548, {}), (550, {}), (552, {'pred': '$542binary_subscr.34'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={554: (), 566: ()})
2024-07-15 06:11:43,236 DEBUG:block_infos State(pc_initial=554 nstack_initial=0):
AdaptBlockInfo(insts=((554, {'res': '$n554.0'}), (556, {'res': '$const556.1'}), (558, {'op': '+=', 'lhs': '$n554.0', 'rhs': '$const556.1', 'res': '$binop_iadd558.2'}), (560, {}), (562, {'value': '$binop_iadd558.2'}), (564, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={328: ()})
2024-07-15 06:11:43,236 DEBUG:block_infos State(pc_initial=566 nstack_initial=0):
AdaptBlockInfo(insts=((566, {'idx': 0, 'res': '$566load_global.0'}), (568, {}), (570, {}), (572, {}), (574, {}), (576, {}), (578, {'item': '$566load_global.0', 'res': '$578load_attr.2'}), (580, {}), (582, {}), (584, {}), (586, {}), (588, {'res': '$x588.3'}), (590, {'idx': 1, 'res': '$590load_global.4'}), (592, {}), (594, {}), (596, {}), (598, {}), (600, {}), (602, {'res': '$const602.6'}), (604, {'res': '$n604.7'}), (606, {'res': '$pre_avg606.8'}), (608, {'op': '-', 'lhs': '$n604.7', 'rhs': '$pre_avg606.8', 'res': '$binop_sub608.9'}), (610, {}), (612, {}), (614, {}), (616, {'func': '$590load_global.4', 'args': ['$const602.6', '$binop_sub608.9'], 'kw_names': None, 'res': '$616call.10'}), (618, {}), (620, {}), (622, {}), (624, {}), (626, {'idx': 2, 'res': '$626load_global.11'}), (628, {}), (630, {}), (632, {}), (634, {}), (636, {}), (638, {'res': '$n638.13'}), (640, {'res': '$post_avg640.14'}), (642, {'op': '+', 'lhs': '$n638.13', 'rhs': '$post_avg640.14', 'res': '$binop_add642.15'}), (644, {}), (646, {'res': '$x646.16'}), (648, {'item': '$x646.16', 'res': '$648load_attr.17'}), (650, {}), (652, {}), (654, {}), (656, {}), (658, {'res': '$const658.18'}), (660, {'index': '$const658.18', 'target': '$648load_attr.17', 'res': '$660binary_subscr.19'}), (662, {}), (664, {}), (666, {}), (668, {}), (670, {}), (672, {}), (674, {'func': '$626load_global.11', 'args': ['$binop_add642.15', '$660binary_subscr.19'], 'kw_names': None, 'res': '$674call.20'}), (676, {}), (678, {}), (680, {}), (682, {}), (684, {'start': '$616call.10', 'stop': '$674call.20', 'step': None, 'res': '$684build_slice.22', 'slicevar': '$684build_slice.21'}), (686, {'index': '$684build_slice.22', 'target': '$x588.3', 'res': '$686binary_subscr.23'}), (688, {}), (690, {}), (692, {}), (694, {}), (696, {}), (698, {}), (700, {'func': '$578load_attr.2', 'args': ['$686binary_subscr.23'], 'kw_names': None, 'res': '$700call.24'}), (702, {}), (704, {}), (706, {}), (708, {}), (710, {'value': '$700call.24'}), (712, {'res': '$peaks712.25'}), (714, {'res': '$n714.26'}), (720, {'index': '$n714.26', 'target': '$peaks712.25', 'res': '$720binary_subscr.27'}), (722, {}), (724, {}), (726, {}), (728, {}), (730, {'res': '$x730.28'}), (732, {'res': '$n732.29'}), (734, {'index': '$n732.29', 'target': '$x730.28', 'res': '$734binary_subscr.30'}), (736, {}), (738, {}), (740, {}), (742, {}), (744, {'res': '$avgn744.31'}), (746, {'res': '$delta746.32'}), (748, {'op': '+', 'lhs': '$avgn744.31', 'rhs': '$delta746.32', 'res': '$binop_add748.33'}), (750, {}), (752, {'lhs': '$734binary_subscr.30', 'rhs': '$binop_add748.33', 'res': '$752compare_op.34'}), (754, {}), (756, {}), (758, {'op': '&=', 'lhs': '$720binary_subscr.27', 'rhs': '$752compare_op.34', 'res': '$binop_iand758.35'}), (760, {}), (766, {'target': '$peaks712.25', 'index': '$n714.26', 'value': '$binop_iand758.35'}), (768, {}), (770, {'res': '$peaks770.36'}), (772, {'res': '$n772.37'}), (774, {'index': '$n772.37', 'target': '$peaks770.36', 'res': '$774binary_subscr.38'}), (776, {}), (778, {}), (780, {}), (782, {}), (784, {'pred': '$774binary_subscr.38'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={786: (), 798: ()})
2024-07-15 06:11:43,236 DEBUG:block_infos State(pc_initial=786 nstack_initial=0):
AdaptBlockInfo(insts=((786, {'res': '$n786.0'}), (788, {'res': '$const788.1'}), (790, {'op': '+=', 'lhs': '$n786.0', 'rhs': '$const788.1', 'res': '$binop_iadd790.2'}), (792, {}), (794, {'value': '$binop_iadd790.2'}), (796, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={328: ()})
2024-07-15 06:11:43,236 DEBUG:block_infos State(pc_initial=798 nstack_initial=0):
AdaptBlockInfo(insts=((798, {'res': '$n798.0'}), (800, {'res': '$wait800.1'}), (802, {'res': '$const802.2'}), (804, {'op': '+', 'lhs': '$wait800.1', 'rhs': '$const802.2', 'res': '$binop_add804.3'}), (806, {}), (808, {'op': '+=', 'lhs': '$n798.0', 'rhs': '$binop_add804.3', 'res': '$binop_iadd808.4'}), (810, {}), (812, {'value': '$binop_iadd808.4'}), (814, {'res': '$n814.5'}), (816, {'res': '$x816.6'}), (818, {'item': '$x816.6', 'res': '$818load_attr.7'}), (820, {}), (822, {}), (824, {}), (826, {}), (828, {'res': '$const828.8'}), (830, {'index': '$const828.8', 'target': '$818load_attr.7', 'res': '$830binary_subscr.9'}), (832, {}), (834, {}), (836, {}), (838, {}), (840, {'lhs': '$n814.5', 'rhs': '$830binary_subscr.9', 'res': '$840compare_op.10'}), (842, {}), (844, {}), (846, {'pred': '$840compare_op.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={848: (), 362: ()})
2024-07-15 06:11:43,236 DEBUG:block_infos State(pc_initial=848 nstack_initial=0):
AdaptBlockInfo(insts=((848, {'res': '$const848.0'}), (850, {'retval': '$const848.0', 'castval': '$850return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-15 06:11:43,236 DEBUG:block_infos State(pc_initial=852 nstack_initial=0):
AdaptBlockInfo(insts=((852, {'res': '$const852.0'}), (854, {'retval': '$const852.0', 'castval': '$854return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-15 06:11:43,239 DEBUG:label 0:
    x = arg(0, name=x)                       ['x']
    pre_max = arg(1, name=pre_max)           ['pre_max']
    post_max = arg(2, name=post_max)         ['post_max']
    pre_avg = arg(3, name=pre_avg)           ['pre_avg']
    post_avg = arg(4, name=post_avg)         ['post_avg']
    delta = arg(5, name=delta)               ['delta']
    wait = arg(6, name=wait)                 ['wait']
    peaks = arg(7, name=peaks)               ['peaks']
    $const6.1 = const(int, 0)                ['$const6.1']
    $8binary_subscr.2 = getitem(value=x, index=$const6.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1', 'x']
    $18load_global.3 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$18load_global.3']
    $30load_attr.5 = getattr(value=$18load_global.3, attr=max) ['$18load_global.3', '$30load_attr.5']
    $const42.7 = const(NoneType, None)       ['$const42.7']
    $44load_global.8 = global(min: <built-in function min>) ['$44load_global.8']
    $60load_attr.12 = getattr(value=x, attr=shape) ['$60load_attr.12', 'x']
    $const70.13 = const(int, 0)              ['$const70.13']
    $72binary_subscr.14 = getitem(value=$60load_attr.12, index=$const70.13, fn=<built-in function getitem>) ['$60load_attr.12', '$72binary_subscr.14', '$const70.13']
    $86call.15 = call $44load_global.8(post_max, $72binary_subscr.14, func=$44load_global.8, args=[Var(post_max, utils.py:1209), Var($72binary_subscr.14, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None) ['$44load_global.8', '$72binary_subscr.14', '$86call.15', 'post_max']
    $96build_slice.16 = global(slice: <class 'slice'>) ['$96build_slice.16']
    $96build_slice.17 = call $96build_slice.16($const42.7, $86call.15, func=$96build_slice.16, args=(Var($const42.7, utils.py:1221), Var($86call.15, utils.py:1221)), kws=(), vararg=None, varkwarg=None, target=None) ['$86call.15', '$96build_slice.16', '$96build_slice.17', '$const42.7']
    $98binary_subscr.18 = getitem(value=x, index=$96build_slice.17, fn=<built-in function getitem>) ['$96build_slice.17', '$98binary_subscr.18', 'x']
    $112call.19 = call $30load_attr.5($98binary_subscr.18, func=$30load_attr.5, args=[Var($98binary_subscr.18, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None) ['$112call.19', '$30load_attr.5', '$98binary_subscr.18']
    $122compare_op.20 = $8binary_subscr.2 >= $112call.19 ['$112call.19', '$122compare_op.20', '$8binary_subscr.2']
    $const130.22 = const(int, 0)             ['$const130.22']
    peaks[$const130.22] = $122compare_op.20  ['$122compare_op.20', '$const130.22', 'peaks']
    $const138.24 = const(int, 0)             ['$const138.24']
    $144binary_subscr.25 = getitem(value=peaks, index=$const138.24, fn=<built-in function getitem>) ['$144binary_subscr.25', '$const138.24', 'peaks']
    $const156.27 = const(int, 0)             ['$const156.27']
    $158binary_subscr.28 = getitem(value=x, index=$const156.27, fn=<built-in function getitem>) ['$158binary_subscr.28', '$const156.27', 'x']
    $168load_global.29 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$168load_global.29']
    $180load_attr.31 = getattr(value=$168load_global.29, attr=mean) ['$168load_global.29', '$180load_attr.31']
    $const192.33 = const(NoneType, None)     ['$const192.33']
    $194load_global.34 = global(min: <built-in function min>) ['$194load_global.34']
    $210load_attr.38 = getattr(value=x, attr=shape) ['$210load_attr.38', 'x']
    $const220.39 = const(int, 0)             ['$const220.39']
    $222binary_subscr.40 = getitem(value=$210load_attr.38, index=$const220.39, fn=<built-in function getitem>) ['$210load_attr.38', '$222binary_subscr.40', '$const220.39']
    $236call.41 = call $194load_global.34(post_avg, $222binary_subscr.40, func=$194load_global.34, args=[Var(post_avg, utils.py:1209), Var($222binary_subscr.40, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None) ['$194load_global.34', '$222binary_subscr.40', '$236call.41', 'post_avg']
    $246build_slice.42 = global(slice: <class 'slice'>) ['$246build_slice.42']
    $246build_slice.43 = call $246build_slice.42($const192.33, $236call.41, func=$246build_slice.42, args=(Var($const192.33, utils.py:1222), Var($236call.41, utils.py:1222)), kws=(), vararg=None, varkwarg=None, target=None) ['$236call.41', '$246build_slice.42', '$246build_slice.43', '$const192.33']
    $248binary_subscr.44 = getitem(value=x, index=$246build_slice.43, fn=<built-in function getitem>) ['$246build_slice.43', '$248binary_subscr.44', 'x']
    $262call.45 = call $180load_attr.31($248binary_subscr.44, func=$180load_attr.31, args=[Var($248binary_subscr.44, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None) ['$180load_attr.31', '$248binary_subscr.44', '$262call.45']
    $binop_add274.47 = $262call.45 + delta   ['$262call.45', '$binop_add274.47', 'delta']
    $278compare_op.48 = $158binary_subscr.28 >= $binop_add274.47 ['$158binary_subscr.28', '$278compare_op.48', '$binop_add274.47']
    $binop_iand284.49 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$144binary_subscr.25, rhs=$278compare_op.48, static_lhs=Undefined, static_rhs=Undefined) ['$144binary_subscr.25', '$278compare_op.48', '$binop_iand284.49']
    peaks[$const138.24] = $binop_iand284.49  ['$binop_iand284.49', '$const138.24', 'peaks']
    $const298.51 = const(int, 0)             ['$const298.51']
    $300binary_subscr.52 = getitem(value=peaks, index=$const298.51, fn=<built-in function getitem>) ['$300binary_subscr.52', '$const298.51', 'peaks']
    bool310 = global(bool: <class 'bool'>)   ['bool310']
    $310pred = call bool310($300binary_subscr.52, func=bool310, args=(Var($300binary_subscr.52, utils.py:1224),), kws=(), vararg=None, varkwarg=None, target=None) ['$300binary_subscr.52', '$310pred', 'bool310']
    branch $310pred, 312, 324                ['$310pred']
label 312:
    $const314.1 = const(int, 1)              ['$const314.1']
    n = wait + $const314.1                   ['$const314.1', 'n', 'wait']
    jump 328                                 []
label 324:
    n = const(int, 1)                        ['n']
    jump 328                                 []
label 328:
    $332load_attr.2 = getattr(value=x, attr=shape) ['$332load_attr.2', 'x']
    $const342.3 = const(int, 0)              ['$const342.3']
    $344binary_subscr.4 = getitem(value=$332load_attr.2, index=$const342.3, fn=<built-in function getitem>) ['$332load_attr.2', '$344binary_subscr.4', '$const342.3']
    $354compare_op.5 = n < $344binary_subscr.4 ['$344binary_subscr.4', '$354compare_op.5', 'n']
    bool360 = global(bool: <class 'bool'>)   ['bool360']
    $360pred = call bool360($354compare_op.5, func=bool360, args=(Var($354compare_op.5, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None) ['$354compare_op.5', '$360pred', 'bool360']
    branch $360pred, 362, 852                ['$360pred']
label 362:
    $362load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$362load_global.0']
    $374load_attr.2 = getattr(value=$362load_global.0, attr=max) ['$362load_global.0', '$374load_attr.2']
    $386load_global.4 = global(max: <built-in function max>) ['$386load_global.4']
    $const398.6 = const(int, 0)              ['$const398.6']
    $binop_sub404.9 = n - pre_max            ['$binop_sub404.9', 'n', 'pre_max']
    $412call.10 = call $386load_global.4($const398.6, $binop_sub404.9, func=$386load_global.4, args=[Var($const398.6, utils.py:1230), Var($binop_sub404.9, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None) ['$386load_global.4', '$412call.10', '$binop_sub404.9', '$const398.6']
    $422load_global.11 = global(min: <built-in function min>) ['$422load_global.11']
    $binop_add438.15 = n + post_max          ['$binop_add438.15', 'n', 'post_max']
    $444load_attr.17 = getattr(value=x, attr=shape) ['$444load_attr.17', 'x']
    $const454.18 = const(int, 0)             ['$const454.18']
    $456binary_subscr.19 = getitem(value=$444load_attr.17, index=$const454.18, fn=<built-in function getitem>) ['$444load_attr.17', '$456binary_subscr.19', '$const454.18']
    $470call.20 = call $422load_global.11($binop_add438.15, $456binary_subscr.19, func=$422load_global.11, args=[Var($binop_add438.15, utils.py:1230), Var($456binary_subscr.19, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None) ['$422load_global.11', '$456binary_subscr.19', '$470call.20', '$binop_add438.15']
    $480build_slice.21 = global(slice: <class 'slice'>) ['$480build_slice.21']
    $480build_slice.22 = call $480build_slice.21($412call.10, $470call.20, func=$480build_slice.21, args=(Var($412call.10, utils.py:1230), Var($470call.20, utils.py:1230)), kws=(), vararg=None, varkwarg=None, target=None) ['$412call.10', '$470call.20', '$480build_slice.21', '$480build_slice.22']
    $482binary_subscr.23 = getitem(value=x, index=$480build_slice.22, fn=<built-in function getitem>) ['$480build_slice.22', '$482binary_subscr.23', 'x']
    maxn = call $374load_attr.2($482binary_subscr.23, func=$374load_attr.2, args=[Var($482binary_subscr.23, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None) ['$374load_attr.2', '$482binary_subscr.23', 'maxn']
    $512binary_subscr.27 = getitem(value=x, index=n, fn=<built-in function getitem>) ['$512binary_subscr.27', 'n', 'x']
    $524compare_op.29 = $512binary_subscr.27 == maxn ['$512binary_subscr.27', '$524compare_op.29', 'maxn']
    peaks[n] = $524compare_op.29             ['$524compare_op.29', 'n', 'peaks']
    $542binary_subscr.34 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$542binary_subscr.34', 'n', 'peaks']
    bool552 = global(bool: <class 'bool'>)   ['bool552']
    $552pred = call bool552($542binary_subscr.34, func=bool552, args=(Var($542binary_subscr.34, utils.py:1235),), kws=(), vararg=None, varkwarg=None, target=None) ['$542binary_subscr.34', '$552pred', 'bool552']
    branch $552pred, 566, 554                ['$552pred']
label 554:
    $const556.1 = const(int, 1)              ['$const556.1']
    $binop_iadd558.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const556.1, static_lhs=Undefined, static_rhs=Undefined) ['$binop_iadd558.2', '$const556.1', 'n']
    n = $binop_iadd558.2                     ['$binop_iadd558.2', 'n']
    jump 328                                 []
label 566:
    $566load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$566load_global.0']
    $578load_attr.2 = getattr(value=$566load_global.0, attr=mean) ['$566load_global.0', '$578load_attr.2']
    $590load_global.4 = global(max: <built-in function max>) ['$590load_global.4']
    $const602.6 = const(int, 0)              ['$const602.6']
    $binop_sub608.9 = n - pre_avg            ['$binop_sub608.9', 'n', 'pre_avg']
    $616call.10 = call $590load_global.4($const602.6, $binop_sub608.9, func=$590load_global.4, args=[Var($const602.6, utils.py:1239), Var($binop_sub608.9, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None) ['$590load_global.4', '$616call.10', '$binop_sub608.9', '$const602.6']
    $626load_global.11 = global(min: <built-in function min>) ['$626load_global.11']
    $binop_add642.15 = n + post_avg          ['$binop_add642.15', 'n', 'post_avg']
    $648load_attr.17 = getattr(value=x, attr=shape) ['$648load_attr.17', 'x']
    $const658.18 = const(int, 0)             ['$const658.18']
    $660binary_subscr.19 = getitem(value=$648load_attr.17, index=$const658.18, fn=<built-in function getitem>) ['$648load_attr.17', '$660binary_subscr.19', '$const658.18']
    $674call.20 = call $626load_global.11($binop_add642.15, $660binary_subscr.19, func=$626load_global.11, args=[Var($binop_add642.15, utils.py:1239), Var($660binary_subscr.19, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None) ['$626load_global.11', '$660binary_subscr.19', '$674call.20', '$binop_add642.15']
    $684build_slice.21 = global(slice: <class 'slice'>) ['$684build_slice.21']
    $684build_slice.22 = call $684build_slice.21($616call.10, $674call.20, func=$684build_slice.21, args=(Var($616call.10, utils.py:1239), Var($674call.20, utils.py:1239)), kws=(), vararg=None, varkwarg=None, target=None) ['$616call.10', '$674call.20', '$684build_slice.21', '$684build_slice.22']
    $686binary_subscr.23 = getitem(value=x, index=$684build_slice.22, fn=<built-in function getitem>) ['$684build_slice.22', '$686binary_subscr.23', 'x']
    avgn = call $578load_attr.2($686binary_subscr.23, func=$578load_attr.2, args=[Var($686binary_subscr.23, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None) ['$578load_attr.2', '$686binary_subscr.23', 'avgn']
    $720binary_subscr.27 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$720binary_subscr.27', 'n', 'peaks']
    $734binary_subscr.30 = getitem(value=x, index=n, fn=<built-in function getitem>) ['$734binary_subscr.30', 'n', 'x']
    $binop_add748.33 = avgn + delta          ['$binop_add748.33', 'avgn', 'delta']
    $752compare_op.34 = $734binary_subscr.30 >= $binop_add748.33 ['$734binary_subscr.30', '$752compare_op.34', '$binop_add748.33']
    $binop_iand758.35 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$720binary_subscr.27, rhs=$752compare_op.34, static_lhs=Undefined, static_rhs=Undefined) ['$720binary_subscr.27', '$752compare_op.34', '$binop_iand758.35']
    peaks[n] = $binop_iand758.35             ['$binop_iand758.35', 'n', 'peaks']
    $774binary_subscr.38 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$774binary_subscr.38', 'n', 'peaks']
    bool784 = global(bool: <class 'bool'>)   ['bool784']
    $784pred = call bool784($774binary_subscr.38, func=bool784, args=(Var($774binary_subscr.38, utils.py:1242),), kws=(), vararg=None, varkwarg=None, target=None) ['$774binary_subscr.38', '$784pred', 'bool784']
    branch $784pred, 798, 786                ['$784pred']
label 786:
    $const788.1 = const(int, 1)              ['$const788.1']
    $binop_iadd790.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const788.1, static_lhs=Undefined, static_rhs=Undefined) ['$binop_iadd790.2', '$const788.1', 'n']
    n = $binop_iadd790.2                     ['$binop_iadd790.2', 'n']
    jump 328                                 []
label 798:
    $const802.2 = const(int, 1)              ['$const802.2']
    $binop_add804.3 = wait + $const802.2     ['$binop_add804.3', '$const802.2', 'wait']
    $binop_iadd808.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$binop_add804.3, static_lhs=Undefined, static_rhs=Undefined) ['$binop_add804.3', '$binop_iadd808.4', 'n']
    n = $binop_iadd808.4                     ['$binop_iadd808.4', 'n']
    $818load_attr.7 = getattr(value=x, attr=shape) ['$818load_attr.7', 'x']
    $const828.8 = const(int, 0)              ['$const828.8']
    $830binary_subscr.9 = getitem(value=$818load_attr.7, index=$const828.8, fn=<built-in function getitem>) ['$818load_attr.7', '$830binary_subscr.9', '$const828.8']
    $840compare_op.10 = n < $830binary_subscr.9 ['$830binary_subscr.9', '$840compare_op.10', 'n']
    bool846 = global(bool: <class 'bool'>)   ['bool846']
    $846pred = call bool846($840compare_op.10, func=bool846, args=(Var($840compare_op.10, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None) ['$840compare_op.10', '$846pred', 'bool846']
    branch $846pred, 362, 848                ['$846pred']
label 848:
    $const848.0 = const(NoneType, None)      ['$const848.0']
    $850return_value.1 = cast(value=$const848.0) ['$850return_value.1', '$const848.0']
    return $850return_value.1                ['$850return_value.1']
label 852:
    $const852.0 = const(NoneType, None)      ['$const852.0']
    $854return_value.1 = cast(value=$const852.0) ['$854return_value.1', '$const852.0']
    return $854return_value.1                ['$854return_value.1']

2024-07-15 06:11:43,278 DEBUG:==== SSA block analysis pass on 0
2024-07-15 06:11:43,278 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B6955310>
2024-07-15 06:11:43,278 DEBUG:on stmt: x = arg(0, name=x)
2024-07-15 06:11:43,278 DEBUG:on stmt: pre_max = arg(1, name=pre_max)
2024-07-15 06:11:43,278 DEBUG:on stmt: post_max = arg(2, name=post_max)
2024-07-15 06:11:43,278 DEBUG:on stmt: pre_avg = arg(3, name=pre_avg)
2024-07-15 06:11:43,278 DEBUG:on stmt: post_avg = arg(4, name=post_avg)
2024-07-15 06:11:43,278 DEBUG:on stmt: delta = arg(5, name=delta)
2024-07-15 06:11:43,278 DEBUG:on stmt: wait = arg(6, name=wait)
2024-07-15 06:11:43,278 DEBUG:on stmt: peaks = arg(7, name=peaks)
2024-07-15 06:11:43,278 DEBUG:on stmt: $const6.1 = const(int, 0)
2024-07-15 06:11:43,278 DEBUG:on stmt: $8binary_subscr.2 = static_getitem(value=x, index=0, index_var=$const6.1, fn=<built-in function getitem>)
2024-07-15 06:11:43,278 DEBUG:on stmt: $18load_global.3 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:43,278 DEBUG:on stmt: $30load_attr.5 = getattr(value=$18load_global.3, attr=max)
2024-07-15 06:11:43,278 DEBUG:on stmt: $const42.7 = const(NoneType, None)
2024-07-15 06:11:43,278 DEBUG:on stmt: $44load_global.8 = global(min: <built-in function min>)
2024-07-15 06:11:43,279 DEBUG:on stmt: $60load_attr.12 = getattr(value=x, attr=shape)
2024-07-15 06:11:43,279 DEBUG:on stmt: $const70.13 = const(int, 0)
2024-07-15 06:11:43,279 DEBUG:on stmt: $72binary_subscr.14 = static_getitem(value=$60load_attr.12, index=0, index_var=$const70.13, fn=<built-in function getitem>)
2024-07-15 06:11:43,279 DEBUG:on stmt: $86call.15 = call $44load_global.8(post_max, $72binary_subscr.14, func=$44load_global.8, args=[Var(post_max, utils.py:1209), Var($72binary_subscr.14, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:43,279 DEBUG:on stmt: $96build_slice.16 = global(slice: <class 'slice'>)
2024-07-15 06:11:43,279 DEBUG:on stmt: $96build_slice.17 = call $96build_slice.16($const42.7, $86call.15, func=$96build_slice.16, args=(Var($const42.7, utils.py:1221), Var($86call.15, utils.py:1221)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:43,279 DEBUG:on stmt: $98binary_subscr.18 = getitem(value=x, index=$96build_slice.17, fn=<built-in function getitem>)
2024-07-15 06:11:43,279 DEBUG:on stmt: $112call.19 = call $30load_attr.5($98binary_subscr.18, func=$30load_attr.5, args=[Var($98binary_subscr.18, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:43,279 DEBUG:on stmt: $122compare_op.20 = $8binary_subscr.2 >= $112call.19
2024-07-15 06:11:43,279 DEBUG:on stmt: $const130.22 = const(int, 0)
2024-07-15 06:11:43,279 DEBUG:on stmt: peaks[0] = $122compare_op.20
2024-07-15 06:11:43,279 DEBUG:on stmt: $const138.24 = const(int, 0)
2024-07-15 06:11:43,279 DEBUG:on stmt: $144binary_subscr.25 = static_getitem(value=peaks, index=0, index_var=$const138.24, fn=<built-in function getitem>)
2024-07-15 06:11:43,279 DEBUG:on stmt: $const156.27 = const(int, 0)
2024-07-15 06:11:43,279 DEBUG:on stmt: $158binary_subscr.28 = static_getitem(value=x, index=0, index_var=$const156.27, fn=<built-in function getitem>)
2024-07-15 06:11:43,279 DEBUG:on stmt: $168load_global.29 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:43,279 DEBUG:on stmt: $180load_attr.31 = getattr(value=$168load_global.29, attr=mean)
2024-07-15 06:11:43,279 DEBUG:on stmt: $const192.33 = const(NoneType, None)
2024-07-15 06:11:43,279 DEBUG:on stmt: $194load_global.34 = global(min: <built-in function min>)
2024-07-15 06:11:43,279 DEBUG:on stmt: $210load_attr.38 = getattr(value=x, attr=shape)
2024-07-15 06:11:43,279 DEBUG:on stmt: $const220.39 = const(int, 0)
2024-07-15 06:11:43,279 DEBUG:on stmt: $222binary_subscr.40 = static_getitem(value=$210load_attr.38, index=0, index_var=$const220.39, fn=<built-in function getitem>)
2024-07-15 06:11:43,279 DEBUG:on stmt: $236call.41 = call $194load_global.34(post_avg, $222binary_subscr.40, func=$194load_global.34, args=[Var(post_avg, utils.py:1209), Var($222binary_subscr.40, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:43,279 DEBUG:on stmt: $246build_slice.42 = global(slice: <class 'slice'>)
2024-07-15 06:11:43,279 DEBUG:on stmt: $246build_slice.43 = call $246build_slice.42($const192.33, $236call.41, func=$246build_slice.42, args=(Var($const192.33, utils.py:1222), Var($236call.41, utils.py:1222)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:43,279 DEBUG:on stmt: $248binary_subscr.44 = getitem(value=x, index=$246build_slice.43, fn=<built-in function getitem>)
2024-07-15 06:11:43,280 DEBUG:on stmt: $262call.45 = call $180load_attr.31($248binary_subscr.44, func=$180load_attr.31, args=[Var($248binary_subscr.44, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:43,280 DEBUG:on stmt: $binop_add274.47 = $262call.45 + delta
2024-07-15 06:11:43,280 DEBUG:on stmt: $278compare_op.48 = $158binary_subscr.28 >= $binop_add274.47
2024-07-15 06:11:43,280 DEBUG:on stmt: $binop_iand284.49 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$144binary_subscr.25, rhs=$278compare_op.48, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:43,280 DEBUG:on stmt: peaks[0] = $binop_iand284.49
2024-07-15 06:11:43,280 DEBUG:on stmt: $const298.51 = const(int, 0)
2024-07-15 06:11:43,280 DEBUG:on stmt: $300binary_subscr.52 = static_getitem(value=peaks, index=0, index_var=$const298.51, fn=<built-in function getitem>)
2024-07-15 06:11:43,280 DEBUG:on stmt: bool310 = global(bool: <class 'bool'>)
2024-07-15 06:11:43,280 DEBUG:on stmt: $310pred = call bool310($300binary_subscr.52, func=bool310, args=(Var($300binary_subscr.52, utils.py:1224),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:43,280 DEBUG:on stmt: branch $310pred, 312, 324
2024-07-15 06:11:43,280 DEBUG:==== SSA block analysis pass on 312
2024-07-15 06:11:43,280 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B6955310>
2024-07-15 06:11:43,280 DEBUG:on stmt: $const314.1 = const(int, 1)
2024-07-15 06:11:43,280 DEBUG:on stmt: n = wait + $const314.1
2024-07-15 06:11:43,280 DEBUG:on stmt: jump 328
2024-07-15 06:11:43,280 DEBUG:==== SSA block analysis pass on 324
2024-07-15 06:11:43,280 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B6955310>
2024-07-15 06:11:43,280 DEBUG:on stmt: n = const(int, 1)
2024-07-15 06:11:43,280 DEBUG:on stmt: jump 328
2024-07-15 06:11:43,280 DEBUG:==== SSA block analysis pass on 328
2024-07-15 06:11:43,280 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B6955310>
2024-07-15 06:11:43,280 DEBUG:on stmt: $332load_attr.2 = getattr(value=x, attr=shape)
2024-07-15 06:11:43,280 DEBUG:on stmt: $const342.3 = const(int, 0)
2024-07-15 06:11:43,280 DEBUG:on stmt: $344binary_subscr.4 = static_getitem(value=$332load_attr.2, index=0, index_var=$const342.3, fn=<built-in function getitem>)
2024-07-15 06:11:43,280 DEBUG:on stmt: $354compare_op.5 = n < $344binary_subscr.4
2024-07-15 06:11:43,280 DEBUG:on stmt: bool360 = global(bool: <class 'bool'>)
2024-07-15 06:11:43,280 DEBUG:on stmt: $360pred = call bool360($354compare_op.5, func=bool360, args=(Var($354compare_op.5, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:43,280 DEBUG:on stmt: branch $360pred, 362, 852
2024-07-15 06:11:43,280 DEBUG:==== SSA block analysis pass on 362
2024-07-15 06:11:43,280 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B6955310>
2024-07-15 06:11:43,280 DEBUG:on stmt: $362load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:43,281 DEBUG:on stmt: $374load_attr.2 = getattr(value=$362load_global.0, attr=max)
2024-07-15 06:11:43,281 DEBUG:on stmt: $386load_global.4 = global(max: <built-in function max>)
2024-07-15 06:11:43,281 DEBUG:on stmt: $const398.6 = const(int, 0)
2024-07-15 06:11:43,281 DEBUG:on stmt: $binop_sub404.9 = n - pre_max
2024-07-15 06:11:43,281 DEBUG:on stmt: $412call.10 = call $386load_global.4($const398.6, $binop_sub404.9, func=$386load_global.4, args=[Var($const398.6, utils.py:1230), Var($binop_sub404.9, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:43,281 DEBUG:on stmt: $422load_global.11 = global(min: <built-in function min>)
2024-07-15 06:11:43,281 DEBUG:on stmt: $binop_add438.15 = n + post_max
2024-07-15 06:11:43,281 DEBUG:on stmt: $444load_attr.17 = getattr(value=x, attr=shape)
2024-07-15 06:11:43,281 DEBUG:on stmt: $const454.18 = const(int, 0)
2024-07-15 06:11:43,281 DEBUG:on stmt: $456binary_subscr.19 = static_getitem(value=$444load_attr.17, index=0, index_var=$const454.18, fn=<built-in function getitem>)
2024-07-15 06:11:43,281 DEBUG:on stmt: $470call.20 = call $422load_global.11($binop_add438.15, $456binary_subscr.19, func=$422load_global.11, args=[Var($binop_add438.15, utils.py:1230), Var($456binary_subscr.19, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:43,281 DEBUG:on stmt: $480build_slice.21 = global(slice: <class 'slice'>)
2024-07-15 06:11:43,281 DEBUG:on stmt: $480build_slice.22 = call $480build_slice.21($412call.10, $470call.20, func=$480build_slice.21, args=(Var($412call.10, utils.py:1230), Var($470call.20, utils.py:1230)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:43,281 DEBUG:on stmt: $482binary_subscr.23 = getitem(value=x, index=$480build_slice.22, fn=<built-in function getitem>)
2024-07-15 06:11:43,281 DEBUG:on stmt: maxn = call $374load_attr.2($482binary_subscr.23, func=$374load_attr.2, args=[Var($482binary_subscr.23, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:43,281 DEBUG:on stmt: $512binary_subscr.27 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-07-15 06:11:43,281 DEBUG:on stmt: $524compare_op.29 = $512binary_subscr.27 == maxn
2024-07-15 06:11:43,281 DEBUG:on stmt: peaks[n] = $524compare_op.29
2024-07-15 06:11:43,281 DEBUG:on stmt: $542binary_subscr.34 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-07-15 06:11:43,281 DEBUG:on stmt: bool552 = global(bool: <class 'bool'>)
2024-07-15 06:11:43,281 DEBUG:on stmt: $552pred = call bool552($542binary_subscr.34, func=bool552, args=(Var($542binary_subscr.34, utils.py:1235),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:43,281 DEBUG:on stmt: branch $552pred, 566, 554
2024-07-15 06:11:43,281 DEBUG:==== SSA block analysis pass on 554
2024-07-15 06:11:43,281 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B6955310>
2024-07-15 06:11:43,281 DEBUG:on stmt: $const556.1 = const(int, 1)
2024-07-15 06:11:43,281 DEBUG:on stmt: $binop_iadd558.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const556.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:43,281 DEBUG:on stmt: n = $binop_iadd558.2
2024-07-15 06:11:43,281 DEBUG:on stmt: jump 853
2024-07-15 06:11:43,281 DEBUG:==== SSA block analysis pass on 566
2024-07-15 06:11:43,281 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B6955310>
2024-07-15 06:11:43,282 DEBUG:on stmt: $566load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:43,282 DEBUG:on stmt: $578load_attr.2 = getattr(value=$566load_global.0, attr=mean)
2024-07-15 06:11:43,282 DEBUG:on stmt: $590load_global.4 = global(max: <built-in function max>)
2024-07-15 06:11:43,282 DEBUG:on stmt: $const602.6 = const(int, 0)
2024-07-15 06:11:43,282 DEBUG:on stmt: $binop_sub608.9 = n - pre_avg
2024-07-15 06:11:43,282 DEBUG:on stmt: $616call.10 = call $590load_global.4($const602.6, $binop_sub608.9, func=$590load_global.4, args=[Var($const602.6, utils.py:1239), Var($binop_sub608.9, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:43,282 DEBUG:on stmt: $626load_global.11 = global(min: <built-in function min>)
2024-07-15 06:11:43,282 DEBUG:on stmt: $binop_add642.15 = n + post_avg
2024-07-15 06:11:43,282 DEBUG:on stmt: $648load_attr.17 = getattr(value=x, attr=shape)
2024-07-15 06:11:43,282 DEBUG:on stmt: $const658.18 = const(int, 0)
2024-07-15 06:11:43,282 DEBUG:on stmt: $660binary_subscr.19 = static_getitem(value=$648load_attr.17, index=0, index_var=$const658.18, fn=<built-in function getitem>)
2024-07-15 06:11:43,282 DEBUG:on stmt: $674call.20 = call $626load_global.11($binop_add642.15, $660binary_subscr.19, func=$626load_global.11, args=[Var($binop_add642.15, utils.py:1239), Var($660binary_subscr.19, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:43,282 DEBUG:on stmt: $684build_slice.21 = global(slice: <class 'slice'>)
2024-07-15 06:11:43,282 DEBUG:on stmt: $684build_slice.22 = call $684build_slice.21($616call.10, $674call.20, func=$684build_slice.21, args=(Var($616call.10, utils.py:1239), Var($674call.20, utils.py:1239)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:43,282 DEBUG:on stmt: $686binary_subscr.23 = getitem(value=x, index=$684build_slice.22, fn=<built-in function getitem>)
2024-07-15 06:11:43,282 DEBUG:on stmt: avgn = call $578load_attr.2($686binary_subscr.23, func=$578load_attr.2, args=[Var($686binary_subscr.23, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:43,282 DEBUG:on stmt: $720binary_subscr.27 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-07-15 06:11:43,282 DEBUG:on stmt: $734binary_subscr.30 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-07-15 06:11:43,282 DEBUG:on stmt: $binop_add748.33 = avgn + delta
2024-07-15 06:11:43,282 DEBUG:on stmt: $752compare_op.34 = $734binary_subscr.30 >= $binop_add748.33
2024-07-15 06:11:43,282 DEBUG:on stmt: $binop_iand758.35 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$720binary_subscr.27, rhs=$752compare_op.34, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:43,282 DEBUG:on stmt: peaks[n] = $binop_iand758.35
2024-07-15 06:11:43,282 DEBUG:on stmt: $774binary_subscr.38 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-07-15 06:11:43,282 DEBUG:on stmt: bool784 = global(bool: <class 'bool'>)
2024-07-15 06:11:43,282 DEBUG:on stmt: $784pred = call bool784($774binary_subscr.38, func=bool784, args=(Var($774binary_subscr.38, utils.py:1242),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:43,282 DEBUG:on stmt: branch $784pred, 798, 786
2024-07-15 06:11:43,282 DEBUG:==== SSA block analysis pass on 786
2024-07-15 06:11:43,282 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B6955310>
2024-07-15 06:11:43,282 DEBUG:on stmt: $const788.1 = const(int, 1)
2024-07-15 06:11:43,283 DEBUG:on stmt: $binop_iadd790.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const788.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:43,283 DEBUG:on stmt: n = $binop_iadd790.2
2024-07-15 06:11:43,283 DEBUG:on stmt: jump 853
2024-07-15 06:11:43,283 DEBUG:==== SSA block analysis pass on 798
2024-07-15 06:11:43,283 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B6955310>
2024-07-15 06:11:43,283 DEBUG:on stmt: $const802.2 = const(int, 1)
2024-07-15 06:11:43,283 DEBUG:on stmt: $binop_add804.3 = wait + $const802.2
2024-07-15 06:11:43,283 DEBUG:on stmt: $binop_iadd808.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$binop_add804.3, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:43,283 DEBUG:on stmt: n = $binop_iadd808.4
2024-07-15 06:11:43,283 DEBUG:on stmt: $818load_attr.7 = getattr(value=x, attr=shape)
2024-07-15 06:11:43,283 DEBUG:on stmt: $const828.8 = const(int, 0)
2024-07-15 06:11:43,283 DEBUG:on stmt: $830binary_subscr.9 = static_getitem(value=$818load_attr.7, index=0, index_var=$const828.8, fn=<built-in function getitem>)
2024-07-15 06:11:43,283 DEBUG:on stmt: $840compare_op.10 = n < $830binary_subscr.9
2024-07-15 06:11:43,283 DEBUG:on stmt: bool846 = global(bool: <class 'bool'>)
2024-07-15 06:11:43,283 DEBUG:on stmt: $846pred = call bool846($840compare_op.10, func=bool846, args=(Var($840compare_op.10, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:43,283 DEBUG:on stmt: branch $846pred, 362, 848
2024-07-15 06:11:43,283 DEBUG:==== SSA block analysis pass on 848
2024-07-15 06:11:43,283 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B6955310>
2024-07-15 06:11:43,283 DEBUG:on stmt: $const848.0 = const(NoneType, None)
2024-07-15 06:11:43,283 DEBUG:on stmt: $850return_value.1 = cast(value=$const848.0)
2024-07-15 06:11:43,283 DEBUG:on stmt: return $850return_value.1
2024-07-15 06:11:43,283 DEBUG:==== SSA block analysis pass on 852
2024-07-15 06:11:43,283 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B6955310>
2024-07-15 06:11:43,283 DEBUG:on stmt: $const852.0 = const(NoneType, None)
2024-07-15 06:11:43,283 DEBUG:on stmt: $854return_value.1 = cast(value=$const852.0)
2024-07-15 06:11:43,283 DEBUG:on stmt: return $854return_value.1
2024-07-15 06:11:43,283 DEBUG:==== SSA block analysis pass on 853
2024-07-15 06:11:43,283 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B6955310>
2024-07-15 06:11:43,283 DEBUG:on stmt: jump 328
2024-07-15 06:11:43,286 DEBUG:defs defaultdict(<class 'list'>,
            {'$112call.19': [(<numba.core.ir.Assign object at 0x00000221B6767F50>,
                              0)],
             '$122compare_op.20': [(<numba.core.ir.Assign object at 0x00000221B6765090>,
                                    0)],
             '$144binary_subscr.25': [(<numba.core.ir.Assign object at 0x00000221B7D4A5D0>,
                                       0)],
             '$158binary_subscr.28': [(<numba.core.ir.Assign object at 0x00000221B7D4A250>,
                                       0)],
             '$168load_global.29': [(<numba.core.ir.Assign object at 0x00000221B69C6B90>,
                                     0)],
             '$180load_attr.31': [(<numba.core.ir.Assign object at 0x00000221B69C7E90>,
                                   0)],
             '$18load_global.3': [(<numba.core.ir.Assign object at 0x00000221B6767450>,
                                   0)],
             '$194load_global.34': [(<numba.core.ir.Assign object at 0x00000221B69C7C10>,
                                     0)],
             '$210load_attr.38': [(<numba.core.ir.Assign object at 0x00000221B69C5F90>,
                                   0)],
             '$222binary_subscr.40': [(<numba.core.ir.Assign object at 0x00000221B610B850>,
                                       0)],
             '$236call.41': [(<numba.core.ir.Assign object at 0x00000221B69C4490>,
                              0)],
             '$246build_slice.42': [(<numba.core.ir.Assign object at 0x00000221B69C4ED0>,
                                     0)],
             '$246build_slice.43': [(<numba.core.ir.Assign object at 0x00000221B69C5490>,
                                     0)],
             '$248binary_subscr.44': [(<numba.core.ir.Assign object at 0x00000221B69C4B50>,
                                       0)],
             '$262call.45': [(<numba.core.ir.Assign object at 0x00000221B69C7990>,
                              0)],
             '$278compare_op.48': [(<numba.core.ir.Assign object at 0x00000221B69C4F90>,
                                    0)],
             '$300binary_subscr.52': [(<numba.core.ir.Assign object at 0x00000221B69E3A10>,
                                       0)],
             '$30load_attr.5': [(<numba.core.ir.Assign object at 0x00000221B6766190>,
                                 0)],
             '$310pred': [(<numba.core.ir.Assign object at 0x00000221B69C6FD0>,
                           0)],
             '$332load_attr.2': [(<numba.core.ir.Assign object at 0x00000221B69C5DD0>,
                                  328)],
             '$344binary_subscr.4': [(<numba.core.ir.Assign object at 0x00000221B5E89310>,
                                      328)],
             '$354compare_op.5': [(<numba.core.ir.Assign object at 0x00000221B682CB90>,
                                   328)],
             '$360pred': [(<numba.core.ir.Assign object at 0x00000221B682D510>,
                           328)],
             '$362load_global.0': [(<numba.core.ir.Assign object at 0x00000221B682EE10>,
                                    362)],
             '$374load_attr.2': [(<numba.core.ir.Assign object at 0x00000221B682DA50>,
                                  362)],
             '$386load_global.4': [(<numba.core.ir.Assign object at 0x00000221B610BB50>,
                                    362)],
             '$412call.10': [(<numba.core.ir.Assign object at 0x00000221B6109C10>,
                              362)],
             '$422load_global.11': [(<numba.core.ir.Assign object at 0x00000221B610A050>,
                                     362)],
             '$444load_attr.17': [(<numba.core.ir.Assign object at 0x00000221B610A8D0>,
                                   362)],
             '$44load_global.8': [(<numba.core.ir.Assign object at 0x00000221B6766390>,
                                   0)],
             '$456binary_subscr.19': [(<numba.core.ir.Assign object at 0x00000221B69E1490>,
                                       362)],
             '$470call.20': [(<numba.core.ir.Assign object at 0x00000221B610B550>,
                              362)],
             '$480build_slice.21': [(<numba.core.ir.Assign object at 0x00000221B61081D0>,
                                     362)],
             '$480build_slice.22': [(<numba.core.ir.Assign object at 0x00000221B61082D0>,
                                     362)],
             '$482binary_subscr.23': [(<numba.core.ir.Assign object at 0x00000221B6108610>,
                                       362)],
             '$512binary_subscr.27': [(<numba.core.ir.Assign object at 0x00000221B6109090>,
                                       362)],
             '$524compare_op.29': [(<numba.core.ir.Assign object at 0x00000221B6109750>,
                                    362)],
             '$542binary_subscr.34': [(<numba.core.ir.Assign object at 0x00000221B6957810>,
                                       362)],
             '$552pred': [(<numba.core.ir.Assign object at 0x00000221B6957610>,
                           362)],
             '$566load_global.0': [(<numba.core.ir.Assign object at 0x00000221B6956710>,
                                    566)],
             '$578load_attr.2': [(<numba.core.ir.Assign object at 0x00000221B6957FD0>,
                                  566)],
             '$590load_global.4': [(<numba.core.ir.Assign object at 0x00000221B6956B10>,
                                    566)],
             '$60load_attr.12': [(<numba.core.ir.Assign object at 0x00000221B6767E10>,
                                  0)],
             '$616call.10': [(<numba.core.ir.Assign object at 0x00000221B6955850>,
                              566)],
             '$626load_global.11': [(<numba.core.ir.Assign object at 0x00000221B69557D0>,
                                     566)],
             '$648load_attr.17': [(<numba.core.ir.Assign object at 0x00000221B6957A90>,
                                   566)],
             '$660binary_subscr.19': [(<numba.core.ir.Assign object at 0x00000221B687C150>,
                                       566)],
             '$674call.20': [(<numba.core.ir.Assign object at 0x00000221B69560D0>,
                              566)],
             '$684build_slice.21': [(<numba.core.ir.Assign object at 0x00000221B6954890>,
                                     566)],
             '$684build_slice.22': [(<numba.core.ir.Assign object at 0x00000221B6956AD0>,
                                     566)],
             '$686binary_subscr.23': [(<numba.core.ir.Assign object at 0x00000221B6954110>,
                                       566)],
             '$720binary_subscr.27': [(<numba.core.ir.Assign object at 0x00000221B6957B90>,
                                       566)],
             '$72binary_subscr.14': [(<numba.core.ir.Assign object at 0x00000221B7D4A690>,
                                      0)],
             '$734binary_subscr.30': [(<numba.core.ir.Assign object at 0x00000221B69FE850>,
                                       566)],
             '$752compare_op.34': [(<numba.core.ir.Assign object at 0x00000221B69FC990>,
                                    566)],
             '$774binary_subscr.38': [(<numba.core.ir.Assign object at 0x00000221B69FC290>,
                                       566)],
             '$784pred': [(<numba.core.ir.Assign object at 0x00000221B69243D0>,
                           566)],
             '$818load_attr.7': [(<numba.core.ir.Assign object at 0x00000221B6927850>,
                                  798)],
             '$830binary_subscr.9': [(<numba.core.ir.Assign object at 0x00000221B6822E90>,
                                      798)],
             '$840compare_op.10': [(<numba.core.ir.Assign object at 0x00000221B6925E10>,
                                    798)],
             '$846pred': [(<numba.core.ir.Assign object at 0x00000221B69261D0>,
                           798)],
             '$850return_value.1': [(<numba.core.ir.Assign object at 0x00000221B6926050>,
                                     848)],
             '$854return_value.1': [(<numba.core.ir.Assign object at 0x00000221B69E8110>,
                                     852)],
             '$86call.15': [(<numba.core.ir.Assign object at 0x00000221B6766F90>,
                             0)],
             '$8binary_subscr.2': [(<numba.core.ir.Assign object at 0x00000221B7D43F90>,
                                    0)],
             '$96build_slice.16': [(<numba.core.ir.Assign object at 0x00000221B6766E10>,
                                    0)],
             '$96build_slice.17': [(<numba.core.ir.Assign object at 0x00000221B6766B10>,
                                    0)],
             '$98binary_subscr.18': [(<numba.core.ir.Assign object at 0x00000221B6766990>,
                                      0)],
             '$binop_add274.47': [(<numba.core.ir.Assign object at 0x00000221B69C5B90>,
                                   0)],
             '$binop_add438.15': [(<numba.core.ir.Assign object at 0x00000221B610A250>,
                                   362)],
             '$binop_add642.15': [(<numba.core.ir.Assign object at 0x00000221B6955950>,
                                   566)],
             '$binop_add748.33': [(<numba.core.ir.Assign object at 0x00000221B69FE3D0>,
                                   566)],
             '$binop_add804.3': [(<numba.core.ir.Assign object at 0x00000221B6926750>,
                                  798)],
             '$binop_iadd558.2': [(<numba.core.ir.Assign object at 0x00000221B6957390>,
                                   554)],
             '$binop_iadd790.2': [(<numba.core.ir.Assign object at 0x00000221B6925310>,
                                   786)],
             '$binop_iadd808.4': [(<numba.core.ir.Assign object at 0x00000221B6926D90>,
                                   798)],
             '$binop_iand284.49': [(<numba.core.ir.Assign object at 0x00000221B69C5D50>,
                                    0)],
             '$binop_iand758.35': [(<numba.core.ir.Assign object at 0x00000221B69FC310>,
                                    566)],
             '$binop_sub404.9': [(<numba.core.ir.Assign object at 0x00000221B6109950>,
                                  362)],
             '$binop_sub608.9': [(<numba.core.ir.Assign object at 0x00000221B6955F10>,
                                  566)],
             '$const130.22': [(<numba.core.ir.Assign object at 0x00000221B6765250>,
                               0)],
             '$const138.24': [(<numba.core.ir.Assign object at 0x00000221B6764D50>,
                               0)],
             '$const156.27': [(<numba.core.ir.Assign object at 0x00000221B6765D50>,
                               0)],
             '$const192.33': [(<numba.core.ir.Assign object at 0x00000221B69C79D0>,
                               0)],
             '$const220.39': [(<numba.core.ir.Assign object at 0x00000221B69C6650>,
                               0)],
             '$const298.51': [(<numba.core.ir.Assign object at 0x00000221B69C4AD0>,
                               0)],
             '$const314.1': [(<numba.core.ir.Assign object at 0x00000221B69C7410>,
                              312)],
             '$const342.3': [(<numba.core.ir.Assign object at 0x00000221B682D110>,
                              328)],
             '$const398.6': [(<numba.core.ir.Assign object at 0x00000221B610BC10>,
                              362)],
             '$const42.7': [(<numba.core.ir.Assign object at 0x00000221B6765610>,
                             0)],
             '$const454.18': [(<numba.core.ir.Assign object at 0x00000221B610ADD0>,
                               362)],
             '$const556.1': [(<numba.core.ir.Assign object at 0x00000221B6954390>,
                              554)],
             '$const6.1': [(<numba.core.ir.Assign object at 0x00000221B6767CD0>,
                            0)],
             '$const602.6': [(<numba.core.ir.Assign object at 0x00000221B6957A10>,
                              566)],
             '$const658.18': [(<numba.core.ir.Assign object at 0x00000221B6955050>,
                               566)],
             '$const70.13': [(<numba.core.ir.Assign object at 0x00000221B67661D0>,
                              0)],
             '$const788.1': [(<numba.core.ir.Assign object at 0x00000221B69FE2D0>,
                              786)],
             '$const802.2': [(<numba.core.ir.Assign object at 0x00000221B6926690>,
                              798)],
             '$const828.8': [(<numba.core.ir.Assign object at 0x00000221B6924A10>,
                              798)],
             '$const848.0': [(<numba.core.ir.Assign object at 0x00000221B6924250>,
                              848)],
             '$const852.0': [(<numba.core.ir.Assign object at 0x00000221B69E9090>,
                              852)],
             'avgn': [(<numba.core.ir.Assign object at 0x00000221B6956110>,
                       566)],
             'bool310': [(<numba.core.ir.Assign object at 0x00000221B69C6F10>,
                          0)],
             'bool360': [(<numba.core.ir.Assign object at 0x00000221B682E190>,
                          328)],
             'bool552': [(<numba.core.ir.Assign object at 0x00000221B6957E90>,
                          362)],
             'bool784': [(<numba.core.ir.Assign object at 0x00000221B69FC4D0>,
                          566)],
             'bool846': [(<numba.core.ir.Assign object at 0x00000221B6924950>,
                          798)],
             'delta': [(<numba.core.ir.Assign object at 0x00000221B687ED50>,
                        0)],
             'maxn': [(<numba.core.ir.Assign object at 0x00000221B6108950>,
                       362)],
             'n': [(<numba.core.ir.Assign object at 0x00000221B69C7910>, 312),
                   (<numba.core.ir.Assign object at 0x00000221B69C7750>, 324),
                   (<numba.core.ir.Assign object at 0x00000221B69566D0>, 554),
                   (<numba.core.ir.Assign object at 0x00000221B6926C90>, 786),
                   (<numba.core.ir.Assign object at 0x00000221B6926E50>, 798)],
             'peaks': [(<numba.core.ir.Assign object at 0x00000221B69E2290>,
                        0)],
             'post_avg': [(<numba.core.ir.Assign object at 0x00000221B687C690>,
                           0)],
             'post_max': [(<numba.core.ir.Assign object at 0x00000221B687FE90>,
                           0)],
             'pre_avg': [(<numba.core.ir.Assign object at 0x00000221B687D4D0>,
                          0)],
             'pre_max': [(<numba.core.ir.Assign object at 0x00000221B687EF10>,
                          0)],
             'wait': [(<numba.core.ir.Assign object at 0x00000221B69E1F90>, 0)],
             'x': [(<numba.core.ir.Assign object at 0x00000221B6822590>, 0)]})
2024-07-15 06:11:43,287 DEBUG:SSA violators <numba.core.utils.OrderedSet object at 0x00000221B6955310>
2024-07-15 06:11:43,287 DEBUG:Fix SSA violator on var n
2024-07-15 06:11:43,287 DEBUG:==== SSA block rewrite pass on 0
2024-07-15 06:11:43,287 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6822990>
2024-07-15 06:11:43,287 DEBUG:on stmt: x = arg(0, name=x)
2024-07-15 06:11:43,287 DEBUG:on stmt: pre_max = arg(1, name=pre_max)
2024-07-15 06:11:43,287 DEBUG:on stmt: post_max = arg(2, name=post_max)
2024-07-15 06:11:43,287 DEBUG:on stmt: pre_avg = arg(3, name=pre_avg)
2024-07-15 06:11:43,287 DEBUG:on stmt: post_avg = arg(4, name=post_avg)
2024-07-15 06:11:43,287 DEBUG:on stmt: delta = arg(5, name=delta)
2024-07-15 06:11:43,287 DEBUG:on stmt: wait = arg(6, name=wait)
2024-07-15 06:11:43,287 DEBUG:on stmt: peaks = arg(7, name=peaks)
2024-07-15 06:11:43,287 DEBUG:on stmt: $const6.1 = const(int, 0)
2024-07-15 06:11:43,287 DEBUG:on stmt: $8binary_subscr.2 = static_getitem(value=x, index=0, index_var=$const6.1, fn=<built-in function getitem>)
2024-07-15 06:11:43,287 DEBUG:on stmt: $18load_global.3 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:43,287 DEBUG:on stmt: $30load_attr.5 = getattr(value=$18load_global.3, attr=max)
2024-07-15 06:11:43,288 DEBUG:on stmt: $const42.7 = const(NoneType, None)
2024-07-15 06:11:43,288 DEBUG:on stmt: $44load_global.8 = global(min: <built-in function min>)
2024-07-15 06:11:43,288 DEBUG:on stmt: $60load_attr.12 = getattr(value=x, attr=shape)
2024-07-15 06:11:43,288 DEBUG:on stmt: $const70.13 = const(int, 0)
2024-07-15 06:11:43,288 DEBUG:on stmt: $72binary_subscr.14 = static_getitem(value=$60load_attr.12, index=0, index_var=$const70.13, fn=<built-in function getitem>)
2024-07-15 06:11:43,288 DEBUG:on stmt: $86call.15 = call $44load_global.8(post_max, $72binary_subscr.14, func=$44load_global.8, args=[Var(post_max, utils.py:1209), Var($72binary_subscr.14, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:43,288 DEBUG:on stmt: $96build_slice.16 = global(slice: <class 'slice'>)
2024-07-15 06:11:43,288 DEBUG:on stmt: $96build_slice.17 = call $96build_slice.16($const42.7, $86call.15, func=$96build_slice.16, args=(Var($const42.7, utils.py:1221), Var($86call.15, utils.py:1221)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:43,288 DEBUG:on stmt: $98binary_subscr.18 = getitem(value=x, index=$96build_slice.17, fn=<built-in function getitem>)
2024-07-15 06:11:43,288 DEBUG:on stmt: $112call.19 = call $30load_attr.5($98binary_subscr.18, func=$30load_attr.5, args=[Var($98binary_subscr.18, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:43,288 DEBUG:on stmt: $122compare_op.20 = $8binary_subscr.2 >= $112call.19
2024-07-15 06:11:43,288 DEBUG:on stmt: $const130.22 = const(int, 0)
2024-07-15 06:11:43,288 DEBUG:on stmt: peaks[0] = $122compare_op.20
2024-07-15 06:11:43,288 DEBUG:on stmt: $const138.24 = const(int, 0)
2024-07-15 06:11:43,288 DEBUG:on stmt: $144binary_subscr.25 = static_getitem(value=peaks, index=0, index_var=$const138.24, fn=<built-in function getitem>)
2024-07-15 06:11:43,288 DEBUG:on stmt: $const156.27 = const(int, 0)
2024-07-15 06:11:43,288 DEBUG:on stmt: $158binary_subscr.28 = static_getitem(value=x, index=0, index_var=$const156.27, fn=<built-in function getitem>)
2024-07-15 06:11:43,288 DEBUG:on stmt: $168load_global.29 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:43,288 DEBUG:on stmt: $180load_attr.31 = getattr(value=$168load_global.29, attr=mean)
2024-07-15 06:11:43,288 DEBUG:on stmt: $const192.33 = const(NoneType, None)
2024-07-15 06:11:43,288 DEBUG:on stmt: $194load_global.34 = global(min: <built-in function min>)
2024-07-15 06:11:43,288 DEBUG:on stmt: $210load_attr.38 = getattr(value=x, attr=shape)
2024-07-15 06:11:43,288 DEBUG:on stmt: $const220.39 = const(int, 0)
2024-07-15 06:11:43,288 DEBUG:on stmt: $222binary_subscr.40 = static_getitem(value=$210load_attr.38, index=0, index_var=$const220.39, fn=<built-in function getitem>)
2024-07-15 06:11:43,288 DEBUG:on stmt: $236call.41 = call $194load_global.34(post_avg, $222binary_subscr.40, func=$194load_global.34, args=[Var(post_avg, utils.py:1209), Var($222binary_subscr.40, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:43,288 DEBUG:on stmt: $246build_slice.42 = global(slice: <class 'slice'>)
2024-07-15 06:11:43,288 DEBUG:on stmt: $246build_slice.43 = call $246build_slice.42($const192.33, $236call.41, func=$246build_slice.42, args=(Var($const192.33, utils.py:1222), Var($236call.41, utils.py:1222)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:43,288 DEBUG:on stmt: $248binary_subscr.44 = getitem(value=x, index=$246build_slice.43, fn=<built-in function getitem>)
2024-07-15 06:11:43,288 DEBUG:on stmt: $262call.45 = call $180load_attr.31($248binary_subscr.44, func=$180load_attr.31, args=[Var($248binary_subscr.44, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:43,288 DEBUG:on stmt: $binop_add274.47 = $262call.45 + delta
2024-07-15 06:11:43,288 DEBUG:on stmt: $278compare_op.48 = $158binary_subscr.28 >= $binop_add274.47
2024-07-15 06:11:43,288 DEBUG:on stmt: $binop_iand284.49 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$144binary_subscr.25, rhs=$278compare_op.48, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:43,289 DEBUG:on stmt: peaks[0] = $binop_iand284.49
2024-07-15 06:11:43,289 DEBUG:on stmt: $const298.51 = const(int, 0)
2024-07-15 06:11:43,289 DEBUG:on stmt: $300binary_subscr.52 = static_getitem(value=peaks, index=0, index_var=$const298.51, fn=<built-in function getitem>)
2024-07-15 06:11:43,289 DEBUG:on stmt: bool310 = global(bool: <class 'bool'>)
2024-07-15 06:11:43,289 DEBUG:on stmt: $310pred = call bool310($300binary_subscr.52, func=bool310, args=(Var($300binary_subscr.52, utils.py:1224),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:43,289 DEBUG:on stmt: branch $310pred, 312, 324
2024-07-15 06:11:43,289 DEBUG:==== SSA block rewrite pass on 312
2024-07-15 06:11:43,289 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6822990>
2024-07-15 06:11:43,289 DEBUG:on stmt: $const314.1 = const(int, 1)
2024-07-15 06:11:43,289 DEBUG:on stmt: n = wait + $const314.1
2024-07-15 06:11:43,289 DEBUG:first assign: n
2024-07-15 06:11:43,289 DEBUG:replaced with: n = wait + $const314.1
2024-07-15 06:11:43,289 DEBUG:on stmt: jump 328
2024-07-15 06:11:43,289 DEBUG:==== SSA block rewrite pass on 324
2024-07-15 06:11:43,289 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6822990>
2024-07-15 06:11:43,289 DEBUG:on stmt: n = const(int, 1)
2024-07-15 06:11:43,289 DEBUG:replaced with: n.1 = const(int, 1)
2024-07-15 06:11:43,289 DEBUG:on stmt: jump 328
2024-07-15 06:11:43,289 DEBUG:==== SSA block rewrite pass on 328
2024-07-15 06:11:43,289 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6822990>
2024-07-15 06:11:43,289 DEBUG:on stmt: $332load_attr.2 = getattr(value=x, attr=shape)
2024-07-15 06:11:43,289 DEBUG:on stmt: $const342.3 = const(int, 0)
2024-07-15 06:11:43,289 DEBUG:on stmt: $344binary_subscr.4 = static_getitem(value=$332load_attr.2, index=0, index_var=$const342.3, fn=<built-in function getitem>)
2024-07-15 06:11:43,289 DEBUG:on stmt: $354compare_op.5 = n < $344binary_subscr.4
2024-07-15 06:11:43,289 DEBUG:on stmt: bool360 = global(bool: <class 'bool'>)
2024-07-15 06:11:43,289 DEBUG:on stmt: $360pred = call bool360($354compare_op.5, func=bool360, args=(Var($354compare_op.5, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:43,289 DEBUG:on stmt: branch $360pred, 362, 852
2024-07-15 06:11:43,289 DEBUG:==== SSA block rewrite pass on 362
2024-07-15 06:11:43,289 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6822990>
2024-07-15 06:11:43,289 DEBUG:on stmt: $362load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:43,289 DEBUG:on stmt: $374load_attr.2 = getattr(value=$362load_global.0, attr=max)
2024-07-15 06:11:43,289 DEBUG:on stmt: $386load_global.4 = global(max: <built-in function max>)
2024-07-15 06:11:43,289 DEBUG:on stmt: $const398.6 = const(int, 0)
2024-07-15 06:11:43,289 DEBUG:on stmt: $binop_sub404.9 = n - pre_max
2024-07-15 06:11:43,290 DEBUG:on stmt: $412call.10 = call $386load_global.4($const398.6, $binop_sub404.9, func=$386load_global.4, args=[Var($const398.6, utils.py:1230), Var($binop_sub404.9, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:43,290 DEBUG:on stmt: $422load_global.11 = global(min: <built-in function min>)
2024-07-15 06:11:43,290 DEBUG:on stmt: $binop_add438.15 = n + post_max
2024-07-15 06:11:43,290 DEBUG:on stmt: $444load_attr.17 = getattr(value=x, attr=shape)
2024-07-15 06:11:43,290 DEBUG:on stmt: $const454.18 = const(int, 0)
2024-07-15 06:11:43,290 DEBUG:on stmt: $456binary_subscr.19 = static_getitem(value=$444load_attr.17, index=0, index_var=$const454.18, fn=<built-in function getitem>)
2024-07-15 06:11:43,290 DEBUG:on stmt: $470call.20 = call $422load_global.11($binop_add438.15, $456binary_subscr.19, func=$422load_global.11, args=[Var($binop_add438.15, utils.py:1230), Var($456binary_subscr.19, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:43,290 DEBUG:on stmt: $480build_slice.21 = global(slice: <class 'slice'>)
2024-07-15 06:11:43,290 DEBUG:on stmt: $480build_slice.22 = call $480build_slice.21($412call.10, $470call.20, func=$480build_slice.21, args=(Var($412call.10, utils.py:1230), Var($470call.20, utils.py:1230)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:43,290 DEBUG:on stmt: $482binary_subscr.23 = getitem(value=x, index=$480build_slice.22, fn=<built-in function getitem>)
2024-07-15 06:11:43,290 DEBUG:on stmt: maxn = call $374load_attr.2($482binary_subscr.23, func=$374load_attr.2, args=[Var($482binary_subscr.23, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:43,290 DEBUG:on stmt: $512binary_subscr.27 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-07-15 06:11:43,290 DEBUG:on stmt: $524compare_op.29 = $512binary_subscr.27 == maxn
2024-07-15 06:11:43,290 DEBUG:on stmt: peaks[n] = $524compare_op.29
2024-07-15 06:11:43,290 DEBUG:on stmt: $542binary_subscr.34 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-07-15 06:11:43,290 DEBUG:on stmt: bool552 = global(bool: <class 'bool'>)
2024-07-15 06:11:43,290 DEBUG:on stmt: $552pred = call bool552($542binary_subscr.34, func=bool552, args=(Var($542binary_subscr.34, utils.py:1235),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:43,290 DEBUG:on stmt: branch $552pred, 566, 554
2024-07-15 06:11:43,290 DEBUG:==== SSA block rewrite pass on 554
2024-07-15 06:11:43,290 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6822990>
2024-07-15 06:11:43,290 DEBUG:on stmt: $const556.1 = const(int, 1)
2024-07-15 06:11:43,290 DEBUG:on stmt: $binop_iadd558.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const556.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:43,290 DEBUG:on stmt: n = $binop_iadd558.2
2024-07-15 06:11:43,290 DEBUG:replaced with: n.2 = $binop_iadd558.2
2024-07-15 06:11:43,290 DEBUG:on stmt: jump 853
2024-07-15 06:11:43,290 DEBUG:==== SSA block rewrite pass on 566
2024-07-15 06:11:43,290 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6822990>
2024-07-15 06:11:43,290 DEBUG:on stmt: $566load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:43,290 DEBUG:on stmt: $578load_attr.2 = getattr(value=$566load_global.0, attr=mean)
2024-07-15 06:11:43,290 DEBUG:on stmt: $590load_global.4 = global(max: <built-in function max>)
2024-07-15 06:11:43,290 DEBUG:on stmt: $const602.6 = const(int, 0)
2024-07-15 06:11:43,290 DEBUG:on stmt: $binop_sub608.9 = n - pre_avg
2024-07-15 06:11:43,290 DEBUG:on stmt: $616call.10 = call $590load_global.4($const602.6, $binop_sub608.9, func=$590load_global.4, args=[Var($const602.6, utils.py:1239), Var($binop_sub608.9, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:43,291 DEBUG:on stmt: $626load_global.11 = global(min: <built-in function min>)
2024-07-15 06:11:43,291 DEBUG:on stmt: $binop_add642.15 = n + post_avg
2024-07-15 06:11:43,291 DEBUG:on stmt: $648load_attr.17 = getattr(value=x, attr=shape)
2024-07-15 06:11:43,291 DEBUG:on stmt: $const658.18 = const(int, 0)
2024-07-15 06:11:43,291 DEBUG:on stmt: $660binary_subscr.19 = static_getitem(value=$648load_attr.17, index=0, index_var=$const658.18, fn=<built-in function getitem>)
2024-07-15 06:11:43,291 DEBUG:on stmt: $674call.20 = call $626load_global.11($binop_add642.15, $660binary_subscr.19, func=$626load_global.11, args=[Var($binop_add642.15, utils.py:1239), Var($660binary_subscr.19, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:43,291 DEBUG:on stmt: $684build_slice.21 = global(slice: <class 'slice'>)
2024-07-15 06:11:43,291 DEBUG:on stmt: $684build_slice.22 = call $684build_slice.21($616call.10, $674call.20, func=$684build_slice.21, args=(Var($616call.10, utils.py:1239), Var($674call.20, utils.py:1239)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:43,291 DEBUG:on stmt: $686binary_subscr.23 = getitem(value=x, index=$684build_slice.22, fn=<built-in function getitem>)
2024-07-15 06:11:43,291 DEBUG:on stmt: avgn = call $578load_attr.2($686binary_subscr.23, func=$578load_attr.2, args=[Var($686binary_subscr.23, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:43,291 DEBUG:on stmt: $720binary_subscr.27 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-07-15 06:11:43,291 DEBUG:on stmt: $734binary_subscr.30 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-07-15 06:11:43,291 DEBUG:on stmt: $binop_add748.33 = avgn + delta
2024-07-15 06:11:43,291 DEBUG:on stmt: $752compare_op.34 = $734binary_subscr.30 >= $binop_add748.33
2024-07-15 06:11:43,291 DEBUG:on stmt: $binop_iand758.35 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$720binary_subscr.27, rhs=$752compare_op.34, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:43,291 DEBUG:on stmt: peaks[n] = $binop_iand758.35
2024-07-15 06:11:43,291 DEBUG:on stmt: $774binary_subscr.38 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-07-15 06:11:43,291 DEBUG:on stmt: bool784 = global(bool: <class 'bool'>)
2024-07-15 06:11:43,291 DEBUG:on stmt: $784pred = call bool784($774binary_subscr.38, func=bool784, args=(Var($774binary_subscr.38, utils.py:1242),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:43,291 DEBUG:on stmt: branch $784pred, 798, 786
2024-07-15 06:11:43,291 DEBUG:==== SSA block rewrite pass on 786
2024-07-15 06:11:43,291 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6822990>
2024-07-15 06:11:43,291 DEBUG:on stmt: $const788.1 = const(int, 1)
2024-07-15 06:11:43,291 DEBUG:on stmt: $binop_iadd790.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const788.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:43,291 DEBUG:on stmt: n = $binop_iadd790.2
2024-07-15 06:11:43,291 DEBUG:replaced with: n.3 = $binop_iadd790.2
2024-07-15 06:11:43,291 DEBUG:on stmt: jump 853
2024-07-15 06:11:43,291 DEBUG:==== SSA block rewrite pass on 798
2024-07-15 06:11:43,291 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6822990>
2024-07-15 06:11:43,291 DEBUG:on stmt: $const802.2 = const(int, 1)
2024-07-15 06:11:43,291 DEBUG:on stmt: $binop_add804.3 = wait + $const802.2
2024-07-15 06:11:43,291 DEBUG:on stmt: $binop_iadd808.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$binop_add804.3, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:43,291 DEBUG:on stmt: n = $binop_iadd808.4
2024-07-15 06:11:43,292 DEBUG:replaced with: n.4 = $binop_iadd808.4
2024-07-15 06:11:43,292 DEBUG:on stmt: $818load_attr.7 = getattr(value=x, attr=shape)
2024-07-15 06:11:43,292 DEBUG:on stmt: $const828.8 = const(int, 0)
2024-07-15 06:11:43,292 DEBUG:on stmt: $830binary_subscr.9 = static_getitem(value=$818load_attr.7, index=0, index_var=$const828.8, fn=<built-in function getitem>)
2024-07-15 06:11:43,292 DEBUG:on stmt: $840compare_op.10 = n < $830binary_subscr.9
2024-07-15 06:11:43,292 DEBUG:on stmt: bool846 = global(bool: <class 'bool'>)
2024-07-15 06:11:43,292 DEBUG:on stmt: $846pred = call bool846($840compare_op.10, func=bool846, args=(Var($840compare_op.10, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:43,292 DEBUG:on stmt: branch $846pred, 362, 848
2024-07-15 06:11:43,292 DEBUG:==== SSA block rewrite pass on 848
2024-07-15 06:11:43,292 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6822990>
2024-07-15 06:11:43,292 DEBUG:on stmt: $const848.0 = const(NoneType, None)
2024-07-15 06:11:43,292 DEBUG:on stmt: $850return_value.1 = cast(value=$const848.0)
2024-07-15 06:11:43,292 DEBUG:on stmt: return $850return_value.1
2024-07-15 06:11:43,292 DEBUG:==== SSA block rewrite pass on 852
2024-07-15 06:11:43,292 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6822990>
2024-07-15 06:11:43,292 DEBUG:on stmt: $const852.0 = const(NoneType, None)
2024-07-15 06:11:43,292 DEBUG:on stmt: $854return_value.1 = cast(value=$const852.0)
2024-07-15 06:11:43,292 DEBUG:on stmt: return $854return_value.1
2024-07-15 06:11:43,292 DEBUG:==== SSA block rewrite pass on 853
2024-07-15 06:11:43,292 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6822990>
2024-07-15 06:11:43,292 DEBUG:on stmt: jump 328
2024-07-15 06:11:43,292 DEBUG:Replaced assignments: defaultdict(<class 'list'>,
            {312: [<numba.core.ir.Assign object at 0x00000221B6820050>],
             324: [<numba.core.ir.Assign object at 0x00000221B6822B50>],
             554: [<numba.core.ir.Assign object at 0x00000221B6821CD0>],
             786: [<numba.core.ir.Assign object at 0x00000221B6820FD0>],
             798: [<numba.core.ir.Assign object at 0x00000221B6981990>]})
2024-07-15 06:11:43,292 DEBUG:==== SSA block rewrite pass on 0
2024-07-15 06:11:43,292 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B6A1D3D0>
2024-07-15 06:11:43,292 DEBUG:on stmt: x = arg(0, name=x)
2024-07-15 06:11:43,292 DEBUG:on stmt: pre_max = arg(1, name=pre_max)
2024-07-15 06:11:43,292 DEBUG:on stmt: post_max = arg(2, name=post_max)
2024-07-15 06:11:43,292 DEBUG:on stmt: pre_avg = arg(3, name=pre_avg)
2024-07-15 06:11:43,292 DEBUG:on stmt: post_avg = arg(4, name=post_avg)
2024-07-15 06:11:43,292 DEBUG:on stmt: delta = arg(5, name=delta)
2024-07-15 06:11:43,292 DEBUG:on stmt: wait = arg(6, name=wait)
2024-07-15 06:11:43,292 DEBUG:on stmt: peaks = arg(7, name=peaks)
2024-07-15 06:11:43,292 DEBUG:on stmt: $const6.1 = const(int, 0)
2024-07-15 06:11:43,292 DEBUG:on stmt: $8binary_subscr.2 = static_getitem(value=x, index=0, index_var=$const6.1, fn=<built-in function getitem>)
2024-07-15 06:11:43,293 DEBUG:on stmt: $18load_global.3 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:43,293 DEBUG:on stmt: $30load_attr.5 = getattr(value=$18load_global.3, attr=max)
2024-07-15 06:11:43,293 DEBUG:on stmt: $const42.7 = const(NoneType, None)
2024-07-15 06:11:43,293 DEBUG:on stmt: $44load_global.8 = global(min: <built-in function min>)
2024-07-15 06:11:43,293 DEBUG:on stmt: $60load_attr.12 = getattr(value=x, attr=shape)
2024-07-15 06:11:43,293 DEBUG:on stmt: $const70.13 = const(int, 0)
2024-07-15 06:11:43,293 DEBUG:on stmt: $72binary_subscr.14 = static_getitem(value=$60load_attr.12, index=0, index_var=$const70.13, fn=<built-in function getitem>)
2024-07-15 06:11:43,293 DEBUG:on stmt: $86call.15 = call $44load_global.8(post_max, $72binary_subscr.14, func=$44load_global.8, args=[Var(post_max, utils.py:1209), Var($72binary_subscr.14, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:43,293 DEBUG:on stmt: $96build_slice.16 = global(slice: <class 'slice'>)
2024-07-15 06:11:43,293 DEBUG:on stmt: $96build_slice.17 = call $96build_slice.16($const42.7, $86call.15, func=$96build_slice.16, args=(Var($const42.7, utils.py:1221), Var($86call.15, utils.py:1221)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:43,293 DEBUG:on stmt: $98binary_subscr.18 = getitem(value=x, index=$96build_slice.17, fn=<built-in function getitem>)
2024-07-15 06:11:43,293 DEBUG:on stmt: $112call.19 = call $30load_attr.5($98binary_subscr.18, func=$30load_attr.5, args=[Var($98binary_subscr.18, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:43,293 DEBUG:on stmt: $122compare_op.20 = $8binary_subscr.2 >= $112call.19
2024-07-15 06:11:43,293 DEBUG:on stmt: $const130.22 = const(int, 0)
2024-07-15 06:11:43,293 DEBUG:on stmt: peaks[0] = $122compare_op.20
2024-07-15 06:11:43,293 DEBUG:on stmt: $const138.24 = const(int, 0)
2024-07-15 06:11:43,293 DEBUG:on stmt: $144binary_subscr.25 = static_getitem(value=peaks, index=0, index_var=$const138.24, fn=<built-in function getitem>)
2024-07-15 06:11:43,293 DEBUG:on stmt: $const156.27 = const(int, 0)
2024-07-15 06:11:43,293 DEBUG:on stmt: $158binary_subscr.28 = static_getitem(value=x, index=0, index_var=$const156.27, fn=<built-in function getitem>)
2024-07-15 06:11:43,293 DEBUG:on stmt: $168load_global.29 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:43,293 DEBUG:on stmt: $180load_attr.31 = getattr(value=$168load_global.29, attr=mean)
2024-07-15 06:11:43,293 DEBUG:on stmt: $const192.33 = const(NoneType, None)
2024-07-15 06:11:43,293 DEBUG:on stmt: $194load_global.34 = global(min: <built-in function min>)
2024-07-15 06:11:43,293 DEBUG:on stmt: $210load_attr.38 = getattr(value=x, attr=shape)
2024-07-15 06:11:43,293 DEBUG:on stmt: $const220.39 = const(int, 0)
2024-07-15 06:11:43,293 DEBUG:on stmt: $222binary_subscr.40 = static_getitem(value=$210load_attr.38, index=0, index_var=$const220.39, fn=<built-in function getitem>)
2024-07-15 06:11:43,293 DEBUG:on stmt: $236call.41 = call $194load_global.34(post_avg, $222binary_subscr.40, func=$194load_global.34, args=[Var(post_avg, utils.py:1209), Var($222binary_subscr.40, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:43,293 DEBUG:on stmt: $246build_slice.42 = global(slice: <class 'slice'>)
2024-07-15 06:11:43,293 DEBUG:on stmt: $246build_slice.43 = call $246build_slice.42($const192.33, $236call.41, func=$246build_slice.42, args=(Var($const192.33, utils.py:1222), Var($236call.41, utils.py:1222)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:43,294 DEBUG:on stmt: $248binary_subscr.44 = getitem(value=x, index=$246build_slice.43, fn=<built-in function getitem>)
2024-07-15 06:11:43,294 DEBUG:on stmt: $262call.45 = call $180load_attr.31($248binary_subscr.44, func=$180load_attr.31, args=[Var($248binary_subscr.44, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:43,294 DEBUG:on stmt: $binop_add274.47 = $262call.45 + delta
2024-07-15 06:11:43,294 DEBUG:on stmt: $278compare_op.48 = $158binary_subscr.28 >= $binop_add274.47
2024-07-15 06:11:43,294 DEBUG:on stmt: $binop_iand284.49 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$144binary_subscr.25, rhs=$278compare_op.48, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:43,294 DEBUG:on stmt: peaks[0] = $binop_iand284.49
2024-07-15 06:11:43,294 DEBUG:on stmt: $const298.51 = const(int, 0)
2024-07-15 06:11:43,294 DEBUG:on stmt: $300binary_subscr.52 = static_getitem(value=peaks, index=0, index_var=$const298.51, fn=<built-in function getitem>)
2024-07-15 06:11:43,294 DEBUG:on stmt: bool310 = global(bool: <class 'bool'>)
2024-07-15 06:11:43,294 DEBUG:on stmt: $310pred = call bool310($300binary_subscr.52, func=bool310, args=(Var($300binary_subscr.52, utils.py:1224),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:43,294 DEBUG:on stmt: branch $310pred, 312, 324
2024-07-15 06:11:43,294 DEBUG:==== SSA block rewrite pass on 312
2024-07-15 06:11:43,294 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B6A1D3D0>
2024-07-15 06:11:43,294 DEBUG:on stmt: $const314.1 = const(int, 1)
2024-07-15 06:11:43,294 DEBUG:on stmt: n = wait + $const314.1
2024-07-15 06:11:43,294 DEBUG:on stmt: jump 328
2024-07-15 06:11:43,294 DEBUG:==== SSA block rewrite pass on 324
2024-07-15 06:11:43,294 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B6A1D3D0>
2024-07-15 06:11:43,294 DEBUG:on stmt: n.1 = const(int, 1)
2024-07-15 06:11:43,294 DEBUG:on stmt: jump 328
2024-07-15 06:11:43,294 DEBUG:==== SSA block rewrite pass on 328
2024-07-15 06:11:43,294 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B6A1D3D0>
2024-07-15 06:11:43,294 DEBUG:on stmt: $332load_attr.2 = getattr(value=x, attr=shape)
2024-07-15 06:11:43,294 DEBUG:on stmt: $const342.3 = const(int, 0)
2024-07-15 06:11:43,294 DEBUG:on stmt: $344binary_subscr.4 = static_getitem(value=$332load_attr.2, index=0, index_var=$const342.3, fn=<built-in function getitem>)
2024-07-15 06:11:43,294 DEBUG:on stmt: $354compare_op.5 = n < $344binary_subscr.4
2024-07-15 06:11:43,294 DEBUG:find_def var='n' stmt=$354compare_op.5 = n < $344binary_subscr.4
2024-07-15 06:11:43,295 DEBUG:find_def_from_top label 328
2024-07-15 06:11:43,295 DEBUG:insert phi node n.5 = phi(incoming_values=[], incoming_blocks=[]) at 328
2024-07-15 06:11:43,295 DEBUG:find_def_from_bottom label 312
2024-07-15 06:11:43,295 DEBUG:incoming_def n = wait + $const314.1
2024-07-15 06:11:43,295 DEBUG:find_def_from_bottom label 324
2024-07-15 06:11:43,295 DEBUG:incoming_def n.1 = const(int, 1)
2024-07-15 06:11:43,295 DEBUG:find_def_from_bottom label 853
2024-07-15 06:11:43,295 DEBUG:find_def_from_top label 853
2024-07-15 06:11:43,295 DEBUG:insert phi node n.6 = phi(incoming_values=[], incoming_blocks=[]) at 853
2024-07-15 06:11:43,295 DEBUG:find_def_from_bottom label 554
2024-07-15 06:11:43,295 DEBUG:incoming_def n.2 = $binop_iadd558.2
2024-07-15 06:11:43,295 DEBUG:find_def_from_bottom label 786
2024-07-15 06:11:43,295 DEBUG:incoming_def n.3 = $binop_iadd790.2
2024-07-15 06:11:43,295 DEBUG:incoming_def n.6 = phi(incoming_values=[Var(n.2, utils.py:1236), Var(n.3, utils.py:1243)], incoming_blocks=[554, 786])
2024-07-15 06:11:43,295 DEBUG:replaced with: $354compare_op.5 = n.5 < $344binary_subscr.4
2024-07-15 06:11:43,295 DEBUG:on stmt: bool360 = global(bool: <class 'bool'>)
2024-07-15 06:11:43,295 DEBUG:on stmt: $360pred = call bool360($354compare_op.5, func=bool360, args=(Var($354compare_op.5, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:43,295 DEBUG:on stmt: branch $360pred, 362, 852
2024-07-15 06:11:43,295 DEBUG:==== SSA block rewrite pass on 362
2024-07-15 06:11:43,295 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B6A1D3D0>
2024-07-15 06:11:43,295 DEBUG:on stmt: $362load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:43,295 DEBUG:on stmt: $374load_attr.2 = getattr(value=$362load_global.0, attr=max)
2024-07-15 06:11:43,295 DEBUG:on stmt: $386load_global.4 = global(max: <built-in function max>)
2024-07-15 06:11:43,295 DEBUG:on stmt: $const398.6 = const(int, 0)
2024-07-15 06:11:43,295 DEBUG:on stmt: $binop_sub404.9 = n - pre_max
2024-07-15 06:11:43,295 DEBUG:find_def var='n' stmt=$binop_sub404.9 = n - pre_max
2024-07-15 06:11:43,295 DEBUG:find_def_from_top label 362
2024-07-15 06:11:43,295 DEBUG:insert phi node n.7 = phi(incoming_values=[], incoming_blocks=[]) at 362
2024-07-15 06:11:43,295 DEBUG:find_def_from_bottom label 328
2024-07-15 06:11:43,295 DEBUG:incoming_def n.5 = phi(incoming_values=[Var(n, utils.py:1225), Var(n.1, utils.py:1227), Var(n.6, utils.py:1229)], incoming_blocks=[312, 324, 853])
2024-07-15 06:11:43,295 DEBUG:find_def_from_bottom label 798
2024-07-15 06:11:43,295 DEBUG:incoming_def n.4 = $binop_iadd808.4
2024-07-15 06:11:43,296 DEBUG:replaced with: $binop_sub404.9 = n.7 - pre_max
2024-07-15 06:11:43,296 DEBUG:on stmt: $412call.10 = call $386load_global.4($const398.6, $binop_sub404.9, func=$386load_global.4, args=[Var($const398.6, utils.py:1230), Var($binop_sub404.9, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:43,296 DEBUG:on stmt: $422load_global.11 = global(min: <built-in function min>)
2024-07-15 06:11:43,296 DEBUG:on stmt: $binop_add438.15 = n + post_max
2024-07-15 06:11:43,296 DEBUG:find_def var='n' stmt=$binop_add438.15 = n + post_max
2024-07-15 06:11:43,296 DEBUG:replaced with: $binop_add438.15 = n.7 + post_max
2024-07-15 06:11:43,296 DEBUG:on stmt: $444load_attr.17 = getattr(value=x, attr=shape)
2024-07-15 06:11:43,296 DEBUG:on stmt: $const454.18 = const(int, 0)
2024-07-15 06:11:43,296 DEBUG:on stmt: $456binary_subscr.19 = static_getitem(value=$444load_attr.17, index=0, index_var=$const454.18, fn=<built-in function getitem>)
2024-07-15 06:11:43,296 DEBUG:on stmt: $470call.20 = call $422load_global.11($binop_add438.15, $456binary_subscr.19, func=$422load_global.11, args=[Var($binop_add438.15, utils.py:1230), Var($456binary_subscr.19, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:43,296 DEBUG:on stmt: $480build_slice.21 = global(slice: <class 'slice'>)
2024-07-15 06:11:43,296 DEBUG:on stmt: $480build_slice.22 = call $480build_slice.21($412call.10, $470call.20, func=$480build_slice.21, args=(Var($412call.10, utils.py:1230), Var($470call.20, utils.py:1230)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:43,296 DEBUG:on stmt: $482binary_subscr.23 = getitem(value=x, index=$480build_slice.22, fn=<built-in function getitem>)
2024-07-15 06:11:43,296 DEBUG:on stmt: maxn = call $374load_attr.2($482binary_subscr.23, func=$374load_attr.2, args=[Var($482binary_subscr.23, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:43,296 DEBUG:on stmt: $512binary_subscr.27 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-07-15 06:11:43,296 DEBUG:find_def var='n' stmt=$512binary_subscr.27 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-07-15 06:11:43,296 DEBUG:replaced with: $512binary_subscr.27 = getitem(value=x, index=n.7, fn=<built-in function getitem>)
2024-07-15 06:11:43,296 DEBUG:on stmt: $524compare_op.29 = $512binary_subscr.27 == maxn
2024-07-15 06:11:43,296 DEBUG:on stmt: peaks[n] = $524compare_op.29
2024-07-15 06:11:43,296 DEBUG:find_def var='n' stmt=peaks[n] = $524compare_op.29
2024-07-15 06:11:43,296 DEBUG:replaced with: peaks[n.7] = $524compare_op.29
2024-07-15 06:11:43,296 DEBUG:on stmt: $542binary_subscr.34 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-07-15 06:11:43,296 DEBUG:find_def var='n' stmt=$542binary_subscr.34 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-07-15 06:11:43,296 DEBUG:replaced with: $542binary_subscr.34 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)
2024-07-15 06:11:43,296 DEBUG:on stmt: bool552 = global(bool: <class 'bool'>)
2024-07-15 06:11:43,296 DEBUG:on stmt: $552pred = call bool552($542binary_subscr.34, func=bool552, args=(Var($542binary_subscr.34, utils.py:1235),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:43,296 DEBUG:on stmt: branch $552pred, 566, 554
2024-07-15 06:11:43,296 DEBUG:==== SSA block rewrite pass on 554
2024-07-15 06:11:43,296 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B6A1D3D0>
2024-07-15 06:11:43,296 DEBUG:on stmt: $const556.1 = const(int, 1)
2024-07-15 06:11:43,296 DEBUG:on stmt: $binop_iadd558.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const556.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:43,296 DEBUG:find_def var='n' stmt=$binop_iadd558.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const556.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:43,297 DEBUG:find_def_from_top label 554
2024-07-15 06:11:43,297 DEBUG:idom 362 from label 554
2024-07-15 06:11:43,297 DEBUG:find_def_from_bottom label 362
2024-07-15 06:11:43,297 DEBUG:replaced with: $binop_iadd558.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$const556.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:43,297 DEBUG:on stmt: n.2 = $binop_iadd558.2
2024-07-15 06:11:43,297 DEBUG:on stmt: jump 853
2024-07-15 06:11:43,297 DEBUG:==== SSA block rewrite pass on 566
2024-07-15 06:11:43,297 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B6A1D3D0>
2024-07-15 06:11:43,297 DEBUG:on stmt: $566load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:43,297 DEBUG:on stmt: $578load_attr.2 = getattr(value=$566load_global.0, attr=mean)
2024-07-15 06:11:43,297 DEBUG:on stmt: $590load_global.4 = global(max: <built-in function max>)
2024-07-15 06:11:43,297 DEBUG:on stmt: $const602.6 = const(int, 0)
2024-07-15 06:11:43,297 DEBUG:on stmt: $binop_sub608.9 = n - pre_avg
2024-07-15 06:11:43,297 DEBUG:find_def var='n' stmt=$binop_sub608.9 = n - pre_avg
2024-07-15 06:11:43,297 DEBUG:find_def_from_top label 566
2024-07-15 06:11:43,297 DEBUG:idom 362 from label 566
2024-07-15 06:11:43,297 DEBUG:find_def_from_bottom label 362
2024-07-15 06:11:43,297 DEBUG:replaced with: $binop_sub608.9 = n.7 - pre_avg
2024-07-15 06:11:43,297 DEBUG:on stmt: $616call.10 = call $590load_global.4($const602.6, $binop_sub608.9, func=$590load_global.4, args=[Var($const602.6, utils.py:1239), Var($binop_sub608.9, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:43,297 DEBUG:on stmt: $626load_global.11 = global(min: <built-in function min>)
2024-07-15 06:11:43,297 DEBUG:on stmt: $binop_add642.15 = n + post_avg
2024-07-15 06:11:43,297 DEBUG:find_def var='n' stmt=$binop_add642.15 = n + post_avg
2024-07-15 06:11:43,297 DEBUG:find_def_from_top label 566
2024-07-15 06:11:43,297 DEBUG:idom 362 from label 566
2024-07-15 06:11:43,297 DEBUG:find_def_from_bottom label 362
2024-07-15 06:11:43,297 DEBUG:replaced with: $binop_add642.15 = n.7 + post_avg
2024-07-15 06:11:43,297 DEBUG:on stmt: $648load_attr.17 = getattr(value=x, attr=shape)
2024-07-15 06:11:43,297 DEBUG:on stmt: $const658.18 = const(int, 0)
2024-07-15 06:11:43,297 DEBUG:on stmt: $660binary_subscr.19 = static_getitem(value=$648load_attr.17, index=0, index_var=$const658.18, fn=<built-in function getitem>)
2024-07-15 06:11:43,297 DEBUG:on stmt: $674call.20 = call $626load_global.11($binop_add642.15, $660binary_subscr.19, func=$626load_global.11, args=[Var($binop_add642.15, utils.py:1239), Var($660binary_subscr.19, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:43,298 DEBUG:on stmt: $684build_slice.21 = global(slice: <class 'slice'>)
2024-07-15 06:11:43,298 DEBUG:on stmt: $684build_slice.22 = call $684build_slice.21($616call.10, $674call.20, func=$684build_slice.21, args=(Var($616call.10, utils.py:1239), Var($674call.20, utils.py:1239)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:43,298 DEBUG:on stmt: $686binary_subscr.23 = getitem(value=x, index=$684build_slice.22, fn=<built-in function getitem>)
2024-07-15 06:11:43,298 DEBUG:on stmt: avgn = call $578load_attr.2($686binary_subscr.23, func=$578load_attr.2, args=[Var($686binary_subscr.23, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:43,298 DEBUG:on stmt: $720binary_subscr.27 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-07-15 06:11:43,298 DEBUG:find_def var='n' stmt=$720binary_subscr.27 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-07-15 06:11:43,298 DEBUG:find_def_from_top label 566
2024-07-15 06:11:43,298 DEBUG:idom 362 from label 566
2024-07-15 06:11:43,298 DEBUG:find_def_from_bottom label 362
2024-07-15 06:11:43,298 DEBUG:replaced with: $720binary_subscr.27 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)
2024-07-15 06:11:43,298 DEBUG:on stmt: $734binary_subscr.30 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-07-15 06:11:43,298 DEBUG:find_def var='n' stmt=$734binary_subscr.30 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-07-15 06:11:43,298 DEBUG:find_def_from_top label 566
2024-07-15 06:11:43,298 DEBUG:idom 362 from label 566
2024-07-15 06:11:43,298 DEBUG:find_def_from_bottom label 362
2024-07-15 06:11:43,298 DEBUG:replaced with: $734binary_subscr.30 = getitem(value=x, index=n.7, fn=<built-in function getitem>)
2024-07-15 06:11:43,298 DEBUG:on stmt: $binop_add748.33 = avgn + delta
2024-07-15 06:11:43,298 DEBUG:on stmt: $752compare_op.34 = $734binary_subscr.30 >= $binop_add748.33
2024-07-15 06:11:43,298 DEBUG:on stmt: $binop_iand758.35 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$720binary_subscr.27, rhs=$752compare_op.34, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:43,298 DEBUG:on stmt: peaks[n] = $binop_iand758.35
2024-07-15 06:11:43,298 DEBUG:find_def var='n' stmt=peaks[n] = $binop_iand758.35
2024-07-15 06:11:43,298 DEBUG:find_def_from_top label 566
2024-07-15 06:11:43,298 DEBUG:idom 362 from label 566
2024-07-15 06:11:43,298 DEBUG:find_def_from_bottom label 362
2024-07-15 06:11:43,298 DEBUG:replaced with: peaks[n.7] = $binop_iand758.35
2024-07-15 06:11:43,298 DEBUG:on stmt: $774binary_subscr.38 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-07-15 06:11:43,298 DEBUG:find_def var='n' stmt=$774binary_subscr.38 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-07-15 06:11:43,298 DEBUG:find_def_from_top label 566
2024-07-15 06:11:43,298 DEBUG:idom 362 from label 566
2024-07-15 06:11:43,298 DEBUG:find_def_from_bottom label 362
2024-07-15 06:11:43,298 DEBUG:replaced with: $774binary_subscr.38 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)
2024-07-15 06:11:43,299 DEBUG:on stmt: bool784 = global(bool: <class 'bool'>)
2024-07-15 06:11:43,299 DEBUG:on stmt: $784pred = call bool784($774binary_subscr.38, func=bool784, args=(Var($774binary_subscr.38, utils.py:1242),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:43,299 DEBUG:on stmt: branch $784pred, 798, 786
2024-07-15 06:11:43,299 DEBUG:==== SSA block rewrite pass on 786
2024-07-15 06:11:43,299 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B6A1D3D0>
2024-07-15 06:11:43,299 DEBUG:on stmt: $const788.1 = const(int, 1)
2024-07-15 06:11:43,299 DEBUG:on stmt: $binop_iadd790.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const788.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:43,299 DEBUG:find_def var='n' stmt=$binop_iadd790.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const788.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:43,299 DEBUG:find_def_from_top label 786
2024-07-15 06:11:43,299 DEBUG:idom 566 from label 786
2024-07-15 06:11:43,299 DEBUG:find_def_from_bottom label 566
2024-07-15 06:11:43,299 DEBUG:find_def_from_top label 566
2024-07-15 06:11:43,299 DEBUG:idom 362 from label 566
2024-07-15 06:11:43,299 DEBUG:find_def_from_bottom label 362
2024-07-15 06:11:43,299 DEBUG:replaced with: $binop_iadd790.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$const788.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:43,299 DEBUG:on stmt: n.3 = $binop_iadd790.2
2024-07-15 06:11:43,299 DEBUG:on stmt: jump 853
2024-07-15 06:11:43,299 DEBUG:==== SSA block rewrite pass on 798
2024-07-15 06:11:43,299 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B6A1D3D0>
2024-07-15 06:11:43,299 DEBUG:on stmt: $const802.2 = const(int, 1)
2024-07-15 06:11:43,299 DEBUG:on stmt: $binop_add804.3 = wait + $const802.2
2024-07-15 06:11:43,299 DEBUG:on stmt: $binop_iadd808.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$binop_add804.3, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:43,299 DEBUG:find_def var='n' stmt=$binop_iadd808.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$binop_add804.3, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:43,299 DEBUG:find_def_from_top label 798
2024-07-15 06:11:43,299 DEBUG:idom 566 from label 798
2024-07-15 06:11:43,299 DEBUG:find_def_from_bottom label 566
2024-07-15 06:11:43,300 DEBUG:find_def_from_top label 566
2024-07-15 06:11:43,300 DEBUG:idom 362 from label 566
2024-07-15 06:11:43,300 DEBUG:find_def_from_bottom label 362
2024-07-15 06:11:43,300 DEBUG:replaced with: $binop_iadd808.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$binop_add804.3, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:43,300 DEBUG:on stmt: n.4 = $binop_iadd808.4
2024-07-15 06:11:43,300 DEBUG:on stmt: $818load_attr.7 = getattr(value=x, attr=shape)
2024-07-15 06:11:43,300 DEBUG:on stmt: $const828.8 = const(int, 0)
2024-07-15 06:11:43,300 DEBUG:on stmt: $830binary_subscr.9 = static_getitem(value=$818load_attr.7, index=0, index_var=$const828.8, fn=<built-in function getitem>)
2024-07-15 06:11:43,300 DEBUG:on stmt: $840compare_op.10 = n < $830binary_subscr.9
2024-07-15 06:11:43,300 DEBUG:find_def var='n' stmt=$840compare_op.10 = n < $830binary_subscr.9
2024-07-15 06:11:43,300 DEBUG:replaced with: $840compare_op.10 = n.4 < $830binary_subscr.9
2024-07-15 06:11:43,300 DEBUG:on stmt: bool846 = global(bool: <class 'bool'>)
2024-07-15 06:11:43,300 DEBUG:on stmt: $846pred = call bool846($840compare_op.10, func=bool846, args=(Var($840compare_op.10, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:43,300 DEBUG:on stmt: branch $846pred, 362, 848
2024-07-15 06:11:43,300 DEBUG:==== SSA block rewrite pass on 848
2024-07-15 06:11:43,300 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B6A1D3D0>
2024-07-15 06:11:43,300 DEBUG:on stmt: $const848.0 = const(NoneType, None)
2024-07-15 06:11:43,300 DEBUG:on stmt: $850return_value.1 = cast(value=$const848.0)
2024-07-15 06:11:43,300 DEBUG:on stmt: return $850return_value.1
2024-07-15 06:11:43,300 DEBUG:==== SSA block rewrite pass on 852
2024-07-15 06:11:43,300 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B6A1D3D0>
2024-07-15 06:11:43,300 DEBUG:on stmt: $const852.0 = const(NoneType, None)
2024-07-15 06:11:43,300 DEBUG:on stmt: $854return_value.1 = cast(value=$const852.0)
2024-07-15 06:11:43,300 DEBUG:on stmt: return $854return_value.1
2024-07-15 06:11:43,300 DEBUG:==== SSA block rewrite pass on 853
2024-07-15 06:11:43,300 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B6A1D3D0>
2024-07-15 06:11:43,300 DEBUG:on stmt: jump 328
2024-07-15 06:11:43,320 DEBUG:bytecode dump:
>          0	NOP(arg=None, lineno=570)
           2	COPY_FREE_VARS(arg=2, lineno=570)
           4	RESUME(arg=0, lineno=570)
           6	LOAD_FAST(arg=0, lineno=571)
           8	LOAD_ATTR(arg=0, lineno=571)
          18	LOAD_CONST(arg=1, lineno=571)
          20	COMPARE_OP(arg=2, lineno=571)
          26	POP_JUMP_FORWARD_IF_FALSE(arg=15, lineno=571)
          28	LOAD_GLOBAL(arg=3, lineno=572)
          40	LOAD_CONST(arg=2, lineno=572)
          42	PRECALL(arg=1, lineno=572)
          46	CALL(arg=1, lineno=572)
          56	RAISE_VARARGS(arg=1, lineno=572)
>         58	LOAD_GLOBAL(arg=5, lineno=575)
          70	LOAD_ATTR(arg=3, lineno=575)
          80	LOAD_FAST(arg=0, lineno=575)
          82	PRECALL(arg=1, lineno=575)
          86	CALL(arg=1, lineno=575)
          96	STORE_FAST(arg=1, lineno=575)
          98	LOAD_GLOBAL(arg=9, lineno=576)
         110	LOAD_FAST(arg=1, lineno=576)
         112	PRECALL(arg=1, lineno=576)
         116	CALL(arg=1, lineno=576)
         126	LOAD_METHOD(arg=5, lineno=576)
         148	LOAD_CONST(arg=1, lineno=576)
         150	PRECALL(arg=1, lineno=576)
         154	CALL(arg=1, lineno=576)
         164	STORE_FAST(arg=2, lineno=576)
         166	PUSH_NULL(arg=None, lineno=577)
         168	LOAD_DEREF(arg=6, lineno=577)
         170	LOAD_FAST(arg=2, lineno=577)
         172	PRECALL(arg=1, lineno=577)
         176	CALL(arg=1, lineno=577)
         186	POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=577)
         188	LOAD_FAST(arg=2, lineno=578)
         190	RETURN_VALUE(arg=None, lineno=578)
>        192	LOAD_FAST(arg=1, lineno=580)
         194	GET_ITER(arg=None, lineno=580)
>        196	FOR_ITER(arg=51, lineno=580)
         198	STORE_FAST(arg=3, lineno=580)
         200	LOAD_FAST(arg=3, lineno=581)
         202	LOAD_METHOD(arg=6, lineno=581)
         224	PRECALL(arg=0, lineno=581)
         228	CALL(arg=0, lineno=581)
         238	STORE_FAST(arg=4, lineno=581)
         240	PUSH_NULL(arg=None, lineno=582)
         242	LOAD_DEREF(arg=6, lineno=582)
         244	LOAD_FAST(arg=4, lineno=582)
         246	PRECALL(arg=1, lineno=582)
         250	CALL(arg=1, lineno=582)
         260	POP_JUMP_FORWARD_IF_FALSE(arg=4, lineno=582)
         262	LOAD_FAST(arg=4, lineno=583)
         264	SWAP(arg=2, lineno=583)
         266	POP_TOP(arg=None, lineno=583)
         268	RETURN_VALUE(arg=None, lineno=583)
>        270	PUSH_NULL(arg=None, lineno=584)
         272	LOAD_DEREF(arg=5, lineno=584)
         274	LOAD_FAST(arg=4, lineno=584)
         276	LOAD_FAST(arg=2, lineno=584)
         278	PRECALL(arg=2, lineno=584)
         282	CALL(arg=2, lineno=584)
         292	POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=584)
         294	LOAD_FAST(arg=4, lineno=585)
         296	STORE_FAST(arg=2, lineno=585)
>        298	JUMP_BACKWARD(arg=52, lineno=585)
>        300	LOAD_FAST(arg=2, lineno=586)
         302	RETURN_VALUE(arg=None, lineno=586)
2024-07-15 06:11:43,320 DEBUG:pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-15 06:11:43,320 DEBUG:stack: []
2024-07-15 06:11:43,320 DEBUG:state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-15 06:11:43,320 DEBUG:dispatch pc=0, inst=NOP(arg=None, lineno=570)
2024-07-15 06:11:43,320 DEBUG:stack []
2024-07-15 06:11:43,320 DEBUG:dispatch pc=2, inst=COPY_FREE_VARS(arg=2, lineno=570)
2024-07-15 06:11:43,320 DEBUG:stack []
2024-07-15 06:11:43,320 DEBUG:dispatch pc=4, inst=RESUME(arg=0, lineno=570)
2024-07-15 06:11:43,320 DEBUG:stack []
2024-07-15 06:11:43,320 DEBUG:dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=571)
2024-07-15 06:11:43,320 DEBUG:stack []
2024-07-15 06:11:43,320 DEBUG:dispatch pc=8, inst=LOAD_ATTR(arg=0, lineno=571)
2024-07-15 06:11:43,320 DEBUG:stack ['$a6.0']
2024-07-15 06:11:43,320 DEBUG:dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=571)
2024-07-15 06:11:43,320 DEBUG:stack ['$8load_attr.1']
2024-07-15 06:11:43,320 DEBUG:dispatch pc=20, inst=COMPARE_OP(arg=2, lineno=571)
2024-07-15 06:11:43,320 DEBUG:stack ['$8load_attr.1', '$const18.2']
2024-07-15 06:11:43,320 DEBUG:dispatch pc=26, inst=POP_JUMP_FORWARD_IF_FALSE(arg=15, lineno=571)
2024-07-15 06:11:43,321 DEBUG:stack ['$20compare_op.3']
2024-07-15 06:11:43,321 DEBUG:end state. edges=[Edge(pc=28, stack=(), blockstack=(), npush=0), Edge(pc=58, stack=(), blockstack=(), npush=0)]
2024-07-15 06:11:43,321 DEBUG:pending: deque([State(pc_initial=28 nstack_initial=0), State(pc_initial=58 nstack_initial=0)])
2024-07-15 06:11:43,321 DEBUG:stack: []
2024-07-15 06:11:43,321 DEBUG:state.pc_initial: State(pc_initial=28 nstack_initial=0)
2024-07-15 06:11:43,321 DEBUG:dispatch pc=28, inst=LOAD_GLOBAL(arg=3, lineno=572)
2024-07-15 06:11:43,321 DEBUG:stack []
2024-07-15 06:11:43,321 DEBUG:dispatch pc=40, inst=LOAD_CONST(arg=2, lineno=572)
2024-07-15 06:11:43,321 DEBUG:stack ['$null$28.1', '$28load_global.0']
2024-07-15 06:11:43,321 DEBUG:dispatch pc=42, inst=PRECALL(arg=1, lineno=572)
2024-07-15 06:11:43,321 DEBUG:stack ['$null$28.1', '$28load_global.0', '$const40.2']
2024-07-15 06:11:43,321 DEBUG:dispatch pc=46, inst=CALL(arg=1, lineno=572)
2024-07-15 06:11:43,321 DEBUG:stack ['$null$28.1', '$28load_global.0', '$const40.2']
2024-07-15 06:11:43,321 DEBUG:dispatch pc=56, inst=RAISE_VARARGS(arg=1, lineno=572)
2024-07-15 06:11:43,321 DEBUG:stack ['$46call.3']
2024-07-15 06:11:43,321 DEBUG:end state. edges=[]
2024-07-15 06:11:43,321 DEBUG:pending: deque([State(pc_initial=58 nstack_initial=0)])
2024-07-15 06:11:43,321 DEBUG:stack: []
2024-07-15 06:11:43,321 DEBUG:state.pc_initial: State(pc_initial=58 nstack_initial=0)
2024-07-15 06:11:43,321 DEBUG:dispatch pc=58, inst=LOAD_GLOBAL(arg=5, lineno=575)
2024-07-15 06:11:43,321 DEBUG:stack []
2024-07-15 06:11:43,321 DEBUG:dispatch pc=70, inst=LOAD_ATTR(arg=3, lineno=575)
2024-07-15 06:11:43,321 DEBUG:stack ['$null$58.1', '$58load_global.0']
2024-07-15 06:11:43,321 DEBUG:dispatch pc=80, inst=LOAD_FAST(arg=0, lineno=575)
2024-07-15 06:11:43,321 DEBUG:stack ['$null$58.1', '$70load_attr.2']
2024-07-15 06:11:43,321 DEBUG:dispatch pc=82, inst=PRECALL(arg=1, lineno=575)
2024-07-15 06:11:43,321 DEBUG:stack ['$null$58.1', '$70load_attr.2', '$a80.3']
2024-07-15 06:11:43,321 DEBUG:dispatch pc=86, inst=CALL(arg=1, lineno=575)
2024-07-15 06:11:43,321 DEBUG:stack ['$null$58.1', '$70load_attr.2', '$a80.3']
2024-07-15 06:11:43,321 DEBUG:dispatch pc=96, inst=STORE_FAST(arg=1, lineno=575)
2024-07-15 06:11:43,322 DEBUG:stack ['$86call.4']
2024-07-15 06:11:43,322 DEBUG:dispatch pc=98, inst=LOAD_GLOBAL(arg=9, lineno=576)
2024-07-15 06:11:43,322 DEBUG:stack []
2024-07-15 06:11:43,322 DEBUG:dispatch pc=110, inst=LOAD_FAST(arg=1, lineno=576)
2024-07-15 06:11:43,322 DEBUG:stack ['$null$98.6', '$98load_global.5']
2024-07-15 06:11:43,322 DEBUG:dispatch pc=112, inst=PRECALL(arg=1, lineno=576)
2024-07-15 06:11:43,322 DEBUG:stack ['$null$98.6', '$98load_global.5', '$it110.7']
2024-07-15 06:11:43,322 DEBUG:dispatch pc=116, inst=CALL(arg=1, lineno=576)
2024-07-15 06:11:43,322 DEBUG:stack ['$null$98.6', '$98load_global.5', '$it110.7']
2024-07-15 06:11:43,322 DEBUG:dispatch pc=126, inst=LOAD_METHOD(arg=5, lineno=576)
2024-07-15 06:11:43,322 DEBUG:stack ['$116call.8']
2024-07-15 06:11:43,322 DEBUG:dispatch pc=148, inst=LOAD_CONST(arg=1, lineno=576)
2024-07-15 06:11:43,322 DEBUG:stack ['$null$126.9', '$126load_method.10']
2024-07-15 06:11:43,322 DEBUG:dispatch pc=150, inst=PRECALL(arg=1, lineno=576)
2024-07-15 06:11:43,322 DEBUG:stack ['$null$126.9', '$126load_method.10', '$const148.11']
2024-07-15 06:11:43,322 DEBUG:dispatch pc=154, inst=CALL(arg=1, lineno=576)
2024-07-15 06:11:43,322 DEBUG:stack ['$null$126.9', '$126load_method.10', '$const148.11']
2024-07-15 06:11:43,322 DEBUG:dispatch pc=164, inst=STORE_FAST(arg=2, lineno=576)
2024-07-15 06:11:43,322 DEBUG:stack ['$154call.12']
2024-07-15 06:11:43,322 DEBUG:dispatch pc=166, inst=PUSH_NULL(arg=None, lineno=577)
2024-07-15 06:11:43,322 DEBUG:stack []
2024-07-15 06:11:43,322 DEBUG:dispatch pc=168, inst=LOAD_DEREF(arg=6, lineno=577)
2024-07-15 06:11:43,322 DEBUG:stack ['$null$166.13']
2024-07-15 06:11:43,322 DEBUG:dispatch pc=170, inst=LOAD_FAST(arg=2, lineno=577)
2024-07-15 06:11:43,322 DEBUG:stack ['$null$166.13', '$168load_deref.14']
2024-07-15 06:11:43,322 DEBUG:dispatch pc=172, inst=PRECALL(arg=1, lineno=577)
2024-07-15 06:11:43,322 DEBUG:stack ['$null$166.13', '$168load_deref.14', '$max_value170.15']
2024-07-15 06:11:43,322 DEBUG:dispatch pc=176, inst=CALL(arg=1, lineno=577)
2024-07-15 06:11:43,322 DEBUG:stack ['$null$166.13', '$168load_deref.14', '$max_value170.15']
2024-07-15 06:11:43,322 DEBUG:dispatch pc=186, inst=POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=577)
2024-07-15 06:11:43,322 DEBUG:stack ['$176call.16']
2024-07-15 06:11:43,323 DEBUG:end state. edges=[Edge(pc=188, stack=(), blockstack=(), npush=0), Edge(pc=192, stack=(), blockstack=(), npush=0)]
2024-07-15 06:11:43,323 DEBUG:pending: deque([State(pc_initial=188 nstack_initial=0), State(pc_initial=192 nstack_initial=0)])
2024-07-15 06:11:43,323 DEBUG:stack: []
2024-07-15 06:11:43,323 DEBUG:state.pc_initial: State(pc_initial=188 nstack_initial=0)
2024-07-15 06:11:43,323 DEBUG:dispatch pc=188, inst=LOAD_FAST(arg=2, lineno=578)
2024-07-15 06:11:43,323 DEBUG:stack []
2024-07-15 06:11:43,323 DEBUG:dispatch pc=190, inst=RETURN_VALUE(arg=None, lineno=578)
2024-07-15 06:11:43,323 DEBUG:stack ['$max_value188.0']
2024-07-15 06:11:43,323 DEBUG:end state. edges=[]
2024-07-15 06:11:43,323 DEBUG:pending: deque([State(pc_initial=192 nstack_initial=0)])
2024-07-15 06:11:43,323 DEBUG:stack: []
2024-07-15 06:11:43,323 DEBUG:state.pc_initial: State(pc_initial=192 nstack_initial=0)
2024-07-15 06:11:43,323 DEBUG:dispatch pc=192, inst=LOAD_FAST(arg=1, lineno=580)
2024-07-15 06:11:43,323 DEBUG:stack []
2024-07-15 06:11:43,323 DEBUG:dispatch pc=194, inst=GET_ITER(arg=None, lineno=580)
2024-07-15 06:11:43,323 DEBUG:stack ['$it192.0']
2024-07-15 06:11:43,323 DEBUG:end state. edges=[Edge(pc=196, stack=('$194get_iter.1',), blockstack=(), npush=0)]
2024-07-15 06:11:43,323 DEBUG:pending: deque([State(pc_initial=196 nstack_initial=1)])
2024-07-15 06:11:43,323 DEBUG:stack: ['$phi196.0']
2024-07-15 06:11:43,323 DEBUG:state.pc_initial: State(pc_initial=196 nstack_initial=1)
2024-07-15 06:11:43,323 DEBUG:dispatch pc=196, inst=FOR_ITER(arg=51, lineno=580)
2024-07-15 06:11:43,323 DEBUG:stack ['$phi196.0']
2024-07-15 06:11:43,323 DEBUG:end state. edges=[Edge(pc=300, stack=(), blockstack=(), npush=0), Edge(pc=198, stack=('$phi196.0', '$196for_iter.2'), blockstack=(), npush=0)]
2024-07-15 06:11:43,323 DEBUG:pending: deque([State(pc_initial=300 nstack_initial=0), State(pc_initial=198 nstack_initial=2)])
2024-07-15 06:11:43,323 DEBUG:stack: []
2024-07-15 06:11:43,323 DEBUG:state.pc_initial: State(pc_initial=300 nstack_initial=0)
2024-07-15 06:11:43,323 DEBUG:dispatch pc=300, inst=LOAD_FAST(arg=2, lineno=586)
2024-07-15 06:11:43,323 DEBUG:stack []
2024-07-15 06:11:43,323 DEBUG:dispatch pc=302, inst=RETURN_VALUE(arg=None, lineno=586)
2024-07-15 06:11:43,323 DEBUG:stack ['$max_value300.0']
2024-07-15 06:11:43,323 DEBUG:end state. edges=[]
2024-07-15 06:11:43,323 DEBUG:pending: deque([State(pc_initial=198 nstack_initial=2)])
2024-07-15 06:11:43,323 DEBUG:stack: ['$phi198.0', '$phi198.1']
2024-07-15 06:11:43,323 DEBUG:state.pc_initial: State(pc_initial=198 nstack_initial=2)
2024-07-15 06:11:43,324 DEBUG:dispatch pc=198, inst=STORE_FAST(arg=3, lineno=580)
2024-07-15 06:11:43,324 DEBUG:stack ['$phi198.0', '$phi198.1']
2024-07-15 06:11:43,324 DEBUG:dispatch pc=200, inst=LOAD_FAST(arg=3, lineno=581)
2024-07-15 06:11:43,324 DEBUG:stack ['$phi198.0']
2024-07-15 06:11:43,324 DEBUG:dispatch pc=202, inst=LOAD_METHOD(arg=6, lineno=581)
2024-07-15 06:11:43,324 DEBUG:stack ['$phi198.0', '$view200.2']
2024-07-15 06:11:43,324 DEBUG:dispatch pc=224, inst=PRECALL(arg=0, lineno=581)
2024-07-15 06:11:43,324 DEBUG:stack ['$phi198.0', '$null$202.3', '$202load_method.4']
2024-07-15 06:11:43,324 DEBUG:dispatch pc=228, inst=CALL(arg=0, lineno=581)
2024-07-15 06:11:43,324 DEBUG:stack ['$phi198.0', '$null$202.3', '$202load_method.4']
2024-07-15 06:11:43,324 DEBUG:dispatch pc=238, inst=STORE_FAST(arg=4, lineno=581)
2024-07-15 06:11:43,324 DEBUG:stack ['$phi198.0', '$228call.5']
2024-07-15 06:11:43,324 DEBUG:dispatch pc=240, inst=PUSH_NULL(arg=None, lineno=582)
2024-07-15 06:11:43,324 DEBUG:stack ['$phi198.0']
2024-07-15 06:11:43,324 DEBUG:dispatch pc=242, inst=LOAD_DEREF(arg=6, lineno=582)
2024-07-15 06:11:43,324 DEBUG:stack ['$phi198.0', '$null$240.6']
2024-07-15 06:11:43,324 DEBUG:dispatch pc=244, inst=LOAD_FAST(arg=4, lineno=582)
2024-07-15 06:11:43,324 DEBUG:stack ['$phi198.0', '$null$240.6', '$242load_deref.7']
2024-07-15 06:11:43,324 DEBUG:dispatch pc=246, inst=PRECALL(arg=1, lineno=582)
2024-07-15 06:11:43,324 DEBUG:stack ['$phi198.0', '$null$240.6', '$242load_deref.7', '$v244.8']
2024-07-15 06:11:43,324 DEBUG:dispatch pc=250, inst=CALL(arg=1, lineno=582)
2024-07-15 06:11:43,324 DEBUG:stack ['$phi198.0', '$null$240.6', '$242load_deref.7', '$v244.8']
2024-07-15 06:11:43,324 DEBUG:dispatch pc=260, inst=POP_JUMP_FORWARD_IF_FALSE(arg=4, lineno=582)
2024-07-15 06:11:43,324 DEBUG:stack ['$phi198.0', '$250call.9']
2024-07-15 06:11:43,324 DEBUG:end state. edges=[Edge(pc=262, stack=('$phi198.0',), blockstack=(), npush=0), Edge(pc=270, stack=('$phi198.0',), blockstack=(), npush=0)]
2024-07-15 06:11:43,324 DEBUG:pending: deque([State(pc_initial=262 nstack_initial=1), State(pc_initial=270 nstack_initial=1)])
2024-07-15 06:11:43,324 DEBUG:stack: ['$phi262.0']
2024-07-15 06:11:43,324 DEBUG:state.pc_initial: State(pc_initial=262 nstack_initial=1)
2024-07-15 06:11:43,324 DEBUG:dispatch pc=262, inst=LOAD_FAST(arg=4, lineno=583)
2024-07-15 06:11:43,324 DEBUG:stack ['$phi262.0']
2024-07-15 06:11:43,324 DEBUG:dispatch pc=264, inst=SWAP(arg=2, lineno=583)
2024-07-15 06:11:43,324 DEBUG:stack ['$phi262.0', '$v262.1']
2024-07-15 06:11:43,325 DEBUG:dispatch pc=266, inst=POP_TOP(arg=None, lineno=583)
2024-07-15 06:11:43,325 DEBUG:stack ['$v262.1', '$phi262.0']
2024-07-15 06:11:43,325 DEBUG:dispatch pc=268, inst=RETURN_VALUE(arg=None, lineno=583)
2024-07-15 06:11:43,325 DEBUG:stack ['$v262.1']
2024-07-15 06:11:43,325 DEBUG:end state. edges=[]
2024-07-15 06:11:43,325 DEBUG:pending: deque([State(pc_initial=270 nstack_initial=1)])
2024-07-15 06:11:43,325 DEBUG:stack: ['$phi270.0']
2024-07-15 06:11:43,325 DEBUG:state.pc_initial: State(pc_initial=270 nstack_initial=1)
2024-07-15 06:11:43,325 DEBUG:dispatch pc=270, inst=PUSH_NULL(arg=None, lineno=584)
2024-07-15 06:11:43,325 DEBUG:stack ['$phi270.0']
2024-07-15 06:11:43,325 DEBUG:dispatch pc=272, inst=LOAD_DEREF(arg=5, lineno=584)
2024-07-15 06:11:43,325 DEBUG:stack ['$phi270.0', '$null$270.1']
2024-07-15 06:11:43,325 DEBUG:dispatch pc=274, inst=LOAD_FAST(arg=4, lineno=584)
2024-07-15 06:11:43,325 DEBUG:stack ['$phi270.0', '$null$270.1', '$272load_deref.2']
2024-07-15 06:11:43,325 DEBUG:dispatch pc=276, inst=LOAD_FAST(arg=2, lineno=584)
2024-07-15 06:11:43,325 DEBUG:stack ['$phi270.0', '$null$270.1', '$272load_deref.2', '$v274.3']
2024-07-15 06:11:43,325 DEBUG:dispatch pc=278, inst=PRECALL(arg=2, lineno=584)
2024-07-15 06:11:43,325 DEBUG:stack ['$phi270.0', '$null$270.1', '$272load_deref.2', '$v274.3', '$max_value276.4']
2024-07-15 06:11:43,325 DEBUG:dispatch pc=282, inst=CALL(arg=2, lineno=584)
2024-07-15 06:11:43,325 DEBUG:stack ['$phi270.0', '$null$270.1', '$272load_deref.2', '$v274.3', '$max_value276.4']
2024-07-15 06:11:43,325 DEBUG:dispatch pc=292, inst=POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=584)
2024-07-15 06:11:43,325 DEBUG:stack ['$phi270.0', '$282call.5']
2024-07-15 06:11:43,325 DEBUG:end state. edges=[Edge(pc=294, stack=('$phi270.0',), blockstack=(), npush=0), Edge(pc=298, stack=('$phi270.0',), blockstack=(), npush=0)]
2024-07-15 06:11:43,325 DEBUG:pending: deque([State(pc_initial=294 nstack_initial=1), State(pc_initial=298 nstack_initial=1)])
2024-07-15 06:11:43,325 DEBUG:stack: ['$phi294.0']
2024-07-15 06:11:43,327 DEBUG:state.pc_initial: State(pc_initial=294 nstack_initial=1)
2024-07-15 06:11:43,327 DEBUG:dispatch pc=294, inst=LOAD_FAST(arg=4, lineno=585)
2024-07-15 06:11:43,327 DEBUG:stack ['$phi294.0']
2024-07-15 06:11:43,327 DEBUG:dispatch pc=296, inst=STORE_FAST(arg=2, lineno=585)
2024-07-15 06:11:43,327 DEBUG:stack ['$phi294.0', '$v294.1']
2024-07-15 06:11:43,327 DEBUG:end state. edges=[Edge(pc=298, stack=('$phi294.0',), blockstack=(), npush=0)]
2024-07-15 06:11:43,327 DEBUG:pending: deque([State(pc_initial=298 nstack_initial=1), State(pc_initial=298 nstack_initial=1)])
2024-07-15 06:11:43,327 DEBUG:stack: ['$phi298.0']
2024-07-15 06:11:43,327 DEBUG:state.pc_initial: State(pc_initial=298 nstack_initial=1)
2024-07-15 06:11:43,327 DEBUG:dispatch pc=298, inst=JUMP_BACKWARD(arg=52, lineno=585)
2024-07-15 06:11:43,327 DEBUG:stack ['$phi298.0']
2024-07-15 06:11:43,327 DEBUG:end state. edges=[Edge(pc=196, stack=('$phi298.0',), blockstack=(), npush=0)]
2024-07-15 06:11:43,327 DEBUG:pending: deque([State(pc_initial=298 nstack_initial=1), State(pc_initial=196 nstack_initial=1)])
2024-07-15 06:11:43,327 DEBUG:pending: deque([State(pc_initial=196 nstack_initial=1)])
2024-07-15 06:11:43,327 DEBUG:-------------------------Prune PHIs-------------------------
2024-07-15 06:11:43,327 DEBUG:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=28 nstack_initial=0): set(),
             State(pc_initial=58 nstack_initial=0): set(),
             State(pc_initial=188 nstack_initial=0): set(),
             State(pc_initial=192 nstack_initial=0): set(),
             State(pc_initial=196 nstack_initial=1): {'$phi196.0'},
             State(pc_initial=198 nstack_initial=2): {'$phi198.1'},
             State(pc_initial=262 nstack_initial=1): set(),
             State(pc_initial=270 nstack_initial=1): set(),
             State(pc_initial=294 nstack_initial=1): set(),
             State(pc_initial=298 nstack_initial=1): set(),
             State(pc_initial=300 nstack_initial=0): set()})
2024-07-15 06:11:43,328 DEBUG:defmap: {'$phi196.0': State(pc_initial=192 nstack_initial=0),
 '$phi198.1': State(pc_initial=196 nstack_initial=1)}
2024-07-15 06:11:43,329 DEBUG:phismap: defaultdict(<class 'set'>,
            {'$phi196.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0)),
                           ('$phi298.0',
                            State(pc_initial=298 nstack_initial=1))},
             '$phi198.0': {('$phi196.0',
                            State(pc_initial=196 nstack_initial=1))},
             '$phi198.1': {('$196for_iter.2',
                            State(pc_initial=196 nstack_initial=1))},
             '$phi262.0': {('$phi198.0',
                            State(pc_initial=198 nstack_initial=2))},
             '$phi270.0': {('$phi198.0',
                            State(pc_initial=198 nstack_initial=2))},
             '$phi294.0': {('$phi270.0',
                            State(pc_initial=270 nstack_initial=1))},
             '$phi298.0': {('$phi270.0',
                            State(pc_initial=270 nstack_initial=1)),
                           ('$phi294.0',
                            State(pc_initial=294 nstack_initial=1))}})
2024-07-15 06:11:43,329 DEBUG:changing phismap: defaultdict(<class 'set'>,
            {'$phi196.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0)),
                           ('$phi270.0',
                            State(pc_initial=270 nstack_initial=1)),
                           ('$phi294.0',
                            State(pc_initial=294 nstack_initial=1))},
             '$phi198.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0)),
                           ('$phi270.0',
                            State(pc_initial=270 nstack_initial=1)),
                           ('$phi294.0',
                            State(pc_initial=294 nstack_initial=1))},
             '$phi198.1': {('$196for_iter.2',
                            State(pc_initial=196 nstack_initial=1))},
             '$phi262.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0)),
                           ('$phi270.0',
                            State(pc_initial=270 nstack_initial=1)),
                           ('$phi294.0',
                            State(pc_initial=294 nstack_initial=1))},
             '$phi270.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0)),
                           ('$phi270.0',
                            State(pc_initial=270 nstack_initial=1)),
                           ('$phi294.0',
                            State(pc_initial=294 nstack_initial=1))},
             '$phi294.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0)),
                           ('$phi294.0',
                            State(pc_initial=294 nstack_initial=1))},
             '$phi298.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))}})
2024-07-15 06:11:43,329 DEBUG:changing phismap: defaultdict(<class 'set'>,
            {'$phi196.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi198.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi198.1': {('$196for_iter.2',
                            State(pc_initial=196 nstack_initial=1))},
             '$phi262.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi270.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi294.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi298.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))}})
2024-07-15 06:11:43,330 DEBUG:changing phismap: defaultdict(<class 'set'>,
            {'$phi196.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi198.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi198.1': {('$196for_iter.2',
                            State(pc_initial=196 nstack_initial=1))},
             '$phi262.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi270.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi294.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi298.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))}})
2024-07-15 06:11:43,330 DEBUG:keep phismap: {'$phi196.0': {('$194get_iter.1', State(pc_initial=192 nstack_initial=0))},
 '$phi198.1': {('$196for_iter.2', State(pc_initial=196 nstack_initial=1))}}
2024-07-15 06:11:43,330 DEBUG:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=192 nstack_initial=0): {'$phi196.0': '$194get_iter.1'},
             State(pc_initial=196 nstack_initial=1): {'$phi198.1': '$196for_iter.2'}})
2024-07-15 06:11:43,330 DEBUG:----------------------DONE Prune PHIs-----------------------
2024-07-15 06:11:43,331 DEBUG:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {}), (6, {'res': '$a6.0'}), (8, {'item': '$a6.0', 'res': '$8load_attr.1'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'res': '$const18.2'}), (20, {'lhs': '$8load_attr.1', 'rhs': '$const18.2', 'res': '$20compare_op.3'}), (22, {}), (24, {}), (26, {'pred': '$20compare_op.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={28: (), 58: ()})
2024-07-15 06:11:43,331 DEBUG:block_infos State(pc_initial=28 nstack_initial=0):
AdaptBlockInfo(insts=((28, {'idx': 1, 'res': '$28load_global.0'}), (30, {}), (32, {}), (34, {}), (36, {}), (38, {}), (40, {'res': '$const40.2'}), (42, {}), (44, {}), (46, {'func': '$28load_global.0', 'args': ['$const40.2'], 'kw_names': None, 'res': '$46call.3'}), (48, {}), (50, {}), (52, {}), (54, {}), (56, {'exc': '$46call.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-15 06:11:43,331 DEBUG:block_infos State(pc_initial=58 nstack_initial=0):
AdaptBlockInfo(insts=((58, {'idx': 2, 'res': '$58load_global.0'}), (60, {}), (62, {}), (64, {}), (66, {}), (68, {}), (70, {'item': '$58load_global.0', 'res': '$70load_attr.2'}), (72, {}), (74, {}), (76, {}), (78, {}), (80, {'res': '$a80.3'}), (82, {}), (84, {}), (86, {'func': '$70load_attr.2', 'args': ['$a80.3'], 'kw_names': None, 'res': '$86call.4'}), (88, {}), (90, {}), (92, {}), (94, {}), (96, {'value': '$86call.4'}), (98, {'idx': 4, 'res': '$98load_global.5'}), (100, {}), (102, {}), (104, {}), (106, {}), (108, {}), (110, {'res': '$it110.7'}), (112, {}), (114, {}), (116, {'func': '$98load_global.5', 'args': ['$it110.7'], 'kw_names': None, 'res': '$116call.8'}), (118, {}), (120, {}), (122, {}), (124, {}), (126, {'item': '$116call.8', 'res': '$126load_method.10'}), (128, {}), (130, {}), (132, {}), (134, {}), (136, {}), (138, {}), (140, {}), (142, {}), (144, {}), (146, {}), (148, {'res': '$const148.11'}), (150, {}), (152, {}), (154, {'func': '$126load_method.10', 'args': ['$const148.11'], 'kw_names': None, 'res': '$154call.12'}), (156, {}), (158, {}), (160, {}), (162, {}), (164, {'value': '$154call.12'}), (166, {}), (168, {'res': '$168load_deref.14'}), (170, {'res': '$max_value170.15'}), (172, {}), (174, {}), (176, {'func': '$168load_deref.14', 'args': ['$max_value170.15'], 'kw_names': None, 'res': '$176call.16'}), (178, {}), (180, {}), (182, {}), (184, {}), (186, {'pred': '$176call.16'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={188: (), 192: ()})
2024-07-15 06:11:43,331 DEBUG:block_infos State(pc_initial=188 nstack_initial=0):
AdaptBlockInfo(insts=((188, {'res': '$max_value188.0'}), (190, {'retval': '$max_value188.0', 'castval': '$190return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-15 06:11:43,331 DEBUG:block_infos State(pc_initial=192 nstack_initial=0):
AdaptBlockInfo(insts=((192, {'res': '$it192.0'}), (194, {'value': '$it192.0', 'res': '$194get_iter.1'})), outgoing_phis={'$phi196.0': '$194get_iter.1'}, blockstack=(), active_try_block=None, outgoing_edgepushed={196: ('$194get_iter.1',)})
2024-07-15 06:11:43,331 DEBUG:block_infos State(pc_initial=196 nstack_initial=1):
AdaptBlockInfo(insts=((196, {'iterator': '$phi196.0', 'pair': '$196for_iter.1', 'indval': '$196for_iter.2', 'pred': '$196for_iter.3'}),), outgoing_phis={'$phi198.1': '$196for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={300: (), 198: ('$phi196.0', '$196for_iter.2')})
2024-07-15 06:11:43,331 DEBUG:block_infos State(pc_initial=198 nstack_initial=2):
AdaptBlockInfo(insts=((198, {'value': '$phi198.1'}), (200, {'res': '$view200.2'}), (202, {'item': '$view200.2', 'res': '$202load_method.4'}), (204, {}), (206, {}), (208, {}), (210, {}), (212, {}), (214, {}), (216, {}), (218, {}), (220, {}), (222, {}), (224, {}), (226, {}), (228, {'func': '$202load_method.4', 'args': [], 'kw_names': None, 'res': '$228call.5'}), (230, {}), (232, {}), (234, {}), (236, {}), (238, {'value': '$228call.5'}), (240, {}), (242, {'res': '$242load_deref.7'}), (244, {'res': '$v244.8'}), (246, {}), (248, {}), (250, {'func': '$242load_deref.7', 'args': ['$v244.8'], 'kw_names': None, 'res': '$250call.9'}), (252, {}), (254, {}), (256, {}), (258, {}), (260, {'pred': '$250call.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={262: ('$phi198.0',), 270: ('$phi198.0',)})
2024-07-15 06:11:43,331 DEBUG:block_infos State(pc_initial=262 nstack_initial=1):
AdaptBlockInfo(insts=((262, {'res': '$v262.1'}), (268, {'retval': '$v262.1', 'castval': '$268return_value.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-15 06:11:43,331 DEBUG:block_infos State(pc_initial=270 nstack_initial=1):
AdaptBlockInfo(insts=((270, {}), (272, {'res': '$272load_deref.2'}), (274, {'res': '$v274.3'}), (276, {'res': '$max_value276.4'}), (278, {}), (280, {}), (282, {'func': '$272load_deref.2', 'args': ['$v274.3', '$max_value276.4'], 'kw_names': None, 'res': '$282call.5'}), (284, {}), (286, {}), (288, {}), (290, {}), (292, {'pred': '$282call.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={294: ('$phi270.0',), 298: ('$phi270.0',)})
2024-07-15 06:11:43,331 DEBUG:block_infos State(pc_initial=294 nstack_initial=1):
AdaptBlockInfo(insts=((294, {'res': '$v294.1'}), (296, {'value': '$v294.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={298: ('$phi294.0',)})
2024-07-15 06:11:43,331 DEBUG:block_infos State(pc_initial=298 nstack_initial=1):
AdaptBlockInfo(insts=((298, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={196: ('$phi298.0',)})
2024-07-15 06:11:43,331 DEBUG:block_infos State(pc_initial=300 nstack_initial=0):
AdaptBlockInfo(insts=((300, {'res': '$max_value300.0'}), (302, {'retval': '$max_value300.0', 'castval': '$302return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-15 06:11:43,332 DEBUG:label 0:
    a = arg(0, name=a)                       ['a']
    $8load_attr.1 = getattr(value=a, attr=size) ['$8load_attr.1', 'a']
    $const18.2 = const(int, 0)               ['$const18.2']
    $20compare_op.3 = $8load_attr.1 == $const18.2 ['$20compare_op.3', '$8load_attr.1', '$const18.2']
    bool26 = global(bool: <class 'bool'>)    ['bool26']
    $26pred = call bool26($20compare_op.3, func=bool26, args=(Var($20compare_op.3, arraymath.py:571),), kws=(), vararg=None, varkwarg=None, target=None) ['$20compare_op.3', '$26pred', 'bool26']
    branch $26pred, 28, 58                   ['$26pred']
label 28:
    $28load_global.0 = global(ValueError: <class 'ValueError'>) ['$28load_global.0']
    $const40.2 = const(str, zero-size array to reduction operation maximum which has no identity) ['$const40.2']
    $46call.3 = call $28load_global.0($const40.2, func=$28load_global.0, args=[Var($const40.2, arraymath.py:572)], kws=(), vararg=None, varkwarg=None, target=None) ['$28load_global.0', '$46call.3', '$const40.2']
    raise $46call.3                          ['$46call.3']
label 58:
    $58load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$58load_global.0']
    $70load_attr.2 = getattr(value=$58load_global.0, attr=nditer) ['$58load_global.0', '$70load_attr.2']
    it = call $70load_attr.2(a, func=$70load_attr.2, args=[Var(a, arraymath.py:570)], kws=(), vararg=None, varkwarg=None, target=None) ['$70load_attr.2', 'a', 'it']
    $98load_global.5 = global(next: <built-in function next>) ['$98load_global.5']
    $116call.8 = call $98load_global.5(it, func=$98load_global.5, args=[Var(it, arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None) ['$116call.8', '$98load_global.5', 'it']
    $126load_method.10 = getattr(value=$116call.8, attr=take) ['$116call.8', '$126load_method.10']
    $const148.11 = const(int, 0)             ['$const148.11']
    max_value = call $126load_method.10($const148.11, func=$126load_method.10, args=[Var($const148.11, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None) ['$126load_method.10', '$const148.11', 'max_value']
    $168load_deref.14 = freevar(pre_return_func: <ufunc 'isnan'>) ['$168load_deref.14']
    $176call.16 = call $168load_deref.14(max_value, func=$168load_deref.14, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None) ['$168load_deref.14', '$176call.16', 'max_value']
    bool186 = global(bool: <class 'bool'>)   ['bool186']
    $186pred = call bool186($176call.16, func=bool186, args=(Var($176call.16, arraymath.py:577),), kws=(), vararg=None, varkwarg=None, target=None) ['$176call.16', '$186pred', 'bool186']
    branch $186pred, 188, 192                ['$186pred']
label 188:
    $190return_value.1 = cast(value=max_value) ['$190return_value.1', 'max_value']
    return $190return_value.1                ['$190return_value.1']
label 192:
    $194get_iter.1 = getiter(value=it)       ['$194get_iter.1', 'it']
    $phi196.0 = $194get_iter.1               ['$194get_iter.1', '$phi196.0']
    jump 196                                 []
label 196:
    $196for_iter.1 = iternext(value=$phi196.0) ['$196for_iter.1', '$phi196.0']
    $196for_iter.2 = pair_first(value=$196for_iter.1) ['$196for_iter.1', '$196for_iter.2']
    $196for_iter.3 = pair_second(value=$196for_iter.1) ['$196for_iter.1', '$196for_iter.3']
    $phi198.1 = $196for_iter.2               ['$196for_iter.2', '$phi198.1']
    branch $196for_iter.3, 198, 300          ['$196for_iter.3']
label 198:
    view = $phi198.1                         ['$phi198.1', 'view']
    $202load_method.4 = getattr(value=view, attr=item) ['$202load_method.4', 'view']
    v = call $202load_method.4(func=$202load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$202load_method.4', 'v']
    $242load_deref.7 = freevar(pre_return_func: <ufunc 'isnan'>) ['$242load_deref.7']
    $250call.9 = call $242load_deref.7(v, func=$242load_deref.7, args=[Var(v, arraymath.py:581)], kws=(), vararg=None, varkwarg=None, target=None) ['$242load_deref.7', '$250call.9', 'v']
    bool260 = global(bool: <class 'bool'>)   ['bool260']
    $260pred = call bool260($250call.9, func=bool260, args=(Var($250call.9, arraymath.py:582),), kws=(), vararg=None, varkwarg=None, target=None) ['$250call.9', '$260pred', 'bool260']
    branch $260pred, 262, 270                ['$260pred']
label 262:
    $268return_value.2 = cast(value=v)       ['$268return_value.2', 'v']
    return $268return_value.2                ['$268return_value.2']
label 270:
    $272load_deref.2 = freevar(comparator: <function max_comparator at 0x00000221B53CA3E0>) ['$272load_deref.2']
    $282call.5 = call $272load_deref.2(v, max_value, func=$272load_deref.2, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None) ['$272load_deref.2', '$282call.5', 'max_value', 'v']
    bool292 = global(bool: <class 'bool'>)   ['bool292']
    $292pred = call bool292($282call.5, func=bool292, args=(Var($282call.5, arraymath.py:584),), kws=(), vararg=None, varkwarg=None, target=None) ['$282call.5', '$292pred', 'bool292']
    branch $292pred, 294, 298                ['$292pred']
label 294:
    max_value = v                            ['max_value', 'v']
    jump 298                                 []
label 298:
    jump 196                                 []
label 300:
    $302return_value.1 = cast(value=max_value) ['$302return_value.1', 'max_value']
    return $302return_value.1                ['$302return_value.1']

2024-07-15 06:11:43,351 DEBUG:==== SSA block analysis pass on 0
2024-07-15 06:11:43,351 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B60FFA50>
2024-07-15 06:11:43,351 DEBUG:on stmt: a = arg(0, name=a)
2024-07-15 06:11:43,351 DEBUG:on stmt: $8load_attr.1 = getattr(value=a, attr=size)
2024-07-15 06:11:43,351 DEBUG:on stmt: $const18.2 = const(int, 0)
2024-07-15 06:11:43,351 DEBUG:on stmt: $20compare_op.3 = $8load_attr.1 == $const18.2
2024-07-15 06:11:43,351 DEBUG:on stmt: bool26 = global(bool: <class 'bool'>)
2024-07-15 06:11:43,351 DEBUG:on stmt: $26pred = call bool26($20compare_op.3, func=bool26, args=(Var($20compare_op.3, arraymath.py:571),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:43,351 DEBUG:on stmt: branch $26pred, 28, 58
2024-07-15 06:11:43,351 DEBUG:==== SSA block analysis pass on 28
2024-07-15 06:11:43,351 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B60FFA50>
2024-07-15 06:11:43,351 DEBUG:on stmt: $28load_global.0 = global(ValueError: <class 'ValueError'>)
2024-07-15 06:11:43,351 DEBUG:on stmt: $const40.2 = const(str, zero-size array to reduction operation maximum which has no identity)
2024-07-15 06:11:43,352 DEBUG:on stmt: $46call.3 = call $28load_global.0($const40.2, func=$28load_global.0, args=[Var($const40.2, arraymath.py:572)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:43,352 DEBUG:on stmt: <static> raise <class 'ValueError'>('zero-size array to reduction operation maximum which has no identity')
2024-07-15 06:11:43,352 DEBUG:==== SSA block analysis pass on 58
2024-07-15 06:11:43,352 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B60FFA50>
2024-07-15 06:11:43,352 DEBUG:on stmt: $58load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:43,352 DEBUG:on stmt: $70load_attr.2 = getattr(value=$58load_global.0, attr=nditer)
2024-07-15 06:11:43,352 DEBUG:on stmt: it = call $70load_attr.2(a, func=$70load_attr.2, args=[Var(a, arraymath.py:570)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:43,352 DEBUG:on stmt: $98load_global.5 = global(next: <built-in function next>)
2024-07-15 06:11:43,352 DEBUG:on stmt: $116call.8 = call $98load_global.5(it, func=$98load_global.5, args=[Var(it, arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:43,352 DEBUG:on stmt: $126load_method.10 = getattr(value=$116call.8, attr=take)
2024-07-15 06:11:43,352 DEBUG:on stmt: $const148.11 = const(int, 0)
2024-07-15 06:11:43,352 DEBUG:on stmt: max_value = call $126load_method.10($const148.11, func=$126load_method.10, args=[Var($const148.11, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:43,352 DEBUG:on stmt: $168load_deref.14 = freevar(pre_return_func: <ufunc 'isnan'>)
2024-07-15 06:11:43,352 DEBUG:on stmt: $176call.16 = call $168load_deref.14(max_value, func=$168load_deref.14, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:43,352 DEBUG:on stmt: bool186 = global(bool: <class 'bool'>)
2024-07-15 06:11:43,352 DEBUG:on stmt: $186pred = call bool186($176call.16, func=bool186, args=(Var($176call.16, arraymath.py:577),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:43,352 DEBUG:on stmt: branch $186pred, 188, 192
2024-07-15 06:11:43,352 DEBUG:==== SSA block analysis pass on 188
2024-07-15 06:11:43,352 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B60FFA50>
2024-07-15 06:11:43,352 DEBUG:on stmt: $190return_value.1 = cast(value=max_value)
2024-07-15 06:11:43,352 DEBUG:on stmt: return $190return_value.1
2024-07-15 06:11:43,352 DEBUG:==== SSA block analysis pass on 192
2024-07-15 06:11:43,352 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B60FFA50>
2024-07-15 06:11:43,352 DEBUG:on stmt: $194get_iter.1 = getiter(value=it)
2024-07-15 06:11:43,352 DEBUG:on stmt: $phi196.0 = $194get_iter.1
2024-07-15 06:11:43,353 DEBUG:on stmt: jump 196
2024-07-15 06:11:43,353 DEBUG:==== SSA block analysis pass on 196
2024-07-15 06:11:43,353 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B60FFA50>
2024-07-15 06:11:43,353 DEBUG:on stmt: $196for_iter.1 = iternext(value=$phi196.0)
2024-07-15 06:11:43,353 DEBUG:on stmt: $196for_iter.2 = pair_first(value=$196for_iter.1)
2024-07-15 06:11:43,353 DEBUG:on stmt: $196for_iter.3 = pair_second(value=$196for_iter.1)
2024-07-15 06:11:43,353 DEBUG:on stmt: $phi198.1 = $196for_iter.2
2024-07-15 06:11:43,353 DEBUG:on stmt: branch $196for_iter.3, 198, 300
2024-07-15 06:11:43,353 DEBUG:==== SSA block analysis pass on 198
2024-07-15 06:11:43,353 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B60FFA50>
2024-07-15 06:11:43,353 DEBUG:on stmt: view = $phi198.1
2024-07-15 06:11:43,353 DEBUG:on stmt: $202load_method.4 = getattr(value=view, attr=item)
2024-07-15 06:11:43,353 DEBUG:on stmt: v = call $202load_method.4(func=$202load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:43,353 DEBUG:on stmt: $242load_deref.7 = freevar(pre_return_func: <ufunc 'isnan'>)
2024-07-15 06:11:43,353 DEBUG:on stmt: $250call.9 = call $242load_deref.7(v, func=$242load_deref.7, args=[Var(v, arraymath.py:581)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:43,353 DEBUG:on stmt: bool260 = global(bool: <class 'bool'>)
2024-07-15 06:11:43,353 DEBUG:on stmt: $260pred = call bool260($250call.9, func=bool260, args=(Var($250call.9, arraymath.py:582),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:43,353 DEBUG:on stmt: branch $260pred, 262, 270
2024-07-15 06:11:43,354 DEBUG:==== SSA block analysis pass on 262
2024-07-15 06:11:43,354 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B60FFA50>
2024-07-15 06:11:43,354 DEBUG:on stmt: $268return_value.2 = cast(value=v)
2024-07-15 06:11:43,354 DEBUG:on stmt: return $268return_value.2
2024-07-15 06:11:43,354 DEBUG:==== SSA block analysis pass on 270
2024-07-15 06:11:43,354 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B60FFA50>
2024-07-15 06:11:43,354 DEBUG:on stmt: $272load_deref.2 = freevar(comparator: <function max_comparator at 0x00000221B53CA3E0>)
2024-07-15 06:11:43,354 DEBUG:on stmt: $282call.5 = call $272load_deref.2(v, max_value, func=$272load_deref.2, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:43,354 DEBUG:on stmt: bool292 = global(bool: <class 'bool'>)
2024-07-15 06:11:43,354 DEBUG:on stmt: $292pred = call bool292($282call.5, func=bool292, args=(Var($282call.5, arraymath.py:584),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:43,354 DEBUG:on stmt: branch $292pred, 294, 298
2024-07-15 06:11:43,354 DEBUG:==== SSA block analysis pass on 294
2024-07-15 06:11:43,354 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B60FFA50>
2024-07-15 06:11:43,354 DEBUG:on stmt: max_value = v
2024-07-15 06:11:43,355 DEBUG:on stmt: jump 298
2024-07-15 06:11:43,355 DEBUG:==== SSA block analysis pass on 298
2024-07-15 06:11:43,355 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B60FFA50>
2024-07-15 06:11:43,355 DEBUG:on stmt: jump 196
2024-07-15 06:11:43,355 DEBUG:==== SSA block analysis pass on 300
2024-07-15 06:11:43,355 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B60FFA50>
2024-07-15 06:11:43,355 DEBUG:on stmt: $302return_value.1 = cast(value=max_value)
2024-07-15 06:11:43,355 DEBUG:on stmt: return $302return_value.1
2024-07-15 06:11:43,356 DEBUG:defs defaultdict(<class 'list'>,
            {'$116call.8': [(<numba.core.ir.Assign object at 0x00000221B6758550>,
                             58)],
             '$126load_method.10': [(<numba.core.ir.Assign object at 0x00000221B675AF50>,
                                     58)],
             '$168load_deref.14': [(<numba.core.ir.Assign object at 0x00000221B60FF810>,
                                    58)],
             '$176call.16': [(<numba.core.ir.Assign object at 0x00000221B67585D0>,
                              58)],
             '$186pred': [(<numba.core.ir.Assign object at 0x00000221B6759D50>,
                           58)],
             '$190return_value.1': [(<numba.core.ir.Assign object at 0x00000221B6759A50>,
                                     188)],
             '$194get_iter.1': [(<numba.core.ir.Assign object at 0x00000221B675A610>,
                                 192)],
             '$196for_iter.1': [(<numba.core.ir.Assign object at 0x00000221B6759F50>,
                                 196)],
             '$196for_iter.2': [(<numba.core.ir.Assign object at 0x00000221B675B410>,
                                 196)],
             '$196for_iter.3': [(<numba.core.ir.Assign object at 0x00000221B675B990>,
                                 196)],
             '$202load_method.4': [(<numba.core.ir.Assign object at 0x00000221B675B4D0>,
                                    198)],
             '$20compare_op.3': [(<numba.core.ir.Assign object at 0x00000221B60FDC90>,
                                  0)],
             '$242load_deref.7': [(<numba.core.ir.Assign object at 0x00000221B67598D0>,
                                   198)],
             '$250call.9': [(<numba.core.ir.Assign object at 0x00000221B6759E10>,
                             198)],
             '$260pred': [(<numba.core.ir.Assign object at 0x00000221B6758D10>,
                           198)],
             '$268return_value.2': [(<numba.core.ir.Assign object at 0x00000221B6758CD0>,
                                     262)],
             '$26pred': [(<numba.core.ir.Assign object at 0x00000221B60FC450>,
                          0)],
             '$272load_deref.2': [(<numba.core.ir.Assign object at 0x00000221B675A410>,
                                   270)],
             '$282call.5': [(<numba.core.ir.Assign object at 0x00000221B5CC8310>,
                             270)],
             '$28load_global.0': [(<numba.core.ir.Assign object at 0x00000221B60FC750>,
                                   28)],
             '$292pred': [(<numba.core.ir.Assign object at 0x00000221B5CC8A90>,
                           270)],
             '$302return_value.1': [(<numba.core.ir.Assign object at 0x00000221B5CC83D0>,
                                     300)],
             '$46call.3': [(<numba.core.ir.Assign object at 0x00000221B60FDE90>,
                            28)],
             '$58load_global.0': [(<numba.core.ir.Assign object at 0x00000221B60FD510>,
                                   58)],
             '$70load_attr.2': [(<numba.core.ir.Assign object at 0x00000221B60FEC50>,
                                 58)],
             '$8load_attr.1': [(<numba.core.ir.Assign object at 0x00000221B68230D0>,
                                0)],
             '$98load_global.5': [(<numba.core.ir.Assign object at 0x00000221B60FE310>,
                                   58)],
             '$const148.11': [(<numba.core.ir.Assign object at 0x00000221B6758DD0>,
                               58)],
             '$const18.2': [(<numba.core.ir.Assign object at 0x00000221B679B550>,
                             0)],
             '$const40.2': [(<numba.core.ir.Assign object at 0x00000221B60FEC90>,
                             28)],
             '$phi196.0': [(<numba.core.ir.Assign object at 0x00000221B6758E10>,
                            192)],
             '$phi198.1': [(<numba.core.ir.Assign object at 0x00000221B675B150>,
                            196)],
             'a': [(<numba.core.ir.Assign object at 0x00000221B69C4590>, 0)],
             'bool186': [(<numba.core.ir.Assign object at 0x00000221B675AE10>,
                          58)],
             'bool26': [(<numba.core.ir.Assign object at 0x00000221B60FCAD0>,
                         0)],
             'bool260': [(<numba.core.ir.Assign object at 0x00000221B6759090>,
                          198)],
             'bool292': [(<numba.core.ir.Assign object at 0x00000221B5CCB610>,
                          270)],
             'it': [(<numba.core.ir.Assign object at 0x00000221B60FE390>, 58)],
             'max_value': [(<numba.core.ir.Assign object at 0x00000221B6759C10>,
                            58),
                           (<numba.core.ir.Assign object at 0x00000221B5CCB550>,
                            294)],
             'v': [(<numba.core.ir.Assign object at 0x00000221B67596D0>, 198)],
             'view': [(<numba.core.ir.Assign object at 0x00000221B6759F10>,
                       198)]})
2024-07-15 06:11:43,356 DEBUG:SSA violators <numba.core.utils.OrderedSet object at 0x00000221B6759390>
2024-07-15 06:11:43,356 DEBUG:Fix SSA violator on var max_value
2024-07-15 06:11:43,356 DEBUG:==== SSA block rewrite pass on 0
2024-07-15 06:11:43,356 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6798E50>
2024-07-15 06:11:43,356 DEBUG:on stmt: a = arg(0, name=a)
2024-07-15 06:11:43,356 DEBUG:on stmt: $8load_attr.1 = getattr(value=a, attr=size)
2024-07-15 06:11:43,356 DEBUG:on stmt: $const18.2 = const(int, 0)
2024-07-15 06:11:43,356 DEBUG:on stmt: $20compare_op.3 = $8load_attr.1 == $const18.2
2024-07-15 06:11:43,356 DEBUG:on stmt: bool26 = global(bool: <class 'bool'>)
2024-07-15 06:11:43,356 DEBUG:on stmt: $26pred = call bool26($20compare_op.3, func=bool26, args=(Var($20compare_op.3, arraymath.py:571),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:43,356 DEBUG:on stmt: branch $26pred, 28, 58
2024-07-15 06:11:43,356 DEBUG:==== SSA block rewrite pass on 28
2024-07-15 06:11:43,357 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6798E50>
2024-07-15 06:11:43,357 DEBUG:on stmt: $28load_global.0 = global(ValueError: <class 'ValueError'>)
2024-07-15 06:11:43,357 DEBUG:on stmt: $const40.2 = const(str, zero-size array to reduction operation maximum which has no identity)
2024-07-15 06:11:43,357 DEBUG:on stmt: $46call.3 = call $28load_global.0($const40.2, func=$28load_global.0, args=[Var($const40.2, arraymath.py:572)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:43,357 DEBUG:on stmt: <static> raise <class 'ValueError'>('zero-size array to reduction operation maximum which has no identity')
2024-07-15 06:11:43,357 DEBUG:==== SSA block rewrite pass on 58
2024-07-15 06:11:43,357 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6798E50>
2024-07-15 06:11:43,357 DEBUG:on stmt: $58load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:43,357 DEBUG:on stmt: $70load_attr.2 = getattr(value=$58load_global.0, attr=nditer)
2024-07-15 06:11:43,357 DEBUG:on stmt: it = call $70load_attr.2(a, func=$70load_attr.2, args=[Var(a, arraymath.py:570)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:43,357 DEBUG:on stmt: $98load_global.5 = global(next: <built-in function next>)
2024-07-15 06:11:43,357 DEBUG:on stmt: $116call.8 = call $98load_global.5(it, func=$98load_global.5, args=[Var(it, arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:43,357 DEBUG:on stmt: $126load_method.10 = getattr(value=$116call.8, attr=take)
2024-07-15 06:11:43,357 DEBUG:on stmt: $const148.11 = const(int, 0)
2024-07-15 06:11:43,357 DEBUG:on stmt: max_value = call $126load_method.10($const148.11, func=$126load_method.10, args=[Var($const148.11, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:43,357 DEBUG:first assign: max_value
2024-07-15 06:11:43,357 DEBUG:replaced with: max_value = call $126load_method.10($const148.11, func=$126load_method.10, args=[Var($const148.11, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:43,357 DEBUG:on stmt: $168load_deref.14 = freevar(pre_return_func: <ufunc 'isnan'>)
2024-07-15 06:11:43,357 DEBUG:on stmt: $176call.16 = call $168load_deref.14(max_value, func=$168load_deref.14, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:43,357 DEBUG:on stmt: bool186 = global(bool: <class 'bool'>)
2024-07-15 06:11:43,357 DEBUG:on stmt: $186pred = call bool186($176call.16, func=bool186, args=(Var($176call.16, arraymath.py:577),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:43,357 DEBUG:on stmt: branch $186pred, 188, 192
2024-07-15 06:11:43,357 DEBUG:==== SSA block rewrite pass on 188
2024-07-15 06:11:43,357 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6798E50>
2024-07-15 06:11:43,357 DEBUG:on stmt: $190return_value.1 = cast(value=max_value)
2024-07-15 06:11:43,357 DEBUG:on stmt: return $190return_value.1
2024-07-15 06:11:43,357 DEBUG:==== SSA block rewrite pass on 192
2024-07-15 06:11:43,357 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6798E50>
2024-07-15 06:11:43,357 DEBUG:on stmt: $194get_iter.1 = getiter(value=it)
2024-07-15 06:11:43,357 DEBUG:on stmt: $phi196.0 = $194get_iter.1
2024-07-15 06:11:43,357 DEBUG:on stmt: jump 196
2024-07-15 06:11:43,357 DEBUG:==== SSA block rewrite pass on 196
2024-07-15 06:11:43,357 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6798E50>
2024-07-15 06:11:43,357 DEBUG:on stmt: $196for_iter.1 = iternext(value=$phi196.0)
2024-07-15 06:11:43,357 DEBUG:on stmt: $196for_iter.2 = pair_first(value=$196for_iter.1)
2024-07-15 06:11:43,358 DEBUG:on stmt: $196for_iter.3 = pair_second(value=$196for_iter.1)
2024-07-15 06:11:43,358 DEBUG:on stmt: $phi198.1 = $196for_iter.2
2024-07-15 06:11:43,358 DEBUG:on stmt: branch $196for_iter.3, 198, 300
2024-07-15 06:11:43,358 DEBUG:==== SSA block rewrite pass on 198
2024-07-15 06:11:43,358 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6798E50>
2024-07-15 06:11:43,358 DEBUG:on stmt: view = $phi198.1
2024-07-15 06:11:43,358 DEBUG:on stmt: $202load_method.4 = getattr(value=view, attr=item)
2024-07-15 06:11:43,358 DEBUG:on stmt: v = call $202load_method.4(func=$202load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:43,358 DEBUG:on stmt: $242load_deref.7 = freevar(pre_return_func: <ufunc 'isnan'>)
2024-07-15 06:11:43,358 DEBUG:on stmt: $250call.9 = call $242load_deref.7(v, func=$242load_deref.7, args=[Var(v, arraymath.py:581)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:43,358 DEBUG:on stmt: bool260 = global(bool: <class 'bool'>)
2024-07-15 06:11:43,358 DEBUG:on stmt: $260pred = call bool260($250call.9, func=bool260, args=(Var($250call.9, arraymath.py:582),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:43,358 DEBUG:on stmt: branch $260pred, 262, 270
2024-07-15 06:11:43,358 DEBUG:==== SSA block rewrite pass on 262
2024-07-15 06:11:43,358 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6798E50>
2024-07-15 06:11:43,358 DEBUG:on stmt: $268return_value.2 = cast(value=v)
2024-07-15 06:11:43,358 DEBUG:on stmt: return $268return_value.2
2024-07-15 06:11:43,358 DEBUG:==== SSA block rewrite pass on 270
2024-07-15 06:11:43,358 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6798E50>
2024-07-15 06:11:43,358 DEBUG:on stmt: $272load_deref.2 = freevar(comparator: <function max_comparator at 0x00000221B53CA3E0>)
2024-07-15 06:11:43,358 DEBUG:on stmt: $282call.5 = call $272load_deref.2(v, max_value, func=$272load_deref.2, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:43,358 DEBUG:on stmt: bool292 = global(bool: <class 'bool'>)
2024-07-15 06:11:43,358 DEBUG:on stmt: $292pred = call bool292($282call.5, func=bool292, args=(Var($282call.5, arraymath.py:584),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:43,358 DEBUG:on stmt: branch $292pred, 294, 298
2024-07-15 06:11:43,358 DEBUG:==== SSA block rewrite pass on 294
2024-07-15 06:11:43,358 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6798E50>
2024-07-15 06:11:43,358 DEBUG:on stmt: max_value = v
2024-07-15 06:11:43,358 DEBUG:replaced with: max_value.1 = v
2024-07-15 06:11:43,358 DEBUG:on stmt: jump 298
2024-07-15 06:11:43,358 DEBUG:==== SSA block rewrite pass on 298
2024-07-15 06:11:43,358 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6798E50>
2024-07-15 06:11:43,358 DEBUG:on stmt: jump 196
2024-07-15 06:11:43,358 DEBUG:==== SSA block rewrite pass on 300
2024-07-15 06:11:43,358 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6798E50>
2024-07-15 06:11:43,358 DEBUG:on stmt: $302return_value.1 = cast(value=max_value)
2024-07-15 06:11:43,359 DEBUG:on stmt: return $302return_value.1
2024-07-15 06:11:43,359 DEBUG:Replaced assignments: defaultdict(<class 'list'>,
            {58: [<numba.core.ir.Assign object at 0x00000221B6926C10>],
             294: [<numba.core.ir.Assign object at 0x00000221B5CCAFD0>]})
2024-07-15 06:11:43,359 DEBUG:==== SSA block rewrite pass on 0
2024-07-15 06:11:43,359 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5CCBF10>
2024-07-15 06:11:43,359 DEBUG:on stmt: a = arg(0, name=a)
2024-07-15 06:11:43,359 DEBUG:on stmt: $8load_attr.1 = getattr(value=a, attr=size)
2024-07-15 06:11:43,359 DEBUG:on stmt: $const18.2 = const(int, 0)
2024-07-15 06:11:43,359 DEBUG:on stmt: $20compare_op.3 = $8load_attr.1 == $const18.2
2024-07-15 06:11:43,359 DEBUG:on stmt: bool26 = global(bool: <class 'bool'>)
2024-07-15 06:11:43,359 DEBUG:on stmt: $26pred = call bool26($20compare_op.3, func=bool26, args=(Var($20compare_op.3, arraymath.py:571),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:43,359 DEBUG:on stmt: branch $26pred, 28, 58
2024-07-15 06:11:43,359 DEBUG:==== SSA block rewrite pass on 28
2024-07-15 06:11:43,359 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5CCBF10>
2024-07-15 06:11:43,359 DEBUG:on stmt: $28load_global.0 = global(ValueError: <class 'ValueError'>)
2024-07-15 06:11:43,359 DEBUG:on stmt: $const40.2 = const(str, zero-size array to reduction operation maximum which has no identity)
2024-07-15 06:11:43,359 DEBUG:on stmt: $46call.3 = call $28load_global.0($const40.2, func=$28load_global.0, args=[Var($const40.2, arraymath.py:572)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:43,359 DEBUG:on stmt: <static> raise <class 'ValueError'>('zero-size array to reduction operation maximum which has no identity')
2024-07-15 06:11:43,359 DEBUG:==== SSA block rewrite pass on 58
2024-07-15 06:11:43,359 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5CCBF10>
2024-07-15 06:11:43,359 DEBUG:on stmt: $58load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:43,359 DEBUG:on stmt: $70load_attr.2 = getattr(value=$58load_global.0, attr=nditer)
2024-07-15 06:11:43,359 DEBUG:on stmt: it = call $70load_attr.2(a, func=$70load_attr.2, args=[Var(a, arraymath.py:570)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:43,359 DEBUG:on stmt: $98load_global.5 = global(next: <built-in function next>)
2024-07-15 06:11:43,359 DEBUG:on stmt: $116call.8 = call $98load_global.5(it, func=$98load_global.5, args=[Var(it, arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:43,359 DEBUG:on stmt: $126load_method.10 = getattr(value=$116call.8, attr=take)
2024-07-15 06:11:43,359 DEBUG:on stmt: $const148.11 = const(int, 0)
2024-07-15 06:11:43,359 DEBUG:on stmt: max_value = call $126load_method.10($const148.11, func=$126load_method.10, args=[Var($const148.11, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:43,359 DEBUG:on stmt: $168load_deref.14 = freevar(pre_return_func: <ufunc 'isnan'>)
2024-07-15 06:11:43,359 DEBUG:on stmt: $176call.16 = call $168load_deref.14(max_value, func=$168load_deref.14, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:43,359 DEBUG:find_def var='max_value' stmt=$176call.16 = call $168load_deref.14(max_value, func=$168load_deref.14, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:43,360 DEBUG:on stmt: bool186 = global(bool: <class 'bool'>)
2024-07-15 06:11:43,360 DEBUG:on stmt: $186pred = call bool186($176call.16, func=bool186, args=(Var($176call.16, arraymath.py:577),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:43,360 DEBUG:on stmt: branch $186pred, 188, 192
2024-07-15 06:11:43,360 DEBUG:==== SSA block rewrite pass on 188
2024-07-15 06:11:43,360 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5CCBF10>
2024-07-15 06:11:43,360 DEBUG:on stmt: $190return_value.1 = cast(value=max_value)
2024-07-15 06:11:43,360 DEBUG:find_def var='max_value' stmt=$190return_value.1 = cast(value=max_value)
2024-07-15 06:11:43,360 DEBUG:find_def_from_top label 188
2024-07-15 06:11:43,360 DEBUG:idom 58 from label 188
2024-07-15 06:11:43,360 DEBUG:find_def_from_bottom label 58
2024-07-15 06:11:43,360 DEBUG:on stmt: return $190return_value.1
2024-07-15 06:11:43,360 DEBUG:==== SSA block rewrite pass on 192
2024-07-15 06:11:43,360 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5CCBF10>
2024-07-15 06:11:43,360 DEBUG:on stmt: $194get_iter.1 = getiter(value=it)
2024-07-15 06:11:43,360 DEBUG:on stmt: $phi196.0 = $194get_iter.1
2024-07-15 06:11:43,360 DEBUG:on stmt: jump 196
2024-07-15 06:11:43,360 DEBUG:==== SSA block rewrite pass on 196
2024-07-15 06:11:43,360 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5CCBF10>
2024-07-15 06:11:43,360 DEBUG:on stmt: $196for_iter.1 = iternext(value=$phi196.0)
2024-07-15 06:11:43,360 DEBUG:on stmt: $196for_iter.2 = pair_first(value=$196for_iter.1)
2024-07-15 06:11:43,360 DEBUG:on stmt: $196for_iter.3 = pair_second(value=$196for_iter.1)
2024-07-15 06:11:43,360 DEBUG:on stmt: $phi198.1 = $196for_iter.2
2024-07-15 06:11:43,360 DEBUG:on stmt: branch $196for_iter.3, 198, 300
2024-07-15 06:11:43,360 DEBUG:==== SSA block rewrite pass on 198
2024-07-15 06:11:43,360 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5CCBF10>
2024-07-15 06:11:43,360 DEBUG:on stmt: view = $phi198.1
2024-07-15 06:11:43,360 DEBUG:on stmt: $202load_method.4 = getattr(value=view, attr=item)
2024-07-15 06:11:43,360 DEBUG:on stmt: v = call $202load_method.4(func=$202load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:43,360 DEBUG:on stmt: $242load_deref.7 = freevar(pre_return_func: <ufunc 'isnan'>)
2024-07-15 06:11:43,360 DEBUG:on stmt: $250call.9 = call $242load_deref.7(v, func=$242load_deref.7, args=[Var(v, arraymath.py:581)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:43,361 DEBUG:on stmt: bool260 = global(bool: <class 'bool'>)
2024-07-15 06:11:43,361 DEBUG:on stmt: $260pred = call bool260($250call.9, func=bool260, args=(Var($250call.9, arraymath.py:582),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:43,361 DEBUG:on stmt: branch $260pred, 262, 270
2024-07-15 06:11:43,361 DEBUG:==== SSA block rewrite pass on 262
2024-07-15 06:11:43,361 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5CCBF10>
2024-07-15 06:11:43,361 DEBUG:on stmt: $268return_value.2 = cast(value=v)
2024-07-15 06:11:43,361 DEBUG:on stmt: return $268return_value.2
2024-07-15 06:11:43,361 DEBUG:==== SSA block rewrite pass on 270
2024-07-15 06:11:43,361 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5CCBF10>
2024-07-15 06:11:43,361 DEBUG:on stmt: $272load_deref.2 = freevar(comparator: <function max_comparator at 0x00000221B53CA3E0>)
2024-07-15 06:11:43,361 DEBUG:on stmt: $282call.5 = call $272load_deref.2(v, max_value, func=$272load_deref.2, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:43,361 DEBUG:find_def var='max_value' stmt=$282call.5 = call $272load_deref.2(v, max_value, func=$272load_deref.2, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:43,361 DEBUG:find_def_from_top label 270
2024-07-15 06:11:43,361 DEBUG:idom 198 from label 270
2024-07-15 06:11:43,361 DEBUG:find_def_from_bottom label 198
2024-07-15 06:11:43,361 DEBUG:find_def_from_top label 198
2024-07-15 06:11:43,361 DEBUG:idom 196 from label 198
2024-07-15 06:11:43,361 DEBUG:find_def_from_bottom label 196
2024-07-15 06:11:43,361 DEBUG:find_def_from_top label 196
2024-07-15 06:11:43,361 DEBUG:insert phi node max_value.2 = phi(incoming_values=[], incoming_blocks=[]) at 196
2024-07-15 06:11:43,361 DEBUG:find_def_from_bottom label 192
2024-07-15 06:11:43,361 DEBUG:find_def_from_top label 192
2024-07-15 06:11:43,361 DEBUG:idom 58 from label 192
2024-07-15 06:11:43,361 DEBUG:find_def_from_bottom label 58
2024-07-15 06:11:43,361 DEBUG:incoming_def max_value = call $126load_method.10($const148.11, func=$126load_method.10, args=[Var($const148.11, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:43,361 DEBUG:find_def_from_bottom label 298
2024-07-15 06:11:43,362 DEBUG:find_def_from_top label 298
2024-07-15 06:11:43,362 DEBUG:insert phi node max_value.3 = phi(incoming_values=[], incoming_blocks=[]) at 298
2024-07-15 06:11:43,362 DEBUG:find_def_from_bottom label 294
2024-07-15 06:11:43,362 DEBUG:incoming_def max_value.1 = v
2024-07-15 06:11:43,362 DEBUG:find_def_from_bottom label 270
2024-07-15 06:11:43,362 DEBUG:find_def_from_top label 270
2024-07-15 06:11:43,362 DEBUG:idom 198 from label 270
2024-07-15 06:11:43,362 DEBUG:find_def_from_bottom label 198
2024-07-15 06:11:43,362 DEBUG:find_def_from_top label 198
2024-07-15 06:11:43,362 DEBUG:idom 196 from label 198
2024-07-15 06:11:43,362 DEBUG:find_def_from_bottom label 196
2024-07-15 06:11:43,362 DEBUG:incoming_def max_value.2 = phi(incoming_values=[Var(max_value, arraymath.py:576)], incoming_blocks=[192])
2024-07-15 06:11:43,362 DEBUG:incoming_def max_value.3 = phi(incoming_values=[Var(max_value.1, arraymath.py:585), Var(max_value.2, arraymath.py:584)], incoming_blocks=[294, 270])
2024-07-15 06:11:43,362 DEBUG:replaced with: $282call.5 = call $272load_deref.2(v, max_value.2, func=$272load_deref.2, args=[Var(v, arraymath.py:581), Var(max_value.2, arraymath.py:584)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:43,362 DEBUG:on stmt: bool292 = global(bool: <class 'bool'>)
2024-07-15 06:11:43,362 DEBUG:on stmt: $292pred = call bool292($282call.5, func=bool292, args=(Var($282call.5, arraymath.py:584),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:43,362 DEBUG:on stmt: branch $292pred, 294, 298
2024-07-15 06:11:43,362 DEBUG:==== SSA block rewrite pass on 294
2024-07-15 06:11:43,362 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5CCBF10>
2024-07-15 06:11:43,362 DEBUG:on stmt: max_value.1 = v
2024-07-15 06:11:43,362 DEBUG:on stmt: jump 298
2024-07-15 06:11:43,362 DEBUG:==== SSA block rewrite pass on 298
2024-07-15 06:11:43,363 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5CCBF10>
2024-07-15 06:11:43,363 DEBUG:on stmt: jump 196
2024-07-15 06:11:43,363 DEBUG:==== SSA block rewrite pass on 300
2024-07-15 06:11:43,363 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5CCBF10>
2024-07-15 06:11:43,363 DEBUG:on stmt: $302return_value.1 = cast(value=max_value)
2024-07-15 06:11:43,363 DEBUG:find_def var='max_value' stmt=$302return_value.1 = cast(value=max_value)
2024-07-15 06:11:43,363 DEBUG:find_def_from_top label 300
2024-07-15 06:11:43,363 DEBUG:idom 196 from label 300
2024-07-15 06:11:43,363 DEBUG:find_def_from_bottom label 196
2024-07-15 06:11:43,363 DEBUG:replaced with: $302return_value.1 = cast(value=max_value.2)
2024-07-15 06:11:43,363 DEBUG:on stmt: return $302return_value.1
2024-07-15 06:11:43,375 DEBUG:bytecode dump:
>          0	NOP(arg=None, lineno=4691)
           2	RESUME(arg=0, lineno=4691)
           4	LOAD_FAST(arg=1, lineno=4692)
           6	LOAD_FAST(arg=0, lineno=4692)
           8	LOAD_ATTR(arg=0, lineno=4692)
          18	LOAD_CONST(arg=1, lineno=4692)
          20	BINARY_OP(arg=10, lineno=4692)
          24	COMPARE_OP(arg=4, lineno=4692)
          30	POP_JUMP_FORWARD_IF_TRUE(arg=12, lineno=4692)
          32	LOAD_FAST(arg=1, lineno=4692)
          34	LOAD_FAST(arg=0, lineno=4692)
          36	LOAD_ATTR(arg=0, lineno=4692)
          46	UNARY_NEGATIVE(arg=None, lineno=4692)
          48	COMPARE_OP(arg=0, lineno=4692)
          54	POP_JUMP_FORWARD_IF_FALSE(arg=15, lineno=4692)
>         56	LOAD_GLOBAL(arg=3, lineno=4693)
          68	LOAD_CONST(arg=2, lineno=4693)
          70	PRECALL(arg=1, lineno=4693)
          74	CALL(arg=1, lineno=4693)
          84	RAISE_VARARGS(arg=1, lineno=4693)
>         86	LOAD_FAST(arg=0, lineno=4694)
          88	LOAD_METHOD(arg=2, lineno=4694)
         110	PRECALL(arg=0, lineno=4694)
         114	CALL(arg=0, lineno=4694)
         124	LOAD_FAST(arg=1, lineno=4694)
         126	BINARY_SUBSCR(arg=None, lineno=4694)
         136	RETURN_VALUE(arg=None, lineno=4694)
2024-07-15 06:11:43,375 DEBUG:pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-15 06:11:43,376 DEBUG:stack: []
2024-07-15 06:11:43,376 DEBUG:state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-15 06:11:43,376 DEBUG:dispatch pc=0, inst=NOP(arg=None, lineno=4691)
2024-07-15 06:11:43,376 DEBUG:stack []
2024-07-15 06:11:43,376 DEBUG:dispatch pc=2, inst=RESUME(arg=0, lineno=4691)
2024-07-15 06:11:43,376 DEBUG:stack []
2024-07-15 06:11:43,376 DEBUG:dispatch pc=4, inst=LOAD_FAST(arg=1, lineno=4692)
2024-07-15 06:11:43,376 DEBUG:stack []
2024-07-15 06:11:43,376 DEBUG:dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=4692)
2024-07-15 06:11:43,376 DEBUG:stack ['$indices4.0']
2024-07-15 06:11:43,376 DEBUG:dispatch pc=8, inst=LOAD_ATTR(arg=0, lineno=4692)
2024-07-15 06:11:43,376 DEBUG:stack ['$indices4.0', '$a6.1']
2024-07-15 06:11:43,376 DEBUG:dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=4692)
2024-07-15 06:11:43,376 DEBUG:stack ['$indices4.0', '$8load_attr.2']
2024-07-15 06:11:43,376 DEBUG:dispatch pc=20, inst=BINARY_OP(arg=10, lineno=4692)
2024-07-15 06:11:43,376 DEBUG:stack ['$indices4.0', '$8load_attr.2', '$const18.3']
2024-07-15 06:11:43,376 DEBUG:dispatch pc=24, inst=COMPARE_OP(arg=4, lineno=4692)
2024-07-15 06:11:43,376 DEBUG:stack ['$indices4.0', '$binop_sub20.4']
2024-07-15 06:11:43,376 DEBUG:dispatch pc=30, inst=POP_JUMP_FORWARD_IF_TRUE(arg=12, lineno=4692)
2024-07-15 06:11:43,376 DEBUG:stack ['$24compare_op.5']
2024-07-15 06:11:43,376 DEBUG:end state. edges=[Edge(pc=32, stack=(), blockstack=(), npush=0), Edge(pc=56, stack=(), blockstack=(), npush=0)]
2024-07-15 06:11:43,376 DEBUG:pending: deque([State(pc_initial=32 nstack_initial=0), State(pc_initial=56 nstack_initial=0)])
2024-07-15 06:11:43,376 DEBUG:stack: []
2024-07-15 06:11:43,376 DEBUG:state.pc_initial: State(pc_initial=32 nstack_initial=0)
2024-07-15 06:11:43,376 DEBUG:dispatch pc=32, inst=LOAD_FAST(arg=1, lineno=4692)
2024-07-15 06:11:43,376 DEBUG:stack []
2024-07-15 06:11:43,376 DEBUG:dispatch pc=34, inst=LOAD_FAST(arg=0, lineno=4692)
2024-07-15 06:11:43,376 DEBUG:stack ['$indices32.0']
2024-07-15 06:11:43,376 DEBUG:dispatch pc=36, inst=LOAD_ATTR(arg=0, lineno=4692)
2024-07-15 06:11:43,376 DEBUG:stack ['$indices32.0', '$a34.1']
2024-07-15 06:11:43,376 DEBUG:dispatch pc=46, inst=UNARY_NEGATIVE(arg=None, lineno=4692)
2024-07-15 06:11:43,376 DEBUG:stack ['$indices32.0', '$36load_attr.2']
2024-07-15 06:11:43,376 DEBUG:dispatch pc=48, inst=COMPARE_OP(arg=0, lineno=4692)
2024-07-15 06:11:43,376 DEBUG:stack ['$indices32.0', '$46unary_negative.3']
2024-07-15 06:11:43,377 DEBUG:dispatch pc=54, inst=POP_JUMP_FORWARD_IF_FALSE(arg=15, lineno=4692)
2024-07-15 06:11:43,377 DEBUG:stack ['$48compare_op.4']
2024-07-15 06:11:43,377 DEBUG:end state. edges=[Edge(pc=56, stack=(), blockstack=(), npush=0), Edge(pc=86, stack=(), blockstack=(), npush=0)]
2024-07-15 06:11:43,377 DEBUG:pending: deque([State(pc_initial=56 nstack_initial=0), State(pc_initial=56 nstack_initial=0), State(pc_initial=86 nstack_initial=0)])
2024-07-15 06:11:43,377 DEBUG:stack: []
2024-07-15 06:11:43,377 DEBUG:state.pc_initial: State(pc_initial=56 nstack_initial=0)
2024-07-15 06:11:43,377 DEBUG:dispatch pc=56, inst=LOAD_GLOBAL(arg=3, lineno=4693)
2024-07-15 06:11:43,377 DEBUG:stack []
2024-07-15 06:11:43,377 DEBUG:dispatch pc=68, inst=LOAD_CONST(arg=2, lineno=4693)
2024-07-15 06:11:43,377 DEBUG:stack ['$null$56.1', '$56load_global.0']
2024-07-15 06:11:43,377 DEBUG:dispatch pc=70, inst=PRECALL(arg=1, lineno=4693)
2024-07-15 06:11:43,377 DEBUG:stack ['$null$56.1', '$56load_global.0', '$const68.2']
2024-07-15 06:11:43,377 DEBUG:dispatch pc=74, inst=CALL(arg=1, lineno=4693)
2024-07-15 06:11:43,377 DEBUG:stack ['$null$56.1', '$56load_global.0', '$const68.2']
2024-07-15 06:11:43,377 DEBUG:dispatch pc=84, inst=RAISE_VARARGS(arg=1, lineno=4693)
2024-07-15 06:11:43,377 DEBUG:stack ['$74call.3']
2024-07-15 06:11:43,377 DEBUG:end state. edges=[]
2024-07-15 06:11:43,377 DEBUG:pending: deque([State(pc_initial=56 nstack_initial=0), State(pc_initial=86 nstack_initial=0)])
2024-07-15 06:11:43,377 DEBUG:pending: deque([State(pc_initial=86 nstack_initial=0)])
2024-07-15 06:11:43,377 DEBUG:stack: []
2024-07-15 06:11:43,377 DEBUG:state.pc_initial: State(pc_initial=86 nstack_initial=0)
2024-07-15 06:11:43,377 DEBUG:dispatch pc=86, inst=LOAD_FAST(arg=0, lineno=4694)
2024-07-15 06:11:43,377 DEBUG:stack []
2024-07-15 06:11:43,377 DEBUG:dispatch pc=88, inst=LOAD_METHOD(arg=2, lineno=4694)
2024-07-15 06:11:43,377 DEBUG:stack ['$a86.0']
2024-07-15 06:11:43,378 DEBUG:dispatch pc=110, inst=PRECALL(arg=0, lineno=4694)
2024-07-15 06:11:43,378 DEBUG:stack ['$null$88.1', '$88load_method.2']
2024-07-15 06:11:43,378 DEBUG:dispatch pc=114, inst=CALL(arg=0, lineno=4694)
2024-07-15 06:11:43,378 DEBUG:stack ['$null$88.1', '$88load_method.2']
2024-07-15 06:11:43,378 DEBUG:dispatch pc=124, inst=LOAD_FAST(arg=1, lineno=4694)
2024-07-15 06:11:43,378 DEBUG:stack ['$114call.3']
2024-07-15 06:11:43,378 DEBUG:dispatch pc=126, inst=BINARY_SUBSCR(arg=None, lineno=4694)
2024-07-15 06:11:43,378 DEBUG:stack ['$114call.3', '$indices124.4']
2024-07-15 06:11:43,378 DEBUG:dispatch pc=136, inst=RETURN_VALUE(arg=None, lineno=4694)
2024-07-15 06:11:43,378 DEBUG:stack ['$126binary_subscr.5']
2024-07-15 06:11:43,378 DEBUG:end state. edges=[]
2024-07-15 06:11:43,378 DEBUG:-------------------------Prune PHIs-------------------------
2024-07-15 06:11:43,378 DEBUG:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=32 nstack_initial=0): set(),
             State(pc_initial=56 nstack_initial=0): set(),
             State(pc_initial=86 nstack_initial=0): set()})
2024-07-15 06:11:43,378 DEBUG:defmap: {}
2024-07-15 06:11:43,378 DEBUG:phismap: defaultdict(<class 'set'>, {})
2024-07-15 06:11:43,378 DEBUG:changing phismap: defaultdict(<class 'set'>, {})
2024-07-15 06:11:43,378 DEBUG:keep phismap: {}
2024-07-15 06:11:43,378 DEBUG:new_out: defaultdict(<class 'dict'>, {})
2024-07-15 06:11:43,378 DEBUG:----------------------DONE Prune PHIs-----------------------
2024-07-15 06:11:43,378 DEBUG:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$indices4.0'}), (6, {'res': '$a6.1'}), (8, {'item': '$a6.1', 'res': '$8load_attr.2'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'res': '$const18.3'}), (20, {'op': '-', 'lhs': '$8load_attr.2', 'rhs': '$const18.3', 'res': '$binop_sub20.4'}), (22, {}), (24, {'lhs': '$indices4.0', 'rhs': '$binop_sub20.4', 'res': '$24compare_op.5'}), (26, {}), (28, {}), (30, {'pred': '$24compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={32: (), 56: ()})
2024-07-15 06:11:43,378 DEBUG:block_infos State(pc_initial=32 nstack_initial=0):
AdaptBlockInfo(insts=((32, {'res': '$indices32.0'}), (34, {'res': '$a34.1'}), (36, {'item': '$a34.1', 'res': '$36load_attr.2'}), (38, {}), (40, {}), (42, {}), (44, {}), (46, {'value': '$36load_attr.2', 'res': '$46unary_negative.3'}), (48, {'lhs': '$indices32.0', 'rhs': '$46unary_negative.3', 'res': '$48compare_op.4'}), (50, {}), (52, {}), (54, {'pred': '$48compare_op.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={56: (), 86: ()})
2024-07-15 06:11:43,378 DEBUG:block_infos State(pc_initial=56 nstack_initial=0):
AdaptBlockInfo(insts=((56, {'idx': 1, 'res': '$56load_global.0'}), (58, {}), (60, {}), (62, {}), (64, {}), (66, {}), (68, {'res': '$const68.2'}), (70, {}), (72, {}), (74, {'func': '$56load_global.0', 'args': ['$const68.2'], 'kw_names': None, 'res': '$74call.3'}), (76, {}), (78, {}), (80, {}), (82, {}), (84, {'exc': '$74call.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-15 06:11:43,378 DEBUG:block_infos State(pc_initial=86 nstack_initial=0):
AdaptBlockInfo(insts=((86, {'res': '$a86.0'}), (88, {'item': '$a86.0', 'res': '$88load_method.2'}), (90, {}), (92, {}), (94, {}), (96, {}), (98, {}), (100, {}), (102, {}), (104, {}), (106, {}), (108, {}), (110, {}), (112, {}), (114, {'func': '$88load_method.2', 'args': [], 'kw_names': None, 'res': '$114call.3'}), (116, {}), (118, {}), (120, {}), (122, {}), (124, {'res': '$indices124.4'}), (126, {'index': '$indices124.4', 'target': '$114call.3', 'res': '$126binary_subscr.5'}), (128, {}), (130, {}), (132, {}), (134, {}), (136, {'retval': '$126binary_subscr.5', 'castval': '$136return_value.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-15 06:11:43,379 DEBUG:label 0:
    a = arg(0, name=a)                       ['a']
    indices = arg(1, name=indices)           ['indices']
    $8load_attr.2 = getattr(value=a, attr=size) ['$8load_attr.2', 'a']
    $const18.3 = const(int, 1)               ['$const18.3']
    $binop_sub20.4 = $8load_attr.2 - $const18.3 ['$8load_attr.2', '$binop_sub20.4', '$const18.3']
    $24compare_op.5 = indices > $binop_sub20.4 ['$24compare_op.5', '$binop_sub20.4', 'indices']
    bool30 = global(bool: <class 'bool'>)    ['bool30']
    $30pred = call bool30($24compare_op.5, func=bool30, args=(Var($24compare_op.5, arrayobj.py:4692),), kws=(), vararg=None, varkwarg=None, target=None) ['$24compare_op.5', '$30pred', 'bool30']
    branch $30pred, 56, 32                   ['$30pred']
label 32:
    $36load_attr.2 = getattr(value=a, attr=size) ['$36load_attr.2', 'a']
    $46unary_negative.3 = unary(fn=<built-in function neg>, value=$36load_attr.2) ['$36load_attr.2', '$46unary_negative.3']
    $48compare_op.4 = indices < $46unary_negative.3 ['$46unary_negative.3', '$48compare_op.4', 'indices']
    bool54 = global(bool: <class 'bool'>)    ['bool54']
    $54pred = call bool54($48compare_op.4, func=bool54, args=(Var($48compare_op.4, arrayobj.py:4692),), kws=(), vararg=None, varkwarg=None, target=None) ['$48compare_op.4', '$54pred', 'bool54']
    branch $54pred, 56, 86                   ['$54pred']
label 56:
    $56load_global.0 = global(IndexError: <class 'IndexError'>) ['$56load_global.0']
    $const68.2 = const(str, Index out of bounds) ['$const68.2']
    $74call.3 = call $56load_global.0($const68.2, func=$56load_global.0, args=[Var($const68.2, arrayobj.py:4693)], kws=(), vararg=None, varkwarg=None, target=None) ['$56load_global.0', '$74call.3', '$const68.2']
    raise $74call.3                          ['$74call.3']
label 86:
    $88load_method.2 = getattr(value=a, attr=ravel) ['$88load_method.2', 'a']
    $114call.3 = call $88load_method.2(func=$88load_method.2, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$114call.3', '$88load_method.2']
    $126binary_subscr.5 = getitem(value=$114call.3, index=indices, fn=<built-in function getitem>) ['$114call.3', '$126binary_subscr.5', 'indices']
    $136return_value.6 = cast(value=$126binary_subscr.5) ['$126binary_subscr.5', '$136return_value.6']
    return $136return_value.6                ['$136return_value.6']

2024-07-15 06:11:43,392 DEBUG:==== SSA block analysis pass on 0
2024-07-15 06:11:43,392 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B6876290>
2024-07-15 06:11:43,392 DEBUG:on stmt: a = arg(0, name=a)
2024-07-15 06:11:43,392 DEBUG:on stmt: indices = arg(1, name=indices)
2024-07-15 06:11:43,392 DEBUG:on stmt: $8load_attr.2 = getattr(value=a, attr=size)
2024-07-15 06:11:43,392 DEBUG:on stmt: $const18.3 = const(int, 1)
2024-07-15 06:11:43,392 DEBUG:on stmt: $binop_sub20.4 = $8load_attr.2 - $const18.3
2024-07-15 06:11:43,392 DEBUG:on stmt: $24compare_op.5 = indices > $binop_sub20.4
2024-07-15 06:11:43,392 DEBUG:on stmt: bool30 = global(bool: <class 'bool'>)
2024-07-15 06:11:43,392 DEBUG:on stmt: $30pred = call bool30($24compare_op.5, func=bool30, args=(Var($24compare_op.5, arrayobj.py:4692),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:43,392 DEBUG:on stmt: branch $30pred, 56, 32
2024-07-15 06:11:43,392 DEBUG:==== SSA block analysis pass on 32
2024-07-15 06:11:43,392 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B6876290>
2024-07-15 06:11:43,392 DEBUG:on stmt: $36load_attr.2 = getattr(value=a, attr=size)
2024-07-15 06:11:43,392 DEBUG:on stmt: $46unary_negative.3 = unary(fn=<built-in function neg>, value=$36load_attr.2)
2024-07-15 06:11:43,393 DEBUG:on stmt: $48compare_op.4 = indices < $46unary_negative.3
2024-07-15 06:11:43,393 DEBUG:on stmt: bool54 = global(bool: <class 'bool'>)
2024-07-15 06:11:43,393 DEBUG:on stmt: $54pred = call bool54($48compare_op.4, func=bool54, args=(Var($48compare_op.4, arrayobj.py:4692),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:43,393 DEBUG:on stmt: branch $54pred, 56, 86
2024-07-15 06:11:43,393 DEBUG:==== SSA block analysis pass on 56
2024-07-15 06:11:43,393 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B6876290>
2024-07-15 06:11:43,393 DEBUG:on stmt: $56load_global.0 = global(IndexError: <class 'IndexError'>)
2024-07-15 06:11:43,393 DEBUG:on stmt: $const68.2 = const(str, Index out of bounds)
2024-07-15 06:11:43,393 DEBUG:on stmt: $74call.3 = call $56load_global.0($const68.2, func=$56load_global.0, args=[Var($const68.2, arrayobj.py:4693)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:43,393 DEBUG:on stmt: <static> raise <class 'IndexError'>('Index out of bounds')
2024-07-15 06:11:43,393 DEBUG:==== SSA block analysis pass on 86
2024-07-15 06:11:43,393 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B6876290>
2024-07-15 06:11:43,393 DEBUG:on stmt: $88load_method.2 = getattr(value=a, attr=ravel)
2024-07-15 06:11:43,393 DEBUG:on stmt: $114call.3 = call $88load_method.2(func=$88load_method.2, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:43,393 DEBUG:on stmt: $126binary_subscr.5 = getitem(value=$114call.3, index=indices, fn=<built-in function getitem>)
2024-07-15 06:11:43,393 DEBUG:on stmt: $136return_value.6 = cast(value=$126binary_subscr.5)
2024-07-15 06:11:43,393 DEBUG:on stmt: return $136return_value.6
2024-07-15 06:11:43,393 DEBUG:defs defaultdict(<class 'list'>,
            {'$114call.3': [(<numba.core.ir.Assign object at 0x00000221B687EB10>,
                             86)],
             '$126binary_subscr.5': [(<numba.core.ir.Assign object at 0x00000221B695B990>,
                                      86)],
             '$136return_value.6': [(<numba.core.ir.Assign object at 0x00000221B6959BD0>,
                                     86)],
             '$24compare_op.5': [(<numba.core.ir.Assign object at 0x00000221B6A22DD0>,
                                  0)],
             '$30pred': [(<numba.core.ir.Assign object at 0x00000221B6A20090>,
                          0)],
             '$36load_attr.2': [(<numba.core.ir.Assign object at 0x00000221B6A21810>,
                                 32)],
             '$46unary_negative.3': [(<numba.core.ir.Assign object at 0x00000221B6A22D50>,
                                      32)],
             '$48compare_op.4': [(<numba.core.ir.Assign object at 0x00000221B5E9E2D0>,
                                  32)],
             '$54pred': [(<numba.core.ir.Assign object at 0x00000221B687EED0>,
                          32)],
             '$56load_global.0': [(<numba.core.ir.Assign object at 0x00000221B687C0D0>,
                                   56)],
             '$74call.3': [(<numba.core.ir.Assign object at 0x00000221B687E690>,
                            56)],
             '$88load_method.2': [(<numba.core.ir.Assign object at 0x00000221B687E350>,
                                   86)],
             '$8load_attr.2': [(<numba.core.ir.Assign object at 0x00000221B6A23910>,
                                0)],
             '$binop_sub20.4': [(<numba.core.ir.Assign object at 0x00000221B6A22990>,
                                 0)],
             '$const18.3': [(<numba.core.ir.Assign object at 0x00000221B6A22410>,
                             0)],
             '$const68.2': [(<numba.core.ir.Assign object at 0x00000221B687D350>,
                             56)],
             'a': [(<numba.core.ir.Assign object at 0x00000221B60FEE90>, 0)],
             'bool30': [(<numba.core.ir.Assign object at 0x00000221B6A22E10>,
                         0)],
             'bool54': [(<numba.core.ir.Assign object at 0x00000221B687D490>,
                         32)],
             'indices': [(<numba.core.ir.Assign object at 0x00000221B60FD810>,
                          0)]})
2024-07-15 06:11:43,394 DEBUG:SSA violators <numba.core.utils.OrderedSet object at 0x00000221B69FFF50>
2024-07-15 06:11:43,424 DEBUG:bytecode dump:
>          0	NOP(arg=None, lineno=2230)
           2	RESUME(arg=0, lineno=2230)
           4	LOAD_FAST(arg=0, lineno=2232)
           6	LOAD_METHOD(arg=0, lineno=2232)
          28	LOAD_FAST(arg=0, lineno=2232)
          30	LOAD_ATTR(arg=1, lineno=2232)
          40	PRECALL(arg=1, lineno=2232)
          44	CALL(arg=1, lineno=2232)
          54	RETURN_VALUE(arg=None, lineno=2232)
2024-07-15 06:11:43,424 DEBUG:pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-15 06:11:43,424 DEBUG:stack: []
2024-07-15 06:11:43,424 DEBUG:state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-15 06:11:43,424 DEBUG:dispatch pc=0, inst=NOP(arg=None, lineno=2230)
2024-07-15 06:11:43,425 DEBUG:stack []
2024-07-15 06:11:43,425 DEBUG:dispatch pc=2, inst=RESUME(arg=0, lineno=2230)
2024-07-15 06:11:43,425 DEBUG:stack []
2024-07-15 06:11:43,425 DEBUG:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2232)
2024-07-15 06:11:43,425 DEBUG:stack []
2024-07-15 06:11:43,425 DEBUG:dispatch pc=6, inst=LOAD_METHOD(arg=0, lineno=2232)
2024-07-15 06:11:43,425 DEBUG:stack ['$ary4.0']
2024-07-15 06:11:43,425 DEBUG:dispatch pc=28, inst=LOAD_FAST(arg=0, lineno=2232)
2024-07-15 06:11:43,425 DEBUG:stack ['$null$6.1', '$6load_method.2']
2024-07-15 06:11:43,425 DEBUG:dispatch pc=30, inst=LOAD_ATTR(arg=1, lineno=2232)
2024-07-15 06:11:43,425 DEBUG:stack ['$null$6.1', '$6load_method.2', '$ary28.3']
2024-07-15 06:11:43,425 DEBUG:dispatch pc=40, inst=PRECALL(arg=1, lineno=2232)
2024-07-15 06:11:43,425 DEBUG:stack ['$null$6.1', '$6load_method.2', '$30load_attr.4']
2024-07-15 06:11:43,425 DEBUG:dispatch pc=44, inst=CALL(arg=1, lineno=2232)
2024-07-15 06:11:43,425 DEBUG:stack ['$null$6.1', '$6load_method.2', '$30load_attr.4']
2024-07-15 06:11:43,426 DEBUG:dispatch pc=54, inst=RETURN_VALUE(arg=None, lineno=2232)
2024-07-15 06:11:43,426 DEBUG:stack ['$44call.5']
2024-07-15 06:11:43,426 DEBUG:end state. edges=[]
2024-07-15 06:11:43,426 DEBUG:-------------------------Prune PHIs-------------------------
2024-07-15 06:11:43,426 DEBUG:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-07-15 06:11:43,426 DEBUG:defmap: {}
2024-07-15 06:11:43,426 DEBUG:phismap: defaultdict(<class 'set'>, {})
2024-07-15 06:11:43,426 DEBUG:changing phismap: defaultdict(<class 'set'>, {})
2024-07-15 06:11:43,426 DEBUG:keep phismap: {}
2024-07-15 06:11:43,426 DEBUG:new_out: defaultdict(<class 'dict'>, {})
2024-07-15 06:11:43,426 DEBUG:----------------------DONE Prune PHIs-----------------------
2024-07-15 06:11:43,426 DEBUG:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$ary4.0'}), (6, {'item': '$ary4.0', 'res': '$6load_method.2'}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {}), (20, {}), (22, {}), (24, {}), (26, {}), (28, {'res': '$ary28.3'}), (30, {'item': '$ary28.3', 'res': '$30load_attr.4'}), (32, {}), (34, {}), (36, {}), (38, {}), (40, {}), (42, {}), (44, {'func': '$6load_method.2', 'args': ['$30load_attr.4'], 'kw_names': None, 'res': '$44call.5'}), (46, {}), (48, {}), (50, {}), (52, {}), (54, {'retval': '$44call.5', 'castval': '$54return_value.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-15 06:11:43,427 DEBUG:label 0:
    ary = arg(0, name=ary)                   ['ary']
    $6load_method.2 = getattr(value=ary, attr=reshape) ['$6load_method.2', 'ary']
    $30load_attr.4 = getattr(value=ary, attr=size) ['$30load_attr.4', 'ary']
    $44call.5 = call $6load_method.2($30load_attr.4, func=$6load_method.2, args=[Var($30load_attr.4, arrayobj.py:2232)], kws=(), vararg=None, varkwarg=None, target=None) ['$30load_attr.4', '$44call.5', '$6load_method.2']
    $54return_value.6 = cast(value=$44call.5) ['$44call.5', '$54return_value.6']
    return $54return_value.6                 ['$54return_value.6']

2024-07-15 06:11:43,452 DEBUG:==== SSA block analysis pass on 0
2024-07-15 06:11:43,452 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B6973A50>
2024-07-15 06:11:43,452 DEBUG:on stmt: ary = arg(0, name=ary)
2024-07-15 06:11:43,453 DEBUG:on stmt: $6load_method.2 = getattr(value=ary, attr=reshape)
2024-07-15 06:11:43,453 DEBUG:on stmt: $30load_attr.4 = getattr(value=ary, attr=size)
2024-07-15 06:11:43,453 DEBUG:on stmt: $44call.5 = call $6load_method.2($30load_attr.4, func=$6load_method.2, args=[Var($30load_attr.4, arrayobj.py:2232)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:43,453 DEBUG:on stmt: $54return_value.6 = cast(value=$44call.5)
2024-07-15 06:11:43,453 DEBUG:on stmt: return $54return_value.6
2024-07-15 06:11:43,454 DEBUG:defs defaultdict(<class 'list'>,
            {'$30load_attr.4': [(<numba.core.ir.Assign object at 0x00000221B69E7490>,
                                 0)],
             '$44call.5': [(<numba.core.ir.Assign object at 0x00000221B69E6C10>,
                            0)],
             '$54return_value.6': [(<numba.core.ir.Assign object at 0x00000221B69E5C90>,
                                    0)],
             '$6load_method.2': [(<numba.core.ir.Assign object at 0x00000221B69E6E50>,
                                  0)],
             'ary': [(<numba.core.ir.Assign object at 0x00000221B69E5090>, 0)]})
2024-07-15 06:11:43,454 DEBUG:SSA violators <numba.core.utils.OrderedSet object at 0x00000221B6973A50>
2024-07-15 06:11:43,546 DEBUG:bytecode dump:
>          0	NOP(arg=None, lineno=481)
           2	RESUME(arg=0, lineno=481)
           4	LOAD_FAST(arg=0, lineno=483)
           6	LOAD_FAST(arg=1, lineno=483)
           8	COMPARE_OP(arg=4, lineno=483)
          14	RETURN_VALUE(arg=None, lineno=483)
2024-07-15 06:11:43,546 DEBUG:pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-15 06:11:43,546 DEBUG:stack: []
2024-07-15 06:11:43,546 DEBUG:state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-15 06:11:43,546 DEBUG:dispatch pc=0, inst=NOP(arg=None, lineno=481)
2024-07-15 06:11:43,546 DEBUG:stack []
2024-07-15 06:11:43,546 DEBUG:dispatch pc=2, inst=RESUME(arg=0, lineno=481)
2024-07-15 06:11:43,546 DEBUG:stack []
2024-07-15 06:11:43,546 DEBUG:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=483)
2024-07-15 06:11:43,546 DEBUG:stack []
2024-07-15 06:11:43,546 DEBUG:dispatch pc=6, inst=LOAD_FAST(arg=1, lineno=483)
2024-07-15 06:11:43,546 DEBUG:stack ['$a4.0']
2024-07-15 06:11:43,546 DEBUG:dispatch pc=8, inst=COMPARE_OP(arg=4, lineno=483)
2024-07-15 06:11:43,546 DEBUG:stack ['$a4.0', '$min_val6.1']
2024-07-15 06:11:43,546 DEBUG:dispatch pc=14, inst=RETURN_VALUE(arg=None, lineno=483)
2024-07-15 06:11:43,546 DEBUG:stack ['$8compare_op.2']
2024-07-15 06:11:43,546 DEBUG:end state. edges=[]
2024-07-15 06:11:43,546 DEBUG:-------------------------Prune PHIs-------------------------
2024-07-15 06:11:43,546 DEBUG:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-07-15 06:11:43,546 DEBUG:defmap: {}
2024-07-15 06:11:43,546 DEBUG:phismap: defaultdict(<class 'set'>, {})
2024-07-15 06:11:43,546 DEBUG:changing phismap: defaultdict(<class 'set'>, {})
2024-07-15 06:11:43,546 DEBUG:keep phismap: {}
2024-07-15 06:11:43,546 DEBUG:new_out: defaultdict(<class 'dict'>, {})
2024-07-15 06:11:43,546 DEBUG:----------------------DONE Prune PHIs-----------------------
2024-07-15 06:11:43,546 DEBUG:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$a4.0'}), (6, {'res': '$min_val6.1'}), (8, {'lhs': '$a4.0', 'rhs': '$min_val6.1', 'res': '$8compare_op.2'}), (10, {}), (12, {}), (14, {'retval': '$8compare_op.2', 'castval': '$14return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-15 06:11:43,548 DEBUG:label 0:
    a = arg(0, name=a)                       ['a']
    min_val = arg(1, name=min_val)           ['min_val']
    $8compare_op.2 = a > min_val             ['$8compare_op.2', 'a', 'min_val']
    $14return_value.3 = cast(value=$8compare_op.2) ['$14return_value.3', '$8compare_op.2']
    return $14return_value.3                 ['$14return_value.3']

2024-07-15 06:11:43,552 DEBUG:==== SSA block analysis pass on 0
2024-07-15 06:11:43,552 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5D2AE90>
2024-07-15 06:11:43,552 DEBUG:on stmt: a = arg(0, name=a)
2024-07-15 06:11:43,552 DEBUG:on stmt: min_val = arg(1, name=min_val)
2024-07-15 06:11:43,552 DEBUG:on stmt: $8compare_op.2 = a > min_val
2024-07-15 06:11:43,552 DEBUG:on stmt: $14return_value.3 = cast(value=$8compare_op.2)
2024-07-15 06:11:43,552 DEBUG:on stmt: return $14return_value.3
2024-07-15 06:11:43,552 DEBUG:defs defaultdict(<class 'list'>,
            {'$14return_value.3': [(<numba.core.ir.Assign object at 0x00000221B5CA5F50>,
                                    0)],
             '$8compare_op.2': [(<numba.core.ir.Assign object at 0x00000221B5CA6250>,
                                 0)],
             'a': [(<numba.core.ir.Assign object at 0x00000221B5CA6490>, 0)],
             'min_val': [(<numba.core.ir.Assign object at 0x00000221B5CA6C10>,
                          0)]})
2024-07-15 06:11:43,552 DEBUG:SSA violators <numba.core.utils.OrderedSet object at 0x00000221B5D2AE90>
2024-07-15 06:11:43,678 DEBUG:bytecode dump:
>          0	NOP(arg=None, lineno=437)
           2	COPY_FREE_VARS(arg=1, lineno=437)
           4	RESUME(arg=0, lineno=437)
           6	LOAD_DEREF(arg=3, lineno=440)
           8	STORE_FAST(arg=1, lineno=440)
          10	LOAD_GLOBAL(arg=1, lineno=441)
          22	LOAD_ATTR(arg=1, lineno=441)
          32	LOAD_FAST(arg=0, lineno=441)
          34	PRECALL(arg=1, lineno=441)
          38	CALL(arg=1, lineno=441)
          48	GET_ITER(arg=None, lineno=441)
>         50	FOR_ITER(arg=25, lineno=441)
          52	STORE_FAST(arg=2, lineno=441)
          54	LOAD_FAST(arg=1, lineno=442)
          56	LOAD_FAST(arg=2, lineno=442)
          58	LOAD_METHOD(arg=2, lineno=442)
          80	PRECALL(arg=0, lineno=442)
          84	CALL(arg=0, lineno=442)
          94	BINARY_OP(arg=13, lineno=442)
          98	STORE_FAST(arg=1, lineno=442)
         100	JUMP_BACKWARD(arg=26, lineno=442)
>        102	LOAD_FAST(arg=1, lineno=443)
         104	LOAD_FAST(arg=0, lineno=443)
         106	LOAD_ATTR(arg=3, lineno=443)
         116	BINARY_OP(arg=11, lineno=443)
         120	RETURN_VALUE(arg=None, lineno=443)
2024-07-15 06:11:43,678 DEBUG:pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-15 06:11:43,678 DEBUG:stack: []
2024-07-15 06:11:43,678 DEBUG:state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-15 06:11:43,678 DEBUG:dispatch pc=0, inst=NOP(arg=None, lineno=437)
2024-07-15 06:11:43,678 DEBUG:stack []
2024-07-15 06:11:43,678 DEBUG:dispatch pc=2, inst=COPY_FREE_VARS(arg=1, lineno=437)
2024-07-15 06:11:43,678 DEBUG:stack []
2024-07-15 06:11:43,678 DEBUG:dispatch pc=4, inst=RESUME(arg=0, lineno=437)
2024-07-15 06:11:43,678 DEBUG:stack []
2024-07-15 06:11:43,678 DEBUG:dispatch pc=6, inst=LOAD_DEREF(arg=3, lineno=440)
2024-07-15 06:11:43,678 DEBUG:stack []
2024-07-15 06:11:43,678 DEBUG:dispatch pc=8, inst=STORE_FAST(arg=1, lineno=440)
2024-07-15 06:11:43,678 DEBUG:stack ['$6load_deref.0']
2024-07-15 06:11:43,678 DEBUG:dispatch pc=10, inst=LOAD_GLOBAL(arg=1, lineno=441)
2024-07-15 06:11:43,678 DEBUG:stack []
2024-07-15 06:11:43,678 DEBUG:dispatch pc=22, inst=LOAD_ATTR(arg=1, lineno=441)
2024-07-15 06:11:43,678 DEBUG:stack ['$null$10.2', '$10load_global.1']
2024-07-15 06:11:43,678 DEBUG:dispatch pc=32, inst=LOAD_FAST(arg=0, lineno=441)
2024-07-15 06:11:43,678 DEBUG:stack ['$null$10.2', '$22load_attr.3']
2024-07-15 06:11:43,679 DEBUG:dispatch pc=34, inst=PRECALL(arg=1, lineno=441)
2024-07-15 06:11:43,679 DEBUG:stack ['$null$10.2', '$22load_attr.3', '$a32.4']
2024-07-15 06:11:43,679 DEBUG:dispatch pc=38, inst=CALL(arg=1, lineno=441)
2024-07-15 06:11:43,679 DEBUG:stack ['$null$10.2', '$22load_attr.3', '$a32.4']
2024-07-15 06:11:43,679 DEBUG:dispatch pc=48, inst=GET_ITER(arg=None, lineno=441)
2024-07-15 06:11:43,679 DEBUG:stack ['$38call.5']
2024-07-15 06:11:43,679 DEBUG:end state. edges=[Edge(pc=50, stack=('$48get_iter.6',), blockstack=(), npush=0)]
2024-07-15 06:11:43,679 DEBUG:pending: deque([State(pc_initial=50 nstack_initial=1)])
2024-07-15 06:11:43,679 DEBUG:stack: ['$phi50.0']
2024-07-15 06:11:43,679 DEBUG:state.pc_initial: State(pc_initial=50 nstack_initial=1)
2024-07-15 06:11:43,679 DEBUG:dispatch pc=50, inst=FOR_ITER(arg=25, lineno=441)
2024-07-15 06:11:43,679 DEBUG:stack ['$phi50.0']
2024-07-15 06:11:43,679 DEBUG:end state. edges=[Edge(pc=102, stack=(), blockstack=(), npush=0), Edge(pc=52, stack=('$phi50.0', '$50for_iter.2'), blockstack=(), npush=0)]
2024-07-15 06:11:43,679 DEBUG:pending: deque([State(pc_initial=102 nstack_initial=0), State(pc_initial=52 nstack_initial=2)])
2024-07-15 06:11:43,679 DEBUG:stack: []
2024-07-15 06:11:43,679 DEBUG:state.pc_initial: State(pc_initial=102 nstack_initial=0)
2024-07-15 06:11:43,679 DEBUG:dispatch pc=102, inst=LOAD_FAST(arg=1, lineno=443)
2024-07-15 06:11:43,679 DEBUG:stack []
2024-07-15 06:11:43,679 DEBUG:dispatch pc=104, inst=LOAD_FAST(arg=0, lineno=443)
2024-07-15 06:11:43,679 DEBUG:stack ['$c102.0']
2024-07-15 06:11:43,679 DEBUG:dispatch pc=106, inst=LOAD_ATTR(arg=3, lineno=443)
2024-07-15 06:11:43,679 DEBUG:stack ['$c102.0', '$a104.1']
2024-07-15 06:11:43,679 DEBUG:dispatch pc=116, inst=BINARY_OP(arg=11, lineno=443)
2024-07-15 06:11:43,679 DEBUG:stack ['$c102.0', '$106load_attr.2']
2024-07-15 06:11:43,679 DEBUG:dispatch pc=120, inst=RETURN_VALUE(arg=None, lineno=443)
2024-07-15 06:11:43,679 DEBUG:stack ['$binop_truediv116.3']
2024-07-15 06:11:43,680 DEBUG:end state. edges=[]
2024-07-15 06:11:43,680 DEBUG:pending: deque([State(pc_initial=52 nstack_initial=2)])
2024-07-15 06:11:43,680 DEBUG:stack: ['$phi52.0', '$phi52.1']
2024-07-15 06:11:43,680 DEBUG:state.pc_initial: State(pc_initial=52 nstack_initial=2)
2024-07-15 06:11:43,680 DEBUG:dispatch pc=52, inst=STORE_FAST(arg=2, lineno=441)
2024-07-15 06:11:43,680 DEBUG:stack ['$phi52.0', '$phi52.1']
2024-07-15 06:11:43,680 DEBUG:dispatch pc=54, inst=LOAD_FAST(arg=1, lineno=442)
2024-07-15 06:11:43,680 DEBUG:stack ['$phi52.0']
2024-07-15 06:11:43,680 DEBUG:dispatch pc=56, inst=LOAD_FAST(arg=2, lineno=442)
2024-07-15 06:11:43,680 DEBUG:stack ['$phi52.0', '$c54.2']
2024-07-15 06:11:43,680 DEBUG:dispatch pc=58, inst=LOAD_METHOD(arg=2, lineno=442)
2024-07-15 06:11:43,680 DEBUG:stack ['$phi52.0', '$c54.2', '$v56.3']
2024-07-15 06:11:43,680 DEBUG:dispatch pc=80, inst=PRECALL(arg=0, lineno=442)
2024-07-15 06:11:43,681 DEBUG:stack ['$phi52.0', '$c54.2', '$null$58.4', '$58load_method.5']
2024-07-15 06:11:43,681 DEBUG:dispatch pc=84, inst=CALL(arg=0, lineno=442)
2024-07-15 06:11:43,681 DEBUG:stack ['$phi52.0', '$c54.2', '$null$58.4', '$58load_method.5']
2024-07-15 06:11:43,681 DEBUG:dispatch pc=94, inst=BINARY_OP(arg=13, lineno=442)
2024-07-15 06:11:43,681 DEBUG:stack ['$phi52.0', '$c54.2', '$84call.6']
2024-07-15 06:11:43,681 DEBUG:dispatch pc=98, inst=STORE_FAST(arg=1, lineno=442)
2024-07-15 06:11:43,681 DEBUG:stack ['$phi52.0', '$binop_iadd94.7']
2024-07-15 06:11:43,681 DEBUG:dispatch pc=100, inst=JUMP_BACKWARD(arg=26, lineno=442)
2024-07-15 06:11:43,681 DEBUG:stack ['$phi52.0']
2024-07-15 06:11:43,681 DEBUG:end state. edges=[Edge(pc=50, stack=('$phi52.0',), blockstack=(), npush=0)]
2024-07-15 06:11:43,681 DEBUG:pending: deque([State(pc_initial=50 nstack_initial=1)])
2024-07-15 06:11:43,681 DEBUG:-------------------------Prune PHIs-------------------------
2024-07-15 06:11:43,681 DEBUG:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=50 nstack_initial=1): {'$phi50.0'},
             State(pc_initial=52 nstack_initial=2): {'$phi52.1'},
             State(pc_initial=102 nstack_initial=0): set()})
2024-07-15 06:11:43,681 DEBUG:defmap: {'$phi50.0': State(pc_initial=0 nstack_initial=0),
 '$phi52.1': State(pc_initial=50 nstack_initial=1)}
2024-07-15 06:11:43,681 DEBUG:phismap: defaultdict(<class 'set'>,
            {'$phi50.0': {('$48get_iter.6',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi52.0', State(pc_initial=52 nstack_initial=2))},
             '$phi52.0': {('$phi50.0', State(pc_initial=50 nstack_initial=1))},
             '$phi52.1': {('$50for_iter.2',
                           State(pc_initial=50 nstack_initial=1))}})
2024-07-15 06:11:43,681 DEBUG:changing phismap: defaultdict(<class 'set'>,
            {'$phi50.0': {('$48get_iter.6',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi50.0', State(pc_initial=50 nstack_initial=1))},
             '$phi52.0': {('$48get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.1': {('$50for_iter.2',
                           State(pc_initial=50 nstack_initial=1))}})
2024-07-15 06:11:43,682 DEBUG:changing phismap: defaultdict(<class 'set'>,
            {'$phi50.0': {('$48get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.0': {('$48get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.1': {('$50for_iter.2',
                           State(pc_initial=50 nstack_initial=1))}})
2024-07-15 06:11:43,682 DEBUG:changing phismap: defaultdict(<class 'set'>,
            {'$phi50.0': {('$48get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.0': {('$48get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.1': {('$50for_iter.2',
                           State(pc_initial=50 nstack_initial=1))}})
2024-07-15 06:11:43,682 DEBUG:keep phismap: {'$phi50.0': {('$48get_iter.6', State(pc_initial=0 nstack_initial=0))},
 '$phi52.1': {('$50for_iter.2', State(pc_initial=50 nstack_initial=1))}}
2024-07-15 06:11:43,682 DEBUG:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi50.0': '$48get_iter.6'},
             State(pc_initial=50 nstack_initial=1): {'$phi52.1': '$50for_iter.2'}})
2024-07-15 06:11:43,682 DEBUG:----------------------DONE Prune PHIs-----------------------
2024-07-15 06:11:43,682 DEBUG:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {}), (6, {'res': '$6load_deref.0'}), (8, {'value': '$6load_deref.0'}), (10, {'idx': 0, 'res': '$10load_global.1'}), (12, {}), (14, {}), (16, {}), (18, {}), (20, {}), (22, {'item': '$10load_global.1', 'res': '$22load_attr.3'}), (24, {}), (26, {}), (28, {}), (30, {}), (32, {'res': '$a32.4'}), (34, {}), (36, {}), (38, {'func': '$22load_attr.3', 'args': ['$a32.4'], 'kw_names': None, 'res': '$38call.5'}), (40, {}), (42, {}), (44, {}), (46, {}), (48, {'value': '$38call.5', 'res': '$48get_iter.6'})), outgoing_phis={'$phi50.0': '$48get_iter.6'}, blockstack=(), active_try_block=None, outgoing_edgepushed={50: ('$48get_iter.6',)})
2024-07-15 06:11:43,682 DEBUG:block_infos State(pc_initial=50 nstack_initial=1):
AdaptBlockInfo(insts=((50, {'iterator': '$phi50.0', 'pair': '$50for_iter.1', 'indval': '$50for_iter.2', 'pred': '$50for_iter.3'}),), outgoing_phis={'$phi52.1': '$50for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={102: (), 52: ('$phi50.0', '$50for_iter.2')})
2024-07-15 06:11:43,682 DEBUG:block_infos State(pc_initial=52 nstack_initial=2):
AdaptBlockInfo(insts=((52, {'value': '$phi52.1'}), (54, {'res': '$c54.2'}), (56, {'res': '$v56.3'}), (58, {'item': '$v56.3', 'res': '$58load_method.5'}), (60, {}), (62, {}), (64, {}), (66, {}), (68, {}), (70, {}), (72, {}), (74, {}), (76, {}), (78, {}), (80, {}), (82, {}), (84, {'func': '$58load_method.5', 'args': [], 'kw_names': None, 'res': '$84call.6'}), (86, {}), (88, {}), (90, {}), (92, {}), (94, {'op': '+=', 'lhs': '$c54.2', 'rhs': '$84call.6', 'res': '$binop_iadd94.7'}), (96, {}), (98, {'value': '$binop_iadd94.7'}), (100, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={50: ('$phi52.0',)})
2024-07-15 06:11:43,682 DEBUG:block_infos State(pc_initial=102 nstack_initial=0):
AdaptBlockInfo(insts=((102, {'res': '$c102.0'}), (104, {'res': '$a104.1'}), (106, {'item': '$a104.1', 'res': '$106load_attr.2'}), (108, {}), (110, {}), (112, {}), (114, {}), (116, {'op': '/', 'lhs': '$c102.0', 'rhs': '$106load_attr.2', 'res': '$binop_truediv116.3'}), (118, {}), (120, {'retval': '$binop_truediv116.3', 'castval': '$120return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-15 06:11:43,683 DEBUG:label 0:
    a = arg(0, name=a)                       ['a']
    c = freevar(acc_init: 0.0)               ['c']
    $10load_global.1 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$10load_global.1']
    $22load_attr.3 = getattr(value=$10load_global.1, attr=nditer) ['$10load_global.1', '$22load_attr.3']
    $38call.5 = call $22load_attr.3(a, func=$22load_attr.3, args=[Var(a, arraymath.py:437)], kws=(), vararg=None, varkwarg=None, target=None) ['$22load_attr.3', '$38call.5', 'a']
    $48get_iter.6 = getiter(value=$38call.5) ['$38call.5', '$48get_iter.6']
    $phi50.0 = $48get_iter.6                 ['$48get_iter.6', '$phi50.0']
    jump 50                                  []
label 50:
    $50for_iter.1 = iternext(value=$phi50.0) ['$50for_iter.1', '$phi50.0']
    $50for_iter.2 = pair_first(value=$50for_iter.1) ['$50for_iter.1', '$50for_iter.2']
    $50for_iter.3 = pair_second(value=$50for_iter.1) ['$50for_iter.1', '$50for_iter.3']
    $phi52.1 = $50for_iter.2                 ['$50for_iter.2', '$phi52.1']
    branch $50for_iter.3, 52, 102            ['$50for_iter.3']
label 52:
    v = $phi52.1                             ['$phi52.1', 'v']
    $58load_method.5 = getattr(value=v, attr=item) ['$58load_method.5', 'v']
    $84call.6 = call $58load_method.5(func=$58load_method.5, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$58load_method.5', '$84call.6']
    $binop_iadd94.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$84call.6, static_lhs=Undefined, static_rhs=Undefined) ['$84call.6', '$binop_iadd94.7', 'c']
    c = $binop_iadd94.7                      ['$binop_iadd94.7', 'c']
    jump 50                                  []
label 102:
    $106load_attr.2 = getattr(value=a, attr=size) ['$106load_attr.2', 'a']
    $binop_truediv116.3 = c / $106load_attr.2 ['$106load_attr.2', '$binop_truediv116.3', 'c']
    $120return_value.4 = cast(value=$binop_truediv116.3) ['$120return_value.4', '$binop_truediv116.3']
    return $120return_value.4                ['$120return_value.4']

2024-07-15 06:11:43,693 DEBUG:==== SSA block analysis pass on 0
2024-07-15 06:11:43,693 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5D29250>
2024-07-15 06:11:43,693 DEBUG:on stmt: a = arg(0, name=a)
2024-07-15 06:11:43,693 DEBUG:on stmt: c = freevar(acc_init: 0.0)
2024-07-15 06:11:43,693 DEBUG:on stmt: $10load_global.1 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:43,693 DEBUG:on stmt: $22load_attr.3 = getattr(value=$10load_global.1, attr=nditer)
2024-07-15 06:11:43,693 DEBUG:on stmt: $38call.5 = call $22load_attr.3(a, func=$22load_attr.3, args=[Var(a, arraymath.py:437)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:43,693 DEBUG:on stmt: $48get_iter.6 = getiter(value=$38call.5)
2024-07-15 06:11:43,693 DEBUG:on stmt: $phi50.0 = $48get_iter.6
2024-07-15 06:11:43,693 DEBUG:on stmt: jump 50
2024-07-15 06:11:43,693 DEBUG:==== SSA block analysis pass on 50
2024-07-15 06:11:43,693 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5D29250>
2024-07-15 06:11:43,693 DEBUG:on stmt: $50for_iter.1 = iternext(value=$phi50.0)
2024-07-15 06:11:43,693 DEBUG:on stmt: $50for_iter.2 = pair_first(value=$50for_iter.1)
2024-07-15 06:11:43,693 DEBUG:on stmt: $50for_iter.3 = pair_second(value=$50for_iter.1)
2024-07-15 06:11:43,693 DEBUG:on stmt: $phi52.1 = $50for_iter.2
2024-07-15 06:11:43,693 DEBUG:on stmt: branch $50for_iter.3, 52, 102
2024-07-15 06:11:43,693 DEBUG:==== SSA block analysis pass on 52
2024-07-15 06:11:43,693 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5D29250>
2024-07-15 06:11:43,693 DEBUG:on stmt: v = $phi52.1
2024-07-15 06:11:43,693 DEBUG:on stmt: $58load_method.5 = getattr(value=v, attr=item)
2024-07-15 06:11:43,694 DEBUG:on stmt: $84call.6 = call $58load_method.5(func=$58load_method.5, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:43,694 DEBUG:on stmt: $binop_iadd94.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$84call.6, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:43,694 DEBUG:on stmt: c = $binop_iadd94.7
2024-07-15 06:11:43,694 DEBUG:on stmt: jump 50
2024-07-15 06:11:43,694 DEBUG:==== SSA block analysis pass on 102
2024-07-15 06:11:43,694 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5D29250>
2024-07-15 06:11:43,694 DEBUG:on stmt: $106load_attr.2 = getattr(value=a, attr=size)
2024-07-15 06:11:43,694 DEBUG:on stmt: $binop_truediv116.3 = c / $106load_attr.2
2024-07-15 06:11:43,694 DEBUG:on stmt: $120return_value.4 = cast(value=$binop_truediv116.3)
2024-07-15 06:11:43,694 DEBUG:on stmt: return $120return_value.4
2024-07-15 06:11:43,695 DEBUG:defs defaultdict(<class 'list'>,
            {'$106load_attr.2': [(<numba.core.ir.Assign object at 0x00000221B600A450>,
                                  102)],
             '$10load_global.1': [(<numba.core.ir.Assign object at 0x00000221B60E7550>,
                                   0)],
             '$120return_value.4': [(<numba.core.ir.Assign object at 0x00000221B600BA50>,
                                     102)],
             '$22load_attr.3': [(<numba.core.ir.Assign object at 0x00000221B60E7A50>,
                                 0)],
             '$38call.5': [(<numba.core.ir.Assign object at 0x00000221B6008BD0>,
                            0)],
             '$48get_iter.6': [(<numba.core.ir.Assign object at 0x00000221B60086D0>,
                                0)],
             '$50for_iter.1': [(<numba.core.ir.Assign object at 0x00000221B600A5D0>,
                                50)],
             '$50for_iter.2': [(<numba.core.ir.Assign object at 0x00000221B600B350>,
                                50)],
             '$50for_iter.3': [(<numba.core.ir.Assign object at 0x00000221B6008A10>,
                                50)],
             '$58load_method.5': [(<numba.core.ir.Assign object at 0x00000221B600AD90>,
                                   52)],
             '$84call.6': [(<numba.core.ir.Assign object at 0x00000221B6009BD0>,
                            52)],
             '$binop_iadd94.7': [(<numba.core.ir.Assign object at 0x00000221B600BCD0>,
                                  52)],
             '$binop_truediv116.3': [(<numba.core.ir.Assign object at 0x00000221B600B8D0>,
                                      102)],
             '$phi50.0': [(<numba.core.ir.Assign object at 0x00000221B60E6FD0>,
                           0)],
             '$phi52.1': [(<numba.core.ir.Assign object at 0x00000221B600A150>,
                           50)],
             'a': [(<numba.core.ir.Assign object at 0x00000221B60E6090>, 0)],
             'c': [(<numba.core.ir.Assign object at 0x00000221B60E62D0>, 0),
                   (<numba.core.ir.Assign object at 0x00000221B600A890>, 52)],
             'v': [(<numba.core.ir.Assign object at 0x00000221B6008C50>, 52)]})
2024-07-15 06:11:43,696 DEBUG:SSA violators <numba.core.utils.OrderedSet object at 0x00000221B5D29250>
2024-07-15 06:11:43,696 DEBUG:Fix SSA violator on var c
2024-07-15 06:11:43,696 DEBUG:==== SSA block rewrite pass on 0
2024-07-15 06:11:43,696 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B60D3210>
2024-07-15 06:11:43,696 DEBUG:on stmt: a = arg(0, name=a)
2024-07-15 06:11:43,696 DEBUG:on stmt: c = freevar(acc_init: 0.0)
2024-07-15 06:11:43,696 DEBUG:first assign: c
2024-07-15 06:11:43,696 DEBUG:replaced with: c = freevar(acc_init: 0.0)
2024-07-15 06:11:43,696 DEBUG:on stmt: $10load_global.1 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:43,696 DEBUG:on stmt: $22load_attr.3 = getattr(value=$10load_global.1, attr=nditer)
2024-07-15 06:11:43,696 DEBUG:on stmt: $38call.5 = call $22load_attr.3(a, func=$22load_attr.3, args=[Var(a, arraymath.py:437)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:43,696 DEBUG:on stmt: $48get_iter.6 = getiter(value=$38call.5)
2024-07-15 06:11:43,696 DEBUG:on stmt: $phi50.0 = $48get_iter.6
2024-07-15 06:11:43,696 DEBUG:on stmt: jump 50
2024-07-15 06:11:43,696 DEBUG:==== SSA block rewrite pass on 50
2024-07-15 06:11:43,696 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B60D3210>
2024-07-15 06:11:43,696 DEBUG:on stmt: $50for_iter.1 = iternext(value=$phi50.0)
2024-07-15 06:11:43,696 DEBUG:on stmt: $50for_iter.2 = pair_first(value=$50for_iter.1)
2024-07-15 06:11:43,696 DEBUG:on stmt: $50for_iter.3 = pair_second(value=$50for_iter.1)
2024-07-15 06:11:43,696 DEBUG:on stmt: $phi52.1 = $50for_iter.2
2024-07-15 06:11:43,696 DEBUG:on stmt: branch $50for_iter.3, 52, 102
2024-07-15 06:11:43,696 DEBUG:==== SSA block rewrite pass on 52
2024-07-15 06:11:43,696 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B60D3210>
2024-07-15 06:11:43,696 DEBUG:on stmt: v = $phi52.1
2024-07-15 06:11:43,696 DEBUG:on stmt: $58load_method.5 = getattr(value=v, attr=item)
2024-07-15 06:11:43,697 DEBUG:on stmt: $84call.6 = call $58load_method.5(func=$58load_method.5, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:43,697 DEBUG:on stmt: $binop_iadd94.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$84call.6, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:43,697 DEBUG:on stmt: c = $binop_iadd94.7
2024-07-15 06:11:43,697 DEBUG:replaced with: c.1 = $binop_iadd94.7
2024-07-15 06:11:43,697 DEBUG:on stmt: jump 50
2024-07-15 06:11:43,697 DEBUG:==== SSA block rewrite pass on 102
2024-07-15 06:11:43,697 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B60D3210>
2024-07-15 06:11:43,697 DEBUG:on stmt: $106load_attr.2 = getattr(value=a, attr=size)
2024-07-15 06:11:43,697 DEBUG:on stmt: $binop_truediv116.3 = c / $106load_attr.2
2024-07-15 06:11:43,697 DEBUG:on stmt: $120return_value.4 = cast(value=$binop_truediv116.3)
2024-07-15 06:11:43,697 DEBUG:on stmt: return $120return_value.4
2024-07-15 06:11:43,697 DEBUG:Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x00000221B60D1410>],
             52: [<numba.core.ir.Assign object at 0x00000221B60D0510>]})
2024-07-15 06:11:43,697 DEBUG:==== SSA block rewrite pass on 0
2024-07-15 06:11:43,697 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B60D1C90>
2024-07-15 06:11:43,697 DEBUG:on stmt: a = arg(0, name=a)
2024-07-15 06:11:43,697 DEBUG:on stmt: c = freevar(acc_init: 0.0)
2024-07-15 06:11:43,697 DEBUG:on stmt: $10load_global.1 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:43,697 DEBUG:on stmt: $22load_attr.3 = getattr(value=$10load_global.1, attr=nditer)
2024-07-15 06:11:43,697 DEBUG:on stmt: $38call.5 = call $22load_attr.3(a, func=$22load_attr.3, args=[Var(a, arraymath.py:437)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:43,697 DEBUG:on stmt: $48get_iter.6 = getiter(value=$38call.5)
2024-07-15 06:11:43,697 DEBUG:on stmt: $phi50.0 = $48get_iter.6
2024-07-15 06:11:43,697 DEBUG:on stmt: jump 50
2024-07-15 06:11:43,697 DEBUG:==== SSA block rewrite pass on 50
2024-07-15 06:11:43,697 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B60D1C90>
2024-07-15 06:11:43,697 DEBUG:on stmt: $50for_iter.1 = iternext(value=$phi50.0)
2024-07-15 06:11:43,697 DEBUG:on stmt: $50for_iter.2 = pair_first(value=$50for_iter.1)
2024-07-15 06:11:43,697 DEBUG:on stmt: $50for_iter.3 = pair_second(value=$50for_iter.1)
2024-07-15 06:11:43,697 DEBUG:on stmt: $phi52.1 = $50for_iter.2
2024-07-15 06:11:43,698 DEBUG:on stmt: branch $50for_iter.3, 52, 102
2024-07-15 06:11:43,698 DEBUG:==== SSA block rewrite pass on 52
2024-07-15 06:11:43,698 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B60D1C90>
2024-07-15 06:11:43,698 DEBUG:on stmt: v = $phi52.1
2024-07-15 06:11:43,698 DEBUG:on stmt: $58load_method.5 = getattr(value=v, attr=item)
2024-07-15 06:11:43,698 DEBUG:on stmt: $84call.6 = call $58load_method.5(func=$58load_method.5, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:43,698 DEBUG:on stmt: $binop_iadd94.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$84call.6, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:43,698 DEBUG:find_def var='c' stmt=$binop_iadd94.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$84call.6, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:43,698 DEBUG:find_def_from_top label 52
2024-07-15 06:11:43,698 DEBUG:idom 50 from label 52
2024-07-15 06:11:43,698 DEBUG:find_def_from_bottom label 50
2024-07-15 06:11:43,698 DEBUG:find_def_from_top label 50
2024-07-15 06:11:43,698 DEBUG:insert phi node c.2 = phi(incoming_values=[], incoming_blocks=[]) at 50
2024-07-15 06:11:43,698 DEBUG:find_def_from_bottom label 0
2024-07-15 06:11:43,698 DEBUG:incoming_def c = freevar(acc_init: 0.0)
2024-07-15 06:11:43,698 DEBUG:find_def_from_bottom label 52
2024-07-15 06:11:43,698 DEBUG:incoming_def c.1 = $binop_iadd94.7
2024-07-15 06:11:43,698 DEBUG:replaced with: $binop_iadd94.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c.2, rhs=$84call.6, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:43,698 DEBUG:on stmt: c.1 = $binop_iadd94.7
2024-07-15 06:11:43,698 DEBUG:on stmt: jump 50
2024-07-15 06:11:43,698 DEBUG:==== SSA block rewrite pass on 102
2024-07-15 06:11:43,698 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B60D1C90>
2024-07-15 06:11:43,698 DEBUG:on stmt: $106load_attr.2 = getattr(value=a, attr=size)
2024-07-15 06:11:43,698 DEBUG:on stmt: $binop_truediv116.3 = c / $106load_attr.2
2024-07-15 06:11:43,698 DEBUG:find_def var='c' stmt=$binop_truediv116.3 = c / $106load_attr.2
2024-07-15 06:11:43,698 DEBUG:find_def_from_top label 102
2024-07-15 06:11:43,698 DEBUG:idom 50 from label 102
2024-07-15 06:11:43,699 DEBUG:find_def_from_bottom label 50
2024-07-15 06:11:43,699 DEBUG:replaced with: $binop_truediv116.3 = c.2 / $106load_attr.2
2024-07-15 06:11:43,699 DEBUG:on stmt: $120return_value.4 = cast(value=$binop_truediv116.3)
2024-07-15 06:11:43,699 DEBUG:on stmt: return $120return_value.4
2024-07-15 06:11:44,147 DEBUG:bytecode dump:
>          0	NOP(arg=None, lineno=1209)
           2	RESUME(arg=0, lineno=1209)
           4	LOAD_FAST(arg=0, lineno=1221)
           6	LOAD_CONST(arg=1, lineno=1221)
           8	BINARY_SUBSCR(arg=None, lineno=1221)
          18	LOAD_GLOBAL(arg=1, lineno=1221)
          30	LOAD_ATTR(arg=1, lineno=1221)
          40	LOAD_FAST(arg=0, lineno=1221)
          42	LOAD_CONST(arg=2, lineno=1221)
          44	LOAD_GLOBAL(arg=5, lineno=1221)
          56	LOAD_FAST(arg=2, lineno=1221)
          58	LOAD_FAST(arg=0, lineno=1221)
          60	LOAD_ATTR(arg=3, lineno=1221)
          70	LOAD_CONST(arg=1, lineno=1221)
          72	BINARY_SUBSCR(arg=None, lineno=1221)
          82	PRECALL(arg=2, lineno=1221)
          86	CALL(arg=2, lineno=1221)
          96	BUILD_SLICE(arg=2, lineno=1221)
          98	BINARY_SUBSCR(arg=None, lineno=1221)
         108	PRECALL(arg=1, lineno=1221)
         112	CALL(arg=1, lineno=1221)
         122	COMPARE_OP(arg=5, lineno=1221)
         128	LOAD_FAST(arg=7, lineno=1221)
         130	LOAD_CONST(arg=1, lineno=1221)
         132	STORE_SUBSCR(arg=None, lineno=1221)
         136	LOAD_FAST(arg=7, lineno=1222)
         138	LOAD_CONST(arg=1, lineno=1222)
         140	COPY(arg=2, lineno=1222)
         142	COPY(arg=2, lineno=1222)
         144	BINARY_SUBSCR(arg=None, lineno=1222)
         154	LOAD_FAST(arg=0, lineno=1222)
         156	LOAD_CONST(arg=1, lineno=1222)
         158	BINARY_SUBSCR(arg=None, lineno=1222)
         168	LOAD_GLOBAL(arg=1, lineno=1222)
         180	LOAD_ATTR(arg=4, lineno=1222)
         190	LOAD_FAST(arg=0, lineno=1222)
         192	LOAD_CONST(arg=2, lineno=1222)
         194	LOAD_GLOBAL(arg=5, lineno=1222)
         206	LOAD_FAST(arg=4, lineno=1222)
         208	LOAD_FAST(arg=0, lineno=1222)
         210	LOAD_ATTR(arg=3, lineno=1222)
         220	LOAD_CONST(arg=1, lineno=1222)
         222	BINARY_SUBSCR(arg=None, lineno=1222)
         232	PRECALL(arg=2, lineno=1222)
         236	CALL(arg=2, lineno=1222)
         246	BUILD_SLICE(arg=2, lineno=1222)
         248	BINARY_SUBSCR(arg=None, lineno=1222)
         258	PRECALL(arg=1, lineno=1222)
         262	CALL(arg=1, lineno=1222)
         272	LOAD_FAST(arg=5, lineno=1222)
         274	BINARY_OP(arg=0, lineno=1222)
         278	COMPARE_OP(arg=5, lineno=1222)
         284	BINARY_OP(arg=14, lineno=1222)
         288	SWAP(arg=3, lineno=1222)
         290	SWAP(arg=2, lineno=1222)
         292	STORE_SUBSCR(arg=None, lineno=1222)
         296	LOAD_FAST(arg=7, lineno=1224)
         298	LOAD_CONST(arg=1, lineno=1224)
         300	BINARY_SUBSCR(arg=None, lineno=1224)
         310	POP_JUMP_FORWARD_IF_FALSE(arg=6, lineno=1224)
         312	LOAD_FAST(arg=6, lineno=1225)
         314	LOAD_CONST(arg=3, lineno=1225)
         316	BINARY_OP(arg=0, lineno=1225)
         320	STORE_FAST(arg=8, lineno=1225)
         322	JUMP_FORWARD(arg=2, lineno=1225)
>        324	LOAD_CONST(arg=3, lineno=1227)
         326	STORE_FAST(arg=8, lineno=1227)
>        328	LOAD_FAST(arg=8, lineno=1229)
         330	LOAD_FAST(arg=0, lineno=1229)
         332	LOAD_ATTR(arg=3, lineno=1229)
         342	LOAD_CONST(arg=1, lineno=1229)
         344	BINARY_SUBSCR(arg=None, lineno=1229)
         354	COMPARE_OP(arg=0, lineno=1229)
         360	POP_JUMP_FORWARD_IF_FALSE(arg=245, lineno=1229)
>        362	LOAD_GLOBAL(arg=1, lineno=1230)
         374	LOAD_ATTR(arg=1, lineno=1230)
         384	LOAD_FAST(arg=0, lineno=1230)
         386	LOAD_GLOBAL(arg=3, lineno=1230)
         398	LOAD_CONST(arg=1, lineno=1230)
         400	LOAD_FAST(arg=8, lineno=1230)
         402	LOAD_FAST(arg=1, lineno=1230)
         404	BINARY_OP(arg=10, lineno=1230)
         408	PRECALL(arg=2, lineno=1230)
         412	CALL(arg=2, lineno=1230)
         422	LOAD_GLOBAL(arg=5, lineno=1230)
         434	LOAD_FAST(arg=8, lineno=1230)
         436	LOAD_FAST(arg=2, lineno=1230)
         438	BINARY_OP(arg=0, lineno=1230)
         442	LOAD_FAST(arg=0, lineno=1230)
         444	LOAD_ATTR(arg=3, lineno=1230)
         454	LOAD_CONST(arg=1, lineno=1230)
         456	BINARY_SUBSCR(arg=None, lineno=1230)
         466	PRECALL(arg=2, lineno=1230)
         470	CALL(arg=2, lineno=1230)
         480	BUILD_SLICE(arg=2, lineno=1230)
         482	BINARY_SUBSCR(arg=None, lineno=1230)
         492	PRECALL(arg=1, lineno=1230)
         496	CALL(arg=1, lineno=1230)
         506	STORE_FAST(arg=9, lineno=1230)
         508	LOAD_FAST(arg=0, lineno=1233)
         510	LOAD_FAST(arg=8, lineno=1233)
         512	BINARY_SUBSCR(arg=None, lineno=1233)
         522	LOAD_FAST(arg=9, lineno=1233)
         524	COMPARE_OP(arg=2, lineno=1233)
         530	LOAD_FAST(arg=7, lineno=1233)
         532	LOAD_FAST(arg=8, lineno=1233)
         534	STORE_SUBSCR(arg=None, lineno=1233)
         538	LOAD_FAST(arg=7, lineno=1235)
         540	LOAD_FAST(arg=8, lineno=1235)
         542	BINARY_SUBSCR(arg=None, lineno=1235)
         552	POP_JUMP_FORWARD_IF_TRUE(arg=6, lineno=1235)
         554	LOAD_FAST(arg=8, lineno=1236)
         556	LOAD_CONST(arg=3, lineno=1236)
         558	BINARY_OP(arg=13, lineno=1236)
         562	STORE_FAST(arg=8, lineno=1236)
         564	JUMP_BACKWARD(arg=119, lineno=1237)
>        566	LOAD_GLOBAL(arg=1, lineno=1239)
         578	LOAD_ATTR(arg=4, lineno=1239)
         588	LOAD_FAST(arg=0, lineno=1239)
         590	LOAD_GLOBAL(arg=3, lineno=1239)
         602	LOAD_CONST(arg=1, lineno=1239)
         604	LOAD_FAST(arg=8, lineno=1239)
         606	LOAD_FAST(arg=3, lineno=1239)
         608	BINARY_OP(arg=10, lineno=1239)
         612	PRECALL(arg=2, lineno=1239)
         616	CALL(arg=2, lineno=1239)
         626	LOAD_GLOBAL(arg=5, lineno=1239)
         638	LOAD_FAST(arg=8, lineno=1239)
         640	LOAD_FAST(arg=4, lineno=1239)
         642	BINARY_OP(arg=0, lineno=1239)
         646	LOAD_FAST(arg=0, lineno=1239)
         648	LOAD_ATTR(arg=3, lineno=1239)
         658	LOAD_CONST(arg=1, lineno=1239)
         660	BINARY_SUBSCR(arg=None, lineno=1239)
         670	PRECALL(arg=2, lineno=1239)
         674	CALL(arg=2, lineno=1239)
         684	BUILD_SLICE(arg=2, lineno=1239)
         686	BINARY_SUBSCR(arg=None, lineno=1239)
         696	PRECALL(arg=1, lineno=1239)
         700	CALL(arg=1, lineno=1239)
         710	STORE_FAST(arg=10, lineno=1239)
         712	LOAD_FAST(arg=7, lineno=1240)
         714	LOAD_FAST(arg=8, lineno=1240)
         716	COPY(arg=2, lineno=1240)
         718	COPY(arg=2, lineno=1240)
         720	BINARY_SUBSCR(arg=None, lineno=1240)
         730	LOAD_FAST(arg=0, lineno=1240)
         732	LOAD_FAST(arg=8, lineno=1240)
         734	BINARY_SUBSCR(arg=None, lineno=1240)
         744	LOAD_FAST(arg=10, lineno=1240)
         746	LOAD_FAST(arg=5, lineno=1240)
         748	BINARY_OP(arg=0, lineno=1240)
         752	COMPARE_OP(arg=5, lineno=1240)
         758	BINARY_OP(arg=14, lineno=1240)
         762	SWAP(arg=3, lineno=1240)
         764	SWAP(arg=2, lineno=1240)
         766	STORE_SUBSCR(arg=None, lineno=1240)
         770	LOAD_FAST(arg=7, lineno=1242)
         772	LOAD_FAST(arg=8, lineno=1242)
         774	BINARY_SUBSCR(arg=None, lineno=1242)
         784	POP_JUMP_FORWARD_IF_TRUE(arg=6, lineno=1242)
         786	LOAD_FAST(arg=8, lineno=1243)
         788	LOAD_CONST(arg=3, lineno=1243)
         790	BINARY_OP(arg=13, lineno=1243)
         794	STORE_FAST(arg=8, lineno=1243)
         796	JUMP_BACKWARD(arg=235, lineno=1244)
>        798	LOAD_FAST(arg=8, lineno=1247)
         800	LOAD_FAST(arg=6, lineno=1247)
         802	LOAD_CONST(arg=3, lineno=1247)
         804	BINARY_OP(arg=0, lineno=1247)
         808	BINARY_OP(arg=13, lineno=1247)
         812	STORE_FAST(arg=8, lineno=1247)
         814	LOAD_FAST(arg=8, lineno=1229)
         816	LOAD_FAST(arg=0, lineno=1229)
         818	LOAD_ATTR(arg=3, lineno=1229)
         828	LOAD_CONST(arg=1, lineno=1229)
         830	BINARY_SUBSCR(arg=None, lineno=1229)
         840	COMPARE_OP(arg=0, lineno=1229)
         846	POP_JUMP_BACKWARD_IF_TRUE(arg=243, lineno=1229)
         848	LOAD_CONST(arg=2, lineno=1229)
         850	RETURN_VALUE(arg=None, lineno=1229)
>        852	LOAD_CONST(arg=2, lineno=1229)
         854	RETURN_VALUE(arg=None, lineno=1229)
2024-07-15 06:11:44,147 DEBUG:pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-15 06:11:44,147 DEBUG:stack: []
2024-07-15 06:11:44,147 DEBUG:state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-15 06:11:44,147 DEBUG:dispatch pc=0, inst=NOP(arg=None, lineno=1209)
2024-07-15 06:11:44,147 DEBUG:stack []
2024-07-15 06:11:44,147 DEBUG:dispatch pc=2, inst=RESUME(arg=0, lineno=1209)
2024-07-15 06:11:44,147 DEBUG:stack []
2024-07-15 06:11:44,147 DEBUG:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1221)
2024-07-15 06:11:44,147 DEBUG:stack []
2024-07-15 06:11:44,147 DEBUG:dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1221)
2024-07-15 06:11:44,147 DEBUG:stack ['$x4.0']
2024-07-15 06:11:44,147 DEBUG:dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1221)
2024-07-15 06:11:44,147 DEBUG:stack ['$x4.0', '$const6.1']
2024-07-15 06:11:44,148 DEBUG:dispatch pc=18, inst=LOAD_GLOBAL(arg=1, lineno=1221)
2024-07-15 06:11:44,148 DEBUG:stack ['$8binary_subscr.2']
2024-07-15 06:11:44,148 DEBUG:dispatch pc=30, inst=LOAD_ATTR(arg=1, lineno=1221)
2024-07-15 06:11:44,148 DEBUG:stack ['$8binary_subscr.2', '$null$18.4', '$18load_global.3']
2024-07-15 06:11:44,148 DEBUG:dispatch pc=40, inst=LOAD_FAST(arg=0, lineno=1221)
2024-07-15 06:11:44,148 DEBUG:stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5']
2024-07-15 06:11:44,148 DEBUG:dispatch pc=42, inst=LOAD_CONST(arg=2, lineno=1221)
2024-07-15 06:11:44,148 DEBUG:stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6']
2024-07-15 06:11:44,148 DEBUG:dispatch pc=44, inst=LOAD_GLOBAL(arg=5, lineno=1221)
2024-07-15 06:11:44,148 DEBUG:stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7']
2024-07-15 06:11:44,148 DEBUG:dispatch pc=56, inst=LOAD_FAST(arg=2, lineno=1221)
2024-07-15 06:11:44,148 DEBUG:stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7', '$null$44.9', '$44load_global.8']
2024-07-15 06:11:44,148 DEBUG:dispatch pc=58, inst=LOAD_FAST(arg=0, lineno=1221)
2024-07-15 06:11:44,148 DEBUG:stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7', '$null$44.9', '$44load_global.8', '$post_max56.10']
2024-07-15 06:11:44,148 DEBUG:dispatch pc=60, inst=LOAD_ATTR(arg=3, lineno=1221)
2024-07-15 06:11:44,148 DEBUG:stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7', '$null$44.9', '$44load_global.8', '$post_max56.10', '$x58.11']
2024-07-15 06:11:44,148 DEBUG:dispatch pc=70, inst=LOAD_CONST(arg=1, lineno=1221)
2024-07-15 06:11:44,148 DEBUG:stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7', '$null$44.9', '$44load_global.8', '$post_max56.10', '$60load_attr.12']
2024-07-15 06:11:44,148 DEBUG:dispatch pc=72, inst=BINARY_SUBSCR(arg=None, lineno=1221)
2024-07-15 06:11:44,148 DEBUG:stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7', '$null$44.9', '$44load_global.8', '$post_max56.10', '$60load_attr.12', '$const70.13']
2024-07-15 06:11:44,148 DEBUG:dispatch pc=82, inst=PRECALL(arg=2, lineno=1221)
2024-07-15 06:11:44,148 DEBUG:stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7', '$null$44.9', '$44load_global.8', '$post_max56.10', '$72binary_subscr.14']
2024-07-15 06:11:44,148 DEBUG:dispatch pc=86, inst=CALL(arg=2, lineno=1221)
2024-07-15 06:11:44,148 DEBUG:stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7', '$null$44.9', '$44load_global.8', '$post_max56.10', '$72binary_subscr.14']
2024-07-15 06:11:44,148 DEBUG:dispatch pc=96, inst=BUILD_SLICE(arg=2, lineno=1221)
2024-07-15 06:11:44,149 DEBUG:stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7', '$86call.15']
2024-07-15 06:11:44,149 DEBUG:dispatch pc=98, inst=BINARY_SUBSCR(arg=None, lineno=1221)
2024-07-15 06:11:44,149 DEBUG:stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$96build_slice.17']
2024-07-15 06:11:44,149 DEBUG:dispatch pc=108, inst=PRECALL(arg=1, lineno=1221)
2024-07-15 06:11:44,149 DEBUG:stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$98binary_subscr.18']
2024-07-15 06:11:44,149 DEBUG:dispatch pc=112, inst=CALL(arg=1, lineno=1221)
2024-07-15 06:11:44,149 DEBUG:stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$98binary_subscr.18']
2024-07-15 06:11:44,149 DEBUG:dispatch pc=122, inst=COMPARE_OP(arg=5, lineno=1221)
2024-07-15 06:11:44,149 DEBUG:stack ['$8binary_subscr.2', '$112call.19']
2024-07-15 06:11:44,149 DEBUG:dispatch pc=128, inst=LOAD_FAST(arg=7, lineno=1221)
2024-07-15 06:11:44,149 DEBUG:stack ['$122compare_op.20']
2024-07-15 06:11:44,149 DEBUG:dispatch pc=130, inst=LOAD_CONST(arg=1, lineno=1221)
2024-07-15 06:11:44,149 DEBUG:stack ['$122compare_op.20', '$peaks128.21']
2024-07-15 06:11:44,149 DEBUG:dispatch pc=132, inst=STORE_SUBSCR(arg=None, lineno=1221)
2024-07-15 06:11:44,149 DEBUG:stack ['$122compare_op.20', '$peaks128.21', '$const130.22']
2024-07-15 06:11:44,149 DEBUG:dispatch pc=136, inst=LOAD_FAST(arg=7, lineno=1222)
2024-07-15 06:11:44,149 DEBUG:stack []
2024-07-15 06:11:44,149 DEBUG:dispatch pc=138, inst=LOAD_CONST(arg=1, lineno=1222)
2024-07-15 06:11:44,149 DEBUG:stack ['$peaks136.23']
2024-07-15 06:11:44,149 DEBUG:dispatch pc=140, inst=COPY(arg=2, lineno=1222)
2024-07-15 06:11:44,149 DEBUG:stack ['$peaks136.23', '$const138.24']
2024-07-15 06:11:44,149 DEBUG:dispatch pc=142, inst=COPY(arg=2, lineno=1222)
2024-07-15 06:11:44,149 DEBUG:stack ['$peaks136.23', '$const138.24', '$peaks136.23']
2024-07-15 06:11:44,149 DEBUG:dispatch pc=144, inst=BINARY_SUBSCR(arg=None, lineno=1222)
2024-07-15 06:11:44,149 DEBUG:stack ['$peaks136.23', '$const138.24', '$peaks136.23', '$const138.24']
2024-07-15 06:11:44,149 DEBUG:dispatch pc=154, inst=LOAD_FAST(arg=0, lineno=1222)
2024-07-15 06:11:44,149 DEBUG:stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25']
2024-07-15 06:11:44,150 DEBUG:dispatch pc=156, inst=LOAD_CONST(arg=1, lineno=1222)
2024-07-15 06:11:44,150 DEBUG:stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$x154.26']
2024-07-15 06:11:44,150 DEBUG:dispatch pc=158, inst=BINARY_SUBSCR(arg=None, lineno=1222)
2024-07-15 06:11:44,150 DEBUG:stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$x154.26', '$const156.27']
2024-07-15 06:11:44,150 DEBUG:dispatch pc=168, inst=LOAD_GLOBAL(arg=1, lineno=1222)
2024-07-15 06:11:44,150 DEBUG:stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28']
2024-07-15 06:11:44,150 DEBUG:dispatch pc=180, inst=LOAD_ATTR(arg=4, lineno=1222)
2024-07-15 06:11:44,150 DEBUG:stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$168load_global.29']
2024-07-15 06:11:44,150 DEBUG:dispatch pc=190, inst=LOAD_FAST(arg=0, lineno=1222)
2024-07-15 06:11:44,150 DEBUG:stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31']
2024-07-15 06:11:44,150 DEBUG:dispatch pc=192, inst=LOAD_CONST(arg=2, lineno=1222)
2024-07-15 06:11:44,150 DEBUG:stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32']
2024-07-15 06:11:44,150 DEBUG:dispatch pc=194, inst=LOAD_GLOBAL(arg=5, lineno=1222)
2024-07-15 06:11:44,150 DEBUG:stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33']
2024-07-15 06:11:44,150 DEBUG:dispatch pc=206, inst=LOAD_FAST(arg=4, lineno=1222)
2024-07-15 06:11:44,150 DEBUG:stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33', '$null$194.35', '$194load_global.34']
2024-07-15 06:11:44,150 DEBUG:dispatch pc=208, inst=LOAD_FAST(arg=0, lineno=1222)
2024-07-15 06:11:44,150 DEBUG:stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33', '$null$194.35', '$194load_global.34', '$post_avg206.36']
2024-07-15 06:11:44,150 DEBUG:dispatch pc=210, inst=LOAD_ATTR(arg=3, lineno=1222)
2024-07-15 06:11:44,150 DEBUG:stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33', '$null$194.35', '$194load_global.34', '$post_avg206.36', '$x208.37']
2024-07-15 06:11:44,150 DEBUG:dispatch pc=220, inst=LOAD_CONST(arg=1, lineno=1222)
2024-07-15 06:11:44,150 DEBUG:stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33', '$null$194.35', '$194load_global.34', '$post_avg206.36', '$210load_attr.38']
2024-07-15 06:11:44,150 DEBUG:dispatch pc=222, inst=BINARY_SUBSCR(arg=None, lineno=1222)
2024-07-15 06:11:44,150 DEBUG:stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33', '$null$194.35', '$194load_global.34', '$post_avg206.36', '$210load_attr.38', '$const220.39']
2024-07-15 06:11:44,150 DEBUG:dispatch pc=232, inst=PRECALL(arg=2, lineno=1222)
2024-07-15 06:11:44,150 DEBUG:stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33', '$null$194.35', '$194load_global.34', '$post_avg206.36', '$222binary_subscr.40']
2024-07-15 06:11:44,150 DEBUG:dispatch pc=236, inst=CALL(arg=2, lineno=1222)
2024-07-15 06:11:44,151 DEBUG:stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33', '$null$194.35', '$194load_global.34', '$post_avg206.36', '$222binary_subscr.40']
2024-07-15 06:11:44,151 DEBUG:dispatch pc=246, inst=BUILD_SLICE(arg=2, lineno=1222)
2024-07-15 06:11:44,151 DEBUG:stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33', '$236call.41']
2024-07-15 06:11:44,151 DEBUG:dispatch pc=248, inst=BINARY_SUBSCR(arg=None, lineno=1222)
2024-07-15 06:11:44,151 DEBUG:stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$246build_slice.43']
2024-07-15 06:11:44,151 DEBUG:dispatch pc=258, inst=PRECALL(arg=1, lineno=1222)
2024-07-15 06:11:44,151 DEBUG:stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$248binary_subscr.44']
2024-07-15 06:11:44,151 DEBUG:dispatch pc=262, inst=CALL(arg=1, lineno=1222)
2024-07-15 06:11:44,151 DEBUG:stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$248binary_subscr.44']
2024-07-15 06:11:44,151 DEBUG:dispatch pc=272, inst=LOAD_FAST(arg=5, lineno=1222)
2024-07-15 06:11:44,151 DEBUG:stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$262call.45']
2024-07-15 06:11:44,151 DEBUG:dispatch pc=274, inst=BINARY_OP(arg=0, lineno=1222)
2024-07-15 06:11:44,151 DEBUG:stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$262call.45', '$delta272.46']
2024-07-15 06:11:44,151 DEBUG:dispatch pc=278, inst=COMPARE_OP(arg=5, lineno=1222)
2024-07-15 06:11:44,151 DEBUG:stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$binop_add274.47']
2024-07-15 06:11:44,151 DEBUG:dispatch pc=284, inst=BINARY_OP(arg=14, lineno=1222)
2024-07-15 06:11:44,151 DEBUG:stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$278compare_op.48']
2024-07-15 06:11:44,151 DEBUG:dispatch pc=288, inst=SWAP(arg=3, lineno=1222)
2024-07-15 06:11:44,151 DEBUG:stack ['$peaks136.23', '$const138.24', '$binop_iand284.49']
2024-07-15 06:11:44,151 DEBUG:dispatch pc=290, inst=SWAP(arg=2, lineno=1222)
2024-07-15 06:11:44,151 DEBUG:stack ['$binop_iand284.49', '$const138.24', '$peaks136.23']
2024-07-15 06:11:44,151 DEBUG:dispatch pc=292, inst=STORE_SUBSCR(arg=None, lineno=1222)
2024-07-15 06:11:44,151 DEBUG:stack ['$binop_iand284.49', '$peaks136.23', '$const138.24']
2024-07-15 06:11:44,151 DEBUG:dispatch pc=296, inst=LOAD_FAST(arg=7, lineno=1224)
2024-07-15 06:11:44,151 DEBUG:stack []
2024-07-15 06:11:44,151 DEBUG:dispatch pc=298, inst=LOAD_CONST(arg=1, lineno=1224)
2024-07-15 06:11:44,151 DEBUG:stack ['$peaks296.50']
2024-07-15 06:11:44,151 DEBUG:dispatch pc=300, inst=BINARY_SUBSCR(arg=None, lineno=1224)
2024-07-15 06:11:44,152 DEBUG:stack ['$peaks296.50', '$const298.51']
2024-07-15 06:11:44,152 DEBUG:dispatch pc=310, inst=POP_JUMP_FORWARD_IF_FALSE(arg=6, lineno=1224)
2024-07-15 06:11:44,152 DEBUG:stack ['$300binary_subscr.52']
2024-07-15 06:11:44,152 DEBUG:end state. edges=[Edge(pc=312, stack=(), blockstack=(), npush=0), Edge(pc=324, stack=(), blockstack=(), npush=0)]
2024-07-15 06:11:44,152 DEBUG:pending: deque([State(pc_initial=312 nstack_initial=0), State(pc_initial=324 nstack_initial=0)])
2024-07-15 06:11:44,152 DEBUG:stack: []
2024-07-15 06:11:44,152 DEBUG:state.pc_initial: State(pc_initial=312 nstack_initial=0)
2024-07-15 06:11:44,152 DEBUG:dispatch pc=312, inst=LOAD_FAST(arg=6, lineno=1225)
2024-07-15 06:11:44,152 DEBUG:stack []
2024-07-15 06:11:44,152 DEBUG:dispatch pc=314, inst=LOAD_CONST(arg=3, lineno=1225)
2024-07-15 06:11:44,152 DEBUG:stack ['$wait312.0']
2024-07-15 06:11:44,152 DEBUG:dispatch pc=316, inst=BINARY_OP(arg=0, lineno=1225)
2024-07-15 06:11:44,152 DEBUG:stack ['$wait312.0', '$const314.1']
2024-07-15 06:11:44,152 DEBUG:dispatch pc=320, inst=STORE_FAST(arg=8, lineno=1225)
2024-07-15 06:11:44,152 DEBUG:stack ['$binop_add316.2']
2024-07-15 06:11:44,152 DEBUG:dispatch pc=322, inst=JUMP_FORWARD(arg=2, lineno=1225)
2024-07-15 06:11:44,152 DEBUG:stack []
2024-07-15 06:11:44,152 DEBUG:end state. edges=[Edge(pc=328, stack=(), blockstack=(), npush=0)]
2024-07-15 06:11:44,152 DEBUG:pending: deque([State(pc_initial=324 nstack_initial=0), State(pc_initial=328 nstack_initial=0)])
2024-07-15 06:11:44,152 DEBUG:stack: []
2024-07-15 06:11:44,152 DEBUG:state.pc_initial: State(pc_initial=324 nstack_initial=0)
2024-07-15 06:11:44,152 DEBUG:dispatch pc=324, inst=LOAD_CONST(arg=3, lineno=1227)
2024-07-15 06:11:44,152 DEBUG:stack []
2024-07-15 06:11:44,152 DEBUG:dispatch pc=326, inst=STORE_FAST(arg=8, lineno=1227)
2024-07-15 06:11:44,152 DEBUG:stack ['$const324.0']
2024-07-15 06:11:44,152 DEBUG:end state. edges=[Edge(pc=328, stack=(), blockstack=(), npush=0)]
2024-07-15 06:11:44,153 DEBUG:pending: deque([State(pc_initial=328 nstack_initial=0), State(pc_initial=328 nstack_initial=0)])
2024-07-15 06:11:44,153 DEBUG:stack: []
2024-07-15 06:11:44,153 DEBUG:state.pc_initial: State(pc_initial=328 nstack_initial=0)
2024-07-15 06:11:44,153 DEBUG:dispatch pc=328, inst=LOAD_FAST(arg=8, lineno=1229)
2024-07-15 06:11:44,153 DEBUG:stack []
2024-07-15 06:11:44,153 DEBUG:dispatch pc=330, inst=LOAD_FAST(arg=0, lineno=1229)
2024-07-15 06:11:44,153 DEBUG:stack ['$n328.0']
2024-07-15 06:11:44,153 DEBUG:dispatch pc=332, inst=LOAD_ATTR(arg=3, lineno=1229)
2024-07-15 06:11:44,153 DEBUG:stack ['$n328.0', '$x330.1']
2024-07-15 06:11:44,153 DEBUG:dispatch pc=342, inst=LOAD_CONST(arg=1, lineno=1229)
2024-07-15 06:11:44,153 DEBUG:stack ['$n328.0', '$332load_attr.2']
2024-07-15 06:11:44,153 DEBUG:dispatch pc=344, inst=BINARY_SUBSCR(arg=None, lineno=1229)
2024-07-15 06:11:44,153 DEBUG:stack ['$n328.0', '$332load_attr.2', '$const342.3']
2024-07-15 06:11:44,153 DEBUG:dispatch pc=354, inst=COMPARE_OP(arg=0, lineno=1229)
2024-07-15 06:11:44,153 DEBUG:stack ['$n328.0', '$344binary_subscr.4']
2024-07-15 06:11:44,153 DEBUG:dispatch pc=360, inst=POP_JUMP_FORWARD_IF_FALSE(arg=245, lineno=1229)
2024-07-15 06:11:44,153 DEBUG:stack ['$354compare_op.5']
2024-07-15 06:11:44,153 DEBUG:end state. edges=[Edge(pc=362, stack=(), blockstack=(), npush=0), Edge(pc=852, stack=(), blockstack=(), npush=0)]
2024-07-15 06:11:44,153 DEBUG:pending: deque([State(pc_initial=328 nstack_initial=0), State(pc_initial=362 nstack_initial=0), State(pc_initial=852 nstack_initial=0)])
2024-07-15 06:11:44,153 DEBUG:pending: deque([State(pc_initial=362 nstack_initial=0), State(pc_initial=852 nstack_initial=0)])
2024-07-15 06:11:44,153 DEBUG:stack: []
2024-07-15 06:11:44,153 DEBUG:state.pc_initial: State(pc_initial=362 nstack_initial=0)
2024-07-15 06:11:44,153 DEBUG:dispatch pc=362, inst=LOAD_GLOBAL(arg=1, lineno=1230)
2024-07-15 06:11:44,153 DEBUG:stack []
2024-07-15 06:11:44,153 DEBUG:dispatch pc=374, inst=LOAD_ATTR(arg=1, lineno=1230)
2024-07-15 06:11:44,153 DEBUG:stack ['$null$362.1', '$362load_global.0']
2024-07-15 06:11:44,154 DEBUG:dispatch pc=384, inst=LOAD_FAST(arg=0, lineno=1230)
2024-07-15 06:11:44,154 DEBUG:stack ['$null$362.1', '$374load_attr.2']
2024-07-15 06:11:44,154 DEBUG:dispatch pc=386, inst=LOAD_GLOBAL(arg=3, lineno=1230)
2024-07-15 06:11:44,154 DEBUG:stack ['$null$362.1', '$374load_attr.2', '$x384.3']
2024-07-15 06:11:44,154 DEBUG:dispatch pc=398, inst=LOAD_CONST(arg=1, lineno=1230)
2024-07-15 06:11:44,154 DEBUG:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$null$386.5', '$386load_global.4']
2024-07-15 06:11:44,154 DEBUG:dispatch pc=400, inst=LOAD_FAST(arg=8, lineno=1230)
2024-07-15 06:11:44,154 DEBUG:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$null$386.5', '$386load_global.4', '$const398.6']
2024-07-15 06:11:44,154 DEBUG:dispatch pc=402, inst=LOAD_FAST(arg=1, lineno=1230)
2024-07-15 06:11:44,154 DEBUG:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$null$386.5', '$386load_global.4', '$const398.6', '$n400.7']
2024-07-15 06:11:44,154 DEBUG:dispatch pc=404, inst=BINARY_OP(arg=10, lineno=1230)
2024-07-15 06:11:44,154 DEBUG:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$null$386.5', '$386load_global.4', '$const398.6', '$n400.7', '$pre_max402.8']
2024-07-15 06:11:44,154 DEBUG:dispatch pc=408, inst=PRECALL(arg=2, lineno=1230)
2024-07-15 06:11:44,154 DEBUG:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$null$386.5', '$386load_global.4', '$const398.6', '$binop_sub404.9']
2024-07-15 06:11:44,154 DEBUG:dispatch pc=412, inst=CALL(arg=2, lineno=1230)
2024-07-15 06:11:44,154 DEBUG:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$null$386.5', '$386load_global.4', '$const398.6', '$binop_sub404.9']
2024-07-15 06:11:44,154 DEBUG:dispatch pc=422, inst=LOAD_GLOBAL(arg=5, lineno=1230)
2024-07-15 06:11:44,154 DEBUG:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10']
2024-07-15 06:11:44,154 DEBUG:dispatch pc=434, inst=LOAD_FAST(arg=8, lineno=1230)
2024-07-15 06:11:44,154 DEBUG:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11']
2024-07-15 06:11:44,154 DEBUG:dispatch pc=436, inst=LOAD_FAST(arg=2, lineno=1230)
2024-07-15 06:11:44,154 DEBUG:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$n434.13']
2024-07-15 06:11:44,154 DEBUG:dispatch pc=438, inst=BINARY_OP(arg=0, lineno=1230)
2024-07-15 06:11:44,154 DEBUG:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$n434.13', '$post_max436.14']
2024-07-15 06:11:44,154 DEBUG:dispatch pc=442, inst=LOAD_FAST(arg=0, lineno=1230)
2024-07-15 06:11:44,154 DEBUG:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$binop_add438.15']
2024-07-15 06:11:44,154 DEBUG:dispatch pc=444, inst=LOAD_ATTR(arg=3, lineno=1230)
2024-07-15 06:11:44,154 DEBUG:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$binop_add438.15', '$x442.16']
2024-07-15 06:11:44,154 DEBUG:dispatch pc=454, inst=LOAD_CONST(arg=1, lineno=1230)
2024-07-15 06:11:44,154 DEBUG:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$binop_add438.15', '$444load_attr.17']
2024-07-15 06:11:44,154 DEBUG:dispatch pc=456, inst=BINARY_SUBSCR(arg=None, lineno=1230)
2024-07-15 06:11:44,154 DEBUG:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$binop_add438.15', '$444load_attr.17', '$const454.18']
2024-07-15 06:11:44,154 DEBUG:dispatch pc=466, inst=PRECALL(arg=2, lineno=1230)
2024-07-15 06:11:44,155 DEBUG:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$binop_add438.15', '$456binary_subscr.19']
2024-07-15 06:11:44,155 DEBUG:dispatch pc=470, inst=CALL(arg=2, lineno=1230)
2024-07-15 06:11:44,155 DEBUG:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$binop_add438.15', '$456binary_subscr.19']
2024-07-15 06:11:44,155 DEBUG:dispatch pc=480, inst=BUILD_SLICE(arg=2, lineno=1230)
2024-07-15 06:11:44,155 DEBUG:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$470call.20']
2024-07-15 06:11:44,155 DEBUG:dispatch pc=482, inst=BINARY_SUBSCR(arg=None, lineno=1230)
2024-07-15 06:11:44,155 DEBUG:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$480build_slice.22']
2024-07-15 06:11:44,155 DEBUG:dispatch pc=492, inst=PRECALL(arg=1, lineno=1230)
2024-07-15 06:11:44,155 DEBUG:stack ['$null$362.1', '$374load_attr.2', '$482binary_subscr.23']
2024-07-15 06:11:44,155 DEBUG:dispatch pc=496, inst=CALL(arg=1, lineno=1230)
2024-07-15 06:11:44,155 DEBUG:stack ['$null$362.1', '$374load_attr.2', '$482binary_subscr.23']
2024-07-15 06:11:44,155 DEBUG:dispatch pc=506, inst=STORE_FAST(arg=9, lineno=1230)
2024-07-15 06:11:44,155 DEBUG:stack ['$496call.24']
2024-07-15 06:11:44,155 DEBUG:dispatch pc=508, inst=LOAD_FAST(arg=0, lineno=1233)
2024-07-15 06:11:44,155 DEBUG:stack []
2024-07-15 06:11:44,155 DEBUG:dispatch pc=510, inst=LOAD_FAST(arg=8, lineno=1233)
2024-07-15 06:11:44,155 DEBUG:stack ['$x508.25']
2024-07-15 06:11:44,155 DEBUG:dispatch pc=512, inst=BINARY_SUBSCR(arg=None, lineno=1233)
2024-07-15 06:11:44,155 DEBUG:stack ['$x508.25', '$n510.26']
2024-07-15 06:11:44,155 DEBUG:dispatch pc=522, inst=LOAD_FAST(arg=9, lineno=1233)
2024-07-15 06:11:44,155 DEBUG:stack ['$512binary_subscr.27']
2024-07-15 06:11:44,155 DEBUG:dispatch pc=524, inst=COMPARE_OP(arg=2, lineno=1233)
2024-07-15 06:11:44,155 DEBUG:stack ['$512binary_subscr.27', '$maxn522.28']
2024-07-15 06:11:44,155 DEBUG:dispatch pc=530, inst=LOAD_FAST(arg=7, lineno=1233)
2024-07-15 06:11:44,155 DEBUG:stack ['$524compare_op.29']
2024-07-15 06:11:44,155 DEBUG:dispatch pc=532, inst=LOAD_FAST(arg=8, lineno=1233)
2024-07-15 06:11:44,155 DEBUG:stack ['$524compare_op.29', '$peaks530.30']
2024-07-15 06:11:44,155 DEBUG:dispatch pc=534, inst=STORE_SUBSCR(arg=None, lineno=1233)
2024-07-15 06:11:44,156 DEBUG:stack ['$524compare_op.29', '$peaks530.30', '$n532.31']
2024-07-15 06:11:44,156 DEBUG:dispatch pc=538, inst=LOAD_FAST(arg=7, lineno=1235)
2024-07-15 06:11:44,156 DEBUG:stack []
2024-07-15 06:11:44,156 DEBUG:dispatch pc=540, inst=LOAD_FAST(arg=8, lineno=1235)
2024-07-15 06:11:44,156 DEBUG:stack ['$peaks538.32']
2024-07-15 06:11:44,156 DEBUG:dispatch pc=542, inst=BINARY_SUBSCR(arg=None, lineno=1235)
2024-07-15 06:11:44,156 DEBUG:stack ['$peaks538.32', '$n540.33']
2024-07-15 06:11:44,156 DEBUG:dispatch pc=552, inst=POP_JUMP_FORWARD_IF_TRUE(arg=6, lineno=1235)
2024-07-15 06:11:44,156 DEBUG:stack ['$542binary_subscr.34']
2024-07-15 06:11:44,156 DEBUG:end state. edges=[Edge(pc=554, stack=(), blockstack=(), npush=0), Edge(pc=566, stack=(), blockstack=(), npush=0)]
2024-07-15 06:11:44,156 DEBUG:pending: deque([State(pc_initial=852 nstack_initial=0), State(pc_initial=554 nstack_initial=0), State(pc_initial=566 nstack_initial=0)])
2024-07-15 06:11:44,156 DEBUG:stack: []
2024-07-15 06:11:44,156 DEBUG:state.pc_initial: State(pc_initial=852 nstack_initial=0)
2024-07-15 06:11:44,156 DEBUG:dispatch pc=852, inst=LOAD_CONST(arg=2, lineno=1229)
2024-07-15 06:11:44,156 DEBUG:stack []
2024-07-15 06:11:44,156 DEBUG:dispatch pc=854, inst=RETURN_VALUE(arg=None, lineno=1229)
2024-07-15 06:11:44,156 DEBUG:stack ['$const852.0']
2024-07-15 06:11:44,156 DEBUG:end state. edges=[]
2024-07-15 06:11:44,156 DEBUG:pending: deque([State(pc_initial=554 nstack_initial=0), State(pc_initial=566 nstack_initial=0)])
2024-07-15 06:11:44,156 DEBUG:stack: []
2024-07-15 06:11:44,156 DEBUG:state.pc_initial: State(pc_initial=554 nstack_initial=0)
2024-07-15 06:11:44,156 DEBUG:dispatch pc=554, inst=LOAD_FAST(arg=8, lineno=1236)
2024-07-15 06:11:44,156 DEBUG:stack []
2024-07-15 06:11:44,156 DEBUG:dispatch pc=556, inst=LOAD_CONST(arg=3, lineno=1236)
2024-07-15 06:11:44,156 DEBUG:stack ['$n554.0']
2024-07-15 06:11:44,156 DEBUG:dispatch pc=558, inst=BINARY_OP(arg=13, lineno=1236)
2024-07-15 06:11:44,156 DEBUG:stack ['$n554.0', '$const556.1']
2024-07-15 06:11:44,156 DEBUG:dispatch pc=562, inst=STORE_FAST(arg=8, lineno=1236)
2024-07-15 06:11:44,156 DEBUG:stack ['$binop_iadd558.2']
2024-07-15 06:11:44,156 DEBUG:dispatch pc=564, inst=JUMP_BACKWARD(arg=119, lineno=1237)
2024-07-15 06:11:44,156 DEBUG:stack []
2024-07-15 06:11:44,156 DEBUG:end state. edges=[Edge(pc=328, stack=(), blockstack=(), npush=0)]
2024-07-15 06:11:44,156 DEBUG:pending: deque([State(pc_initial=566 nstack_initial=0), State(pc_initial=328 nstack_initial=0)])
2024-07-15 06:11:44,156 DEBUG:stack: []
2024-07-15 06:11:44,156 DEBUG:state.pc_initial: State(pc_initial=566 nstack_initial=0)
2024-07-15 06:11:44,156 DEBUG:dispatch pc=566, inst=LOAD_GLOBAL(arg=1, lineno=1239)
2024-07-15 06:11:44,156 DEBUG:stack []
2024-07-15 06:11:44,157 DEBUG:dispatch pc=578, inst=LOAD_ATTR(arg=4, lineno=1239)
2024-07-15 06:11:44,157 DEBUG:stack ['$null$566.1', '$566load_global.0']
2024-07-15 06:11:44,157 DEBUG:dispatch pc=588, inst=LOAD_FAST(arg=0, lineno=1239)
2024-07-15 06:11:44,157 DEBUG:stack ['$null$566.1', '$578load_attr.2']
2024-07-15 06:11:44,157 DEBUG:dispatch pc=590, inst=LOAD_GLOBAL(arg=3, lineno=1239)
2024-07-15 06:11:44,157 DEBUG:stack ['$null$566.1', '$578load_attr.2', '$x588.3']
2024-07-15 06:11:44,157 DEBUG:dispatch pc=602, inst=LOAD_CONST(arg=1, lineno=1239)
2024-07-15 06:11:44,157 DEBUG:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$null$590.5', '$590load_global.4']
2024-07-15 06:11:44,157 DEBUG:dispatch pc=604, inst=LOAD_FAST(arg=8, lineno=1239)
2024-07-15 06:11:44,157 DEBUG:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$null$590.5', '$590load_global.4', '$const602.6']
2024-07-15 06:11:44,157 DEBUG:dispatch pc=606, inst=LOAD_FAST(arg=3, lineno=1239)
2024-07-15 06:11:44,157 DEBUG:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$null$590.5', '$590load_global.4', '$const602.6', '$n604.7']
2024-07-15 06:11:44,157 DEBUG:dispatch pc=608, inst=BINARY_OP(arg=10, lineno=1239)
2024-07-15 06:11:44,157 DEBUG:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$null$590.5', '$590load_global.4', '$const602.6', '$n604.7', '$pre_avg606.8']
2024-07-15 06:11:44,157 DEBUG:dispatch pc=612, inst=PRECALL(arg=2, lineno=1239)
2024-07-15 06:11:44,157 DEBUG:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$null$590.5', '$590load_global.4', '$const602.6', '$binop_sub608.9']
2024-07-15 06:11:44,157 DEBUG:dispatch pc=616, inst=CALL(arg=2, lineno=1239)
2024-07-15 06:11:44,157 DEBUG:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$null$590.5', '$590load_global.4', '$const602.6', '$binop_sub608.9']
2024-07-15 06:11:44,157 DEBUG:dispatch pc=626, inst=LOAD_GLOBAL(arg=5, lineno=1239)
2024-07-15 06:11:44,157 DEBUG:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10']
2024-07-15 06:11:44,157 DEBUG:dispatch pc=638, inst=LOAD_FAST(arg=8, lineno=1239)
2024-07-15 06:11:44,157 DEBUG:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11']
2024-07-15 06:11:44,157 DEBUG:dispatch pc=640, inst=LOAD_FAST(arg=4, lineno=1239)
2024-07-15 06:11:44,157 DEBUG:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$n638.13']
2024-07-15 06:11:44,157 DEBUG:dispatch pc=642, inst=BINARY_OP(arg=0, lineno=1239)
2024-07-15 06:11:44,157 DEBUG:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$n638.13', '$post_avg640.14']
2024-07-15 06:11:44,157 DEBUG:dispatch pc=646, inst=LOAD_FAST(arg=0, lineno=1239)
2024-07-15 06:11:44,157 DEBUG:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$binop_add642.15']
2024-07-15 06:11:44,157 DEBUG:dispatch pc=648, inst=LOAD_ATTR(arg=3, lineno=1239)
2024-07-15 06:11:44,157 DEBUG:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$binop_add642.15', '$x646.16']
2024-07-15 06:11:44,158 DEBUG:dispatch pc=658, inst=LOAD_CONST(arg=1, lineno=1239)
2024-07-15 06:11:44,158 DEBUG:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$binop_add642.15', '$648load_attr.17']
2024-07-15 06:11:44,158 DEBUG:dispatch pc=660, inst=BINARY_SUBSCR(arg=None, lineno=1239)
2024-07-15 06:11:44,158 DEBUG:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$binop_add642.15', '$648load_attr.17', '$const658.18']
2024-07-15 06:11:44,158 DEBUG:dispatch pc=670, inst=PRECALL(arg=2, lineno=1239)
2024-07-15 06:11:44,158 DEBUG:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$binop_add642.15', '$660binary_subscr.19']
2024-07-15 06:11:44,158 DEBUG:dispatch pc=674, inst=CALL(arg=2, lineno=1239)
2024-07-15 06:11:44,158 DEBUG:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$binop_add642.15', '$660binary_subscr.19']
2024-07-15 06:11:44,158 DEBUG:dispatch pc=684, inst=BUILD_SLICE(arg=2, lineno=1239)
2024-07-15 06:11:44,158 DEBUG:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$674call.20']
2024-07-15 06:11:44,158 DEBUG:dispatch pc=686, inst=BINARY_SUBSCR(arg=None, lineno=1239)
2024-07-15 06:11:44,158 DEBUG:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$684build_slice.22']
2024-07-15 06:11:44,158 DEBUG:dispatch pc=696, inst=PRECALL(arg=1, lineno=1239)
2024-07-15 06:11:44,158 DEBUG:stack ['$null$566.1', '$578load_attr.2', '$686binary_subscr.23']
2024-07-15 06:11:44,158 DEBUG:dispatch pc=700, inst=CALL(arg=1, lineno=1239)
2024-07-15 06:11:44,158 DEBUG:stack ['$null$566.1', '$578load_attr.2', '$686binary_subscr.23']
2024-07-15 06:11:44,158 DEBUG:dispatch pc=710, inst=STORE_FAST(arg=10, lineno=1239)
2024-07-15 06:11:44,158 DEBUG:stack ['$700call.24']
2024-07-15 06:11:44,158 DEBUG:dispatch pc=712, inst=LOAD_FAST(arg=7, lineno=1240)
2024-07-15 06:11:44,158 DEBUG:stack []
2024-07-15 06:11:44,158 DEBUG:dispatch pc=714, inst=LOAD_FAST(arg=8, lineno=1240)
2024-07-15 06:11:44,158 DEBUG:stack ['$peaks712.25']
2024-07-15 06:11:44,158 DEBUG:dispatch pc=716, inst=COPY(arg=2, lineno=1240)
2024-07-15 06:11:44,158 DEBUG:stack ['$peaks712.25', '$n714.26']
2024-07-15 06:11:44,158 DEBUG:dispatch pc=718, inst=COPY(arg=2, lineno=1240)
2024-07-15 06:11:44,158 DEBUG:stack ['$peaks712.25', '$n714.26', '$peaks712.25']
2024-07-15 06:11:44,158 DEBUG:dispatch pc=720, inst=BINARY_SUBSCR(arg=None, lineno=1240)
2024-07-15 06:11:44,158 DEBUG:stack ['$peaks712.25', '$n714.26', '$peaks712.25', '$n714.26']
2024-07-15 06:11:44,159 DEBUG:dispatch pc=730, inst=LOAD_FAST(arg=0, lineno=1240)
2024-07-15 06:11:44,159 DEBUG:stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27']
2024-07-15 06:11:44,159 DEBUG:dispatch pc=732, inst=LOAD_FAST(arg=8, lineno=1240)
2024-07-15 06:11:44,159 DEBUG:stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27', '$x730.28']
2024-07-15 06:11:44,159 DEBUG:dispatch pc=734, inst=BINARY_SUBSCR(arg=None, lineno=1240)
2024-07-15 06:11:44,159 DEBUG:stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27', '$x730.28', '$n732.29']
2024-07-15 06:11:44,159 DEBUG:dispatch pc=744, inst=LOAD_FAST(arg=10, lineno=1240)
2024-07-15 06:11:44,159 DEBUG:stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27', '$734binary_subscr.30']
2024-07-15 06:11:44,159 DEBUG:dispatch pc=746, inst=LOAD_FAST(arg=5, lineno=1240)
2024-07-15 06:11:44,159 DEBUG:stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27', '$734binary_subscr.30', '$avgn744.31']
2024-07-15 06:11:44,159 DEBUG:dispatch pc=748, inst=BINARY_OP(arg=0, lineno=1240)
2024-07-15 06:11:44,159 DEBUG:stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27', '$734binary_subscr.30', '$avgn744.31', '$delta746.32']
2024-07-15 06:11:44,159 DEBUG:dispatch pc=752, inst=COMPARE_OP(arg=5, lineno=1240)
2024-07-15 06:11:44,159 DEBUG:stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27', '$734binary_subscr.30', '$binop_add748.33']
2024-07-15 06:11:44,159 DEBUG:dispatch pc=758, inst=BINARY_OP(arg=14, lineno=1240)
2024-07-15 06:11:44,159 DEBUG:stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27', '$752compare_op.34']
2024-07-15 06:11:44,159 DEBUG:dispatch pc=762, inst=SWAP(arg=3, lineno=1240)
2024-07-15 06:11:44,159 DEBUG:stack ['$peaks712.25', '$n714.26', '$binop_iand758.35']
2024-07-15 06:11:44,159 DEBUG:dispatch pc=764, inst=SWAP(arg=2, lineno=1240)
2024-07-15 06:11:44,159 DEBUG:stack ['$binop_iand758.35', '$n714.26', '$peaks712.25']
2024-07-15 06:11:44,159 DEBUG:dispatch pc=766, inst=STORE_SUBSCR(arg=None, lineno=1240)
2024-07-15 06:11:44,159 DEBUG:stack ['$binop_iand758.35', '$peaks712.25', '$n714.26']
2024-07-15 06:11:44,159 DEBUG:dispatch pc=770, inst=LOAD_FAST(arg=7, lineno=1242)
2024-07-15 06:11:44,159 DEBUG:stack []
2024-07-15 06:11:44,159 DEBUG:dispatch pc=772, inst=LOAD_FAST(arg=8, lineno=1242)
2024-07-15 06:11:44,159 DEBUG:stack ['$peaks770.36']
2024-07-15 06:11:44,159 DEBUG:dispatch pc=774, inst=BINARY_SUBSCR(arg=None, lineno=1242)
2024-07-15 06:11:44,159 DEBUG:stack ['$peaks770.36', '$n772.37']
2024-07-15 06:11:44,159 DEBUG:dispatch pc=784, inst=POP_JUMP_FORWARD_IF_TRUE(arg=6, lineno=1242)
2024-07-15 06:11:44,159 DEBUG:stack ['$774binary_subscr.38']
2024-07-15 06:11:44,159 DEBUG:end state. edges=[Edge(pc=786, stack=(), blockstack=(), npush=0), Edge(pc=798, stack=(), blockstack=(), npush=0)]
2024-07-15 06:11:44,159 DEBUG:pending: deque([State(pc_initial=328 nstack_initial=0), State(pc_initial=786 nstack_initial=0), State(pc_initial=798 nstack_initial=0)])
2024-07-15 06:11:44,159 DEBUG:pending: deque([State(pc_initial=786 nstack_initial=0), State(pc_initial=798 nstack_initial=0)])
2024-07-15 06:11:44,160 DEBUG:stack: []
2024-07-15 06:11:44,160 DEBUG:state.pc_initial: State(pc_initial=786 nstack_initial=0)
2024-07-15 06:11:44,160 DEBUG:dispatch pc=786, inst=LOAD_FAST(arg=8, lineno=1243)
2024-07-15 06:11:44,160 DEBUG:stack []
2024-07-15 06:11:44,160 DEBUG:dispatch pc=788, inst=LOAD_CONST(arg=3, lineno=1243)
2024-07-15 06:11:44,160 DEBUG:stack ['$n786.0']
2024-07-15 06:11:44,160 DEBUG:dispatch pc=790, inst=BINARY_OP(arg=13, lineno=1243)
2024-07-15 06:11:44,160 DEBUG:stack ['$n786.0', '$const788.1']
2024-07-15 06:11:44,160 DEBUG:dispatch pc=794, inst=STORE_FAST(arg=8, lineno=1243)
2024-07-15 06:11:44,160 DEBUG:stack ['$binop_iadd790.2']
2024-07-15 06:11:44,160 DEBUG:dispatch pc=796, inst=JUMP_BACKWARD(arg=235, lineno=1244)
2024-07-15 06:11:44,160 DEBUG:stack []
2024-07-15 06:11:44,160 DEBUG:end state. edges=[Edge(pc=328, stack=(), blockstack=(), npush=0)]
2024-07-15 06:11:44,160 DEBUG:pending: deque([State(pc_initial=798 nstack_initial=0), State(pc_initial=328 nstack_initial=0)])
2024-07-15 06:11:44,160 DEBUG:stack: []
2024-07-15 06:11:44,160 DEBUG:state.pc_initial: State(pc_initial=798 nstack_initial=0)
2024-07-15 06:11:44,160 DEBUG:dispatch pc=798, inst=LOAD_FAST(arg=8, lineno=1247)
2024-07-15 06:11:44,160 DEBUG:stack []
2024-07-15 06:11:44,160 DEBUG:dispatch pc=800, inst=LOAD_FAST(arg=6, lineno=1247)
2024-07-15 06:11:44,160 DEBUG:stack ['$n798.0']
2024-07-15 06:11:44,160 DEBUG:dispatch pc=802, inst=LOAD_CONST(arg=3, lineno=1247)
2024-07-15 06:11:44,160 DEBUG:stack ['$n798.0', '$wait800.1']
2024-07-15 06:11:44,160 DEBUG:dispatch pc=804, inst=BINARY_OP(arg=0, lineno=1247)
2024-07-15 06:11:44,160 DEBUG:stack ['$n798.0', '$wait800.1', '$const802.2']
2024-07-15 06:11:44,160 DEBUG:dispatch pc=808, inst=BINARY_OP(arg=13, lineno=1247)
2024-07-15 06:11:44,160 DEBUG:stack ['$n798.0', '$binop_add804.3']
2024-07-15 06:11:44,160 DEBUG:dispatch pc=812, inst=STORE_FAST(arg=8, lineno=1247)
2024-07-15 06:11:44,160 DEBUG:stack ['$binop_iadd808.4']
2024-07-15 06:11:44,160 DEBUG:dispatch pc=814, inst=LOAD_FAST(arg=8, lineno=1229)
2024-07-15 06:11:44,160 DEBUG:stack []
2024-07-15 06:11:44,160 DEBUG:dispatch pc=816, inst=LOAD_FAST(arg=0, lineno=1229)
2024-07-15 06:11:44,160 DEBUG:stack ['$n814.5']
2024-07-15 06:11:44,160 DEBUG:dispatch pc=818, inst=LOAD_ATTR(arg=3, lineno=1229)
2024-07-15 06:11:44,160 DEBUG:stack ['$n814.5', '$x816.6']
2024-07-15 06:11:44,161 DEBUG:dispatch pc=828, inst=LOAD_CONST(arg=1, lineno=1229)
2024-07-15 06:11:44,161 DEBUG:stack ['$n814.5', '$818load_attr.7']
2024-07-15 06:11:44,161 DEBUG:dispatch pc=830, inst=BINARY_SUBSCR(arg=None, lineno=1229)
2024-07-15 06:11:44,161 DEBUG:stack ['$n814.5', '$818load_attr.7', '$const828.8']
2024-07-15 06:11:44,161 DEBUG:dispatch pc=840, inst=COMPARE_OP(arg=0, lineno=1229)
2024-07-15 06:11:44,161 DEBUG:stack ['$n814.5', '$830binary_subscr.9']
2024-07-15 06:11:44,161 DEBUG:dispatch pc=846, inst=POP_JUMP_BACKWARD_IF_TRUE(arg=243, lineno=1229)
2024-07-15 06:11:44,161 DEBUG:stack ['$840compare_op.10']
2024-07-15 06:11:44,161 DEBUG:end state. edges=[Edge(pc=848, stack=(), blockstack=(), npush=0), Edge(pc=362, stack=(), blockstack=(), npush=0)]
2024-07-15 06:11:44,161 DEBUG:pending: deque([State(pc_initial=328 nstack_initial=0), State(pc_initial=848 nstack_initial=0), State(pc_initial=362 nstack_initial=0)])
2024-07-15 06:11:44,161 DEBUG:pending: deque([State(pc_initial=848 nstack_initial=0), State(pc_initial=362 nstack_initial=0)])
2024-07-15 06:11:44,161 DEBUG:stack: []
2024-07-15 06:11:44,161 DEBUG:state.pc_initial: State(pc_initial=848 nstack_initial=0)
2024-07-15 06:11:44,161 DEBUG:dispatch pc=848, inst=LOAD_CONST(arg=2, lineno=1229)
2024-07-15 06:11:44,161 DEBUG:stack []
2024-07-15 06:11:44,161 DEBUG:dispatch pc=850, inst=RETURN_VALUE(arg=None, lineno=1229)
2024-07-15 06:11:44,161 DEBUG:stack ['$const848.0']
2024-07-15 06:11:44,161 DEBUG:end state. edges=[]
2024-07-15 06:11:44,161 DEBUG:pending: deque([State(pc_initial=362 nstack_initial=0)])
2024-07-15 06:11:44,161 DEBUG:-------------------------Prune PHIs-------------------------
2024-07-15 06:11:44,161 DEBUG:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=312 nstack_initial=0): set(),
             State(pc_initial=324 nstack_initial=0): set(),
             State(pc_initial=328 nstack_initial=0): set(),
             State(pc_initial=362 nstack_initial=0): set(),
             State(pc_initial=554 nstack_initial=0): set(),
             State(pc_initial=566 nstack_initial=0): set(),
             State(pc_initial=786 nstack_initial=0): set(),
             State(pc_initial=798 nstack_initial=0): set(),
             State(pc_initial=848 nstack_initial=0): set(),
             State(pc_initial=852 nstack_initial=0): set()})
2024-07-15 06:11:44,161 DEBUG:defmap: {}
2024-07-15 06:11:44,161 DEBUG:phismap: defaultdict(<class 'set'>, {})
2024-07-15 06:11:44,161 DEBUG:changing phismap: defaultdict(<class 'set'>, {})
2024-07-15 06:11:44,161 DEBUG:keep phismap: {}
2024-07-15 06:11:44,161 DEBUG:new_out: defaultdict(<class 'dict'>, {})
2024-07-15 06:11:44,161 DEBUG:----------------------DONE Prune PHIs-----------------------
2024-07-15 06:11:44,162 DEBUG:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1'}), (8, {'index': '$const6.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'idx': 0, 'res': '$18load_global.3'}), (20, {}), (22, {}), (24, {}), (26, {}), (28, {}), (30, {'item': '$18load_global.3', 'res': '$30load_attr.5'}), (32, {}), (34, {}), (36, {}), (38, {}), (40, {'res': '$x40.6'}), (42, {'res': '$const42.7'}), (44, {'idx': 2, 'res': '$44load_global.8'}), (46, {}), (48, {}), (50, {}), (52, {}), (54, {}), (56, {'res': '$post_max56.10'}), (58, {'res': '$x58.11'}), (60, {'item': '$x58.11', 'res': '$60load_attr.12'}), (62, {}), (64, {}), (66, {}), (68, {}), (70, {'res': '$const70.13'}), (72, {'index': '$const70.13', 'target': '$60load_attr.12', 'res': '$72binary_subscr.14'}), (74, {}), (76, {}), (78, {}), (80, {}), (82, {}), (84, {}), (86, {'func': '$44load_global.8', 'args': ['$post_max56.10', '$72binary_subscr.14'], 'kw_names': None, 'res': '$86call.15'}), (88, {}), (90, {}), (92, {}), (94, {}), (96, {'start': '$const42.7', 'stop': '$86call.15', 'step': None, 'res': '$96build_slice.17', 'slicevar': '$96build_slice.16'}), (98, {'index': '$96build_slice.17', 'target': '$x40.6', 'res': '$98binary_subscr.18'}), (100, {}), (102, {}), (104, {}), (106, {}), (108, {}), (110, {}), (112, {'func': '$30load_attr.5', 'args': ['$98binary_subscr.18'], 'kw_names': None, 'res': '$112call.19'}), (114, {}), (116, {}), (118, {}), (120, {}), (122, {'lhs': '$8binary_subscr.2', 'rhs': '$112call.19', 'res': '$122compare_op.20'}), (124, {}), (126, {}), (128, {'res': '$peaks128.21'}), (130, {'res': '$const130.22'}), (132, {'target': '$peaks128.21', 'index': '$const130.22', 'value': '$122compare_op.20'}), (134, {}), (136, {'res': '$peaks136.23'}), (138, {'res': '$const138.24'}), (144, {'index': '$const138.24', 'target': '$peaks136.23', 'res': '$144binary_subscr.25'}), (146, {}), (148, {}), (150, {}), (152, {}), (154, {'res': '$x154.26'}), (156, {'res': '$const156.27'}), (158, {'index': '$const156.27', 'target': '$x154.26', 'res': '$158binary_subscr.28'}), (160, {}), (162, {}), (164, {}), (166, {}), (168, {'idx': 0, 'res': '$168load_global.29'}), (170, {}), (172, {}), (174, {}), (176, {}), (178, {}), (180, {'item': '$168load_global.29', 'res': '$180load_attr.31'}), (182, {}), (184, {}), (186, {}), (188, {}), (190, {'res': '$x190.32'}), (192, {'res': '$const192.33'}), (194, {'idx': 2, 'res': '$194load_global.34'}), (196, {}), (198, {}), (200, {}), (202, {}), (204, {}), (206, {'res': '$post_avg206.36'}), (208, {'res': '$x208.37'}), (210, {'item': '$x208.37', 'res': '$210load_attr.38'}), (212, {}), (214, {}), (216, {}), (218, {}), (220, {'res': '$const220.39'}), (222, {'index': '$const220.39', 'target': '$210load_attr.38', 'res': '$222binary_subscr.40'}), (224, {}), (226, {}), (228, {}), (230, {}), (232, {}), (234, {}), (236, {'func': '$194load_global.34', 'args': ['$post_avg206.36', '$222binary_subscr.40'], 'kw_names': None, 'res': '$236call.41'}), (238, {}), (240, {}), (242, {}), (244, {}), (246, {'start': '$const192.33', 'stop': '$236call.41', 'step': None, 'res': '$246build_slice.43', 'slicevar': '$246build_slice.42'}), (248, {'index': '$246build_slice.43', 'target': '$x190.32', 'res': '$248binary_subscr.44'}), (250, {}), (252, {}), (254, {}), (256, {}), (258, {}), (260, {}), (262, {'func': '$180load_attr.31', 'args': ['$248binary_subscr.44'], 'kw_names': None, 'res': '$262call.45'}), (264, {}), (266, {}), (268, {}), (270, {}), (272, {'res': '$delta272.46'}), (274, {'op': '+', 'lhs': '$262call.45', 'rhs': '$delta272.46', 'res': '$binop_add274.47'}), (276, {}), (278, {'lhs': '$158binary_subscr.28', 'rhs': '$binop_add274.47', 'res': '$278compare_op.48'}), (280, {}), (282, {}), (284, {'op': '&=', 'lhs': '$144binary_subscr.25', 'rhs': '$278compare_op.48', 'res': '$binop_iand284.49'}), (286, {}), (292, {'target': '$peaks136.23', 'index': '$const138.24', 'value': '$binop_iand284.49'}), (294, {}), (296, {'res': '$peaks296.50'}), (298, {'res': '$const298.51'}), (300, {'index': '$const298.51', 'target': '$peaks296.50', 'res': '$300binary_subscr.52'}), (302, {}), (304, {}), (306, {}), (308, {}), (310, {'pred': '$300binary_subscr.52'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={312: (), 324: ()})
2024-07-15 06:11:44,162 DEBUG:block_infos State(pc_initial=312 nstack_initial=0):
AdaptBlockInfo(insts=((312, {'res': '$wait312.0'}), (314, {'res': '$const314.1'}), (316, {'op': '+', 'lhs': '$wait312.0', 'rhs': '$const314.1', 'res': '$binop_add316.2'}), (318, {}), (320, {'value': '$binop_add316.2'}), (322, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={328: ()})
2024-07-15 06:11:44,162 DEBUG:block_infos State(pc_initial=324 nstack_initial=0):
AdaptBlockInfo(insts=((324, {'res': '$const324.0'}), (326, {'value': '$const324.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={328: ()})
2024-07-15 06:11:44,162 DEBUG:block_infos State(pc_initial=328 nstack_initial=0):
AdaptBlockInfo(insts=((328, {'res': '$n328.0'}), (330, {'res': '$x330.1'}), (332, {'item': '$x330.1', 'res': '$332load_attr.2'}), (334, {}), (336, {}), (338, {}), (340, {}), (342, {'res': '$const342.3'}), (344, {'index': '$const342.3', 'target': '$332load_attr.2', 'res': '$344binary_subscr.4'}), (346, {}), (348, {}), (350, {}), (352, {}), (354, {'lhs': '$n328.0', 'rhs': '$344binary_subscr.4', 'res': '$354compare_op.5'}), (356, {}), (358, {}), (360, {'pred': '$354compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={362: (), 852: ()})
2024-07-15 06:11:44,162 DEBUG:block_infos State(pc_initial=362 nstack_initial=0):
AdaptBlockInfo(insts=((362, {'idx': 0, 'res': '$362load_global.0'}), (364, {}), (366, {}), (368, {}), (370, {}), (372, {}), (374, {'item': '$362load_global.0', 'res': '$374load_attr.2'}), (376, {}), (378, {}), (380, {}), (382, {}), (384, {'res': '$x384.3'}), (386, {'idx': 1, 'res': '$386load_global.4'}), (388, {}), (390, {}), (392, {}), (394, {}), (396, {}), (398, {'res': '$const398.6'}), (400, {'res': '$n400.7'}), (402, {'res': '$pre_max402.8'}), (404, {'op': '-', 'lhs': '$n400.7', 'rhs': '$pre_max402.8', 'res': '$binop_sub404.9'}), (406, {}), (408, {}), (410, {}), (412, {'func': '$386load_global.4', 'args': ['$const398.6', '$binop_sub404.9'], 'kw_names': None, 'res': '$412call.10'}), (414, {}), (416, {}), (418, {}), (420, {}), (422, {'idx': 2, 'res': '$422load_global.11'}), (424, {}), (426, {}), (428, {}), (430, {}), (432, {}), (434, {'res': '$n434.13'}), (436, {'res': '$post_max436.14'}), (438, {'op': '+', 'lhs': '$n434.13', 'rhs': '$post_max436.14', 'res': '$binop_add438.15'}), (440, {}), (442, {'res': '$x442.16'}), (444, {'item': '$x442.16', 'res': '$444load_attr.17'}), (446, {}), (448, {}), (450, {}), (452, {}), (454, {'res': '$const454.18'}), (456, {'index': '$const454.18', 'target': '$444load_attr.17', 'res': '$456binary_subscr.19'}), (458, {}), (460, {}), (462, {}), (464, {}), (466, {}), (468, {}), (470, {'func': '$422load_global.11', 'args': ['$binop_add438.15', '$456binary_subscr.19'], 'kw_names': None, 'res': '$470call.20'}), (472, {}), (474, {}), (476, {}), (478, {}), (480, {'start': '$412call.10', 'stop': '$470call.20', 'step': None, 'res': '$480build_slice.22', 'slicevar': '$480build_slice.21'}), (482, {'index': '$480build_slice.22', 'target': '$x384.3', 'res': '$482binary_subscr.23'}), (484, {}), (486, {}), (488, {}), (490, {}), (492, {}), (494, {}), (496, {'func': '$374load_attr.2', 'args': ['$482binary_subscr.23'], 'kw_names': None, 'res': '$496call.24'}), (498, {}), (500, {}), (502, {}), (504, {}), (506, {'value': '$496call.24'}), (508, {'res': '$x508.25'}), (510, {'res': '$n510.26'}), (512, {'index': '$n510.26', 'target': '$x508.25', 'res': '$512binary_subscr.27'}), (514, {}), (516, {}), (518, {}), (520, {}), (522, {'res': '$maxn522.28'}), (524, {'lhs': '$512binary_subscr.27', 'rhs': '$maxn522.28', 'res': '$524compare_op.29'}), (526, {}), (528, {}), (530, {'res': '$peaks530.30'}), (532, {'res': '$n532.31'}), (534, {'target': '$peaks530.30', 'index': '$n532.31', 'value': '$524compare_op.29'}), (536, {}), (538, {'res': '$peaks538.32'}), (540, {'res': '$n540.33'}), (542, {'index': '$n540.33', 'target': '$peaks538.32', 'res': '$542binary_subscr.34'}), (544, {}), (546, {}), (548, {}), (550, {}), (552, {'pred': '$542binary_subscr.34'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={554: (), 566: ()})
2024-07-15 06:11:44,162 DEBUG:block_infos State(pc_initial=554 nstack_initial=0):
AdaptBlockInfo(insts=((554, {'res': '$n554.0'}), (556, {'res': '$const556.1'}), (558, {'op': '+=', 'lhs': '$n554.0', 'rhs': '$const556.1', 'res': '$binop_iadd558.2'}), (560, {}), (562, {'value': '$binop_iadd558.2'}), (564, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={328: ()})
2024-07-15 06:11:44,162 DEBUG:block_infos State(pc_initial=566 nstack_initial=0):
AdaptBlockInfo(insts=((566, {'idx': 0, 'res': '$566load_global.0'}), (568, {}), (570, {}), (572, {}), (574, {}), (576, {}), (578, {'item': '$566load_global.0', 'res': '$578load_attr.2'}), (580, {}), (582, {}), (584, {}), (586, {}), (588, {'res': '$x588.3'}), (590, {'idx': 1, 'res': '$590load_global.4'}), (592, {}), (594, {}), (596, {}), (598, {}), (600, {}), (602, {'res': '$const602.6'}), (604, {'res': '$n604.7'}), (606, {'res': '$pre_avg606.8'}), (608, {'op': '-', 'lhs': '$n604.7', 'rhs': '$pre_avg606.8', 'res': '$binop_sub608.9'}), (610, {}), (612, {}), (614, {}), (616, {'func': '$590load_global.4', 'args': ['$const602.6', '$binop_sub608.9'], 'kw_names': None, 'res': '$616call.10'}), (618, {}), (620, {}), (622, {}), (624, {}), (626, {'idx': 2, 'res': '$626load_global.11'}), (628, {}), (630, {}), (632, {}), (634, {}), (636, {}), (638, {'res': '$n638.13'}), (640, {'res': '$post_avg640.14'}), (642, {'op': '+', 'lhs': '$n638.13', 'rhs': '$post_avg640.14', 'res': '$binop_add642.15'}), (644, {}), (646, {'res': '$x646.16'}), (648, {'item': '$x646.16', 'res': '$648load_attr.17'}), (650, {}), (652, {}), (654, {}), (656, {}), (658, {'res': '$const658.18'}), (660, {'index': '$const658.18', 'target': '$648load_attr.17', 'res': '$660binary_subscr.19'}), (662, {}), (664, {}), (666, {}), (668, {}), (670, {}), (672, {}), (674, {'func': '$626load_global.11', 'args': ['$binop_add642.15', '$660binary_subscr.19'], 'kw_names': None, 'res': '$674call.20'}), (676, {}), (678, {}), (680, {}), (682, {}), (684, {'start': '$616call.10', 'stop': '$674call.20', 'step': None, 'res': '$684build_slice.22', 'slicevar': '$684build_slice.21'}), (686, {'index': '$684build_slice.22', 'target': '$x588.3', 'res': '$686binary_subscr.23'}), (688, {}), (690, {}), (692, {}), (694, {}), (696, {}), (698, {}), (700, {'func': '$578load_attr.2', 'args': ['$686binary_subscr.23'], 'kw_names': None, 'res': '$700call.24'}), (702, {}), (704, {}), (706, {}), (708, {}), (710, {'value': '$700call.24'}), (712, {'res': '$peaks712.25'}), (714, {'res': '$n714.26'}), (720, {'index': '$n714.26', 'target': '$peaks712.25', 'res': '$720binary_subscr.27'}), (722, {}), (724, {}), (726, {}), (728, {}), (730, {'res': '$x730.28'}), (732, {'res': '$n732.29'}), (734, {'index': '$n732.29', 'target': '$x730.28', 'res': '$734binary_subscr.30'}), (736, {}), (738, {}), (740, {}), (742, {}), (744, {'res': '$avgn744.31'}), (746, {'res': '$delta746.32'}), (748, {'op': '+', 'lhs': '$avgn744.31', 'rhs': '$delta746.32', 'res': '$binop_add748.33'}), (750, {}), (752, {'lhs': '$734binary_subscr.30', 'rhs': '$binop_add748.33', 'res': '$752compare_op.34'}), (754, {}), (756, {}), (758, {'op': '&=', 'lhs': '$720binary_subscr.27', 'rhs': '$752compare_op.34', 'res': '$binop_iand758.35'}), (760, {}), (766, {'target': '$peaks712.25', 'index': '$n714.26', 'value': '$binop_iand758.35'}), (768, {}), (770, {'res': '$peaks770.36'}), (772, {'res': '$n772.37'}), (774, {'index': '$n772.37', 'target': '$peaks770.36', 'res': '$774binary_subscr.38'}), (776, {}), (778, {}), (780, {}), (782, {}), (784, {'pred': '$774binary_subscr.38'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={786: (), 798: ()})
2024-07-15 06:11:44,162 DEBUG:block_infos State(pc_initial=786 nstack_initial=0):
AdaptBlockInfo(insts=((786, {'res': '$n786.0'}), (788, {'res': '$const788.1'}), (790, {'op': '+=', 'lhs': '$n786.0', 'rhs': '$const788.1', 'res': '$binop_iadd790.2'}), (792, {}), (794, {'value': '$binop_iadd790.2'}), (796, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={328: ()})
2024-07-15 06:11:44,162 DEBUG:block_infos State(pc_initial=798 nstack_initial=0):
AdaptBlockInfo(insts=((798, {'res': '$n798.0'}), (800, {'res': '$wait800.1'}), (802, {'res': '$const802.2'}), (804, {'op': '+', 'lhs': '$wait800.1', 'rhs': '$const802.2', 'res': '$binop_add804.3'}), (806, {}), (808, {'op': '+=', 'lhs': '$n798.0', 'rhs': '$binop_add804.3', 'res': '$binop_iadd808.4'}), (810, {}), (812, {'value': '$binop_iadd808.4'}), (814, {'res': '$n814.5'}), (816, {'res': '$x816.6'}), (818, {'item': '$x816.6', 'res': '$818load_attr.7'}), (820, {}), (822, {}), (824, {}), (826, {}), (828, {'res': '$const828.8'}), (830, {'index': '$const828.8', 'target': '$818load_attr.7', 'res': '$830binary_subscr.9'}), (832, {}), (834, {}), (836, {}), (838, {}), (840, {'lhs': '$n814.5', 'rhs': '$830binary_subscr.9', 'res': '$840compare_op.10'}), (842, {}), (844, {}), (846, {'pred': '$840compare_op.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={848: (), 362: ()})
2024-07-15 06:11:44,162 DEBUG:block_infos State(pc_initial=848 nstack_initial=0):
AdaptBlockInfo(insts=((848, {'res': '$const848.0'}), (850, {'retval': '$const848.0', 'castval': '$850return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-15 06:11:44,162 DEBUG:block_infos State(pc_initial=852 nstack_initial=0):
AdaptBlockInfo(insts=((852, {'res': '$const852.0'}), (854, {'retval': '$const852.0', 'castval': '$854return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-15 06:11:44,165 DEBUG:label 0:
    x = arg(0, name=x)                       ['x']
    pre_max = arg(1, name=pre_max)           ['pre_max']
    post_max = arg(2, name=post_max)         ['post_max']
    pre_avg = arg(3, name=pre_avg)           ['pre_avg']
    post_avg = arg(4, name=post_avg)         ['post_avg']
    delta = arg(5, name=delta)               ['delta']
    wait = arg(6, name=wait)                 ['wait']
    peaks = arg(7, name=peaks)               ['peaks']
    $const6.1 = const(int, 0)                ['$const6.1']
    $8binary_subscr.2 = getitem(value=x, index=$const6.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1', 'x']
    $18load_global.3 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$18load_global.3']
    $30load_attr.5 = getattr(value=$18load_global.3, attr=max) ['$18load_global.3', '$30load_attr.5']
    $const42.7 = const(NoneType, None)       ['$const42.7']
    $44load_global.8 = global(min: <built-in function min>) ['$44load_global.8']
    $60load_attr.12 = getattr(value=x, attr=shape) ['$60load_attr.12', 'x']
    $const70.13 = const(int, 0)              ['$const70.13']
    $72binary_subscr.14 = getitem(value=$60load_attr.12, index=$const70.13, fn=<built-in function getitem>) ['$60load_attr.12', '$72binary_subscr.14', '$const70.13']
    $86call.15 = call $44load_global.8(post_max, $72binary_subscr.14, func=$44load_global.8, args=[Var(post_max, utils.py:1209), Var($72binary_subscr.14, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None) ['$44load_global.8', '$72binary_subscr.14', '$86call.15', 'post_max']
    $96build_slice.16 = global(slice: <class 'slice'>) ['$96build_slice.16']
    $96build_slice.17 = call $96build_slice.16($const42.7, $86call.15, func=$96build_slice.16, args=(Var($const42.7, utils.py:1221), Var($86call.15, utils.py:1221)), kws=(), vararg=None, varkwarg=None, target=None) ['$86call.15', '$96build_slice.16', '$96build_slice.17', '$const42.7']
    $98binary_subscr.18 = getitem(value=x, index=$96build_slice.17, fn=<built-in function getitem>) ['$96build_slice.17', '$98binary_subscr.18', 'x']
    $112call.19 = call $30load_attr.5($98binary_subscr.18, func=$30load_attr.5, args=[Var($98binary_subscr.18, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None) ['$112call.19', '$30load_attr.5', '$98binary_subscr.18']
    $122compare_op.20 = $8binary_subscr.2 >= $112call.19 ['$112call.19', '$122compare_op.20', '$8binary_subscr.2']
    $const130.22 = const(int, 0)             ['$const130.22']
    peaks[$const130.22] = $122compare_op.20  ['$122compare_op.20', '$const130.22', 'peaks']
    $const138.24 = const(int, 0)             ['$const138.24']
    $144binary_subscr.25 = getitem(value=peaks, index=$const138.24, fn=<built-in function getitem>) ['$144binary_subscr.25', '$const138.24', 'peaks']
    $const156.27 = const(int, 0)             ['$const156.27']
    $158binary_subscr.28 = getitem(value=x, index=$const156.27, fn=<built-in function getitem>) ['$158binary_subscr.28', '$const156.27', 'x']
    $168load_global.29 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$168load_global.29']
    $180load_attr.31 = getattr(value=$168load_global.29, attr=mean) ['$168load_global.29', '$180load_attr.31']
    $const192.33 = const(NoneType, None)     ['$const192.33']
    $194load_global.34 = global(min: <built-in function min>) ['$194load_global.34']
    $210load_attr.38 = getattr(value=x, attr=shape) ['$210load_attr.38', 'x']
    $const220.39 = const(int, 0)             ['$const220.39']
    $222binary_subscr.40 = getitem(value=$210load_attr.38, index=$const220.39, fn=<built-in function getitem>) ['$210load_attr.38', '$222binary_subscr.40', '$const220.39']
    $236call.41 = call $194load_global.34(post_avg, $222binary_subscr.40, func=$194load_global.34, args=[Var(post_avg, utils.py:1209), Var($222binary_subscr.40, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None) ['$194load_global.34', '$222binary_subscr.40', '$236call.41', 'post_avg']
    $246build_slice.42 = global(slice: <class 'slice'>) ['$246build_slice.42']
    $246build_slice.43 = call $246build_slice.42($const192.33, $236call.41, func=$246build_slice.42, args=(Var($const192.33, utils.py:1222), Var($236call.41, utils.py:1222)), kws=(), vararg=None, varkwarg=None, target=None) ['$236call.41', '$246build_slice.42', '$246build_slice.43', '$const192.33']
    $248binary_subscr.44 = getitem(value=x, index=$246build_slice.43, fn=<built-in function getitem>) ['$246build_slice.43', '$248binary_subscr.44', 'x']
    $262call.45 = call $180load_attr.31($248binary_subscr.44, func=$180load_attr.31, args=[Var($248binary_subscr.44, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None) ['$180load_attr.31', '$248binary_subscr.44', '$262call.45']
    $binop_add274.47 = $262call.45 + delta   ['$262call.45', '$binop_add274.47', 'delta']
    $278compare_op.48 = $158binary_subscr.28 >= $binop_add274.47 ['$158binary_subscr.28', '$278compare_op.48', '$binop_add274.47']
    $binop_iand284.49 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$144binary_subscr.25, rhs=$278compare_op.48, static_lhs=Undefined, static_rhs=Undefined) ['$144binary_subscr.25', '$278compare_op.48', '$binop_iand284.49']
    peaks[$const138.24] = $binop_iand284.49  ['$binop_iand284.49', '$const138.24', 'peaks']
    $const298.51 = const(int, 0)             ['$const298.51']
    $300binary_subscr.52 = getitem(value=peaks, index=$const298.51, fn=<built-in function getitem>) ['$300binary_subscr.52', '$const298.51', 'peaks']
    bool310 = global(bool: <class 'bool'>)   ['bool310']
    $310pred = call bool310($300binary_subscr.52, func=bool310, args=(Var($300binary_subscr.52, utils.py:1224),), kws=(), vararg=None, varkwarg=None, target=None) ['$300binary_subscr.52', '$310pred', 'bool310']
    branch $310pred, 312, 324                ['$310pred']
label 312:
    $const314.1 = const(int, 1)              ['$const314.1']
    n = wait + $const314.1                   ['$const314.1', 'n', 'wait']
    jump 328                                 []
label 324:
    n = const(int, 1)                        ['n']
    jump 328                                 []
label 328:
    $332load_attr.2 = getattr(value=x, attr=shape) ['$332load_attr.2', 'x']
    $const342.3 = const(int, 0)              ['$const342.3']
    $344binary_subscr.4 = getitem(value=$332load_attr.2, index=$const342.3, fn=<built-in function getitem>) ['$332load_attr.2', '$344binary_subscr.4', '$const342.3']
    $354compare_op.5 = n < $344binary_subscr.4 ['$344binary_subscr.4', '$354compare_op.5', 'n']
    bool360 = global(bool: <class 'bool'>)   ['bool360']
    $360pred = call bool360($354compare_op.5, func=bool360, args=(Var($354compare_op.5, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None) ['$354compare_op.5', '$360pred', 'bool360']
    branch $360pred, 362, 852                ['$360pred']
label 362:
    $362load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$362load_global.0']
    $374load_attr.2 = getattr(value=$362load_global.0, attr=max) ['$362load_global.0', '$374load_attr.2']
    $386load_global.4 = global(max: <built-in function max>) ['$386load_global.4']
    $const398.6 = const(int, 0)              ['$const398.6']
    $binop_sub404.9 = n - pre_max            ['$binop_sub404.9', 'n', 'pre_max']
    $412call.10 = call $386load_global.4($const398.6, $binop_sub404.9, func=$386load_global.4, args=[Var($const398.6, utils.py:1230), Var($binop_sub404.9, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None) ['$386load_global.4', '$412call.10', '$binop_sub404.9', '$const398.6']
    $422load_global.11 = global(min: <built-in function min>) ['$422load_global.11']
    $binop_add438.15 = n + post_max          ['$binop_add438.15', 'n', 'post_max']
    $444load_attr.17 = getattr(value=x, attr=shape) ['$444load_attr.17', 'x']
    $const454.18 = const(int, 0)             ['$const454.18']
    $456binary_subscr.19 = getitem(value=$444load_attr.17, index=$const454.18, fn=<built-in function getitem>) ['$444load_attr.17', '$456binary_subscr.19', '$const454.18']
    $470call.20 = call $422load_global.11($binop_add438.15, $456binary_subscr.19, func=$422load_global.11, args=[Var($binop_add438.15, utils.py:1230), Var($456binary_subscr.19, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None) ['$422load_global.11', '$456binary_subscr.19', '$470call.20', '$binop_add438.15']
    $480build_slice.21 = global(slice: <class 'slice'>) ['$480build_slice.21']
    $480build_slice.22 = call $480build_slice.21($412call.10, $470call.20, func=$480build_slice.21, args=(Var($412call.10, utils.py:1230), Var($470call.20, utils.py:1230)), kws=(), vararg=None, varkwarg=None, target=None) ['$412call.10', '$470call.20', '$480build_slice.21', '$480build_slice.22']
    $482binary_subscr.23 = getitem(value=x, index=$480build_slice.22, fn=<built-in function getitem>) ['$480build_slice.22', '$482binary_subscr.23', 'x']
    maxn = call $374load_attr.2($482binary_subscr.23, func=$374load_attr.2, args=[Var($482binary_subscr.23, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None) ['$374load_attr.2', '$482binary_subscr.23', 'maxn']
    $512binary_subscr.27 = getitem(value=x, index=n, fn=<built-in function getitem>) ['$512binary_subscr.27', 'n', 'x']
    $524compare_op.29 = $512binary_subscr.27 == maxn ['$512binary_subscr.27', '$524compare_op.29', 'maxn']
    peaks[n] = $524compare_op.29             ['$524compare_op.29', 'n', 'peaks']
    $542binary_subscr.34 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$542binary_subscr.34', 'n', 'peaks']
    bool552 = global(bool: <class 'bool'>)   ['bool552']
    $552pred = call bool552($542binary_subscr.34, func=bool552, args=(Var($542binary_subscr.34, utils.py:1235),), kws=(), vararg=None, varkwarg=None, target=None) ['$542binary_subscr.34', '$552pred', 'bool552']
    branch $552pred, 566, 554                ['$552pred']
label 554:
    $const556.1 = const(int, 1)              ['$const556.1']
    $binop_iadd558.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const556.1, static_lhs=Undefined, static_rhs=Undefined) ['$binop_iadd558.2', '$const556.1', 'n']
    n = $binop_iadd558.2                     ['$binop_iadd558.2', 'n']
    jump 328                                 []
label 566:
    $566load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$566load_global.0']
    $578load_attr.2 = getattr(value=$566load_global.0, attr=mean) ['$566load_global.0', '$578load_attr.2']
    $590load_global.4 = global(max: <built-in function max>) ['$590load_global.4']
    $const602.6 = const(int, 0)              ['$const602.6']
    $binop_sub608.9 = n - pre_avg            ['$binop_sub608.9', 'n', 'pre_avg']
    $616call.10 = call $590load_global.4($const602.6, $binop_sub608.9, func=$590load_global.4, args=[Var($const602.6, utils.py:1239), Var($binop_sub608.9, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None) ['$590load_global.4', '$616call.10', '$binop_sub608.9', '$const602.6']
    $626load_global.11 = global(min: <built-in function min>) ['$626load_global.11']
    $binop_add642.15 = n + post_avg          ['$binop_add642.15', 'n', 'post_avg']
    $648load_attr.17 = getattr(value=x, attr=shape) ['$648load_attr.17', 'x']
    $const658.18 = const(int, 0)             ['$const658.18']
    $660binary_subscr.19 = getitem(value=$648load_attr.17, index=$const658.18, fn=<built-in function getitem>) ['$648load_attr.17', '$660binary_subscr.19', '$const658.18']
    $674call.20 = call $626load_global.11($binop_add642.15, $660binary_subscr.19, func=$626load_global.11, args=[Var($binop_add642.15, utils.py:1239), Var($660binary_subscr.19, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None) ['$626load_global.11', '$660binary_subscr.19', '$674call.20', '$binop_add642.15']
    $684build_slice.21 = global(slice: <class 'slice'>) ['$684build_slice.21']
    $684build_slice.22 = call $684build_slice.21($616call.10, $674call.20, func=$684build_slice.21, args=(Var($616call.10, utils.py:1239), Var($674call.20, utils.py:1239)), kws=(), vararg=None, varkwarg=None, target=None) ['$616call.10', '$674call.20', '$684build_slice.21', '$684build_slice.22']
    $686binary_subscr.23 = getitem(value=x, index=$684build_slice.22, fn=<built-in function getitem>) ['$684build_slice.22', '$686binary_subscr.23', 'x']
    avgn = call $578load_attr.2($686binary_subscr.23, func=$578load_attr.2, args=[Var($686binary_subscr.23, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None) ['$578load_attr.2', '$686binary_subscr.23', 'avgn']
    $720binary_subscr.27 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$720binary_subscr.27', 'n', 'peaks']
    $734binary_subscr.30 = getitem(value=x, index=n, fn=<built-in function getitem>) ['$734binary_subscr.30', 'n', 'x']
    $binop_add748.33 = avgn + delta          ['$binop_add748.33', 'avgn', 'delta']
    $752compare_op.34 = $734binary_subscr.30 >= $binop_add748.33 ['$734binary_subscr.30', '$752compare_op.34', '$binop_add748.33']
    $binop_iand758.35 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$720binary_subscr.27, rhs=$752compare_op.34, static_lhs=Undefined, static_rhs=Undefined) ['$720binary_subscr.27', '$752compare_op.34', '$binop_iand758.35']
    peaks[n] = $binop_iand758.35             ['$binop_iand758.35', 'n', 'peaks']
    $774binary_subscr.38 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$774binary_subscr.38', 'n', 'peaks']
    bool784 = global(bool: <class 'bool'>)   ['bool784']
    $784pred = call bool784($774binary_subscr.38, func=bool784, args=(Var($774binary_subscr.38, utils.py:1242),), kws=(), vararg=None, varkwarg=None, target=None) ['$774binary_subscr.38', '$784pred', 'bool784']
    branch $784pred, 798, 786                ['$784pred']
label 786:
    $const788.1 = const(int, 1)              ['$const788.1']
    $binop_iadd790.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const788.1, static_lhs=Undefined, static_rhs=Undefined) ['$binop_iadd790.2', '$const788.1', 'n']
    n = $binop_iadd790.2                     ['$binop_iadd790.2', 'n']
    jump 328                                 []
label 798:
    $const802.2 = const(int, 1)              ['$const802.2']
    $binop_add804.3 = wait + $const802.2     ['$binop_add804.3', '$const802.2', 'wait']
    $binop_iadd808.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$binop_add804.3, static_lhs=Undefined, static_rhs=Undefined) ['$binop_add804.3', '$binop_iadd808.4', 'n']
    n = $binop_iadd808.4                     ['$binop_iadd808.4', 'n']
    $818load_attr.7 = getattr(value=x, attr=shape) ['$818load_attr.7', 'x']
    $const828.8 = const(int, 0)              ['$const828.8']
    $830binary_subscr.9 = getitem(value=$818load_attr.7, index=$const828.8, fn=<built-in function getitem>) ['$818load_attr.7', '$830binary_subscr.9', '$const828.8']
    $840compare_op.10 = n < $830binary_subscr.9 ['$830binary_subscr.9', '$840compare_op.10', 'n']
    bool846 = global(bool: <class 'bool'>)   ['bool846']
    $846pred = call bool846($840compare_op.10, func=bool846, args=(Var($840compare_op.10, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None) ['$840compare_op.10', '$846pred', 'bool846']
    branch $846pred, 362, 848                ['$846pred']
label 848:
    $const848.0 = const(NoneType, None)      ['$const848.0']
    $850return_value.1 = cast(value=$const848.0) ['$850return_value.1', '$const848.0']
    return $850return_value.1                ['$850return_value.1']
label 852:
    $const852.0 = const(NoneType, None)      ['$const852.0']
    $854return_value.1 = cast(value=$const852.0) ['$854return_value.1', '$const852.0']
    return $854return_value.1                ['$854return_value.1']

2024-07-15 06:11:44,207 DEBUG:==== SSA block analysis pass on 0
2024-07-15 06:11:44,207 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5957890>
2024-07-15 06:11:44,207 DEBUG:on stmt: x = arg(0, name=x)
2024-07-15 06:11:44,207 DEBUG:on stmt: pre_max = arg(1, name=pre_max)
2024-07-15 06:11:44,208 DEBUG:on stmt: post_max = arg(2, name=post_max)
2024-07-15 06:11:44,208 DEBUG:on stmt: pre_avg = arg(3, name=pre_avg)
2024-07-15 06:11:44,208 DEBUG:on stmt: post_avg = arg(4, name=post_avg)
2024-07-15 06:11:44,208 DEBUG:on stmt: delta = arg(5, name=delta)
2024-07-15 06:11:44,208 DEBUG:on stmt: wait = arg(6, name=wait)
2024-07-15 06:11:44,208 DEBUG:on stmt: peaks = arg(7, name=peaks)
2024-07-15 06:11:44,208 DEBUG:on stmt: $const6.1 = const(int, 0)
2024-07-15 06:11:44,208 DEBUG:on stmt: $8binary_subscr.2 = static_getitem(value=x, index=0, index_var=$const6.1, fn=<built-in function getitem>)
2024-07-15 06:11:44,208 DEBUG:on stmt: $18load_global.3 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:44,208 DEBUG:on stmt: $30load_attr.5 = getattr(value=$18load_global.3, attr=max)
2024-07-15 06:11:44,208 DEBUG:on stmt: $const42.7 = const(NoneType, None)
2024-07-15 06:11:44,208 DEBUG:on stmt: $44load_global.8 = global(min: <built-in function min>)
2024-07-15 06:11:44,208 DEBUG:on stmt: $60load_attr.12 = getattr(value=x, attr=shape)
2024-07-15 06:11:44,208 DEBUG:on stmt: $const70.13 = const(int, 0)
2024-07-15 06:11:44,208 DEBUG:on stmt: $72binary_subscr.14 = static_getitem(value=$60load_attr.12, index=0, index_var=$const70.13, fn=<built-in function getitem>)
2024-07-15 06:11:44,208 DEBUG:on stmt: $86call.15 = call $44load_global.8(post_max, $72binary_subscr.14, func=$44load_global.8, args=[Var(post_max, utils.py:1209), Var($72binary_subscr.14, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:44,208 DEBUG:on stmt: $96build_slice.16 = global(slice: <class 'slice'>)
2024-07-15 06:11:44,208 DEBUG:on stmt: $96build_slice.17 = call $96build_slice.16($const42.7, $86call.15, func=$96build_slice.16, args=(Var($const42.7, utils.py:1221), Var($86call.15, utils.py:1221)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:44,208 DEBUG:on stmt: $98binary_subscr.18 = getitem(value=x, index=$96build_slice.17, fn=<built-in function getitem>)
2024-07-15 06:11:44,208 DEBUG:on stmt: $112call.19 = call $30load_attr.5($98binary_subscr.18, func=$30load_attr.5, args=[Var($98binary_subscr.18, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:44,208 DEBUG:on stmt: $122compare_op.20 = $8binary_subscr.2 >= $112call.19
2024-07-15 06:11:44,208 DEBUG:on stmt: $const130.22 = const(int, 0)
2024-07-15 06:11:44,208 DEBUG:on stmt: peaks[0] = $122compare_op.20
2024-07-15 06:11:44,208 DEBUG:on stmt: $const138.24 = const(int, 0)
2024-07-15 06:11:44,208 DEBUG:on stmt: $144binary_subscr.25 = static_getitem(value=peaks, index=0, index_var=$const138.24, fn=<built-in function getitem>)
2024-07-15 06:11:44,208 DEBUG:on stmt: $const156.27 = const(int, 0)
2024-07-15 06:11:44,208 DEBUG:on stmt: $158binary_subscr.28 = static_getitem(value=x, index=0, index_var=$const156.27, fn=<built-in function getitem>)
2024-07-15 06:11:44,208 DEBUG:on stmt: $168load_global.29 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:44,209 DEBUG:on stmt: $180load_attr.31 = getattr(value=$168load_global.29, attr=mean)
2024-07-15 06:11:44,209 DEBUG:on stmt: $const192.33 = const(NoneType, None)
2024-07-15 06:11:44,209 DEBUG:on stmt: $194load_global.34 = global(min: <built-in function min>)
2024-07-15 06:11:44,209 DEBUG:on stmt: $210load_attr.38 = getattr(value=x, attr=shape)
2024-07-15 06:11:44,209 DEBUG:on stmt: $const220.39 = const(int, 0)
2024-07-15 06:11:44,209 DEBUG:on stmt: $222binary_subscr.40 = static_getitem(value=$210load_attr.38, index=0, index_var=$const220.39, fn=<built-in function getitem>)
2024-07-15 06:11:44,209 DEBUG:on stmt: $236call.41 = call $194load_global.34(post_avg, $222binary_subscr.40, func=$194load_global.34, args=[Var(post_avg, utils.py:1209), Var($222binary_subscr.40, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:44,209 DEBUG:on stmt: $246build_slice.42 = global(slice: <class 'slice'>)
2024-07-15 06:11:44,209 DEBUG:on stmt: $246build_slice.43 = call $246build_slice.42($const192.33, $236call.41, func=$246build_slice.42, args=(Var($const192.33, utils.py:1222), Var($236call.41, utils.py:1222)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:44,209 DEBUG:on stmt: $248binary_subscr.44 = getitem(value=x, index=$246build_slice.43, fn=<built-in function getitem>)
2024-07-15 06:11:44,209 DEBUG:on stmt: $262call.45 = call $180load_attr.31($248binary_subscr.44, func=$180load_attr.31, args=[Var($248binary_subscr.44, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:44,209 DEBUG:on stmt: $binop_add274.47 = $262call.45 + delta
2024-07-15 06:11:44,209 DEBUG:on stmt: $278compare_op.48 = $158binary_subscr.28 >= $binop_add274.47
2024-07-15 06:11:44,209 DEBUG:on stmt: $binop_iand284.49 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$144binary_subscr.25, rhs=$278compare_op.48, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:44,209 DEBUG:on stmt: peaks[0] = $binop_iand284.49
2024-07-15 06:11:44,209 DEBUG:on stmt: $const298.51 = const(int, 0)
2024-07-15 06:11:44,209 DEBUG:on stmt: $300binary_subscr.52 = static_getitem(value=peaks, index=0, index_var=$const298.51, fn=<built-in function getitem>)
2024-07-15 06:11:44,209 DEBUG:on stmt: bool310 = global(bool: <class 'bool'>)
2024-07-15 06:11:44,209 DEBUG:on stmt: $310pred = call bool310($300binary_subscr.52, func=bool310, args=(Var($300binary_subscr.52, utils.py:1224),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:44,209 DEBUG:on stmt: branch $310pred, 312, 324
2024-07-15 06:11:44,209 DEBUG:==== SSA block analysis pass on 312
2024-07-15 06:11:44,209 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5957890>
2024-07-15 06:11:44,209 DEBUG:on stmt: $const314.1 = const(int, 1)
2024-07-15 06:11:44,209 DEBUG:on stmt: n = wait + $const314.1
2024-07-15 06:11:44,209 DEBUG:on stmt: jump 328
2024-07-15 06:11:44,209 DEBUG:==== SSA block analysis pass on 324
2024-07-15 06:11:44,209 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5957890>
2024-07-15 06:11:44,209 DEBUG:on stmt: n = const(int, 1)
2024-07-15 06:11:44,209 DEBUG:on stmt: jump 328
2024-07-15 06:11:44,210 DEBUG:==== SSA block analysis pass on 328
2024-07-15 06:11:44,210 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5957890>
2024-07-15 06:11:44,210 DEBUG:on stmt: $332load_attr.2 = getattr(value=x, attr=shape)
2024-07-15 06:11:44,210 DEBUG:on stmt: $const342.3 = const(int, 0)
2024-07-15 06:11:44,210 DEBUG:on stmt: $344binary_subscr.4 = static_getitem(value=$332load_attr.2, index=0, index_var=$const342.3, fn=<built-in function getitem>)
2024-07-15 06:11:44,210 DEBUG:on stmt: $354compare_op.5 = n < $344binary_subscr.4
2024-07-15 06:11:44,210 DEBUG:on stmt: bool360 = global(bool: <class 'bool'>)
2024-07-15 06:11:44,210 DEBUG:on stmt: $360pred = call bool360($354compare_op.5, func=bool360, args=(Var($354compare_op.5, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:44,210 DEBUG:on stmt: branch $360pred, 362, 852
2024-07-15 06:11:44,210 DEBUG:==== SSA block analysis pass on 362
2024-07-15 06:11:44,210 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5957890>
2024-07-15 06:11:44,210 DEBUG:on stmt: $362load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:44,210 DEBUG:on stmt: $374load_attr.2 = getattr(value=$362load_global.0, attr=max)
2024-07-15 06:11:44,210 DEBUG:on stmt: $386load_global.4 = global(max: <built-in function max>)
2024-07-15 06:11:44,210 DEBUG:on stmt: $const398.6 = const(int, 0)
2024-07-15 06:11:44,210 DEBUG:on stmt: $binop_sub404.9 = n - pre_max
2024-07-15 06:11:44,210 DEBUG:on stmt: $412call.10 = call $386load_global.4($const398.6, $binop_sub404.9, func=$386load_global.4, args=[Var($const398.6, utils.py:1230), Var($binop_sub404.9, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:44,210 DEBUG:on stmt: $422load_global.11 = global(min: <built-in function min>)
2024-07-15 06:11:44,210 DEBUG:on stmt: $binop_add438.15 = n + post_max
2024-07-15 06:11:44,210 DEBUG:on stmt: $444load_attr.17 = getattr(value=x, attr=shape)
2024-07-15 06:11:44,210 DEBUG:on stmt: $const454.18 = const(int, 0)
2024-07-15 06:11:44,210 DEBUG:on stmt: $456binary_subscr.19 = static_getitem(value=$444load_attr.17, index=0, index_var=$const454.18, fn=<built-in function getitem>)
2024-07-15 06:11:44,210 DEBUG:on stmt: $470call.20 = call $422load_global.11($binop_add438.15, $456binary_subscr.19, func=$422load_global.11, args=[Var($binop_add438.15, utils.py:1230), Var($456binary_subscr.19, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:44,210 DEBUG:on stmt: $480build_slice.21 = global(slice: <class 'slice'>)
2024-07-15 06:11:44,210 DEBUG:on stmt: $480build_slice.22 = call $480build_slice.21($412call.10, $470call.20, func=$480build_slice.21, args=(Var($412call.10, utils.py:1230), Var($470call.20, utils.py:1230)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:44,210 DEBUG:on stmt: $482binary_subscr.23 = getitem(value=x, index=$480build_slice.22, fn=<built-in function getitem>)
2024-07-15 06:11:44,210 DEBUG:on stmt: maxn = call $374load_attr.2($482binary_subscr.23, func=$374load_attr.2, args=[Var($482binary_subscr.23, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:44,210 DEBUG:on stmt: $512binary_subscr.27 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-07-15 06:11:44,210 DEBUG:on stmt: $524compare_op.29 = $512binary_subscr.27 == maxn
2024-07-15 06:11:44,211 DEBUG:on stmt: peaks[n] = $524compare_op.29
2024-07-15 06:11:44,211 DEBUG:on stmt: $542binary_subscr.34 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-07-15 06:11:44,211 DEBUG:on stmt: bool552 = global(bool: <class 'bool'>)
2024-07-15 06:11:44,211 DEBUG:on stmt: $552pred = call bool552($542binary_subscr.34, func=bool552, args=(Var($542binary_subscr.34, utils.py:1235),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:44,211 DEBUG:on stmt: branch $552pred, 566, 554
2024-07-15 06:11:44,211 DEBUG:==== SSA block analysis pass on 554
2024-07-15 06:11:44,211 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5957890>
2024-07-15 06:11:44,211 DEBUG:on stmt: $const556.1 = const(int, 1)
2024-07-15 06:11:44,211 DEBUG:on stmt: $binop_iadd558.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const556.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:44,211 DEBUG:on stmt: n = $binop_iadd558.2
2024-07-15 06:11:44,211 DEBUG:on stmt: jump 853
2024-07-15 06:11:44,211 DEBUG:==== SSA block analysis pass on 566
2024-07-15 06:11:44,211 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5957890>
2024-07-15 06:11:44,211 DEBUG:on stmt: $566load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:44,211 DEBUG:on stmt: $578load_attr.2 = getattr(value=$566load_global.0, attr=mean)
2024-07-15 06:11:44,211 DEBUG:on stmt: $590load_global.4 = global(max: <built-in function max>)
2024-07-15 06:11:44,211 DEBUG:on stmt: $const602.6 = const(int, 0)
2024-07-15 06:11:44,211 DEBUG:on stmt: $binop_sub608.9 = n - pre_avg
2024-07-15 06:11:44,211 DEBUG:on stmt: $616call.10 = call $590load_global.4($const602.6, $binop_sub608.9, func=$590load_global.4, args=[Var($const602.6, utils.py:1239), Var($binop_sub608.9, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:44,211 DEBUG:on stmt: $626load_global.11 = global(min: <built-in function min>)
2024-07-15 06:11:44,211 DEBUG:on stmt: $binop_add642.15 = n + post_avg
2024-07-15 06:11:44,211 DEBUG:on stmt: $648load_attr.17 = getattr(value=x, attr=shape)
2024-07-15 06:11:44,211 DEBUG:on stmt: $const658.18 = const(int, 0)
2024-07-15 06:11:44,211 DEBUG:on stmt: $660binary_subscr.19 = static_getitem(value=$648load_attr.17, index=0, index_var=$const658.18, fn=<built-in function getitem>)
2024-07-15 06:11:44,211 DEBUG:on stmt: $674call.20 = call $626load_global.11($binop_add642.15, $660binary_subscr.19, func=$626load_global.11, args=[Var($binop_add642.15, utils.py:1239), Var($660binary_subscr.19, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:44,211 DEBUG:on stmt: $684build_slice.21 = global(slice: <class 'slice'>)
2024-07-15 06:11:44,211 DEBUG:on stmt: $684build_slice.22 = call $684build_slice.21($616call.10, $674call.20, func=$684build_slice.21, args=(Var($616call.10, utils.py:1239), Var($674call.20, utils.py:1239)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:44,211 DEBUG:on stmt: $686binary_subscr.23 = getitem(value=x, index=$684build_slice.22, fn=<built-in function getitem>)
2024-07-15 06:11:44,211 DEBUG:on stmt: avgn = call $578load_attr.2($686binary_subscr.23, func=$578load_attr.2, args=[Var($686binary_subscr.23, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:44,212 DEBUG:on stmt: $720binary_subscr.27 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-07-15 06:11:44,212 DEBUG:on stmt: $734binary_subscr.30 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-07-15 06:11:44,212 DEBUG:on stmt: $binop_add748.33 = avgn + delta
2024-07-15 06:11:44,212 DEBUG:on stmt: $752compare_op.34 = $734binary_subscr.30 >= $binop_add748.33
2024-07-15 06:11:44,212 DEBUG:on stmt: $binop_iand758.35 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$720binary_subscr.27, rhs=$752compare_op.34, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:44,212 DEBUG:on stmt: peaks[n] = $binop_iand758.35
2024-07-15 06:11:44,212 DEBUG:on stmt: $774binary_subscr.38 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-07-15 06:11:44,212 DEBUG:on stmt: bool784 = global(bool: <class 'bool'>)
2024-07-15 06:11:44,212 DEBUG:on stmt: $784pred = call bool784($774binary_subscr.38, func=bool784, args=(Var($774binary_subscr.38, utils.py:1242),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:44,212 DEBUG:on stmt: branch $784pred, 798, 786
2024-07-15 06:11:44,212 DEBUG:==== SSA block analysis pass on 786
2024-07-15 06:11:44,212 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5957890>
2024-07-15 06:11:44,212 DEBUG:on stmt: $const788.1 = const(int, 1)
2024-07-15 06:11:44,212 DEBUG:on stmt: $binop_iadd790.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const788.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:44,212 DEBUG:on stmt: n = $binop_iadd790.2
2024-07-15 06:11:44,212 DEBUG:on stmt: jump 853
2024-07-15 06:11:44,212 DEBUG:==== SSA block analysis pass on 798
2024-07-15 06:11:44,212 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5957890>
2024-07-15 06:11:44,212 DEBUG:on stmt: $const802.2 = const(int, 1)
2024-07-15 06:11:44,212 DEBUG:on stmt: $binop_add804.3 = wait + $const802.2
2024-07-15 06:11:44,212 DEBUG:on stmt: $binop_iadd808.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$binop_add804.3, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:44,212 DEBUG:on stmt: n = $binop_iadd808.4
2024-07-15 06:11:44,212 DEBUG:on stmt: $818load_attr.7 = getattr(value=x, attr=shape)
2024-07-15 06:11:44,212 DEBUG:on stmt: $const828.8 = const(int, 0)
2024-07-15 06:11:44,212 DEBUG:on stmt: $830binary_subscr.9 = static_getitem(value=$818load_attr.7, index=0, index_var=$const828.8, fn=<built-in function getitem>)
2024-07-15 06:11:44,212 DEBUG:on stmt: $840compare_op.10 = n < $830binary_subscr.9
2024-07-15 06:11:44,212 DEBUG:on stmt: bool846 = global(bool: <class 'bool'>)
2024-07-15 06:11:44,212 DEBUG:on stmt: $846pred = call bool846($840compare_op.10, func=bool846, args=(Var($840compare_op.10, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:44,212 DEBUG:on stmt: branch $846pred, 362, 848
2024-07-15 06:11:44,212 DEBUG:==== SSA block analysis pass on 848
2024-07-15 06:11:44,213 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5957890>
2024-07-15 06:11:44,213 DEBUG:on stmt: $const848.0 = const(NoneType, None)
2024-07-15 06:11:44,213 DEBUG:on stmt: $850return_value.1 = cast(value=$const848.0)
2024-07-15 06:11:44,213 DEBUG:on stmt: return $850return_value.1
2024-07-15 06:11:44,213 DEBUG:==== SSA block analysis pass on 852
2024-07-15 06:11:44,213 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5957890>
2024-07-15 06:11:44,213 DEBUG:on stmt: $const852.0 = const(NoneType, None)
2024-07-15 06:11:44,213 DEBUG:on stmt: $854return_value.1 = cast(value=$const852.0)
2024-07-15 06:11:44,213 DEBUG:on stmt: return $854return_value.1
2024-07-15 06:11:44,213 DEBUG:==== SSA block analysis pass on 853
2024-07-15 06:11:44,213 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5957890>
2024-07-15 06:11:44,213 DEBUG:on stmt: jump 328
2024-07-15 06:11:44,215 DEBUG:defs defaultdict(<class 'list'>,
            {'$112call.19': [(<numba.core.ir.Assign object at 0x00000221B5954E90>,
                              0)],
             '$122compare_op.20': [(<numba.core.ir.Assign object at 0x00000221B5954E10>,
                                    0)],
             '$144binary_subscr.25': [(<numba.core.ir.Assign object at 0x00000221B68EE250>,
                                       0)],
             '$158binary_subscr.28': [(<numba.core.ir.Assign object at 0x00000221B68EFF10>,
                                       0)],
             '$168load_global.29': [(<numba.core.ir.Assign object at 0x00000221B5956DD0>,
                                     0)],
             '$180load_attr.31': [(<numba.core.ir.Assign object at 0x00000221B5957D50>,
                                   0)],
             '$18load_global.3': [(<numba.core.ir.Assign object at 0x00000221B5D45410>,
                                   0)],
             '$194load_global.34': [(<numba.core.ir.Assign object at 0x00000221B5956F10>,
                                     0)],
             '$210load_attr.38': [(<numba.core.ir.Assign object at 0x00000221B5956490>,
                                   0)],
             '$222binary_subscr.40': [(<numba.core.ir.Assign object at 0x00000221B68EE110>,
                                       0)],
             '$236call.41': [(<numba.core.ir.Assign object at 0x00000221B5956A50>,
                              0)],
             '$246build_slice.42': [(<numba.core.ir.Assign object at 0x00000221B5957E90>,
                                     0)],
             '$246build_slice.43': [(<numba.core.ir.Assign object at 0x00000221B5957950>,
                                     0)],
             '$248binary_subscr.44': [(<numba.core.ir.Assign object at 0x00000221B5955D50>,
                                       0)],
             '$262call.45': [(<numba.core.ir.Assign object at 0x00000221B5928C10>,
                              0)],
             '$278compare_op.48': [(<numba.core.ir.Assign object at 0x00000221B592AE90>,
                                    0)],
             '$300binary_subscr.52': [(<numba.core.ir.Assign object at 0x00000221B68EC8D0>,
                                       0)],
             '$30load_attr.5': [(<numba.core.ir.Assign object at 0x00000221B5D46050>,
                                 0)],
             '$310pred': [(<numba.core.ir.Assign object at 0x00000221B5928910>,
                           0)],
             '$332load_attr.2': [(<numba.core.ir.Assign object at 0x00000221B6909E50>,
                                  328)],
             '$344binary_subscr.4': [(<numba.core.ir.Assign object at 0x00000221B682C310>,
                                      328)],
             '$354compare_op.5': [(<numba.core.ir.Assign object at 0x00000221B6908D90>,
                                   328)],
             '$360pred': [(<numba.core.ir.Assign object at 0x00000221B690A810>,
                           328)],
             '$362load_global.0': [(<numba.core.ir.Assign object at 0x00000221B6908A10>,
                                    362)],
             '$374load_attr.2': [(<numba.core.ir.Assign object at 0x00000221B69082D0>,
                                  362)],
             '$386load_global.4': [(<numba.core.ir.Assign object at 0x00000221B690B610>,
                                    362)],
             '$412call.10': [(<numba.core.ir.Assign object at 0x00000221B690BB50>,
                              362)],
             '$422load_global.11': [(<numba.core.ir.Assign object at 0x00000221B6908350>,
                                     362)],
             '$444load_attr.17': [(<numba.core.ir.Assign object at 0x00000221B6908A50>,
                                   362)],
             '$44load_global.8': [(<numba.core.ir.Assign object at 0x00000221B5D478D0>,
                                   0)],
             '$456binary_subscr.19': [(<numba.core.ir.Assign object at 0x00000221B610B3D0>,
                                       362)],
             '$470call.20': [(<numba.core.ir.Assign object at 0x00000221B69092D0>,
                              362)],
             '$480build_slice.21': [(<numba.core.ir.Assign object at 0x00000221B6909410>,
                                     362)],
             '$480build_slice.22': [(<numba.core.ir.Assign object at 0x00000221B6909510>,
                                     362)],
             '$482binary_subscr.23': [(<numba.core.ir.Assign object at 0x00000221B6909010>,
                                       362)],
             '$512binary_subscr.27': [(<numba.core.ir.Assign object at 0x00000221B67902D0>,
                                       362)],
             '$524compare_op.29': [(<numba.core.ir.Assign object at 0x00000221B67914D0>,
                                    362)],
             '$542binary_subscr.34': [(<numba.core.ir.Assign object at 0x00000221B6791690>,
                                       362)],
             '$552pred': [(<numba.core.ir.Assign object at 0x00000221B6792B90>,
                           362)],
             '$566load_global.0': [(<numba.core.ir.Assign object at 0x00000221B6792A90>,
                                    566)],
             '$578load_attr.2': [(<numba.core.ir.Assign object at 0x00000221B6792950>,
                                  566)],
             '$590load_global.4': [(<numba.core.ir.Assign object at 0x00000221B6792490>,
                                    566)],
             '$60load_attr.12': [(<numba.core.ir.Assign object at 0x00000221B5D45990>,
                                  0)],
             '$616call.10': [(<numba.core.ir.Assign object at 0x00000221B68D2E90>,
                              566)],
             '$626load_global.11': [(<numba.core.ir.Assign object at 0x00000221B68D2750>,
                                     566)],
             '$648load_attr.17': [(<numba.core.ir.Assign object at 0x00000221B68D07D0>,
                                   566)],
             '$660binary_subscr.19': [(<numba.core.ir.Assign object at 0x00000221B608F510>,
                                       566)],
             '$674call.20': [(<numba.core.ir.Assign object at 0x00000221B68D06D0>,
                              566)],
             '$684build_slice.21': [(<numba.core.ir.Assign object at 0x00000221B68D1250>,
                                     566)],
             '$684build_slice.22': [(<numba.core.ir.Assign object at 0x00000221B68D0090>,
                                     566)],
             '$686binary_subscr.23': [(<numba.core.ir.Assign object at 0x00000221B68D0ED0>,
                                       566)],
             '$720binary_subscr.27': [(<numba.core.ir.Assign object at 0x00000221B68D0710>,
                                       566)],
             '$72binary_subscr.14': [(<numba.core.ir.Assign object at 0x00000221B68EC690>,
                                      0)],
             '$734binary_subscr.30': [(<numba.core.ir.Assign object at 0x00000221B68D3A10>,
                                       566)],
             '$752compare_op.34': [(<numba.core.ir.Assign object at 0x00000221B68D2890>,
                                    566)],
             '$774binary_subscr.38': [(<numba.core.ir.Assign object at 0x00000221B68D1D90>,
                                       566)],
             '$784pred': [(<numba.core.ir.Assign object at 0x00000221B68D38D0>,
                           566)],
             '$818load_attr.7': [(<numba.core.ir.Assign object at 0x00000221B5E2DBD0>,
                                  798)],
             '$830binary_subscr.9': [(<numba.core.ir.Assign object at 0x00000221B59CCD50>,
                                      798)],
             '$840compare_op.10': [(<numba.core.ir.Assign object at 0x00000221B5E2FF90>,
                                    798)],
             '$846pred': [(<numba.core.ir.Assign object at 0x00000221B68EE750>,
                           798)],
             '$850return_value.1': [(<numba.core.ir.Assign object at 0x00000221B68ECED0>,
                                     848)],
             '$854return_value.1': [(<numba.core.ir.Assign object at 0x00000221B68ECF50>,
                                     852)],
             '$86call.15': [(<numba.core.ir.Assign object at 0x00000221B5D444D0>,
                             0)],
             '$8binary_subscr.2': [(<numba.core.ir.Assign object at 0x00000221B68EC0D0>,
                                    0)],
             '$96build_slice.16': [(<numba.core.ir.Assign object at 0x00000221B5D47C50>,
                                    0)],
             '$96build_slice.17': [(<numba.core.ir.Assign object at 0x00000221B5D46950>,
                                    0)],
             '$98binary_subscr.18': [(<numba.core.ir.Assign object at 0x00000221B59557D0>,
                                      0)],
             '$binop_add274.47': [(<numba.core.ir.Assign object at 0x00000221B5929490>,
                                   0)],
             '$binop_add438.15': [(<numba.core.ir.Assign object at 0x00000221B690A850>,
                                   362)],
             '$binop_add642.15': [(<numba.core.ir.Assign object at 0x00000221B68D05D0>,
                                   566)],
             '$binop_add748.33': [(<numba.core.ir.Assign object at 0x00000221B68D2AD0>,
                                   566)],
             '$binop_add804.3': [(<numba.core.ir.Assign object at 0x00000221B5E2EF50>,
                                  798)],
             '$binop_iadd558.2': [(<numba.core.ir.Assign object at 0x00000221B6793C10>,
                                   554)],
             '$binop_iadd790.2': [(<numba.core.ir.Assign object at 0x00000221B5E2E890>,
                                   786)],
             '$binop_iadd808.4': [(<numba.core.ir.Assign object at 0x00000221B5E2C610>,
                                   798)],
             '$binop_iand284.49': [(<numba.core.ir.Assign object at 0x00000221B5929350>,
                                    0)],
             '$binop_iand758.35': [(<numba.core.ir.Assign object at 0x00000221B68D1510>,
                                    566)],
             '$binop_sub404.9': [(<numba.core.ir.Assign object at 0x00000221B690B7D0>,
                                  362)],
             '$binop_sub608.9': [(<numba.core.ir.Assign object at 0x00000221B68D2E50>,
                                  566)],
             '$const130.22': [(<numba.core.ir.Assign object at 0x00000221B5955990>,
                               0)],
             '$const138.24': [(<numba.core.ir.Assign object at 0x00000221B5955E10>,
                               0)],
             '$const156.27': [(<numba.core.ir.Assign object at 0x00000221B5955E50>,
                               0)],
             '$const192.33': [(<numba.core.ir.Assign object at 0x00000221B5955590>,
                               0)],
             '$const220.39': [(<numba.core.ir.Assign object at 0x00000221B59571D0>,
                               0)],
             '$const298.51': [(<numba.core.ir.Assign object at 0x00000221B592BF10>,
                               0)],
             '$const314.1': [(<numba.core.ir.Assign object at 0x00000221B592B9D0>,
                              312)],
             '$const342.3': [(<numba.core.ir.Assign object at 0x00000221B690A010>,
                              328)],
             '$const398.6': [(<numba.core.ir.Assign object at 0x00000221B690B0D0>,
                              362)],
             '$const42.7': [(<numba.core.ir.Assign object at 0x00000221B5D47E10>,
                             0)],
             '$const454.18': [(<numba.core.ir.Assign object at 0x00000221B690AC10>,
                               362)],
             '$const556.1': [(<numba.core.ir.Assign object at 0x00000221B6791850>,
                              554)],
             '$const6.1': [(<numba.core.ir.Assign object at 0x00000221B5D45F50>,
                            0)],
             '$const602.6': [(<numba.core.ir.Assign object at 0x00000221B6791B10>,
                              566)],
             '$const658.18': [(<numba.core.ir.Assign object at 0x00000221B68D0190>,
                               566)],
             '$const70.13': [(<numba.core.ir.Assign object at 0x00000221B5D459D0>,
                              0)],
             '$const788.1': [(<numba.core.ir.Assign object at 0x00000221B68D1ED0>,
                              786)],
             '$const802.2': [(<numba.core.ir.Assign object at 0x00000221B5E2CE50>,
                              798)],
             '$const828.8': [(<numba.core.ir.Assign object at 0x00000221B5E2C350>,
                              798)],
             '$const848.0': [(<numba.core.ir.Assign object at 0x00000221B68EC710>,
                              848)],
             '$const852.0': [(<numba.core.ir.Assign object at 0x00000221B68ECE10>,
                              852)],
             'avgn': [(<numba.core.ir.Assign object at 0x00000221B68D3410>,
                       566)],
             'bool310': [(<numba.core.ir.Assign object at 0x00000221B592B990>,
                          0)],
             'bool360': [(<numba.core.ir.Assign object at 0x00000221B690A1D0>,
                          328)],
             'bool552': [(<numba.core.ir.Assign object at 0x00000221B6822E10>,
                          362)],
             'bool784': [(<numba.core.ir.Assign object at 0x00000221B68D1E10>,
                          566)],
             'bool846': [(<numba.core.ir.Assign object at 0x00000221B5E2CC50>,
                          798)],
             'delta': [(<numba.core.ir.Assign object at 0x00000221B5FA4D90>,
                        0)],
             'maxn': [(<numba.core.ir.Assign object at 0x00000221B6909F90>,
                       362)],
             'n': [(<numba.core.ir.Assign object at 0x00000221B592BE50>, 312),
                   (<numba.core.ir.Assign object at 0x00000221B592BF50>, 324),
                   (<numba.core.ir.Assign object at 0x00000221B6793150>, 554),
                   (<numba.core.ir.Assign object at 0x00000221B5E2ECD0>, 786),
                   (<numba.core.ir.Assign object at 0x00000221B5E2FED0>, 798)],
             'peaks': [(<numba.core.ir.Assign object at 0x00000221B60D3010>,
                        0)],
             'post_avg': [(<numba.core.ir.Assign object at 0x00000221B6001F50>,
                           0)],
             'post_max': [(<numba.core.ir.Assign object at 0x00000221B608E7D0>,
                           0)],
             'pre_avg': [(<numba.core.ir.Assign object at 0x00000221B60020D0>,
                          0)],
             'pre_max': [(<numba.core.ir.Assign object at 0x00000221B59CC450>,
                          0)],
             'wait': [(<numba.core.ir.Assign object at 0x00000221B6789350>, 0)],
             'x': [(<numba.core.ir.Assign object at 0x00000221B59CC250>, 0)]})
2024-07-15 06:11:44,215 DEBUG:SSA violators <numba.core.utils.OrderedSet object at 0x00000221B69B2FD0>
2024-07-15 06:11:44,215 DEBUG:Fix SSA violator on var n
2024-07-15 06:11:44,215 DEBUG:==== SSA block rewrite pass on 0
2024-07-15 06:11:44,215 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5D46390>
2024-07-15 06:11:44,215 DEBUG:on stmt: x = arg(0, name=x)
2024-07-15 06:11:44,215 DEBUG:on stmt: pre_max = arg(1, name=pre_max)
2024-07-15 06:11:44,215 DEBUG:on stmt: post_max = arg(2, name=post_max)
2024-07-15 06:11:44,215 DEBUG:on stmt: pre_avg = arg(3, name=pre_avg)
2024-07-15 06:11:44,215 DEBUG:on stmt: post_avg = arg(4, name=post_avg)
2024-07-15 06:11:44,215 DEBUG:on stmt: delta = arg(5, name=delta)
2024-07-15 06:11:44,215 DEBUG:on stmt: wait = arg(6, name=wait)
2024-07-15 06:11:44,216 DEBUG:on stmt: peaks = arg(7, name=peaks)
2024-07-15 06:11:44,216 DEBUG:on stmt: $const6.1 = const(int, 0)
2024-07-15 06:11:44,216 DEBUG:on stmt: $8binary_subscr.2 = static_getitem(value=x, index=0, index_var=$const6.1, fn=<built-in function getitem>)
2024-07-15 06:11:44,216 DEBUG:on stmt: $18load_global.3 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:44,216 DEBUG:on stmt: $30load_attr.5 = getattr(value=$18load_global.3, attr=max)
2024-07-15 06:11:44,216 DEBUG:on stmt: $const42.7 = const(NoneType, None)
2024-07-15 06:11:44,216 DEBUG:on stmt: $44load_global.8 = global(min: <built-in function min>)
2024-07-15 06:11:44,216 DEBUG:on stmt: $60load_attr.12 = getattr(value=x, attr=shape)
2024-07-15 06:11:44,216 DEBUG:on stmt: $const70.13 = const(int, 0)
2024-07-15 06:11:44,216 DEBUG:on stmt: $72binary_subscr.14 = static_getitem(value=$60load_attr.12, index=0, index_var=$const70.13, fn=<built-in function getitem>)
2024-07-15 06:11:44,216 DEBUG:on stmt: $86call.15 = call $44load_global.8(post_max, $72binary_subscr.14, func=$44load_global.8, args=[Var(post_max, utils.py:1209), Var($72binary_subscr.14, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:44,216 DEBUG:on stmt: $96build_slice.16 = global(slice: <class 'slice'>)
2024-07-15 06:11:44,216 DEBUG:on stmt: $96build_slice.17 = call $96build_slice.16($const42.7, $86call.15, func=$96build_slice.16, args=(Var($const42.7, utils.py:1221), Var($86call.15, utils.py:1221)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:44,216 DEBUG:on stmt: $98binary_subscr.18 = getitem(value=x, index=$96build_slice.17, fn=<built-in function getitem>)
2024-07-15 06:11:44,216 DEBUG:on stmt: $112call.19 = call $30load_attr.5($98binary_subscr.18, func=$30load_attr.5, args=[Var($98binary_subscr.18, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:44,216 DEBUG:on stmt: $122compare_op.20 = $8binary_subscr.2 >= $112call.19
2024-07-15 06:11:44,216 DEBUG:on stmt: $const130.22 = const(int, 0)
2024-07-15 06:11:44,216 DEBUG:on stmt: peaks[0] = $122compare_op.20
2024-07-15 06:11:44,216 DEBUG:on stmt: $const138.24 = const(int, 0)
2024-07-15 06:11:44,216 DEBUG:on stmt: $144binary_subscr.25 = static_getitem(value=peaks, index=0, index_var=$const138.24, fn=<built-in function getitem>)
2024-07-15 06:11:44,216 DEBUG:on stmt: $const156.27 = const(int, 0)
2024-07-15 06:11:44,216 DEBUG:on stmt: $158binary_subscr.28 = static_getitem(value=x, index=0, index_var=$const156.27, fn=<built-in function getitem>)
2024-07-15 06:11:44,216 DEBUG:on stmt: $168load_global.29 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:44,216 DEBUG:on stmt: $180load_attr.31 = getattr(value=$168load_global.29, attr=mean)
2024-07-15 06:11:44,216 DEBUG:on stmt: $const192.33 = const(NoneType, None)
2024-07-15 06:11:44,216 DEBUG:on stmt: $194load_global.34 = global(min: <built-in function min>)
2024-07-15 06:11:44,216 DEBUG:on stmt: $210load_attr.38 = getattr(value=x, attr=shape)
2024-07-15 06:11:44,216 DEBUG:on stmt: $const220.39 = const(int, 0)
2024-07-15 06:11:44,216 DEBUG:on stmt: $222binary_subscr.40 = static_getitem(value=$210load_attr.38, index=0, index_var=$const220.39, fn=<built-in function getitem>)
2024-07-15 06:11:44,216 DEBUG:on stmt: $236call.41 = call $194load_global.34(post_avg, $222binary_subscr.40, func=$194load_global.34, args=[Var(post_avg, utils.py:1209), Var($222binary_subscr.40, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:44,216 DEBUG:on stmt: $246build_slice.42 = global(slice: <class 'slice'>)
2024-07-15 06:11:44,216 DEBUG:on stmt: $246build_slice.43 = call $246build_slice.42($const192.33, $236call.41, func=$246build_slice.42, args=(Var($const192.33, utils.py:1222), Var($236call.41, utils.py:1222)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:44,216 DEBUG:on stmt: $248binary_subscr.44 = getitem(value=x, index=$246build_slice.43, fn=<built-in function getitem>)
2024-07-15 06:11:44,216 DEBUG:on stmt: $262call.45 = call $180load_attr.31($248binary_subscr.44, func=$180load_attr.31, args=[Var($248binary_subscr.44, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:44,217 DEBUG:on stmt: $binop_add274.47 = $262call.45 + delta
2024-07-15 06:11:44,217 DEBUG:on stmt: $278compare_op.48 = $158binary_subscr.28 >= $binop_add274.47
2024-07-15 06:11:44,217 DEBUG:on stmt: $binop_iand284.49 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$144binary_subscr.25, rhs=$278compare_op.48, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:44,217 DEBUG:on stmt: peaks[0] = $binop_iand284.49
2024-07-15 06:11:44,217 DEBUG:on stmt: $const298.51 = const(int, 0)
2024-07-15 06:11:44,217 DEBUG:on stmt: $300binary_subscr.52 = static_getitem(value=peaks, index=0, index_var=$const298.51, fn=<built-in function getitem>)
2024-07-15 06:11:44,217 DEBUG:on stmt: bool310 = global(bool: <class 'bool'>)
2024-07-15 06:11:44,217 DEBUG:on stmt: $310pred = call bool310($300binary_subscr.52, func=bool310, args=(Var($300binary_subscr.52, utils.py:1224),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:44,217 DEBUG:on stmt: branch $310pred, 312, 324
2024-07-15 06:11:44,217 DEBUG:==== SSA block rewrite pass on 312
2024-07-15 06:11:44,217 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5D46390>
2024-07-15 06:11:44,217 DEBUG:on stmt: $const314.1 = const(int, 1)
2024-07-15 06:11:44,217 DEBUG:on stmt: n = wait + $const314.1
2024-07-15 06:11:44,217 DEBUG:first assign: n
2024-07-15 06:11:44,217 DEBUG:replaced with: n = wait + $const314.1
2024-07-15 06:11:44,217 DEBUG:on stmt: jump 328
2024-07-15 06:11:44,217 DEBUG:==== SSA block rewrite pass on 324
2024-07-15 06:11:44,217 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5D46390>
2024-07-15 06:11:44,217 DEBUG:on stmt: n = const(int, 1)
2024-07-15 06:11:44,217 DEBUG:replaced with: n.1 = const(int, 1)
2024-07-15 06:11:44,217 DEBUG:on stmt: jump 328
2024-07-15 06:11:44,217 DEBUG:==== SSA block rewrite pass on 328
2024-07-15 06:11:44,217 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5D46390>
2024-07-15 06:11:44,217 DEBUG:on stmt: $332load_attr.2 = getattr(value=x, attr=shape)
2024-07-15 06:11:44,217 DEBUG:on stmt: $const342.3 = const(int, 0)
2024-07-15 06:11:44,217 DEBUG:on stmt: $344binary_subscr.4 = static_getitem(value=$332load_attr.2, index=0, index_var=$const342.3, fn=<built-in function getitem>)
2024-07-15 06:11:44,217 DEBUG:on stmt: $354compare_op.5 = n < $344binary_subscr.4
2024-07-15 06:11:44,217 DEBUG:on stmt: bool360 = global(bool: <class 'bool'>)
2024-07-15 06:11:44,217 DEBUG:on stmt: $360pred = call bool360($354compare_op.5, func=bool360, args=(Var($354compare_op.5, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:44,217 DEBUG:on stmt: branch $360pred, 362, 852
2024-07-15 06:11:44,217 DEBUG:==== SSA block rewrite pass on 362
2024-07-15 06:11:44,217 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5D46390>
2024-07-15 06:11:44,217 DEBUG:on stmt: $362load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:44,217 DEBUG:on stmt: $374load_attr.2 = getattr(value=$362load_global.0, attr=max)
2024-07-15 06:11:44,217 DEBUG:on stmt: $386load_global.4 = global(max: <built-in function max>)
2024-07-15 06:11:44,218 DEBUG:on stmt: $const398.6 = const(int, 0)
2024-07-15 06:11:44,218 DEBUG:on stmt: $binop_sub404.9 = n - pre_max
2024-07-15 06:11:44,218 DEBUG:on stmt: $412call.10 = call $386load_global.4($const398.6, $binop_sub404.9, func=$386load_global.4, args=[Var($const398.6, utils.py:1230), Var($binop_sub404.9, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:44,218 DEBUG:on stmt: $422load_global.11 = global(min: <built-in function min>)
2024-07-15 06:11:44,218 DEBUG:on stmt: $binop_add438.15 = n + post_max
2024-07-15 06:11:44,218 DEBUG:on stmt: $444load_attr.17 = getattr(value=x, attr=shape)
2024-07-15 06:11:44,218 DEBUG:on stmt: $const454.18 = const(int, 0)
2024-07-15 06:11:44,218 DEBUG:on stmt: $456binary_subscr.19 = static_getitem(value=$444load_attr.17, index=0, index_var=$const454.18, fn=<built-in function getitem>)
2024-07-15 06:11:44,218 DEBUG:on stmt: $470call.20 = call $422load_global.11($binop_add438.15, $456binary_subscr.19, func=$422load_global.11, args=[Var($binop_add438.15, utils.py:1230), Var($456binary_subscr.19, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:44,218 DEBUG:on stmt: $480build_slice.21 = global(slice: <class 'slice'>)
2024-07-15 06:11:44,218 DEBUG:on stmt: $480build_slice.22 = call $480build_slice.21($412call.10, $470call.20, func=$480build_slice.21, args=(Var($412call.10, utils.py:1230), Var($470call.20, utils.py:1230)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:44,218 DEBUG:on stmt: $482binary_subscr.23 = getitem(value=x, index=$480build_slice.22, fn=<built-in function getitem>)
2024-07-15 06:11:44,218 DEBUG:on stmt: maxn = call $374load_attr.2($482binary_subscr.23, func=$374load_attr.2, args=[Var($482binary_subscr.23, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:44,218 DEBUG:on stmt: $512binary_subscr.27 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-07-15 06:11:44,218 DEBUG:on stmt: $524compare_op.29 = $512binary_subscr.27 == maxn
2024-07-15 06:11:44,218 DEBUG:on stmt: peaks[n] = $524compare_op.29
2024-07-15 06:11:44,218 DEBUG:on stmt: $542binary_subscr.34 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-07-15 06:11:44,218 DEBUG:on stmt: bool552 = global(bool: <class 'bool'>)
2024-07-15 06:11:44,218 DEBUG:on stmt: $552pred = call bool552($542binary_subscr.34, func=bool552, args=(Var($542binary_subscr.34, utils.py:1235),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:44,218 DEBUG:on stmt: branch $552pred, 566, 554
2024-07-15 06:11:44,218 DEBUG:==== SSA block rewrite pass on 554
2024-07-15 06:11:44,218 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5D46390>
2024-07-15 06:11:44,218 DEBUG:on stmt: $const556.1 = const(int, 1)
2024-07-15 06:11:44,218 DEBUG:on stmt: $binop_iadd558.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const556.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:44,218 DEBUG:on stmt: n = $binop_iadd558.2
2024-07-15 06:11:44,218 DEBUG:replaced with: n.2 = $binop_iadd558.2
2024-07-15 06:11:44,218 DEBUG:on stmt: jump 853
2024-07-15 06:11:44,218 DEBUG:==== SSA block rewrite pass on 566
2024-07-15 06:11:44,218 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5D46390>
2024-07-15 06:11:44,218 DEBUG:on stmt: $566load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:44,218 DEBUG:on stmt: $578load_attr.2 = getattr(value=$566load_global.0, attr=mean)
2024-07-15 06:11:44,218 DEBUG:on stmt: $590load_global.4 = global(max: <built-in function max>)
2024-07-15 06:11:44,218 DEBUG:on stmt: $const602.6 = const(int, 0)
2024-07-15 06:11:44,218 DEBUG:on stmt: $binop_sub608.9 = n - pre_avg
2024-07-15 06:11:44,218 DEBUG:on stmt: $616call.10 = call $590load_global.4($const602.6, $binop_sub608.9, func=$590load_global.4, args=[Var($const602.6, utils.py:1239), Var($binop_sub608.9, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:44,219 DEBUG:on stmt: $626load_global.11 = global(min: <built-in function min>)
2024-07-15 06:11:44,219 DEBUG:on stmt: $binop_add642.15 = n + post_avg
2024-07-15 06:11:44,219 DEBUG:on stmt: $648load_attr.17 = getattr(value=x, attr=shape)
2024-07-15 06:11:44,219 DEBUG:on stmt: $const658.18 = const(int, 0)
2024-07-15 06:11:44,219 DEBUG:on stmt: $660binary_subscr.19 = static_getitem(value=$648load_attr.17, index=0, index_var=$const658.18, fn=<built-in function getitem>)
2024-07-15 06:11:44,219 DEBUG:on stmt: $674call.20 = call $626load_global.11($binop_add642.15, $660binary_subscr.19, func=$626load_global.11, args=[Var($binop_add642.15, utils.py:1239), Var($660binary_subscr.19, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:44,219 DEBUG:on stmt: $684build_slice.21 = global(slice: <class 'slice'>)
2024-07-15 06:11:44,219 DEBUG:on stmt: $684build_slice.22 = call $684build_slice.21($616call.10, $674call.20, func=$684build_slice.21, args=(Var($616call.10, utils.py:1239), Var($674call.20, utils.py:1239)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:44,219 DEBUG:on stmt: $686binary_subscr.23 = getitem(value=x, index=$684build_slice.22, fn=<built-in function getitem>)
2024-07-15 06:11:44,219 DEBUG:on stmt: avgn = call $578load_attr.2($686binary_subscr.23, func=$578load_attr.2, args=[Var($686binary_subscr.23, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:44,219 DEBUG:on stmt: $720binary_subscr.27 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-07-15 06:11:44,219 DEBUG:on stmt: $734binary_subscr.30 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-07-15 06:11:44,219 DEBUG:on stmt: $binop_add748.33 = avgn + delta
2024-07-15 06:11:44,219 DEBUG:on stmt: $752compare_op.34 = $734binary_subscr.30 >= $binop_add748.33
2024-07-15 06:11:44,219 DEBUG:on stmt: $binop_iand758.35 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$720binary_subscr.27, rhs=$752compare_op.34, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:44,219 DEBUG:on stmt: peaks[n] = $binop_iand758.35
2024-07-15 06:11:44,219 DEBUG:on stmt: $774binary_subscr.38 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-07-15 06:11:44,219 DEBUG:on stmt: bool784 = global(bool: <class 'bool'>)
2024-07-15 06:11:44,219 DEBUG:on stmt: $784pred = call bool784($774binary_subscr.38, func=bool784, args=(Var($774binary_subscr.38, utils.py:1242),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:44,219 DEBUG:on stmt: branch $784pred, 798, 786
2024-07-15 06:11:44,219 DEBUG:==== SSA block rewrite pass on 786
2024-07-15 06:11:44,219 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5D46390>
2024-07-15 06:11:44,219 DEBUG:on stmt: $const788.1 = const(int, 1)
2024-07-15 06:11:44,219 DEBUG:on stmt: $binop_iadd790.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const788.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:44,219 DEBUG:on stmt: n = $binop_iadd790.2
2024-07-15 06:11:44,219 DEBUG:replaced with: n.3 = $binop_iadd790.2
2024-07-15 06:11:44,219 DEBUG:on stmt: jump 853
2024-07-15 06:11:44,219 DEBUG:==== SSA block rewrite pass on 798
2024-07-15 06:11:44,219 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5D46390>
2024-07-15 06:11:44,219 DEBUG:on stmt: $const802.2 = const(int, 1)
2024-07-15 06:11:44,219 DEBUG:on stmt: $binop_add804.3 = wait + $const802.2
2024-07-15 06:11:44,219 DEBUG:on stmt: $binop_iadd808.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$binop_add804.3, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:44,219 DEBUG:on stmt: n = $binop_iadd808.4
2024-07-15 06:11:44,219 DEBUG:replaced with: n.4 = $binop_iadd808.4
2024-07-15 06:11:44,219 DEBUG:on stmt: $818load_attr.7 = getattr(value=x, attr=shape)
2024-07-15 06:11:44,220 DEBUG:on stmt: $const828.8 = const(int, 0)
2024-07-15 06:11:44,220 DEBUG:on stmt: $830binary_subscr.9 = static_getitem(value=$818load_attr.7, index=0, index_var=$const828.8, fn=<built-in function getitem>)
2024-07-15 06:11:44,220 DEBUG:on stmt: $840compare_op.10 = n < $830binary_subscr.9
2024-07-15 06:11:44,220 DEBUG:on stmt: bool846 = global(bool: <class 'bool'>)
2024-07-15 06:11:44,220 DEBUG:on stmt: $846pred = call bool846($840compare_op.10, func=bool846, args=(Var($840compare_op.10, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:44,220 DEBUG:on stmt: branch $846pred, 362, 848
2024-07-15 06:11:44,220 DEBUG:==== SSA block rewrite pass on 848
2024-07-15 06:11:44,220 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5D46390>
2024-07-15 06:11:44,220 DEBUG:on stmt: $const848.0 = const(NoneType, None)
2024-07-15 06:11:44,220 DEBUG:on stmt: $850return_value.1 = cast(value=$const848.0)
2024-07-15 06:11:44,220 DEBUG:on stmt: return $850return_value.1
2024-07-15 06:11:44,220 DEBUG:==== SSA block rewrite pass on 852
2024-07-15 06:11:44,220 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5D46390>
2024-07-15 06:11:44,220 DEBUG:on stmt: $const852.0 = const(NoneType, None)
2024-07-15 06:11:44,220 DEBUG:on stmt: $854return_value.1 = cast(value=$const852.0)
2024-07-15 06:11:44,220 DEBUG:on stmt: return $854return_value.1
2024-07-15 06:11:44,220 DEBUG:==== SSA block rewrite pass on 853
2024-07-15 06:11:44,220 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5D46390>
2024-07-15 06:11:44,220 DEBUG:on stmt: jump 328
2024-07-15 06:11:44,220 DEBUG:Replaced assignments: defaultdict(<class 'list'>,
            {312: [<numba.core.ir.Assign object at 0x00000221B5D44F10>],
             324: [<numba.core.ir.Assign object at 0x00000221B5D44710>],
             554: [<numba.core.ir.Assign object at 0x00000221B5D462D0>],
             786: [<numba.core.ir.Assign object at 0x00000221B5D45D50>],
             798: [<numba.core.ir.Assign object at 0x00000221B5D47290>]})
2024-07-15 06:11:44,220 DEBUG:==== SSA block rewrite pass on 0
2024-07-15 06:11:44,220 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B6A1F390>
2024-07-15 06:11:44,220 DEBUG:on stmt: x = arg(0, name=x)
2024-07-15 06:11:44,220 DEBUG:on stmt: pre_max = arg(1, name=pre_max)
2024-07-15 06:11:44,220 DEBUG:on stmt: post_max = arg(2, name=post_max)
2024-07-15 06:11:44,220 DEBUG:on stmt: pre_avg = arg(3, name=pre_avg)
2024-07-15 06:11:44,220 DEBUG:on stmt: post_avg = arg(4, name=post_avg)
2024-07-15 06:11:44,220 DEBUG:on stmt: delta = arg(5, name=delta)
2024-07-15 06:11:44,220 DEBUG:on stmt: wait = arg(6, name=wait)
2024-07-15 06:11:44,220 DEBUG:on stmt: peaks = arg(7, name=peaks)
2024-07-15 06:11:44,220 DEBUG:on stmt: $const6.1 = const(int, 0)
2024-07-15 06:11:44,220 DEBUG:on stmt: $8binary_subscr.2 = static_getitem(value=x, index=0, index_var=$const6.1, fn=<built-in function getitem>)
2024-07-15 06:11:44,220 DEBUG:on stmt: $18load_global.3 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:44,220 DEBUG:on stmt: $30load_attr.5 = getattr(value=$18load_global.3, attr=max)
2024-07-15 06:11:44,221 DEBUG:on stmt: $const42.7 = const(NoneType, None)
2024-07-15 06:11:44,221 DEBUG:on stmt: $44load_global.8 = global(min: <built-in function min>)
2024-07-15 06:11:44,221 DEBUG:on stmt: $60load_attr.12 = getattr(value=x, attr=shape)
2024-07-15 06:11:44,221 DEBUG:on stmt: $const70.13 = const(int, 0)
2024-07-15 06:11:44,221 DEBUG:on stmt: $72binary_subscr.14 = static_getitem(value=$60load_attr.12, index=0, index_var=$const70.13, fn=<built-in function getitem>)
2024-07-15 06:11:44,221 DEBUG:on stmt: $86call.15 = call $44load_global.8(post_max, $72binary_subscr.14, func=$44load_global.8, args=[Var(post_max, utils.py:1209), Var($72binary_subscr.14, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:44,221 DEBUG:on stmt: $96build_slice.16 = global(slice: <class 'slice'>)
2024-07-15 06:11:44,221 DEBUG:on stmt: $96build_slice.17 = call $96build_slice.16($const42.7, $86call.15, func=$96build_slice.16, args=(Var($const42.7, utils.py:1221), Var($86call.15, utils.py:1221)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:44,221 DEBUG:on stmt: $98binary_subscr.18 = getitem(value=x, index=$96build_slice.17, fn=<built-in function getitem>)
2024-07-15 06:11:44,221 DEBUG:on stmt: $112call.19 = call $30load_attr.5($98binary_subscr.18, func=$30load_attr.5, args=[Var($98binary_subscr.18, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:44,221 DEBUG:on stmt: $122compare_op.20 = $8binary_subscr.2 >= $112call.19
2024-07-15 06:11:44,221 DEBUG:on stmt: $const130.22 = const(int, 0)
2024-07-15 06:11:44,221 DEBUG:on stmt: peaks[0] = $122compare_op.20
2024-07-15 06:11:44,221 DEBUG:on stmt: $const138.24 = const(int, 0)
2024-07-15 06:11:44,221 DEBUG:on stmt: $144binary_subscr.25 = static_getitem(value=peaks, index=0, index_var=$const138.24, fn=<built-in function getitem>)
2024-07-15 06:11:44,221 DEBUG:on stmt: $const156.27 = const(int, 0)
2024-07-15 06:11:44,221 DEBUG:on stmt: $158binary_subscr.28 = static_getitem(value=x, index=0, index_var=$const156.27, fn=<built-in function getitem>)
2024-07-15 06:11:44,221 DEBUG:on stmt: $168load_global.29 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:44,221 DEBUG:on stmt: $180load_attr.31 = getattr(value=$168load_global.29, attr=mean)
2024-07-15 06:11:44,221 DEBUG:on stmt: $const192.33 = const(NoneType, None)
2024-07-15 06:11:44,221 DEBUG:on stmt: $194load_global.34 = global(min: <built-in function min>)
2024-07-15 06:11:44,221 DEBUG:on stmt: $210load_attr.38 = getattr(value=x, attr=shape)
2024-07-15 06:11:44,221 DEBUG:on stmt: $const220.39 = const(int, 0)
2024-07-15 06:11:44,221 DEBUG:on stmt: $222binary_subscr.40 = static_getitem(value=$210load_attr.38, index=0, index_var=$const220.39, fn=<built-in function getitem>)
2024-07-15 06:11:44,221 DEBUG:on stmt: $236call.41 = call $194load_global.34(post_avg, $222binary_subscr.40, func=$194load_global.34, args=[Var(post_avg, utils.py:1209), Var($222binary_subscr.40, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:44,221 DEBUG:on stmt: $246build_slice.42 = global(slice: <class 'slice'>)
2024-07-15 06:11:44,221 DEBUG:on stmt: $246build_slice.43 = call $246build_slice.42($const192.33, $236call.41, func=$246build_slice.42, args=(Var($const192.33, utils.py:1222), Var($236call.41, utils.py:1222)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:44,221 DEBUG:on stmt: $248binary_subscr.44 = getitem(value=x, index=$246build_slice.43, fn=<built-in function getitem>)
2024-07-15 06:11:44,221 DEBUG:on stmt: $262call.45 = call $180load_attr.31($248binary_subscr.44, func=$180load_attr.31, args=[Var($248binary_subscr.44, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:44,221 DEBUG:on stmt: $binop_add274.47 = $262call.45 + delta
2024-07-15 06:11:44,222 DEBUG:on stmt: $278compare_op.48 = $158binary_subscr.28 >= $binop_add274.47
2024-07-15 06:11:44,222 DEBUG:on stmt: $binop_iand284.49 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$144binary_subscr.25, rhs=$278compare_op.48, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:44,222 DEBUG:on stmt: peaks[0] = $binop_iand284.49
2024-07-15 06:11:44,222 DEBUG:on stmt: $const298.51 = const(int, 0)
2024-07-15 06:11:44,222 DEBUG:on stmt: $300binary_subscr.52 = static_getitem(value=peaks, index=0, index_var=$const298.51, fn=<built-in function getitem>)
2024-07-15 06:11:44,222 DEBUG:on stmt: bool310 = global(bool: <class 'bool'>)
2024-07-15 06:11:44,222 DEBUG:on stmt: $310pred = call bool310($300binary_subscr.52, func=bool310, args=(Var($300binary_subscr.52, utils.py:1224),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:44,222 DEBUG:on stmt: branch $310pred, 312, 324
2024-07-15 06:11:44,222 DEBUG:==== SSA block rewrite pass on 312
2024-07-15 06:11:44,222 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B6A1F390>
2024-07-15 06:11:44,222 DEBUG:on stmt: $const314.1 = const(int, 1)
2024-07-15 06:11:44,222 DEBUG:on stmt: n = wait + $const314.1
2024-07-15 06:11:44,222 DEBUG:on stmt: jump 328
2024-07-15 06:11:44,222 DEBUG:==== SSA block rewrite pass on 324
2024-07-15 06:11:44,222 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B6A1F390>
2024-07-15 06:11:44,222 DEBUG:on stmt: n.1 = const(int, 1)
2024-07-15 06:11:44,222 DEBUG:on stmt: jump 328
2024-07-15 06:11:44,222 DEBUG:==== SSA block rewrite pass on 328
2024-07-15 06:11:44,222 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B6A1F390>
2024-07-15 06:11:44,222 DEBUG:on stmt: $332load_attr.2 = getattr(value=x, attr=shape)
2024-07-15 06:11:44,222 DEBUG:on stmt: $const342.3 = const(int, 0)
2024-07-15 06:11:44,222 DEBUG:on stmt: $344binary_subscr.4 = static_getitem(value=$332load_attr.2, index=0, index_var=$const342.3, fn=<built-in function getitem>)
2024-07-15 06:11:44,222 DEBUG:on stmt: $354compare_op.5 = n < $344binary_subscr.4
2024-07-15 06:11:44,222 DEBUG:find_def var='n' stmt=$354compare_op.5 = n < $344binary_subscr.4
2024-07-15 06:11:44,222 DEBUG:find_def_from_top label 328
2024-07-15 06:11:44,222 DEBUG:insert phi node n.5 = phi(incoming_values=[], incoming_blocks=[]) at 328
2024-07-15 06:11:44,222 DEBUG:find_def_from_bottom label 312
2024-07-15 06:11:44,222 DEBUG:incoming_def n = wait + $const314.1
2024-07-15 06:11:44,222 DEBUG:find_def_from_bottom label 324
2024-07-15 06:11:44,222 DEBUG:incoming_def n.1 = const(int, 1)
2024-07-15 06:11:44,222 DEBUG:find_def_from_bottom label 853
2024-07-15 06:11:44,222 DEBUG:find_def_from_top label 853
2024-07-15 06:11:44,222 DEBUG:insert phi node n.6 = phi(incoming_values=[], incoming_blocks=[]) at 853
2024-07-15 06:11:44,223 DEBUG:find_def_from_bottom label 554
2024-07-15 06:11:44,223 DEBUG:incoming_def n.2 = $binop_iadd558.2
2024-07-15 06:11:44,223 DEBUG:find_def_from_bottom label 786
2024-07-15 06:11:44,223 DEBUG:incoming_def n.3 = $binop_iadd790.2
2024-07-15 06:11:44,223 DEBUG:incoming_def n.6 = phi(incoming_values=[Var(n.2, utils.py:1236), Var(n.3, utils.py:1243)], incoming_blocks=[554, 786])
2024-07-15 06:11:44,223 DEBUG:replaced with: $354compare_op.5 = n.5 < $344binary_subscr.4
2024-07-15 06:11:44,223 DEBUG:on stmt: bool360 = global(bool: <class 'bool'>)
2024-07-15 06:11:44,223 DEBUG:on stmt: $360pred = call bool360($354compare_op.5, func=bool360, args=(Var($354compare_op.5, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:44,223 DEBUG:on stmt: branch $360pred, 362, 852
2024-07-15 06:11:44,223 DEBUG:==== SSA block rewrite pass on 362
2024-07-15 06:11:44,223 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B6A1F390>
2024-07-15 06:11:44,223 DEBUG:on stmt: $362load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:44,223 DEBUG:on stmt: $374load_attr.2 = getattr(value=$362load_global.0, attr=max)
2024-07-15 06:11:44,223 DEBUG:on stmt: $386load_global.4 = global(max: <built-in function max>)
2024-07-15 06:11:44,223 DEBUG:on stmt: $const398.6 = const(int, 0)
2024-07-15 06:11:44,223 DEBUG:on stmt: $binop_sub404.9 = n - pre_max
2024-07-15 06:11:44,223 DEBUG:find_def var='n' stmt=$binop_sub404.9 = n - pre_max
2024-07-15 06:11:44,223 DEBUG:find_def_from_top label 362
2024-07-15 06:11:44,223 DEBUG:insert phi node n.7 = phi(incoming_values=[], incoming_blocks=[]) at 362
2024-07-15 06:11:44,223 DEBUG:find_def_from_bottom label 328
2024-07-15 06:11:44,223 DEBUG:incoming_def n.5 = phi(incoming_values=[Var(n, utils.py:1225), Var(n.1, utils.py:1227), Var(n.6, utils.py:1229)], incoming_blocks=[312, 324, 853])
2024-07-15 06:11:44,223 DEBUG:find_def_from_bottom label 798
2024-07-15 06:11:44,223 DEBUG:incoming_def n.4 = $binop_iadd808.4
2024-07-15 06:11:44,223 DEBUG:replaced with: $binop_sub404.9 = n.7 - pre_max
2024-07-15 06:11:44,223 DEBUG:on stmt: $412call.10 = call $386load_global.4($const398.6, $binop_sub404.9, func=$386load_global.4, args=[Var($const398.6, utils.py:1230), Var($binop_sub404.9, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:44,223 DEBUG:on stmt: $422load_global.11 = global(min: <built-in function min>)
2024-07-15 06:11:44,223 DEBUG:on stmt: $binop_add438.15 = n + post_max
2024-07-15 06:11:44,223 DEBUG:find_def var='n' stmt=$binop_add438.15 = n + post_max
2024-07-15 06:11:44,223 DEBUG:replaced with: $binop_add438.15 = n.7 + post_max
2024-07-15 06:11:44,224 DEBUG:on stmt: $444load_attr.17 = getattr(value=x, attr=shape)
2024-07-15 06:11:44,224 DEBUG:on stmt: $const454.18 = const(int, 0)
2024-07-15 06:11:44,224 DEBUG:on stmt: $456binary_subscr.19 = static_getitem(value=$444load_attr.17, index=0, index_var=$const454.18, fn=<built-in function getitem>)
2024-07-15 06:11:44,224 DEBUG:on stmt: $470call.20 = call $422load_global.11($binop_add438.15, $456binary_subscr.19, func=$422load_global.11, args=[Var($binop_add438.15, utils.py:1230), Var($456binary_subscr.19, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:44,224 DEBUG:on stmt: $480build_slice.21 = global(slice: <class 'slice'>)
2024-07-15 06:11:44,224 DEBUG:on stmt: $480build_slice.22 = call $480build_slice.21($412call.10, $470call.20, func=$480build_slice.21, args=(Var($412call.10, utils.py:1230), Var($470call.20, utils.py:1230)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:44,224 DEBUG:on stmt: $482binary_subscr.23 = getitem(value=x, index=$480build_slice.22, fn=<built-in function getitem>)
2024-07-15 06:11:44,224 DEBUG:on stmt: maxn = call $374load_attr.2($482binary_subscr.23, func=$374load_attr.2, args=[Var($482binary_subscr.23, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:44,224 DEBUG:on stmt: $512binary_subscr.27 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-07-15 06:11:44,224 DEBUG:find_def var='n' stmt=$512binary_subscr.27 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-07-15 06:11:44,224 DEBUG:replaced with: $512binary_subscr.27 = getitem(value=x, index=n.7, fn=<built-in function getitem>)
2024-07-15 06:11:44,224 DEBUG:on stmt: $524compare_op.29 = $512binary_subscr.27 == maxn
2024-07-15 06:11:44,224 DEBUG:on stmt: peaks[n] = $524compare_op.29
2024-07-15 06:11:44,224 DEBUG:find_def var='n' stmt=peaks[n] = $524compare_op.29
2024-07-15 06:11:44,224 DEBUG:replaced with: peaks[n.7] = $524compare_op.29
2024-07-15 06:11:44,224 DEBUG:on stmt: $542binary_subscr.34 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-07-15 06:11:44,224 DEBUG:find_def var='n' stmt=$542binary_subscr.34 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-07-15 06:11:44,224 DEBUG:replaced with: $542binary_subscr.34 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)
2024-07-15 06:11:44,224 DEBUG:on stmt: bool552 = global(bool: <class 'bool'>)
2024-07-15 06:11:44,224 DEBUG:on stmt: $552pred = call bool552($542binary_subscr.34, func=bool552, args=(Var($542binary_subscr.34, utils.py:1235),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:44,224 DEBUG:on stmt: branch $552pred, 566, 554
2024-07-15 06:11:44,224 DEBUG:==== SSA block rewrite pass on 554
2024-07-15 06:11:44,224 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B6A1F390>
2024-07-15 06:11:44,224 DEBUG:on stmt: $const556.1 = const(int, 1)
2024-07-15 06:11:44,224 DEBUG:on stmt: $binop_iadd558.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const556.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:44,224 DEBUG:find_def var='n' stmt=$binop_iadd558.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const556.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:44,224 DEBUG:find_def_from_top label 554
2024-07-15 06:11:44,224 DEBUG:idom 362 from label 554
2024-07-15 06:11:44,224 DEBUG:find_def_from_bottom label 362
2024-07-15 06:11:44,225 DEBUG:replaced with: $binop_iadd558.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$const556.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:44,225 DEBUG:on stmt: n.2 = $binop_iadd558.2
2024-07-15 06:11:44,225 DEBUG:on stmt: jump 853
2024-07-15 06:11:44,225 DEBUG:==== SSA block rewrite pass on 566
2024-07-15 06:11:44,225 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B6A1F390>
2024-07-15 06:11:44,225 DEBUG:on stmt: $566load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:44,225 DEBUG:on stmt: $578load_attr.2 = getattr(value=$566load_global.0, attr=mean)
2024-07-15 06:11:44,225 DEBUG:on stmt: $590load_global.4 = global(max: <built-in function max>)
2024-07-15 06:11:44,225 DEBUG:on stmt: $const602.6 = const(int, 0)
2024-07-15 06:11:44,225 DEBUG:on stmt: $binop_sub608.9 = n - pre_avg
2024-07-15 06:11:44,225 DEBUG:find_def var='n' stmt=$binop_sub608.9 = n - pre_avg
2024-07-15 06:11:44,225 DEBUG:find_def_from_top label 566
2024-07-15 06:11:44,225 DEBUG:idom 362 from label 566
2024-07-15 06:11:44,225 DEBUG:find_def_from_bottom label 362
2024-07-15 06:11:44,225 DEBUG:replaced with: $binop_sub608.9 = n.7 - pre_avg
2024-07-15 06:11:44,225 DEBUG:on stmt: $616call.10 = call $590load_global.4($const602.6, $binop_sub608.9, func=$590load_global.4, args=[Var($const602.6, utils.py:1239), Var($binop_sub608.9, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:44,225 DEBUG:on stmt: $626load_global.11 = global(min: <built-in function min>)
2024-07-15 06:11:44,225 DEBUG:on stmt: $binop_add642.15 = n + post_avg
2024-07-15 06:11:44,225 DEBUG:find_def var='n' stmt=$binop_add642.15 = n + post_avg
2024-07-15 06:11:44,225 DEBUG:find_def_from_top label 566
2024-07-15 06:11:44,225 DEBUG:idom 362 from label 566
2024-07-15 06:11:44,225 DEBUG:find_def_from_bottom label 362
2024-07-15 06:11:44,225 DEBUG:replaced with: $binop_add642.15 = n.7 + post_avg
2024-07-15 06:11:44,225 DEBUG:on stmt: $648load_attr.17 = getattr(value=x, attr=shape)
2024-07-15 06:11:44,225 DEBUG:on stmt: $const658.18 = const(int, 0)
2024-07-15 06:11:44,225 DEBUG:on stmt: $660binary_subscr.19 = static_getitem(value=$648load_attr.17, index=0, index_var=$const658.18, fn=<built-in function getitem>)
2024-07-15 06:11:44,225 DEBUG:on stmt: $674call.20 = call $626load_global.11($binop_add642.15, $660binary_subscr.19, func=$626load_global.11, args=[Var($binop_add642.15, utils.py:1239), Var($660binary_subscr.19, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:44,225 DEBUG:on stmt: $684build_slice.21 = global(slice: <class 'slice'>)
2024-07-15 06:11:44,225 DEBUG:on stmt: $684build_slice.22 = call $684build_slice.21($616call.10, $674call.20, func=$684build_slice.21, args=(Var($616call.10, utils.py:1239), Var($674call.20, utils.py:1239)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:44,225 DEBUG:on stmt: $686binary_subscr.23 = getitem(value=x, index=$684build_slice.22, fn=<built-in function getitem>)
2024-07-15 06:11:44,225 DEBUG:on stmt: avgn = call $578load_attr.2($686binary_subscr.23, func=$578load_attr.2, args=[Var($686binary_subscr.23, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:44,225 DEBUG:on stmt: $720binary_subscr.27 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-07-15 06:11:44,225 DEBUG:find_def var='n' stmt=$720binary_subscr.27 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-07-15 06:11:44,225 DEBUG:find_def_from_top label 566
2024-07-15 06:11:44,226 DEBUG:idom 362 from label 566
2024-07-15 06:11:44,226 DEBUG:find_def_from_bottom label 362
2024-07-15 06:11:44,226 DEBUG:replaced with: $720binary_subscr.27 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)
2024-07-15 06:11:44,226 DEBUG:on stmt: $734binary_subscr.30 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-07-15 06:11:44,226 DEBUG:find_def var='n' stmt=$734binary_subscr.30 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-07-15 06:11:44,226 DEBUG:find_def_from_top label 566
2024-07-15 06:11:44,226 DEBUG:idom 362 from label 566
2024-07-15 06:11:44,226 DEBUG:find_def_from_bottom label 362
2024-07-15 06:11:44,226 DEBUG:replaced with: $734binary_subscr.30 = getitem(value=x, index=n.7, fn=<built-in function getitem>)
2024-07-15 06:11:44,226 DEBUG:on stmt: $binop_add748.33 = avgn + delta
2024-07-15 06:11:44,226 DEBUG:on stmt: $752compare_op.34 = $734binary_subscr.30 >= $binop_add748.33
2024-07-15 06:11:44,226 DEBUG:on stmt: $binop_iand758.35 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$720binary_subscr.27, rhs=$752compare_op.34, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:44,226 DEBUG:on stmt: peaks[n] = $binop_iand758.35
2024-07-15 06:11:44,226 DEBUG:find_def var='n' stmt=peaks[n] = $binop_iand758.35
2024-07-15 06:11:44,226 DEBUG:find_def_from_top label 566
2024-07-15 06:11:44,226 DEBUG:idom 362 from label 566
2024-07-15 06:11:44,226 DEBUG:find_def_from_bottom label 362
2024-07-15 06:11:44,226 DEBUG:replaced with: peaks[n.7] = $binop_iand758.35
2024-07-15 06:11:44,226 DEBUG:on stmt: $774binary_subscr.38 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-07-15 06:11:44,226 DEBUG:find_def var='n' stmt=$774binary_subscr.38 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-07-15 06:11:44,226 DEBUG:find_def_from_top label 566
2024-07-15 06:11:44,226 DEBUG:idom 362 from label 566
2024-07-15 06:11:44,226 DEBUG:find_def_from_bottom label 362
2024-07-15 06:11:44,226 DEBUG:replaced with: $774binary_subscr.38 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)
2024-07-15 06:11:44,226 DEBUG:on stmt: bool784 = global(bool: <class 'bool'>)
2024-07-15 06:11:44,226 DEBUG:on stmt: $784pred = call bool784($774binary_subscr.38, func=bool784, args=(Var($774binary_subscr.38, utils.py:1242),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:44,226 DEBUG:on stmt: branch $784pred, 798, 786
2024-07-15 06:11:44,226 DEBUG:==== SSA block rewrite pass on 786
2024-07-15 06:11:44,226 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B6A1F390>
2024-07-15 06:11:44,226 DEBUG:on stmt: $const788.1 = const(int, 1)
2024-07-15 06:11:44,226 DEBUG:on stmt: $binop_iadd790.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const788.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:44,226 DEBUG:find_def var='n' stmt=$binop_iadd790.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const788.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:44,226 DEBUG:find_def_from_top label 786
2024-07-15 06:11:44,227 DEBUG:idom 566 from label 786
2024-07-15 06:11:44,227 DEBUG:find_def_from_bottom label 566
2024-07-15 06:11:44,227 DEBUG:find_def_from_top label 566
2024-07-15 06:11:44,227 DEBUG:idom 362 from label 566
2024-07-15 06:11:44,227 DEBUG:find_def_from_bottom label 362
2024-07-15 06:11:44,227 DEBUG:replaced with: $binop_iadd790.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$const788.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:44,227 DEBUG:on stmt: n.3 = $binop_iadd790.2
2024-07-15 06:11:44,227 DEBUG:on stmt: jump 853
2024-07-15 06:11:44,227 DEBUG:==== SSA block rewrite pass on 798
2024-07-15 06:11:44,227 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B6A1F390>
2024-07-15 06:11:44,227 DEBUG:on stmt: $const802.2 = const(int, 1)
2024-07-15 06:11:44,227 DEBUG:on stmt: $binop_add804.3 = wait + $const802.2
2024-07-15 06:11:44,227 DEBUG:on stmt: $binop_iadd808.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$binop_add804.3, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:44,227 DEBUG:find_def var='n' stmt=$binop_iadd808.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$binop_add804.3, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:44,227 DEBUG:find_def_from_top label 798
2024-07-15 06:11:44,227 DEBUG:idom 566 from label 798
2024-07-15 06:11:44,227 DEBUG:find_def_from_bottom label 566
2024-07-15 06:11:44,227 DEBUG:find_def_from_top label 566
2024-07-15 06:11:44,227 DEBUG:idom 362 from label 566
2024-07-15 06:11:44,227 DEBUG:find_def_from_bottom label 362
2024-07-15 06:11:44,227 DEBUG:replaced with: $binop_iadd808.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$binop_add804.3, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:44,227 DEBUG:on stmt: n.4 = $binop_iadd808.4
2024-07-15 06:11:44,227 DEBUG:on stmt: $818load_attr.7 = getattr(value=x, attr=shape)
2024-07-15 06:11:44,227 DEBUG:on stmt: $const828.8 = const(int, 0)
2024-07-15 06:11:44,227 DEBUG:on stmt: $830binary_subscr.9 = static_getitem(value=$818load_attr.7, index=0, index_var=$const828.8, fn=<built-in function getitem>)
2024-07-15 06:11:44,227 DEBUG:on stmt: $840compare_op.10 = n < $830binary_subscr.9
2024-07-15 06:11:44,227 DEBUG:find_def var='n' stmt=$840compare_op.10 = n < $830binary_subscr.9
2024-07-15 06:11:44,227 DEBUG:replaced with: $840compare_op.10 = n.4 < $830binary_subscr.9
2024-07-15 06:11:44,227 DEBUG:on stmt: bool846 = global(bool: <class 'bool'>)
2024-07-15 06:11:44,227 DEBUG:on stmt: $846pred = call bool846($840compare_op.10, func=bool846, args=(Var($840compare_op.10, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:44,227 DEBUG:on stmt: branch $846pred, 362, 848
2024-07-15 06:11:44,227 DEBUG:==== SSA block rewrite pass on 848
2024-07-15 06:11:44,228 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B6A1F390>
2024-07-15 06:11:44,228 DEBUG:on stmt: $const848.0 = const(NoneType, None)
2024-07-15 06:11:44,228 DEBUG:on stmt: $850return_value.1 = cast(value=$const848.0)
2024-07-15 06:11:44,228 DEBUG:on stmt: return $850return_value.1
2024-07-15 06:11:44,228 DEBUG:==== SSA block rewrite pass on 852
2024-07-15 06:11:44,228 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B6A1F390>
2024-07-15 06:11:44,228 DEBUG:on stmt: $const852.0 = const(NoneType, None)
2024-07-15 06:11:44,228 DEBUG:on stmt: $854return_value.1 = cast(value=$const852.0)
2024-07-15 06:11:44,228 DEBUG:on stmt: return $854return_value.1
2024-07-15 06:11:44,228 DEBUG:==== SSA block rewrite pass on 853
2024-07-15 06:11:44,228 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B6A1F390>
2024-07-15 06:11:44,228 DEBUG:on stmt: jump 328
2024-07-15 06:11:44,245 DEBUG:bytecode dump:
>          0	NOP(arg=None, lineno=570)
           2	COPY_FREE_VARS(arg=2, lineno=570)
           4	RESUME(arg=0, lineno=570)
           6	LOAD_FAST(arg=0, lineno=571)
           8	LOAD_ATTR(arg=0, lineno=571)
          18	LOAD_CONST(arg=1, lineno=571)
          20	COMPARE_OP(arg=2, lineno=571)
          26	POP_JUMP_FORWARD_IF_FALSE(arg=15, lineno=571)
          28	LOAD_GLOBAL(arg=3, lineno=572)
          40	LOAD_CONST(arg=2, lineno=572)
          42	PRECALL(arg=1, lineno=572)
          46	CALL(arg=1, lineno=572)
          56	RAISE_VARARGS(arg=1, lineno=572)
>         58	LOAD_GLOBAL(arg=5, lineno=575)
          70	LOAD_ATTR(arg=3, lineno=575)
          80	LOAD_FAST(arg=0, lineno=575)
          82	PRECALL(arg=1, lineno=575)
          86	CALL(arg=1, lineno=575)
          96	STORE_FAST(arg=1, lineno=575)
          98	LOAD_GLOBAL(arg=9, lineno=576)
         110	LOAD_FAST(arg=1, lineno=576)
         112	PRECALL(arg=1, lineno=576)
         116	CALL(arg=1, lineno=576)
         126	LOAD_METHOD(arg=5, lineno=576)
         148	LOAD_CONST(arg=1, lineno=576)
         150	PRECALL(arg=1, lineno=576)
         154	CALL(arg=1, lineno=576)
         164	STORE_FAST(arg=2, lineno=576)
         166	PUSH_NULL(arg=None, lineno=577)
         168	LOAD_DEREF(arg=6, lineno=577)
         170	LOAD_FAST(arg=2, lineno=577)
         172	PRECALL(arg=1, lineno=577)
         176	CALL(arg=1, lineno=577)
         186	POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=577)
         188	LOAD_FAST(arg=2, lineno=578)
         190	RETURN_VALUE(arg=None, lineno=578)
>        192	LOAD_FAST(arg=1, lineno=580)
         194	GET_ITER(arg=None, lineno=580)
>        196	FOR_ITER(arg=51, lineno=580)
         198	STORE_FAST(arg=3, lineno=580)
         200	LOAD_FAST(arg=3, lineno=581)
         202	LOAD_METHOD(arg=6, lineno=581)
         224	PRECALL(arg=0, lineno=581)
         228	CALL(arg=0, lineno=581)
         238	STORE_FAST(arg=4, lineno=581)
         240	PUSH_NULL(arg=None, lineno=582)
         242	LOAD_DEREF(arg=6, lineno=582)
         244	LOAD_FAST(arg=4, lineno=582)
         246	PRECALL(arg=1, lineno=582)
         250	CALL(arg=1, lineno=582)
         260	POP_JUMP_FORWARD_IF_FALSE(arg=4, lineno=582)
         262	LOAD_FAST(arg=4, lineno=583)
         264	SWAP(arg=2, lineno=583)
         266	POP_TOP(arg=None, lineno=583)
         268	RETURN_VALUE(arg=None, lineno=583)
>        270	PUSH_NULL(arg=None, lineno=584)
         272	LOAD_DEREF(arg=5, lineno=584)
         274	LOAD_FAST(arg=4, lineno=584)
         276	LOAD_FAST(arg=2, lineno=584)
         278	PRECALL(arg=2, lineno=584)
         282	CALL(arg=2, lineno=584)
         292	POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=584)
         294	LOAD_FAST(arg=4, lineno=585)
         296	STORE_FAST(arg=2, lineno=585)
>        298	JUMP_BACKWARD(arg=52, lineno=585)
>        300	LOAD_FAST(arg=2, lineno=586)
         302	RETURN_VALUE(arg=None, lineno=586)
2024-07-15 06:11:44,245 DEBUG:pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-15 06:11:44,245 DEBUG:stack: []
2024-07-15 06:11:44,245 DEBUG:state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-15 06:11:44,246 DEBUG:dispatch pc=0, inst=NOP(arg=None, lineno=570)
2024-07-15 06:11:44,246 DEBUG:stack []
2024-07-15 06:11:44,246 DEBUG:dispatch pc=2, inst=COPY_FREE_VARS(arg=2, lineno=570)
2024-07-15 06:11:44,246 DEBUG:stack []
2024-07-15 06:11:44,246 DEBUG:dispatch pc=4, inst=RESUME(arg=0, lineno=570)
2024-07-15 06:11:44,246 DEBUG:stack []
2024-07-15 06:11:44,246 DEBUG:dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=571)
2024-07-15 06:11:44,246 DEBUG:stack []
2024-07-15 06:11:44,246 DEBUG:dispatch pc=8, inst=LOAD_ATTR(arg=0, lineno=571)
2024-07-15 06:11:44,246 DEBUG:stack ['$a6.0']
2024-07-15 06:11:44,246 DEBUG:dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=571)
2024-07-15 06:11:44,246 DEBUG:stack ['$8load_attr.1']
2024-07-15 06:11:44,246 DEBUG:dispatch pc=20, inst=COMPARE_OP(arg=2, lineno=571)
2024-07-15 06:11:44,246 DEBUG:stack ['$8load_attr.1', '$const18.2']
2024-07-15 06:11:44,246 DEBUG:dispatch pc=26, inst=POP_JUMP_FORWARD_IF_FALSE(arg=15, lineno=571)
2024-07-15 06:11:44,246 DEBUG:stack ['$20compare_op.3']
2024-07-15 06:11:44,246 DEBUG:end state. edges=[Edge(pc=28, stack=(), blockstack=(), npush=0), Edge(pc=58, stack=(), blockstack=(), npush=0)]
2024-07-15 06:11:44,246 DEBUG:pending: deque([State(pc_initial=28 nstack_initial=0), State(pc_initial=58 nstack_initial=0)])
2024-07-15 06:11:44,246 DEBUG:stack: []
2024-07-15 06:11:44,246 DEBUG:state.pc_initial: State(pc_initial=28 nstack_initial=0)
2024-07-15 06:11:44,246 DEBUG:dispatch pc=28, inst=LOAD_GLOBAL(arg=3, lineno=572)
2024-07-15 06:11:44,246 DEBUG:stack []
2024-07-15 06:11:44,246 DEBUG:dispatch pc=40, inst=LOAD_CONST(arg=2, lineno=572)
2024-07-15 06:11:44,246 DEBUG:stack ['$null$28.1', '$28load_global.0']
2024-07-15 06:11:44,246 DEBUG:dispatch pc=42, inst=PRECALL(arg=1, lineno=572)
2024-07-15 06:11:44,246 DEBUG:stack ['$null$28.1', '$28load_global.0', '$const40.2']
2024-07-15 06:11:44,246 DEBUG:dispatch pc=46, inst=CALL(arg=1, lineno=572)
2024-07-15 06:11:44,246 DEBUG:stack ['$null$28.1', '$28load_global.0', '$const40.2']
2024-07-15 06:11:44,246 DEBUG:dispatch pc=56, inst=RAISE_VARARGS(arg=1, lineno=572)
2024-07-15 06:11:44,246 DEBUG:stack ['$46call.3']
2024-07-15 06:11:44,246 DEBUG:end state. edges=[]
2024-07-15 06:11:44,246 DEBUG:pending: deque([State(pc_initial=58 nstack_initial=0)])
2024-07-15 06:11:44,246 DEBUG:stack: []
2024-07-15 06:11:44,246 DEBUG:state.pc_initial: State(pc_initial=58 nstack_initial=0)
2024-07-15 06:11:44,246 DEBUG:dispatch pc=58, inst=LOAD_GLOBAL(arg=5, lineno=575)
2024-07-15 06:11:44,246 DEBUG:stack []
2024-07-15 06:11:44,246 DEBUG:dispatch pc=70, inst=LOAD_ATTR(arg=3, lineno=575)
2024-07-15 06:11:44,246 DEBUG:stack ['$null$58.1', '$58load_global.0']
2024-07-15 06:11:44,246 DEBUG:dispatch pc=80, inst=LOAD_FAST(arg=0, lineno=575)
2024-07-15 06:11:44,246 DEBUG:stack ['$null$58.1', '$70load_attr.2']
2024-07-15 06:11:44,246 DEBUG:dispatch pc=82, inst=PRECALL(arg=1, lineno=575)
2024-07-15 06:11:44,246 DEBUG:stack ['$null$58.1', '$70load_attr.2', '$a80.3']
2024-07-15 06:11:44,246 DEBUG:dispatch pc=86, inst=CALL(arg=1, lineno=575)
2024-07-15 06:11:44,246 DEBUG:stack ['$null$58.1', '$70load_attr.2', '$a80.3']
2024-07-15 06:11:44,247 DEBUG:dispatch pc=96, inst=STORE_FAST(arg=1, lineno=575)
2024-07-15 06:11:44,247 DEBUG:stack ['$86call.4']
2024-07-15 06:11:44,247 DEBUG:dispatch pc=98, inst=LOAD_GLOBAL(arg=9, lineno=576)
2024-07-15 06:11:44,247 DEBUG:stack []
2024-07-15 06:11:44,247 DEBUG:dispatch pc=110, inst=LOAD_FAST(arg=1, lineno=576)
2024-07-15 06:11:44,247 DEBUG:stack ['$null$98.6', '$98load_global.5']
2024-07-15 06:11:44,247 DEBUG:dispatch pc=112, inst=PRECALL(arg=1, lineno=576)
2024-07-15 06:11:44,247 DEBUG:stack ['$null$98.6', '$98load_global.5', '$it110.7']
2024-07-15 06:11:44,247 DEBUG:dispatch pc=116, inst=CALL(arg=1, lineno=576)
2024-07-15 06:11:44,247 DEBUG:stack ['$null$98.6', '$98load_global.5', '$it110.7']
2024-07-15 06:11:44,247 DEBUG:dispatch pc=126, inst=LOAD_METHOD(arg=5, lineno=576)
2024-07-15 06:11:44,247 DEBUG:stack ['$116call.8']
2024-07-15 06:11:44,247 DEBUG:dispatch pc=148, inst=LOAD_CONST(arg=1, lineno=576)
2024-07-15 06:11:44,247 DEBUG:stack ['$null$126.9', '$126load_method.10']
2024-07-15 06:11:44,247 DEBUG:dispatch pc=150, inst=PRECALL(arg=1, lineno=576)
2024-07-15 06:11:44,247 DEBUG:stack ['$null$126.9', '$126load_method.10', '$const148.11']
2024-07-15 06:11:44,247 DEBUG:dispatch pc=154, inst=CALL(arg=1, lineno=576)
2024-07-15 06:11:44,247 DEBUG:stack ['$null$126.9', '$126load_method.10', '$const148.11']
2024-07-15 06:11:44,247 DEBUG:dispatch pc=164, inst=STORE_FAST(arg=2, lineno=576)
2024-07-15 06:11:44,247 DEBUG:stack ['$154call.12']
2024-07-15 06:11:44,247 DEBUG:dispatch pc=166, inst=PUSH_NULL(arg=None, lineno=577)
2024-07-15 06:11:44,247 DEBUG:stack []
2024-07-15 06:11:44,247 DEBUG:dispatch pc=168, inst=LOAD_DEREF(arg=6, lineno=577)
2024-07-15 06:11:44,247 DEBUG:stack ['$null$166.13']
2024-07-15 06:11:44,247 DEBUG:dispatch pc=170, inst=LOAD_FAST(arg=2, lineno=577)
2024-07-15 06:11:44,247 DEBUG:stack ['$null$166.13', '$168load_deref.14']
2024-07-15 06:11:44,247 DEBUG:dispatch pc=172, inst=PRECALL(arg=1, lineno=577)
2024-07-15 06:11:44,247 DEBUG:stack ['$null$166.13', '$168load_deref.14', '$max_value170.15']
2024-07-15 06:11:44,247 DEBUG:dispatch pc=176, inst=CALL(arg=1, lineno=577)
2024-07-15 06:11:44,247 DEBUG:stack ['$null$166.13', '$168load_deref.14', '$max_value170.15']
2024-07-15 06:11:44,247 DEBUG:dispatch pc=186, inst=POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=577)
2024-07-15 06:11:44,248 DEBUG:stack ['$176call.16']
2024-07-15 06:11:44,248 DEBUG:end state. edges=[Edge(pc=188, stack=(), blockstack=(), npush=0), Edge(pc=192, stack=(), blockstack=(), npush=0)]
2024-07-15 06:11:44,248 DEBUG:pending: deque([State(pc_initial=188 nstack_initial=0), State(pc_initial=192 nstack_initial=0)])
2024-07-15 06:11:44,248 DEBUG:stack: []
2024-07-15 06:11:44,248 DEBUG:state.pc_initial: State(pc_initial=188 nstack_initial=0)
2024-07-15 06:11:44,248 DEBUG:dispatch pc=188, inst=LOAD_FAST(arg=2, lineno=578)
2024-07-15 06:11:44,248 DEBUG:stack []
2024-07-15 06:11:44,248 DEBUG:dispatch pc=190, inst=RETURN_VALUE(arg=None, lineno=578)
2024-07-15 06:11:44,248 DEBUG:stack ['$max_value188.0']
2024-07-15 06:11:44,248 DEBUG:end state. edges=[]
2024-07-15 06:11:44,248 DEBUG:pending: deque([State(pc_initial=192 nstack_initial=0)])
2024-07-15 06:11:44,248 DEBUG:stack: []
2024-07-15 06:11:44,248 DEBUG:state.pc_initial: State(pc_initial=192 nstack_initial=0)
2024-07-15 06:11:44,248 DEBUG:dispatch pc=192, inst=LOAD_FAST(arg=1, lineno=580)
2024-07-15 06:11:44,248 DEBUG:stack []
2024-07-15 06:11:44,248 DEBUG:dispatch pc=194, inst=GET_ITER(arg=None, lineno=580)
2024-07-15 06:11:44,248 DEBUG:stack ['$it192.0']
2024-07-15 06:11:44,248 DEBUG:end state. edges=[Edge(pc=196, stack=('$194get_iter.1',), blockstack=(), npush=0)]
2024-07-15 06:11:44,248 DEBUG:pending: deque([State(pc_initial=196 nstack_initial=1)])
2024-07-15 06:11:44,248 DEBUG:stack: ['$phi196.0']
2024-07-15 06:11:44,248 DEBUG:state.pc_initial: State(pc_initial=196 nstack_initial=1)
2024-07-15 06:11:44,248 DEBUG:dispatch pc=196, inst=FOR_ITER(arg=51, lineno=580)
2024-07-15 06:11:44,248 DEBUG:stack ['$phi196.0']
2024-07-15 06:11:44,248 DEBUG:end state. edges=[Edge(pc=300, stack=(), blockstack=(), npush=0), Edge(pc=198, stack=('$phi196.0', '$196for_iter.2'), blockstack=(), npush=0)]
2024-07-15 06:11:44,248 DEBUG:pending: deque([State(pc_initial=300 nstack_initial=0), State(pc_initial=198 nstack_initial=2)])
2024-07-15 06:11:44,248 DEBUG:stack: []
2024-07-15 06:11:44,248 DEBUG:state.pc_initial: State(pc_initial=300 nstack_initial=0)
2024-07-15 06:11:44,248 DEBUG:dispatch pc=300, inst=LOAD_FAST(arg=2, lineno=586)
2024-07-15 06:11:44,248 DEBUG:stack []
2024-07-15 06:11:44,248 DEBUG:dispatch pc=302, inst=RETURN_VALUE(arg=None, lineno=586)
2024-07-15 06:11:44,248 DEBUG:stack ['$max_value300.0']
2024-07-15 06:11:44,248 DEBUG:end state. edges=[]
2024-07-15 06:11:44,249 DEBUG:pending: deque([State(pc_initial=198 nstack_initial=2)])
2024-07-15 06:11:44,249 DEBUG:stack: ['$phi198.0', '$phi198.1']
2024-07-15 06:11:44,249 DEBUG:state.pc_initial: State(pc_initial=198 nstack_initial=2)
2024-07-15 06:11:44,249 DEBUG:dispatch pc=198, inst=STORE_FAST(arg=3, lineno=580)
2024-07-15 06:11:44,249 DEBUG:stack ['$phi198.0', '$phi198.1']
2024-07-15 06:11:44,249 DEBUG:dispatch pc=200, inst=LOAD_FAST(arg=3, lineno=581)
2024-07-15 06:11:44,249 DEBUG:stack ['$phi198.0']
2024-07-15 06:11:44,249 DEBUG:dispatch pc=202, inst=LOAD_METHOD(arg=6, lineno=581)
2024-07-15 06:11:44,249 DEBUG:stack ['$phi198.0', '$view200.2']
2024-07-15 06:11:44,249 DEBUG:dispatch pc=224, inst=PRECALL(arg=0, lineno=581)
2024-07-15 06:11:44,249 DEBUG:stack ['$phi198.0', '$null$202.3', '$202load_method.4']
2024-07-15 06:11:44,249 DEBUG:dispatch pc=228, inst=CALL(arg=0, lineno=581)
2024-07-15 06:11:44,249 DEBUG:stack ['$phi198.0', '$null$202.3', '$202load_method.4']
2024-07-15 06:11:44,249 DEBUG:dispatch pc=238, inst=STORE_FAST(arg=4, lineno=581)
2024-07-15 06:11:44,249 DEBUG:stack ['$phi198.0', '$228call.5']
2024-07-15 06:11:44,249 DEBUG:dispatch pc=240, inst=PUSH_NULL(arg=None, lineno=582)
2024-07-15 06:11:44,249 DEBUG:stack ['$phi198.0']
2024-07-15 06:11:44,249 DEBUG:dispatch pc=242, inst=LOAD_DEREF(arg=6, lineno=582)
2024-07-15 06:11:44,249 DEBUG:stack ['$phi198.0', '$null$240.6']
2024-07-15 06:11:44,249 DEBUG:dispatch pc=244, inst=LOAD_FAST(arg=4, lineno=582)
2024-07-15 06:11:44,249 DEBUG:stack ['$phi198.0', '$null$240.6', '$242load_deref.7']
2024-07-15 06:11:44,249 DEBUG:dispatch pc=246, inst=PRECALL(arg=1, lineno=582)
2024-07-15 06:11:44,249 DEBUG:stack ['$phi198.0', '$null$240.6', '$242load_deref.7', '$v244.8']
2024-07-15 06:11:44,249 DEBUG:dispatch pc=250, inst=CALL(arg=1, lineno=582)
2024-07-15 06:11:44,249 DEBUG:stack ['$phi198.0', '$null$240.6', '$242load_deref.7', '$v244.8']
2024-07-15 06:11:44,249 DEBUG:dispatch pc=260, inst=POP_JUMP_FORWARD_IF_FALSE(arg=4, lineno=582)
2024-07-15 06:11:44,249 DEBUG:stack ['$phi198.0', '$250call.9']
2024-07-15 06:11:44,249 DEBUG:end state. edges=[Edge(pc=262, stack=('$phi198.0',), blockstack=(), npush=0), Edge(pc=270, stack=('$phi198.0',), blockstack=(), npush=0)]
2024-07-15 06:11:44,249 DEBUG:pending: deque([State(pc_initial=262 nstack_initial=1), State(pc_initial=270 nstack_initial=1)])
2024-07-15 06:11:44,249 DEBUG:stack: ['$phi262.0']
2024-07-15 06:11:44,249 DEBUG:state.pc_initial: State(pc_initial=262 nstack_initial=1)
2024-07-15 06:11:44,249 DEBUG:dispatch pc=262, inst=LOAD_FAST(arg=4, lineno=583)
2024-07-15 06:11:44,250 DEBUG:stack ['$phi262.0']
2024-07-15 06:11:44,250 DEBUG:dispatch pc=264, inst=SWAP(arg=2, lineno=583)
2024-07-15 06:11:44,250 DEBUG:stack ['$phi262.0', '$v262.1']
2024-07-15 06:11:44,250 DEBUG:dispatch pc=266, inst=POP_TOP(arg=None, lineno=583)
2024-07-15 06:11:44,250 DEBUG:stack ['$v262.1', '$phi262.0']
2024-07-15 06:11:44,250 DEBUG:dispatch pc=268, inst=RETURN_VALUE(arg=None, lineno=583)
2024-07-15 06:11:44,250 DEBUG:stack ['$v262.1']
2024-07-15 06:11:44,250 DEBUG:end state. edges=[]
2024-07-15 06:11:44,250 DEBUG:pending: deque([State(pc_initial=270 nstack_initial=1)])
2024-07-15 06:11:44,250 DEBUG:stack: ['$phi270.0']
2024-07-15 06:11:44,250 DEBUG:state.pc_initial: State(pc_initial=270 nstack_initial=1)
2024-07-15 06:11:44,250 DEBUG:dispatch pc=270, inst=PUSH_NULL(arg=None, lineno=584)
2024-07-15 06:11:44,250 DEBUG:stack ['$phi270.0']
2024-07-15 06:11:44,250 DEBUG:dispatch pc=272, inst=LOAD_DEREF(arg=5, lineno=584)
2024-07-15 06:11:44,250 DEBUG:stack ['$phi270.0', '$null$270.1']
2024-07-15 06:11:44,250 DEBUG:dispatch pc=274, inst=LOAD_FAST(arg=4, lineno=584)
2024-07-15 06:11:44,250 DEBUG:stack ['$phi270.0', '$null$270.1', '$272load_deref.2']
2024-07-15 06:11:44,250 DEBUG:dispatch pc=276, inst=LOAD_FAST(arg=2, lineno=584)
2024-07-15 06:11:44,250 DEBUG:stack ['$phi270.0', '$null$270.1', '$272load_deref.2', '$v274.3']
2024-07-15 06:11:44,250 DEBUG:dispatch pc=278, inst=PRECALL(arg=2, lineno=584)
2024-07-15 06:11:44,250 DEBUG:stack ['$phi270.0', '$null$270.1', '$272load_deref.2', '$v274.3', '$max_value276.4']
2024-07-15 06:11:44,250 DEBUG:dispatch pc=282, inst=CALL(arg=2, lineno=584)
2024-07-15 06:11:44,250 DEBUG:stack ['$phi270.0', '$null$270.1', '$272load_deref.2', '$v274.3', '$max_value276.4']
2024-07-15 06:11:44,250 DEBUG:dispatch pc=292, inst=POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=584)
2024-07-15 06:11:44,250 DEBUG:stack ['$phi270.0', '$282call.5']
2024-07-15 06:11:44,250 DEBUG:end state. edges=[Edge(pc=294, stack=('$phi270.0',), blockstack=(), npush=0), Edge(pc=298, stack=('$phi270.0',), blockstack=(), npush=0)]
2024-07-15 06:11:44,250 DEBUG:pending: deque([State(pc_initial=294 nstack_initial=1), State(pc_initial=298 nstack_initial=1)])
2024-07-15 06:11:44,250 DEBUG:stack: ['$phi294.0']
2024-07-15 06:11:44,250 DEBUG:state.pc_initial: State(pc_initial=294 nstack_initial=1)
2024-07-15 06:11:44,250 DEBUG:dispatch pc=294, inst=LOAD_FAST(arg=4, lineno=585)
2024-07-15 06:11:44,250 DEBUG:stack ['$phi294.0']
2024-07-15 06:11:44,250 DEBUG:dispatch pc=296, inst=STORE_FAST(arg=2, lineno=585)
2024-07-15 06:11:44,250 DEBUG:stack ['$phi294.0', '$v294.1']
2024-07-15 06:11:44,250 DEBUG:end state. edges=[Edge(pc=298, stack=('$phi294.0',), blockstack=(), npush=0)]
2024-07-15 06:11:44,250 DEBUG:pending: deque([State(pc_initial=298 nstack_initial=1), State(pc_initial=298 nstack_initial=1)])
2024-07-15 06:11:44,251 DEBUG:stack: ['$phi298.0']
2024-07-15 06:11:44,251 DEBUG:state.pc_initial: State(pc_initial=298 nstack_initial=1)
2024-07-15 06:11:44,251 DEBUG:dispatch pc=298, inst=JUMP_BACKWARD(arg=52, lineno=585)
2024-07-15 06:11:44,251 DEBUG:stack ['$phi298.0']
2024-07-15 06:11:44,251 DEBUG:end state. edges=[Edge(pc=196, stack=('$phi298.0',), blockstack=(), npush=0)]
2024-07-15 06:11:44,251 DEBUG:pending: deque([State(pc_initial=298 nstack_initial=1), State(pc_initial=196 nstack_initial=1)])
2024-07-15 06:11:44,251 DEBUG:pending: deque([State(pc_initial=196 nstack_initial=1)])
2024-07-15 06:11:44,251 DEBUG:-------------------------Prune PHIs-------------------------
2024-07-15 06:11:44,251 DEBUG:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=28 nstack_initial=0): set(),
             State(pc_initial=58 nstack_initial=0): set(),
             State(pc_initial=188 nstack_initial=0): set(),
             State(pc_initial=192 nstack_initial=0): set(),
             State(pc_initial=196 nstack_initial=1): {'$phi196.0'},
             State(pc_initial=198 nstack_initial=2): {'$phi198.1'},
             State(pc_initial=262 nstack_initial=1): set(),
             State(pc_initial=270 nstack_initial=1): set(),
             State(pc_initial=294 nstack_initial=1): set(),
             State(pc_initial=298 nstack_initial=1): set(),
             State(pc_initial=300 nstack_initial=0): set()})
2024-07-15 06:11:44,251 DEBUG:defmap: {'$phi196.0': State(pc_initial=192 nstack_initial=0),
 '$phi198.1': State(pc_initial=196 nstack_initial=1)}
2024-07-15 06:11:44,251 DEBUG:phismap: defaultdict(<class 'set'>,
            {'$phi196.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0)),
                           ('$phi298.0',
                            State(pc_initial=298 nstack_initial=1))},
             '$phi198.0': {('$phi196.0',
                            State(pc_initial=196 nstack_initial=1))},
             '$phi198.1': {('$196for_iter.2',
                            State(pc_initial=196 nstack_initial=1))},
             '$phi262.0': {('$phi198.0',
                            State(pc_initial=198 nstack_initial=2))},
             '$phi270.0': {('$phi198.0',
                            State(pc_initial=198 nstack_initial=2))},
             '$phi294.0': {('$phi270.0',
                            State(pc_initial=270 nstack_initial=1))},
             '$phi298.0': {('$phi270.0',
                            State(pc_initial=270 nstack_initial=1)),
                           ('$phi294.0',
                            State(pc_initial=294 nstack_initial=1))}})
2024-07-15 06:11:44,251 DEBUG:changing phismap: defaultdict(<class 'set'>,
            {'$phi196.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0)),
                           ('$phi270.0',
                            State(pc_initial=270 nstack_initial=1)),
                           ('$phi294.0',
                            State(pc_initial=294 nstack_initial=1))},
             '$phi198.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0)),
                           ('$phi270.0',
                            State(pc_initial=270 nstack_initial=1)),
                           ('$phi294.0',
                            State(pc_initial=294 nstack_initial=1))},
             '$phi198.1': {('$196for_iter.2',
                            State(pc_initial=196 nstack_initial=1))},
             '$phi262.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0)),
                           ('$phi270.0',
                            State(pc_initial=270 nstack_initial=1)),
                           ('$phi294.0',
                            State(pc_initial=294 nstack_initial=1))},
             '$phi270.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0)),
                           ('$phi270.0',
                            State(pc_initial=270 nstack_initial=1)),
                           ('$phi294.0',
                            State(pc_initial=294 nstack_initial=1))},
             '$phi294.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0)),
                           ('$phi294.0',
                            State(pc_initial=294 nstack_initial=1))},
             '$phi298.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))}})
2024-07-15 06:11:44,252 DEBUG:changing phismap: defaultdict(<class 'set'>,
            {'$phi196.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi198.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi198.1': {('$196for_iter.2',
                            State(pc_initial=196 nstack_initial=1))},
             '$phi262.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi270.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi294.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi298.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))}})
2024-07-15 06:11:44,252 DEBUG:changing phismap: defaultdict(<class 'set'>,
            {'$phi196.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi198.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi198.1': {('$196for_iter.2',
                            State(pc_initial=196 nstack_initial=1))},
             '$phi262.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi270.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi294.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi298.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))}})
2024-07-15 06:11:44,252 DEBUG:keep phismap: {'$phi196.0': {('$194get_iter.1', State(pc_initial=192 nstack_initial=0))},
 '$phi198.1': {('$196for_iter.2', State(pc_initial=196 nstack_initial=1))}}
2024-07-15 06:11:44,252 DEBUG:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=192 nstack_initial=0): {'$phi196.0': '$194get_iter.1'},
             State(pc_initial=196 nstack_initial=1): {'$phi198.1': '$196for_iter.2'}})
2024-07-15 06:11:44,252 DEBUG:----------------------DONE Prune PHIs-----------------------
2024-07-15 06:11:44,252 DEBUG:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {}), (6, {'res': '$a6.0'}), (8, {'item': '$a6.0', 'res': '$8load_attr.1'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'res': '$const18.2'}), (20, {'lhs': '$8load_attr.1', 'rhs': '$const18.2', 'res': '$20compare_op.3'}), (22, {}), (24, {}), (26, {'pred': '$20compare_op.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={28: (), 58: ()})
2024-07-15 06:11:44,252 DEBUG:block_infos State(pc_initial=28 nstack_initial=0):
AdaptBlockInfo(insts=((28, {'idx': 1, 'res': '$28load_global.0'}), (30, {}), (32, {}), (34, {}), (36, {}), (38, {}), (40, {'res': '$const40.2'}), (42, {}), (44, {}), (46, {'func': '$28load_global.0', 'args': ['$const40.2'], 'kw_names': None, 'res': '$46call.3'}), (48, {}), (50, {}), (52, {}), (54, {}), (56, {'exc': '$46call.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-15 06:11:44,253 DEBUG:block_infos State(pc_initial=58 nstack_initial=0):
AdaptBlockInfo(insts=((58, {'idx': 2, 'res': '$58load_global.0'}), (60, {}), (62, {}), (64, {}), (66, {}), (68, {}), (70, {'item': '$58load_global.0', 'res': '$70load_attr.2'}), (72, {}), (74, {}), (76, {}), (78, {}), (80, {'res': '$a80.3'}), (82, {}), (84, {}), (86, {'func': '$70load_attr.2', 'args': ['$a80.3'], 'kw_names': None, 'res': '$86call.4'}), (88, {}), (90, {}), (92, {}), (94, {}), (96, {'value': '$86call.4'}), (98, {'idx': 4, 'res': '$98load_global.5'}), (100, {}), (102, {}), (104, {}), (106, {}), (108, {}), (110, {'res': '$it110.7'}), (112, {}), (114, {}), (116, {'func': '$98load_global.5', 'args': ['$it110.7'], 'kw_names': None, 'res': '$116call.8'}), (118, {}), (120, {}), (122, {}), (124, {}), (126, {'item': '$116call.8', 'res': '$126load_method.10'}), (128, {}), (130, {}), (132, {}), (134, {}), (136, {}), (138, {}), (140, {}), (142, {}), (144, {}), (146, {}), (148, {'res': '$const148.11'}), (150, {}), (152, {}), (154, {'func': '$126load_method.10', 'args': ['$const148.11'], 'kw_names': None, 'res': '$154call.12'}), (156, {}), (158, {}), (160, {}), (162, {}), (164, {'value': '$154call.12'}), (166, {}), (168, {'res': '$168load_deref.14'}), (170, {'res': '$max_value170.15'}), (172, {}), (174, {}), (176, {'func': '$168load_deref.14', 'args': ['$max_value170.15'], 'kw_names': None, 'res': '$176call.16'}), (178, {}), (180, {}), (182, {}), (184, {}), (186, {'pred': '$176call.16'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={188: (), 192: ()})
2024-07-15 06:11:44,253 DEBUG:block_infos State(pc_initial=188 nstack_initial=0):
AdaptBlockInfo(insts=((188, {'res': '$max_value188.0'}), (190, {'retval': '$max_value188.0', 'castval': '$190return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-15 06:11:44,253 DEBUG:block_infos State(pc_initial=192 nstack_initial=0):
AdaptBlockInfo(insts=((192, {'res': '$it192.0'}), (194, {'value': '$it192.0', 'res': '$194get_iter.1'})), outgoing_phis={'$phi196.0': '$194get_iter.1'}, blockstack=(), active_try_block=None, outgoing_edgepushed={196: ('$194get_iter.1',)})
2024-07-15 06:11:44,253 DEBUG:block_infos State(pc_initial=196 nstack_initial=1):
AdaptBlockInfo(insts=((196, {'iterator': '$phi196.0', 'pair': '$196for_iter.1', 'indval': '$196for_iter.2', 'pred': '$196for_iter.3'}),), outgoing_phis={'$phi198.1': '$196for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={300: (), 198: ('$phi196.0', '$196for_iter.2')})
2024-07-15 06:11:44,253 DEBUG:block_infos State(pc_initial=198 nstack_initial=2):
AdaptBlockInfo(insts=((198, {'value': '$phi198.1'}), (200, {'res': '$view200.2'}), (202, {'item': '$view200.2', 'res': '$202load_method.4'}), (204, {}), (206, {}), (208, {}), (210, {}), (212, {}), (214, {}), (216, {}), (218, {}), (220, {}), (222, {}), (224, {}), (226, {}), (228, {'func': '$202load_method.4', 'args': [], 'kw_names': None, 'res': '$228call.5'}), (230, {}), (232, {}), (234, {}), (236, {}), (238, {'value': '$228call.5'}), (240, {}), (242, {'res': '$242load_deref.7'}), (244, {'res': '$v244.8'}), (246, {}), (248, {}), (250, {'func': '$242load_deref.7', 'args': ['$v244.8'], 'kw_names': None, 'res': '$250call.9'}), (252, {}), (254, {}), (256, {}), (258, {}), (260, {'pred': '$250call.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={262: ('$phi198.0',), 270: ('$phi198.0',)})
2024-07-15 06:11:44,253 DEBUG:block_infos State(pc_initial=262 nstack_initial=1):
AdaptBlockInfo(insts=((262, {'res': '$v262.1'}), (268, {'retval': '$v262.1', 'castval': '$268return_value.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-15 06:11:44,253 DEBUG:block_infos State(pc_initial=270 nstack_initial=1):
AdaptBlockInfo(insts=((270, {}), (272, {'res': '$272load_deref.2'}), (274, {'res': '$v274.3'}), (276, {'res': '$max_value276.4'}), (278, {}), (280, {}), (282, {'func': '$272load_deref.2', 'args': ['$v274.3', '$max_value276.4'], 'kw_names': None, 'res': '$282call.5'}), (284, {}), (286, {}), (288, {}), (290, {}), (292, {'pred': '$282call.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={294: ('$phi270.0',), 298: ('$phi270.0',)})
2024-07-15 06:11:44,253 DEBUG:block_infos State(pc_initial=294 nstack_initial=1):
AdaptBlockInfo(insts=((294, {'res': '$v294.1'}), (296, {'value': '$v294.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={298: ('$phi294.0',)})
2024-07-15 06:11:44,253 DEBUG:block_infos State(pc_initial=298 nstack_initial=1):
AdaptBlockInfo(insts=((298, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={196: ('$phi298.0',)})
2024-07-15 06:11:44,253 DEBUG:block_infos State(pc_initial=300 nstack_initial=0):
AdaptBlockInfo(insts=((300, {'res': '$max_value300.0'}), (302, {'retval': '$max_value300.0', 'castval': '$302return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-15 06:11:44,254 DEBUG:label 0:
    a = arg(0, name=a)                       ['a']
    $8load_attr.1 = getattr(value=a, attr=size) ['$8load_attr.1', 'a']
    $const18.2 = const(int, 0)               ['$const18.2']
    $20compare_op.3 = $8load_attr.1 == $const18.2 ['$20compare_op.3', '$8load_attr.1', '$const18.2']
    bool26 = global(bool: <class 'bool'>)    ['bool26']
    $26pred = call bool26($20compare_op.3, func=bool26, args=(Var($20compare_op.3, arraymath.py:571),), kws=(), vararg=None, varkwarg=None, target=None) ['$20compare_op.3', '$26pred', 'bool26']
    branch $26pred, 28, 58                   ['$26pred']
label 28:
    $28load_global.0 = global(ValueError: <class 'ValueError'>) ['$28load_global.0']
    $const40.2 = const(str, zero-size array to reduction operation maximum which has no identity) ['$const40.2']
    $46call.3 = call $28load_global.0($const40.2, func=$28load_global.0, args=[Var($const40.2, arraymath.py:572)], kws=(), vararg=None, varkwarg=None, target=None) ['$28load_global.0', '$46call.3', '$const40.2']
    raise $46call.3                          ['$46call.3']
label 58:
    $58load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$58load_global.0']
    $70load_attr.2 = getattr(value=$58load_global.0, attr=nditer) ['$58load_global.0', '$70load_attr.2']
    it = call $70load_attr.2(a, func=$70load_attr.2, args=[Var(a, arraymath.py:570)], kws=(), vararg=None, varkwarg=None, target=None) ['$70load_attr.2', 'a', 'it']
    $98load_global.5 = global(next: <built-in function next>) ['$98load_global.5']
    $116call.8 = call $98load_global.5(it, func=$98load_global.5, args=[Var(it, arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None) ['$116call.8', '$98load_global.5', 'it']
    $126load_method.10 = getattr(value=$116call.8, attr=take) ['$116call.8', '$126load_method.10']
    $const148.11 = const(int, 0)             ['$const148.11']
    max_value = call $126load_method.10($const148.11, func=$126load_method.10, args=[Var($const148.11, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None) ['$126load_method.10', '$const148.11', 'max_value']
    $168load_deref.14 = freevar(pre_return_func: <function return_false at 0x00000221B53CACA0>) ['$168load_deref.14']
    $176call.16 = call $168load_deref.14(max_value, func=$168load_deref.14, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None) ['$168load_deref.14', '$176call.16', 'max_value']
    bool186 = global(bool: <class 'bool'>)   ['bool186']
    $186pred = call bool186($176call.16, func=bool186, args=(Var($176call.16, arraymath.py:577),), kws=(), vararg=None, varkwarg=None, target=None) ['$176call.16', '$186pred', 'bool186']
    branch $186pred, 188, 192                ['$186pred']
label 188:
    $190return_value.1 = cast(value=max_value) ['$190return_value.1', 'max_value']
    return $190return_value.1                ['$190return_value.1']
label 192:
    $194get_iter.1 = getiter(value=it)       ['$194get_iter.1', 'it']
    $phi196.0 = $194get_iter.1               ['$194get_iter.1', '$phi196.0']
    jump 196                                 []
label 196:
    $196for_iter.1 = iternext(value=$phi196.0) ['$196for_iter.1', '$phi196.0']
    $196for_iter.2 = pair_first(value=$196for_iter.1) ['$196for_iter.1', '$196for_iter.2']
    $196for_iter.3 = pair_second(value=$196for_iter.1) ['$196for_iter.1', '$196for_iter.3']
    $phi198.1 = $196for_iter.2               ['$196for_iter.2', '$phi198.1']
    branch $196for_iter.3, 198, 300          ['$196for_iter.3']
label 198:
    view = $phi198.1                         ['$phi198.1', 'view']
    $202load_method.4 = getattr(value=view, attr=item) ['$202load_method.4', 'view']
    v = call $202load_method.4(func=$202load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$202load_method.4', 'v']
    $242load_deref.7 = freevar(pre_return_func: <function return_false at 0x00000221B53CACA0>) ['$242load_deref.7']
    $250call.9 = call $242load_deref.7(v, func=$242load_deref.7, args=[Var(v, arraymath.py:581)], kws=(), vararg=None, varkwarg=None, target=None) ['$242load_deref.7', '$250call.9', 'v']
    bool260 = global(bool: <class 'bool'>)   ['bool260']
    $260pred = call bool260($250call.9, func=bool260, args=(Var($250call.9, arraymath.py:582),), kws=(), vararg=None, varkwarg=None, target=None) ['$250call.9', '$260pred', 'bool260']
    branch $260pred, 262, 270                ['$260pred']
label 262:
    $268return_value.2 = cast(value=v)       ['$268return_value.2', 'v']
    return $268return_value.2                ['$268return_value.2']
label 270:
    $272load_deref.2 = freevar(comparator: <function max_comparator at 0x00000221B53CA3E0>) ['$272load_deref.2']
    $282call.5 = call $272load_deref.2(v, max_value, func=$272load_deref.2, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None) ['$272load_deref.2', '$282call.5', 'max_value', 'v']
    bool292 = global(bool: <class 'bool'>)   ['bool292']
    $292pred = call bool292($282call.5, func=bool292, args=(Var($282call.5, arraymath.py:584),), kws=(), vararg=None, varkwarg=None, target=None) ['$282call.5', '$292pred', 'bool292']
    branch $292pred, 294, 298                ['$292pred']
label 294:
    max_value = v                            ['max_value', 'v']
    jump 298                                 []
label 298:
    jump 196                                 []
label 300:
    $302return_value.1 = cast(value=max_value) ['$302return_value.1', 'max_value']
    return $302return_value.1                ['$302return_value.1']

2024-07-15 06:11:44,272 DEBUG:==== SSA block analysis pass on 0
2024-07-15 06:11:44,272 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B615AD90>
2024-07-15 06:11:44,272 DEBUG:on stmt: a = arg(0, name=a)
2024-07-15 06:11:44,272 DEBUG:on stmt: $8load_attr.1 = getattr(value=a, attr=size)
2024-07-15 06:11:44,272 DEBUG:on stmt: $const18.2 = const(int, 0)
2024-07-15 06:11:44,272 DEBUG:on stmt: $20compare_op.3 = $8load_attr.1 == $const18.2
2024-07-15 06:11:44,272 DEBUG:on stmt: bool26 = global(bool: <class 'bool'>)
2024-07-15 06:11:44,272 DEBUG:on stmt: $26pred = call bool26($20compare_op.3, func=bool26, args=(Var($20compare_op.3, arraymath.py:571),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:44,272 DEBUG:on stmt: branch $26pred, 28, 58
2024-07-15 06:11:44,272 DEBUG:==== SSA block analysis pass on 28
2024-07-15 06:11:44,272 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B615AD90>
2024-07-15 06:11:44,272 DEBUG:on stmt: $28load_global.0 = global(ValueError: <class 'ValueError'>)
2024-07-15 06:11:44,272 DEBUG:on stmt: $const40.2 = const(str, zero-size array to reduction operation maximum which has no identity)
2024-07-15 06:11:44,272 DEBUG:on stmt: $46call.3 = call $28load_global.0($const40.2, func=$28load_global.0, args=[Var($const40.2, arraymath.py:572)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:44,272 DEBUG:on stmt: <static> raise <class 'ValueError'>('zero-size array to reduction operation maximum which has no identity')
2024-07-15 06:11:44,272 DEBUG:==== SSA block analysis pass on 58
2024-07-15 06:11:44,272 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B615AD90>
2024-07-15 06:11:44,272 DEBUG:on stmt: $58load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:44,272 DEBUG:on stmt: $70load_attr.2 = getattr(value=$58load_global.0, attr=nditer)
2024-07-15 06:11:44,272 DEBUG:on stmt: it = call $70load_attr.2(a, func=$70load_attr.2, args=[Var(a, arraymath.py:570)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:44,272 DEBUG:on stmt: $98load_global.5 = global(next: <built-in function next>)
2024-07-15 06:11:44,272 DEBUG:on stmt: $116call.8 = call $98load_global.5(it, func=$98load_global.5, args=[Var(it, arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:44,273 DEBUG:on stmt: $126load_method.10 = getattr(value=$116call.8, attr=take)
2024-07-15 06:11:44,273 DEBUG:on stmt: $const148.11 = const(int, 0)
2024-07-15 06:11:44,273 DEBUG:on stmt: max_value = call $126load_method.10($const148.11, func=$126load_method.10, args=[Var($const148.11, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:44,273 DEBUG:on stmt: $168load_deref.14 = freevar(pre_return_func: <function return_false at 0x00000221B53CACA0>)
2024-07-15 06:11:44,273 DEBUG:on stmt: $176call.16 = call $168load_deref.14(max_value, func=$168load_deref.14, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:44,273 DEBUG:on stmt: bool186 = global(bool: <class 'bool'>)
2024-07-15 06:11:44,273 DEBUG:on stmt: $186pred = call bool186($176call.16, func=bool186, args=(Var($176call.16, arraymath.py:577),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:44,273 DEBUG:on stmt: branch $186pred, 188, 192
2024-07-15 06:11:44,273 DEBUG:==== SSA block analysis pass on 188
2024-07-15 06:11:44,273 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B615AD90>
2024-07-15 06:11:44,273 DEBUG:on stmt: $190return_value.1 = cast(value=max_value)
2024-07-15 06:11:44,273 DEBUG:on stmt: return $190return_value.1
2024-07-15 06:11:44,273 DEBUG:==== SSA block analysis pass on 192
2024-07-15 06:11:44,273 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B615AD90>
2024-07-15 06:11:44,273 DEBUG:on stmt: $194get_iter.1 = getiter(value=it)
2024-07-15 06:11:44,273 DEBUG:on stmt: $phi196.0 = $194get_iter.1
2024-07-15 06:11:44,273 DEBUG:on stmt: jump 196
2024-07-15 06:11:44,273 DEBUG:==== SSA block analysis pass on 196
2024-07-15 06:11:44,273 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B615AD90>
2024-07-15 06:11:44,273 DEBUG:on stmt: $196for_iter.1 = iternext(value=$phi196.0)
2024-07-15 06:11:44,273 DEBUG:on stmt: $196for_iter.2 = pair_first(value=$196for_iter.1)
2024-07-15 06:11:44,273 DEBUG:on stmt: $196for_iter.3 = pair_second(value=$196for_iter.1)
2024-07-15 06:11:44,273 DEBUG:on stmt: $phi198.1 = $196for_iter.2
2024-07-15 06:11:44,273 DEBUG:on stmt: branch $196for_iter.3, 198, 300
2024-07-15 06:11:44,273 DEBUG:==== SSA block analysis pass on 198
2024-07-15 06:11:44,274 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B615AD90>
2024-07-15 06:11:44,274 DEBUG:on stmt: view = $phi198.1
2024-07-15 06:11:44,274 DEBUG:on stmt: $202load_method.4 = getattr(value=view, attr=item)
2024-07-15 06:11:44,274 DEBUG:on stmt: v = call $202load_method.4(func=$202load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:44,274 DEBUG:on stmt: $242load_deref.7 = freevar(pre_return_func: <function return_false at 0x00000221B53CACA0>)
2024-07-15 06:11:44,274 DEBUG:on stmt: $250call.9 = call $242load_deref.7(v, func=$242load_deref.7, args=[Var(v, arraymath.py:581)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:44,274 DEBUG:on stmt: bool260 = global(bool: <class 'bool'>)
2024-07-15 06:11:44,274 DEBUG:on stmt: $260pred = call bool260($250call.9, func=bool260, args=(Var($250call.9, arraymath.py:582),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:44,274 DEBUG:on stmt: branch $260pred, 262, 270
2024-07-15 06:11:44,274 DEBUG:==== SSA block analysis pass on 262
2024-07-15 06:11:44,274 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B615AD90>
2024-07-15 06:11:44,274 DEBUG:on stmt: $268return_value.2 = cast(value=v)
2024-07-15 06:11:44,274 DEBUG:on stmt: return $268return_value.2
2024-07-15 06:11:44,274 DEBUG:==== SSA block analysis pass on 270
2024-07-15 06:11:44,274 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B615AD90>
2024-07-15 06:11:44,274 DEBUG:on stmt: $272load_deref.2 = freevar(comparator: <function max_comparator at 0x00000221B53CA3E0>)
2024-07-15 06:11:44,274 DEBUG:on stmt: $282call.5 = call $272load_deref.2(v, max_value, func=$272load_deref.2, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:44,274 DEBUG:on stmt: bool292 = global(bool: <class 'bool'>)
2024-07-15 06:11:44,274 DEBUG:on stmt: $292pred = call bool292($282call.5, func=bool292, args=(Var($282call.5, arraymath.py:584),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:44,274 DEBUG:on stmt: branch $292pred, 294, 298
2024-07-15 06:11:44,274 DEBUG:==== SSA block analysis pass on 294
2024-07-15 06:11:44,274 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B615AD90>
2024-07-15 06:11:44,274 DEBUG:on stmt: max_value = v
2024-07-15 06:11:44,274 DEBUG:on stmt: jump 298
2024-07-15 06:11:44,274 DEBUG:==== SSA block analysis pass on 298
2024-07-15 06:11:44,274 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B615AD90>
2024-07-15 06:11:44,274 DEBUG:on stmt: jump 196
2024-07-15 06:11:44,274 DEBUG:==== SSA block analysis pass on 300
2024-07-15 06:11:44,274 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B615AD90>
2024-07-15 06:11:44,274 DEBUG:on stmt: $302return_value.1 = cast(value=max_value)
2024-07-15 06:11:44,274 DEBUG:on stmt: return $302return_value.1
2024-07-15 06:11:44,276 DEBUG:defs defaultdict(<class 'list'>,
            {'$116call.8': [(<numba.core.ir.Assign object at 0x00000221B61594D0>,
                             58)],
             '$126load_method.10': [(<numba.core.ir.Assign object at 0x00000221B5C1EBD0>,
                                     58)],
             '$168load_deref.14': [(<numba.core.ir.Assign object at 0x00000221B5C1CC90>,
                                    58)],
             '$176call.16': [(<numba.core.ir.Assign object at 0x00000221B5C1F210>,
                              58)],
             '$186pred': [(<numba.core.ir.Assign object at 0x00000221B5C1F990>,
                           58)],
             '$190return_value.1': [(<numba.core.ir.Assign object at 0x00000221B5C1FA10>,
                                     188)],
             '$194get_iter.1': [(<numba.core.ir.Assign object at 0x00000221B5C1C090>,
                                 192)],
             '$196for_iter.1': [(<numba.core.ir.Assign object at 0x00000221B5C1D050>,
                                 196)],
             '$196for_iter.2': [(<numba.core.ir.Assign object at 0x00000221B5C1DCD0>,
                                 196)],
             '$196for_iter.3': [(<numba.core.ir.Assign object at 0x00000221B5C1D750>,
                                 196)],
             '$202load_method.4': [(<numba.core.ir.Assign object at 0x00000221B5C1D150>,
                                    198)],
             '$20compare_op.3': [(<numba.core.ir.Assign object at 0x00000221B68D1B90>,
                                  0)],
             '$242load_deref.7': [(<numba.core.ir.Assign object at 0x00000221B5C1DB10>,
                                   198)],
             '$250call.9': [(<numba.core.ir.Assign object at 0x00000221B5C1E750>,
                             198)],
             '$260pred': [(<numba.core.ir.Assign object at 0x00000221B5C1CB10>,
                           198)],
             '$268return_value.2': [(<numba.core.ir.Assign object at 0x00000221B5C1F690>,
                                     262)],
             '$26pred': [(<numba.core.ir.Assign object at 0x00000221B61591D0>,
                          0)],
             '$272load_deref.2': [(<numba.core.ir.Assign object at 0x00000221B5C1E2D0>,
                                   270)],
             '$282call.5': [(<numba.core.ir.Assign object at 0x00000221B677A610>,
                             270)],
             '$28load_global.0': [(<numba.core.ir.Assign object at 0x00000221B6158150>,
                                   28)],
             '$292pred': [(<numba.core.ir.Assign object at 0x00000221B677A8D0>,
                           270)],
             '$302return_value.1': [(<numba.core.ir.Assign object at 0x00000221B6778C10>,
                                     300)],
             '$46call.3': [(<numba.core.ir.Assign object at 0x00000221B615AD10>,
                            28)],
             '$58load_global.0': [(<numba.core.ir.Assign object at 0x00000221B6159F10>,
                                   58)],
             '$70load_attr.2': [(<numba.core.ir.Assign object at 0x00000221B615AA50>,
                                 58)],
             '$8load_attr.1': [(<numba.core.ir.Assign object at 0x00000221B600FA50>,
                                0)],
             '$98load_global.5': [(<numba.core.ir.Assign object at 0x00000221B6159590>,
                                   58)],
             '$const148.11': [(<numba.core.ir.Assign object at 0x00000221B5C1D950>,
                               58)],
             '$const18.2': [(<numba.core.ir.Assign object at 0x00000221B6022150>,
                             0)],
             '$const40.2': [(<numba.core.ir.Assign object at 0x00000221B615B190>,
                             28)],
             '$phi196.0': [(<numba.core.ir.Assign object at 0x00000221B5C1F890>,
                            192)],
             '$phi198.1': [(<numba.core.ir.Assign object at 0x00000221B5C1FA90>,
                            196)],
             'a': [(<numba.core.ir.Assign object at 0x00000221B5928B50>, 0)],
             'bool186': [(<numba.core.ir.Assign object at 0x00000221B5C1DFD0>,
                          58)],
             'bool26': [(<numba.core.ir.Assign object at 0x00000221B6158250>,
                         0)],
             'bool260': [(<numba.core.ir.Assign object at 0x00000221B5C1CAD0>,
                          198)],
             'bool292': [(<numba.core.ir.Assign object at 0x00000221B677AD90>,
                          270)],
             'it': [(<numba.core.ir.Assign object at 0x00000221B615B650>, 58)],
             'max_value': [(<numba.core.ir.Assign object at 0x00000221B5C1DA90>,
                            58),
                           (<numba.core.ir.Assign object at 0x00000221B677BF50>,
                            294)],
             'v': [(<numba.core.ir.Assign object at 0x00000221B5C1C290>, 198)],
             'view': [(<numba.core.ir.Assign object at 0x00000221B5C1DDD0>,
                       198)]})
2024-07-15 06:11:44,276 DEBUG:SSA violators <numba.core.utils.OrderedSet object at 0x00000221B5DEA010>
2024-07-15 06:11:44,276 DEBUG:Fix SSA violator on var max_value
2024-07-15 06:11:44,276 DEBUG:==== SSA block rewrite pass on 0
2024-07-15 06:11:44,276 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B683A890>
2024-07-15 06:11:44,276 DEBUG:on stmt: a = arg(0, name=a)
2024-07-15 06:11:44,276 DEBUG:on stmt: $8load_attr.1 = getattr(value=a, attr=size)
2024-07-15 06:11:44,276 DEBUG:on stmt: $const18.2 = const(int, 0)
2024-07-15 06:11:44,276 DEBUG:on stmt: $20compare_op.3 = $8load_attr.1 == $const18.2
2024-07-15 06:11:44,276 DEBUG:on stmt: bool26 = global(bool: <class 'bool'>)
2024-07-15 06:11:44,276 DEBUG:on stmt: $26pred = call bool26($20compare_op.3, func=bool26, args=(Var($20compare_op.3, arraymath.py:571),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:44,276 DEBUG:on stmt: branch $26pred, 28, 58
2024-07-15 06:11:44,276 DEBUG:==== SSA block rewrite pass on 28
2024-07-15 06:11:44,276 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B683A890>
2024-07-15 06:11:44,276 DEBUG:on stmt: $28load_global.0 = global(ValueError: <class 'ValueError'>)
2024-07-15 06:11:44,276 DEBUG:on stmt: $const40.2 = const(str, zero-size array to reduction operation maximum which has no identity)
2024-07-15 06:11:44,276 DEBUG:on stmt: $46call.3 = call $28load_global.0($const40.2, func=$28load_global.0, args=[Var($const40.2, arraymath.py:572)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:44,276 DEBUG:on stmt: <static> raise <class 'ValueError'>('zero-size array to reduction operation maximum which has no identity')
2024-07-15 06:11:44,276 DEBUG:==== SSA block rewrite pass on 58
2024-07-15 06:11:44,276 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B683A890>
2024-07-15 06:11:44,276 DEBUG:on stmt: $58load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:44,276 DEBUG:on stmt: $70load_attr.2 = getattr(value=$58load_global.0, attr=nditer)
2024-07-15 06:11:44,276 DEBUG:on stmt: it = call $70load_attr.2(a, func=$70load_attr.2, args=[Var(a, arraymath.py:570)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:44,276 DEBUG:on stmt: $98load_global.5 = global(next: <built-in function next>)
2024-07-15 06:11:44,276 DEBUG:on stmt: $116call.8 = call $98load_global.5(it, func=$98load_global.5, args=[Var(it, arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:44,276 DEBUG:on stmt: $126load_method.10 = getattr(value=$116call.8, attr=take)
2024-07-15 06:11:44,276 DEBUG:on stmt: $const148.11 = const(int, 0)
2024-07-15 06:11:44,276 DEBUG:on stmt: max_value = call $126load_method.10($const148.11, func=$126load_method.10, args=[Var($const148.11, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:44,276 DEBUG:first assign: max_value
2024-07-15 06:11:44,276 DEBUG:replaced with: max_value = call $126load_method.10($const148.11, func=$126load_method.10, args=[Var($const148.11, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:44,276 DEBUG:on stmt: $168load_deref.14 = freevar(pre_return_func: <function return_false at 0x00000221B53CACA0>)
2024-07-15 06:11:44,276 DEBUG:on stmt: $176call.16 = call $168load_deref.14(max_value, func=$168load_deref.14, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:44,276 DEBUG:on stmt: bool186 = global(bool: <class 'bool'>)
2024-07-15 06:11:44,276 DEBUG:on stmt: $186pred = call bool186($176call.16, func=bool186, args=(Var($176call.16, arraymath.py:577),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:44,276 DEBUG:on stmt: branch $186pred, 188, 192
2024-07-15 06:11:44,277 DEBUG:==== SSA block rewrite pass on 188
2024-07-15 06:11:44,277 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B683A890>
2024-07-15 06:11:44,277 DEBUG:on stmt: $190return_value.1 = cast(value=max_value)
2024-07-15 06:11:44,277 DEBUG:on stmt: return $190return_value.1
2024-07-15 06:11:44,277 DEBUG:==== SSA block rewrite pass on 192
2024-07-15 06:11:44,277 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B683A890>
2024-07-15 06:11:44,277 DEBUG:on stmt: $194get_iter.1 = getiter(value=it)
2024-07-15 06:11:44,277 DEBUG:on stmt: $phi196.0 = $194get_iter.1
2024-07-15 06:11:44,277 DEBUG:on stmt: jump 196
2024-07-15 06:11:44,277 DEBUG:==== SSA block rewrite pass on 196
2024-07-15 06:11:44,277 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B683A890>
2024-07-15 06:11:44,277 DEBUG:on stmt: $196for_iter.1 = iternext(value=$phi196.0)
2024-07-15 06:11:44,277 DEBUG:on stmt: $196for_iter.2 = pair_first(value=$196for_iter.1)
2024-07-15 06:11:44,277 DEBUG:on stmt: $196for_iter.3 = pair_second(value=$196for_iter.1)
2024-07-15 06:11:44,277 DEBUG:on stmt: $phi198.1 = $196for_iter.2
2024-07-15 06:11:44,277 DEBUG:on stmt: branch $196for_iter.3, 198, 300
2024-07-15 06:11:44,277 DEBUG:==== SSA block rewrite pass on 198
2024-07-15 06:11:44,277 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B683A890>
2024-07-15 06:11:44,277 DEBUG:on stmt: view = $phi198.1
2024-07-15 06:11:44,277 DEBUG:on stmt: $202load_method.4 = getattr(value=view, attr=item)
2024-07-15 06:11:44,277 DEBUG:on stmt: v = call $202load_method.4(func=$202load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:44,277 DEBUG:on stmt: $242load_deref.7 = freevar(pre_return_func: <function return_false at 0x00000221B53CACA0>)
2024-07-15 06:11:44,277 DEBUG:on stmt: $250call.9 = call $242load_deref.7(v, func=$242load_deref.7, args=[Var(v, arraymath.py:581)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:44,277 DEBUG:on stmt: bool260 = global(bool: <class 'bool'>)
2024-07-15 06:11:44,277 DEBUG:on stmt: $260pred = call bool260($250call.9, func=bool260, args=(Var($250call.9, arraymath.py:582),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:44,277 DEBUG:on stmt: branch $260pred, 262, 270
2024-07-15 06:11:44,277 DEBUG:==== SSA block rewrite pass on 262
2024-07-15 06:11:44,277 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B683A890>
2024-07-15 06:11:44,277 DEBUG:on stmt: $268return_value.2 = cast(value=v)
2024-07-15 06:11:44,277 DEBUG:on stmt: return $268return_value.2
2024-07-15 06:11:44,277 DEBUG:==== SSA block rewrite pass on 270
2024-07-15 06:11:44,277 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B683A890>
2024-07-15 06:11:44,277 DEBUG:on stmt: $272load_deref.2 = freevar(comparator: <function max_comparator at 0x00000221B53CA3E0>)
2024-07-15 06:11:44,277 DEBUG:on stmt: $282call.5 = call $272load_deref.2(v, max_value, func=$272load_deref.2, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:44,277 DEBUG:on stmt: bool292 = global(bool: <class 'bool'>)
2024-07-15 06:11:44,277 DEBUG:on stmt: $292pred = call bool292($282call.5, func=bool292, args=(Var($282call.5, arraymath.py:584),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:44,277 DEBUG:on stmt: branch $292pred, 294, 298
2024-07-15 06:11:44,277 DEBUG:==== SSA block rewrite pass on 294
2024-07-15 06:11:44,277 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B683A890>
2024-07-15 06:11:44,278 DEBUG:on stmt: max_value = v
2024-07-15 06:11:44,278 DEBUG:replaced with: max_value.1 = v
2024-07-15 06:11:44,278 DEBUG:on stmt: jump 298
2024-07-15 06:11:44,278 DEBUG:==== SSA block rewrite pass on 298
2024-07-15 06:11:44,278 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B683A890>
2024-07-15 06:11:44,278 DEBUG:on stmt: jump 196
2024-07-15 06:11:44,278 DEBUG:==== SSA block rewrite pass on 300
2024-07-15 06:11:44,278 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B683A890>
2024-07-15 06:11:44,278 DEBUG:on stmt: $302return_value.1 = cast(value=max_value)
2024-07-15 06:11:44,278 DEBUG:on stmt: return $302return_value.1
2024-07-15 06:11:44,278 DEBUG:Replaced assignments: defaultdict(<class 'list'>,
            {58: [<numba.core.ir.Assign object at 0x00000221B5DE81D0>],
             294: [<numba.core.ir.Assign object at 0x00000221B5DE8E10>]})
2024-07-15 06:11:44,278 DEBUG:==== SSA block rewrite pass on 0
2024-07-15 06:11:44,278 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5DE86D0>
2024-07-15 06:11:44,278 DEBUG:on stmt: a = arg(0, name=a)
2024-07-15 06:11:44,278 DEBUG:on stmt: $8load_attr.1 = getattr(value=a, attr=size)
2024-07-15 06:11:44,278 DEBUG:on stmt: $const18.2 = const(int, 0)
2024-07-15 06:11:44,278 DEBUG:on stmt: $20compare_op.3 = $8load_attr.1 == $const18.2
2024-07-15 06:11:44,278 DEBUG:on stmt: bool26 = global(bool: <class 'bool'>)
2024-07-15 06:11:44,278 DEBUG:on stmt: $26pred = call bool26($20compare_op.3, func=bool26, args=(Var($20compare_op.3, arraymath.py:571),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:44,278 DEBUG:on stmt: branch $26pred, 28, 58
2024-07-15 06:11:44,278 DEBUG:==== SSA block rewrite pass on 28
2024-07-15 06:11:44,278 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5DE86D0>
2024-07-15 06:11:44,278 DEBUG:on stmt: $28load_global.0 = global(ValueError: <class 'ValueError'>)
2024-07-15 06:11:44,278 DEBUG:on stmt: $const40.2 = const(str, zero-size array to reduction operation maximum which has no identity)
2024-07-15 06:11:44,278 DEBUG:on stmt: $46call.3 = call $28load_global.0($const40.2, func=$28load_global.0, args=[Var($const40.2, arraymath.py:572)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:44,278 DEBUG:on stmt: <static> raise <class 'ValueError'>('zero-size array to reduction operation maximum which has no identity')
2024-07-15 06:11:44,278 DEBUG:==== SSA block rewrite pass on 58
2024-07-15 06:11:44,278 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5DE86D0>
2024-07-15 06:11:44,278 DEBUG:on stmt: $58load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:44,278 DEBUG:on stmt: $70load_attr.2 = getattr(value=$58load_global.0, attr=nditer)
2024-07-15 06:11:44,278 DEBUG:on stmt: it = call $70load_attr.2(a, func=$70load_attr.2, args=[Var(a, arraymath.py:570)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:44,278 DEBUG:on stmt: $98load_global.5 = global(next: <built-in function next>)
2024-07-15 06:11:44,278 DEBUG:on stmt: $116call.8 = call $98load_global.5(it, func=$98load_global.5, args=[Var(it, arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:44,278 DEBUG:on stmt: $126load_method.10 = getattr(value=$116call.8, attr=take)
2024-07-15 06:11:44,279 DEBUG:on stmt: $const148.11 = const(int, 0)
2024-07-15 06:11:44,279 DEBUG:on stmt: max_value = call $126load_method.10($const148.11, func=$126load_method.10, args=[Var($const148.11, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:44,279 DEBUG:on stmt: $168load_deref.14 = freevar(pre_return_func: <function return_false at 0x00000221B53CACA0>)
2024-07-15 06:11:44,279 DEBUG:on stmt: $176call.16 = call $168load_deref.14(max_value, func=$168load_deref.14, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:44,279 DEBUG:find_def var='max_value' stmt=$176call.16 = call $168load_deref.14(max_value, func=$168load_deref.14, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:44,279 DEBUG:on stmt: bool186 = global(bool: <class 'bool'>)
2024-07-15 06:11:44,279 DEBUG:on stmt: $186pred = call bool186($176call.16, func=bool186, args=(Var($176call.16, arraymath.py:577),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:44,279 DEBUG:on stmt: branch $186pred, 188, 192
2024-07-15 06:11:44,279 DEBUG:==== SSA block rewrite pass on 188
2024-07-15 06:11:44,279 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5DE86D0>
2024-07-15 06:11:44,279 DEBUG:on stmt: $190return_value.1 = cast(value=max_value)
2024-07-15 06:11:44,279 DEBUG:find_def var='max_value' stmt=$190return_value.1 = cast(value=max_value)
2024-07-15 06:11:44,279 DEBUG:find_def_from_top label 188
2024-07-15 06:11:44,279 DEBUG:idom 58 from label 188
2024-07-15 06:11:44,279 DEBUG:find_def_from_bottom label 58
2024-07-15 06:11:44,279 DEBUG:on stmt: return $190return_value.1
2024-07-15 06:11:44,279 DEBUG:==== SSA block rewrite pass on 192
2024-07-15 06:11:44,279 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5DE86D0>
2024-07-15 06:11:44,279 DEBUG:on stmt: $194get_iter.1 = getiter(value=it)
2024-07-15 06:11:44,279 DEBUG:on stmt: $phi196.0 = $194get_iter.1
2024-07-15 06:11:44,279 DEBUG:on stmt: jump 196
2024-07-15 06:11:44,279 DEBUG:==== SSA block rewrite pass on 196
2024-07-15 06:11:44,279 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5DE86D0>
2024-07-15 06:11:44,279 DEBUG:on stmt: $196for_iter.1 = iternext(value=$phi196.0)
2024-07-15 06:11:44,279 DEBUG:on stmt: $196for_iter.2 = pair_first(value=$196for_iter.1)
2024-07-15 06:11:44,279 DEBUG:on stmt: $196for_iter.3 = pair_second(value=$196for_iter.1)
2024-07-15 06:11:44,279 DEBUG:on stmt: $phi198.1 = $196for_iter.2
2024-07-15 06:11:44,279 DEBUG:on stmt: branch $196for_iter.3, 198, 300
2024-07-15 06:11:44,279 DEBUG:==== SSA block rewrite pass on 198
2024-07-15 06:11:44,279 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5DE86D0>
2024-07-15 06:11:44,279 DEBUG:on stmt: view = $phi198.1
2024-07-15 06:11:44,279 DEBUG:on stmt: $202load_method.4 = getattr(value=view, attr=item)
2024-07-15 06:11:44,279 DEBUG:on stmt: v = call $202load_method.4(func=$202load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:44,279 DEBUG:on stmt: $242load_deref.7 = freevar(pre_return_func: <function return_false at 0x00000221B53CACA0>)
2024-07-15 06:11:44,280 DEBUG:on stmt: $250call.9 = call $242load_deref.7(v, func=$242load_deref.7, args=[Var(v, arraymath.py:581)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:44,280 DEBUG:on stmt: bool260 = global(bool: <class 'bool'>)
2024-07-15 06:11:44,280 DEBUG:on stmt: $260pred = call bool260($250call.9, func=bool260, args=(Var($250call.9, arraymath.py:582),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:44,280 DEBUG:on stmt: branch $260pred, 262, 270
2024-07-15 06:11:44,280 DEBUG:==== SSA block rewrite pass on 262
2024-07-15 06:11:44,280 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5DE86D0>
2024-07-15 06:11:44,280 DEBUG:on stmt: $268return_value.2 = cast(value=v)
2024-07-15 06:11:44,280 DEBUG:on stmt: return $268return_value.2
2024-07-15 06:11:44,280 DEBUG:==== SSA block rewrite pass on 270
2024-07-15 06:11:44,280 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5DE86D0>
2024-07-15 06:11:44,280 DEBUG:on stmt: $272load_deref.2 = freevar(comparator: <function max_comparator at 0x00000221B53CA3E0>)
2024-07-15 06:11:44,280 DEBUG:on stmt: $282call.5 = call $272load_deref.2(v, max_value, func=$272load_deref.2, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:44,280 DEBUG:find_def var='max_value' stmt=$282call.5 = call $272load_deref.2(v, max_value, func=$272load_deref.2, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:44,280 DEBUG:find_def_from_top label 270
2024-07-15 06:11:44,280 DEBUG:idom 198 from label 270
2024-07-15 06:11:44,280 DEBUG:find_def_from_bottom label 198
2024-07-15 06:11:44,280 DEBUG:find_def_from_top label 198
2024-07-15 06:11:44,280 DEBUG:idom 196 from label 198
2024-07-15 06:11:44,280 DEBUG:find_def_from_bottom label 196
2024-07-15 06:11:44,280 DEBUG:find_def_from_top label 196
2024-07-15 06:11:44,280 DEBUG:insert phi node max_value.2 = phi(incoming_values=[], incoming_blocks=[]) at 196
2024-07-15 06:11:44,280 DEBUG:find_def_from_bottom label 192
2024-07-15 06:11:44,280 DEBUG:find_def_from_top label 192
2024-07-15 06:11:44,280 DEBUG:idom 58 from label 192
2024-07-15 06:11:44,280 DEBUG:find_def_from_bottom label 58
2024-07-15 06:11:44,280 DEBUG:incoming_def max_value = call $126load_method.10($const148.11, func=$126load_method.10, args=[Var($const148.11, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:44,280 DEBUG:find_def_from_bottom label 298
2024-07-15 06:11:44,280 DEBUG:find_def_from_top label 298
2024-07-15 06:11:44,280 DEBUG:insert phi node max_value.3 = phi(incoming_values=[], incoming_blocks=[]) at 298
2024-07-15 06:11:44,281 DEBUG:find_def_from_bottom label 294
2024-07-15 06:11:44,281 DEBUG:incoming_def max_value.1 = v
2024-07-15 06:11:44,281 DEBUG:find_def_from_bottom label 270
2024-07-15 06:11:44,281 DEBUG:find_def_from_top label 270
2024-07-15 06:11:44,281 DEBUG:idom 198 from label 270
2024-07-15 06:11:44,281 DEBUG:find_def_from_bottom label 198
2024-07-15 06:11:44,281 DEBUG:find_def_from_top label 198
2024-07-15 06:11:44,281 DEBUG:idom 196 from label 198
2024-07-15 06:11:44,281 DEBUG:find_def_from_bottom label 196
2024-07-15 06:11:44,281 DEBUG:incoming_def max_value.2 = phi(incoming_values=[Var(max_value, arraymath.py:576)], incoming_blocks=[192])
2024-07-15 06:11:44,281 DEBUG:incoming_def max_value.3 = phi(incoming_values=[Var(max_value.1, arraymath.py:585), Var(max_value.2, arraymath.py:584)], incoming_blocks=[294, 270])
2024-07-15 06:11:44,281 DEBUG:replaced with: $282call.5 = call $272load_deref.2(v, max_value.2, func=$272load_deref.2, args=[Var(v, arraymath.py:581), Var(max_value.2, arraymath.py:584)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:44,281 DEBUG:on stmt: bool292 = global(bool: <class 'bool'>)
2024-07-15 06:11:44,281 DEBUG:on stmt: $292pred = call bool292($282call.5, func=bool292, args=(Var($282call.5, arraymath.py:584),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:44,281 DEBUG:on stmt: branch $292pred, 294, 298
2024-07-15 06:11:44,281 DEBUG:==== SSA block rewrite pass on 294
2024-07-15 06:11:44,281 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5DE86D0>
2024-07-15 06:11:44,281 DEBUG:on stmt: max_value.1 = v
2024-07-15 06:11:44,281 DEBUG:on stmt: jump 298
2024-07-15 06:11:44,281 DEBUG:==== SSA block rewrite pass on 298
2024-07-15 06:11:44,281 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5DE86D0>
2024-07-15 06:11:44,281 DEBUG:on stmt: jump 196
2024-07-15 06:11:44,281 DEBUG:==== SSA block rewrite pass on 300
2024-07-15 06:11:44,281 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5DE86D0>
2024-07-15 06:11:44,281 DEBUG:on stmt: $302return_value.1 = cast(value=max_value)
2024-07-15 06:11:44,281 DEBUG:find_def var='max_value' stmt=$302return_value.1 = cast(value=max_value)
2024-07-15 06:11:44,281 DEBUG:find_def_from_top label 300
2024-07-15 06:11:44,281 DEBUG:idom 196 from label 300
2024-07-15 06:11:44,282 DEBUG:find_def_from_bottom label 196
2024-07-15 06:11:44,282 DEBUG:replaced with: $302return_value.1 = cast(value=max_value.2)
2024-07-15 06:11:44,282 DEBUG:on stmt: return $302return_value.1
2024-07-15 06:11:44,293 DEBUG:bytecode dump:
>          0	NOP(arg=None, lineno=4691)
           2	RESUME(arg=0, lineno=4691)
           4	LOAD_FAST(arg=1, lineno=4692)
           6	LOAD_FAST(arg=0, lineno=4692)
           8	LOAD_ATTR(arg=0, lineno=4692)
          18	LOAD_CONST(arg=1, lineno=4692)
          20	BINARY_OP(arg=10, lineno=4692)
          24	COMPARE_OP(arg=4, lineno=4692)
          30	POP_JUMP_FORWARD_IF_TRUE(arg=12, lineno=4692)
          32	LOAD_FAST(arg=1, lineno=4692)
          34	LOAD_FAST(arg=0, lineno=4692)
          36	LOAD_ATTR(arg=0, lineno=4692)
          46	UNARY_NEGATIVE(arg=None, lineno=4692)
          48	COMPARE_OP(arg=0, lineno=4692)
          54	POP_JUMP_FORWARD_IF_FALSE(arg=15, lineno=4692)
>         56	LOAD_GLOBAL(arg=3, lineno=4693)
          68	LOAD_CONST(arg=2, lineno=4693)
          70	PRECALL(arg=1, lineno=4693)
          74	CALL(arg=1, lineno=4693)
          84	RAISE_VARARGS(arg=1, lineno=4693)
>         86	LOAD_FAST(arg=0, lineno=4694)
          88	LOAD_METHOD(arg=2, lineno=4694)
         110	PRECALL(arg=0, lineno=4694)
         114	CALL(arg=0, lineno=4694)
         124	LOAD_FAST(arg=1, lineno=4694)
         126	BINARY_SUBSCR(arg=None, lineno=4694)
         136	RETURN_VALUE(arg=None, lineno=4694)
2024-07-15 06:11:44,293 DEBUG:pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-15 06:11:44,293 DEBUG:stack: []
2024-07-15 06:11:44,293 DEBUG:state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-15 06:11:44,293 DEBUG:dispatch pc=0, inst=NOP(arg=None, lineno=4691)
2024-07-15 06:11:44,293 DEBUG:stack []
2024-07-15 06:11:44,293 DEBUG:dispatch pc=2, inst=RESUME(arg=0, lineno=4691)
2024-07-15 06:11:44,293 DEBUG:stack []
2024-07-15 06:11:44,293 DEBUG:dispatch pc=4, inst=LOAD_FAST(arg=1, lineno=4692)
2024-07-15 06:11:44,293 DEBUG:stack []
2024-07-15 06:11:44,293 DEBUG:dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=4692)
2024-07-15 06:11:44,293 DEBUG:stack ['$indices4.0']
2024-07-15 06:11:44,293 DEBUG:dispatch pc=8, inst=LOAD_ATTR(arg=0, lineno=4692)
2024-07-15 06:11:44,294 DEBUG:stack ['$indices4.0', '$a6.1']
2024-07-15 06:11:44,294 DEBUG:dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=4692)
2024-07-15 06:11:44,294 DEBUG:stack ['$indices4.0', '$8load_attr.2']
2024-07-15 06:11:44,294 DEBUG:dispatch pc=20, inst=BINARY_OP(arg=10, lineno=4692)
2024-07-15 06:11:44,294 DEBUG:stack ['$indices4.0', '$8load_attr.2', '$const18.3']
2024-07-15 06:11:44,294 DEBUG:dispatch pc=24, inst=COMPARE_OP(arg=4, lineno=4692)
2024-07-15 06:11:44,294 DEBUG:stack ['$indices4.0', '$binop_sub20.4']
2024-07-15 06:11:44,294 DEBUG:dispatch pc=30, inst=POP_JUMP_FORWARD_IF_TRUE(arg=12, lineno=4692)
2024-07-15 06:11:44,294 DEBUG:stack ['$24compare_op.5']
2024-07-15 06:11:44,294 DEBUG:end state. edges=[Edge(pc=32, stack=(), blockstack=(), npush=0), Edge(pc=56, stack=(), blockstack=(), npush=0)]
2024-07-15 06:11:44,294 DEBUG:pending: deque([State(pc_initial=32 nstack_initial=0), State(pc_initial=56 nstack_initial=0)])
2024-07-15 06:11:44,294 DEBUG:stack: []
2024-07-15 06:11:44,294 DEBUG:state.pc_initial: State(pc_initial=32 nstack_initial=0)
2024-07-15 06:11:44,294 DEBUG:dispatch pc=32, inst=LOAD_FAST(arg=1, lineno=4692)
2024-07-15 06:11:44,294 DEBUG:stack []
2024-07-15 06:11:44,294 DEBUG:dispatch pc=34, inst=LOAD_FAST(arg=0, lineno=4692)
2024-07-15 06:11:44,294 DEBUG:stack ['$indices32.0']
2024-07-15 06:11:44,294 DEBUG:dispatch pc=36, inst=LOAD_ATTR(arg=0, lineno=4692)
2024-07-15 06:11:44,294 DEBUG:stack ['$indices32.0', '$a34.1']
2024-07-15 06:11:44,294 DEBUG:dispatch pc=46, inst=UNARY_NEGATIVE(arg=None, lineno=4692)
2024-07-15 06:11:44,294 DEBUG:stack ['$indices32.0', '$36load_attr.2']
2024-07-15 06:11:44,294 DEBUG:dispatch pc=48, inst=COMPARE_OP(arg=0, lineno=4692)
2024-07-15 06:11:44,294 DEBUG:stack ['$indices32.0', '$46unary_negative.3']
2024-07-15 06:11:44,294 DEBUG:dispatch pc=54, inst=POP_JUMP_FORWARD_IF_FALSE(arg=15, lineno=4692)
2024-07-15 06:11:44,294 DEBUG:stack ['$48compare_op.4']
2024-07-15 06:11:44,294 DEBUG:end state. edges=[Edge(pc=56, stack=(), blockstack=(), npush=0), Edge(pc=86, stack=(), blockstack=(), npush=0)]
2024-07-15 06:11:44,294 DEBUG:pending: deque([State(pc_initial=56 nstack_initial=0), State(pc_initial=56 nstack_initial=0), State(pc_initial=86 nstack_initial=0)])
2024-07-15 06:11:44,294 DEBUG:stack: []
2024-07-15 06:11:44,294 DEBUG:state.pc_initial: State(pc_initial=56 nstack_initial=0)
2024-07-15 06:11:44,295 DEBUG:dispatch pc=56, inst=LOAD_GLOBAL(arg=3, lineno=4693)
2024-07-15 06:11:44,295 DEBUG:stack []
2024-07-15 06:11:44,295 DEBUG:dispatch pc=68, inst=LOAD_CONST(arg=2, lineno=4693)
2024-07-15 06:11:44,295 DEBUG:stack ['$null$56.1', '$56load_global.0']
2024-07-15 06:11:44,295 DEBUG:dispatch pc=70, inst=PRECALL(arg=1, lineno=4693)
2024-07-15 06:11:44,295 DEBUG:stack ['$null$56.1', '$56load_global.0', '$const68.2']
2024-07-15 06:11:44,295 DEBUG:dispatch pc=74, inst=CALL(arg=1, lineno=4693)
2024-07-15 06:11:44,295 DEBUG:stack ['$null$56.1', '$56load_global.0', '$const68.2']
2024-07-15 06:11:44,295 DEBUG:dispatch pc=84, inst=RAISE_VARARGS(arg=1, lineno=4693)
2024-07-15 06:11:44,295 DEBUG:stack ['$74call.3']
2024-07-15 06:11:44,295 DEBUG:end state. edges=[]
2024-07-15 06:11:44,295 DEBUG:pending: deque([State(pc_initial=56 nstack_initial=0), State(pc_initial=86 nstack_initial=0)])
2024-07-15 06:11:44,295 DEBUG:pending: deque([State(pc_initial=86 nstack_initial=0)])
2024-07-15 06:11:44,295 DEBUG:stack: []
2024-07-15 06:11:44,295 DEBUG:state.pc_initial: State(pc_initial=86 nstack_initial=0)
2024-07-15 06:11:44,295 DEBUG:dispatch pc=86, inst=LOAD_FAST(arg=0, lineno=4694)
2024-07-15 06:11:44,295 DEBUG:stack []
2024-07-15 06:11:44,295 DEBUG:dispatch pc=88, inst=LOAD_METHOD(arg=2, lineno=4694)
2024-07-15 06:11:44,295 DEBUG:stack ['$a86.0']
2024-07-15 06:11:44,295 DEBUG:dispatch pc=110, inst=PRECALL(arg=0, lineno=4694)
2024-07-15 06:11:44,295 DEBUG:stack ['$null$88.1', '$88load_method.2']
2024-07-15 06:11:44,295 DEBUG:dispatch pc=114, inst=CALL(arg=0, lineno=4694)
2024-07-15 06:11:44,295 DEBUG:stack ['$null$88.1', '$88load_method.2']
2024-07-15 06:11:44,295 DEBUG:dispatch pc=124, inst=LOAD_FAST(arg=1, lineno=4694)
2024-07-15 06:11:44,295 DEBUG:stack ['$114call.3']
2024-07-15 06:11:44,295 DEBUG:dispatch pc=126, inst=BINARY_SUBSCR(arg=None, lineno=4694)
2024-07-15 06:11:44,295 DEBUG:stack ['$114call.3', '$indices124.4']
2024-07-15 06:11:44,295 DEBUG:dispatch pc=136, inst=RETURN_VALUE(arg=None, lineno=4694)
2024-07-15 06:11:44,295 DEBUG:stack ['$126binary_subscr.5']
2024-07-15 06:11:44,295 DEBUG:end state. edges=[]
2024-07-15 06:11:44,296 DEBUG:-------------------------Prune PHIs-------------------------
2024-07-15 06:11:44,296 DEBUG:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=32 nstack_initial=0): set(),
             State(pc_initial=56 nstack_initial=0): set(),
             State(pc_initial=86 nstack_initial=0): set()})
2024-07-15 06:11:44,296 DEBUG:defmap: {}
2024-07-15 06:11:44,296 DEBUG:phismap: defaultdict(<class 'set'>, {})
2024-07-15 06:11:44,296 DEBUG:changing phismap: defaultdict(<class 'set'>, {})
2024-07-15 06:11:44,296 DEBUG:keep phismap: {}
2024-07-15 06:11:44,296 DEBUG:new_out: defaultdict(<class 'dict'>, {})
2024-07-15 06:11:44,296 DEBUG:----------------------DONE Prune PHIs-----------------------
2024-07-15 06:11:44,296 DEBUG:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$indices4.0'}), (6, {'res': '$a6.1'}), (8, {'item': '$a6.1', 'res': '$8load_attr.2'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'res': '$const18.3'}), (20, {'op': '-', 'lhs': '$8load_attr.2', 'rhs': '$const18.3', 'res': '$binop_sub20.4'}), (22, {}), (24, {'lhs': '$indices4.0', 'rhs': '$binop_sub20.4', 'res': '$24compare_op.5'}), (26, {}), (28, {}), (30, {'pred': '$24compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={32: (), 56: ()})
2024-07-15 06:11:44,296 DEBUG:block_infos State(pc_initial=32 nstack_initial=0):
AdaptBlockInfo(insts=((32, {'res': '$indices32.0'}), (34, {'res': '$a34.1'}), (36, {'item': '$a34.1', 'res': '$36load_attr.2'}), (38, {}), (40, {}), (42, {}), (44, {}), (46, {'value': '$36load_attr.2', 'res': '$46unary_negative.3'}), (48, {'lhs': '$indices32.0', 'rhs': '$46unary_negative.3', 'res': '$48compare_op.4'}), (50, {}), (52, {}), (54, {'pred': '$48compare_op.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={56: (), 86: ()})
2024-07-15 06:11:44,296 DEBUG:block_infos State(pc_initial=56 nstack_initial=0):
AdaptBlockInfo(insts=((56, {'idx': 1, 'res': '$56load_global.0'}), (58, {}), (60, {}), (62, {}), (64, {}), (66, {}), (68, {'res': '$const68.2'}), (70, {}), (72, {}), (74, {'func': '$56load_global.0', 'args': ['$const68.2'], 'kw_names': None, 'res': '$74call.3'}), (76, {}), (78, {}), (80, {}), (82, {}), (84, {'exc': '$74call.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-15 06:11:44,296 DEBUG:block_infos State(pc_initial=86 nstack_initial=0):
AdaptBlockInfo(insts=((86, {'res': '$a86.0'}), (88, {'item': '$a86.0', 'res': '$88load_method.2'}), (90, {}), (92, {}), (94, {}), (96, {}), (98, {}), (100, {}), (102, {}), (104, {}), (106, {}), (108, {}), (110, {}), (112, {}), (114, {'func': '$88load_method.2', 'args': [], 'kw_names': None, 'res': '$114call.3'}), (116, {}), (118, {}), (120, {}), (122, {}), (124, {'res': '$indices124.4'}), (126, {'index': '$indices124.4', 'target': '$114call.3', 'res': '$126binary_subscr.5'}), (128, {}), (130, {}), (132, {}), (134, {}), (136, {'retval': '$126binary_subscr.5', 'castval': '$136return_value.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-15 06:11:44,296 DEBUG:label 0:
    a = arg(0, name=a)                       ['a']
    indices = arg(1, name=indices)           ['indices']
    $8load_attr.2 = getattr(value=a, attr=size) ['$8load_attr.2', 'a']
    $const18.3 = const(int, 1)               ['$const18.3']
    $binop_sub20.4 = $8load_attr.2 - $const18.3 ['$8load_attr.2', '$binop_sub20.4', '$const18.3']
    $24compare_op.5 = indices > $binop_sub20.4 ['$24compare_op.5', '$binop_sub20.4', 'indices']
    bool30 = global(bool: <class 'bool'>)    ['bool30']
    $30pred = call bool30($24compare_op.5, func=bool30, args=(Var($24compare_op.5, arrayobj.py:4692),), kws=(), vararg=None, varkwarg=None, target=None) ['$24compare_op.5', '$30pred', 'bool30']
    branch $30pred, 56, 32                   ['$30pred']
label 32:
    $36load_attr.2 = getattr(value=a, attr=size) ['$36load_attr.2', 'a']
    $46unary_negative.3 = unary(fn=<built-in function neg>, value=$36load_attr.2) ['$36load_attr.2', '$46unary_negative.3']
    $48compare_op.4 = indices < $46unary_negative.3 ['$46unary_negative.3', '$48compare_op.4', 'indices']
    bool54 = global(bool: <class 'bool'>)    ['bool54']
    $54pred = call bool54($48compare_op.4, func=bool54, args=(Var($48compare_op.4, arrayobj.py:4692),), kws=(), vararg=None, varkwarg=None, target=None) ['$48compare_op.4', '$54pred', 'bool54']
    branch $54pred, 56, 86                   ['$54pred']
label 56:
    $56load_global.0 = global(IndexError: <class 'IndexError'>) ['$56load_global.0']
    $const68.2 = const(str, Index out of bounds) ['$const68.2']
    $74call.3 = call $56load_global.0($const68.2, func=$56load_global.0, args=[Var($const68.2, arrayobj.py:4693)], kws=(), vararg=None, varkwarg=None, target=None) ['$56load_global.0', '$74call.3', '$const68.2']
    raise $74call.3                          ['$74call.3']
label 86:
    $88load_method.2 = getattr(value=a, attr=ravel) ['$88load_method.2', 'a']
    $114call.3 = call $88load_method.2(func=$88load_method.2, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$114call.3', '$88load_method.2']
    $126binary_subscr.5 = getitem(value=$114call.3, index=indices, fn=<built-in function getitem>) ['$114call.3', '$126binary_subscr.5', 'indices']
    $136return_value.6 = cast(value=$126binary_subscr.5) ['$126binary_subscr.5', '$136return_value.6']
    return $136return_value.6                ['$136return_value.6']

2024-07-15 06:11:44,307 DEBUG:==== SSA block analysis pass on 0
2024-07-15 06:11:44,307 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5C1CCD0>
2024-07-15 06:11:44,307 DEBUG:on stmt: a = arg(0, name=a)
2024-07-15 06:11:44,307 DEBUG:on stmt: indices = arg(1, name=indices)
2024-07-15 06:11:44,307 DEBUG:on stmt: $8load_attr.2 = getattr(value=a, attr=size)
2024-07-15 06:11:44,307 DEBUG:on stmt: $const18.3 = const(int, 1)
2024-07-15 06:11:44,307 DEBUG:on stmt: $binop_sub20.4 = $8load_attr.2 - $const18.3
2024-07-15 06:11:44,308 DEBUG:on stmt: $24compare_op.5 = indices > $binop_sub20.4
2024-07-15 06:11:44,308 DEBUG:on stmt: bool30 = global(bool: <class 'bool'>)
2024-07-15 06:11:44,308 DEBUG:on stmt: $30pred = call bool30($24compare_op.5, func=bool30, args=(Var($24compare_op.5, arrayobj.py:4692),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:44,308 DEBUG:on stmt: branch $30pred, 56, 32
2024-07-15 06:11:44,308 DEBUG:==== SSA block analysis pass on 32
2024-07-15 06:11:44,308 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5C1CCD0>
2024-07-15 06:11:44,308 DEBUG:on stmt: $36load_attr.2 = getattr(value=a, attr=size)
2024-07-15 06:11:44,308 DEBUG:on stmt: $46unary_negative.3 = unary(fn=<built-in function neg>, value=$36load_attr.2)
2024-07-15 06:11:44,308 DEBUG:on stmt: $48compare_op.4 = indices < $46unary_negative.3
2024-07-15 06:11:44,308 DEBUG:on stmt: bool54 = global(bool: <class 'bool'>)
2024-07-15 06:11:44,308 DEBUG:on stmt: $54pred = call bool54($48compare_op.4, func=bool54, args=(Var($48compare_op.4, arrayobj.py:4692),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:44,308 DEBUG:on stmt: branch $54pred, 56, 86
2024-07-15 06:11:44,308 DEBUG:==== SSA block analysis pass on 56
2024-07-15 06:11:44,308 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5C1CCD0>
2024-07-15 06:11:44,308 DEBUG:on stmt: $56load_global.0 = global(IndexError: <class 'IndexError'>)
2024-07-15 06:11:44,308 DEBUG:on stmt: $const68.2 = const(str, Index out of bounds)
2024-07-15 06:11:44,308 DEBUG:on stmt: $74call.3 = call $56load_global.0($const68.2, func=$56load_global.0, args=[Var($const68.2, arrayobj.py:4693)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:44,308 DEBUG:on stmt: <static> raise <class 'IndexError'>('Index out of bounds')
2024-07-15 06:11:44,308 DEBUG:==== SSA block analysis pass on 86
2024-07-15 06:11:44,308 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5C1CCD0>
2024-07-15 06:11:44,308 DEBUG:on stmt: $88load_method.2 = getattr(value=a, attr=ravel)
2024-07-15 06:11:44,308 DEBUG:on stmt: $114call.3 = call $88load_method.2(func=$88load_method.2, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:44,308 DEBUG:on stmt: $126binary_subscr.5 = getitem(value=$114call.3, index=indices, fn=<built-in function getitem>)
2024-07-15 06:11:44,308 DEBUG:on stmt: $136return_value.6 = cast(value=$126binary_subscr.5)
2024-07-15 06:11:44,308 DEBUG:on stmt: return $136return_value.6
2024-07-15 06:11:44,309 DEBUG:defs defaultdict(<class 'list'>,
            {'$114call.3': [(<numba.core.ir.Assign object at 0x00000221B5DA5B90>,
                             86)],
             '$126binary_subscr.5': [(<numba.core.ir.Assign object at 0x00000221B5D3E410>,
                                      86)],
             '$136return_value.6': [(<numba.core.ir.Assign object at 0x00000221B5D3DED0>,
                                     86)],
             '$24compare_op.5': [(<numba.core.ir.Assign object at 0x00000221B5D52C10>,
                                  0)],
             '$30pred': [(<numba.core.ir.Assign object at 0x00000221B5D53CD0>,
                          0)],
             '$36load_attr.2': [(<numba.core.ir.Assign object at 0x00000221B5D52B90>,
                                 32)],
             '$46unary_negative.3': [(<numba.core.ir.Assign object at 0x00000221B5D53090>,
                                      32)],
             '$48compare_op.4': [(<numba.core.ir.Assign object at 0x00000221B5D50F90>,
                                  32)],
             '$54pred': [(<numba.core.ir.Assign object at 0x00000221B5D50210>,
                          32)],
             '$56load_global.0': [(<numba.core.ir.Assign object at 0x00000221B5D52E50>,
                                   56)],
             '$74call.3': [(<numba.core.ir.Assign object at 0x00000221B5D53410>,
                            56)],
             '$88load_method.2': [(<numba.core.ir.Assign object at 0x00000221B5DA7510>,
                                   86)],
             '$8load_attr.2': [(<numba.core.ir.Assign object at 0x00000221B5D53B10>,
                                0)],
             '$binop_sub20.4': [(<numba.core.ir.Assign object at 0x00000221B5D53250>,
                                 0)],
             '$const18.3': [(<numba.core.ir.Assign object at 0x00000221B5D53F10>,
                             0)],
             '$const68.2': [(<numba.core.ir.Assign object at 0x00000221B5D51A90>,
                             56)],
             'a': [(<numba.core.ir.Assign object at 0x00000221B677BC90>, 0)],
             'bool30': [(<numba.core.ir.Assign object at 0x00000221B5D52AD0>,
                         0)],
             'bool54': [(<numba.core.ir.Assign object at 0x00000221B5D53B50>,
                         32)],
             'indices': [(<numba.core.ir.Assign object at 0x00000221B6778D50>,
                          0)]})
2024-07-15 06:11:44,309 DEBUG:SSA violators <numba.core.utils.OrderedSet object at 0x00000221B5DA5E90>
2024-07-15 06:11:44,335 DEBUG:bytecode dump:
>          0	NOP(arg=None, lineno=2230)
           2	RESUME(arg=0, lineno=2230)
           4	LOAD_FAST(arg=0, lineno=2232)
           6	LOAD_METHOD(arg=0, lineno=2232)
          28	LOAD_FAST(arg=0, lineno=2232)
          30	LOAD_ATTR(arg=1, lineno=2232)
          40	PRECALL(arg=1, lineno=2232)
          44	CALL(arg=1, lineno=2232)
          54	RETURN_VALUE(arg=None, lineno=2232)
2024-07-15 06:11:44,335 DEBUG:pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-15 06:11:44,335 DEBUG:stack: []
2024-07-15 06:11:44,335 DEBUG:state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-15 06:11:44,335 DEBUG:dispatch pc=0, inst=NOP(arg=None, lineno=2230)
2024-07-15 06:11:44,335 DEBUG:stack []
2024-07-15 06:11:44,335 DEBUG:dispatch pc=2, inst=RESUME(arg=0, lineno=2230)
2024-07-15 06:11:44,335 DEBUG:stack []
2024-07-15 06:11:44,335 DEBUG:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2232)
2024-07-15 06:11:44,335 DEBUG:stack []
2024-07-15 06:11:44,335 DEBUG:dispatch pc=6, inst=LOAD_METHOD(arg=0, lineno=2232)
2024-07-15 06:11:44,335 DEBUG:stack ['$ary4.0']
2024-07-15 06:11:44,335 DEBUG:dispatch pc=28, inst=LOAD_FAST(arg=0, lineno=2232)
2024-07-15 06:11:44,335 DEBUG:stack ['$null$6.1', '$6load_method.2']
2024-07-15 06:11:44,335 DEBUG:dispatch pc=30, inst=LOAD_ATTR(arg=1, lineno=2232)
2024-07-15 06:11:44,335 DEBUG:stack ['$null$6.1', '$6load_method.2', '$ary28.3']
2024-07-15 06:11:44,335 DEBUG:dispatch pc=40, inst=PRECALL(arg=1, lineno=2232)
2024-07-15 06:11:44,335 DEBUG:stack ['$null$6.1', '$6load_method.2', '$30load_attr.4']
2024-07-15 06:11:44,335 DEBUG:dispatch pc=44, inst=CALL(arg=1, lineno=2232)
2024-07-15 06:11:44,335 DEBUG:stack ['$null$6.1', '$6load_method.2', '$30load_attr.4']
2024-07-15 06:11:44,335 DEBUG:dispatch pc=54, inst=RETURN_VALUE(arg=None, lineno=2232)
2024-07-15 06:11:44,335 DEBUG:stack ['$44call.5']
2024-07-15 06:11:44,335 DEBUG:end state. edges=[]
2024-07-15 06:11:44,335 DEBUG:-------------------------Prune PHIs-------------------------
2024-07-15 06:11:44,335 DEBUG:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-07-15 06:11:44,335 DEBUG:defmap: {}
2024-07-15 06:11:44,335 DEBUG:phismap: defaultdict(<class 'set'>, {})
2024-07-15 06:11:44,336 DEBUG:changing phismap: defaultdict(<class 'set'>, {})
2024-07-15 06:11:44,336 DEBUG:keep phismap: {}
2024-07-15 06:11:44,336 DEBUG:new_out: defaultdict(<class 'dict'>, {})
2024-07-15 06:11:44,336 DEBUG:----------------------DONE Prune PHIs-----------------------
2024-07-15 06:11:44,336 DEBUG:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$ary4.0'}), (6, {'item': '$ary4.0', 'res': '$6load_method.2'}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {}), (20, {}), (22, {}), (24, {}), (26, {}), (28, {'res': '$ary28.3'}), (30, {'item': '$ary28.3', 'res': '$30load_attr.4'}), (32, {}), (34, {}), (36, {}), (38, {}), (40, {}), (42, {}), (44, {'func': '$6load_method.2', 'args': ['$30load_attr.4'], 'kw_names': None, 'res': '$44call.5'}), (46, {}), (48, {}), (50, {}), (52, {}), (54, {'retval': '$44call.5', 'castval': '$54return_value.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-15 06:11:44,336 DEBUG:label 0:
    ary = arg(0, name=ary)                   ['ary']
    $6load_method.2 = getattr(value=ary, attr=reshape) ['$6load_method.2', 'ary']
    $30load_attr.4 = getattr(value=ary, attr=size) ['$30load_attr.4', 'ary']
    $44call.5 = call $6load_method.2($30load_attr.4, func=$6load_method.2, args=[Var($30load_attr.4, arrayobj.py:2232)], kws=(), vararg=None, varkwarg=None, target=None) ['$30load_attr.4', '$44call.5', '$6load_method.2']
    $54return_value.6 = cast(value=$44call.5) ['$44call.5', '$54return_value.6']
    return $54return_value.6                 ['$54return_value.6']

2024-07-15 06:11:44,344 DEBUG:==== SSA block analysis pass on 0
2024-07-15 06:11:44,344 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5C8C0D0>
2024-07-15 06:11:44,344 DEBUG:on stmt: ary = arg(0, name=ary)
2024-07-15 06:11:44,344 DEBUG:on stmt: $6load_method.2 = getattr(value=ary, attr=reshape)
2024-07-15 06:11:44,344 DEBUG:on stmt: $30load_attr.4 = getattr(value=ary, attr=size)
2024-07-15 06:11:44,344 DEBUG:on stmt: $44call.5 = call $6load_method.2($30load_attr.4, func=$6load_method.2, args=[Var($30load_attr.4, arrayobj.py:2232)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:44,344 DEBUG:on stmt: $54return_value.6 = cast(value=$44call.5)
2024-07-15 06:11:44,344 DEBUG:on stmt: return $54return_value.6
2024-07-15 06:11:44,344 DEBUG:defs defaultdict(<class 'list'>,
            {'$30load_attr.4': [(<numba.core.ir.Assign object at 0x00000221B5C5DE90>,
                                 0)],
             '$44call.5': [(<numba.core.ir.Assign object at 0x00000221B5C5E950>,
                            0)],
             '$54return_value.6': [(<numba.core.ir.Assign object at 0x00000221B5C5D690>,
                                    0)],
             '$6load_method.2': [(<numba.core.ir.Assign object at 0x00000221B5C5C550>,
                                  0)],
             'ary': [(<numba.core.ir.Assign object at 0x00000221B5C5E3D0>, 0)]})
2024-07-15 06:11:44,344 DEBUG:SSA violators <numba.core.utils.OrderedSet object at 0x00000221B5C8C0D0>
2024-07-15 06:11:44,427 DEBUG:bytecode dump:
>          0	NOP(arg=None, lineno=486)
           2	RESUME(arg=0, lineno=486)
           4	LOAD_CONST(arg=1, lineno=488)
           6	RETURN_VALUE(arg=None, lineno=488)
2024-07-15 06:11:44,427 DEBUG:pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-15 06:11:44,427 DEBUG:stack: []
2024-07-15 06:11:44,428 DEBUG:state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-15 06:11:44,428 DEBUG:dispatch pc=0, inst=NOP(arg=None, lineno=486)
2024-07-15 06:11:44,428 DEBUG:stack []
2024-07-15 06:11:44,428 DEBUG:dispatch pc=2, inst=RESUME(arg=0, lineno=486)
2024-07-15 06:11:44,428 DEBUG:stack []
2024-07-15 06:11:44,428 DEBUG:dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=488)
2024-07-15 06:11:44,428 DEBUG:stack []
2024-07-15 06:11:44,428 DEBUG:dispatch pc=6, inst=RETURN_VALUE(arg=None, lineno=488)
2024-07-15 06:11:44,428 DEBUG:stack ['$const4.0']
2024-07-15 06:11:44,428 DEBUG:end state. edges=[]
2024-07-15 06:11:44,428 DEBUG:-------------------------Prune PHIs-------------------------
2024-07-15 06:11:44,428 DEBUG:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-07-15 06:11:44,428 DEBUG:defmap: {}
2024-07-15 06:11:44,428 DEBUG:phismap: defaultdict(<class 'set'>, {})
2024-07-15 06:11:44,428 DEBUG:changing phismap: defaultdict(<class 'set'>, {})
2024-07-15 06:11:44,428 DEBUG:keep phismap: {}
2024-07-15 06:11:44,428 DEBUG:new_out: defaultdict(<class 'dict'>, {})
2024-07-15 06:11:44,428 DEBUG:----------------------DONE Prune PHIs-----------------------
2024-07-15 06:11:44,428 DEBUG:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$const4.0'}), (6, {'retval': '$const4.0', 'castval': '$6return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-15 06:11:44,428 DEBUG:label 0:
    a = arg(0, name=a)                       ['a']
    $const4.0 = const(bool, False)           ['$const4.0']
    $6return_value.1 = cast(value=$const4.0) ['$6return_value.1', '$const4.0']
    return $6return_value.1                  ['$6return_value.1']

2024-07-15 06:11:44,432 DEBUG:==== SSA block analysis pass on 0
2024-07-15 06:11:44,432 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5C13710>
2024-07-15 06:11:44,432 DEBUG:on stmt: a = arg(0, name=a)
2024-07-15 06:11:44,432 DEBUG:on stmt: $const4.0 = const(bool, False)
2024-07-15 06:11:44,432 DEBUG:on stmt: $6return_value.1 = cast(value=$const4.0)
2024-07-15 06:11:44,432 DEBUG:on stmt: return $6return_value.1
2024-07-15 06:11:44,432 DEBUG:defs defaultdict(<class 'list'>,
            {'$6return_value.1': [(<numba.core.ir.Assign object at 0x00000221B5C3E7D0>,
                                   0)],
             '$const4.0': [(<numba.core.ir.Assign object at 0x00000221B5C3DE10>,
                            0)],
             'a': [(<numba.core.ir.Assign object at 0x00000221B5C3CCD0>, 0)]})
2024-07-15 06:11:44,432 DEBUG:SSA violators <numba.core.utils.OrderedSet object at 0x00000221B5C13710>
2024-07-15 06:11:44,452 DEBUG:bytecode dump:
>          0	NOP(arg=None, lineno=481)
           2	RESUME(arg=0, lineno=481)
           4	LOAD_FAST(arg=0, lineno=483)
           6	LOAD_FAST(arg=1, lineno=483)
           8	COMPARE_OP(arg=4, lineno=483)
          14	RETURN_VALUE(arg=None, lineno=483)
2024-07-15 06:11:44,452 DEBUG:pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-15 06:11:44,452 DEBUG:stack: []
2024-07-15 06:11:44,452 DEBUG:state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-15 06:11:44,452 DEBUG:dispatch pc=0, inst=NOP(arg=None, lineno=481)
2024-07-15 06:11:44,452 DEBUG:stack []
2024-07-15 06:11:44,452 DEBUG:dispatch pc=2, inst=RESUME(arg=0, lineno=481)
2024-07-15 06:11:44,452 DEBUG:stack []
2024-07-15 06:11:44,452 DEBUG:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=483)
2024-07-15 06:11:44,453 DEBUG:stack []
2024-07-15 06:11:44,453 DEBUG:dispatch pc=6, inst=LOAD_FAST(arg=1, lineno=483)
2024-07-15 06:11:44,453 DEBUG:stack ['$a4.0']
2024-07-15 06:11:44,453 DEBUG:dispatch pc=8, inst=COMPARE_OP(arg=4, lineno=483)
2024-07-15 06:11:44,453 DEBUG:stack ['$a4.0', '$min_val6.1']
2024-07-15 06:11:44,453 DEBUG:dispatch pc=14, inst=RETURN_VALUE(arg=None, lineno=483)
2024-07-15 06:11:44,453 DEBUG:stack ['$8compare_op.2']
2024-07-15 06:11:44,453 DEBUG:end state. edges=[]
2024-07-15 06:11:44,453 DEBUG:-------------------------Prune PHIs-------------------------
2024-07-15 06:11:44,453 DEBUG:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-07-15 06:11:44,453 DEBUG:defmap: {}
2024-07-15 06:11:44,453 DEBUG:phismap: defaultdict(<class 'set'>, {})
2024-07-15 06:11:44,453 DEBUG:changing phismap: defaultdict(<class 'set'>, {})
2024-07-15 06:11:44,453 DEBUG:keep phismap: {}
2024-07-15 06:11:44,453 DEBUG:new_out: defaultdict(<class 'dict'>, {})
2024-07-15 06:11:44,453 DEBUG:----------------------DONE Prune PHIs-----------------------
2024-07-15 06:11:44,453 DEBUG:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$a4.0'}), (6, {'res': '$min_val6.1'}), (8, {'lhs': '$a4.0', 'rhs': '$min_val6.1', 'res': '$8compare_op.2'}), (10, {}), (12, {}), (14, {'retval': '$8compare_op.2', 'castval': '$14return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-15 06:11:44,453 DEBUG:label 0:
    a = arg(0, name=a)                       ['a']
    min_val = arg(1, name=min_val)           ['min_val']
    $8compare_op.2 = a > min_val             ['$8compare_op.2', 'a', 'min_val']
    $14return_value.3 = cast(value=$8compare_op.2) ['$14return_value.3', '$8compare_op.2']
    return $14return_value.3                 ['$14return_value.3']

2024-07-15 06:11:44,456 DEBUG:==== SSA block analysis pass on 0
2024-07-15 06:11:44,456 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B599F7D0>
2024-07-15 06:11:44,456 DEBUG:on stmt: a = arg(0, name=a)
2024-07-15 06:11:44,456 DEBUG:on stmt: min_val = arg(1, name=min_val)
2024-07-15 06:11:44,456 DEBUG:on stmt: $8compare_op.2 = a > min_val
2024-07-15 06:11:44,457 DEBUG:on stmt: $14return_value.3 = cast(value=$8compare_op.2)
2024-07-15 06:11:44,457 DEBUG:on stmt: return $14return_value.3
2024-07-15 06:11:44,457 DEBUG:defs defaultdict(<class 'list'>,
            {'$14return_value.3': [(<numba.core.ir.Assign object at 0x00000221B599F490>,
                                    0)],
             '$8compare_op.2': [(<numba.core.ir.Assign object at 0x00000221B599F390>,
                                 0)],
             'a': [(<numba.core.ir.Assign object at 0x00000221B599E590>, 0)],
             'min_val': [(<numba.core.ir.Assign object at 0x00000221B599C090>,
                          0)]})
2024-07-15 06:11:44,457 DEBUG:SSA violators <numba.core.utils.OrderedSet object at 0x00000221B599F7D0>
2024-07-15 06:11:44,591 DEBUG:bytecode dump:
>          0	NOP(arg=None, lineno=437)
           2	COPY_FREE_VARS(arg=1, lineno=437)
           4	RESUME(arg=0, lineno=437)
           6	LOAD_DEREF(arg=3, lineno=440)
           8	STORE_FAST(arg=1, lineno=440)
          10	LOAD_GLOBAL(arg=1, lineno=441)
          22	LOAD_ATTR(arg=1, lineno=441)
          32	LOAD_FAST(arg=0, lineno=441)
          34	PRECALL(arg=1, lineno=441)
          38	CALL(arg=1, lineno=441)
          48	GET_ITER(arg=None, lineno=441)
>         50	FOR_ITER(arg=25, lineno=441)
          52	STORE_FAST(arg=2, lineno=441)
          54	LOAD_FAST(arg=1, lineno=442)
          56	LOAD_FAST(arg=2, lineno=442)
          58	LOAD_METHOD(arg=2, lineno=442)
          80	PRECALL(arg=0, lineno=442)
          84	CALL(arg=0, lineno=442)
          94	BINARY_OP(arg=13, lineno=442)
          98	STORE_FAST(arg=1, lineno=442)
         100	JUMP_BACKWARD(arg=26, lineno=442)
>        102	LOAD_FAST(arg=1, lineno=443)
         104	LOAD_FAST(arg=0, lineno=443)
         106	LOAD_ATTR(arg=3, lineno=443)
         116	BINARY_OP(arg=11, lineno=443)
         120	RETURN_VALUE(arg=None, lineno=443)
2024-07-15 06:11:44,591 DEBUG:pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-15 06:11:44,591 DEBUG:stack: []
2024-07-15 06:11:44,592 DEBUG:state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-15 06:11:44,592 DEBUG:dispatch pc=0, inst=NOP(arg=None, lineno=437)
2024-07-15 06:11:44,592 DEBUG:stack []
2024-07-15 06:11:44,592 DEBUG:dispatch pc=2, inst=COPY_FREE_VARS(arg=1, lineno=437)
2024-07-15 06:11:44,592 DEBUG:stack []
2024-07-15 06:11:44,592 DEBUG:dispatch pc=4, inst=RESUME(arg=0, lineno=437)
2024-07-15 06:11:44,592 DEBUG:stack []
2024-07-15 06:11:44,592 DEBUG:dispatch pc=6, inst=LOAD_DEREF(arg=3, lineno=440)
2024-07-15 06:11:44,592 DEBUG:stack []
2024-07-15 06:11:44,592 DEBUG:dispatch pc=8, inst=STORE_FAST(arg=1, lineno=440)
2024-07-15 06:11:44,592 DEBUG:stack ['$6load_deref.0']
2024-07-15 06:11:44,592 DEBUG:dispatch pc=10, inst=LOAD_GLOBAL(arg=1, lineno=441)
2024-07-15 06:11:44,592 DEBUG:stack []
2024-07-15 06:11:44,592 DEBUG:dispatch pc=22, inst=LOAD_ATTR(arg=1, lineno=441)
2024-07-15 06:11:44,592 DEBUG:stack ['$null$10.2', '$10load_global.1']
2024-07-15 06:11:44,592 DEBUG:dispatch pc=32, inst=LOAD_FAST(arg=0, lineno=441)
2024-07-15 06:11:44,592 DEBUG:stack ['$null$10.2', '$22load_attr.3']
2024-07-15 06:11:44,593 DEBUG:dispatch pc=34, inst=PRECALL(arg=1, lineno=441)
2024-07-15 06:11:44,593 DEBUG:stack ['$null$10.2', '$22load_attr.3', '$a32.4']
2024-07-15 06:11:44,593 DEBUG:dispatch pc=38, inst=CALL(arg=1, lineno=441)
2024-07-15 06:11:44,593 DEBUG:stack ['$null$10.2', '$22load_attr.3', '$a32.4']
2024-07-15 06:11:44,593 DEBUG:dispatch pc=48, inst=GET_ITER(arg=None, lineno=441)
2024-07-15 06:11:44,593 DEBUG:stack ['$38call.5']
2024-07-15 06:11:44,593 DEBUG:end state. edges=[Edge(pc=50, stack=('$48get_iter.6',), blockstack=(), npush=0)]
2024-07-15 06:11:44,593 DEBUG:pending: deque([State(pc_initial=50 nstack_initial=1)])
2024-07-15 06:11:44,593 DEBUG:stack: ['$phi50.0']
2024-07-15 06:11:44,593 DEBUG:state.pc_initial: State(pc_initial=50 nstack_initial=1)
2024-07-15 06:11:44,593 DEBUG:dispatch pc=50, inst=FOR_ITER(arg=25, lineno=441)
2024-07-15 06:11:44,593 DEBUG:stack ['$phi50.0']
2024-07-15 06:11:44,593 DEBUG:end state. edges=[Edge(pc=102, stack=(), blockstack=(), npush=0), Edge(pc=52, stack=('$phi50.0', '$50for_iter.2'), blockstack=(), npush=0)]
2024-07-15 06:11:44,593 DEBUG:pending: deque([State(pc_initial=102 nstack_initial=0), State(pc_initial=52 nstack_initial=2)])
2024-07-15 06:11:44,593 DEBUG:stack: []
2024-07-15 06:11:44,593 DEBUG:state.pc_initial: State(pc_initial=102 nstack_initial=0)
2024-07-15 06:11:44,593 DEBUG:dispatch pc=102, inst=LOAD_FAST(arg=1, lineno=443)
2024-07-15 06:11:44,593 DEBUG:stack []
2024-07-15 06:11:44,593 DEBUG:dispatch pc=104, inst=LOAD_FAST(arg=0, lineno=443)
2024-07-15 06:11:44,594 DEBUG:stack ['$c102.0']
2024-07-15 06:11:44,594 DEBUG:dispatch pc=106, inst=LOAD_ATTR(arg=3, lineno=443)
2024-07-15 06:11:44,594 DEBUG:stack ['$c102.0', '$a104.1']
2024-07-15 06:11:44,594 DEBUG:dispatch pc=116, inst=BINARY_OP(arg=11, lineno=443)
2024-07-15 06:11:44,594 DEBUG:stack ['$c102.0', '$106load_attr.2']
2024-07-15 06:11:44,594 DEBUG:dispatch pc=120, inst=RETURN_VALUE(arg=None, lineno=443)
2024-07-15 06:11:44,594 DEBUG:stack ['$binop_truediv116.3']
2024-07-15 06:11:44,594 DEBUG:end state. edges=[]
2024-07-15 06:11:44,594 DEBUG:pending: deque([State(pc_initial=52 nstack_initial=2)])
2024-07-15 06:11:44,594 DEBUG:stack: ['$phi52.0', '$phi52.1']
2024-07-15 06:11:44,594 DEBUG:state.pc_initial: State(pc_initial=52 nstack_initial=2)
2024-07-15 06:11:44,594 DEBUG:dispatch pc=52, inst=STORE_FAST(arg=2, lineno=441)
2024-07-15 06:11:44,594 DEBUG:stack ['$phi52.0', '$phi52.1']
2024-07-15 06:11:44,594 DEBUG:dispatch pc=54, inst=LOAD_FAST(arg=1, lineno=442)
2024-07-15 06:11:44,594 DEBUG:stack ['$phi52.0']
2024-07-15 06:11:44,594 DEBUG:dispatch pc=56, inst=LOAD_FAST(arg=2, lineno=442)
2024-07-15 06:11:44,594 DEBUG:stack ['$phi52.0', '$c54.2']
2024-07-15 06:11:44,594 DEBUG:dispatch pc=58, inst=LOAD_METHOD(arg=2, lineno=442)
2024-07-15 06:11:44,594 DEBUG:stack ['$phi52.0', '$c54.2', '$v56.3']
2024-07-15 06:11:44,595 DEBUG:dispatch pc=80, inst=PRECALL(arg=0, lineno=442)
2024-07-15 06:11:44,595 DEBUG:stack ['$phi52.0', '$c54.2', '$null$58.4', '$58load_method.5']
2024-07-15 06:11:44,595 DEBUG:dispatch pc=84, inst=CALL(arg=0, lineno=442)
2024-07-15 06:11:44,595 DEBUG:stack ['$phi52.0', '$c54.2', '$null$58.4', '$58load_method.5']
2024-07-15 06:11:44,595 DEBUG:dispatch pc=94, inst=BINARY_OP(arg=13, lineno=442)
2024-07-15 06:11:44,595 DEBUG:stack ['$phi52.0', '$c54.2', '$84call.6']
2024-07-15 06:11:44,595 DEBUG:dispatch pc=98, inst=STORE_FAST(arg=1, lineno=442)
2024-07-15 06:11:44,595 DEBUG:stack ['$phi52.0', '$binop_iadd94.7']
2024-07-15 06:11:44,595 DEBUG:dispatch pc=100, inst=JUMP_BACKWARD(arg=26, lineno=442)
2024-07-15 06:11:44,595 DEBUG:stack ['$phi52.0']
2024-07-15 06:11:44,595 DEBUG:end state. edges=[Edge(pc=50, stack=('$phi52.0',), blockstack=(), npush=0)]
2024-07-15 06:11:44,595 DEBUG:pending: deque([State(pc_initial=50 nstack_initial=1)])
2024-07-15 06:11:44,595 DEBUG:-------------------------Prune PHIs-------------------------
2024-07-15 06:11:44,595 DEBUG:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=50 nstack_initial=1): {'$phi50.0'},
             State(pc_initial=52 nstack_initial=2): {'$phi52.1'},
             State(pc_initial=102 nstack_initial=0): set()})
2024-07-15 06:11:44,595 DEBUG:defmap: {'$phi50.0': State(pc_initial=0 nstack_initial=0),
 '$phi52.1': State(pc_initial=50 nstack_initial=1)}
2024-07-15 06:11:44,596 DEBUG:phismap: defaultdict(<class 'set'>,
            {'$phi50.0': {('$48get_iter.6',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi52.0', State(pc_initial=52 nstack_initial=2))},
             '$phi52.0': {('$phi50.0', State(pc_initial=50 nstack_initial=1))},
             '$phi52.1': {('$50for_iter.2',
                           State(pc_initial=50 nstack_initial=1))}})
2024-07-15 06:11:44,596 DEBUG:changing phismap: defaultdict(<class 'set'>,
            {'$phi50.0': {('$48get_iter.6',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi50.0', State(pc_initial=50 nstack_initial=1))},
             '$phi52.0': {('$48get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.1': {('$50for_iter.2',
                           State(pc_initial=50 nstack_initial=1))}})
2024-07-15 06:11:44,596 DEBUG:changing phismap: defaultdict(<class 'set'>,
            {'$phi50.0': {('$48get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.0': {('$48get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.1': {('$50for_iter.2',
                           State(pc_initial=50 nstack_initial=1))}})
2024-07-15 06:11:44,596 DEBUG:changing phismap: defaultdict(<class 'set'>,
            {'$phi50.0': {('$48get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.0': {('$48get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.1': {('$50for_iter.2',
                           State(pc_initial=50 nstack_initial=1))}})
2024-07-15 06:11:44,596 DEBUG:keep phismap: {'$phi50.0': {('$48get_iter.6', State(pc_initial=0 nstack_initial=0))},
 '$phi52.1': {('$50for_iter.2', State(pc_initial=50 nstack_initial=1))}}
2024-07-15 06:11:44,597 DEBUG:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi50.0': '$48get_iter.6'},
             State(pc_initial=50 nstack_initial=1): {'$phi52.1': '$50for_iter.2'}})
2024-07-15 06:11:44,597 DEBUG:----------------------DONE Prune PHIs-----------------------
2024-07-15 06:11:44,597 DEBUG:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {}), (6, {'res': '$6load_deref.0'}), (8, {'value': '$6load_deref.0'}), (10, {'idx': 0, 'res': '$10load_global.1'}), (12, {}), (14, {}), (16, {}), (18, {}), (20, {}), (22, {'item': '$10load_global.1', 'res': '$22load_attr.3'}), (24, {}), (26, {}), (28, {}), (30, {}), (32, {'res': '$a32.4'}), (34, {}), (36, {}), (38, {'func': '$22load_attr.3', 'args': ['$a32.4'], 'kw_names': None, 'res': '$38call.5'}), (40, {}), (42, {}), (44, {}), (46, {}), (48, {'value': '$38call.5', 'res': '$48get_iter.6'})), outgoing_phis={'$phi50.0': '$48get_iter.6'}, blockstack=(), active_try_block=None, outgoing_edgepushed={50: ('$48get_iter.6',)})
2024-07-15 06:11:44,597 DEBUG:block_infos State(pc_initial=50 nstack_initial=1):
AdaptBlockInfo(insts=((50, {'iterator': '$phi50.0', 'pair': '$50for_iter.1', 'indval': '$50for_iter.2', 'pred': '$50for_iter.3'}),), outgoing_phis={'$phi52.1': '$50for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={102: (), 52: ('$phi50.0', '$50for_iter.2')})
2024-07-15 06:11:44,597 DEBUG:block_infos State(pc_initial=52 nstack_initial=2):
AdaptBlockInfo(insts=((52, {'value': '$phi52.1'}), (54, {'res': '$c54.2'}), (56, {'res': '$v56.3'}), (58, {'item': '$v56.3', 'res': '$58load_method.5'}), (60, {}), (62, {}), (64, {}), (66, {}), (68, {}), (70, {}), (72, {}), (74, {}), (76, {}), (78, {}), (80, {}), (82, {}), (84, {'func': '$58load_method.5', 'args': [], 'kw_names': None, 'res': '$84call.6'}), (86, {}), (88, {}), (90, {}), (92, {}), (94, {'op': '+=', 'lhs': '$c54.2', 'rhs': '$84call.6', 'res': '$binop_iadd94.7'}), (96, {}), (98, {'value': '$binop_iadd94.7'}), (100, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={50: ('$phi52.0',)})
2024-07-15 06:11:44,597 DEBUG:block_infos State(pc_initial=102 nstack_initial=0):
AdaptBlockInfo(insts=((102, {'res': '$c102.0'}), (104, {'res': '$a104.1'}), (106, {'item': '$a104.1', 'res': '$106load_attr.2'}), (108, {}), (110, {}), (112, {}), (114, {}), (116, {'op': '/', 'lhs': '$c102.0', 'rhs': '$106load_attr.2', 'res': '$binop_truediv116.3'}), (118, {}), (120, {'retval': '$binop_truediv116.3', 'castval': '$120return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-15 06:11:44,598 DEBUG:label 0:
    a = arg(0, name=a)                       ['a']
    c = freevar(acc_init: 0.0)               ['c']
    $10load_global.1 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$10load_global.1']
    $22load_attr.3 = getattr(value=$10load_global.1, attr=nditer) ['$10load_global.1', '$22load_attr.3']
    $38call.5 = call $22load_attr.3(a, func=$22load_attr.3, args=[Var(a, arraymath.py:437)], kws=(), vararg=None, varkwarg=None, target=None) ['$22load_attr.3', '$38call.5', 'a']
    $48get_iter.6 = getiter(value=$38call.5) ['$38call.5', '$48get_iter.6']
    $phi50.0 = $48get_iter.6                 ['$48get_iter.6', '$phi50.0']
    jump 50                                  []
label 50:
    $50for_iter.1 = iternext(value=$phi50.0) ['$50for_iter.1', '$phi50.0']
    $50for_iter.2 = pair_first(value=$50for_iter.1) ['$50for_iter.1', '$50for_iter.2']
    $50for_iter.3 = pair_second(value=$50for_iter.1) ['$50for_iter.1', '$50for_iter.3']
    $phi52.1 = $50for_iter.2                 ['$50for_iter.2', '$phi52.1']
    branch $50for_iter.3, 52, 102            ['$50for_iter.3']
label 52:
    v = $phi52.1                             ['$phi52.1', 'v']
    $58load_method.5 = getattr(value=v, attr=item) ['$58load_method.5', 'v']
    $84call.6 = call $58load_method.5(func=$58load_method.5, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$58load_method.5', '$84call.6']
    $binop_iadd94.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$84call.6, static_lhs=Undefined, static_rhs=Undefined) ['$84call.6', '$binop_iadd94.7', 'c']
    c = $binop_iadd94.7                      ['$binop_iadd94.7', 'c']
    jump 50                                  []
label 102:
    $106load_attr.2 = getattr(value=a, attr=size) ['$106load_attr.2', 'a']
    $binop_truediv116.3 = c / $106load_attr.2 ['$106load_attr.2', '$binop_truediv116.3', 'c']
    $120return_value.4 = cast(value=$binop_truediv116.3) ['$120return_value.4', '$binop_truediv116.3']
    return $120return_value.4                ['$120return_value.4']

2024-07-15 06:11:44,608 DEBUG:==== SSA block analysis pass on 0
2024-07-15 06:11:44,608 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B615B4D0>
2024-07-15 06:11:44,608 DEBUG:on stmt: a = arg(0, name=a)
2024-07-15 06:11:44,608 DEBUG:on stmt: c = freevar(acc_init: 0.0)
2024-07-15 06:11:44,608 DEBUG:on stmt: $10load_global.1 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:44,608 DEBUG:on stmt: $22load_attr.3 = getattr(value=$10load_global.1, attr=nditer)
2024-07-15 06:11:44,608 DEBUG:on stmt: $38call.5 = call $22load_attr.3(a, func=$22load_attr.3, args=[Var(a, arraymath.py:437)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:44,608 DEBUG:on stmt: $48get_iter.6 = getiter(value=$38call.5)
2024-07-15 06:11:44,608 DEBUG:on stmt: $phi50.0 = $48get_iter.6
2024-07-15 06:11:44,608 DEBUG:on stmt: jump 50
2024-07-15 06:11:44,608 DEBUG:==== SSA block analysis pass on 50
2024-07-15 06:11:44,608 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B615B4D0>
2024-07-15 06:11:44,608 DEBUG:on stmt: $50for_iter.1 = iternext(value=$phi50.0)
2024-07-15 06:11:44,608 DEBUG:on stmt: $50for_iter.2 = pair_first(value=$50for_iter.1)
2024-07-15 06:11:44,608 DEBUG:on stmt: $50for_iter.3 = pair_second(value=$50for_iter.1)
2024-07-15 06:11:44,608 DEBUG:on stmt: $phi52.1 = $50for_iter.2
2024-07-15 06:11:44,608 DEBUG:on stmt: branch $50for_iter.3, 52, 102
2024-07-15 06:11:44,608 DEBUG:==== SSA block analysis pass on 52
2024-07-15 06:11:44,608 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B615B4D0>
2024-07-15 06:11:44,608 DEBUG:on stmt: v = $phi52.1
2024-07-15 06:11:44,608 DEBUG:on stmt: $58load_method.5 = getattr(value=v, attr=item)
2024-07-15 06:11:44,608 DEBUG:on stmt: $84call.6 = call $58load_method.5(func=$58load_method.5, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:44,608 DEBUG:on stmt: $binop_iadd94.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$84call.6, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:44,608 DEBUG:on stmt: c = $binop_iadd94.7
2024-07-15 06:11:44,608 DEBUG:on stmt: jump 50
2024-07-15 06:11:44,608 DEBUG:==== SSA block analysis pass on 102
2024-07-15 06:11:44,608 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B615B4D0>
2024-07-15 06:11:44,608 DEBUG:on stmt: $106load_attr.2 = getattr(value=a, attr=size)
2024-07-15 06:11:44,609 DEBUG:on stmt: $binop_truediv116.3 = c / $106load_attr.2
2024-07-15 06:11:44,609 DEBUG:on stmt: $120return_value.4 = cast(value=$binop_truediv116.3)
2024-07-15 06:11:44,609 DEBUG:on stmt: return $120return_value.4
2024-07-15 06:11:44,609 DEBUG:defs defaultdict(<class 'list'>,
            {'$106load_attr.2': [(<numba.core.ir.Assign object at 0x00000221B5E82690>,
                                  102)],
             '$10load_global.1': [(<numba.core.ir.Assign object at 0x00000221B7B4AF10>,
                                   0)],
             '$120return_value.4': [(<numba.core.ir.Assign object at 0x00000221B5E80910>,
                                     102)],
             '$22load_attr.3': [(<numba.core.ir.Assign object at 0x00000221B7B4B8D0>,
                                 0)],
             '$38call.5': [(<numba.core.ir.Assign object at 0x00000221B7B4B890>,
                            0)],
             '$48get_iter.6': [(<numba.core.ir.Assign object at 0x00000221B7B4AE50>,
                                0)],
             '$50for_iter.1': [(<numba.core.ir.Assign object at 0x00000221B7B4B550>,
                                50)],
             '$50for_iter.2': [(<numba.core.ir.Assign object at 0x00000221B7B4BCD0>,
                                50)],
             '$50for_iter.3': [(<numba.core.ir.Assign object at 0x00000221B7B4BFD0>,
                                50)],
             '$58load_method.5': [(<numba.core.ir.Assign object at 0x00000221B5E80550>,
                                   52)],
             '$84call.6': [(<numba.core.ir.Assign object at 0x00000221B5E81690>,
                            52)],
             '$binop_iadd94.7': [(<numba.core.ir.Assign object at 0x00000221B5E839D0>,
                                  52)],
             '$binop_truediv116.3': [(<numba.core.ir.Assign object at 0x00000221B5E83490>,
                                      102)],
             '$phi50.0': [(<numba.core.ir.Assign object at 0x00000221B7B4AE10>,
                           0)],
             '$phi52.1': [(<numba.core.ir.Assign object at 0x00000221B7B48590>,
                           50)],
             'a': [(<numba.core.ir.Assign object at 0x00000221B6159450>, 0)],
             'c': [(<numba.core.ir.Assign object at 0x00000221B7B4A810>, 0),
                   (<numba.core.ir.Assign object at 0x00000221B5E80110>, 52)],
             'v': [(<numba.core.ir.Assign object at 0x00000221B7B4BF10>, 52)]})
2024-07-15 06:11:44,609 DEBUG:SSA violators <numba.core.utils.OrderedSet object at 0x00000221B615B4D0>
2024-07-15 06:11:44,609 DEBUG:Fix SSA violator on var c
2024-07-15 06:11:44,609 DEBUG:==== SSA block rewrite pass on 0
2024-07-15 06:11:44,609 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5E81A50>
2024-07-15 06:11:44,609 DEBUG:on stmt: a = arg(0, name=a)
2024-07-15 06:11:44,609 DEBUG:on stmt: c = freevar(acc_init: 0.0)
2024-07-15 06:11:44,609 DEBUG:first assign: c
2024-07-15 06:11:44,609 DEBUG:replaced with: c = freevar(acc_init: 0.0)
2024-07-15 06:11:44,609 DEBUG:on stmt: $10load_global.1 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:44,610 DEBUG:on stmt: $22load_attr.3 = getattr(value=$10load_global.1, attr=nditer)
2024-07-15 06:11:44,610 DEBUG:on stmt: $38call.5 = call $22load_attr.3(a, func=$22load_attr.3, args=[Var(a, arraymath.py:437)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:44,610 DEBUG:on stmt: $48get_iter.6 = getiter(value=$38call.5)
2024-07-15 06:11:44,610 DEBUG:on stmt: $phi50.0 = $48get_iter.6
2024-07-15 06:11:44,610 DEBUG:on stmt: jump 50
2024-07-15 06:11:44,610 DEBUG:==== SSA block rewrite pass on 50
2024-07-15 06:11:44,610 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5E81A50>
2024-07-15 06:11:44,610 DEBUG:on stmt: $50for_iter.1 = iternext(value=$phi50.0)
2024-07-15 06:11:44,610 DEBUG:on stmt: $50for_iter.2 = pair_first(value=$50for_iter.1)
2024-07-15 06:11:44,610 DEBUG:on stmt: $50for_iter.3 = pair_second(value=$50for_iter.1)
2024-07-15 06:11:44,610 DEBUG:on stmt: $phi52.1 = $50for_iter.2
2024-07-15 06:11:44,610 DEBUG:on stmt: branch $50for_iter.3, 52, 102
2024-07-15 06:11:44,610 DEBUG:==== SSA block rewrite pass on 52
2024-07-15 06:11:44,610 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5E81A50>
2024-07-15 06:11:44,610 DEBUG:on stmt: v = $phi52.1
2024-07-15 06:11:44,610 DEBUG:on stmt: $58load_method.5 = getattr(value=v, attr=item)
2024-07-15 06:11:44,610 DEBUG:on stmt: $84call.6 = call $58load_method.5(func=$58load_method.5, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:44,610 DEBUG:on stmt: $binop_iadd94.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$84call.6, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:44,610 DEBUG:on stmt: c = $binop_iadd94.7
2024-07-15 06:11:44,610 DEBUG:replaced with: c.1 = $binop_iadd94.7
2024-07-15 06:11:44,610 DEBUG:on stmt: jump 50
2024-07-15 06:11:44,610 DEBUG:==== SSA block rewrite pass on 102
2024-07-15 06:11:44,610 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5E81A50>
2024-07-15 06:11:44,610 DEBUG:on stmt: $106load_attr.2 = getattr(value=a, attr=size)
2024-07-15 06:11:44,610 DEBUG:on stmt: $binop_truediv116.3 = c / $106load_attr.2
2024-07-15 06:11:44,610 DEBUG:on stmt: $120return_value.4 = cast(value=$binop_truediv116.3)
2024-07-15 06:11:44,610 DEBUG:on stmt: return $120return_value.4
2024-07-15 06:11:44,610 DEBUG:Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x00000221B5E82750>],
             52: [<numba.core.ir.Assign object at 0x00000221B5E834D0>]})
2024-07-15 06:11:44,610 DEBUG:==== SSA block rewrite pass on 0
2024-07-15 06:11:44,610 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5E81590>
2024-07-15 06:11:44,610 DEBUG:on stmt: a = arg(0, name=a)
2024-07-15 06:11:44,610 DEBUG:on stmt: c = freevar(acc_init: 0.0)
2024-07-15 06:11:44,610 DEBUG:on stmt: $10load_global.1 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:44,610 DEBUG:on stmt: $22load_attr.3 = getattr(value=$10load_global.1, attr=nditer)
2024-07-15 06:11:44,611 DEBUG:on stmt: $38call.5 = call $22load_attr.3(a, func=$22load_attr.3, args=[Var(a, arraymath.py:437)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:44,611 DEBUG:on stmt: $48get_iter.6 = getiter(value=$38call.5)
2024-07-15 06:11:44,611 DEBUG:on stmt: $phi50.0 = $48get_iter.6
2024-07-15 06:11:44,611 DEBUG:on stmt: jump 50
2024-07-15 06:11:44,611 DEBUG:==== SSA block rewrite pass on 50
2024-07-15 06:11:44,611 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5E81590>
2024-07-15 06:11:44,611 DEBUG:on stmt: $50for_iter.1 = iternext(value=$phi50.0)
2024-07-15 06:11:44,611 DEBUG:on stmt: $50for_iter.2 = pair_first(value=$50for_iter.1)
2024-07-15 06:11:44,611 DEBUG:on stmt: $50for_iter.3 = pair_second(value=$50for_iter.1)
2024-07-15 06:11:44,611 DEBUG:on stmt: $phi52.1 = $50for_iter.2
2024-07-15 06:11:44,611 DEBUG:on stmt: branch $50for_iter.3, 52, 102
2024-07-15 06:11:44,611 DEBUG:==== SSA block rewrite pass on 52
2024-07-15 06:11:44,611 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5E81590>
2024-07-15 06:11:44,611 DEBUG:on stmt: v = $phi52.1
2024-07-15 06:11:44,611 DEBUG:on stmt: $58load_method.5 = getattr(value=v, attr=item)
2024-07-15 06:11:44,611 DEBUG:on stmt: $84call.6 = call $58load_method.5(func=$58load_method.5, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:44,611 DEBUG:on stmt: $binop_iadd94.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$84call.6, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:44,611 DEBUG:find_def var='c' stmt=$binop_iadd94.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$84call.6, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:44,611 DEBUG:find_def_from_top label 52
2024-07-15 06:11:44,611 DEBUG:idom 50 from label 52
2024-07-15 06:11:44,611 DEBUG:find_def_from_bottom label 50
2024-07-15 06:11:44,611 DEBUG:find_def_from_top label 50
2024-07-15 06:11:44,611 DEBUG:insert phi node c.2 = phi(incoming_values=[], incoming_blocks=[]) at 50
2024-07-15 06:11:44,611 DEBUG:find_def_from_bottom label 0
2024-07-15 06:11:44,611 DEBUG:incoming_def c = freevar(acc_init: 0.0)
2024-07-15 06:11:44,611 DEBUG:find_def_from_bottom label 52
2024-07-15 06:11:44,611 DEBUG:incoming_def c.1 = $binop_iadd94.7
2024-07-15 06:11:44,611 DEBUG:replaced with: $binop_iadd94.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c.2, rhs=$84call.6, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:44,611 DEBUG:on stmt: c.1 = $binop_iadd94.7
2024-07-15 06:11:44,611 DEBUG:on stmt: jump 50
2024-07-15 06:11:44,611 DEBUG:==== SSA block rewrite pass on 102
2024-07-15 06:11:44,611 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5E81590>
2024-07-15 06:11:44,611 DEBUG:on stmt: $106load_attr.2 = getattr(value=a, attr=size)
2024-07-15 06:11:44,612 DEBUG:on stmt: $binop_truediv116.3 = c / $106load_attr.2
2024-07-15 06:11:44,612 DEBUG:find_def var='c' stmt=$binop_truediv116.3 = c / $106load_attr.2
2024-07-15 06:11:44,612 DEBUG:find_def_from_top label 102
2024-07-15 06:11:44,612 DEBUG:idom 50 from label 102
2024-07-15 06:11:44,612 DEBUG:find_def_from_bottom label 50
2024-07-15 06:11:44,612 DEBUG:replaced with: $binop_truediv116.3 = c.2 / $106load_attr.2
2024-07-15 06:11:44,612 DEBUG:on stmt: $120return_value.4 = cast(value=$binop_truediv116.3)
2024-07-15 06:11:44,612 DEBUG:on stmt: return $120return_value.4
2024-07-15 06:11:44,967 DEBUG:bytecode dump:
>          0	NOP(arg=None, lineno=1209)
           2	RESUME(arg=0, lineno=1209)
           4	LOAD_FAST(arg=0, lineno=1221)
           6	LOAD_CONST(arg=1, lineno=1221)
           8	BINARY_SUBSCR(arg=None, lineno=1221)
          18	LOAD_GLOBAL(arg=1, lineno=1221)
          30	LOAD_ATTR(arg=1, lineno=1221)
          40	LOAD_FAST(arg=0, lineno=1221)
          42	LOAD_CONST(arg=2, lineno=1221)
          44	LOAD_GLOBAL(arg=5, lineno=1221)
          56	LOAD_FAST(arg=2, lineno=1221)
          58	LOAD_FAST(arg=0, lineno=1221)
          60	LOAD_ATTR(arg=3, lineno=1221)
          70	LOAD_CONST(arg=1, lineno=1221)
          72	BINARY_SUBSCR(arg=None, lineno=1221)
          82	PRECALL(arg=2, lineno=1221)
          86	CALL(arg=2, lineno=1221)
          96	BUILD_SLICE(arg=2, lineno=1221)
          98	BINARY_SUBSCR(arg=None, lineno=1221)
         108	PRECALL(arg=1, lineno=1221)
         112	CALL(arg=1, lineno=1221)
         122	COMPARE_OP(arg=5, lineno=1221)
         128	LOAD_FAST(arg=7, lineno=1221)
         130	LOAD_CONST(arg=1, lineno=1221)
         132	STORE_SUBSCR(arg=None, lineno=1221)
         136	LOAD_FAST(arg=7, lineno=1222)
         138	LOAD_CONST(arg=1, lineno=1222)
         140	COPY(arg=2, lineno=1222)
         142	COPY(arg=2, lineno=1222)
         144	BINARY_SUBSCR(arg=None, lineno=1222)
         154	LOAD_FAST(arg=0, lineno=1222)
         156	LOAD_CONST(arg=1, lineno=1222)
         158	BINARY_SUBSCR(arg=None, lineno=1222)
         168	LOAD_GLOBAL(arg=1, lineno=1222)
         180	LOAD_ATTR(arg=4, lineno=1222)
         190	LOAD_FAST(arg=0, lineno=1222)
         192	LOAD_CONST(arg=2, lineno=1222)
         194	LOAD_GLOBAL(arg=5, lineno=1222)
         206	LOAD_FAST(arg=4, lineno=1222)
         208	LOAD_FAST(arg=0, lineno=1222)
         210	LOAD_ATTR(arg=3, lineno=1222)
         220	LOAD_CONST(arg=1, lineno=1222)
         222	BINARY_SUBSCR(arg=None, lineno=1222)
         232	PRECALL(arg=2, lineno=1222)
         236	CALL(arg=2, lineno=1222)
         246	BUILD_SLICE(arg=2, lineno=1222)
         248	BINARY_SUBSCR(arg=None, lineno=1222)
         258	PRECALL(arg=1, lineno=1222)
         262	CALL(arg=1, lineno=1222)
         272	LOAD_FAST(arg=5, lineno=1222)
         274	BINARY_OP(arg=0, lineno=1222)
         278	COMPARE_OP(arg=5, lineno=1222)
         284	BINARY_OP(arg=14, lineno=1222)
         288	SWAP(arg=3, lineno=1222)
         290	SWAP(arg=2, lineno=1222)
         292	STORE_SUBSCR(arg=None, lineno=1222)
         296	LOAD_FAST(arg=7, lineno=1224)
         298	LOAD_CONST(arg=1, lineno=1224)
         300	BINARY_SUBSCR(arg=None, lineno=1224)
         310	POP_JUMP_FORWARD_IF_FALSE(arg=6, lineno=1224)
         312	LOAD_FAST(arg=6, lineno=1225)
         314	LOAD_CONST(arg=3, lineno=1225)
         316	BINARY_OP(arg=0, lineno=1225)
         320	STORE_FAST(arg=8, lineno=1225)
         322	JUMP_FORWARD(arg=2, lineno=1225)
>        324	LOAD_CONST(arg=3, lineno=1227)
         326	STORE_FAST(arg=8, lineno=1227)
>        328	LOAD_FAST(arg=8, lineno=1229)
         330	LOAD_FAST(arg=0, lineno=1229)
         332	LOAD_ATTR(arg=3, lineno=1229)
         342	LOAD_CONST(arg=1, lineno=1229)
         344	BINARY_SUBSCR(arg=None, lineno=1229)
         354	COMPARE_OP(arg=0, lineno=1229)
         360	POP_JUMP_FORWARD_IF_FALSE(arg=245, lineno=1229)
>        362	LOAD_GLOBAL(arg=1, lineno=1230)
         374	LOAD_ATTR(arg=1, lineno=1230)
         384	LOAD_FAST(arg=0, lineno=1230)
         386	LOAD_GLOBAL(arg=3, lineno=1230)
         398	LOAD_CONST(arg=1, lineno=1230)
         400	LOAD_FAST(arg=8, lineno=1230)
         402	LOAD_FAST(arg=1, lineno=1230)
         404	BINARY_OP(arg=10, lineno=1230)
         408	PRECALL(arg=2, lineno=1230)
         412	CALL(arg=2, lineno=1230)
         422	LOAD_GLOBAL(arg=5, lineno=1230)
         434	LOAD_FAST(arg=8, lineno=1230)
         436	LOAD_FAST(arg=2, lineno=1230)
         438	BINARY_OP(arg=0, lineno=1230)
         442	LOAD_FAST(arg=0, lineno=1230)
         444	LOAD_ATTR(arg=3, lineno=1230)
         454	LOAD_CONST(arg=1, lineno=1230)
         456	BINARY_SUBSCR(arg=None, lineno=1230)
         466	PRECALL(arg=2, lineno=1230)
         470	CALL(arg=2, lineno=1230)
         480	BUILD_SLICE(arg=2, lineno=1230)
         482	BINARY_SUBSCR(arg=None, lineno=1230)
         492	PRECALL(arg=1, lineno=1230)
         496	CALL(arg=1, lineno=1230)
         506	STORE_FAST(arg=9, lineno=1230)
         508	LOAD_FAST(arg=0, lineno=1233)
         510	LOAD_FAST(arg=8, lineno=1233)
         512	BINARY_SUBSCR(arg=None, lineno=1233)
         522	LOAD_FAST(arg=9, lineno=1233)
         524	COMPARE_OP(arg=2, lineno=1233)
         530	LOAD_FAST(arg=7, lineno=1233)
         532	LOAD_FAST(arg=8, lineno=1233)
         534	STORE_SUBSCR(arg=None, lineno=1233)
         538	LOAD_FAST(arg=7, lineno=1235)
         540	LOAD_FAST(arg=8, lineno=1235)
         542	BINARY_SUBSCR(arg=None, lineno=1235)
         552	POP_JUMP_FORWARD_IF_TRUE(arg=6, lineno=1235)
         554	LOAD_FAST(arg=8, lineno=1236)
         556	LOAD_CONST(arg=3, lineno=1236)
         558	BINARY_OP(arg=13, lineno=1236)
         562	STORE_FAST(arg=8, lineno=1236)
         564	JUMP_BACKWARD(arg=119, lineno=1237)
>        566	LOAD_GLOBAL(arg=1, lineno=1239)
         578	LOAD_ATTR(arg=4, lineno=1239)
         588	LOAD_FAST(arg=0, lineno=1239)
         590	LOAD_GLOBAL(arg=3, lineno=1239)
         602	LOAD_CONST(arg=1, lineno=1239)
         604	LOAD_FAST(arg=8, lineno=1239)
         606	LOAD_FAST(arg=3, lineno=1239)
         608	BINARY_OP(arg=10, lineno=1239)
         612	PRECALL(arg=2, lineno=1239)
         616	CALL(arg=2, lineno=1239)
         626	LOAD_GLOBAL(arg=5, lineno=1239)
         638	LOAD_FAST(arg=8, lineno=1239)
         640	LOAD_FAST(arg=4, lineno=1239)
         642	BINARY_OP(arg=0, lineno=1239)
         646	LOAD_FAST(arg=0, lineno=1239)
         648	LOAD_ATTR(arg=3, lineno=1239)
         658	LOAD_CONST(arg=1, lineno=1239)
         660	BINARY_SUBSCR(arg=None, lineno=1239)
         670	PRECALL(arg=2, lineno=1239)
         674	CALL(arg=2, lineno=1239)
         684	BUILD_SLICE(arg=2, lineno=1239)
         686	BINARY_SUBSCR(arg=None, lineno=1239)
         696	PRECALL(arg=1, lineno=1239)
         700	CALL(arg=1, lineno=1239)
         710	STORE_FAST(arg=10, lineno=1239)
         712	LOAD_FAST(arg=7, lineno=1240)
         714	LOAD_FAST(arg=8, lineno=1240)
         716	COPY(arg=2, lineno=1240)
         718	COPY(arg=2, lineno=1240)
         720	BINARY_SUBSCR(arg=None, lineno=1240)
         730	LOAD_FAST(arg=0, lineno=1240)
         732	LOAD_FAST(arg=8, lineno=1240)
         734	BINARY_SUBSCR(arg=None, lineno=1240)
         744	LOAD_FAST(arg=10, lineno=1240)
         746	LOAD_FAST(arg=5, lineno=1240)
         748	BINARY_OP(arg=0, lineno=1240)
         752	COMPARE_OP(arg=5, lineno=1240)
         758	BINARY_OP(arg=14, lineno=1240)
         762	SWAP(arg=3, lineno=1240)
         764	SWAP(arg=2, lineno=1240)
         766	STORE_SUBSCR(arg=None, lineno=1240)
         770	LOAD_FAST(arg=7, lineno=1242)
         772	LOAD_FAST(arg=8, lineno=1242)
         774	BINARY_SUBSCR(arg=None, lineno=1242)
         784	POP_JUMP_FORWARD_IF_TRUE(arg=6, lineno=1242)
         786	LOAD_FAST(arg=8, lineno=1243)
         788	LOAD_CONST(arg=3, lineno=1243)
         790	BINARY_OP(arg=13, lineno=1243)
         794	STORE_FAST(arg=8, lineno=1243)
         796	JUMP_BACKWARD(arg=235, lineno=1244)
>        798	LOAD_FAST(arg=8, lineno=1247)
         800	LOAD_FAST(arg=6, lineno=1247)
         802	LOAD_CONST(arg=3, lineno=1247)
         804	BINARY_OP(arg=0, lineno=1247)
         808	BINARY_OP(arg=13, lineno=1247)
         812	STORE_FAST(arg=8, lineno=1247)
         814	LOAD_FAST(arg=8, lineno=1229)
         816	LOAD_FAST(arg=0, lineno=1229)
         818	LOAD_ATTR(arg=3, lineno=1229)
         828	LOAD_CONST(arg=1, lineno=1229)
         830	BINARY_SUBSCR(arg=None, lineno=1229)
         840	COMPARE_OP(arg=0, lineno=1229)
         846	POP_JUMP_BACKWARD_IF_TRUE(arg=243, lineno=1229)
         848	LOAD_CONST(arg=2, lineno=1229)
         850	RETURN_VALUE(arg=None, lineno=1229)
>        852	LOAD_CONST(arg=2, lineno=1229)
         854	RETURN_VALUE(arg=None, lineno=1229)
2024-07-15 06:11:44,967 DEBUG:pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-15 06:11:44,967 DEBUG:stack: []
2024-07-15 06:11:44,967 DEBUG:state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-15 06:11:44,967 DEBUG:dispatch pc=0, inst=NOP(arg=None, lineno=1209)
2024-07-15 06:11:44,967 DEBUG:stack []
2024-07-15 06:11:44,967 DEBUG:dispatch pc=2, inst=RESUME(arg=0, lineno=1209)
2024-07-15 06:11:44,967 DEBUG:stack []
2024-07-15 06:11:44,967 DEBUG:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1221)
2024-07-15 06:11:44,967 DEBUG:stack []
2024-07-15 06:11:44,967 DEBUG:dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1221)
2024-07-15 06:11:44,967 DEBUG:stack ['$x4.0']
2024-07-15 06:11:44,967 DEBUG:dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1221)
2024-07-15 06:11:44,967 DEBUG:stack ['$x4.0', '$const6.1']
2024-07-15 06:11:44,967 DEBUG:dispatch pc=18, inst=LOAD_GLOBAL(arg=1, lineno=1221)
2024-07-15 06:11:44,967 DEBUG:stack ['$8binary_subscr.2']
2024-07-15 06:11:44,968 DEBUG:dispatch pc=30, inst=LOAD_ATTR(arg=1, lineno=1221)
2024-07-15 06:11:44,968 DEBUG:stack ['$8binary_subscr.2', '$null$18.4', '$18load_global.3']
2024-07-15 06:11:44,968 DEBUG:dispatch pc=40, inst=LOAD_FAST(arg=0, lineno=1221)
2024-07-15 06:11:44,968 DEBUG:stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5']
2024-07-15 06:11:44,968 DEBUG:dispatch pc=42, inst=LOAD_CONST(arg=2, lineno=1221)
2024-07-15 06:11:44,968 DEBUG:stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6']
2024-07-15 06:11:44,968 DEBUG:dispatch pc=44, inst=LOAD_GLOBAL(arg=5, lineno=1221)
2024-07-15 06:11:44,968 DEBUG:stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7']
2024-07-15 06:11:44,968 DEBUG:dispatch pc=56, inst=LOAD_FAST(arg=2, lineno=1221)
2024-07-15 06:11:44,968 DEBUG:stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7', '$null$44.9', '$44load_global.8']
2024-07-15 06:11:44,968 DEBUG:dispatch pc=58, inst=LOAD_FAST(arg=0, lineno=1221)
2024-07-15 06:11:44,968 DEBUG:stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7', '$null$44.9', '$44load_global.8', '$post_max56.10']
2024-07-15 06:11:44,968 DEBUG:dispatch pc=60, inst=LOAD_ATTR(arg=3, lineno=1221)
2024-07-15 06:11:44,968 DEBUG:stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7', '$null$44.9', '$44load_global.8', '$post_max56.10', '$x58.11']
2024-07-15 06:11:44,968 DEBUG:dispatch pc=70, inst=LOAD_CONST(arg=1, lineno=1221)
2024-07-15 06:11:44,968 DEBUG:stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7', '$null$44.9', '$44load_global.8', '$post_max56.10', '$60load_attr.12']
2024-07-15 06:11:44,968 DEBUG:dispatch pc=72, inst=BINARY_SUBSCR(arg=None, lineno=1221)
2024-07-15 06:11:44,968 DEBUG:stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7', '$null$44.9', '$44load_global.8', '$post_max56.10', '$60load_attr.12', '$const70.13']
2024-07-15 06:11:44,968 DEBUG:dispatch pc=82, inst=PRECALL(arg=2, lineno=1221)
2024-07-15 06:11:44,968 DEBUG:stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7', '$null$44.9', '$44load_global.8', '$post_max56.10', '$72binary_subscr.14']
2024-07-15 06:11:44,968 DEBUG:dispatch pc=86, inst=CALL(arg=2, lineno=1221)
2024-07-15 06:11:44,968 DEBUG:stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7', '$null$44.9', '$44load_global.8', '$post_max56.10', '$72binary_subscr.14']
2024-07-15 06:11:44,968 DEBUG:dispatch pc=96, inst=BUILD_SLICE(arg=2, lineno=1221)
2024-07-15 06:11:44,968 DEBUG:stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7', '$86call.15']
2024-07-15 06:11:44,968 DEBUG:dispatch pc=98, inst=BINARY_SUBSCR(arg=None, lineno=1221)
2024-07-15 06:11:44,968 DEBUG:stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$96build_slice.17']
2024-07-15 06:11:44,968 DEBUG:dispatch pc=108, inst=PRECALL(arg=1, lineno=1221)
2024-07-15 06:11:44,968 DEBUG:stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$98binary_subscr.18']
2024-07-15 06:11:44,968 DEBUG:dispatch pc=112, inst=CALL(arg=1, lineno=1221)
2024-07-15 06:11:44,968 DEBUG:stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$98binary_subscr.18']
2024-07-15 06:11:44,969 DEBUG:dispatch pc=122, inst=COMPARE_OP(arg=5, lineno=1221)
2024-07-15 06:11:44,969 DEBUG:stack ['$8binary_subscr.2', '$112call.19']
2024-07-15 06:11:44,969 DEBUG:dispatch pc=128, inst=LOAD_FAST(arg=7, lineno=1221)
2024-07-15 06:11:44,969 DEBUG:stack ['$122compare_op.20']
2024-07-15 06:11:44,969 DEBUG:dispatch pc=130, inst=LOAD_CONST(arg=1, lineno=1221)
2024-07-15 06:11:44,969 DEBUG:stack ['$122compare_op.20', '$peaks128.21']
2024-07-15 06:11:44,969 DEBUG:dispatch pc=132, inst=STORE_SUBSCR(arg=None, lineno=1221)
2024-07-15 06:11:44,969 DEBUG:stack ['$122compare_op.20', '$peaks128.21', '$const130.22']
2024-07-15 06:11:44,969 DEBUG:dispatch pc=136, inst=LOAD_FAST(arg=7, lineno=1222)
2024-07-15 06:11:44,969 DEBUG:stack []
2024-07-15 06:11:44,969 DEBUG:dispatch pc=138, inst=LOAD_CONST(arg=1, lineno=1222)
2024-07-15 06:11:44,969 DEBUG:stack ['$peaks136.23']
2024-07-15 06:11:44,969 DEBUG:dispatch pc=140, inst=COPY(arg=2, lineno=1222)
2024-07-15 06:11:44,969 DEBUG:stack ['$peaks136.23', '$const138.24']
2024-07-15 06:11:44,969 DEBUG:dispatch pc=142, inst=COPY(arg=2, lineno=1222)
2024-07-15 06:11:44,969 DEBUG:stack ['$peaks136.23', '$const138.24', '$peaks136.23']
2024-07-15 06:11:44,969 DEBUG:dispatch pc=144, inst=BINARY_SUBSCR(arg=None, lineno=1222)
2024-07-15 06:11:44,969 DEBUG:stack ['$peaks136.23', '$const138.24', '$peaks136.23', '$const138.24']
2024-07-15 06:11:44,969 DEBUG:dispatch pc=154, inst=LOAD_FAST(arg=0, lineno=1222)
2024-07-15 06:11:44,969 DEBUG:stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25']
2024-07-15 06:11:44,969 DEBUG:dispatch pc=156, inst=LOAD_CONST(arg=1, lineno=1222)
2024-07-15 06:11:44,969 DEBUG:stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$x154.26']
2024-07-15 06:11:44,969 DEBUG:dispatch pc=158, inst=BINARY_SUBSCR(arg=None, lineno=1222)
2024-07-15 06:11:44,969 DEBUG:stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$x154.26', '$const156.27']
2024-07-15 06:11:44,969 DEBUG:dispatch pc=168, inst=LOAD_GLOBAL(arg=1, lineno=1222)
2024-07-15 06:11:44,969 DEBUG:stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28']
2024-07-15 06:11:44,969 DEBUG:dispatch pc=180, inst=LOAD_ATTR(arg=4, lineno=1222)
2024-07-15 06:11:44,969 DEBUG:stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$168load_global.29']
2024-07-15 06:11:44,969 DEBUG:dispatch pc=190, inst=LOAD_FAST(arg=0, lineno=1222)
2024-07-15 06:11:44,969 DEBUG:stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31']
2024-07-15 06:11:44,969 DEBUG:dispatch pc=192, inst=LOAD_CONST(arg=2, lineno=1222)
2024-07-15 06:11:44,970 DEBUG:stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32']
2024-07-15 06:11:44,970 DEBUG:dispatch pc=194, inst=LOAD_GLOBAL(arg=5, lineno=1222)
2024-07-15 06:11:44,970 DEBUG:stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33']
2024-07-15 06:11:44,970 DEBUG:dispatch pc=206, inst=LOAD_FAST(arg=4, lineno=1222)
2024-07-15 06:11:44,970 DEBUG:stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33', '$null$194.35', '$194load_global.34']
2024-07-15 06:11:44,970 DEBUG:dispatch pc=208, inst=LOAD_FAST(arg=0, lineno=1222)
2024-07-15 06:11:44,970 DEBUG:stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33', '$null$194.35', '$194load_global.34', '$post_avg206.36']
2024-07-15 06:11:44,970 DEBUG:dispatch pc=210, inst=LOAD_ATTR(arg=3, lineno=1222)
2024-07-15 06:11:44,970 DEBUG:stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33', '$null$194.35', '$194load_global.34', '$post_avg206.36', '$x208.37']
2024-07-15 06:11:44,970 DEBUG:dispatch pc=220, inst=LOAD_CONST(arg=1, lineno=1222)
2024-07-15 06:11:44,970 DEBUG:stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33', '$null$194.35', '$194load_global.34', '$post_avg206.36', '$210load_attr.38']
2024-07-15 06:11:44,970 DEBUG:dispatch pc=222, inst=BINARY_SUBSCR(arg=None, lineno=1222)
2024-07-15 06:11:44,970 DEBUG:stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33', '$null$194.35', '$194load_global.34', '$post_avg206.36', '$210load_attr.38', '$const220.39']
2024-07-15 06:11:44,970 DEBUG:dispatch pc=232, inst=PRECALL(arg=2, lineno=1222)
2024-07-15 06:11:44,970 DEBUG:stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33', '$null$194.35', '$194load_global.34', '$post_avg206.36', '$222binary_subscr.40']
2024-07-15 06:11:44,970 DEBUG:dispatch pc=236, inst=CALL(arg=2, lineno=1222)
2024-07-15 06:11:44,970 DEBUG:stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33', '$null$194.35', '$194load_global.34', '$post_avg206.36', '$222binary_subscr.40']
2024-07-15 06:11:44,970 DEBUG:dispatch pc=246, inst=BUILD_SLICE(arg=2, lineno=1222)
2024-07-15 06:11:44,970 DEBUG:stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33', '$236call.41']
2024-07-15 06:11:44,971 DEBUG:dispatch pc=248, inst=BINARY_SUBSCR(arg=None, lineno=1222)
2024-07-15 06:11:44,971 DEBUG:stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$246build_slice.43']
2024-07-15 06:11:44,971 DEBUG:dispatch pc=258, inst=PRECALL(arg=1, lineno=1222)
2024-07-15 06:11:44,971 DEBUG:stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$248binary_subscr.44']
2024-07-15 06:11:44,971 DEBUG:dispatch pc=262, inst=CALL(arg=1, lineno=1222)
2024-07-15 06:11:44,971 DEBUG:stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$248binary_subscr.44']
2024-07-15 06:11:44,971 DEBUG:dispatch pc=272, inst=LOAD_FAST(arg=5, lineno=1222)
2024-07-15 06:11:44,971 DEBUG:stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$262call.45']
2024-07-15 06:11:44,971 DEBUG:dispatch pc=274, inst=BINARY_OP(arg=0, lineno=1222)
2024-07-15 06:11:44,971 DEBUG:stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$262call.45', '$delta272.46']
2024-07-15 06:11:44,971 DEBUG:dispatch pc=278, inst=COMPARE_OP(arg=5, lineno=1222)
2024-07-15 06:11:44,971 DEBUG:stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$binop_add274.47']
2024-07-15 06:11:44,971 DEBUG:dispatch pc=284, inst=BINARY_OP(arg=14, lineno=1222)
2024-07-15 06:11:44,971 DEBUG:stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$278compare_op.48']
2024-07-15 06:11:44,971 DEBUG:dispatch pc=288, inst=SWAP(arg=3, lineno=1222)
2024-07-15 06:11:44,971 DEBUG:stack ['$peaks136.23', '$const138.24', '$binop_iand284.49']
2024-07-15 06:11:44,971 DEBUG:dispatch pc=290, inst=SWAP(arg=2, lineno=1222)
2024-07-15 06:11:44,971 DEBUG:stack ['$binop_iand284.49', '$const138.24', '$peaks136.23']
2024-07-15 06:11:44,971 DEBUG:dispatch pc=292, inst=STORE_SUBSCR(arg=None, lineno=1222)
2024-07-15 06:11:44,971 DEBUG:stack ['$binop_iand284.49', '$peaks136.23', '$const138.24']
2024-07-15 06:11:44,972 DEBUG:dispatch pc=296, inst=LOAD_FAST(arg=7, lineno=1224)
2024-07-15 06:11:44,972 DEBUG:stack []
2024-07-15 06:11:44,972 DEBUG:dispatch pc=298, inst=LOAD_CONST(arg=1, lineno=1224)
2024-07-15 06:11:44,972 DEBUG:stack ['$peaks296.50']
2024-07-15 06:11:44,972 DEBUG:dispatch pc=300, inst=BINARY_SUBSCR(arg=None, lineno=1224)
2024-07-15 06:11:44,972 DEBUG:stack ['$peaks296.50', '$const298.51']
2024-07-15 06:11:44,972 DEBUG:dispatch pc=310, inst=POP_JUMP_FORWARD_IF_FALSE(arg=6, lineno=1224)
2024-07-15 06:11:44,972 DEBUG:stack ['$300binary_subscr.52']
2024-07-15 06:11:44,972 DEBUG:end state. edges=[Edge(pc=312, stack=(), blockstack=(), npush=0), Edge(pc=324, stack=(), blockstack=(), npush=0)]
2024-07-15 06:11:44,972 DEBUG:pending: deque([State(pc_initial=312 nstack_initial=0), State(pc_initial=324 nstack_initial=0)])
2024-07-15 06:11:44,972 DEBUG:stack: []
2024-07-15 06:11:44,972 DEBUG:state.pc_initial: State(pc_initial=312 nstack_initial=0)
2024-07-15 06:11:44,972 DEBUG:dispatch pc=312, inst=LOAD_FAST(arg=6, lineno=1225)
2024-07-15 06:11:44,972 DEBUG:stack []
2024-07-15 06:11:44,972 DEBUG:dispatch pc=314, inst=LOAD_CONST(arg=3, lineno=1225)
2024-07-15 06:11:44,972 DEBUG:stack ['$wait312.0']
2024-07-15 06:11:44,972 DEBUG:dispatch pc=316, inst=BINARY_OP(arg=0, lineno=1225)
2024-07-15 06:11:44,972 DEBUG:stack ['$wait312.0', '$const314.1']
2024-07-15 06:11:44,972 DEBUG:dispatch pc=320, inst=STORE_FAST(arg=8, lineno=1225)
2024-07-15 06:11:44,972 DEBUG:stack ['$binop_add316.2']
2024-07-15 06:11:44,972 DEBUG:dispatch pc=322, inst=JUMP_FORWARD(arg=2, lineno=1225)
2024-07-15 06:11:44,972 DEBUG:stack []
2024-07-15 06:11:44,972 DEBUG:end state. edges=[Edge(pc=328, stack=(), blockstack=(), npush=0)]
2024-07-15 06:11:44,972 DEBUG:pending: deque([State(pc_initial=324 nstack_initial=0), State(pc_initial=328 nstack_initial=0)])
2024-07-15 06:11:44,972 DEBUG:stack: []
2024-07-15 06:11:44,972 DEBUG:state.pc_initial: State(pc_initial=324 nstack_initial=0)
2024-07-15 06:11:44,972 DEBUG:dispatch pc=324, inst=LOAD_CONST(arg=3, lineno=1227)
2024-07-15 06:11:44,972 DEBUG:stack []
2024-07-15 06:11:44,972 DEBUG:dispatch pc=326, inst=STORE_FAST(arg=8, lineno=1227)
2024-07-15 06:11:44,972 DEBUG:stack ['$const324.0']
2024-07-15 06:11:44,972 DEBUG:end state. edges=[Edge(pc=328, stack=(), blockstack=(), npush=0)]
2024-07-15 06:11:44,972 DEBUG:pending: deque([State(pc_initial=328 nstack_initial=0), State(pc_initial=328 nstack_initial=0)])
2024-07-15 06:11:44,972 DEBUG:stack: []
2024-07-15 06:11:44,973 DEBUG:state.pc_initial: State(pc_initial=328 nstack_initial=0)
2024-07-15 06:11:44,973 DEBUG:dispatch pc=328, inst=LOAD_FAST(arg=8, lineno=1229)
2024-07-15 06:11:44,973 DEBUG:stack []
2024-07-15 06:11:44,973 DEBUG:dispatch pc=330, inst=LOAD_FAST(arg=0, lineno=1229)
2024-07-15 06:11:44,973 DEBUG:stack ['$n328.0']
2024-07-15 06:11:44,973 DEBUG:dispatch pc=332, inst=LOAD_ATTR(arg=3, lineno=1229)
2024-07-15 06:11:44,973 DEBUG:stack ['$n328.0', '$x330.1']
2024-07-15 06:11:44,973 DEBUG:dispatch pc=342, inst=LOAD_CONST(arg=1, lineno=1229)
2024-07-15 06:11:44,973 DEBUG:stack ['$n328.0', '$332load_attr.2']
2024-07-15 06:11:44,973 DEBUG:dispatch pc=344, inst=BINARY_SUBSCR(arg=None, lineno=1229)
2024-07-15 06:11:44,973 DEBUG:stack ['$n328.0', '$332load_attr.2', '$const342.3']
2024-07-15 06:11:44,973 DEBUG:dispatch pc=354, inst=COMPARE_OP(arg=0, lineno=1229)
2024-07-15 06:11:44,973 DEBUG:stack ['$n328.0', '$344binary_subscr.4']
2024-07-15 06:11:44,973 DEBUG:dispatch pc=360, inst=POP_JUMP_FORWARD_IF_FALSE(arg=245, lineno=1229)
2024-07-15 06:11:44,973 DEBUG:stack ['$354compare_op.5']
2024-07-15 06:11:44,973 DEBUG:end state. edges=[Edge(pc=362, stack=(), blockstack=(), npush=0), Edge(pc=852, stack=(), blockstack=(), npush=0)]
2024-07-15 06:11:44,973 DEBUG:pending: deque([State(pc_initial=328 nstack_initial=0), State(pc_initial=362 nstack_initial=0), State(pc_initial=852 nstack_initial=0)])
2024-07-15 06:11:44,973 DEBUG:pending: deque([State(pc_initial=362 nstack_initial=0), State(pc_initial=852 nstack_initial=0)])
2024-07-15 06:11:44,973 DEBUG:stack: []
2024-07-15 06:11:44,973 DEBUG:state.pc_initial: State(pc_initial=362 nstack_initial=0)
2024-07-15 06:11:44,973 DEBUG:dispatch pc=362, inst=LOAD_GLOBAL(arg=1, lineno=1230)
2024-07-15 06:11:44,973 DEBUG:stack []
2024-07-15 06:11:44,973 DEBUG:dispatch pc=374, inst=LOAD_ATTR(arg=1, lineno=1230)
2024-07-15 06:11:44,973 DEBUG:stack ['$null$362.1', '$362load_global.0']
2024-07-15 06:11:44,973 DEBUG:dispatch pc=384, inst=LOAD_FAST(arg=0, lineno=1230)
2024-07-15 06:11:44,973 DEBUG:stack ['$null$362.1', '$374load_attr.2']
2024-07-15 06:11:44,973 DEBUG:dispatch pc=386, inst=LOAD_GLOBAL(arg=3, lineno=1230)
2024-07-15 06:11:44,973 DEBUG:stack ['$null$362.1', '$374load_attr.2', '$x384.3']
2024-07-15 06:11:44,973 DEBUG:dispatch pc=398, inst=LOAD_CONST(arg=1, lineno=1230)
2024-07-15 06:11:44,973 DEBUG:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$null$386.5', '$386load_global.4']
2024-07-15 06:11:44,974 DEBUG:dispatch pc=400, inst=LOAD_FAST(arg=8, lineno=1230)
2024-07-15 06:11:44,974 DEBUG:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$null$386.5', '$386load_global.4', '$const398.6']
2024-07-15 06:11:44,974 DEBUG:dispatch pc=402, inst=LOAD_FAST(arg=1, lineno=1230)
2024-07-15 06:11:44,974 DEBUG:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$null$386.5', '$386load_global.4', '$const398.6', '$n400.7']
2024-07-15 06:11:44,974 DEBUG:dispatch pc=404, inst=BINARY_OP(arg=10, lineno=1230)
2024-07-15 06:11:44,974 DEBUG:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$null$386.5', '$386load_global.4', '$const398.6', '$n400.7', '$pre_max402.8']
2024-07-15 06:11:44,974 DEBUG:dispatch pc=408, inst=PRECALL(arg=2, lineno=1230)
2024-07-15 06:11:44,974 DEBUG:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$null$386.5', '$386load_global.4', '$const398.6', '$binop_sub404.9']
2024-07-15 06:11:44,974 DEBUG:dispatch pc=412, inst=CALL(arg=2, lineno=1230)
2024-07-15 06:11:44,974 DEBUG:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$null$386.5', '$386load_global.4', '$const398.6', '$binop_sub404.9']
2024-07-15 06:11:44,974 DEBUG:dispatch pc=422, inst=LOAD_GLOBAL(arg=5, lineno=1230)
2024-07-15 06:11:44,974 DEBUG:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10']
2024-07-15 06:11:44,974 DEBUG:dispatch pc=434, inst=LOAD_FAST(arg=8, lineno=1230)
2024-07-15 06:11:44,974 DEBUG:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11']
2024-07-15 06:11:44,974 DEBUG:dispatch pc=436, inst=LOAD_FAST(arg=2, lineno=1230)
2024-07-15 06:11:44,974 DEBUG:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$n434.13']
2024-07-15 06:11:44,974 DEBUG:dispatch pc=438, inst=BINARY_OP(arg=0, lineno=1230)
2024-07-15 06:11:44,974 DEBUG:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$n434.13', '$post_max436.14']
2024-07-15 06:11:44,974 DEBUG:dispatch pc=442, inst=LOAD_FAST(arg=0, lineno=1230)
2024-07-15 06:11:44,974 DEBUG:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$binop_add438.15']
2024-07-15 06:11:44,974 DEBUG:dispatch pc=444, inst=LOAD_ATTR(arg=3, lineno=1230)
2024-07-15 06:11:44,974 DEBUG:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$binop_add438.15', '$x442.16']
2024-07-15 06:11:44,974 DEBUG:dispatch pc=454, inst=LOAD_CONST(arg=1, lineno=1230)
2024-07-15 06:11:44,974 DEBUG:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$binop_add438.15', '$444load_attr.17']
2024-07-15 06:11:44,974 DEBUG:dispatch pc=456, inst=BINARY_SUBSCR(arg=None, lineno=1230)
2024-07-15 06:11:44,974 DEBUG:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$binop_add438.15', '$444load_attr.17', '$const454.18']
2024-07-15 06:11:44,974 DEBUG:dispatch pc=466, inst=PRECALL(arg=2, lineno=1230)
2024-07-15 06:11:44,974 DEBUG:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$binop_add438.15', '$456binary_subscr.19']
2024-07-15 06:11:44,974 DEBUG:dispatch pc=470, inst=CALL(arg=2, lineno=1230)
2024-07-15 06:11:44,974 DEBUG:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$binop_add438.15', '$456binary_subscr.19']
2024-07-15 06:11:44,974 DEBUG:dispatch pc=480, inst=BUILD_SLICE(arg=2, lineno=1230)
2024-07-15 06:11:44,974 DEBUG:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$470call.20']
2024-07-15 06:11:44,975 DEBUG:dispatch pc=482, inst=BINARY_SUBSCR(arg=None, lineno=1230)
2024-07-15 06:11:44,975 DEBUG:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$480build_slice.22']
2024-07-15 06:11:44,975 DEBUG:dispatch pc=492, inst=PRECALL(arg=1, lineno=1230)
2024-07-15 06:11:44,975 DEBUG:stack ['$null$362.1', '$374load_attr.2', '$482binary_subscr.23']
2024-07-15 06:11:44,975 DEBUG:dispatch pc=496, inst=CALL(arg=1, lineno=1230)
2024-07-15 06:11:44,975 DEBUG:stack ['$null$362.1', '$374load_attr.2', '$482binary_subscr.23']
2024-07-15 06:11:44,975 DEBUG:dispatch pc=506, inst=STORE_FAST(arg=9, lineno=1230)
2024-07-15 06:11:44,975 DEBUG:stack ['$496call.24']
2024-07-15 06:11:44,975 DEBUG:dispatch pc=508, inst=LOAD_FAST(arg=0, lineno=1233)
2024-07-15 06:11:44,975 DEBUG:stack []
2024-07-15 06:11:44,975 DEBUG:dispatch pc=510, inst=LOAD_FAST(arg=8, lineno=1233)
2024-07-15 06:11:44,975 DEBUG:stack ['$x508.25']
2024-07-15 06:11:44,975 DEBUG:dispatch pc=512, inst=BINARY_SUBSCR(arg=None, lineno=1233)
2024-07-15 06:11:44,975 DEBUG:stack ['$x508.25', '$n510.26']
2024-07-15 06:11:44,975 DEBUG:dispatch pc=522, inst=LOAD_FAST(arg=9, lineno=1233)
2024-07-15 06:11:44,975 DEBUG:stack ['$512binary_subscr.27']
2024-07-15 06:11:44,975 DEBUG:dispatch pc=524, inst=COMPARE_OP(arg=2, lineno=1233)
2024-07-15 06:11:44,975 DEBUG:stack ['$512binary_subscr.27', '$maxn522.28']
2024-07-15 06:11:44,975 DEBUG:dispatch pc=530, inst=LOAD_FAST(arg=7, lineno=1233)
2024-07-15 06:11:44,975 DEBUG:stack ['$524compare_op.29']
2024-07-15 06:11:44,975 DEBUG:dispatch pc=532, inst=LOAD_FAST(arg=8, lineno=1233)
2024-07-15 06:11:44,975 DEBUG:stack ['$524compare_op.29', '$peaks530.30']
2024-07-15 06:11:44,975 DEBUG:dispatch pc=534, inst=STORE_SUBSCR(arg=None, lineno=1233)
2024-07-15 06:11:44,975 DEBUG:stack ['$524compare_op.29', '$peaks530.30', '$n532.31']
2024-07-15 06:11:44,975 DEBUG:dispatch pc=538, inst=LOAD_FAST(arg=7, lineno=1235)
2024-07-15 06:11:44,975 DEBUG:stack []
2024-07-15 06:11:44,975 DEBUG:dispatch pc=540, inst=LOAD_FAST(arg=8, lineno=1235)
2024-07-15 06:11:44,975 DEBUG:stack ['$peaks538.32']
2024-07-15 06:11:44,975 DEBUG:dispatch pc=542, inst=BINARY_SUBSCR(arg=None, lineno=1235)
2024-07-15 06:11:44,975 DEBUG:stack ['$peaks538.32', '$n540.33']
2024-07-15 06:11:44,975 DEBUG:dispatch pc=552, inst=POP_JUMP_FORWARD_IF_TRUE(arg=6, lineno=1235)
2024-07-15 06:11:44,975 DEBUG:stack ['$542binary_subscr.34']
2024-07-15 06:11:44,976 DEBUG:end state. edges=[Edge(pc=554, stack=(), blockstack=(), npush=0), Edge(pc=566, stack=(), blockstack=(), npush=0)]
2024-07-15 06:11:44,976 DEBUG:pending: deque([State(pc_initial=852 nstack_initial=0), State(pc_initial=554 nstack_initial=0), State(pc_initial=566 nstack_initial=0)])
2024-07-15 06:11:44,976 DEBUG:stack: []
2024-07-15 06:11:44,976 DEBUG:state.pc_initial: State(pc_initial=852 nstack_initial=0)
2024-07-15 06:11:44,976 DEBUG:dispatch pc=852, inst=LOAD_CONST(arg=2, lineno=1229)
2024-07-15 06:11:44,976 DEBUG:stack []
2024-07-15 06:11:44,976 DEBUG:dispatch pc=854, inst=RETURN_VALUE(arg=None, lineno=1229)
2024-07-15 06:11:44,976 DEBUG:stack ['$const852.0']
2024-07-15 06:11:44,976 DEBUG:end state. edges=[]
2024-07-15 06:11:44,976 DEBUG:pending: deque([State(pc_initial=554 nstack_initial=0), State(pc_initial=566 nstack_initial=0)])
2024-07-15 06:11:44,976 DEBUG:stack: []
2024-07-15 06:11:44,976 DEBUG:state.pc_initial: State(pc_initial=554 nstack_initial=0)
2024-07-15 06:11:44,976 DEBUG:dispatch pc=554, inst=LOAD_FAST(arg=8, lineno=1236)
2024-07-15 06:11:44,976 DEBUG:stack []
2024-07-15 06:11:44,976 DEBUG:dispatch pc=556, inst=LOAD_CONST(arg=3, lineno=1236)
2024-07-15 06:11:44,976 DEBUG:stack ['$n554.0']
2024-07-15 06:11:44,976 DEBUG:dispatch pc=558, inst=BINARY_OP(arg=13, lineno=1236)
2024-07-15 06:11:44,976 DEBUG:stack ['$n554.0', '$const556.1']
2024-07-15 06:11:44,976 DEBUG:dispatch pc=562, inst=STORE_FAST(arg=8, lineno=1236)
2024-07-15 06:11:44,976 DEBUG:stack ['$binop_iadd558.2']
2024-07-15 06:11:44,976 DEBUG:dispatch pc=564, inst=JUMP_BACKWARD(arg=119, lineno=1237)
2024-07-15 06:11:44,976 DEBUG:stack []
2024-07-15 06:11:44,976 DEBUG:end state. edges=[Edge(pc=328, stack=(), blockstack=(), npush=0)]
2024-07-15 06:11:44,976 DEBUG:pending: deque([State(pc_initial=566 nstack_initial=0), State(pc_initial=328 nstack_initial=0)])
2024-07-15 06:11:44,976 DEBUG:stack: []
2024-07-15 06:11:44,976 DEBUG:state.pc_initial: State(pc_initial=566 nstack_initial=0)
2024-07-15 06:11:44,976 DEBUG:dispatch pc=566, inst=LOAD_GLOBAL(arg=1, lineno=1239)
2024-07-15 06:11:44,976 DEBUG:stack []
2024-07-15 06:11:44,976 DEBUG:dispatch pc=578, inst=LOAD_ATTR(arg=4, lineno=1239)
2024-07-15 06:11:44,976 DEBUG:stack ['$null$566.1', '$566load_global.0']
2024-07-15 06:11:44,976 DEBUG:dispatch pc=588, inst=LOAD_FAST(arg=0, lineno=1239)
2024-07-15 06:11:44,976 DEBUG:stack ['$null$566.1', '$578load_attr.2']
2024-07-15 06:11:44,976 DEBUG:dispatch pc=590, inst=LOAD_GLOBAL(arg=3, lineno=1239)
2024-07-15 06:11:44,976 DEBUG:stack ['$null$566.1', '$578load_attr.2', '$x588.3']
2024-07-15 06:11:44,976 DEBUG:dispatch pc=602, inst=LOAD_CONST(arg=1, lineno=1239)
2024-07-15 06:11:44,976 DEBUG:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$null$590.5', '$590load_global.4']
2024-07-15 06:11:44,976 DEBUG:dispatch pc=604, inst=LOAD_FAST(arg=8, lineno=1239)
2024-07-15 06:11:44,976 DEBUG:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$null$590.5', '$590load_global.4', '$const602.6']
2024-07-15 06:11:44,976 DEBUG:dispatch pc=606, inst=LOAD_FAST(arg=3, lineno=1239)
2024-07-15 06:11:44,976 DEBUG:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$null$590.5', '$590load_global.4', '$const602.6', '$n604.7']
2024-07-15 06:11:44,976 DEBUG:dispatch pc=608, inst=BINARY_OP(arg=10, lineno=1239)
2024-07-15 06:11:44,976 DEBUG:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$null$590.5', '$590load_global.4', '$const602.6', '$n604.7', '$pre_avg606.8']
2024-07-15 06:11:44,976 DEBUG:dispatch pc=612, inst=PRECALL(arg=2, lineno=1239)
2024-07-15 06:11:44,977 DEBUG:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$null$590.5', '$590load_global.4', '$const602.6', '$binop_sub608.9']
2024-07-15 06:11:44,977 DEBUG:dispatch pc=616, inst=CALL(arg=2, lineno=1239)
2024-07-15 06:11:44,977 DEBUG:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$null$590.5', '$590load_global.4', '$const602.6', '$binop_sub608.9']
2024-07-15 06:11:44,977 DEBUG:dispatch pc=626, inst=LOAD_GLOBAL(arg=5, lineno=1239)
2024-07-15 06:11:44,977 DEBUG:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10']
2024-07-15 06:11:44,977 DEBUG:dispatch pc=638, inst=LOAD_FAST(arg=8, lineno=1239)
2024-07-15 06:11:44,977 DEBUG:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11']
2024-07-15 06:11:44,977 DEBUG:dispatch pc=640, inst=LOAD_FAST(arg=4, lineno=1239)
2024-07-15 06:11:44,977 DEBUG:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$n638.13']
2024-07-15 06:11:44,977 DEBUG:dispatch pc=642, inst=BINARY_OP(arg=0, lineno=1239)
2024-07-15 06:11:44,977 DEBUG:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$n638.13', '$post_avg640.14']
2024-07-15 06:11:44,977 DEBUG:dispatch pc=646, inst=LOAD_FAST(arg=0, lineno=1239)
2024-07-15 06:11:44,977 DEBUG:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$binop_add642.15']
2024-07-15 06:11:44,977 DEBUG:dispatch pc=648, inst=LOAD_ATTR(arg=3, lineno=1239)
2024-07-15 06:11:44,977 DEBUG:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$binop_add642.15', '$x646.16']
2024-07-15 06:11:44,977 DEBUG:dispatch pc=658, inst=LOAD_CONST(arg=1, lineno=1239)
2024-07-15 06:11:44,977 DEBUG:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$binop_add642.15', '$648load_attr.17']
2024-07-15 06:11:44,977 DEBUG:dispatch pc=660, inst=BINARY_SUBSCR(arg=None, lineno=1239)
2024-07-15 06:11:44,977 DEBUG:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$binop_add642.15', '$648load_attr.17', '$const658.18']
2024-07-15 06:11:44,977 DEBUG:dispatch pc=670, inst=PRECALL(arg=2, lineno=1239)
2024-07-15 06:11:44,977 DEBUG:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$binop_add642.15', '$660binary_subscr.19']
2024-07-15 06:11:44,977 DEBUG:dispatch pc=674, inst=CALL(arg=2, lineno=1239)
2024-07-15 06:11:44,977 DEBUG:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$binop_add642.15', '$660binary_subscr.19']
2024-07-15 06:11:44,977 DEBUG:dispatch pc=684, inst=BUILD_SLICE(arg=2, lineno=1239)
2024-07-15 06:11:44,977 DEBUG:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$674call.20']
2024-07-15 06:11:44,977 DEBUG:dispatch pc=686, inst=BINARY_SUBSCR(arg=None, lineno=1239)
2024-07-15 06:11:44,977 DEBUG:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$684build_slice.22']
2024-07-15 06:11:44,977 DEBUG:dispatch pc=696, inst=PRECALL(arg=1, lineno=1239)
2024-07-15 06:11:44,977 DEBUG:stack ['$null$566.1', '$578load_attr.2', '$686binary_subscr.23']
2024-07-15 06:11:44,977 DEBUG:dispatch pc=700, inst=CALL(arg=1, lineno=1239)
2024-07-15 06:11:44,978 DEBUG:stack ['$null$566.1', '$578load_attr.2', '$686binary_subscr.23']
2024-07-15 06:11:44,978 DEBUG:dispatch pc=710, inst=STORE_FAST(arg=10, lineno=1239)
2024-07-15 06:11:44,978 DEBUG:stack ['$700call.24']
2024-07-15 06:11:44,978 DEBUG:dispatch pc=712, inst=LOAD_FAST(arg=7, lineno=1240)
2024-07-15 06:11:44,978 DEBUG:stack []
2024-07-15 06:11:44,978 DEBUG:dispatch pc=714, inst=LOAD_FAST(arg=8, lineno=1240)
2024-07-15 06:11:44,978 DEBUG:stack ['$peaks712.25']
2024-07-15 06:11:44,978 DEBUG:dispatch pc=716, inst=COPY(arg=2, lineno=1240)
2024-07-15 06:11:44,978 DEBUG:stack ['$peaks712.25', '$n714.26']
2024-07-15 06:11:44,978 DEBUG:dispatch pc=718, inst=COPY(arg=2, lineno=1240)
2024-07-15 06:11:44,978 DEBUG:stack ['$peaks712.25', '$n714.26', '$peaks712.25']
2024-07-15 06:11:44,978 DEBUG:dispatch pc=720, inst=BINARY_SUBSCR(arg=None, lineno=1240)
2024-07-15 06:11:44,978 DEBUG:stack ['$peaks712.25', '$n714.26', '$peaks712.25', '$n714.26']
2024-07-15 06:11:44,978 DEBUG:dispatch pc=730, inst=LOAD_FAST(arg=0, lineno=1240)
2024-07-15 06:11:44,978 DEBUG:stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27']
2024-07-15 06:11:44,978 DEBUG:dispatch pc=732, inst=LOAD_FAST(arg=8, lineno=1240)
2024-07-15 06:11:44,978 DEBUG:stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27', '$x730.28']
2024-07-15 06:11:44,978 DEBUG:dispatch pc=734, inst=BINARY_SUBSCR(arg=None, lineno=1240)
2024-07-15 06:11:44,978 DEBUG:stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27', '$x730.28', '$n732.29']
2024-07-15 06:11:44,978 DEBUG:dispatch pc=744, inst=LOAD_FAST(arg=10, lineno=1240)
2024-07-15 06:11:44,978 DEBUG:stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27', '$734binary_subscr.30']
2024-07-15 06:11:44,978 DEBUG:dispatch pc=746, inst=LOAD_FAST(arg=5, lineno=1240)
2024-07-15 06:11:44,978 DEBUG:stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27', '$734binary_subscr.30', '$avgn744.31']
2024-07-15 06:11:44,978 DEBUG:dispatch pc=748, inst=BINARY_OP(arg=0, lineno=1240)
2024-07-15 06:11:44,978 DEBUG:stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27', '$734binary_subscr.30', '$avgn744.31', '$delta746.32']
2024-07-15 06:11:44,978 DEBUG:dispatch pc=752, inst=COMPARE_OP(arg=5, lineno=1240)
2024-07-15 06:11:44,978 DEBUG:stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27', '$734binary_subscr.30', '$binop_add748.33']
2024-07-15 06:11:44,978 DEBUG:dispatch pc=758, inst=BINARY_OP(arg=14, lineno=1240)
2024-07-15 06:11:44,978 DEBUG:stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27', '$752compare_op.34']
2024-07-15 06:11:44,978 DEBUG:dispatch pc=762, inst=SWAP(arg=3, lineno=1240)
2024-07-15 06:11:44,978 DEBUG:stack ['$peaks712.25', '$n714.26', '$binop_iand758.35']
2024-07-15 06:11:44,978 DEBUG:dispatch pc=764, inst=SWAP(arg=2, lineno=1240)
2024-07-15 06:11:44,978 DEBUG:stack ['$binop_iand758.35', '$n714.26', '$peaks712.25']
2024-07-15 06:11:44,978 DEBUG:dispatch pc=766, inst=STORE_SUBSCR(arg=None, lineno=1240)
2024-07-15 06:11:44,979 DEBUG:stack ['$binop_iand758.35', '$peaks712.25', '$n714.26']
2024-07-15 06:11:44,979 DEBUG:dispatch pc=770, inst=LOAD_FAST(arg=7, lineno=1242)
2024-07-15 06:11:44,979 DEBUG:stack []
2024-07-15 06:11:44,979 DEBUG:dispatch pc=772, inst=LOAD_FAST(arg=8, lineno=1242)
2024-07-15 06:11:44,979 DEBUG:stack ['$peaks770.36']
2024-07-15 06:11:44,979 DEBUG:dispatch pc=774, inst=BINARY_SUBSCR(arg=None, lineno=1242)
2024-07-15 06:11:44,979 DEBUG:stack ['$peaks770.36', '$n772.37']
2024-07-15 06:11:44,979 DEBUG:dispatch pc=784, inst=POP_JUMP_FORWARD_IF_TRUE(arg=6, lineno=1242)
2024-07-15 06:11:44,979 DEBUG:stack ['$774binary_subscr.38']
2024-07-15 06:11:44,979 DEBUG:end state. edges=[Edge(pc=786, stack=(), blockstack=(), npush=0), Edge(pc=798, stack=(), blockstack=(), npush=0)]
2024-07-15 06:11:44,979 DEBUG:pending: deque([State(pc_initial=328 nstack_initial=0), State(pc_initial=786 nstack_initial=0), State(pc_initial=798 nstack_initial=0)])
2024-07-15 06:11:44,979 DEBUG:pending: deque([State(pc_initial=786 nstack_initial=0), State(pc_initial=798 nstack_initial=0)])
2024-07-15 06:11:44,979 DEBUG:stack: []
2024-07-15 06:11:44,979 DEBUG:state.pc_initial: State(pc_initial=786 nstack_initial=0)
2024-07-15 06:11:44,979 DEBUG:dispatch pc=786, inst=LOAD_FAST(arg=8, lineno=1243)
2024-07-15 06:11:44,979 DEBUG:stack []
2024-07-15 06:11:44,979 DEBUG:dispatch pc=788, inst=LOAD_CONST(arg=3, lineno=1243)
2024-07-15 06:11:44,979 DEBUG:stack ['$n786.0']
2024-07-15 06:11:44,979 DEBUG:dispatch pc=790, inst=BINARY_OP(arg=13, lineno=1243)
2024-07-15 06:11:44,979 DEBUG:stack ['$n786.0', '$const788.1']
2024-07-15 06:11:44,979 DEBUG:dispatch pc=794, inst=STORE_FAST(arg=8, lineno=1243)
2024-07-15 06:11:44,979 DEBUG:stack ['$binop_iadd790.2']
2024-07-15 06:11:44,979 DEBUG:dispatch pc=796, inst=JUMP_BACKWARD(arg=235, lineno=1244)
2024-07-15 06:11:44,979 DEBUG:stack []
2024-07-15 06:11:44,979 DEBUG:end state. edges=[Edge(pc=328, stack=(), blockstack=(), npush=0)]
2024-07-15 06:11:44,979 DEBUG:pending: deque([State(pc_initial=798 nstack_initial=0), State(pc_initial=328 nstack_initial=0)])
2024-07-15 06:11:44,979 DEBUG:stack: []
2024-07-15 06:11:44,979 DEBUG:state.pc_initial: State(pc_initial=798 nstack_initial=0)
2024-07-15 06:11:44,979 DEBUG:dispatch pc=798, inst=LOAD_FAST(arg=8, lineno=1247)
2024-07-15 06:11:44,979 DEBUG:stack []
2024-07-15 06:11:44,979 DEBUG:dispatch pc=800, inst=LOAD_FAST(arg=6, lineno=1247)
2024-07-15 06:11:44,979 DEBUG:stack ['$n798.0']
2024-07-15 06:11:44,979 DEBUG:dispatch pc=802, inst=LOAD_CONST(arg=3, lineno=1247)
2024-07-15 06:11:44,979 DEBUG:stack ['$n798.0', '$wait800.1']
2024-07-15 06:11:44,980 DEBUG:dispatch pc=804, inst=BINARY_OP(arg=0, lineno=1247)
2024-07-15 06:11:44,980 DEBUG:stack ['$n798.0', '$wait800.1', '$const802.2']
2024-07-15 06:11:44,980 DEBUG:dispatch pc=808, inst=BINARY_OP(arg=13, lineno=1247)
2024-07-15 06:11:44,980 DEBUG:stack ['$n798.0', '$binop_add804.3']
2024-07-15 06:11:44,980 DEBUG:dispatch pc=812, inst=STORE_FAST(arg=8, lineno=1247)
2024-07-15 06:11:44,980 DEBUG:stack ['$binop_iadd808.4']
2024-07-15 06:11:44,980 DEBUG:dispatch pc=814, inst=LOAD_FAST(arg=8, lineno=1229)
2024-07-15 06:11:44,980 DEBUG:stack []
2024-07-15 06:11:44,980 DEBUG:dispatch pc=816, inst=LOAD_FAST(arg=0, lineno=1229)
2024-07-15 06:11:44,980 DEBUG:stack ['$n814.5']
2024-07-15 06:11:44,980 DEBUG:dispatch pc=818, inst=LOAD_ATTR(arg=3, lineno=1229)
2024-07-15 06:11:44,980 DEBUG:stack ['$n814.5', '$x816.6']
2024-07-15 06:11:44,980 DEBUG:dispatch pc=828, inst=LOAD_CONST(arg=1, lineno=1229)
2024-07-15 06:11:44,980 DEBUG:stack ['$n814.5', '$818load_attr.7']
2024-07-15 06:11:44,980 DEBUG:dispatch pc=830, inst=BINARY_SUBSCR(arg=None, lineno=1229)
2024-07-15 06:11:44,980 DEBUG:stack ['$n814.5', '$818load_attr.7', '$const828.8']
2024-07-15 06:11:44,980 DEBUG:dispatch pc=840, inst=COMPARE_OP(arg=0, lineno=1229)
2024-07-15 06:11:44,981 DEBUG:stack ['$n814.5', '$830binary_subscr.9']
2024-07-15 06:11:44,981 DEBUG:dispatch pc=846, inst=POP_JUMP_BACKWARD_IF_TRUE(arg=243, lineno=1229)
2024-07-15 06:11:44,981 DEBUG:stack ['$840compare_op.10']
2024-07-15 06:11:44,981 DEBUG:end state. edges=[Edge(pc=848, stack=(), blockstack=(), npush=0), Edge(pc=362, stack=(), blockstack=(), npush=0)]
2024-07-15 06:11:44,981 DEBUG:pending: deque([State(pc_initial=328 nstack_initial=0), State(pc_initial=848 nstack_initial=0), State(pc_initial=362 nstack_initial=0)])
2024-07-15 06:11:44,981 DEBUG:pending: deque([State(pc_initial=848 nstack_initial=0), State(pc_initial=362 nstack_initial=0)])
2024-07-15 06:11:44,981 DEBUG:stack: []
2024-07-15 06:11:44,981 DEBUG:state.pc_initial: State(pc_initial=848 nstack_initial=0)
2024-07-15 06:11:44,981 DEBUG:dispatch pc=848, inst=LOAD_CONST(arg=2, lineno=1229)
2024-07-15 06:11:44,981 DEBUG:stack []
2024-07-15 06:11:44,981 DEBUG:dispatch pc=850, inst=RETURN_VALUE(arg=None, lineno=1229)
2024-07-15 06:11:44,981 DEBUG:stack ['$const848.0']
2024-07-15 06:11:44,981 DEBUG:end state. edges=[]
2024-07-15 06:11:44,981 DEBUG:pending: deque([State(pc_initial=362 nstack_initial=0)])
2024-07-15 06:11:44,981 DEBUG:-------------------------Prune PHIs-------------------------
2024-07-15 06:11:44,981 DEBUG:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=312 nstack_initial=0): set(),
             State(pc_initial=324 nstack_initial=0): set(),
             State(pc_initial=328 nstack_initial=0): set(),
             State(pc_initial=362 nstack_initial=0): set(),
             State(pc_initial=554 nstack_initial=0): set(),
             State(pc_initial=566 nstack_initial=0): set(),
             State(pc_initial=786 nstack_initial=0): set(),
             State(pc_initial=798 nstack_initial=0): set(),
             State(pc_initial=848 nstack_initial=0): set(),
             State(pc_initial=852 nstack_initial=0): set()})
2024-07-15 06:11:44,981 DEBUG:defmap: {}
2024-07-15 06:11:44,981 DEBUG:phismap: defaultdict(<class 'set'>, {})
2024-07-15 06:11:44,981 DEBUG:changing phismap: defaultdict(<class 'set'>, {})
2024-07-15 06:11:44,981 DEBUG:keep phismap: {}
2024-07-15 06:11:44,981 DEBUG:new_out: defaultdict(<class 'dict'>, {})
2024-07-15 06:11:44,981 DEBUG:----------------------DONE Prune PHIs-----------------------
2024-07-15 06:11:44,982 DEBUG:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1'}), (8, {'index': '$const6.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'idx': 0, 'res': '$18load_global.3'}), (20, {}), (22, {}), (24, {}), (26, {}), (28, {}), (30, {'item': '$18load_global.3', 'res': '$30load_attr.5'}), (32, {}), (34, {}), (36, {}), (38, {}), (40, {'res': '$x40.6'}), (42, {'res': '$const42.7'}), (44, {'idx': 2, 'res': '$44load_global.8'}), (46, {}), (48, {}), (50, {}), (52, {}), (54, {}), (56, {'res': '$post_max56.10'}), (58, {'res': '$x58.11'}), (60, {'item': '$x58.11', 'res': '$60load_attr.12'}), (62, {}), (64, {}), (66, {}), (68, {}), (70, {'res': '$const70.13'}), (72, {'index': '$const70.13', 'target': '$60load_attr.12', 'res': '$72binary_subscr.14'}), (74, {}), (76, {}), (78, {}), (80, {}), (82, {}), (84, {}), (86, {'func': '$44load_global.8', 'args': ['$post_max56.10', '$72binary_subscr.14'], 'kw_names': None, 'res': '$86call.15'}), (88, {}), (90, {}), (92, {}), (94, {}), (96, {'start': '$const42.7', 'stop': '$86call.15', 'step': None, 'res': '$96build_slice.17', 'slicevar': '$96build_slice.16'}), (98, {'index': '$96build_slice.17', 'target': '$x40.6', 'res': '$98binary_subscr.18'}), (100, {}), (102, {}), (104, {}), (106, {}), (108, {}), (110, {}), (112, {'func': '$30load_attr.5', 'args': ['$98binary_subscr.18'], 'kw_names': None, 'res': '$112call.19'}), (114, {}), (116, {}), (118, {}), (120, {}), (122, {'lhs': '$8binary_subscr.2', 'rhs': '$112call.19', 'res': '$122compare_op.20'}), (124, {}), (126, {}), (128, {'res': '$peaks128.21'}), (130, {'res': '$const130.22'}), (132, {'target': '$peaks128.21', 'index': '$const130.22', 'value': '$122compare_op.20'}), (134, {}), (136, {'res': '$peaks136.23'}), (138, {'res': '$const138.24'}), (144, {'index': '$const138.24', 'target': '$peaks136.23', 'res': '$144binary_subscr.25'}), (146, {}), (148, {}), (150, {}), (152, {}), (154, {'res': '$x154.26'}), (156, {'res': '$const156.27'}), (158, {'index': '$const156.27', 'target': '$x154.26', 'res': '$158binary_subscr.28'}), (160, {}), (162, {}), (164, {}), (166, {}), (168, {'idx': 0, 'res': '$168load_global.29'}), (170, {}), (172, {}), (174, {}), (176, {}), (178, {}), (180, {'item': '$168load_global.29', 'res': '$180load_attr.31'}), (182, {}), (184, {}), (186, {}), (188, {}), (190, {'res': '$x190.32'}), (192, {'res': '$const192.33'}), (194, {'idx': 2, 'res': '$194load_global.34'}), (196, {}), (198, {}), (200, {}), (202, {}), (204, {}), (206, {'res': '$post_avg206.36'}), (208, {'res': '$x208.37'}), (210, {'item': '$x208.37', 'res': '$210load_attr.38'}), (212, {}), (214, {}), (216, {}), (218, {}), (220, {'res': '$const220.39'}), (222, {'index': '$const220.39', 'target': '$210load_attr.38', 'res': '$222binary_subscr.40'}), (224, {}), (226, {}), (228, {}), (230, {}), (232, {}), (234, {}), (236, {'func': '$194load_global.34', 'args': ['$post_avg206.36', '$222binary_subscr.40'], 'kw_names': None, 'res': '$236call.41'}), (238, {}), (240, {}), (242, {}), (244, {}), (246, {'start': '$const192.33', 'stop': '$236call.41', 'step': None, 'res': '$246build_slice.43', 'slicevar': '$246build_slice.42'}), (248, {'index': '$246build_slice.43', 'target': '$x190.32', 'res': '$248binary_subscr.44'}), (250, {}), (252, {}), (254, {}), (256, {}), (258, {}), (260, {}), (262, {'func': '$180load_attr.31', 'args': ['$248binary_subscr.44'], 'kw_names': None, 'res': '$262call.45'}), (264, {}), (266, {}), (268, {}), (270, {}), (272, {'res': '$delta272.46'}), (274, {'op': '+', 'lhs': '$262call.45', 'rhs': '$delta272.46', 'res': '$binop_add274.47'}), (276, {}), (278, {'lhs': '$158binary_subscr.28', 'rhs': '$binop_add274.47', 'res': '$278compare_op.48'}), (280, {}), (282, {}), (284, {'op': '&=', 'lhs': '$144binary_subscr.25', 'rhs': '$278compare_op.48', 'res': '$binop_iand284.49'}), (286, {}), (292, {'target': '$peaks136.23', 'index': '$const138.24', 'value': '$binop_iand284.49'}), (294, {}), (296, {'res': '$peaks296.50'}), (298, {'res': '$const298.51'}), (300, {'index': '$const298.51', 'target': '$peaks296.50', 'res': '$300binary_subscr.52'}), (302, {}), (304, {}), (306, {}), (308, {}), (310, {'pred': '$300binary_subscr.52'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={312: (), 324: ()})
2024-07-15 06:11:44,982 DEBUG:block_infos State(pc_initial=312 nstack_initial=0):
AdaptBlockInfo(insts=((312, {'res': '$wait312.0'}), (314, {'res': '$const314.1'}), (316, {'op': '+', 'lhs': '$wait312.0', 'rhs': '$const314.1', 'res': '$binop_add316.2'}), (318, {}), (320, {'value': '$binop_add316.2'}), (322, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={328: ()})
2024-07-15 06:11:44,982 DEBUG:block_infos State(pc_initial=324 nstack_initial=0):
AdaptBlockInfo(insts=((324, {'res': '$const324.0'}), (326, {'value': '$const324.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={328: ()})
2024-07-15 06:11:44,982 DEBUG:block_infos State(pc_initial=328 nstack_initial=0):
AdaptBlockInfo(insts=((328, {'res': '$n328.0'}), (330, {'res': '$x330.1'}), (332, {'item': '$x330.1', 'res': '$332load_attr.2'}), (334, {}), (336, {}), (338, {}), (340, {}), (342, {'res': '$const342.3'}), (344, {'index': '$const342.3', 'target': '$332load_attr.2', 'res': '$344binary_subscr.4'}), (346, {}), (348, {}), (350, {}), (352, {}), (354, {'lhs': '$n328.0', 'rhs': '$344binary_subscr.4', 'res': '$354compare_op.5'}), (356, {}), (358, {}), (360, {'pred': '$354compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={362: (), 852: ()})
2024-07-15 06:11:44,982 DEBUG:block_infos State(pc_initial=362 nstack_initial=0):
AdaptBlockInfo(insts=((362, {'idx': 0, 'res': '$362load_global.0'}), (364, {}), (366, {}), (368, {}), (370, {}), (372, {}), (374, {'item': '$362load_global.0', 'res': '$374load_attr.2'}), (376, {}), (378, {}), (380, {}), (382, {}), (384, {'res': '$x384.3'}), (386, {'idx': 1, 'res': '$386load_global.4'}), (388, {}), (390, {}), (392, {}), (394, {}), (396, {}), (398, {'res': '$const398.6'}), (400, {'res': '$n400.7'}), (402, {'res': '$pre_max402.8'}), (404, {'op': '-', 'lhs': '$n400.7', 'rhs': '$pre_max402.8', 'res': '$binop_sub404.9'}), (406, {}), (408, {}), (410, {}), (412, {'func': '$386load_global.4', 'args': ['$const398.6', '$binop_sub404.9'], 'kw_names': None, 'res': '$412call.10'}), (414, {}), (416, {}), (418, {}), (420, {}), (422, {'idx': 2, 'res': '$422load_global.11'}), (424, {}), (426, {}), (428, {}), (430, {}), (432, {}), (434, {'res': '$n434.13'}), (436, {'res': '$post_max436.14'}), (438, {'op': '+', 'lhs': '$n434.13', 'rhs': '$post_max436.14', 'res': '$binop_add438.15'}), (440, {}), (442, {'res': '$x442.16'}), (444, {'item': '$x442.16', 'res': '$444load_attr.17'}), (446, {}), (448, {}), (450, {}), (452, {}), (454, {'res': '$const454.18'}), (456, {'index': '$const454.18', 'target': '$444load_attr.17', 'res': '$456binary_subscr.19'}), (458, {}), (460, {}), (462, {}), (464, {}), (466, {}), (468, {}), (470, {'func': '$422load_global.11', 'args': ['$binop_add438.15', '$456binary_subscr.19'], 'kw_names': None, 'res': '$470call.20'}), (472, {}), (474, {}), (476, {}), (478, {}), (480, {'start': '$412call.10', 'stop': '$470call.20', 'step': None, 'res': '$480build_slice.22', 'slicevar': '$480build_slice.21'}), (482, {'index': '$480build_slice.22', 'target': '$x384.3', 'res': '$482binary_subscr.23'}), (484, {}), (486, {}), (488, {}), (490, {}), (492, {}), (494, {}), (496, {'func': '$374load_attr.2', 'args': ['$482binary_subscr.23'], 'kw_names': None, 'res': '$496call.24'}), (498, {}), (500, {}), (502, {}), (504, {}), (506, {'value': '$496call.24'}), (508, {'res': '$x508.25'}), (510, {'res': '$n510.26'}), (512, {'index': '$n510.26', 'target': '$x508.25', 'res': '$512binary_subscr.27'}), (514, {}), (516, {}), (518, {}), (520, {}), (522, {'res': '$maxn522.28'}), (524, {'lhs': '$512binary_subscr.27', 'rhs': '$maxn522.28', 'res': '$524compare_op.29'}), (526, {}), (528, {}), (530, {'res': '$peaks530.30'}), (532, {'res': '$n532.31'}), (534, {'target': '$peaks530.30', 'index': '$n532.31', 'value': '$524compare_op.29'}), (536, {}), (538, {'res': '$peaks538.32'}), (540, {'res': '$n540.33'}), (542, {'index': '$n540.33', 'target': '$peaks538.32', 'res': '$542binary_subscr.34'}), (544, {}), (546, {}), (548, {}), (550, {}), (552, {'pred': '$542binary_subscr.34'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={554: (), 566: ()})
2024-07-15 06:11:44,982 DEBUG:block_infos State(pc_initial=554 nstack_initial=0):
AdaptBlockInfo(insts=((554, {'res': '$n554.0'}), (556, {'res': '$const556.1'}), (558, {'op': '+=', 'lhs': '$n554.0', 'rhs': '$const556.1', 'res': '$binop_iadd558.2'}), (560, {}), (562, {'value': '$binop_iadd558.2'}), (564, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={328: ()})
2024-07-15 06:11:44,982 DEBUG:block_infos State(pc_initial=566 nstack_initial=0):
AdaptBlockInfo(insts=((566, {'idx': 0, 'res': '$566load_global.0'}), (568, {}), (570, {}), (572, {}), (574, {}), (576, {}), (578, {'item': '$566load_global.0', 'res': '$578load_attr.2'}), (580, {}), (582, {}), (584, {}), (586, {}), (588, {'res': '$x588.3'}), (590, {'idx': 1, 'res': '$590load_global.4'}), (592, {}), (594, {}), (596, {}), (598, {}), (600, {}), (602, {'res': '$const602.6'}), (604, {'res': '$n604.7'}), (606, {'res': '$pre_avg606.8'}), (608, {'op': '-', 'lhs': '$n604.7', 'rhs': '$pre_avg606.8', 'res': '$binop_sub608.9'}), (610, {}), (612, {}), (614, {}), (616, {'func': '$590load_global.4', 'args': ['$const602.6', '$binop_sub608.9'], 'kw_names': None, 'res': '$616call.10'}), (618, {}), (620, {}), (622, {}), (624, {}), (626, {'idx': 2, 'res': '$626load_global.11'}), (628, {}), (630, {}), (632, {}), (634, {}), (636, {}), (638, {'res': '$n638.13'}), (640, {'res': '$post_avg640.14'}), (642, {'op': '+', 'lhs': '$n638.13', 'rhs': '$post_avg640.14', 'res': '$binop_add642.15'}), (644, {}), (646, {'res': '$x646.16'}), (648, {'item': '$x646.16', 'res': '$648load_attr.17'}), (650, {}), (652, {}), (654, {}), (656, {}), (658, {'res': '$const658.18'}), (660, {'index': '$const658.18', 'target': '$648load_attr.17', 'res': '$660binary_subscr.19'}), (662, {}), (664, {}), (666, {}), (668, {}), (670, {}), (672, {}), (674, {'func': '$626load_global.11', 'args': ['$binop_add642.15', '$660binary_subscr.19'], 'kw_names': None, 'res': '$674call.20'}), (676, {}), (678, {}), (680, {}), (682, {}), (684, {'start': '$616call.10', 'stop': '$674call.20', 'step': None, 'res': '$684build_slice.22', 'slicevar': '$684build_slice.21'}), (686, {'index': '$684build_slice.22', 'target': '$x588.3', 'res': '$686binary_subscr.23'}), (688, {}), (690, {}), (692, {}), (694, {}), (696, {}), (698, {}), (700, {'func': '$578load_attr.2', 'args': ['$686binary_subscr.23'], 'kw_names': None, 'res': '$700call.24'}), (702, {}), (704, {}), (706, {}), (708, {}), (710, {'value': '$700call.24'}), (712, {'res': '$peaks712.25'}), (714, {'res': '$n714.26'}), (720, {'index': '$n714.26', 'target': '$peaks712.25', 'res': '$720binary_subscr.27'}), (722, {}), (724, {}), (726, {}), (728, {}), (730, {'res': '$x730.28'}), (732, {'res': '$n732.29'}), (734, {'index': '$n732.29', 'target': '$x730.28', 'res': '$734binary_subscr.30'}), (736, {}), (738, {}), (740, {}), (742, {}), (744, {'res': '$avgn744.31'}), (746, {'res': '$delta746.32'}), (748, {'op': '+', 'lhs': '$avgn744.31', 'rhs': '$delta746.32', 'res': '$binop_add748.33'}), (750, {}), (752, {'lhs': '$734binary_subscr.30', 'rhs': '$binop_add748.33', 'res': '$752compare_op.34'}), (754, {}), (756, {}), (758, {'op': '&=', 'lhs': '$720binary_subscr.27', 'rhs': '$752compare_op.34', 'res': '$binop_iand758.35'}), (760, {}), (766, {'target': '$peaks712.25', 'index': '$n714.26', 'value': '$binop_iand758.35'}), (768, {}), (770, {'res': '$peaks770.36'}), (772, {'res': '$n772.37'}), (774, {'index': '$n772.37', 'target': '$peaks770.36', 'res': '$774binary_subscr.38'}), (776, {}), (778, {}), (780, {}), (782, {}), (784, {'pred': '$774binary_subscr.38'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={786: (), 798: ()})
2024-07-15 06:11:44,982 DEBUG:block_infos State(pc_initial=786 nstack_initial=0):
AdaptBlockInfo(insts=((786, {'res': '$n786.0'}), (788, {'res': '$const788.1'}), (790, {'op': '+=', 'lhs': '$n786.0', 'rhs': '$const788.1', 'res': '$binop_iadd790.2'}), (792, {}), (794, {'value': '$binop_iadd790.2'}), (796, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={328: ()})
2024-07-15 06:11:44,982 DEBUG:block_infos State(pc_initial=798 nstack_initial=0):
AdaptBlockInfo(insts=((798, {'res': '$n798.0'}), (800, {'res': '$wait800.1'}), (802, {'res': '$const802.2'}), (804, {'op': '+', 'lhs': '$wait800.1', 'rhs': '$const802.2', 'res': '$binop_add804.3'}), (806, {}), (808, {'op': '+=', 'lhs': '$n798.0', 'rhs': '$binop_add804.3', 'res': '$binop_iadd808.4'}), (810, {}), (812, {'value': '$binop_iadd808.4'}), (814, {'res': '$n814.5'}), (816, {'res': '$x816.6'}), (818, {'item': '$x816.6', 'res': '$818load_attr.7'}), (820, {}), (822, {}), (824, {}), (826, {}), (828, {'res': '$const828.8'}), (830, {'index': '$const828.8', 'target': '$818load_attr.7', 'res': '$830binary_subscr.9'}), (832, {}), (834, {}), (836, {}), (838, {}), (840, {'lhs': '$n814.5', 'rhs': '$830binary_subscr.9', 'res': '$840compare_op.10'}), (842, {}), (844, {}), (846, {'pred': '$840compare_op.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={848: (), 362: ()})
2024-07-15 06:11:44,982 DEBUG:block_infos State(pc_initial=848 nstack_initial=0):
AdaptBlockInfo(insts=((848, {'res': '$const848.0'}), (850, {'retval': '$const848.0', 'castval': '$850return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-15 06:11:44,982 DEBUG:block_infos State(pc_initial=852 nstack_initial=0):
AdaptBlockInfo(insts=((852, {'res': '$const852.0'}), (854, {'retval': '$const852.0', 'castval': '$854return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-15 06:11:44,985 DEBUG:label 0:
    x = arg(0, name=x)                       ['x']
    pre_max = arg(1, name=pre_max)           ['pre_max']
    post_max = arg(2, name=post_max)         ['post_max']
    pre_avg = arg(3, name=pre_avg)           ['pre_avg']
    post_avg = arg(4, name=post_avg)         ['post_avg']
    delta = arg(5, name=delta)               ['delta']
    wait = arg(6, name=wait)                 ['wait']
    peaks = arg(7, name=peaks)               ['peaks']
    $const6.1 = const(int, 0)                ['$const6.1']
    $8binary_subscr.2 = getitem(value=x, index=$const6.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1', 'x']
    $18load_global.3 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$18load_global.3']
    $30load_attr.5 = getattr(value=$18load_global.3, attr=max) ['$18load_global.3', '$30load_attr.5']
    $const42.7 = const(NoneType, None)       ['$const42.7']
    $44load_global.8 = global(min: <built-in function min>) ['$44load_global.8']
    $60load_attr.12 = getattr(value=x, attr=shape) ['$60load_attr.12', 'x']
    $const70.13 = const(int, 0)              ['$const70.13']
    $72binary_subscr.14 = getitem(value=$60load_attr.12, index=$const70.13, fn=<built-in function getitem>) ['$60load_attr.12', '$72binary_subscr.14', '$const70.13']
    $86call.15 = call $44load_global.8(post_max, $72binary_subscr.14, func=$44load_global.8, args=[Var(post_max, utils.py:1209), Var($72binary_subscr.14, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None) ['$44load_global.8', '$72binary_subscr.14', '$86call.15', 'post_max']
    $96build_slice.16 = global(slice: <class 'slice'>) ['$96build_slice.16']
    $96build_slice.17 = call $96build_slice.16($const42.7, $86call.15, func=$96build_slice.16, args=(Var($const42.7, utils.py:1221), Var($86call.15, utils.py:1221)), kws=(), vararg=None, varkwarg=None, target=None) ['$86call.15', '$96build_slice.16', '$96build_slice.17', '$const42.7']
    $98binary_subscr.18 = getitem(value=x, index=$96build_slice.17, fn=<built-in function getitem>) ['$96build_slice.17', '$98binary_subscr.18', 'x']
    $112call.19 = call $30load_attr.5($98binary_subscr.18, func=$30load_attr.5, args=[Var($98binary_subscr.18, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None) ['$112call.19', '$30load_attr.5', '$98binary_subscr.18']
    $122compare_op.20 = $8binary_subscr.2 >= $112call.19 ['$112call.19', '$122compare_op.20', '$8binary_subscr.2']
    $const130.22 = const(int, 0)             ['$const130.22']
    peaks[$const130.22] = $122compare_op.20  ['$122compare_op.20', '$const130.22', 'peaks']
    $const138.24 = const(int, 0)             ['$const138.24']
    $144binary_subscr.25 = getitem(value=peaks, index=$const138.24, fn=<built-in function getitem>) ['$144binary_subscr.25', '$const138.24', 'peaks']
    $const156.27 = const(int, 0)             ['$const156.27']
    $158binary_subscr.28 = getitem(value=x, index=$const156.27, fn=<built-in function getitem>) ['$158binary_subscr.28', '$const156.27', 'x']
    $168load_global.29 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$168load_global.29']
    $180load_attr.31 = getattr(value=$168load_global.29, attr=mean) ['$168load_global.29', '$180load_attr.31']
    $const192.33 = const(NoneType, None)     ['$const192.33']
    $194load_global.34 = global(min: <built-in function min>) ['$194load_global.34']
    $210load_attr.38 = getattr(value=x, attr=shape) ['$210load_attr.38', 'x']
    $const220.39 = const(int, 0)             ['$const220.39']
    $222binary_subscr.40 = getitem(value=$210load_attr.38, index=$const220.39, fn=<built-in function getitem>) ['$210load_attr.38', '$222binary_subscr.40', '$const220.39']
    $236call.41 = call $194load_global.34(post_avg, $222binary_subscr.40, func=$194load_global.34, args=[Var(post_avg, utils.py:1209), Var($222binary_subscr.40, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None) ['$194load_global.34', '$222binary_subscr.40', '$236call.41', 'post_avg']
    $246build_slice.42 = global(slice: <class 'slice'>) ['$246build_slice.42']
    $246build_slice.43 = call $246build_slice.42($const192.33, $236call.41, func=$246build_slice.42, args=(Var($const192.33, utils.py:1222), Var($236call.41, utils.py:1222)), kws=(), vararg=None, varkwarg=None, target=None) ['$236call.41', '$246build_slice.42', '$246build_slice.43', '$const192.33']
    $248binary_subscr.44 = getitem(value=x, index=$246build_slice.43, fn=<built-in function getitem>) ['$246build_slice.43', '$248binary_subscr.44', 'x']
    $262call.45 = call $180load_attr.31($248binary_subscr.44, func=$180load_attr.31, args=[Var($248binary_subscr.44, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None) ['$180load_attr.31', '$248binary_subscr.44', '$262call.45']
    $binop_add274.47 = $262call.45 + delta   ['$262call.45', '$binop_add274.47', 'delta']
    $278compare_op.48 = $158binary_subscr.28 >= $binop_add274.47 ['$158binary_subscr.28', '$278compare_op.48', '$binop_add274.47']
    $binop_iand284.49 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$144binary_subscr.25, rhs=$278compare_op.48, static_lhs=Undefined, static_rhs=Undefined) ['$144binary_subscr.25', '$278compare_op.48', '$binop_iand284.49']
    peaks[$const138.24] = $binop_iand284.49  ['$binop_iand284.49', '$const138.24', 'peaks']
    $const298.51 = const(int, 0)             ['$const298.51']
    $300binary_subscr.52 = getitem(value=peaks, index=$const298.51, fn=<built-in function getitem>) ['$300binary_subscr.52', '$const298.51', 'peaks']
    bool310 = global(bool: <class 'bool'>)   ['bool310']
    $310pred = call bool310($300binary_subscr.52, func=bool310, args=(Var($300binary_subscr.52, utils.py:1224),), kws=(), vararg=None, varkwarg=None, target=None) ['$300binary_subscr.52', '$310pred', 'bool310']
    branch $310pred, 312, 324                ['$310pred']
label 312:
    $const314.1 = const(int, 1)              ['$const314.1']
    n = wait + $const314.1                   ['$const314.1', 'n', 'wait']
    jump 328                                 []
label 324:
    n = const(int, 1)                        ['n']
    jump 328                                 []
label 328:
    $332load_attr.2 = getattr(value=x, attr=shape) ['$332load_attr.2', 'x']
    $const342.3 = const(int, 0)              ['$const342.3']
    $344binary_subscr.4 = getitem(value=$332load_attr.2, index=$const342.3, fn=<built-in function getitem>) ['$332load_attr.2', '$344binary_subscr.4', '$const342.3']
    $354compare_op.5 = n < $344binary_subscr.4 ['$344binary_subscr.4', '$354compare_op.5', 'n']
    bool360 = global(bool: <class 'bool'>)   ['bool360']
    $360pred = call bool360($354compare_op.5, func=bool360, args=(Var($354compare_op.5, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None) ['$354compare_op.5', '$360pred', 'bool360']
    branch $360pred, 362, 852                ['$360pred']
label 362:
    $362load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$362load_global.0']
    $374load_attr.2 = getattr(value=$362load_global.0, attr=max) ['$362load_global.0', '$374load_attr.2']
    $386load_global.4 = global(max: <built-in function max>) ['$386load_global.4']
    $const398.6 = const(int, 0)              ['$const398.6']
    $binop_sub404.9 = n - pre_max            ['$binop_sub404.9', 'n', 'pre_max']
    $412call.10 = call $386load_global.4($const398.6, $binop_sub404.9, func=$386load_global.4, args=[Var($const398.6, utils.py:1230), Var($binop_sub404.9, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None) ['$386load_global.4', '$412call.10', '$binop_sub404.9', '$const398.6']
    $422load_global.11 = global(min: <built-in function min>) ['$422load_global.11']
    $binop_add438.15 = n + post_max          ['$binop_add438.15', 'n', 'post_max']
    $444load_attr.17 = getattr(value=x, attr=shape) ['$444load_attr.17', 'x']
    $const454.18 = const(int, 0)             ['$const454.18']
    $456binary_subscr.19 = getitem(value=$444load_attr.17, index=$const454.18, fn=<built-in function getitem>) ['$444load_attr.17', '$456binary_subscr.19', '$const454.18']
    $470call.20 = call $422load_global.11($binop_add438.15, $456binary_subscr.19, func=$422load_global.11, args=[Var($binop_add438.15, utils.py:1230), Var($456binary_subscr.19, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None) ['$422load_global.11', '$456binary_subscr.19', '$470call.20', '$binop_add438.15']
    $480build_slice.21 = global(slice: <class 'slice'>) ['$480build_slice.21']
    $480build_slice.22 = call $480build_slice.21($412call.10, $470call.20, func=$480build_slice.21, args=(Var($412call.10, utils.py:1230), Var($470call.20, utils.py:1230)), kws=(), vararg=None, varkwarg=None, target=None) ['$412call.10', '$470call.20', '$480build_slice.21', '$480build_slice.22']
    $482binary_subscr.23 = getitem(value=x, index=$480build_slice.22, fn=<built-in function getitem>) ['$480build_slice.22', '$482binary_subscr.23', 'x']
    maxn = call $374load_attr.2($482binary_subscr.23, func=$374load_attr.2, args=[Var($482binary_subscr.23, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None) ['$374load_attr.2', '$482binary_subscr.23', 'maxn']
    $512binary_subscr.27 = getitem(value=x, index=n, fn=<built-in function getitem>) ['$512binary_subscr.27', 'n', 'x']
    $524compare_op.29 = $512binary_subscr.27 == maxn ['$512binary_subscr.27', '$524compare_op.29', 'maxn']
    peaks[n] = $524compare_op.29             ['$524compare_op.29', 'n', 'peaks']
    $542binary_subscr.34 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$542binary_subscr.34', 'n', 'peaks']
    bool552 = global(bool: <class 'bool'>)   ['bool552']
    $552pred = call bool552($542binary_subscr.34, func=bool552, args=(Var($542binary_subscr.34, utils.py:1235),), kws=(), vararg=None, varkwarg=None, target=None) ['$542binary_subscr.34', '$552pred', 'bool552']
    branch $552pred, 566, 554                ['$552pred']
label 554:
    $const556.1 = const(int, 1)              ['$const556.1']
    $binop_iadd558.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const556.1, static_lhs=Undefined, static_rhs=Undefined) ['$binop_iadd558.2', '$const556.1', 'n']
    n = $binop_iadd558.2                     ['$binop_iadd558.2', 'n']
    jump 328                                 []
label 566:
    $566load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$566load_global.0']
    $578load_attr.2 = getattr(value=$566load_global.0, attr=mean) ['$566load_global.0', '$578load_attr.2']
    $590load_global.4 = global(max: <built-in function max>) ['$590load_global.4']
    $const602.6 = const(int, 0)              ['$const602.6']
    $binop_sub608.9 = n - pre_avg            ['$binop_sub608.9', 'n', 'pre_avg']
    $616call.10 = call $590load_global.4($const602.6, $binop_sub608.9, func=$590load_global.4, args=[Var($const602.6, utils.py:1239), Var($binop_sub608.9, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None) ['$590load_global.4', '$616call.10', '$binop_sub608.9', '$const602.6']
    $626load_global.11 = global(min: <built-in function min>) ['$626load_global.11']
    $binop_add642.15 = n + post_avg          ['$binop_add642.15', 'n', 'post_avg']
    $648load_attr.17 = getattr(value=x, attr=shape) ['$648load_attr.17', 'x']
    $const658.18 = const(int, 0)             ['$const658.18']
    $660binary_subscr.19 = getitem(value=$648load_attr.17, index=$const658.18, fn=<built-in function getitem>) ['$648load_attr.17', '$660binary_subscr.19', '$const658.18']
    $674call.20 = call $626load_global.11($binop_add642.15, $660binary_subscr.19, func=$626load_global.11, args=[Var($binop_add642.15, utils.py:1239), Var($660binary_subscr.19, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None) ['$626load_global.11', '$660binary_subscr.19', '$674call.20', '$binop_add642.15']
    $684build_slice.21 = global(slice: <class 'slice'>) ['$684build_slice.21']
    $684build_slice.22 = call $684build_slice.21($616call.10, $674call.20, func=$684build_slice.21, args=(Var($616call.10, utils.py:1239), Var($674call.20, utils.py:1239)), kws=(), vararg=None, varkwarg=None, target=None) ['$616call.10', '$674call.20', '$684build_slice.21', '$684build_slice.22']
    $686binary_subscr.23 = getitem(value=x, index=$684build_slice.22, fn=<built-in function getitem>) ['$684build_slice.22', '$686binary_subscr.23', 'x']
    avgn = call $578load_attr.2($686binary_subscr.23, func=$578load_attr.2, args=[Var($686binary_subscr.23, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None) ['$578load_attr.2', '$686binary_subscr.23', 'avgn']
    $720binary_subscr.27 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$720binary_subscr.27', 'n', 'peaks']
    $734binary_subscr.30 = getitem(value=x, index=n, fn=<built-in function getitem>) ['$734binary_subscr.30', 'n', 'x']
    $binop_add748.33 = avgn + delta          ['$binop_add748.33', 'avgn', 'delta']
    $752compare_op.34 = $734binary_subscr.30 >= $binop_add748.33 ['$734binary_subscr.30', '$752compare_op.34', '$binop_add748.33']
    $binop_iand758.35 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$720binary_subscr.27, rhs=$752compare_op.34, static_lhs=Undefined, static_rhs=Undefined) ['$720binary_subscr.27', '$752compare_op.34', '$binop_iand758.35']
    peaks[n] = $binop_iand758.35             ['$binop_iand758.35', 'n', 'peaks']
    $774binary_subscr.38 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$774binary_subscr.38', 'n', 'peaks']
    bool784 = global(bool: <class 'bool'>)   ['bool784']
    $784pred = call bool784($774binary_subscr.38, func=bool784, args=(Var($774binary_subscr.38, utils.py:1242),), kws=(), vararg=None, varkwarg=None, target=None) ['$774binary_subscr.38', '$784pred', 'bool784']
    branch $784pred, 798, 786                ['$784pred']
label 786:
    $const788.1 = const(int, 1)              ['$const788.1']
    $binop_iadd790.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const788.1, static_lhs=Undefined, static_rhs=Undefined) ['$binop_iadd790.2', '$const788.1', 'n']
    n = $binop_iadd790.2                     ['$binop_iadd790.2', 'n']
    jump 328                                 []
label 798:
    $const802.2 = const(int, 1)              ['$const802.2']
    $binop_add804.3 = wait + $const802.2     ['$binop_add804.3', '$const802.2', 'wait']
    $binop_iadd808.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$binop_add804.3, static_lhs=Undefined, static_rhs=Undefined) ['$binop_add804.3', '$binop_iadd808.4', 'n']
    n = $binop_iadd808.4                     ['$binop_iadd808.4', 'n']
    $818load_attr.7 = getattr(value=x, attr=shape) ['$818load_attr.7', 'x']
    $const828.8 = const(int, 0)              ['$const828.8']
    $830binary_subscr.9 = getitem(value=$818load_attr.7, index=$const828.8, fn=<built-in function getitem>) ['$818load_attr.7', '$830binary_subscr.9', '$const828.8']
    $840compare_op.10 = n < $830binary_subscr.9 ['$830binary_subscr.9', '$840compare_op.10', 'n']
    bool846 = global(bool: <class 'bool'>)   ['bool846']
    $846pred = call bool846($840compare_op.10, func=bool846, args=(Var($840compare_op.10, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None) ['$840compare_op.10', '$846pred', 'bool846']
    branch $846pred, 362, 848                ['$846pred']
label 848:
    $const848.0 = const(NoneType, None)      ['$const848.0']
    $850return_value.1 = cast(value=$const848.0) ['$850return_value.1', '$const848.0']
    return $850return_value.1                ['$850return_value.1']
label 852:
    $const852.0 = const(NoneType, None)      ['$const852.0']
    $854return_value.1 = cast(value=$const852.0) ['$854return_value.1', '$const852.0']
    return $854return_value.1                ['$854return_value.1']

2024-07-15 06:11:45,021 DEBUG:==== SSA block analysis pass on 0
2024-07-15 06:11:45,022 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B6AC7890>
2024-07-15 06:11:45,022 DEBUG:on stmt: x = arg(0, name=x)
2024-07-15 06:11:45,022 DEBUG:on stmt: pre_max = arg(1, name=pre_max)
2024-07-15 06:11:45,022 DEBUG:on stmt: post_max = arg(2, name=post_max)
2024-07-15 06:11:45,022 DEBUG:on stmt: pre_avg = arg(3, name=pre_avg)
2024-07-15 06:11:45,022 DEBUG:on stmt: post_avg = arg(4, name=post_avg)
2024-07-15 06:11:45,022 DEBUG:on stmt: delta = arg(5, name=delta)
2024-07-15 06:11:45,022 DEBUG:on stmt: wait = arg(6, name=wait)
2024-07-15 06:11:45,022 DEBUG:on stmt: peaks = arg(7, name=peaks)
2024-07-15 06:11:45,022 DEBUG:on stmt: $const6.1 = const(int, 0)
2024-07-15 06:11:45,022 DEBUG:on stmt: $8binary_subscr.2 = static_getitem(value=x, index=0, index_var=$const6.1, fn=<built-in function getitem>)
2024-07-15 06:11:45,022 DEBUG:on stmt: $18load_global.3 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:45,022 DEBUG:on stmt: $30load_attr.5 = getattr(value=$18load_global.3, attr=max)
2024-07-15 06:11:45,022 DEBUG:on stmt: $const42.7 = const(NoneType, None)
2024-07-15 06:11:45,022 DEBUG:on stmt: $44load_global.8 = global(min: <built-in function min>)
2024-07-15 06:11:45,022 DEBUG:on stmt: $60load_attr.12 = getattr(value=x, attr=shape)
2024-07-15 06:11:45,022 DEBUG:on stmt: $const70.13 = const(int, 0)
2024-07-15 06:11:45,022 DEBUG:on stmt: $72binary_subscr.14 = static_getitem(value=$60load_attr.12, index=0, index_var=$const70.13, fn=<built-in function getitem>)
2024-07-15 06:11:45,022 DEBUG:on stmt: $86call.15 = call $44load_global.8(post_max, $72binary_subscr.14, func=$44load_global.8, args=[Var(post_max, utils.py:1209), Var($72binary_subscr.14, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:45,023 DEBUG:on stmt: $96build_slice.16 = global(slice: <class 'slice'>)
2024-07-15 06:11:45,023 DEBUG:on stmt: $96build_slice.17 = call $96build_slice.16($const42.7, $86call.15, func=$96build_slice.16, args=(Var($const42.7, utils.py:1221), Var($86call.15, utils.py:1221)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:45,023 DEBUG:on stmt: $98binary_subscr.18 = getitem(value=x, index=$96build_slice.17, fn=<built-in function getitem>)
2024-07-15 06:11:45,023 DEBUG:on stmt: $112call.19 = call $30load_attr.5($98binary_subscr.18, func=$30load_attr.5, args=[Var($98binary_subscr.18, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:45,023 DEBUG:on stmt: $122compare_op.20 = $8binary_subscr.2 >= $112call.19
2024-07-15 06:11:45,023 DEBUG:on stmt: $const130.22 = const(int, 0)
2024-07-15 06:11:45,023 DEBUG:on stmt: peaks[0] = $122compare_op.20
2024-07-15 06:11:45,023 DEBUG:on stmt: $const138.24 = const(int, 0)
2024-07-15 06:11:45,023 DEBUG:on stmt: $144binary_subscr.25 = static_getitem(value=peaks, index=0, index_var=$const138.24, fn=<built-in function getitem>)
2024-07-15 06:11:45,023 DEBUG:on stmt: $const156.27 = const(int, 0)
2024-07-15 06:11:45,023 DEBUG:on stmt: $158binary_subscr.28 = static_getitem(value=x, index=0, index_var=$const156.27, fn=<built-in function getitem>)
2024-07-15 06:11:45,023 DEBUG:on stmt: $168load_global.29 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:45,023 DEBUG:on stmt: $180load_attr.31 = getattr(value=$168load_global.29, attr=mean)
2024-07-15 06:11:45,023 DEBUG:on stmt: $const192.33 = const(NoneType, None)
2024-07-15 06:11:45,023 DEBUG:on stmt: $194load_global.34 = global(min: <built-in function min>)
2024-07-15 06:11:45,023 DEBUG:on stmt: $210load_attr.38 = getattr(value=x, attr=shape)
2024-07-15 06:11:45,023 DEBUG:on stmt: $const220.39 = const(int, 0)
2024-07-15 06:11:45,023 DEBUG:on stmt: $222binary_subscr.40 = static_getitem(value=$210load_attr.38, index=0, index_var=$const220.39, fn=<built-in function getitem>)
2024-07-15 06:11:45,023 DEBUG:on stmt: $236call.41 = call $194load_global.34(post_avg, $222binary_subscr.40, func=$194load_global.34, args=[Var(post_avg, utils.py:1209), Var($222binary_subscr.40, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:45,023 DEBUG:on stmt: $246build_slice.42 = global(slice: <class 'slice'>)
2024-07-15 06:11:45,023 DEBUG:on stmt: $246build_slice.43 = call $246build_slice.42($const192.33, $236call.41, func=$246build_slice.42, args=(Var($const192.33, utils.py:1222), Var($236call.41, utils.py:1222)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:45,024 DEBUG:on stmt: $248binary_subscr.44 = getitem(value=x, index=$246build_slice.43, fn=<built-in function getitem>)
2024-07-15 06:11:45,024 DEBUG:on stmt: $262call.45 = call $180load_attr.31($248binary_subscr.44, func=$180load_attr.31, args=[Var($248binary_subscr.44, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:45,024 DEBUG:on stmt: $binop_add274.47 = $262call.45 + delta
2024-07-15 06:11:45,024 DEBUG:on stmt: $278compare_op.48 = $158binary_subscr.28 >= $binop_add274.47
2024-07-15 06:11:45,024 DEBUG:on stmt: $binop_iand284.49 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$144binary_subscr.25, rhs=$278compare_op.48, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:45,024 DEBUG:on stmt: peaks[0] = $binop_iand284.49
2024-07-15 06:11:45,024 DEBUG:on stmt: $const298.51 = const(int, 0)
2024-07-15 06:11:45,024 DEBUG:on stmt: $300binary_subscr.52 = static_getitem(value=peaks, index=0, index_var=$const298.51, fn=<built-in function getitem>)
2024-07-15 06:11:45,024 DEBUG:on stmt: bool310 = global(bool: <class 'bool'>)
2024-07-15 06:11:45,024 DEBUG:on stmt: $310pred = call bool310($300binary_subscr.52, func=bool310, args=(Var($300binary_subscr.52, utils.py:1224),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:45,024 DEBUG:on stmt: branch $310pred, 312, 324
2024-07-15 06:11:45,024 DEBUG:==== SSA block analysis pass on 312
2024-07-15 06:11:45,024 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B6AC7890>
2024-07-15 06:11:45,024 DEBUG:on stmt: $const314.1 = const(int, 1)
2024-07-15 06:11:45,024 DEBUG:on stmt: n = wait + $const314.1
2024-07-15 06:11:45,025 DEBUG:on stmt: jump 328
2024-07-15 06:11:45,025 DEBUG:==== SSA block analysis pass on 324
2024-07-15 06:11:45,026 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B6AC7890>
2024-07-15 06:11:45,026 DEBUG:on stmt: n = const(int, 1)
2024-07-15 06:11:45,026 DEBUG:on stmt: jump 328
2024-07-15 06:11:45,026 DEBUG:==== SSA block analysis pass on 328
2024-07-15 06:11:45,026 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B6AC7890>
2024-07-15 06:11:45,026 DEBUG:on stmt: $332load_attr.2 = getattr(value=x, attr=shape)
2024-07-15 06:11:45,026 DEBUG:on stmt: $const342.3 = const(int, 0)
2024-07-15 06:11:45,026 DEBUG:on stmt: $344binary_subscr.4 = static_getitem(value=$332load_attr.2, index=0, index_var=$const342.3, fn=<built-in function getitem>)
2024-07-15 06:11:45,026 DEBUG:on stmt: $354compare_op.5 = n < $344binary_subscr.4
2024-07-15 06:11:45,026 DEBUG:on stmt: bool360 = global(bool: <class 'bool'>)
2024-07-15 06:11:45,026 DEBUG:on stmt: $360pred = call bool360($354compare_op.5, func=bool360, args=(Var($354compare_op.5, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:45,026 DEBUG:on stmt: branch $360pred, 362, 852
2024-07-15 06:11:45,027 DEBUG:==== SSA block analysis pass on 362
2024-07-15 06:11:45,027 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B6AC7890>
2024-07-15 06:11:45,027 DEBUG:on stmt: $362load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:45,027 DEBUG:on stmt: $374load_attr.2 = getattr(value=$362load_global.0, attr=max)
2024-07-15 06:11:45,027 DEBUG:on stmt: $386load_global.4 = global(max: <built-in function max>)
2024-07-15 06:11:45,027 DEBUG:on stmt: $const398.6 = const(int, 0)
2024-07-15 06:11:45,027 DEBUG:on stmt: $binop_sub404.9 = n - pre_max
2024-07-15 06:11:45,027 DEBUG:on stmt: $412call.10 = call $386load_global.4($const398.6, $binop_sub404.9, func=$386load_global.4, args=[Var($const398.6, utils.py:1230), Var($binop_sub404.9, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:45,027 DEBUG:on stmt: $422load_global.11 = global(min: <built-in function min>)
2024-07-15 06:11:45,027 DEBUG:on stmt: $binop_add438.15 = n + post_max
2024-07-15 06:11:45,027 DEBUG:on stmt: $444load_attr.17 = getattr(value=x, attr=shape)
2024-07-15 06:11:45,027 DEBUG:on stmt: $const454.18 = const(int, 0)
2024-07-15 06:11:45,027 DEBUG:on stmt: $456binary_subscr.19 = static_getitem(value=$444load_attr.17, index=0, index_var=$const454.18, fn=<built-in function getitem>)
2024-07-15 06:11:45,027 DEBUG:on stmt: $470call.20 = call $422load_global.11($binop_add438.15, $456binary_subscr.19, func=$422load_global.11, args=[Var($binop_add438.15, utils.py:1230), Var($456binary_subscr.19, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:45,027 DEBUG:on stmt: $480build_slice.21 = global(slice: <class 'slice'>)
2024-07-15 06:11:45,027 DEBUG:on stmt: $480build_slice.22 = call $480build_slice.21($412call.10, $470call.20, func=$480build_slice.21, args=(Var($412call.10, utils.py:1230), Var($470call.20, utils.py:1230)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:45,028 DEBUG:on stmt: $482binary_subscr.23 = getitem(value=x, index=$480build_slice.22, fn=<built-in function getitem>)
2024-07-15 06:11:45,028 DEBUG:on stmt: maxn = call $374load_attr.2($482binary_subscr.23, func=$374load_attr.2, args=[Var($482binary_subscr.23, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:45,028 DEBUG:on stmt: $512binary_subscr.27 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-07-15 06:11:45,028 DEBUG:on stmt: $524compare_op.29 = $512binary_subscr.27 == maxn
2024-07-15 06:11:45,028 DEBUG:on stmt: peaks[n] = $524compare_op.29
2024-07-15 06:11:45,028 DEBUG:on stmt: $542binary_subscr.34 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-07-15 06:11:45,028 DEBUG:on stmt: bool552 = global(bool: <class 'bool'>)
2024-07-15 06:11:45,028 DEBUG:on stmt: $552pred = call bool552($542binary_subscr.34, func=bool552, args=(Var($542binary_subscr.34, utils.py:1235),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:45,028 DEBUG:on stmt: branch $552pred, 566, 554
2024-07-15 06:11:45,028 DEBUG:==== SSA block analysis pass on 554
2024-07-15 06:11:45,028 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B6AC7890>
2024-07-15 06:11:45,028 DEBUG:on stmt: $const556.1 = const(int, 1)
2024-07-15 06:11:45,028 DEBUG:on stmt: $binop_iadd558.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const556.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:45,028 DEBUG:on stmt: n = $binop_iadd558.2
2024-07-15 06:11:45,029 DEBUG:on stmt: jump 853
2024-07-15 06:11:45,029 DEBUG:==== SSA block analysis pass on 566
2024-07-15 06:11:45,029 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B6AC7890>
2024-07-15 06:11:45,029 DEBUG:on stmt: $566load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:45,029 DEBUG:on stmt: $578load_attr.2 = getattr(value=$566load_global.0, attr=mean)
2024-07-15 06:11:45,029 DEBUG:on stmt: $590load_global.4 = global(max: <built-in function max>)
2024-07-15 06:11:45,029 DEBUG:on stmt: $const602.6 = const(int, 0)
2024-07-15 06:11:45,029 DEBUG:on stmt: $binop_sub608.9 = n - pre_avg
2024-07-15 06:11:45,029 DEBUG:on stmt: $616call.10 = call $590load_global.4($const602.6, $binop_sub608.9, func=$590load_global.4, args=[Var($const602.6, utils.py:1239), Var($binop_sub608.9, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:45,029 DEBUG:on stmt: $626load_global.11 = global(min: <built-in function min>)
2024-07-15 06:11:45,029 DEBUG:on stmt: $binop_add642.15 = n + post_avg
2024-07-15 06:11:45,029 DEBUG:on stmt: $648load_attr.17 = getattr(value=x, attr=shape)
2024-07-15 06:11:45,029 DEBUG:on stmt: $const658.18 = const(int, 0)
2024-07-15 06:11:45,029 DEBUG:on stmt: $660binary_subscr.19 = static_getitem(value=$648load_attr.17, index=0, index_var=$const658.18, fn=<built-in function getitem>)
2024-07-15 06:11:45,029 DEBUG:on stmt: $674call.20 = call $626load_global.11($binop_add642.15, $660binary_subscr.19, func=$626load_global.11, args=[Var($binop_add642.15, utils.py:1239), Var($660binary_subscr.19, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:45,030 DEBUG:on stmt: $684build_slice.21 = global(slice: <class 'slice'>)
2024-07-15 06:11:45,030 DEBUG:on stmt: $684build_slice.22 = call $684build_slice.21($616call.10, $674call.20, func=$684build_slice.21, args=(Var($616call.10, utils.py:1239), Var($674call.20, utils.py:1239)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:45,030 DEBUG:on stmt: $686binary_subscr.23 = getitem(value=x, index=$684build_slice.22, fn=<built-in function getitem>)
2024-07-15 06:11:45,030 DEBUG:on stmt: avgn = call $578load_attr.2($686binary_subscr.23, func=$578load_attr.2, args=[Var($686binary_subscr.23, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:45,030 DEBUG:on stmt: $720binary_subscr.27 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-07-15 06:11:45,030 DEBUG:on stmt: $734binary_subscr.30 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-07-15 06:11:45,030 DEBUG:on stmt: $binop_add748.33 = avgn + delta
2024-07-15 06:11:45,030 DEBUG:on stmt: $752compare_op.34 = $734binary_subscr.30 >= $binop_add748.33
2024-07-15 06:11:45,031 DEBUG:on stmt: $binop_iand758.35 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$720binary_subscr.27, rhs=$752compare_op.34, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:45,031 DEBUG:on stmt: peaks[n] = $binop_iand758.35
2024-07-15 06:11:45,031 DEBUG:on stmt: $774binary_subscr.38 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-07-15 06:11:45,031 DEBUG:on stmt: bool784 = global(bool: <class 'bool'>)
2024-07-15 06:11:45,031 DEBUG:on stmt: $784pred = call bool784($774binary_subscr.38, func=bool784, args=(Var($774binary_subscr.38, utils.py:1242),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:45,031 DEBUG:on stmt: branch $784pred, 798, 786
2024-07-15 06:11:45,031 DEBUG:==== SSA block analysis pass on 786
2024-07-15 06:11:45,031 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B6AC7890>
2024-07-15 06:11:45,031 DEBUG:on stmt: $const788.1 = const(int, 1)
2024-07-15 06:11:45,031 DEBUG:on stmt: $binop_iadd790.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const788.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:45,031 DEBUG:on stmt: n = $binop_iadd790.2
2024-07-15 06:11:45,031 DEBUG:on stmt: jump 853
2024-07-15 06:11:45,031 DEBUG:==== SSA block analysis pass on 798
2024-07-15 06:11:45,031 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B6AC7890>
2024-07-15 06:11:45,031 DEBUG:on stmt: $const802.2 = const(int, 1)
2024-07-15 06:11:45,032 DEBUG:on stmt: $binop_add804.3 = wait + $const802.2
2024-07-15 06:11:45,032 DEBUG:on stmt: $binop_iadd808.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$binop_add804.3, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:45,032 DEBUG:on stmt: n = $binop_iadd808.4
2024-07-15 06:11:45,032 DEBUG:on stmt: $818load_attr.7 = getattr(value=x, attr=shape)
2024-07-15 06:11:45,032 DEBUG:on stmt: $const828.8 = const(int, 0)
2024-07-15 06:11:45,032 DEBUG:on stmt: $830binary_subscr.9 = static_getitem(value=$818load_attr.7, index=0, index_var=$const828.8, fn=<built-in function getitem>)
2024-07-15 06:11:45,032 DEBUG:on stmt: $840compare_op.10 = n < $830binary_subscr.9
2024-07-15 06:11:45,032 DEBUG:on stmt: bool846 = global(bool: <class 'bool'>)
2024-07-15 06:11:45,032 DEBUG:on stmt: $846pred = call bool846($840compare_op.10, func=bool846, args=(Var($840compare_op.10, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:45,032 DEBUG:on stmt: branch $846pred, 362, 848
2024-07-15 06:11:45,032 DEBUG:==== SSA block analysis pass on 848
2024-07-15 06:11:45,032 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B6AC7890>
2024-07-15 06:11:45,032 DEBUG:on stmt: $const848.0 = const(NoneType, None)
2024-07-15 06:11:45,032 DEBUG:on stmt: $850return_value.1 = cast(value=$const848.0)
2024-07-15 06:11:45,032 DEBUG:on stmt: return $850return_value.1
2024-07-15 06:11:45,032 DEBUG:==== SSA block analysis pass on 852
2024-07-15 06:11:45,032 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B6AC7890>
2024-07-15 06:11:45,032 DEBUG:on stmt: $const852.0 = const(NoneType, None)
2024-07-15 06:11:45,032 DEBUG:on stmt: $854return_value.1 = cast(value=$const852.0)
2024-07-15 06:11:45,032 DEBUG:on stmt: return $854return_value.1
2024-07-15 06:11:45,032 DEBUG:==== SSA block analysis pass on 853
2024-07-15 06:11:45,032 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B6AC7890>
2024-07-15 06:11:45,032 DEBUG:on stmt: jump 328
2024-07-15 06:11:45,036 DEBUG:defs defaultdict(<class 'list'>,
            {'$112call.19': [(<numba.core.ir.Assign object at 0x00000221B6AD4590>,
                              0)],
             '$122compare_op.20': [(<numba.core.ir.Assign object at 0x00000221B6AD47D0>,
                                    0)],
             '$144binary_subscr.25': [(<numba.core.ir.Assign object at 0x00000221B68EEB10>,
                                       0)],
             '$158binary_subscr.28': [(<numba.core.ir.Assign object at 0x00000221B68ED8D0>,
                                       0)],
             '$168load_global.29': [(<numba.core.ir.Assign object at 0x00000221B6AD5790>,
                                     0)],
             '$180load_attr.31': [(<numba.core.ir.Assign object at 0x00000221B6AD59D0>,
                                   0)],
             '$18load_global.3': [(<numba.core.ir.Assign object at 0x00000221B6ABC650>,
                                   0)],
             '$194load_global.34': [(<numba.core.ir.Assign object at 0x00000221B6AD5F50>,
                                     0)],
             '$210load_attr.38': [(<numba.core.ir.Assign object at 0x00000221B6AD64D0>,
                                   0)],
             '$222binary_subscr.40': [(<numba.core.ir.Assign object at 0x00000221B68EDF50>,
                                       0)],
             '$236call.41': [(<numba.core.ir.Assign object at 0x00000221B6AD6B50>,
                              0)],
             '$246build_slice.42': [(<numba.core.ir.Assign object at 0x00000221B6AD6DD0>,
                                     0)],
             '$246build_slice.43': [(<numba.core.ir.Assign object at 0x00000221B6AD6F50>,
                                     0)],
             '$248binary_subscr.44': [(<numba.core.ir.Assign object at 0x00000221B6AD7110>,
                                       0)],
             '$262call.45': [(<numba.core.ir.Assign object at 0x00000221B6AD74D0>,
                              0)],
             '$278compare_op.48': [(<numba.core.ir.Assign object at 0x00000221B6AD7BD0>,
                                    0)],
             '$300binary_subscr.52': [(<numba.core.ir.Assign object at 0x00000221B68ED150>,
                                       0)],
             '$30load_attr.5': [(<numba.core.ir.Assign object at 0x00000221B6ABD090>,
                                 0)],
             '$310pred': [(<numba.core.ir.Assign object at 0x00000221B6AC5650>,
                           0)],
             '$332load_attr.2': [(<numba.core.ir.Assign object at 0x00000221B6AC7510>,
                                  328)],
             '$344binary_subscr.4': [(<numba.core.ir.Assign object at 0x00000221B69DA5D0>,
                                      328)],
             '$354compare_op.5': [(<numba.core.ir.Assign object at 0x00000221B6AC5190>,
                                   328)],
             '$360pred': [(<numba.core.ir.Assign object at 0x00000221B6AC40D0>,
                           328)],
             '$362load_global.0': [(<numba.core.ir.Assign object at 0x00000221B6AC4250>,
                                    362)],
             '$374load_attr.2': [(<numba.core.ir.Assign object at 0x00000221B6AC4550>,
                                  362)],
             '$386load_global.4': [(<numba.core.ir.Assign object at 0x00000221B6AC4AD0>,
                                    362)],
             '$412call.10': [(<numba.core.ir.Assign object at 0x00000221B6AC6A10>,
                              362)],
             '$422load_global.11': [(<numba.core.ir.Assign object at 0x00000221B6AC7090>,
                                     362)],
             '$444load_attr.17': [(<numba.core.ir.Assign object at 0x00000221B6AC60D0>,
                                   362)],
             '$44load_global.8': [(<numba.core.ir.Assign object at 0x00000221B6ABD810>,
                                   0)],
             '$456binary_subscr.19': [(<numba.core.ir.Assign object at 0x00000221B69E5290>,
                                       362)],
             '$470call.20': [(<numba.core.ir.Assign object at 0x00000221B6A7C990>,
                              362)],
             '$480build_slice.21': [(<numba.core.ir.Assign object at 0x00000221B6A7C4D0>,
                                     362)],
             '$480build_slice.22': [(<numba.core.ir.Assign object at 0x00000221B6A7C1D0>,
                                     362)],
             '$482binary_subscr.23': [(<numba.core.ir.Assign object at 0x00000221B6A7C050>,
                                       362)],
             '$512binary_subscr.27': [(<numba.core.ir.Assign object at 0x00000221B6A7D350>,
                                       362)],
             '$524compare_op.29': [(<numba.core.ir.Assign object at 0x00000221B6A7D550>,
                                    362)],
             '$542binary_subscr.34': [(<numba.core.ir.Assign object at 0x00000221B6A7DE50>,
                                       362)],
             '$552pred': [(<numba.core.ir.Assign object at 0x00000221B6A7E210>,
                           362)],
             '$566load_global.0': [(<numba.core.ir.Assign object at 0x00000221B6A7EC90>,
                                    566)],
             '$578load_attr.2': [(<numba.core.ir.Assign object at 0x00000221B6A7EE10>,
                                  566)],
             '$590load_global.4': [(<numba.core.ir.Assign object at 0x00000221B6A7F0D0>,
                                    566)],
             '$60load_attr.12': [(<numba.core.ir.Assign object at 0x00000221B6ABDCD0>,
                                  0)],
             '$616call.10': [(<numba.core.ir.Assign object at 0x00000221B6A7FB50>,
                              566)],
             '$626load_global.11': [(<numba.core.ir.Assign object at 0x00000221B6A7C350>,
                                     566)],
             '$648load_attr.17': [(<numba.core.ir.Assign object at 0x00000221B6A7BE50>,
                                   566)],
             '$660binary_subscr.19': [(<numba.core.ir.Assign object at 0x00000221B699DD90>,
                                       566)],
             '$674call.20': [(<numba.core.ir.Assign object at 0x00000221B6A7AD50>,
                              566)],
             '$684build_slice.21': [(<numba.core.ir.Assign object at 0x00000221B6A7BCD0>,
                                     566)],
             '$684build_slice.22': [(<numba.core.ir.Assign object at 0x00000221B6A78050>,
                                     566)],
             '$686binary_subscr.23': [(<numba.core.ir.Assign object at 0x00000221B6A78F50>,
                                       566)],
             '$720binary_subscr.27': [(<numba.core.ir.Assign object at 0x00000221B6A7A590>,
                                       566)],
             '$72binary_subscr.14': [(<numba.core.ir.Assign object at 0x00000221B68EECD0>,
                                      0)],
             '$734binary_subscr.30': [(<numba.core.ir.Assign object at 0x00000221B6A7AF90>,
                                       566)],
             '$752compare_op.34': [(<numba.core.ir.Assign object at 0x00000221B6A7B550>,
                                    566)],
             '$774binary_subscr.38': [(<numba.core.ir.Assign object at 0x00000221B6A7A1D0>,
                                       566)],
             '$784pred': [(<numba.core.ir.Assign object at 0x00000221B6A79E50>,
                           566)],
             '$818load_attr.7': [(<numba.core.ir.Assign object at 0x00000221B6A6C890>,
                                  798)],
             '$830binary_subscr.9': [(<numba.core.ir.Assign object at 0x00000221B69E1CD0>,
                                      798)],
             '$840compare_op.10': [(<numba.core.ir.Assign object at 0x00000221B6A6CF10>,
                                    798)],
             '$846pred': [(<numba.core.ir.Assign object at 0x00000221B6A6D290>,
                           798)],
             '$850return_value.1': [(<numba.core.ir.Assign object at 0x00000221B6A6D5D0>,
                                     848)],
             '$854return_value.1': [(<numba.core.ir.Assign object at 0x00000221B6A6DAD0>,
                                     852)],
             '$86call.15': [(<numba.core.ir.Assign object at 0x00000221B6ABC590>,
                             0)],
             '$8binary_subscr.2': [(<numba.core.ir.Assign object at 0x00000221B6A6F290>,
                                    0)],
             '$96build_slice.16': [(<numba.core.ir.Assign object at 0x00000221B6AD4050>,
                                    0)],
             '$96build_slice.17': [(<numba.core.ir.Assign object at 0x00000221B6AD4150>,
                                    0)],
             '$98binary_subscr.18': [(<numba.core.ir.Assign object at 0x00000221B6AD4310>,
                                      0)],
             '$binop_add274.47': [(<numba.core.ir.Assign object at 0x00000221B6AD7950>,
                                   0)],
             '$binop_add438.15': [(<numba.core.ir.Assign object at 0x00000221B6AC72D0>,
                                   362)],
             '$binop_add642.15': [(<numba.core.ir.Assign object at 0x00000221B6A7E790>,
                                   566)],
             '$binop_add748.33': [(<numba.core.ir.Assign object at 0x00000221B6A7BD90>,
                                   566)],
             '$binop_add804.3': [(<numba.core.ir.Assign object at 0x00000221B6A6C050>,
                                  798)],
             '$binop_iadd558.2': [(<numba.core.ir.Assign object at 0x00000221B6A7CE50>,
                                   554)],
             '$binop_iadd790.2': [(<numba.core.ir.Assign object at 0x00000221B6A79350>,
                                   786)],
             '$binop_iadd808.4': [(<numba.core.ir.Assign object at 0x00000221B6A6C290>,
                                   798)],
             '$binop_iand284.49': [(<numba.core.ir.Assign object at 0x00000221B6AD7E10>,
                                    0)],
             '$binop_iand758.35': [(<numba.core.ir.Assign object at 0x00000221B6A79FD0>,
                                    566)],
             '$binop_sub404.9': [(<numba.core.ir.Assign object at 0x00000221B6AC7CD0>,
                                  362)],
             '$binop_sub608.9': [(<numba.core.ir.Assign object at 0x00000221B6A7FA90>,
                                  566)],
             '$const130.22': [(<numba.core.ir.Assign object at 0x00000221B6AD4AD0>,
                               0)],
             '$const138.24': [(<numba.core.ir.Assign object at 0x00000221B6AD4F10>,
                               0)],
             '$const156.27': [(<numba.core.ir.Assign object at 0x00000221B6AD5410>,
                               0)],
             '$const192.33': [(<numba.core.ir.Assign object at 0x00000221B6AD5DD0>,
                               0)],
             '$const220.39': [(<numba.core.ir.Assign object at 0x00000221B6AD66D0>,
                               0)],
             '$const298.51': [(<numba.core.ir.Assign object at 0x00000221B6AC7310>,
                               0)],
             '$const314.1': [(<numba.core.ir.Assign object at 0x00000221B6AC70D0>,
                              312)],
             '$const342.3': [(<numba.core.ir.Assign object at 0x00000221B6AC55D0>,
                              328)],
             '$const398.6': [(<numba.core.ir.Assign object at 0x00000221B6AC5010>,
                              362)],
             '$const42.7': [(<numba.core.ir.Assign object at 0x00000221B6ABD550>,
                             0)],
             '$const454.18': [(<numba.core.ir.Assign object at 0x00000221B6AC49D0>,
                               362)],
             '$const556.1': [(<numba.core.ir.Assign object at 0x00000221B6A7DE90>,
                              554)],
             '$const6.1': [(<numba.core.ir.Assign object at 0x00000221B6ABEA10>,
                            0)],
             '$const602.6': [(<numba.core.ir.Assign object at 0x00000221B6A7E390>,
                              566)],
             '$const658.18': [(<numba.core.ir.Assign object at 0x00000221B6A788D0>,
                               566)],
             '$const70.13': [(<numba.core.ir.Assign object at 0x00000221B6ABDFD0>,
                              0)],
             '$const788.1': [(<numba.core.ir.Assign object at 0x00000221B6A78110>,
                              786)],
             '$const802.2': [(<numba.core.ir.Assign object at 0x00000221B6A78550>,
                              798)],
             '$const828.8': [(<numba.core.ir.Assign object at 0x00000221B6A6CA50>,
                              798)],
             '$const848.0': [(<numba.core.ir.Assign object at 0x00000221B6A6D410>,
                              848)],
             '$const852.0': [(<numba.core.ir.Assign object at 0x00000221B6A6D890>,
                              852)],
             'avgn': [(<numba.core.ir.Assign object at 0x00000221B6A7BB50>,
                       566)],
             'bool310': [(<numba.core.ir.Assign object at 0x00000221B6AC56D0>,
                          0)],
             'bool360': [(<numba.core.ir.Assign object at 0x00000221B6AC41D0>,
                          328)],
             'bool552': [(<numba.core.ir.Assign object at 0x00000221B6A7E010>,
                          362)],
             'bool784': [(<numba.core.ir.Assign object at 0x00000221B6A7B1D0>,
                          566)],
             'bool846': [(<numba.core.ir.Assign object at 0x00000221B6A6D0D0>,
                          798)],
             'delta': [(<numba.core.ir.Assign object at 0x00000221B68D05D0>,
                        0)],
             'maxn': [(<numba.core.ir.Assign object at 0x00000221B6A7C210>,
                       362)],
             'n': [(<numba.core.ir.Assign object at 0x00000221B6AC7250>, 312),
                   (<numba.core.ir.Assign object at 0x00000221B6AC5310>, 324),
                   (<numba.core.ir.Assign object at 0x00000221B6A7E310>, 554),
                   (<numba.core.ir.Assign object at 0x00000221B6A78E90>, 786),
                   (<numba.core.ir.Assign object at 0x00000221B6A6C410>, 798)],
             'peaks': [(<numba.core.ir.Assign object at 0x00000221B699FC10>,
                        0)],
             'post_avg': [(<numba.core.ir.Assign object at 0x00000221B6A1CD90>,
                           0)],
             'post_max': [(<numba.core.ir.Assign object at 0x00000221B6000ED0>,
                           0)],
             'pre_avg': [(<numba.core.ir.Assign object at 0x00000221B5E33C50>,
                          0)],
             'pre_max': [(<numba.core.ir.Assign object at 0x00000221B69B1C50>,
                          0)],
             'wait': [(<numba.core.ir.Assign object at 0x00000221B699FD90>, 0)],
             'x': [(<numba.core.ir.Assign object at 0x00000221B69E0510>, 0)]})
2024-07-15 06:11:45,036 DEBUG:SSA violators <numba.core.utils.OrderedSet object at 0x00000221B7D45C90>
2024-07-15 06:11:45,036 DEBUG:Fix SSA violator on var n
2024-07-15 06:11:45,036 DEBUG:==== SSA block rewrite pass on 0
2024-07-15 06:11:45,036 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B69B6650>
2024-07-15 06:11:45,036 DEBUG:on stmt: x = arg(0, name=x)
2024-07-15 06:11:45,036 DEBUG:on stmt: pre_max = arg(1, name=pre_max)
2024-07-15 06:11:45,036 DEBUG:on stmt: post_max = arg(2, name=post_max)
2024-07-15 06:11:45,036 DEBUG:on stmt: pre_avg = arg(3, name=pre_avg)
2024-07-15 06:11:45,037 DEBUG:on stmt: post_avg = arg(4, name=post_avg)
2024-07-15 06:11:45,037 DEBUG:on stmt: delta = arg(5, name=delta)
2024-07-15 06:11:45,037 DEBUG:on stmt: wait = arg(6, name=wait)
2024-07-15 06:11:45,037 DEBUG:on stmt: peaks = arg(7, name=peaks)
2024-07-15 06:11:45,037 DEBUG:on stmt: $const6.1 = const(int, 0)
2024-07-15 06:11:45,037 DEBUG:on stmt: $8binary_subscr.2 = static_getitem(value=x, index=0, index_var=$const6.1, fn=<built-in function getitem>)
2024-07-15 06:11:45,037 DEBUG:on stmt: $18load_global.3 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:45,037 DEBUG:on stmt: $30load_attr.5 = getattr(value=$18load_global.3, attr=max)
2024-07-15 06:11:45,037 DEBUG:on stmt: $const42.7 = const(NoneType, None)
2024-07-15 06:11:45,037 DEBUG:on stmt: $44load_global.8 = global(min: <built-in function min>)
2024-07-15 06:11:45,037 DEBUG:on stmt: $60load_attr.12 = getattr(value=x, attr=shape)
2024-07-15 06:11:45,037 DEBUG:on stmt: $const70.13 = const(int, 0)
2024-07-15 06:11:45,037 DEBUG:on stmt: $72binary_subscr.14 = static_getitem(value=$60load_attr.12, index=0, index_var=$const70.13, fn=<built-in function getitem>)
2024-07-15 06:11:45,037 DEBUG:on stmt: $86call.15 = call $44load_global.8(post_max, $72binary_subscr.14, func=$44load_global.8, args=[Var(post_max, utils.py:1209), Var($72binary_subscr.14, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:45,037 DEBUG:on stmt: $96build_slice.16 = global(slice: <class 'slice'>)
2024-07-15 06:11:45,038 DEBUG:on stmt: $96build_slice.17 = call $96build_slice.16($const42.7, $86call.15, func=$96build_slice.16, args=(Var($const42.7, utils.py:1221), Var($86call.15, utils.py:1221)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:45,038 DEBUG:on stmt: $98binary_subscr.18 = getitem(value=x, index=$96build_slice.17, fn=<built-in function getitem>)
2024-07-15 06:11:45,038 DEBUG:on stmt: $112call.19 = call $30load_attr.5($98binary_subscr.18, func=$30load_attr.5, args=[Var($98binary_subscr.18, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:45,038 DEBUG:on stmt: $122compare_op.20 = $8binary_subscr.2 >= $112call.19
2024-07-15 06:11:45,038 DEBUG:on stmt: $const130.22 = const(int, 0)
2024-07-15 06:11:45,038 DEBUG:on stmt: peaks[0] = $122compare_op.20
2024-07-15 06:11:45,038 DEBUG:on stmt: $const138.24 = const(int, 0)
2024-07-15 06:11:45,038 DEBUG:on stmt: $144binary_subscr.25 = static_getitem(value=peaks, index=0, index_var=$const138.24, fn=<built-in function getitem>)
2024-07-15 06:11:45,039 DEBUG:on stmt: $const156.27 = const(int, 0)
2024-07-15 06:11:45,039 DEBUG:on stmt: $158binary_subscr.28 = static_getitem(value=x, index=0, index_var=$const156.27, fn=<built-in function getitem>)
2024-07-15 06:11:45,039 DEBUG:on stmt: $168load_global.29 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:45,039 DEBUG:on stmt: $180load_attr.31 = getattr(value=$168load_global.29, attr=mean)
2024-07-15 06:11:45,039 DEBUG:on stmt: $const192.33 = const(NoneType, None)
2024-07-15 06:11:45,039 DEBUG:on stmt: $194load_global.34 = global(min: <built-in function min>)
2024-07-15 06:11:45,039 DEBUG:on stmt: $210load_attr.38 = getattr(value=x, attr=shape)
2024-07-15 06:11:45,039 DEBUG:on stmt: $const220.39 = const(int, 0)
2024-07-15 06:11:45,039 DEBUG:on stmt: $222binary_subscr.40 = static_getitem(value=$210load_attr.38, index=0, index_var=$const220.39, fn=<built-in function getitem>)
2024-07-15 06:11:45,039 DEBUG:on stmt: $236call.41 = call $194load_global.34(post_avg, $222binary_subscr.40, func=$194load_global.34, args=[Var(post_avg, utils.py:1209), Var($222binary_subscr.40, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:45,039 DEBUG:on stmt: $246build_slice.42 = global(slice: <class 'slice'>)
2024-07-15 06:11:45,040 DEBUG:on stmt: $246build_slice.43 = call $246build_slice.42($const192.33, $236call.41, func=$246build_slice.42, args=(Var($const192.33, utils.py:1222), Var($236call.41, utils.py:1222)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:45,040 DEBUG:on stmt: $248binary_subscr.44 = getitem(value=x, index=$246build_slice.43, fn=<built-in function getitem>)
2024-07-15 06:11:45,040 DEBUG:on stmt: $262call.45 = call $180load_attr.31($248binary_subscr.44, func=$180load_attr.31, args=[Var($248binary_subscr.44, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:45,040 DEBUG:on stmt: $binop_add274.47 = $262call.45 + delta
2024-07-15 06:11:45,040 DEBUG:on stmt: $278compare_op.48 = $158binary_subscr.28 >= $binop_add274.47
2024-07-15 06:11:45,040 DEBUG:on stmt: $binop_iand284.49 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$144binary_subscr.25, rhs=$278compare_op.48, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:45,040 DEBUG:on stmt: peaks[0] = $binop_iand284.49
2024-07-15 06:11:45,040 DEBUG:on stmt: $const298.51 = const(int, 0)
2024-07-15 06:11:45,040 DEBUG:on stmt: $300binary_subscr.52 = static_getitem(value=peaks, index=0, index_var=$const298.51, fn=<built-in function getitem>)
2024-07-15 06:11:45,040 DEBUG:on stmt: bool310 = global(bool: <class 'bool'>)
2024-07-15 06:11:45,040 DEBUG:on stmt: $310pred = call bool310($300binary_subscr.52, func=bool310, args=(Var($300binary_subscr.52, utils.py:1224),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:45,040 DEBUG:on stmt: branch $310pred, 312, 324
2024-07-15 06:11:45,041 DEBUG:==== SSA block rewrite pass on 312
2024-07-15 06:11:45,041 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B69B6650>
2024-07-15 06:11:45,041 DEBUG:on stmt: $const314.1 = const(int, 1)
2024-07-15 06:11:45,041 DEBUG:on stmt: n = wait + $const314.1
2024-07-15 06:11:45,041 DEBUG:first assign: n
2024-07-15 06:11:45,041 DEBUG:replaced with: n = wait + $const314.1
2024-07-15 06:11:45,041 DEBUG:on stmt: jump 328
2024-07-15 06:11:45,041 DEBUG:==== SSA block rewrite pass on 324
2024-07-15 06:11:45,041 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B69B6650>
2024-07-15 06:11:45,041 DEBUG:on stmt: n = const(int, 1)
2024-07-15 06:11:45,041 DEBUG:replaced with: n.1 = const(int, 1)
2024-07-15 06:11:45,041 DEBUG:on stmt: jump 328
2024-07-15 06:11:45,041 DEBUG:==== SSA block rewrite pass on 328
2024-07-15 06:11:45,041 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B69B6650>
2024-07-15 06:11:45,041 DEBUG:on stmt: $332load_attr.2 = getattr(value=x, attr=shape)
2024-07-15 06:11:45,041 DEBUG:on stmt: $const342.3 = const(int, 0)
2024-07-15 06:11:45,041 DEBUG:on stmt: $344binary_subscr.4 = static_getitem(value=$332load_attr.2, index=0, index_var=$const342.3, fn=<built-in function getitem>)
2024-07-15 06:11:45,041 DEBUG:on stmt: $354compare_op.5 = n < $344binary_subscr.4
2024-07-15 06:11:45,041 DEBUG:on stmt: bool360 = global(bool: <class 'bool'>)
2024-07-15 06:11:45,041 DEBUG:on stmt: $360pred = call bool360($354compare_op.5, func=bool360, args=(Var($354compare_op.5, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:45,041 DEBUG:on stmt: branch $360pred, 362, 852
2024-07-15 06:11:45,041 DEBUG:==== SSA block rewrite pass on 362
2024-07-15 06:11:45,041 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B69B6650>
2024-07-15 06:11:45,041 DEBUG:on stmt: $362load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:45,042 DEBUG:on stmt: $374load_attr.2 = getattr(value=$362load_global.0, attr=max)
2024-07-15 06:11:45,042 DEBUG:on stmt: $386load_global.4 = global(max: <built-in function max>)
2024-07-15 06:11:45,042 DEBUG:on stmt: $const398.6 = const(int, 0)
2024-07-15 06:11:45,042 DEBUG:on stmt: $binop_sub404.9 = n - pre_max
2024-07-15 06:11:45,042 DEBUG:on stmt: $412call.10 = call $386load_global.4($const398.6, $binop_sub404.9, func=$386load_global.4, args=[Var($const398.6, utils.py:1230), Var($binop_sub404.9, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:45,042 DEBUG:on stmt: $422load_global.11 = global(min: <built-in function min>)
2024-07-15 06:11:45,042 DEBUG:on stmt: $binop_add438.15 = n + post_max
2024-07-15 06:11:45,043 DEBUG:on stmt: $444load_attr.17 = getattr(value=x, attr=shape)
2024-07-15 06:11:45,043 DEBUG:on stmt: $const454.18 = const(int, 0)
2024-07-15 06:11:45,043 DEBUG:on stmt: $456binary_subscr.19 = static_getitem(value=$444load_attr.17, index=0, index_var=$const454.18, fn=<built-in function getitem>)
2024-07-15 06:11:45,043 DEBUG:on stmt: $470call.20 = call $422load_global.11($binop_add438.15, $456binary_subscr.19, func=$422load_global.11, args=[Var($binop_add438.15, utils.py:1230), Var($456binary_subscr.19, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:45,043 DEBUG:on stmt: $480build_slice.21 = global(slice: <class 'slice'>)
2024-07-15 06:11:45,043 DEBUG:on stmt: $480build_slice.22 = call $480build_slice.21($412call.10, $470call.20, func=$480build_slice.21, args=(Var($412call.10, utils.py:1230), Var($470call.20, utils.py:1230)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:45,044 DEBUG:on stmt: $482binary_subscr.23 = getitem(value=x, index=$480build_slice.22, fn=<built-in function getitem>)
2024-07-15 06:11:45,044 DEBUG:on stmt: maxn = call $374load_attr.2($482binary_subscr.23, func=$374load_attr.2, args=[Var($482binary_subscr.23, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:45,044 DEBUG:on stmt: $512binary_subscr.27 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-07-15 06:11:45,044 DEBUG:on stmt: $524compare_op.29 = $512binary_subscr.27 == maxn
2024-07-15 06:11:45,044 DEBUG:on stmt: peaks[n] = $524compare_op.29
2024-07-15 06:11:45,044 DEBUG:on stmt: $542binary_subscr.34 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-07-15 06:11:45,044 DEBUG:on stmt: bool552 = global(bool: <class 'bool'>)
2024-07-15 06:11:45,044 DEBUG:on stmt: $552pred = call bool552($542binary_subscr.34, func=bool552, args=(Var($542binary_subscr.34, utils.py:1235),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:45,045 DEBUG:on stmt: branch $552pred, 566, 554
2024-07-15 06:11:45,045 DEBUG:==== SSA block rewrite pass on 554
2024-07-15 06:11:45,045 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B69B6650>
2024-07-15 06:11:45,046 DEBUG:on stmt: $const556.1 = const(int, 1)
2024-07-15 06:11:45,046 DEBUG:on stmt: $binop_iadd558.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const556.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:45,046 DEBUG:on stmt: n = $binop_iadd558.2
2024-07-15 06:11:45,046 DEBUG:replaced with: n.2 = $binop_iadd558.2
2024-07-15 06:11:45,046 DEBUG:on stmt: jump 853
2024-07-15 06:11:45,046 DEBUG:==== SSA block rewrite pass on 566
2024-07-15 06:11:45,046 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B69B6650>
2024-07-15 06:11:45,046 DEBUG:on stmt: $566load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:45,046 DEBUG:on stmt: $578load_attr.2 = getattr(value=$566load_global.0, attr=mean)
2024-07-15 06:11:45,046 DEBUG:on stmt: $590load_global.4 = global(max: <built-in function max>)
2024-07-15 06:11:45,046 DEBUG:on stmt: $const602.6 = const(int, 0)
2024-07-15 06:11:45,046 DEBUG:on stmt: $binop_sub608.9 = n - pre_avg
2024-07-15 06:11:45,046 DEBUG:on stmt: $616call.10 = call $590load_global.4($const602.6, $binop_sub608.9, func=$590load_global.4, args=[Var($const602.6, utils.py:1239), Var($binop_sub608.9, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:45,046 DEBUG:on stmt: $626load_global.11 = global(min: <built-in function min>)
2024-07-15 06:11:45,046 DEBUG:on stmt: $binop_add642.15 = n + post_avg
2024-07-15 06:11:45,046 DEBUG:on stmt: $648load_attr.17 = getattr(value=x, attr=shape)
2024-07-15 06:11:45,046 DEBUG:on stmt: $const658.18 = const(int, 0)
2024-07-15 06:11:45,046 DEBUG:on stmt: $660binary_subscr.19 = static_getitem(value=$648load_attr.17, index=0, index_var=$const658.18, fn=<built-in function getitem>)
2024-07-15 06:11:45,047 DEBUG:on stmt: $674call.20 = call $626load_global.11($binop_add642.15, $660binary_subscr.19, func=$626load_global.11, args=[Var($binop_add642.15, utils.py:1239), Var($660binary_subscr.19, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:45,047 DEBUG:on stmt: $684build_slice.21 = global(slice: <class 'slice'>)
2024-07-15 06:11:45,047 DEBUG:on stmt: $684build_slice.22 = call $684build_slice.21($616call.10, $674call.20, func=$684build_slice.21, args=(Var($616call.10, utils.py:1239), Var($674call.20, utils.py:1239)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:45,047 DEBUG:on stmt: $686binary_subscr.23 = getitem(value=x, index=$684build_slice.22, fn=<built-in function getitem>)
2024-07-15 06:11:45,047 DEBUG:on stmt: avgn = call $578load_attr.2($686binary_subscr.23, func=$578load_attr.2, args=[Var($686binary_subscr.23, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:45,047 DEBUG:on stmt: $720binary_subscr.27 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-07-15 06:11:45,047 DEBUG:on stmt: $734binary_subscr.30 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-07-15 06:11:45,047 DEBUG:on stmt: $binop_add748.33 = avgn + delta
2024-07-15 06:11:45,063 DEBUG:on stmt: $752compare_op.34 = $734binary_subscr.30 >= $binop_add748.33
2024-07-15 06:11:45,063 DEBUG:on stmt: $binop_iand758.35 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$720binary_subscr.27, rhs=$752compare_op.34, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:45,063 DEBUG:on stmt: peaks[n] = $binop_iand758.35
2024-07-15 06:11:45,063 DEBUG:on stmt: $774binary_subscr.38 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-07-15 06:11:45,064 DEBUG:on stmt: bool784 = global(bool: <class 'bool'>)
2024-07-15 06:11:45,064 DEBUG:on stmt: $784pred = call bool784($774binary_subscr.38, func=bool784, args=(Var($774binary_subscr.38, utils.py:1242),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:45,064 DEBUG:on stmt: branch $784pred, 798, 786
2024-07-15 06:11:45,064 DEBUG:==== SSA block rewrite pass on 786
2024-07-15 06:11:45,064 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B69B6650>
2024-07-15 06:11:45,064 DEBUG:on stmt: $const788.1 = const(int, 1)
2024-07-15 06:11:45,064 DEBUG:on stmt: $binop_iadd790.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const788.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:45,064 DEBUG:on stmt: n = $binop_iadd790.2
2024-07-15 06:11:45,064 DEBUG:replaced with: n.3 = $binop_iadd790.2
2024-07-15 06:11:45,064 DEBUG:on stmt: jump 853
2024-07-15 06:11:45,064 DEBUG:==== SSA block rewrite pass on 798
2024-07-15 06:11:45,064 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B69B6650>
2024-07-15 06:11:45,064 DEBUG:on stmt: $const802.2 = const(int, 1)
2024-07-15 06:11:45,064 DEBUG:on stmt: $binop_add804.3 = wait + $const802.2
2024-07-15 06:11:45,064 DEBUG:on stmt: $binop_iadd808.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$binop_add804.3, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:45,064 DEBUG:on stmt: n = $binop_iadd808.4
2024-07-15 06:11:45,064 DEBUG:replaced with: n.4 = $binop_iadd808.4
2024-07-15 06:11:45,064 DEBUG:on stmt: $818load_attr.7 = getattr(value=x, attr=shape)
2024-07-15 06:11:45,064 DEBUG:on stmt: $const828.8 = const(int, 0)
2024-07-15 06:11:45,064 DEBUG:on stmt: $830binary_subscr.9 = static_getitem(value=$818load_attr.7, index=0, index_var=$const828.8, fn=<built-in function getitem>)
2024-07-15 06:11:45,064 DEBUG:on stmt: $840compare_op.10 = n < $830binary_subscr.9
2024-07-15 06:11:45,064 DEBUG:on stmt: bool846 = global(bool: <class 'bool'>)
2024-07-15 06:11:45,064 DEBUG:on stmt: $846pred = call bool846($840compare_op.10, func=bool846, args=(Var($840compare_op.10, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:45,064 DEBUG:on stmt: branch $846pred, 362, 848
2024-07-15 06:11:45,064 DEBUG:==== SSA block rewrite pass on 848
2024-07-15 06:11:45,064 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B69B6650>
2024-07-15 06:11:45,064 DEBUG:on stmt: $const848.0 = const(NoneType, None)
2024-07-15 06:11:45,064 DEBUG:on stmt: $850return_value.1 = cast(value=$const848.0)
2024-07-15 06:11:45,064 DEBUG:on stmt: return $850return_value.1
2024-07-15 06:11:45,064 DEBUG:==== SSA block rewrite pass on 852
2024-07-15 06:11:45,065 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B69B6650>
2024-07-15 06:11:45,065 DEBUG:on stmt: $const852.0 = const(NoneType, None)
2024-07-15 06:11:45,065 DEBUG:on stmt: $854return_value.1 = cast(value=$const852.0)
2024-07-15 06:11:45,065 DEBUG:on stmt: return $854return_value.1
2024-07-15 06:11:45,065 DEBUG:==== SSA block rewrite pass on 853
2024-07-15 06:11:45,065 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B69B6650>
2024-07-15 06:11:45,065 DEBUG:on stmt: jump 328
2024-07-15 06:11:45,065 DEBUG:Replaced assignments: defaultdict(<class 'list'>,
            {312: [<numba.core.ir.Assign object at 0x00000221B59CD6D0>],
             324: [<numba.core.ir.Assign object at 0x00000221B5D472D0>],
             554: [<numba.core.ir.Assign object at 0x00000221B6954710>],
             786: [<numba.core.ir.Assign object at 0x00000221B5E81610>],
             798: [<numba.core.ir.Assign object at 0x00000221B5E2C0D0>]})
2024-07-15 06:11:45,065 DEBUG:==== SSA block rewrite pass on 0
2024-07-15 06:11:45,065 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B592BE50>
2024-07-15 06:11:45,065 DEBUG:on stmt: x = arg(0, name=x)
2024-07-15 06:11:45,065 DEBUG:on stmt: pre_max = arg(1, name=pre_max)
2024-07-15 06:11:45,065 DEBUG:on stmt: post_max = arg(2, name=post_max)
2024-07-15 06:11:45,065 DEBUG:on stmt: pre_avg = arg(3, name=pre_avg)
2024-07-15 06:11:45,065 DEBUG:on stmt: post_avg = arg(4, name=post_avg)
2024-07-15 06:11:45,065 DEBUG:on stmt: delta = arg(5, name=delta)
2024-07-15 06:11:45,065 DEBUG:on stmt: wait = arg(6, name=wait)
2024-07-15 06:11:45,065 DEBUG:on stmt: peaks = arg(7, name=peaks)
2024-07-15 06:11:45,065 DEBUG:on stmt: $const6.1 = const(int, 0)
2024-07-15 06:11:45,065 DEBUG:on stmt: $8binary_subscr.2 = static_getitem(value=x, index=0, index_var=$const6.1, fn=<built-in function getitem>)
2024-07-15 06:11:45,065 DEBUG:on stmt: $18load_global.3 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:45,065 DEBUG:on stmt: $30load_attr.5 = getattr(value=$18load_global.3, attr=max)
2024-07-15 06:11:45,065 DEBUG:on stmt: $const42.7 = const(NoneType, None)
2024-07-15 06:11:45,065 DEBUG:on stmt: $44load_global.8 = global(min: <built-in function min>)
2024-07-15 06:11:45,065 DEBUG:on stmt: $60load_attr.12 = getattr(value=x, attr=shape)
2024-07-15 06:11:45,065 DEBUG:on stmt: $const70.13 = const(int, 0)
2024-07-15 06:11:45,065 DEBUG:on stmt: $72binary_subscr.14 = static_getitem(value=$60load_attr.12, index=0, index_var=$const70.13, fn=<built-in function getitem>)
2024-07-15 06:11:45,066 DEBUG:on stmt: $86call.15 = call $44load_global.8(post_max, $72binary_subscr.14, func=$44load_global.8, args=[Var(post_max, utils.py:1209), Var($72binary_subscr.14, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:45,066 DEBUG:on stmt: $96build_slice.16 = global(slice: <class 'slice'>)
2024-07-15 06:11:45,066 DEBUG:on stmt: $96build_slice.17 = call $96build_slice.16($const42.7, $86call.15, func=$96build_slice.16, args=(Var($const42.7, utils.py:1221), Var($86call.15, utils.py:1221)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:45,066 DEBUG:on stmt: $98binary_subscr.18 = getitem(value=x, index=$96build_slice.17, fn=<built-in function getitem>)
2024-07-15 06:11:45,066 DEBUG:on stmt: $112call.19 = call $30load_attr.5($98binary_subscr.18, func=$30load_attr.5, args=[Var($98binary_subscr.18, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:45,066 DEBUG:on stmt: $122compare_op.20 = $8binary_subscr.2 >= $112call.19
2024-07-15 06:11:45,066 DEBUG:on stmt: $const130.22 = const(int, 0)
2024-07-15 06:11:45,066 DEBUG:on stmt: peaks[0] = $122compare_op.20
2024-07-15 06:11:45,066 DEBUG:on stmt: $const138.24 = const(int, 0)
2024-07-15 06:11:45,067 DEBUG:on stmt: $144binary_subscr.25 = static_getitem(value=peaks, index=0, index_var=$const138.24, fn=<built-in function getitem>)
2024-07-15 06:11:45,067 DEBUG:on stmt: $const156.27 = const(int, 0)
2024-07-15 06:11:45,067 DEBUG:on stmt: $158binary_subscr.28 = static_getitem(value=x, index=0, index_var=$const156.27, fn=<built-in function getitem>)
2024-07-15 06:11:45,067 DEBUG:on stmt: $168load_global.29 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:45,067 DEBUG:on stmt: $180load_attr.31 = getattr(value=$168load_global.29, attr=mean)
2024-07-15 06:11:45,067 DEBUG:on stmt: $const192.33 = const(NoneType, None)
2024-07-15 06:11:45,067 DEBUG:on stmt: $194load_global.34 = global(min: <built-in function min>)
2024-07-15 06:11:45,067 DEBUG:on stmt: $210load_attr.38 = getattr(value=x, attr=shape)
2024-07-15 06:11:45,067 DEBUG:on stmt: $const220.39 = const(int, 0)
2024-07-15 06:11:45,067 DEBUG:on stmt: $222binary_subscr.40 = static_getitem(value=$210load_attr.38, index=0, index_var=$const220.39, fn=<built-in function getitem>)
2024-07-15 06:11:45,067 DEBUG:on stmt: $236call.41 = call $194load_global.34(post_avg, $222binary_subscr.40, func=$194load_global.34, args=[Var(post_avg, utils.py:1209), Var($222binary_subscr.40, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:45,067 DEBUG:on stmt: $246build_slice.42 = global(slice: <class 'slice'>)
2024-07-15 06:11:45,067 DEBUG:on stmt: $246build_slice.43 = call $246build_slice.42($const192.33, $236call.41, func=$246build_slice.42, args=(Var($const192.33, utils.py:1222), Var($236call.41, utils.py:1222)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:45,067 DEBUG:on stmt: $248binary_subscr.44 = getitem(value=x, index=$246build_slice.43, fn=<built-in function getitem>)
2024-07-15 06:11:45,067 DEBUG:on stmt: $262call.45 = call $180load_attr.31($248binary_subscr.44, func=$180load_attr.31, args=[Var($248binary_subscr.44, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:45,067 DEBUG:on stmt: $binop_add274.47 = $262call.45 + delta
2024-07-15 06:11:45,067 DEBUG:on stmt: $278compare_op.48 = $158binary_subscr.28 >= $binop_add274.47
2024-07-15 06:11:45,067 DEBUG:on stmt: $binop_iand284.49 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$144binary_subscr.25, rhs=$278compare_op.48, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:45,067 DEBUG:on stmt: peaks[0] = $binop_iand284.49
2024-07-15 06:11:45,067 DEBUG:on stmt: $const298.51 = const(int, 0)
2024-07-15 06:11:45,067 DEBUG:on stmt: $300binary_subscr.52 = static_getitem(value=peaks, index=0, index_var=$const298.51, fn=<built-in function getitem>)
2024-07-15 06:11:45,067 DEBUG:on stmt: bool310 = global(bool: <class 'bool'>)
2024-07-15 06:11:45,067 DEBUG:on stmt: $310pred = call bool310($300binary_subscr.52, func=bool310, args=(Var($300binary_subscr.52, utils.py:1224),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:45,067 DEBUG:on stmt: branch $310pred, 312, 324
2024-07-15 06:11:45,067 DEBUG:==== SSA block rewrite pass on 312
2024-07-15 06:11:45,067 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B592BE50>
2024-07-15 06:11:45,067 DEBUG:on stmt: $const314.1 = const(int, 1)
2024-07-15 06:11:45,067 DEBUG:on stmt: n = wait + $const314.1
2024-07-15 06:11:45,067 DEBUG:on stmt: jump 328
2024-07-15 06:11:45,067 DEBUG:==== SSA block rewrite pass on 324
2024-07-15 06:11:45,067 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B592BE50>
2024-07-15 06:11:45,067 DEBUG:on stmt: n.1 = const(int, 1)
2024-07-15 06:11:45,067 DEBUG:on stmt: jump 328
2024-07-15 06:11:45,067 DEBUG:==== SSA block rewrite pass on 328
2024-07-15 06:11:45,067 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B592BE50>
2024-07-15 06:11:45,067 DEBUG:on stmt: $332load_attr.2 = getattr(value=x, attr=shape)
2024-07-15 06:11:45,067 DEBUG:on stmt: $const342.3 = const(int, 0)
2024-07-15 06:11:45,067 DEBUG:on stmt: $344binary_subscr.4 = static_getitem(value=$332load_attr.2, index=0, index_var=$const342.3, fn=<built-in function getitem>)
2024-07-15 06:11:45,067 DEBUG:on stmt: $354compare_op.5 = n < $344binary_subscr.4
2024-07-15 06:11:45,068 DEBUG:find_def var='n' stmt=$354compare_op.5 = n < $344binary_subscr.4
2024-07-15 06:11:45,068 DEBUG:find_def_from_top label 328
2024-07-15 06:11:45,068 DEBUG:insert phi node n.5 = phi(incoming_values=[], incoming_blocks=[]) at 328
2024-07-15 06:11:45,068 DEBUG:find_def_from_bottom label 312
2024-07-15 06:11:45,068 DEBUG:incoming_def n = wait + $const314.1
2024-07-15 06:11:45,068 DEBUG:find_def_from_bottom label 324
2024-07-15 06:11:45,068 DEBUG:incoming_def n.1 = const(int, 1)
2024-07-15 06:11:45,068 DEBUG:find_def_from_bottom label 853
2024-07-15 06:11:45,068 DEBUG:find_def_from_top label 853
2024-07-15 06:11:45,068 DEBUG:insert phi node n.6 = phi(incoming_values=[], incoming_blocks=[]) at 853
2024-07-15 06:11:45,068 DEBUG:find_def_from_bottom label 554
2024-07-15 06:11:45,068 DEBUG:incoming_def n.2 = $binop_iadd558.2
2024-07-15 06:11:45,068 DEBUG:find_def_from_bottom label 786
2024-07-15 06:11:45,068 DEBUG:incoming_def n.3 = $binop_iadd790.2
2024-07-15 06:11:45,068 DEBUG:incoming_def n.6 = phi(incoming_values=[Var(n.2, utils.py:1236), Var(n.3, utils.py:1243)], incoming_blocks=[554, 786])
2024-07-15 06:11:45,068 DEBUG:replaced with: $354compare_op.5 = n.5 < $344binary_subscr.4
2024-07-15 06:11:45,069 DEBUG:on stmt: bool360 = global(bool: <class 'bool'>)
2024-07-15 06:11:45,069 DEBUG:on stmt: $360pred = call bool360($354compare_op.5, func=bool360, args=(Var($354compare_op.5, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:45,069 DEBUG:on stmt: branch $360pred, 362, 852
2024-07-15 06:11:45,069 DEBUG:==== SSA block rewrite pass on 362
2024-07-15 06:11:45,069 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B592BE50>
2024-07-15 06:11:45,069 DEBUG:on stmt: $362load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:45,069 DEBUG:on stmt: $374load_attr.2 = getattr(value=$362load_global.0, attr=max)
2024-07-15 06:11:45,069 DEBUG:on stmt: $386load_global.4 = global(max: <built-in function max>)
2024-07-15 06:11:45,069 DEBUG:on stmt: $const398.6 = const(int, 0)
2024-07-15 06:11:45,069 DEBUG:on stmt: $binop_sub404.9 = n - pre_max
2024-07-15 06:11:45,069 DEBUG:find_def var='n' stmt=$binop_sub404.9 = n - pre_max
2024-07-15 06:11:45,069 DEBUG:find_def_from_top label 362
2024-07-15 06:11:45,069 DEBUG:insert phi node n.7 = phi(incoming_values=[], incoming_blocks=[]) at 362
2024-07-15 06:11:45,069 DEBUG:find_def_from_bottom label 328
2024-07-15 06:11:45,069 DEBUG:incoming_def n.5 = phi(incoming_values=[Var(n, utils.py:1225), Var(n.1, utils.py:1227), Var(n.6, utils.py:1229)], incoming_blocks=[312, 324, 853])
2024-07-15 06:11:45,069 DEBUG:find_def_from_bottom label 798
2024-07-15 06:11:45,069 DEBUG:incoming_def n.4 = $binop_iadd808.4
2024-07-15 06:11:45,069 DEBUG:replaced with: $binop_sub404.9 = n.7 - pre_max
2024-07-15 06:11:45,069 DEBUG:on stmt: $412call.10 = call $386load_global.4($const398.6, $binop_sub404.9, func=$386load_global.4, args=[Var($const398.6, utils.py:1230), Var($binop_sub404.9, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:45,069 DEBUG:on stmt: $422load_global.11 = global(min: <built-in function min>)
2024-07-15 06:11:45,069 DEBUG:on stmt: $binop_add438.15 = n + post_max
2024-07-15 06:11:45,069 DEBUG:find_def var='n' stmt=$binop_add438.15 = n + post_max
2024-07-15 06:11:45,069 DEBUG:replaced with: $binop_add438.15 = n.7 + post_max
2024-07-15 06:11:45,069 DEBUG:on stmt: $444load_attr.17 = getattr(value=x, attr=shape)
2024-07-15 06:11:45,069 DEBUG:on stmt: $const454.18 = const(int, 0)
2024-07-15 06:11:45,069 DEBUG:on stmt: $456binary_subscr.19 = static_getitem(value=$444load_attr.17, index=0, index_var=$const454.18, fn=<built-in function getitem>)
2024-07-15 06:11:45,069 DEBUG:on stmt: $470call.20 = call $422load_global.11($binop_add438.15, $456binary_subscr.19, func=$422load_global.11, args=[Var($binop_add438.15, utils.py:1230), Var($456binary_subscr.19, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:45,070 DEBUG:on stmt: $480build_slice.21 = global(slice: <class 'slice'>)
2024-07-15 06:11:45,070 DEBUG:on stmt: $480build_slice.22 = call $480build_slice.21($412call.10, $470call.20, func=$480build_slice.21, args=(Var($412call.10, utils.py:1230), Var($470call.20, utils.py:1230)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:45,070 DEBUG:on stmt: $482binary_subscr.23 = getitem(value=x, index=$480build_slice.22, fn=<built-in function getitem>)
2024-07-15 06:11:45,070 DEBUG:on stmt: maxn = call $374load_attr.2($482binary_subscr.23, func=$374load_attr.2, args=[Var($482binary_subscr.23, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:45,070 DEBUG:on stmt: $512binary_subscr.27 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-07-15 06:11:45,070 DEBUG:find_def var='n' stmt=$512binary_subscr.27 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-07-15 06:11:45,070 DEBUG:replaced with: $512binary_subscr.27 = getitem(value=x, index=n.7, fn=<built-in function getitem>)
2024-07-15 06:11:45,070 DEBUG:on stmt: $524compare_op.29 = $512binary_subscr.27 == maxn
2024-07-15 06:11:45,070 DEBUG:on stmt: peaks[n] = $524compare_op.29
2024-07-15 06:11:45,070 DEBUG:find_def var='n' stmt=peaks[n] = $524compare_op.29
2024-07-15 06:11:45,070 DEBUG:replaced with: peaks[n.7] = $524compare_op.29
2024-07-15 06:11:45,070 DEBUG:on stmt: $542binary_subscr.34 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-07-15 06:11:45,070 DEBUG:find_def var='n' stmt=$542binary_subscr.34 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-07-15 06:11:45,070 DEBUG:replaced with: $542binary_subscr.34 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)
2024-07-15 06:11:45,070 DEBUG:on stmt: bool552 = global(bool: <class 'bool'>)
2024-07-15 06:11:45,070 DEBUG:on stmt: $552pred = call bool552($542binary_subscr.34, func=bool552, args=(Var($542binary_subscr.34, utils.py:1235),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:45,070 DEBUG:on stmt: branch $552pred, 566, 554
2024-07-15 06:11:45,070 DEBUG:==== SSA block rewrite pass on 554
2024-07-15 06:11:45,070 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B592BE50>
2024-07-15 06:11:45,071 DEBUG:on stmt: $const556.1 = const(int, 1)
2024-07-15 06:11:45,071 DEBUG:on stmt: $binop_iadd558.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const556.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:45,071 DEBUG:find_def var='n' stmt=$binop_iadd558.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const556.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:45,071 DEBUG:find_def_from_top label 554
2024-07-15 06:11:45,071 DEBUG:idom 362 from label 554
2024-07-15 06:11:45,071 DEBUG:find_def_from_bottom label 362
2024-07-15 06:11:45,071 DEBUG:replaced with: $binop_iadd558.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$const556.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:45,071 DEBUG:on stmt: n.2 = $binop_iadd558.2
2024-07-15 06:11:45,071 DEBUG:on stmt: jump 853
2024-07-15 06:11:45,071 DEBUG:==== SSA block rewrite pass on 566
2024-07-15 06:11:45,071 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B592BE50>
2024-07-15 06:11:45,071 DEBUG:on stmt: $566load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:45,071 DEBUG:on stmt: $578load_attr.2 = getattr(value=$566load_global.0, attr=mean)
2024-07-15 06:11:45,071 DEBUG:on stmt: $590load_global.4 = global(max: <built-in function max>)
2024-07-15 06:11:45,071 DEBUG:on stmt: $const602.6 = const(int, 0)
2024-07-15 06:11:45,071 DEBUG:on stmt: $binop_sub608.9 = n - pre_avg
2024-07-15 06:11:45,071 DEBUG:find_def var='n' stmt=$binop_sub608.9 = n - pre_avg
2024-07-15 06:11:45,071 DEBUG:find_def_from_top label 566
2024-07-15 06:11:45,071 DEBUG:idom 362 from label 566
2024-07-15 06:11:45,071 DEBUG:find_def_from_bottom label 362
2024-07-15 06:11:45,072 DEBUG:replaced with: $binop_sub608.9 = n.7 - pre_avg
2024-07-15 06:11:45,072 DEBUG:on stmt: $616call.10 = call $590load_global.4($const602.6, $binop_sub608.9, func=$590load_global.4, args=[Var($const602.6, utils.py:1239), Var($binop_sub608.9, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:45,072 DEBUG:on stmt: $626load_global.11 = global(min: <built-in function min>)
2024-07-15 06:11:45,072 DEBUG:on stmt: $binop_add642.15 = n + post_avg
2024-07-15 06:11:45,072 DEBUG:find_def var='n' stmt=$binop_add642.15 = n + post_avg
2024-07-15 06:11:45,072 DEBUG:find_def_from_top label 566
2024-07-15 06:11:45,072 DEBUG:idom 362 from label 566
2024-07-15 06:11:45,072 DEBUG:find_def_from_bottom label 362
2024-07-15 06:11:45,072 DEBUG:replaced with: $binop_add642.15 = n.7 + post_avg
2024-07-15 06:11:45,072 DEBUG:on stmt: $648load_attr.17 = getattr(value=x, attr=shape)
2024-07-15 06:11:45,072 DEBUG:on stmt: $const658.18 = const(int, 0)
2024-07-15 06:11:45,072 DEBUG:on stmt: $660binary_subscr.19 = static_getitem(value=$648load_attr.17, index=0, index_var=$const658.18, fn=<built-in function getitem>)
2024-07-15 06:11:45,072 DEBUG:on stmt: $674call.20 = call $626load_global.11($binop_add642.15, $660binary_subscr.19, func=$626load_global.11, args=[Var($binop_add642.15, utils.py:1239), Var($660binary_subscr.19, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:45,073 DEBUG:on stmt: $684build_slice.21 = global(slice: <class 'slice'>)
2024-07-15 06:11:45,073 DEBUG:on stmt: $684build_slice.22 = call $684build_slice.21($616call.10, $674call.20, func=$684build_slice.21, args=(Var($616call.10, utils.py:1239), Var($674call.20, utils.py:1239)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:45,073 DEBUG:on stmt: $686binary_subscr.23 = getitem(value=x, index=$684build_slice.22, fn=<built-in function getitem>)
2024-07-15 06:11:45,073 DEBUG:on stmt: avgn = call $578load_attr.2($686binary_subscr.23, func=$578load_attr.2, args=[Var($686binary_subscr.23, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:45,073 DEBUG:on stmt: $720binary_subscr.27 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-07-15 06:11:45,073 DEBUG:find_def var='n' stmt=$720binary_subscr.27 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-07-15 06:11:45,073 DEBUG:find_def_from_top label 566
2024-07-15 06:11:45,073 DEBUG:idom 362 from label 566
2024-07-15 06:11:45,073 DEBUG:find_def_from_bottom label 362
2024-07-15 06:11:45,073 DEBUG:replaced with: $720binary_subscr.27 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)
2024-07-15 06:11:45,073 DEBUG:on stmt: $734binary_subscr.30 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-07-15 06:11:45,073 DEBUG:find_def var='n' stmt=$734binary_subscr.30 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-07-15 06:11:45,073 DEBUG:find_def_from_top label 566
2024-07-15 06:11:45,073 DEBUG:idom 362 from label 566
2024-07-15 06:11:45,073 DEBUG:find_def_from_bottom label 362
2024-07-15 06:11:45,073 DEBUG:replaced with: $734binary_subscr.30 = getitem(value=x, index=n.7, fn=<built-in function getitem>)
2024-07-15 06:11:45,073 DEBUG:on stmt: $binop_add748.33 = avgn + delta
2024-07-15 06:11:45,073 DEBUG:on stmt: $752compare_op.34 = $734binary_subscr.30 >= $binop_add748.33
2024-07-15 06:11:45,073 DEBUG:on stmt: $binop_iand758.35 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$720binary_subscr.27, rhs=$752compare_op.34, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:45,073 DEBUG:on stmt: peaks[n] = $binop_iand758.35
2024-07-15 06:11:45,073 DEBUG:find_def var='n' stmt=peaks[n] = $binop_iand758.35
2024-07-15 06:11:45,073 DEBUG:find_def_from_top label 566
2024-07-15 06:11:45,073 DEBUG:idom 362 from label 566
2024-07-15 06:11:45,073 DEBUG:find_def_from_bottom label 362
2024-07-15 06:11:45,073 DEBUG:replaced with: peaks[n.7] = $binop_iand758.35
2024-07-15 06:11:45,073 DEBUG:on stmt: $774binary_subscr.38 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-07-15 06:11:45,073 DEBUG:find_def var='n' stmt=$774binary_subscr.38 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-07-15 06:11:45,073 DEBUG:find_def_from_top label 566
2024-07-15 06:11:45,073 DEBUG:idom 362 from label 566
2024-07-15 06:11:45,073 DEBUG:find_def_from_bottom label 362
2024-07-15 06:11:45,074 DEBUG:replaced with: $774binary_subscr.38 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)
2024-07-15 06:11:45,074 DEBUG:on stmt: bool784 = global(bool: <class 'bool'>)
2024-07-15 06:11:45,074 DEBUG:on stmt: $784pred = call bool784($774binary_subscr.38, func=bool784, args=(Var($774binary_subscr.38, utils.py:1242),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:45,074 DEBUG:on stmt: branch $784pred, 798, 786
2024-07-15 06:11:45,074 DEBUG:==== SSA block rewrite pass on 786
2024-07-15 06:11:45,074 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B592BE50>
2024-07-15 06:11:45,074 DEBUG:on stmt: $const788.1 = const(int, 1)
2024-07-15 06:11:45,074 DEBUG:on stmt: $binop_iadd790.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const788.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:45,074 DEBUG:find_def var='n' stmt=$binop_iadd790.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const788.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:45,074 DEBUG:find_def_from_top label 786
2024-07-15 06:11:45,074 DEBUG:idom 566 from label 786
2024-07-15 06:11:45,074 DEBUG:find_def_from_bottom label 566
2024-07-15 06:11:45,074 DEBUG:find_def_from_top label 566
2024-07-15 06:11:45,074 DEBUG:idom 362 from label 566
2024-07-15 06:11:45,074 DEBUG:find_def_from_bottom label 362
2024-07-15 06:11:45,074 DEBUG:replaced with: $binop_iadd790.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$const788.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:45,074 DEBUG:on stmt: n.3 = $binop_iadd790.2
2024-07-15 06:11:45,074 DEBUG:on stmt: jump 853
2024-07-15 06:11:45,074 DEBUG:==== SSA block rewrite pass on 798
2024-07-15 06:11:45,074 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B592BE50>
2024-07-15 06:11:45,074 DEBUG:on stmt: $const802.2 = const(int, 1)
2024-07-15 06:11:45,074 DEBUG:on stmt: $binop_add804.3 = wait + $const802.2
2024-07-15 06:11:45,074 DEBUG:on stmt: $binop_iadd808.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$binop_add804.3, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:45,074 DEBUG:find_def var='n' stmt=$binop_iadd808.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$binop_add804.3, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:45,074 DEBUG:find_def_from_top label 798
2024-07-15 06:11:45,074 DEBUG:idom 566 from label 798
2024-07-15 06:11:45,074 DEBUG:find_def_from_bottom label 566
2024-07-15 06:11:45,074 DEBUG:find_def_from_top label 566
2024-07-15 06:11:45,074 DEBUG:idom 362 from label 566
2024-07-15 06:11:45,074 DEBUG:find_def_from_bottom label 362
2024-07-15 06:11:45,075 DEBUG:replaced with: $binop_iadd808.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$binop_add804.3, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:45,075 DEBUG:on stmt: n.4 = $binop_iadd808.4
2024-07-15 06:11:45,075 DEBUG:on stmt: $818load_attr.7 = getattr(value=x, attr=shape)
2024-07-15 06:11:45,075 DEBUG:on stmt: $const828.8 = const(int, 0)
2024-07-15 06:11:45,075 DEBUG:on stmt: $830binary_subscr.9 = static_getitem(value=$818load_attr.7, index=0, index_var=$const828.8, fn=<built-in function getitem>)
2024-07-15 06:11:45,075 DEBUG:on stmt: $840compare_op.10 = n < $830binary_subscr.9
2024-07-15 06:11:45,075 DEBUG:find_def var='n' stmt=$840compare_op.10 = n < $830binary_subscr.9
2024-07-15 06:11:45,075 DEBUG:replaced with: $840compare_op.10 = n.4 < $830binary_subscr.9
2024-07-15 06:11:45,075 DEBUG:on stmt: bool846 = global(bool: <class 'bool'>)
2024-07-15 06:11:45,075 DEBUG:on stmt: $846pred = call bool846($840compare_op.10, func=bool846, args=(Var($840compare_op.10, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:45,075 DEBUG:on stmt: branch $846pred, 362, 848
2024-07-15 06:11:45,075 DEBUG:==== SSA block rewrite pass on 848
2024-07-15 06:11:45,075 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B592BE50>
2024-07-15 06:11:45,075 DEBUG:on stmt: $const848.0 = const(NoneType, None)
2024-07-15 06:11:45,075 DEBUG:on stmt: $850return_value.1 = cast(value=$const848.0)
2024-07-15 06:11:45,075 DEBUG:on stmt: return $850return_value.1
2024-07-15 06:11:45,075 DEBUG:==== SSA block rewrite pass on 852
2024-07-15 06:11:45,075 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B592BE50>
2024-07-15 06:11:45,075 DEBUG:on stmt: $const852.0 = const(NoneType, None)
2024-07-15 06:11:45,075 DEBUG:on stmt: $854return_value.1 = cast(value=$const852.0)
2024-07-15 06:11:45,075 DEBUG:on stmt: return $854return_value.1
2024-07-15 06:11:45,075 DEBUG:==== SSA block rewrite pass on 853
2024-07-15 06:11:45,075 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B592BE50>
2024-07-15 06:11:45,075 DEBUG:on stmt: jump 328
2024-07-15 06:11:45,092 DEBUG:bytecode dump:
>          0	NOP(arg=None, lineno=570)
           2	COPY_FREE_VARS(arg=2, lineno=570)
           4	RESUME(arg=0, lineno=570)
           6	LOAD_FAST(arg=0, lineno=571)
           8	LOAD_ATTR(arg=0, lineno=571)
          18	LOAD_CONST(arg=1, lineno=571)
          20	COMPARE_OP(arg=2, lineno=571)
          26	POP_JUMP_FORWARD_IF_FALSE(arg=15, lineno=571)
          28	LOAD_GLOBAL(arg=3, lineno=572)
          40	LOAD_CONST(arg=2, lineno=572)
          42	PRECALL(arg=1, lineno=572)
          46	CALL(arg=1, lineno=572)
          56	RAISE_VARARGS(arg=1, lineno=572)
>         58	LOAD_GLOBAL(arg=5, lineno=575)
          70	LOAD_ATTR(arg=3, lineno=575)
          80	LOAD_FAST(arg=0, lineno=575)
          82	PRECALL(arg=1, lineno=575)
          86	CALL(arg=1, lineno=575)
          96	STORE_FAST(arg=1, lineno=575)
          98	LOAD_GLOBAL(arg=9, lineno=576)
         110	LOAD_FAST(arg=1, lineno=576)
         112	PRECALL(arg=1, lineno=576)
         116	CALL(arg=1, lineno=576)
         126	LOAD_METHOD(arg=5, lineno=576)
         148	LOAD_CONST(arg=1, lineno=576)
         150	PRECALL(arg=1, lineno=576)
         154	CALL(arg=1, lineno=576)
         164	STORE_FAST(arg=2, lineno=576)
         166	PUSH_NULL(arg=None, lineno=577)
         168	LOAD_DEREF(arg=6, lineno=577)
         170	LOAD_FAST(arg=2, lineno=577)
         172	PRECALL(arg=1, lineno=577)
         176	CALL(arg=1, lineno=577)
         186	POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=577)
         188	LOAD_FAST(arg=2, lineno=578)
         190	RETURN_VALUE(arg=None, lineno=578)
>        192	LOAD_FAST(arg=1, lineno=580)
         194	GET_ITER(arg=None, lineno=580)
>        196	FOR_ITER(arg=51, lineno=580)
         198	STORE_FAST(arg=3, lineno=580)
         200	LOAD_FAST(arg=3, lineno=581)
         202	LOAD_METHOD(arg=6, lineno=581)
         224	PRECALL(arg=0, lineno=581)
         228	CALL(arg=0, lineno=581)
         238	STORE_FAST(arg=4, lineno=581)
         240	PUSH_NULL(arg=None, lineno=582)
         242	LOAD_DEREF(arg=6, lineno=582)
         244	LOAD_FAST(arg=4, lineno=582)
         246	PRECALL(arg=1, lineno=582)
         250	CALL(arg=1, lineno=582)
         260	POP_JUMP_FORWARD_IF_FALSE(arg=4, lineno=582)
         262	LOAD_FAST(arg=4, lineno=583)
         264	SWAP(arg=2, lineno=583)
         266	POP_TOP(arg=None, lineno=583)
         268	RETURN_VALUE(arg=None, lineno=583)
>        270	PUSH_NULL(arg=None, lineno=584)
         272	LOAD_DEREF(arg=5, lineno=584)
         274	LOAD_FAST(arg=4, lineno=584)
         276	LOAD_FAST(arg=2, lineno=584)
         278	PRECALL(arg=2, lineno=584)
         282	CALL(arg=2, lineno=584)
         292	POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=584)
         294	LOAD_FAST(arg=4, lineno=585)
         296	STORE_FAST(arg=2, lineno=585)
>        298	JUMP_BACKWARD(arg=52, lineno=585)
>        300	LOAD_FAST(arg=2, lineno=586)
         302	RETURN_VALUE(arg=None, lineno=586)
2024-07-15 06:11:45,092 DEBUG:pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-15 06:11:45,092 DEBUG:stack: []
2024-07-15 06:11:45,092 DEBUG:state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-15 06:11:45,092 DEBUG:dispatch pc=0, inst=NOP(arg=None, lineno=570)
2024-07-15 06:11:45,092 DEBUG:stack []
2024-07-15 06:11:45,092 DEBUG:dispatch pc=2, inst=COPY_FREE_VARS(arg=2, lineno=570)
2024-07-15 06:11:45,092 DEBUG:stack []
2024-07-15 06:11:45,092 DEBUG:dispatch pc=4, inst=RESUME(arg=0, lineno=570)
2024-07-15 06:11:45,092 DEBUG:stack []
2024-07-15 06:11:45,092 DEBUG:dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=571)
2024-07-15 06:11:45,092 DEBUG:stack []
2024-07-15 06:11:45,092 DEBUG:dispatch pc=8, inst=LOAD_ATTR(arg=0, lineno=571)
2024-07-15 06:11:45,092 DEBUG:stack ['$a6.0']
2024-07-15 06:11:45,092 DEBUG:dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=571)
2024-07-15 06:11:45,093 DEBUG:stack ['$8load_attr.1']
2024-07-15 06:11:45,093 DEBUG:dispatch pc=20, inst=COMPARE_OP(arg=2, lineno=571)
2024-07-15 06:11:45,093 DEBUG:stack ['$8load_attr.1', '$const18.2']
2024-07-15 06:11:45,093 DEBUG:dispatch pc=26, inst=POP_JUMP_FORWARD_IF_FALSE(arg=15, lineno=571)
2024-07-15 06:11:45,093 DEBUG:stack ['$20compare_op.3']
2024-07-15 06:11:45,093 DEBUG:end state. edges=[Edge(pc=28, stack=(), blockstack=(), npush=0), Edge(pc=58, stack=(), blockstack=(), npush=0)]
2024-07-15 06:11:45,093 DEBUG:pending: deque([State(pc_initial=28 nstack_initial=0), State(pc_initial=58 nstack_initial=0)])
2024-07-15 06:11:45,093 DEBUG:stack: []
2024-07-15 06:11:45,093 DEBUG:state.pc_initial: State(pc_initial=28 nstack_initial=0)
2024-07-15 06:11:45,093 DEBUG:dispatch pc=28, inst=LOAD_GLOBAL(arg=3, lineno=572)
2024-07-15 06:11:45,093 DEBUG:stack []
2024-07-15 06:11:45,093 DEBUG:dispatch pc=40, inst=LOAD_CONST(arg=2, lineno=572)
2024-07-15 06:11:45,093 DEBUG:stack ['$null$28.1', '$28load_global.0']
2024-07-15 06:11:45,093 DEBUG:dispatch pc=42, inst=PRECALL(arg=1, lineno=572)
2024-07-15 06:11:45,093 DEBUG:stack ['$null$28.1', '$28load_global.0', '$const40.2']
2024-07-15 06:11:45,093 DEBUG:dispatch pc=46, inst=CALL(arg=1, lineno=572)
2024-07-15 06:11:45,093 DEBUG:stack ['$null$28.1', '$28load_global.0', '$const40.2']
2024-07-15 06:11:45,093 DEBUG:dispatch pc=56, inst=RAISE_VARARGS(arg=1, lineno=572)
2024-07-15 06:11:45,093 DEBUG:stack ['$46call.3']
2024-07-15 06:11:45,093 DEBUG:end state. edges=[]
2024-07-15 06:11:45,093 DEBUG:pending: deque([State(pc_initial=58 nstack_initial=0)])
2024-07-15 06:11:45,093 DEBUG:stack: []
2024-07-15 06:11:45,093 DEBUG:state.pc_initial: State(pc_initial=58 nstack_initial=0)
2024-07-15 06:11:45,093 DEBUG:dispatch pc=58, inst=LOAD_GLOBAL(arg=5, lineno=575)
2024-07-15 06:11:45,093 DEBUG:stack []
2024-07-15 06:11:45,093 DEBUG:dispatch pc=70, inst=LOAD_ATTR(arg=3, lineno=575)
2024-07-15 06:11:45,093 DEBUG:stack ['$null$58.1', '$58load_global.0']
2024-07-15 06:11:45,093 DEBUG:dispatch pc=80, inst=LOAD_FAST(arg=0, lineno=575)
2024-07-15 06:11:45,093 DEBUG:stack ['$null$58.1', '$70load_attr.2']
2024-07-15 06:11:45,093 DEBUG:dispatch pc=82, inst=PRECALL(arg=1, lineno=575)
2024-07-15 06:11:45,093 DEBUG:stack ['$null$58.1', '$70load_attr.2', '$a80.3']
2024-07-15 06:11:45,094 DEBUG:dispatch pc=86, inst=CALL(arg=1, lineno=575)
2024-07-15 06:11:45,094 DEBUG:stack ['$null$58.1', '$70load_attr.2', '$a80.3']
2024-07-15 06:11:45,094 DEBUG:dispatch pc=96, inst=STORE_FAST(arg=1, lineno=575)
2024-07-15 06:11:45,094 DEBUG:stack ['$86call.4']
2024-07-15 06:11:45,094 DEBUG:dispatch pc=98, inst=LOAD_GLOBAL(arg=9, lineno=576)
2024-07-15 06:11:45,094 DEBUG:stack []
2024-07-15 06:11:45,094 DEBUG:dispatch pc=110, inst=LOAD_FAST(arg=1, lineno=576)
2024-07-15 06:11:45,094 DEBUG:stack ['$null$98.6', '$98load_global.5']
2024-07-15 06:11:45,094 DEBUG:dispatch pc=112, inst=PRECALL(arg=1, lineno=576)
2024-07-15 06:11:45,094 DEBUG:stack ['$null$98.6', '$98load_global.5', '$it110.7']
2024-07-15 06:11:45,094 DEBUG:dispatch pc=116, inst=CALL(arg=1, lineno=576)
2024-07-15 06:11:45,094 DEBUG:stack ['$null$98.6', '$98load_global.5', '$it110.7']
2024-07-15 06:11:45,094 DEBUG:dispatch pc=126, inst=LOAD_METHOD(arg=5, lineno=576)
2024-07-15 06:11:45,094 DEBUG:stack ['$116call.8']
2024-07-15 06:11:45,094 DEBUG:dispatch pc=148, inst=LOAD_CONST(arg=1, lineno=576)
2024-07-15 06:11:45,094 DEBUG:stack ['$null$126.9', '$126load_method.10']
2024-07-15 06:11:45,094 DEBUG:dispatch pc=150, inst=PRECALL(arg=1, lineno=576)
2024-07-15 06:11:45,094 DEBUG:stack ['$null$126.9', '$126load_method.10', '$const148.11']
2024-07-15 06:11:45,094 DEBUG:dispatch pc=154, inst=CALL(arg=1, lineno=576)
2024-07-15 06:11:45,094 DEBUG:stack ['$null$126.9', '$126load_method.10', '$const148.11']
2024-07-15 06:11:45,094 DEBUG:dispatch pc=164, inst=STORE_FAST(arg=2, lineno=576)
2024-07-15 06:11:45,094 DEBUG:stack ['$154call.12']
2024-07-15 06:11:45,094 DEBUG:dispatch pc=166, inst=PUSH_NULL(arg=None, lineno=577)
2024-07-15 06:11:45,094 DEBUG:stack []
2024-07-15 06:11:45,094 DEBUG:dispatch pc=168, inst=LOAD_DEREF(arg=6, lineno=577)
2024-07-15 06:11:45,094 DEBUG:stack ['$null$166.13']
2024-07-15 06:11:45,094 DEBUG:dispatch pc=170, inst=LOAD_FAST(arg=2, lineno=577)
2024-07-15 06:11:45,094 DEBUG:stack ['$null$166.13', '$168load_deref.14']
2024-07-15 06:11:45,094 DEBUG:dispatch pc=172, inst=PRECALL(arg=1, lineno=577)
2024-07-15 06:11:45,094 DEBUG:stack ['$null$166.13', '$168load_deref.14', '$max_value170.15']
2024-07-15 06:11:45,094 DEBUG:dispatch pc=176, inst=CALL(arg=1, lineno=577)
2024-07-15 06:11:45,095 DEBUG:stack ['$null$166.13', '$168load_deref.14', '$max_value170.15']
2024-07-15 06:11:45,095 DEBUG:dispatch pc=186, inst=POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=577)
2024-07-15 06:11:45,095 DEBUG:stack ['$176call.16']
2024-07-15 06:11:45,095 DEBUG:end state. edges=[Edge(pc=188, stack=(), blockstack=(), npush=0), Edge(pc=192, stack=(), blockstack=(), npush=0)]
2024-07-15 06:11:45,095 DEBUG:pending: deque([State(pc_initial=188 nstack_initial=0), State(pc_initial=192 nstack_initial=0)])
2024-07-15 06:11:45,095 DEBUG:stack: []
2024-07-15 06:11:45,095 DEBUG:state.pc_initial: State(pc_initial=188 nstack_initial=0)
2024-07-15 06:11:45,095 DEBUG:dispatch pc=188, inst=LOAD_FAST(arg=2, lineno=578)
2024-07-15 06:11:45,095 DEBUG:stack []
2024-07-15 06:11:45,095 DEBUG:dispatch pc=190, inst=RETURN_VALUE(arg=None, lineno=578)
2024-07-15 06:11:45,095 DEBUG:stack ['$max_value188.0']
2024-07-15 06:11:45,095 DEBUG:end state. edges=[]
2024-07-15 06:11:45,095 DEBUG:pending: deque([State(pc_initial=192 nstack_initial=0)])
2024-07-15 06:11:45,095 DEBUG:stack: []
2024-07-15 06:11:45,095 DEBUG:state.pc_initial: State(pc_initial=192 nstack_initial=0)
2024-07-15 06:11:45,095 DEBUG:dispatch pc=192, inst=LOAD_FAST(arg=1, lineno=580)
2024-07-15 06:11:45,095 DEBUG:stack []
2024-07-15 06:11:45,095 DEBUG:dispatch pc=194, inst=GET_ITER(arg=None, lineno=580)
2024-07-15 06:11:45,095 DEBUG:stack ['$it192.0']
2024-07-15 06:11:45,095 DEBUG:end state. edges=[Edge(pc=196, stack=('$194get_iter.1',), blockstack=(), npush=0)]
2024-07-15 06:11:45,095 DEBUG:pending: deque([State(pc_initial=196 nstack_initial=1)])
2024-07-15 06:11:45,095 DEBUG:stack: ['$phi196.0']
2024-07-15 06:11:45,095 DEBUG:state.pc_initial: State(pc_initial=196 nstack_initial=1)
2024-07-15 06:11:45,095 DEBUG:dispatch pc=196, inst=FOR_ITER(arg=51, lineno=580)
2024-07-15 06:11:45,095 DEBUG:stack ['$phi196.0']
2024-07-15 06:11:45,095 DEBUG:end state. edges=[Edge(pc=300, stack=(), blockstack=(), npush=0), Edge(pc=198, stack=('$phi196.0', '$196for_iter.2'), blockstack=(), npush=0)]
2024-07-15 06:11:45,095 DEBUG:pending: deque([State(pc_initial=300 nstack_initial=0), State(pc_initial=198 nstack_initial=2)])
2024-07-15 06:11:45,095 DEBUG:stack: []
2024-07-15 06:11:45,095 DEBUG:state.pc_initial: State(pc_initial=300 nstack_initial=0)
2024-07-15 06:11:45,095 DEBUG:dispatch pc=300, inst=LOAD_FAST(arg=2, lineno=586)
2024-07-15 06:11:45,095 DEBUG:stack []
2024-07-15 06:11:45,095 DEBUG:dispatch pc=302, inst=RETURN_VALUE(arg=None, lineno=586)
2024-07-15 06:11:45,096 DEBUG:stack ['$max_value300.0']
2024-07-15 06:11:45,096 DEBUG:end state. edges=[]
2024-07-15 06:11:45,096 DEBUG:pending: deque([State(pc_initial=198 nstack_initial=2)])
2024-07-15 06:11:45,096 DEBUG:stack: ['$phi198.0', '$phi198.1']
2024-07-15 06:11:45,096 DEBUG:state.pc_initial: State(pc_initial=198 nstack_initial=2)
2024-07-15 06:11:45,096 DEBUG:dispatch pc=198, inst=STORE_FAST(arg=3, lineno=580)
2024-07-15 06:11:45,096 DEBUG:stack ['$phi198.0', '$phi198.1']
2024-07-15 06:11:45,096 DEBUG:dispatch pc=200, inst=LOAD_FAST(arg=3, lineno=581)
2024-07-15 06:11:45,096 DEBUG:stack ['$phi198.0']
2024-07-15 06:11:45,096 DEBUG:dispatch pc=202, inst=LOAD_METHOD(arg=6, lineno=581)
2024-07-15 06:11:45,096 DEBUG:stack ['$phi198.0', '$view200.2']
2024-07-15 06:11:45,096 DEBUG:dispatch pc=224, inst=PRECALL(arg=0, lineno=581)
2024-07-15 06:11:45,096 DEBUG:stack ['$phi198.0', '$null$202.3', '$202load_method.4']
2024-07-15 06:11:45,096 DEBUG:dispatch pc=228, inst=CALL(arg=0, lineno=581)
2024-07-15 06:11:45,096 DEBUG:stack ['$phi198.0', '$null$202.3', '$202load_method.4']
2024-07-15 06:11:45,096 DEBUG:dispatch pc=238, inst=STORE_FAST(arg=4, lineno=581)
2024-07-15 06:11:45,096 DEBUG:stack ['$phi198.0', '$228call.5']
2024-07-15 06:11:45,096 DEBUG:dispatch pc=240, inst=PUSH_NULL(arg=None, lineno=582)
2024-07-15 06:11:45,096 DEBUG:stack ['$phi198.0']
2024-07-15 06:11:45,096 DEBUG:dispatch pc=242, inst=LOAD_DEREF(arg=6, lineno=582)
2024-07-15 06:11:45,096 DEBUG:stack ['$phi198.0', '$null$240.6']
2024-07-15 06:11:45,096 DEBUG:dispatch pc=244, inst=LOAD_FAST(arg=4, lineno=582)
2024-07-15 06:11:45,096 DEBUG:stack ['$phi198.0', '$null$240.6', '$242load_deref.7']
2024-07-15 06:11:45,096 DEBUG:dispatch pc=246, inst=PRECALL(arg=1, lineno=582)
2024-07-15 06:11:45,096 DEBUG:stack ['$phi198.0', '$null$240.6', '$242load_deref.7', '$v244.8']
2024-07-15 06:11:45,096 DEBUG:dispatch pc=250, inst=CALL(arg=1, lineno=582)
2024-07-15 06:11:45,096 DEBUG:stack ['$phi198.0', '$null$240.6', '$242load_deref.7', '$v244.8']
2024-07-15 06:11:45,096 DEBUG:dispatch pc=260, inst=POP_JUMP_FORWARD_IF_FALSE(arg=4, lineno=582)
2024-07-15 06:11:45,096 DEBUG:stack ['$phi198.0', '$250call.9']
2024-07-15 06:11:45,096 DEBUG:end state. edges=[Edge(pc=262, stack=('$phi198.0',), blockstack=(), npush=0), Edge(pc=270, stack=('$phi198.0',), blockstack=(), npush=0)]
2024-07-15 06:11:45,096 DEBUG:pending: deque([State(pc_initial=262 nstack_initial=1), State(pc_initial=270 nstack_initial=1)])
2024-07-15 06:11:45,096 DEBUG:stack: ['$phi262.0']
2024-07-15 06:11:45,096 DEBUG:state.pc_initial: State(pc_initial=262 nstack_initial=1)
2024-07-15 06:11:45,096 DEBUG:dispatch pc=262, inst=LOAD_FAST(arg=4, lineno=583)
2024-07-15 06:11:45,096 DEBUG:stack ['$phi262.0']
2024-07-15 06:11:45,096 DEBUG:dispatch pc=264, inst=SWAP(arg=2, lineno=583)
2024-07-15 06:11:45,096 DEBUG:stack ['$phi262.0', '$v262.1']
2024-07-15 06:11:45,096 DEBUG:dispatch pc=266, inst=POP_TOP(arg=None, lineno=583)
2024-07-15 06:11:45,096 DEBUG:stack ['$v262.1', '$phi262.0']
2024-07-15 06:11:45,096 DEBUG:dispatch pc=268, inst=RETURN_VALUE(arg=None, lineno=583)
2024-07-15 06:11:45,097 DEBUG:stack ['$v262.1']
2024-07-15 06:11:45,097 DEBUG:end state. edges=[]
2024-07-15 06:11:45,097 DEBUG:pending: deque([State(pc_initial=270 nstack_initial=1)])
2024-07-15 06:11:45,097 DEBUG:stack: ['$phi270.0']
2024-07-15 06:11:45,097 DEBUG:state.pc_initial: State(pc_initial=270 nstack_initial=1)
2024-07-15 06:11:45,097 DEBUG:dispatch pc=270, inst=PUSH_NULL(arg=None, lineno=584)
2024-07-15 06:11:45,097 DEBUG:stack ['$phi270.0']
2024-07-15 06:11:45,097 DEBUG:dispatch pc=272, inst=LOAD_DEREF(arg=5, lineno=584)
2024-07-15 06:11:45,097 DEBUG:stack ['$phi270.0', '$null$270.1']
2024-07-15 06:11:45,097 DEBUG:dispatch pc=274, inst=LOAD_FAST(arg=4, lineno=584)
2024-07-15 06:11:45,097 DEBUG:stack ['$phi270.0', '$null$270.1', '$272load_deref.2']
2024-07-15 06:11:45,097 DEBUG:dispatch pc=276, inst=LOAD_FAST(arg=2, lineno=584)
2024-07-15 06:11:45,097 DEBUG:stack ['$phi270.0', '$null$270.1', '$272load_deref.2', '$v274.3']
2024-07-15 06:11:45,097 DEBUG:dispatch pc=278, inst=PRECALL(arg=2, lineno=584)
2024-07-15 06:11:45,097 DEBUG:stack ['$phi270.0', '$null$270.1', '$272load_deref.2', '$v274.3', '$max_value276.4']
2024-07-15 06:11:45,097 DEBUG:dispatch pc=282, inst=CALL(arg=2, lineno=584)
2024-07-15 06:11:45,097 DEBUG:stack ['$phi270.0', '$null$270.1', '$272load_deref.2', '$v274.3', '$max_value276.4']
2024-07-15 06:11:45,097 DEBUG:dispatch pc=292, inst=POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=584)
2024-07-15 06:11:45,097 DEBUG:stack ['$phi270.0', '$282call.5']
2024-07-15 06:11:45,097 DEBUG:end state. edges=[Edge(pc=294, stack=('$phi270.0',), blockstack=(), npush=0), Edge(pc=298, stack=('$phi270.0',), blockstack=(), npush=0)]
2024-07-15 06:11:45,097 DEBUG:pending: deque([State(pc_initial=294 nstack_initial=1), State(pc_initial=298 nstack_initial=1)])
2024-07-15 06:11:45,097 DEBUG:stack: ['$phi294.0']
2024-07-15 06:11:45,097 DEBUG:state.pc_initial: State(pc_initial=294 nstack_initial=1)
2024-07-15 06:11:45,097 DEBUG:dispatch pc=294, inst=LOAD_FAST(arg=4, lineno=585)
2024-07-15 06:11:45,097 DEBUG:stack ['$phi294.0']
2024-07-15 06:11:45,097 DEBUG:dispatch pc=296, inst=STORE_FAST(arg=2, lineno=585)
2024-07-15 06:11:45,097 DEBUG:stack ['$phi294.0', '$v294.1']
2024-07-15 06:11:45,097 DEBUG:end state. edges=[Edge(pc=298, stack=('$phi294.0',), blockstack=(), npush=0)]
2024-07-15 06:11:45,097 DEBUG:pending: deque([State(pc_initial=298 nstack_initial=1), State(pc_initial=298 nstack_initial=1)])
2024-07-15 06:11:45,097 DEBUG:stack: ['$phi298.0']
2024-07-15 06:11:45,097 DEBUG:state.pc_initial: State(pc_initial=298 nstack_initial=1)
2024-07-15 06:11:45,097 DEBUG:dispatch pc=298, inst=JUMP_BACKWARD(arg=52, lineno=585)
2024-07-15 06:11:45,097 DEBUG:stack ['$phi298.0']
2024-07-15 06:11:45,098 DEBUG:end state. edges=[Edge(pc=196, stack=('$phi298.0',), blockstack=(), npush=0)]
2024-07-15 06:11:45,098 DEBUG:pending: deque([State(pc_initial=298 nstack_initial=1), State(pc_initial=196 nstack_initial=1)])
2024-07-15 06:11:45,098 DEBUG:pending: deque([State(pc_initial=196 nstack_initial=1)])
2024-07-15 06:11:45,098 DEBUG:-------------------------Prune PHIs-------------------------
2024-07-15 06:11:45,098 DEBUG:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=28 nstack_initial=0): set(),
             State(pc_initial=58 nstack_initial=0): set(),
             State(pc_initial=188 nstack_initial=0): set(),
             State(pc_initial=192 nstack_initial=0): set(),
             State(pc_initial=196 nstack_initial=1): {'$phi196.0'},
             State(pc_initial=198 nstack_initial=2): {'$phi198.1'},
             State(pc_initial=262 nstack_initial=1): set(),
             State(pc_initial=270 nstack_initial=1): set(),
             State(pc_initial=294 nstack_initial=1): set(),
             State(pc_initial=298 nstack_initial=1): set(),
             State(pc_initial=300 nstack_initial=0): set()})
2024-07-15 06:11:45,098 DEBUG:defmap: {'$phi196.0': State(pc_initial=192 nstack_initial=0),
 '$phi198.1': State(pc_initial=196 nstack_initial=1)}
2024-07-15 06:11:45,098 DEBUG:phismap: defaultdict(<class 'set'>,
            {'$phi196.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0)),
                           ('$phi298.0',
                            State(pc_initial=298 nstack_initial=1))},
             '$phi198.0': {('$phi196.0',
                            State(pc_initial=196 nstack_initial=1))},
             '$phi198.1': {('$196for_iter.2',
                            State(pc_initial=196 nstack_initial=1))},
             '$phi262.0': {('$phi198.0',
                            State(pc_initial=198 nstack_initial=2))},
             '$phi270.0': {('$phi198.0',
                            State(pc_initial=198 nstack_initial=2))},
             '$phi294.0': {('$phi270.0',
                            State(pc_initial=270 nstack_initial=1))},
             '$phi298.0': {('$phi270.0',
                            State(pc_initial=270 nstack_initial=1)),
                           ('$phi294.0',
                            State(pc_initial=294 nstack_initial=1))}})
2024-07-15 06:11:45,098 DEBUG:changing phismap: defaultdict(<class 'set'>,
            {'$phi196.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0)),
                           ('$phi270.0',
                            State(pc_initial=270 nstack_initial=1)),
                           ('$phi294.0',
                            State(pc_initial=294 nstack_initial=1))},
             '$phi198.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0)),
                           ('$phi270.0',
                            State(pc_initial=270 nstack_initial=1)),
                           ('$phi294.0',
                            State(pc_initial=294 nstack_initial=1))},
             '$phi198.1': {('$196for_iter.2',
                            State(pc_initial=196 nstack_initial=1))},
             '$phi262.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0)),
                           ('$phi270.0',
                            State(pc_initial=270 nstack_initial=1)),
                           ('$phi294.0',
                            State(pc_initial=294 nstack_initial=1))},
             '$phi270.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0)),
                           ('$phi270.0',
                            State(pc_initial=270 nstack_initial=1)),
                           ('$phi294.0',
                            State(pc_initial=294 nstack_initial=1))},
             '$phi294.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0)),
                           ('$phi294.0',
                            State(pc_initial=294 nstack_initial=1))},
             '$phi298.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))}})
2024-07-15 06:11:45,099 DEBUG:changing phismap: defaultdict(<class 'set'>,
            {'$phi196.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi198.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi198.1': {('$196for_iter.2',
                            State(pc_initial=196 nstack_initial=1))},
             '$phi262.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi270.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi294.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi298.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))}})
2024-07-15 06:11:45,099 DEBUG:changing phismap: defaultdict(<class 'set'>,
            {'$phi196.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi198.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi198.1': {('$196for_iter.2',
                            State(pc_initial=196 nstack_initial=1))},
             '$phi262.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi270.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi294.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi298.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))}})
2024-07-15 06:11:45,099 DEBUG:keep phismap: {'$phi196.0': {('$194get_iter.1', State(pc_initial=192 nstack_initial=0))},
 '$phi198.1': {('$196for_iter.2', State(pc_initial=196 nstack_initial=1))}}
2024-07-15 06:11:45,099 DEBUG:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=192 nstack_initial=0): {'$phi196.0': '$194get_iter.1'},
             State(pc_initial=196 nstack_initial=1): {'$phi198.1': '$196for_iter.2'}})
2024-07-15 06:11:45,099 DEBUG:----------------------DONE Prune PHIs-----------------------
2024-07-15 06:11:45,099 DEBUG:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {}), (6, {'res': '$a6.0'}), (8, {'item': '$a6.0', 'res': '$8load_attr.1'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'res': '$const18.2'}), (20, {'lhs': '$8load_attr.1', 'rhs': '$const18.2', 'res': '$20compare_op.3'}), (22, {}), (24, {}), (26, {'pred': '$20compare_op.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={28: (), 58: ()})
2024-07-15 06:11:45,100 DEBUG:block_infos State(pc_initial=28 nstack_initial=0):
AdaptBlockInfo(insts=((28, {'idx': 1, 'res': '$28load_global.0'}), (30, {}), (32, {}), (34, {}), (36, {}), (38, {}), (40, {'res': '$const40.2'}), (42, {}), (44, {}), (46, {'func': '$28load_global.0', 'args': ['$const40.2'], 'kw_names': None, 'res': '$46call.3'}), (48, {}), (50, {}), (52, {}), (54, {}), (56, {'exc': '$46call.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-15 06:11:45,100 DEBUG:block_infos State(pc_initial=58 nstack_initial=0):
AdaptBlockInfo(insts=((58, {'idx': 2, 'res': '$58load_global.0'}), (60, {}), (62, {}), (64, {}), (66, {}), (68, {}), (70, {'item': '$58load_global.0', 'res': '$70load_attr.2'}), (72, {}), (74, {}), (76, {}), (78, {}), (80, {'res': '$a80.3'}), (82, {}), (84, {}), (86, {'func': '$70load_attr.2', 'args': ['$a80.3'], 'kw_names': None, 'res': '$86call.4'}), (88, {}), (90, {}), (92, {}), (94, {}), (96, {'value': '$86call.4'}), (98, {'idx': 4, 'res': '$98load_global.5'}), (100, {}), (102, {}), (104, {}), (106, {}), (108, {}), (110, {'res': '$it110.7'}), (112, {}), (114, {}), (116, {'func': '$98load_global.5', 'args': ['$it110.7'], 'kw_names': None, 'res': '$116call.8'}), (118, {}), (120, {}), (122, {}), (124, {}), (126, {'item': '$116call.8', 'res': '$126load_method.10'}), (128, {}), (130, {}), (132, {}), (134, {}), (136, {}), (138, {}), (140, {}), (142, {}), (144, {}), (146, {}), (148, {'res': '$const148.11'}), (150, {}), (152, {}), (154, {'func': '$126load_method.10', 'args': ['$const148.11'], 'kw_names': None, 'res': '$154call.12'}), (156, {}), (158, {}), (160, {}), (162, {}), (164, {'value': '$154call.12'}), (166, {}), (168, {'res': '$168load_deref.14'}), (170, {'res': '$max_value170.15'}), (172, {}), (174, {}), (176, {'func': '$168load_deref.14', 'args': ['$max_value170.15'], 'kw_names': None, 'res': '$176call.16'}), (178, {}), (180, {}), (182, {}), (184, {}), (186, {'pred': '$176call.16'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={188: (), 192: ()})
2024-07-15 06:11:45,100 DEBUG:block_infos State(pc_initial=188 nstack_initial=0):
AdaptBlockInfo(insts=((188, {'res': '$max_value188.0'}), (190, {'retval': '$max_value188.0', 'castval': '$190return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-15 06:11:45,100 DEBUG:block_infos State(pc_initial=192 nstack_initial=0):
AdaptBlockInfo(insts=((192, {'res': '$it192.0'}), (194, {'value': '$it192.0', 'res': '$194get_iter.1'})), outgoing_phis={'$phi196.0': '$194get_iter.1'}, blockstack=(), active_try_block=None, outgoing_edgepushed={196: ('$194get_iter.1',)})
2024-07-15 06:11:45,100 DEBUG:block_infos State(pc_initial=196 nstack_initial=1):
AdaptBlockInfo(insts=((196, {'iterator': '$phi196.0', 'pair': '$196for_iter.1', 'indval': '$196for_iter.2', 'pred': '$196for_iter.3'}),), outgoing_phis={'$phi198.1': '$196for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={300: (), 198: ('$phi196.0', '$196for_iter.2')})
2024-07-15 06:11:45,100 DEBUG:block_infos State(pc_initial=198 nstack_initial=2):
AdaptBlockInfo(insts=((198, {'value': '$phi198.1'}), (200, {'res': '$view200.2'}), (202, {'item': '$view200.2', 'res': '$202load_method.4'}), (204, {}), (206, {}), (208, {}), (210, {}), (212, {}), (214, {}), (216, {}), (218, {}), (220, {}), (222, {}), (224, {}), (226, {}), (228, {'func': '$202load_method.4', 'args': [], 'kw_names': None, 'res': '$228call.5'}), (230, {}), (232, {}), (234, {}), (236, {}), (238, {'value': '$228call.5'}), (240, {}), (242, {'res': '$242load_deref.7'}), (244, {'res': '$v244.8'}), (246, {}), (248, {}), (250, {'func': '$242load_deref.7', 'args': ['$v244.8'], 'kw_names': None, 'res': '$250call.9'}), (252, {}), (254, {}), (256, {}), (258, {}), (260, {'pred': '$250call.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={262: ('$phi198.0',), 270: ('$phi198.0',)})
2024-07-15 06:11:45,100 DEBUG:block_infos State(pc_initial=262 nstack_initial=1):
AdaptBlockInfo(insts=((262, {'res': '$v262.1'}), (268, {'retval': '$v262.1', 'castval': '$268return_value.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-15 06:11:45,100 DEBUG:block_infos State(pc_initial=270 nstack_initial=1):
AdaptBlockInfo(insts=((270, {}), (272, {'res': '$272load_deref.2'}), (274, {'res': '$v274.3'}), (276, {'res': '$max_value276.4'}), (278, {}), (280, {}), (282, {'func': '$272load_deref.2', 'args': ['$v274.3', '$max_value276.4'], 'kw_names': None, 'res': '$282call.5'}), (284, {}), (286, {}), (288, {}), (290, {}), (292, {'pred': '$282call.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={294: ('$phi270.0',), 298: ('$phi270.0',)})
2024-07-15 06:11:45,100 DEBUG:block_infos State(pc_initial=294 nstack_initial=1):
AdaptBlockInfo(insts=((294, {'res': '$v294.1'}), (296, {'value': '$v294.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={298: ('$phi294.0',)})
2024-07-15 06:11:45,100 DEBUG:block_infos State(pc_initial=298 nstack_initial=1):
AdaptBlockInfo(insts=((298, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={196: ('$phi298.0',)})
2024-07-15 06:11:45,100 DEBUG:block_infos State(pc_initial=300 nstack_initial=0):
AdaptBlockInfo(insts=((300, {'res': '$max_value300.0'}), (302, {'retval': '$max_value300.0', 'castval': '$302return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-15 06:11:45,101 DEBUG:label 0:
    a = arg(0, name=a)                       ['a']
    $8load_attr.1 = getattr(value=a, attr=size) ['$8load_attr.1', 'a']
    $const18.2 = const(int, 0)               ['$const18.2']
    $20compare_op.3 = $8load_attr.1 == $const18.2 ['$20compare_op.3', '$8load_attr.1', '$const18.2']
    bool26 = global(bool: <class 'bool'>)    ['bool26']
    $26pred = call bool26($20compare_op.3, func=bool26, args=(Var($20compare_op.3, arraymath.py:571),), kws=(), vararg=None, varkwarg=None, target=None) ['$20compare_op.3', '$26pred', 'bool26']
    branch $26pred, 28, 58                   ['$26pred']
label 28:
    $28load_global.0 = global(ValueError: <class 'ValueError'>) ['$28load_global.0']
    $const40.2 = const(str, zero-size array to reduction operation maximum which has no identity) ['$const40.2']
    $46call.3 = call $28load_global.0($const40.2, func=$28load_global.0, args=[Var($const40.2, arraymath.py:572)], kws=(), vararg=None, varkwarg=None, target=None) ['$28load_global.0', '$46call.3', '$const40.2']
    raise $46call.3                          ['$46call.3']
label 58:
    $58load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$58load_global.0']
    $70load_attr.2 = getattr(value=$58load_global.0, attr=nditer) ['$58load_global.0', '$70load_attr.2']
    it = call $70load_attr.2(a, func=$70load_attr.2, args=[Var(a, arraymath.py:570)], kws=(), vararg=None, varkwarg=None, target=None) ['$70load_attr.2', 'a', 'it']
    $98load_global.5 = global(next: <built-in function next>) ['$98load_global.5']
    $116call.8 = call $98load_global.5(it, func=$98load_global.5, args=[Var(it, arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None) ['$116call.8', '$98load_global.5', 'it']
    $126load_method.10 = getattr(value=$116call.8, attr=take) ['$116call.8', '$126load_method.10']
    $const148.11 = const(int, 0)             ['$const148.11']
    max_value = call $126load_method.10($const148.11, func=$126load_method.10, args=[Var($const148.11, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None) ['$126load_method.10', '$const148.11', 'max_value']
    $168load_deref.14 = freevar(pre_return_func: <function return_false at 0x00000221B53CACA0>) ['$168load_deref.14']
    $176call.16 = call $168load_deref.14(max_value, func=$168load_deref.14, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None) ['$168load_deref.14', '$176call.16', 'max_value']
    bool186 = global(bool: <class 'bool'>)   ['bool186']
    $186pred = call bool186($176call.16, func=bool186, args=(Var($176call.16, arraymath.py:577),), kws=(), vararg=None, varkwarg=None, target=None) ['$176call.16', '$186pred', 'bool186']
    branch $186pred, 188, 192                ['$186pred']
label 188:
    $190return_value.1 = cast(value=max_value) ['$190return_value.1', 'max_value']
    return $190return_value.1                ['$190return_value.1']
label 192:
    $194get_iter.1 = getiter(value=it)       ['$194get_iter.1', 'it']
    $phi196.0 = $194get_iter.1               ['$194get_iter.1', '$phi196.0']
    jump 196                                 []
label 196:
    $196for_iter.1 = iternext(value=$phi196.0) ['$196for_iter.1', '$phi196.0']
    $196for_iter.2 = pair_first(value=$196for_iter.1) ['$196for_iter.1', '$196for_iter.2']
    $196for_iter.3 = pair_second(value=$196for_iter.1) ['$196for_iter.1', '$196for_iter.3']
    $phi198.1 = $196for_iter.2               ['$196for_iter.2', '$phi198.1']
    branch $196for_iter.3, 198, 300          ['$196for_iter.3']
label 198:
    view = $phi198.1                         ['$phi198.1', 'view']
    $202load_method.4 = getattr(value=view, attr=item) ['$202load_method.4', 'view']
    v = call $202load_method.4(func=$202load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$202load_method.4', 'v']
    $242load_deref.7 = freevar(pre_return_func: <function return_false at 0x00000221B53CACA0>) ['$242load_deref.7']
    $250call.9 = call $242load_deref.7(v, func=$242load_deref.7, args=[Var(v, arraymath.py:581)], kws=(), vararg=None, varkwarg=None, target=None) ['$242load_deref.7', '$250call.9', 'v']
    bool260 = global(bool: <class 'bool'>)   ['bool260']
    $260pred = call bool260($250call.9, func=bool260, args=(Var($250call.9, arraymath.py:582),), kws=(), vararg=None, varkwarg=None, target=None) ['$250call.9', '$260pred', 'bool260']
    branch $260pred, 262, 270                ['$260pred']
label 262:
    $268return_value.2 = cast(value=v)       ['$268return_value.2', 'v']
    return $268return_value.2                ['$268return_value.2']
label 270:
    $272load_deref.2 = freevar(comparator: <function max_comparator at 0x00000221B53CA3E0>) ['$272load_deref.2']
    $282call.5 = call $272load_deref.2(v, max_value, func=$272load_deref.2, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None) ['$272load_deref.2', '$282call.5', 'max_value', 'v']
    bool292 = global(bool: <class 'bool'>)   ['bool292']
    $292pred = call bool292($282call.5, func=bool292, args=(Var($282call.5, arraymath.py:584),), kws=(), vararg=None, varkwarg=None, target=None) ['$282call.5', '$292pred', 'bool292']
    branch $292pred, 294, 298                ['$292pred']
label 294:
    max_value = v                            ['max_value', 'v']
    jump 298                                 []
label 298:
    jump 196                                 []
label 300:
    $302return_value.1 = cast(value=max_value) ['$302return_value.1', 'max_value']
    return $302return_value.1                ['$302return_value.1']

2024-07-15 06:11:45,118 DEBUG:==== SSA block analysis pass on 0
2024-07-15 06:11:45,118 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5E91390>
2024-07-15 06:11:45,118 DEBUG:on stmt: a = arg(0, name=a)
2024-07-15 06:11:45,118 DEBUG:on stmt: $8load_attr.1 = getattr(value=a, attr=size)
2024-07-15 06:11:45,118 DEBUG:on stmt: $const18.2 = const(int, 0)
2024-07-15 06:11:45,118 DEBUG:on stmt: $20compare_op.3 = $8load_attr.1 == $const18.2
2024-07-15 06:11:45,118 DEBUG:on stmt: bool26 = global(bool: <class 'bool'>)
2024-07-15 06:11:45,118 DEBUG:on stmt: $26pred = call bool26($20compare_op.3, func=bool26, args=(Var($20compare_op.3, arraymath.py:571),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:45,118 DEBUG:on stmt: branch $26pred, 28, 58
2024-07-15 06:11:45,118 DEBUG:==== SSA block analysis pass on 28
2024-07-15 06:11:45,118 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5E91390>
2024-07-15 06:11:45,118 DEBUG:on stmt: $28load_global.0 = global(ValueError: <class 'ValueError'>)
2024-07-15 06:11:45,118 DEBUG:on stmt: $const40.2 = const(str, zero-size array to reduction operation maximum which has no identity)
2024-07-15 06:11:45,118 DEBUG:on stmt: $46call.3 = call $28load_global.0($const40.2, func=$28load_global.0, args=[Var($const40.2, arraymath.py:572)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:45,118 DEBUG:on stmt: <static> raise <class 'ValueError'>('zero-size array to reduction operation maximum which has no identity')
2024-07-15 06:11:45,118 DEBUG:==== SSA block analysis pass on 58
2024-07-15 06:11:45,118 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5E91390>
2024-07-15 06:11:45,118 DEBUG:on stmt: $58load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:45,118 DEBUG:on stmt: $70load_attr.2 = getattr(value=$58load_global.0, attr=nditer)
2024-07-15 06:11:45,118 DEBUG:on stmt: it = call $70load_attr.2(a, func=$70load_attr.2, args=[Var(a, arraymath.py:570)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:45,119 DEBUG:on stmt: $98load_global.5 = global(next: <built-in function next>)
2024-07-15 06:11:45,119 DEBUG:on stmt: $116call.8 = call $98load_global.5(it, func=$98load_global.5, args=[Var(it, arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:45,119 DEBUG:on stmt: $126load_method.10 = getattr(value=$116call.8, attr=take)
2024-07-15 06:11:45,119 DEBUG:on stmt: $const148.11 = const(int, 0)
2024-07-15 06:11:45,119 DEBUG:on stmt: max_value = call $126load_method.10($const148.11, func=$126load_method.10, args=[Var($const148.11, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:45,119 DEBUG:on stmt: $168load_deref.14 = freevar(pre_return_func: <function return_false at 0x00000221B53CACA0>)
2024-07-15 06:11:45,119 DEBUG:on stmt: $176call.16 = call $168load_deref.14(max_value, func=$168load_deref.14, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:45,119 DEBUG:on stmt: bool186 = global(bool: <class 'bool'>)
2024-07-15 06:11:45,119 DEBUG:on stmt: $186pred = call bool186($176call.16, func=bool186, args=(Var($176call.16, arraymath.py:577),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:45,119 DEBUG:on stmt: branch $186pred, 188, 192
2024-07-15 06:11:45,119 DEBUG:==== SSA block analysis pass on 188
2024-07-15 06:11:45,119 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5E91390>
2024-07-15 06:11:45,119 DEBUG:on stmt: $190return_value.1 = cast(value=max_value)
2024-07-15 06:11:45,119 DEBUG:on stmt: return $190return_value.1
2024-07-15 06:11:45,119 DEBUG:==== SSA block analysis pass on 192
2024-07-15 06:11:45,119 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5E91390>
2024-07-15 06:11:45,119 DEBUG:on stmt: $194get_iter.1 = getiter(value=it)
2024-07-15 06:11:45,119 DEBUG:on stmt: $phi196.0 = $194get_iter.1
2024-07-15 06:11:45,119 DEBUG:on stmt: jump 196
2024-07-15 06:11:45,119 DEBUG:==== SSA block analysis pass on 196
2024-07-15 06:11:45,119 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5E91390>
2024-07-15 06:11:45,119 DEBUG:on stmt: $196for_iter.1 = iternext(value=$phi196.0)
2024-07-15 06:11:45,119 DEBUG:on stmt: $196for_iter.2 = pair_first(value=$196for_iter.1)
2024-07-15 06:11:45,119 DEBUG:on stmt: $196for_iter.3 = pair_second(value=$196for_iter.1)
2024-07-15 06:11:45,120 DEBUG:on stmt: $phi198.1 = $196for_iter.2
2024-07-15 06:11:45,120 DEBUG:on stmt: branch $196for_iter.3, 198, 300
2024-07-15 06:11:45,120 DEBUG:==== SSA block analysis pass on 198
2024-07-15 06:11:45,120 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5E91390>
2024-07-15 06:11:45,120 DEBUG:on stmt: view = $phi198.1
2024-07-15 06:11:45,120 DEBUG:on stmt: $202load_method.4 = getattr(value=view, attr=item)
2024-07-15 06:11:45,120 DEBUG:on stmt: v = call $202load_method.4(func=$202load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:45,120 DEBUG:on stmt: $242load_deref.7 = freevar(pre_return_func: <function return_false at 0x00000221B53CACA0>)
2024-07-15 06:11:45,120 DEBUG:on stmt: $250call.9 = call $242load_deref.7(v, func=$242load_deref.7, args=[Var(v, arraymath.py:581)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:45,120 DEBUG:on stmt: bool260 = global(bool: <class 'bool'>)
2024-07-15 06:11:45,120 DEBUG:on stmt: $260pred = call bool260($250call.9, func=bool260, args=(Var($250call.9, arraymath.py:582),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:45,120 DEBUG:on stmt: branch $260pred, 262, 270
2024-07-15 06:11:45,120 DEBUG:==== SSA block analysis pass on 262
2024-07-15 06:11:45,120 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5E91390>
2024-07-15 06:11:45,120 DEBUG:on stmt: $268return_value.2 = cast(value=v)
2024-07-15 06:11:45,120 DEBUG:on stmt: return $268return_value.2
2024-07-15 06:11:45,120 DEBUG:==== SSA block analysis pass on 270
2024-07-15 06:11:45,120 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5E91390>
2024-07-15 06:11:45,120 DEBUG:on stmt: $272load_deref.2 = freevar(comparator: <function max_comparator at 0x00000221B53CA3E0>)
2024-07-15 06:11:45,120 DEBUG:on stmt: $282call.5 = call $272load_deref.2(v, max_value, func=$272load_deref.2, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:45,120 DEBUG:on stmt: bool292 = global(bool: <class 'bool'>)
2024-07-15 06:11:45,120 DEBUG:on stmt: $292pred = call bool292($282call.5, func=bool292, args=(Var($282call.5, arraymath.py:584),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:45,120 DEBUG:on stmt: branch $292pred, 294, 298
2024-07-15 06:11:45,120 DEBUG:==== SSA block analysis pass on 294
2024-07-15 06:11:45,120 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5E91390>
2024-07-15 06:11:45,120 DEBUG:on stmt: max_value = v
2024-07-15 06:11:45,120 DEBUG:on stmt: jump 298
2024-07-15 06:11:45,120 DEBUG:==== SSA block analysis pass on 298
2024-07-15 06:11:45,120 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5E91390>
2024-07-15 06:11:45,120 DEBUG:on stmt: jump 196
2024-07-15 06:11:45,120 DEBUG:==== SSA block analysis pass on 300
2024-07-15 06:11:45,120 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5E91390>
2024-07-15 06:11:45,120 DEBUG:on stmt: $302return_value.1 = cast(value=max_value)
2024-07-15 06:11:45,121 DEBUG:on stmt: return $302return_value.1
2024-07-15 06:11:45,122 DEBUG:defs defaultdict(<class 'list'>,
            {'$116call.8': [(<numba.core.ir.Assign object at 0x00000221B5E91210>,
                             58)],
             '$126load_method.10': [(<numba.core.ir.Assign object at 0x00000221B5E908D0>,
                                     58)],
             '$168load_deref.14': [(<numba.core.ir.Assign object at 0x00000221B5E90350>,
                                    58)],
             '$176call.16': [(<numba.core.ir.Assign object at 0x00000221B5E906D0>,
                              58)],
             '$186pred': [(<numba.core.ir.Assign object at 0x00000221B5E90A50>,
                           58)],
             '$190return_value.1': [(<numba.core.ir.Assign object at 0x00000221B5E90750>,
                                     188)],
             '$194get_iter.1': [(<numba.core.ir.Assign object at 0x00000221B5E90210>,
                                 192)],
             '$196for_iter.1': [(<numba.core.ir.Assign object at 0x00000221B7BAF650>,
                                 196)],
             '$196for_iter.2': [(<numba.core.ir.Assign object at 0x00000221B7BAE690>,
                                 196)],
             '$196for_iter.3': [(<numba.core.ir.Assign object at 0x00000221B7BAED50>,
                                 196)],
             '$202load_method.4': [(<numba.core.ir.Assign object at 0x00000221B7BAFF10>,
                                    198)],
             '$20compare_op.3': [(<numba.core.ir.Assign object at 0x00000221B6A53D90>,
                                  0)],
             '$242load_deref.7': [(<numba.core.ir.Assign object at 0x00000221B7BAC610>,
                                   198)],
             '$250call.9': [(<numba.core.ir.Assign object at 0x00000221B7BAF490>,
                             198)],
             '$260pred': [(<numba.core.ir.Assign object at 0x00000221B7BAEB90>,
                           198)],
             '$268return_value.2': [(<numba.core.ir.Assign object at 0x00000221B7BADAD0>,
                                     262)],
             '$26pred': [(<numba.core.ir.Assign object at 0x00000221B6A51910>,
                          0)],
             '$272load_deref.2': [(<numba.core.ir.Assign object at 0x00000221B7BAC950>,
                                   270)],
             '$282call.5': [(<numba.core.ir.Assign object at 0x00000221B7BACC50>,
                             270)],
             '$28load_global.0': [(<numba.core.ir.Assign object at 0x00000221B6A50B50>,
                                   28)],
             '$292pred': [(<numba.core.ir.Assign object at 0x00000221B7BAD390>,
                           270)],
             '$302return_value.1': [(<numba.core.ir.Assign object at 0x00000221B7BAC9D0>,
                                     300)],
             '$46call.3': [(<numba.core.ir.Assign object at 0x00000221B5E90F90>,
                            28)],
             '$58load_global.0': [(<numba.core.ir.Assign object at 0x00000221B5E904D0>,
                                   58)],
             '$70load_attr.2': [(<numba.core.ir.Assign object at 0x00000221B5E91490>,
                                 58)],
             '$8load_attr.1': [(<numba.core.ir.Assign object at 0x00000221B69DA990>,
                                0)],
             '$98load_global.5': [(<numba.core.ir.Assign object at 0x00000221B5E92450>,
                                   58)],
             '$const148.11': [(<numba.core.ir.Assign object at 0x00000221B5E933D0>,
                               58)],
             '$const18.2': [(<numba.core.ir.Assign object at 0x00000221B69D8F90>,
                             0)],
             '$const40.2': [(<numba.core.ir.Assign object at 0x00000221B6A51B50>,
                             28)],
             '$phi196.0': [(<numba.core.ir.Assign object at 0x00000221B5E90890>,
                            192)],
             '$phi198.1': [(<numba.core.ir.Assign object at 0x00000221B7BADC10>,
                            196)],
             'a': [(<numba.core.ir.Assign object at 0x00000221B6AD7E50>, 0)],
             'bool186': [(<numba.core.ir.Assign object at 0x00000221B5E900D0>,
                          58)],
             'bool26': [(<numba.core.ir.Assign object at 0x00000221B6A53490>,
                         0)],
             'bool260': [(<numba.core.ir.Assign object at 0x00000221B7BAE2D0>,
                          198)],
             'bool292': [(<numba.core.ir.Assign object at 0x00000221B7BAC0D0>,
                          270)],
             'it': [(<numba.core.ir.Assign object at 0x00000221B5E91750>, 58)],
             'max_value': [(<numba.core.ir.Assign object at 0x00000221B5E93050>,
                            58),
                           (<numba.core.ir.Assign object at 0x00000221B7BAD910>,
                            294)],
             'v': [(<numba.core.ir.Assign object at 0x00000221B7BAD2D0>, 198)],
             'view': [(<numba.core.ir.Assign object at 0x00000221B7BAD1D0>,
                       198)]})
2024-07-15 06:11:45,122 DEBUG:SSA violators <numba.core.utils.OrderedSet object at 0x00000221B5E91390>
2024-07-15 06:11:45,122 DEBUG:Fix SSA violator on var max_value
2024-07-15 06:11:45,122 DEBUG:==== SSA block rewrite pass on 0
2024-07-15 06:11:45,122 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5E33B90>
2024-07-15 06:11:45,122 DEBUG:on stmt: a = arg(0, name=a)
2024-07-15 06:11:45,122 DEBUG:on stmt: $8load_attr.1 = getattr(value=a, attr=size)
2024-07-15 06:11:45,122 DEBUG:on stmt: $const18.2 = const(int, 0)
2024-07-15 06:11:45,122 DEBUG:on stmt: $20compare_op.3 = $8load_attr.1 == $const18.2
2024-07-15 06:11:45,122 DEBUG:on stmt: bool26 = global(bool: <class 'bool'>)
2024-07-15 06:11:45,122 DEBUG:on stmt: $26pred = call bool26($20compare_op.3, func=bool26, args=(Var($20compare_op.3, arraymath.py:571),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:45,122 DEBUG:on stmt: branch $26pred, 28, 58
2024-07-15 06:11:45,122 DEBUG:==== SSA block rewrite pass on 28
2024-07-15 06:11:45,122 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5E33B90>
2024-07-15 06:11:45,122 DEBUG:on stmt: $28load_global.0 = global(ValueError: <class 'ValueError'>)
2024-07-15 06:11:45,122 DEBUG:on stmt: $const40.2 = const(str, zero-size array to reduction operation maximum which has no identity)
2024-07-15 06:11:45,122 DEBUG:on stmt: $46call.3 = call $28load_global.0($const40.2, func=$28load_global.0, args=[Var($const40.2, arraymath.py:572)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:45,122 DEBUG:on stmt: <static> raise <class 'ValueError'>('zero-size array to reduction operation maximum which has no identity')
2024-07-15 06:11:45,122 DEBUG:==== SSA block rewrite pass on 58
2024-07-15 06:11:45,122 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5E33B90>
2024-07-15 06:11:45,122 DEBUG:on stmt: $58load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:45,123 DEBUG:on stmt: $70load_attr.2 = getattr(value=$58load_global.0, attr=nditer)
2024-07-15 06:11:45,123 DEBUG:on stmt: it = call $70load_attr.2(a, func=$70load_attr.2, args=[Var(a, arraymath.py:570)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:45,123 DEBUG:on stmt: $98load_global.5 = global(next: <built-in function next>)
2024-07-15 06:11:45,123 DEBUG:on stmt: $116call.8 = call $98load_global.5(it, func=$98load_global.5, args=[Var(it, arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:45,123 DEBUG:on stmt: $126load_method.10 = getattr(value=$116call.8, attr=take)
2024-07-15 06:11:45,123 DEBUG:on stmt: $const148.11 = const(int, 0)
2024-07-15 06:11:45,123 DEBUG:on stmt: max_value = call $126load_method.10($const148.11, func=$126load_method.10, args=[Var($const148.11, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:45,123 DEBUG:first assign: max_value
2024-07-15 06:11:45,123 DEBUG:replaced with: max_value = call $126load_method.10($const148.11, func=$126load_method.10, args=[Var($const148.11, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:45,123 DEBUG:on stmt: $168load_deref.14 = freevar(pre_return_func: <function return_false at 0x00000221B53CACA0>)
2024-07-15 06:11:45,123 DEBUG:on stmt: $176call.16 = call $168load_deref.14(max_value, func=$168load_deref.14, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:45,123 DEBUG:on stmt: bool186 = global(bool: <class 'bool'>)
2024-07-15 06:11:45,123 DEBUG:on stmt: $186pred = call bool186($176call.16, func=bool186, args=(Var($176call.16, arraymath.py:577),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:45,123 DEBUG:on stmt: branch $186pred, 188, 192
2024-07-15 06:11:45,123 DEBUG:==== SSA block rewrite pass on 188
2024-07-15 06:11:45,123 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5E33B90>
2024-07-15 06:11:45,123 DEBUG:on stmt: $190return_value.1 = cast(value=max_value)
2024-07-15 06:11:45,123 DEBUG:on stmt: return $190return_value.1
2024-07-15 06:11:45,123 DEBUG:==== SSA block rewrite pass on 192
2024-07-15 06:11:45,123 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5E33B90>
2024-07-15 06:11:45,123 DEBUG:on stmt: $194get_iter.1 = getiter(value=it)
2024-07-15 06:11:45,123 DEBUG:on stmt: $phi196.0 = $194get_iter.1
2024-07-15 06:11:45,123 DEBUG:on stmt: jump 196
2024-07-15 06:11:45,123 DEBUG:==== SSA block rewrite pass on 196
2024-07-15 06:11:45,123 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5E33B90>
2024-07-15 06:11:45,123 DEBUG:on stmt: $196for_iter.1 = iternext(value=$phi196.0)
2024-07-15 06:11:45,123 DEBUG:on stmt: $196for_iter.2 = pair_first(value=$196for_iter.1)
2024-07-15 06:11:45,123 DEBUG:on stmt: $196for_iter.3 = pair_second(value=$196for_iter.1)
2024-07-15 06:11:45,123 DEBUG:on stmt: $phi198.1 = $196for_iter.2
2024-07-15 06:11:45,123 DEBUG:on stmt: branch $196for_iter.3, 198, 300
2024-07-15 06:11:45,123 DEBUG:==== SSA block rewrite pass on 198
2024-07-15 06:11:45,123 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5E33B90>
2024-07-15 06:11:45,123 DEBUG:on stmt: view = $phi198.1
2024-07-15 06:11:45,123 DEBUG:on stmt: $202load_method.4 = getattr(value=view, attr=item)
2024-07-15 06:11:45,123 DEBUG:on stmt: v = call $202load_method.4(func=$202load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:45,123 DEBUG:on stmt: $242load_deref.7 = freevar(pre_return_func: <function return_false at 0x00000221B53CACA0>)
2024-07-15 06:11:45,124 DEBUG:on stmt: $250call.9 = call $242load_deref.7(v, func=$242load_deref.7, args=[Var(v, arraymath.py:581)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:45,124 DEBUG:on stmt: bool260 = global(bool: <class 'bool'>)
2024-07-15 06:11:45,124 DEBUG:on stmt: $260pred = call bool260($250call.9, func=bool260, args=(Var($250call.9, arraymath.py:582),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:45,124 DEBUG:on stmt: branch $260pred, 262, 270
2024-07-15 06:11:45,124 DEBUG:==== SSA block rewrite pass on 262
2024-07-15 06:11:45,124 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5E33B90>
2024-07-15 06:11:45,124 DEBUG:on stmt: $268return_value.2 = cast(value=v)
2024-07-15 06:11:45,124 DEBUG:on stmt: return $268return_value.2
2024-07-15 06:11:45,124 DEBUG:==== SSA block rewrite pass on 270
2024-07-15 06:11:45,124 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5E33B90>
2024-07-15 06:11:45,124 DEBUG:on stmt: $272load_deref.2 = freevar(comparator: <function max_comparator at 0x00000221B53CA3E0>)
2024-07-15 06:11:45,124 DEBUG:on stmt: $282call.5 = call $272load_deref.2(v, max_value, func=$272load_deref.2, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:45,124 DEBUG:on stmt: bool292 = global(bool: <class 'bool'>)
2024-07-15 06:11:45,124 DEBUG:on stmt: $292pred = call bool292($282call.5, func=bool292, args=(Var($282call.5, arraymath.py:584),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:45,124 DEBUG:on stmt: branch $292pred, 294, 298
2024-07-15 06:11:45,124 DEBUG:==== SSA block rewrite pass on 294
2024-07-15 06:11:45,124 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5E33B90>
2024-07-15 06:11:45,124 DEBUG:on stmt: max_value = v
2024-07-15 06:11:45,124 DEBUG:replaced with: max_value.1 = v
2024-07-15 06:11:45,124 DEBUG:on stmt: jump 298
2024-07-15 06:11:45,124 DEBUG:==== SSA block rewrite pass on 298
2024-07-15 06:11:45,124 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5E33B90>
2024-07-15 06:11:45,124 DEBUG:on stmt: jump 196
2024-07-15 06:11:45,124 DEBUG:==== SSA block rewrite pass on 300
2024-07-15 06:11:45,124 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5E33B90>
2024-07-15 06:11:45,124 DEBUG:on stmt: $302return_value.1 = cast(value=max_value)
2024-07-15 06:11:45,124 DEBUG:on stmt: return $302return_value.1
2024-07-15 06:11:45,124 DEBUG:Replaced assignments: defaultdict(<class 'list'>,
            {58: [<numba.core.ir.Assign object at 0x00000221B5F68990>],
             294: [<numba.core.ir.Assign object at 0x00000221B5E90CD0>]})
2024-07-15 06:11:45,124 DEBUG:==== SSA block rewrite pass on 0
2024-07-15 06:11:45,124 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B69D9610>
2024-07-15 06:11:45,124 DEBUG:on stmt: a = arg(0, name=a)
2024-07-15 06:11:45,124 DEBUG:on stmt: $8load_attr.1 = getattr(value=a, attr=size)
2024-07-15 06:11:45,124 DEBUG:on stmt: $const18.2 = const(int, 0)
2024-07-15 06:11:45,124 DEBUG:on stmt: $20compare_op.3 = $8load_attr.1 == $const18.2
2024-07-15 06:11:45,125 DEBUG:on stmt: bool26 = global(bool: <class 'bool'>)
2024-07-15 06:11:45,125 DEBUG:on stmt: $26pred = call bool26($20compare_op.3, func=bool26, args=(Var($20compare_op.3, arraymath.py:571),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:45,125 DEBUG:on stmt: branch $26pred, 28, 58
2024-07-15 06:11:45,125 DEBUG:==== SSA block rewrite pass on 28
2024-07-15 06:11:45,125 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B69D9610>
2024-07-15 06:11:45,125 DEBUG:on stmt: $28load_global.0 = global(ValueError: <class 'ValueError'>)
2024-07-15 06:11:45,125 DEBUG:on stmt: $const40.2 = const(str, zero-size array to reduction operation maximum which has no identity)
2024-07-15 06:11:45,125 DEBUG:on stmt: $46call.3 = call $28load_global.0($const40.2, func=$28load_global.0, args=[Var($const40.2, arraymath.py:572)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:45,125 DEBUG:on stmt: <static> raise <class 'ValueError'>('zero-size array to reduction operation maximum which has no identity')
2024-07-15 06:11:45,125 DEBUG:==== SSA block rewrite pass on 58
2024-07-15 06:11:45,125 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B69D9610>
2024-07-15 06:11:45,125 DEBUG:on stmt: $58load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:45,125 DEBUG:on stmt: $70load_attr.2 = getattr(value=$58load_global.0, attr=nditer)
2024-07-15 06:11:45,125 DEBUG:on stmt: it = call $70load_attr.2(a, func=$70load_attr.2, args=[Var(a, arraymath.py:570)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:45,125 DEBUG:on stmt: $98load_global.5 = global(next: <built-in function next>)
2024-07-15 06:11:45,125 DEBUG:on stmt: $116call.8 = call $98load_global.5(it, func=$98load_global.5, args=[Var(it, arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:45,125 DEBUG:on stmt: $126load_method.10 = getattr(value=$116call.8, attr=take)
2024-07-15 06:11:45,125 DEBUG:on stmt: $const148.11 = const(int, 0)
2024-07-15 06:11:45,125 DEBUG:on stmt: max_value = call $126load_method.10($const148.11, func=$126load_method.10, args=[Var($const148.11, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:45,125 DEBUG:on stmt: $168load_deref.14 = freevar(pre_return_func: <function return_false at 0x00000221B53CACA0>)
2024-07-15 06:11:45,125 DEBUG:on stmt: $176call.16 = call $168load_deref.14(max_value, func=$168load_deref.14, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:45,125 DEBUG:find_def var='max_value' stmt=$176call.16 = call $168load_deref.14(max_value, func=$168load_deref.14, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:45,125 DEBUG:on stmt: bool186 = global(bool: <class 'bool'>)
2024-07-15 06:11:45,125 DEBUG:on stmt: $186pred = call bool186($176call.16, func=bool186, args=(Var($176call.16, arraymath.py:577),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:45,125 DEBUG:on stmt: branch $186pred, 188, 192
2024-07-15 06:11:45,125 DEBUG:==== SSA block rewrite pass on 188
2024-07-15 06:11:45,125 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B69D9610>
2024-07-15 06:11:45,125 DEBUG:on stmt: $190return_value.1 = cast(value=max_value)
2024-07-15 06:11:45,125 DEBUG:find_def var='max_value' stmt=$190return_value.1 = cast(value=max_value)
2024-07-15 06:11:45,125 DEBUG:find_def_from_top label 188
2024-07-15 06:11:45,125 DEBUG:idom 58 from label 188
2024-07-15 06:11:45,126 DEBUG:find_def_from_bottom label 58
2024-07-15 06:11:45,126 DEBUG:on stmt: return $190return_value.1
2024-07-15 06:11:45,126 DEBUG:==== SSA block rewrite pass on 192
2024-07-15 06:11:45,126 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B69D9610>
2024-07-15 06:11:45,126 DEBUG:on stmt: $194get_iter.1 = getiter(value=it)
2024-07-15 06:11:45,126 DEBUG:on stmt: $phi196.0 = $194get_iter.1
2024-07-15 06:11:45,126 DEBUG:on stmt: jump 196
2024-07-15 06:11:45,126 DEBUG:==== SSA block rewrite pass on 196
2024-07-15 06:11:45,126 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B69D9610>
2024-07-15 06:11:45,126 DEBUG:on stmt: $196for_iter.1 = iternext(value=$phi196.0)
2024-07-15 06:11:45,126 DEBUG:on stmt: $196for_iter.2 = pair_first(value=$196for_iter.1)
2024-07-15 06:11:45,126 DEBUG:on stmt: $196for_iter.3 = pair_second(value=$196for_iter.1)
2024-07-15 06:11:45,126 DEBUG:on stmt: $phi198.1 = $196for_iter.2
2024-07-15 06:11:45,126 DEBUG:on stmt: branch $196for_iter.3, 198, 300
2024-07-15 06:11:45,126 DEBUG:==== SSA block rewrite pass on 198
2024-07-15 06:11:45,126 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B69D9610>
2024-07-15 06:11:45,126 DEBUG:on stmt: view = $phi198.1
2024-07-15 06:11:45,126 DEBUG:on stmt: $202load_method.4 = getattr(value=view, attr=item)
2024-07-15 06:11:45,126 DEBUG:on stmt: v = call $202load_method.4(func=$202load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:45,126 DEBUG:on stmt: $242load_deref.7 = freevar(pre_return_func: <function return_false at 0x00000221B53CACA0>)
2024-07-15 06:11:45,126 DEBUG:on stmt: $250call.9 = call $242load_deref.7(v, func=$242load_deref.7, args=[Var(v, arraymath.py:581)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:45,126 DEBUG:on stmt: bool260 = global(bool: <class 'bool'>)
2024-07-15 06:11:45,126 DEBUG:on stmt: $260pred = call bool260($250call.9, func=bool260, args=(Var($250call.9, arraymath.py:582),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:45,126 DEBUG:on stmt: branch $260pred, 262, 270
2024-07-15 06:11:45,126 DEBUG:==== SSA block rewrite pass on 262
2024-07-15 06:11:45,126 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B69D9610>
2024-07-15 06:11:45,126 DEBUG:on stmt: $268return_value.2 = cast(value=v)
2024-07-15 06:11:45,126 DEBUG:on stmt: return $268return_value.2
2024-07-15 06:11:45,126 DEBUG:==== SSA block rewrite pass on 270
2024-07-15 06:11:45,126 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B69D9610>
2024-07-15 06:11:45,126 DEBUG:on stmt: $272load_deref.2 = freevar(comparator: <function max_comparator at 0x00000221B53CA3E0>)
2024-07-15 06:11:45,126 DEBUG:on stmt: $282call.5 = call $272load_deref.2(v, max_value, func=$272load_deref.2, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:45,126 DEBUG:find_def var='max_value' stmt=$282call.5 = call $272load_deref.2(v, max_value, func=$272load_deref.2, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:45,126 DEBUG:find_def_from_top label 270
2024-07-15 06:11:45,126 DEBUG:idom 198 from label 270
2024-07-15 06:11:45,126 DEBUG:find_def_from_bottom label 198
2024-07-15 06:11:45,126 DEBUG:find_def_from_top label 198
2024-07-15 06:11:45,126 DEBUG:idom 196 from label 198
2024-07-15 06:11:45,126 DEBUG:find_def_from_bottom label 196
2024-07-15 06:11:45,126 DEBUG:find_def_from_top label 196
2024-07-15 06:11:45,126 DEBUG:insert phi node max_value.2 = phi(incoming_values=[], incoming_blocks=[]) at 196
2024-07-15 06:11:45,126 DEBUG:find_def_from_bottom label 192
2024-07-15 06:11:45,126 DEBUG:find_def_from_top label 192
2024-07-15 06:11:45,126 DEBUG:idom 58 from label 192
2024-07-15 06:11:45,126 DEBUG:find_def_from_bottom label 58
2024-07-15 06:11:45,126 DEBUG:incoming_def max_value = call $126load_method.10($const148.11, func=$126load_method.10, args=[Var($const148.11, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:45,126 DEBUG:find_def_from_bottom label 298
2024-07-15 06:11:45,126 DEBUG:find_def_from_top label 298
2024-07-15 06:11:45,126 DEBUG:insert phi node max_value.3 = phi(incoming_values=[], incoming_blocks=[]) at 298
2024-07-15 06:11:45,127 DEBUG:find_def_from_bottom label 294
2024-07-15 06:11:45,127 DEBUG:incoming_def max_value.1 = v
2024-07-15 06:11:45,127 DEBUG:find_def_from_bottom label 270
2024-07-15 06:11:45,127 DEBUG:find_def_from_top label 270
2024-07-15 06:11:45,127 DEBUG:idom 198 from label 270
2024-07-15 06:11:45,127 DEBUG:find_def_from_bottom label 198
2024-07-15 06:11:45,127 DEBUG:find_def_from_top label 198
2024-07-15 06:11:45,127 DEBUG:idom 196 from label 198
2024-07-15 06:11:45,127 DEBUG:find_def_from_bottom label 196
2024-07-15 06:11:45,127 DEBUG:incoming_def max_value.2 = phi(incoming_values=[Var(max_value, arraymath.py:576)], incoming_blocks=[192])
2024-07-15 06:11:45,127 DEBUG:incoming_def max_value.3 = phi(incoming_values=[Var(max_value.1, arraymath.py:585), Var(max_value.2, arraymath.py:584)], incoming_blocks=[294, 270])
2024-07-15 06:11:45,127 DEBUG:replaced with: $282call.5 = call $272load_deref.2(v, max_value.2, func=$272load_deref.2, args=[Var(v, arraymath.py:581), Var(max_value.2, arraymath.py:584)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:45,127 DEBUG:on stmt: bool292 = global(bool: <class 'bool'>)
2024-07-15 06:11:45,127 DEBUG:on stmt: $292pred = call bool292($282call.5, func=bool292, args=(Var($282call.5, arraymath.py:584),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:45,127 DEBUG:on stmt: branch $292pred, 294, 298
2024-07-15 06:11:45,127 DEBUG:==== SSA block rewrite pass on 294
2024-07-15 06:11:45,127 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B69D9610>
2024-07-15 06:11:45,127 DEBUG:on stmt: max_value.1 = v
2024-07-15 06:11:45,127 DEBUG:on stmt: jump 298
2024-07-15 06:11:45,127 DEBUG:==== SSA block rewrite pass on 298
2024-07-15 06:11:45,127 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B69D9610>
2024-07-15 06:11:45,127 DEBUG:on stmt: jump 196
2024-07-15 06:11:45,127 DEBUG:==== SSA block rewrite pass on 300
2024-07-15 06:11:45,127 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B69D9610>
2024-07-15 06:11:45,127 DEBUG:on stmt: $302return_value.1 = cast(value=max_value)
2024-07-15 06:11:45,127 DEBUG:find_def var='max_value' stmt=$302return_value.1 = cast(value=max_value)
2024-07-15 06:11:45,127 DEBUG:find_def_from_top label 300
2024-07-15 06:11:45,127 DEBUG:idom 196 from label 300
2024-07-15 06:11:45,128 DEBUG:find_def_from_bottom label 196
2024-07-15 06:11:45,128 DEBUG:replaced with: $302return_value.1 = cast(value=max_value.2)
2024-07-15 06:11:45,128 DEBUG:on stmt: return $302return_value.1
2024-07-15 06:11:45,138 DEBUG:bytecode dump:
>          0	NOP(arg=None, lineno=4691)
           2	RESUME(arg=0, lineno=4691)
           4	LOAD_FAST(arg=1, lineno=4692)
           6	LOAD_FAST(arg=0, lineno=4692)
           8	LOAD_ATTR(arg=0, lineno=4692)
          18	LOAD_CONST(arg=1, lineno=4692)
          20	BINARY_OP(arg=10, lineno=4692)
          24	COMPARE_OP(arg=4, lineno=4692)
          30	POP_JUMP_FORWARD_IF_TRUE(arg=12, lineno=4692)
          32	LOAD_FAST(arg=1, lineno=4692)
          34	LOAD_FAST(arg=0, lineno=4692)
          36	LOAD_ATTR(arg=0, lineno=4692)
          46	UNARY_NEGATIVE(arg=None, lineno=4692)
          48	COMPARE_OP(arg=0, lineno=4692)
          54	POP_JUMP_FORWARD_IF_FALSE(arg=15, lineno=4692)
>         56	LOAD_GLOBAL(arg=3, lineno=4693)
          68	LOAD_CONST(arg=2, lineno=4693)
          70	PRECALL(arg=1, lineno=4693)
          74	CALL(arg=1, lineno=4693)
          84	RAISE_VARARGS(arg=1, lineno=4693)
>         86	LOAD_FAST(arg=0, lineno=4694)
          88	LOAD_METHOD(arg=2, lineno=4694)
         110	PRECALL(arg=0, lineno=4694)
         114	CALL(arg=0, lineno=4694)
         124	LOAD_FAST(arg=1, lineno=4694)
         126	BINARY_SUBSCR(arg=None, lineno=4694)
         136	RETURN_VALUE(arg=None, lineno=4694)
2024-07-15 06:11:45,138 DEBUG:pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-15 06:11:45,138 DEBUG:stack: []
2024-07-15 06:11:45,138 DEBUG:state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-15 06:11:45,138 DEBUG:dispatch pc=0, inst=NOP(arg=None, lineno=4691)
2024-07-15 06:11:45,138 DEBUG:stack []
2024-07-15 06:11:45,138 DEBUG:dispatch pc=2, inst=RESUME(arg=0, lineno=4691)
2024-07-15 06:11:45,138 DEBUG:stack []
2024-07-15 06:11:45,138 DEBUG:dispatch pc=4, inst=LOAD_FAST(arg=1, lineno=4692)
2024-07-15 06:11:45,138 DEBUG:stack []
2024-07-15 06:11:45,138 DEBUG:dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=4692)
2024-07-15 06:11:45,138 DEBUG:stack ['$indices4.0']
2024-07-15 06:11:45,138 DEBUG:dispatch pc=8, inst=LOAD_ATTR(arg=0, lineno=4692)
2024-07-15 06:11:45,138 DEBUG:stack ['$indices4.0', '$a6.1']
2024-07-15 06:11:45,138 DEBUG:dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=4692)
2024-07-15 06:11:45,138 DEBUG:stack ['$indices4.0', '$8load_attr.2']
2024-07-15 06:11:45,138 DEBUG:dispatch pc=20, inst=BINARY_OP(arg=10, lineno=4692)
2024-07-15 06:11:45,138 DEBUG:stack ['$indices4.0', '$8load_attr.2', '$const18.3']
2024-07-15 06:11:45,138 DEBUG:dispatch pc=24, inst=COMPARE_OP(arg=4, lineno=4692)
2024-07-15 06:11:45,139 DEBUG:stack ['$indices4.0', '$binop_sub20.4']
2024-07-15 06:11:45,139 DEBUG:dispatch pc=30, inst=POP_JUMP_FORWARD_IF_TRUE(arg=12, lineno=4692)
2024-07-15 06:11:45,139 DEBUG:stack ['$24compare_op.5']
2024-07-15 06:11:45,139 DEBUG:end state. edges=[Edge(pc=32, stack=(), blockstack=(), npush=0), Edge(pc=56, stack=(), blockstack=(), npush=0)]
2024-07-15 06:11:45,139 DEBUG:pending: deque([State(pc_initial=32 nstack_initial=0), State(pc_initial=56 nstack_initial=0)])
2024-07-15 06:11:45,139 DEBUG:stack: []
2024-07-15 06:11:45,139 DEBUG:state.pc_initial: State(pc_initial=32 nstack_initial=0)
2024-07-15 06:11:45,139 DEBUG:dispatch pc=32, inst=LOAD_FAST(arg=1, lineno=4692)
2024-07-15 06:11:45,139 DEBUG:stack []
2024-07-15 06:11:45,139 DEBUG:dispatch pc=34, inst=LOAD_FAST(arg=0, lineno=4692)
2024-07-15 06:11:45,139 DEBUG:stack ['$indices32.0']
2024-07-15 06:11:45,139 DEBUG:dispatch pc=36, inst=LOAD_ATTR(arg=0, lineno=4692)
2024-07-15 06:11:45,139 DEBUG:stack ['$indices32.0', '$a34.1']
2024-07-15 06:11:45,139 DEBUG:dispatch pc=46, inst=UNARY_NEGATIVE(arg=None, lineno=4692)
2024-07-15 06:11:45,139 DEBUG:stack ['$indices32.0', '$36load_attr.2']
2024-07-15 06:11:45,139 DEBUG:dispatch pc=48, inst=COMPARE_OP(arg=0, lineno=4692)
2024-07-15 06:11:45,139 DEBUG:stack ['$indices32.0', '$46unary_negative.3']
2024-07-15 06:11:45,139 DEBUG:dispatch pc=54, inst=POP_JUMP_FORWARD_IF_FALSE(arg=15, lineno=4692)
2024-07-15 06:11:45,139 DEBUG:stack ['$48compare_op.4']
2024-07-15 06:11:45,139 DEBUG:end state. edges=[Edge(pc=56, stack=(), blockstack=(), npush=0), Edge(pc=86, stack=(), blockstack=(), npush=0)]
2024-07-15 06:11:45,139 DEBUG:pending: deque([State(pc_initial=56 nstack_initial=0), State(pc_initial=56 nstack_initial=0), State(pc_initial=86 nstack_initial=0)])
2024-07-15 06:11:45,139 DEBUG:stack: []
2024-07-15 06:11:45,139 DEBUG:state.pc_initial: State(pc_initial=56 nstack_initial=0)
2024-07-15 06:11:45,139 DEBUG:dispatch pc=56, inst=LOAD_GLOBAL(arg=3, lineno=4693)
2024-07-15 06:11:45,139 DEBUG:stack []
2024-07-15 06:11:45,139 DEBUG:dispatch pc=68, inst=LOAD_CONST(arg=2, lineno=4693)
2024-07-15 06:11:45,139 DEBUG:stack ['$null$56.1', '$56load_global.0']
2024-07-15 06:11:45,139 DEBUG:dispatch pc=70, inst=PRECALL(arg=1, lineno=4693)
2024-07-15 06:11:45,139 DEBUG:stack ['$null$56.1', '$56load_global.0', '$const68.2']
2024-07-15 06:11:45,139 DEBUG:dispatch pc=74, inst=CALL(arg=1, lineno=4693)
2024-07-15 06:11:45,139 DEBUG:stack ['$null$56.1', '$56load_global.0', '$const68.2']
2024-07-15 06:11:45,139 DEBUG:dispatch pc=84, inst=RAISE_VARARGS(arg=1, lineno=4693)
2024-07-15 06:11:45,140 DEBUG:stack ['$74call.3']
2024-07-15 06:11:45,140 DEBUG:end state. edges=[]
2024-07-15 06:11:45,140 DEBUG:pending: deque([State(pc_initial=56 nstack_initial=0), State(pc_initial=86 nstack_initial=0)])
2024-07-15 06:11:45,140 DEBUG:pending: deque([State(pc_initial=86 nstack_initial=0)])
2024-07-15 06:11:45,140 DEBUG:stack: []
2024-07-15 06:11:45,140 DEBUG:state.pc_initial: State(pc_initial=86 nstack_initial=0)
2024-07-15 06:11:45,140 DEBUG:dispatch pc=86, inst=LOAD_FAST(arg=0, lineno=4694)
2024-07-15 06:11:45,140 DEBUG:stack []
2024-07-15 06:11:45,140 DEBUG:dispatch pc=88, inst=LOAD_METHOD(arg=2, lineno=4694)
2024-07-15 06:11:45,140 DEBUG:stack ['$a86.0']
2024-07-15 06:11:45,140 DEBUG:dispatch pc=110, inst=PRECALL(arg=0, lineno=4694)
2024-07-15 06:11:45,140 DEBUG:stack ['$null$88.1', '$88load_method.2']
2024-07-15 06:11:45,140 DEBUG:dispatch pc=114, inst=CALL(arg=0, lineno=4694)
2024-07-15 06:11:45,140 DEBUG:stack ['$null$88.1', '$88load_method.2']
2024-07-15 06:11:45,140 DEBUG:dispatch pc=124, inst=LOAD_FAST(arg=1, lineno=4694)
2024-07-15 06:11:45,140 DEBUG:stack ['$114call.3']
2024-07-15 06:11:45,140 DEBUG:dispatch pc=126, inst=BINARY_SUBSCR(arg=None, lineno=4694)
2024-07-15 06:11:45,140 DEBUG:stack ['$114call.3', '$indices124.4']
2024-07-15 06:11:45,140 DEBUG:dispatch pc=136, inst=RETURN_VALUE(arg=None, lineno=4694)
2024-07-15 06:11:45,140 DEBUG:stack ['$126binary_subscr.5']
2024-07-15 06:11:45,140 DEBUG:end state. edges=[]
2024-07-15 06:11:45,140 DEBUG:-------------------------Prune PHIs-------------------------
2024-07-15 06:11:45,140 DEBUG:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=32 nstack_initial=0): set(),
             State(pc_initial=56 nstack_initial=0): set(),
             State(pc_initial=86 nstack_initial=0): set()})
2024-07-15 06:11:45,140 DEBUG:defmap: {}
2024-07-15 06:11:45,140 DEBUG:phismap: defaultdict(<class 'set'>, {})
2024-07-15 06:11:45,140 DEBUG:changing phismap: defaultdict(<class 'set'>, {})
2024-07-15 06:11:45,140 DEBUG:keep phismap: {}
2024-07-15 06:11:45,140 DEBUG:new_out: defaultdict(<class 'dict'>, {})
2024-07-15 06:11:45,140 DEBUG:----------------------DONE Prune PHIs-----------------------
2024-07-15 06:11:45,141 DEBUG:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$indices4.0'}), (6, {'res': '$a6.1'}), (8, {'item': '$a6.1', 'res': '$8load_attr.2'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'res': '$const18.3'}), (20, {'op': '-', 'lhs': '$8load_attr.2', 'rhs': '$const18.3', 'res': '$binop_sub20.4'}), (22, {}), (24, {'lhs': '$indices4.0', 'rhs': '$binop_sub20.4', 'res': '$24compare_op.5'}), (26, {}), (28, {}), (30, {'pred': '$24compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={32: (), 56: ()})
2024-07-15 06:11:45,141 DEBUG:block_infos State(pc_initial=32 nstack_initial=0):
AdaptBlockInfo(insts=((32, {'res': '$indices32.0'}), (34, {'res': '$a34.1'}), (36, {'item': '$a34.1', 'res': '$36load_attr.2'}), (38, {}), (40, {}), (42, {}), (44, {}), (46, {'value': '$36load_attr.2', 'res': '$46unary_negative.3'}), (48, {'lhs': '$indices32.0', 'rhs': '$46unary_negative.3', 'res': '$48compare_op.4'}), (50, {}), (52, {}), (54, {'pred': '$48compare_op.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={56: (), 86: ()})
2024-07-15 06:11:45,141 DEBUG:block_infos State(pc_initial=56 nstack_initial=0):
AdaptBlockInfo(insts=((56, {'idx': 1, 'res': '$56load_global.0'}), (58, {}), (60, {}), (62, {}), (64, {}), (66, {}), (68, {'res': '$const68.2'}), (70, {}), (72, {}), (74, {'func': '$56load_global.0', 'args': ['$const68.2'], 'kw_names': None, 'res': '$74call.3'}), (76, {}), (78, {}), (80, {}), (82, {}), (84, {'exc': '$74call.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-15 06:11:45,141 DEBUG:block_infos State(pc_initial=86 nstack_initial=0):
AdaptBlockInfo(insts=((86, {'res': '$a86.0'}), (88, {'item': '$a86.0', 'res': '$88load_method.2'}), (90, {}), (92, {}), (94, {}), (96, {}), (98, {}), (100, {}), (102, {}), (104, {}), (106, {}), (108, {}), (110, {}), (112, {}), (114, {'func': '$88load_method.2', 'args': [], 'kw_names': None, 'res': '$114call.3'}), (116, {}), (118, {}), (120, {}), (122, {}), (124, {'res': '$indices124.4'}), (126, {'index': '$indices124.4', 'target': '$114call.3', 'res': '$126binary_subscr.5'}), (128, {}), (130, {}), (132, {}), (134, {}), (136, {'retval': '$126binary_subscr.5', 'castval': '$136return_value.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-15 06:11:45,141 DEBUG:label 0:
    a = arg(0, name=a)                       ['a']
    indices = arg(1, name=indices)           ['indices']
    $8load_attr.2 = getattr(value=a, attr=size) ['$8load_attr.2', 'a']
    $const18.3 = const(int, 1)               ['$const18.3']
    $binop_sub20.4 = $8load_attr.2 - $const18.3 ['$8load_attr.2', '$binop_sub20.4', '$const18.3']
    $24compare_op.5 = indices > $binop_sub20.4 ['$24compare_op.5', '$binop_sub20.4', 'indices']
    bool30 = global(bool: <class 'bool'>)    ['bool30']
    $30pred = call bool30($24compare_op.5, func=bool30, args=(Var($24compare_op.5, arrayobj.py:4692),), kws=(), vararg=None, varkwarg=None, target=None) ['$24compare_op.5', '$30pred', 'bool30']
    branch $30pred, 56, 32                   ['$30pred']
label 32:
    $36load_attr.2 = getattr(value=a, attr=size) ['$36load_attr.2', 'a']
    $46unary_negative.3 = unary(fn=<built-in function neg>, value=$36load_attr.2) ['$36load_attr.2', '$46unary_negative.3']
    $48compare_op.4 = indices < $46unary_negative.3 ['$46unary_negative.3', '$48compare_op.4', 'indices']
    bool54 = global(bool: <class 'bool'>)    ['bool54']
    $54pred = call bool54($48compare_op.4, func=bool54, args=(Var($48compare_op.4, arrayobj.py:4692),), kws=(), vararg=None, varkwarg=None, target=None) ['$48compare_op.4', '$54pred', 'bool54']
    branch $54pred, 56, 86                   ['$54pred']
label 56:
    $56load_global.0 = global(IndexError: <class 'IndexError'>) ['$56load_global.0']
    $const68.2 = const(str, Index out of bounds) ['$const68.2']
    $74call.3 = call $56load_global.0($const68.2, func=$56load_global.0, args=[Var($const68.2, arrayobj.py:4693)], kws=(), vararg=None, varkwarg=None, target=None) ['$56load_global.0', '$74call.3', '$const68.2']
    raise $74call.3                          ['$74call.3']
label 86:
    $88load_method.2 = getattr(value=a, attr=ravel) ['$88load_method.2', 'a']
    $114call.3 = call $88load_method.2(func=$88load_method.2, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$114call.3', '$88load_method.2']
    $126binary_subscr.5 = getitem(value=$114call.3, index=indices, fn=<built-in function getitem>) ['$114call.3', '$126binary_subscr.5', 'indices']
    $136return_value.6 = cast(value=$126binary_subscr.5) ['$126binary_subscr.5', '$136return_value.6']
    return $136return_value.6                ['$136return_value.6']

2024-07-15 06:11:45,152 DEBUG:==== SSA block analysis pass on 0
2024-07-15 06:11:45,152 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B69D8250>
2024-07-15 06:11:45,152 DEBUG:on stmt: a = arg(0, name=a)
2024-07-15 06:11:45,152 DEBUG:on stmt: indices = arg(1, name=indices)
2024-07-15 06:11:45,152 DEBUG:on stmt: $8load_attr.2 = getattr(value=a, attr=size)
2024-07-15 06:11:45,152 DEBUG:on stmt: $const18.3 = const(int, 1)
2024-07-15 06:11:45,152 DEBUG:on stmt: $binop_sub20.4 = $8load_attr.2 - $const18.3
2024-07-15 06:11:45,152 DEBUG:on stmt: $24compare_op.5 = indices > $binop_sub20.4
2024-07-15 06:11:45,152 DEBUG:on stmt: bool30 = global(bool: <class 'bool'>)
2024-07-15 06:11:45,152 DEBUG:on stmt: $30pred = call bool30($24compare_op.5, func=bool30, args=(Var($24compare_op.5, arrayobj.py:4692),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:45,152 DEBUG:on stmt: branch $30pred, 56, 32
2024-07-15 06:11:45,152 DEBUG:==== SSA block analysis pass on 32
2024-07-15 06:11:45,152 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B69D8250>
2024-07-15 06:11:45,152 DEBUG:on stmt: $36load_attr.2 = getattr(value=a, attr=size)
2024-07-15 06:11:45,152 DEBUG:on stmt: $46unary_negative.3 = unary(fn=<built-in function neg>, value=$36load_attr.2)
2024-07-15 06:11:45,152 DEBUG:on stmt: $48compare_op.4 = indices < $46unary_negative.3
2024-07-15 06:11:45,152 DEBUG:on stmt: bool54 = global(bool: <class 'bool'>)
2024-07-15 06:11:45,153 DEBUG:on stmt: $54pred = call bool54($48compare_op.4, func=bool54, args=(Var($48compare_op.4, arrayobj.py:4692),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:45,153 DEBUG:on stmt: branch $54pred, 56, 86
2024-07-15 06:11:45,153 DEBUG:==== SSA block analysis pass on 56
2024-07-15 06:11:45,153 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B69D8250>
2024-07-15 06:11:45,153 DEBUG:on stmt: $56load_global.0 = global(IndexError: <class 'IndexError'>)
2024-07-15 06:11:45,153 DEBUG:on stmt: $const68.2 = const(str, Index out of bounds)
2024-07-15 06:11:45,153 DEBUG:on stmt: $74call.3 = call $56load_global.0($const68.2, func=$56load_global.0, args=[Var($const68.2, arrayobj.py:4693)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:45,153 DEBUG:on stmt: <static> raise <class 'IndexError'>('Index out of bounds')
2024-07-15 06:11:45,153 DEBUG:==== SSA block analysis pass on 86
2024-07-15 06:11:45,153 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B69D8250>
2024-07-15 06:11:45,153 DEBUG:on stmt: $88load_method.2 = getattr(value=a, attr=ravel)
2024-07-15 06:11:45,153 DEBUG:on stmt: $114call.3 = call $88load_method.2(func=$88load_method.2, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:45,153 DEBUG:on stmt: $126binary_subscr.5 = getitem(value=$114call.3, index=indices, fn=<built-in function getitem>)
2024-07-15 06:11:45,153 DEBUG:on stmt: $136return_value.6 = cast(value=$126binary_subscr.5)
2024-07-15 06:11:45,153 DEBUG:on stmt: return $136return_value.6
2024-07-15 06:11:45,153 DEBUG:defs defaultdict(<class 'list'>,
            {'$114call.3': [(<numba.core.ir.Assign object at 0x00000221B6B0AF90>,
                             86)],
             '$126binary_subscr.5': [(<numba.core.ir.Assign object at 0x00000221B6B0ABD0>,
                                      86)],
             '$136return_value.6': [(<numba.core.ir.Assign object at 0x00000221B6B0B310>,
                                     86)],
             '$24compare_op.5': [(<numba.core.ir.Assign object at 0x00000221B6A79990>,
                                  0)],
             '$30pred': [(<numba.core.ir.Assign object at 0x00000221B6A79D90>,
                          0)],
             '$36load_attr.2': [(<numba.core.ir.Assign object at 0x00000221B6A78950>,
                                 32)],
             '$46unary_negative.3': [(<numba.core.ir.Assign object at 0x00000221B6A7F910>,
                                      32)],
             '$48compare_op.4': [(<numba.core.ir.Assign object at 0x00000221B6A7CD90>,
                                  32)],
             '$54pred': [(<numba.core.ir.Assign object at 0x00000221B6A7E250>,
                          32)],
             '$56load_global.0': [(<numba.core.ir.Assign object at 0x00000221B6A7D6D0>,
                                   56)],
             '$74call.3': [(<numba.core.ir.Assign object at 0x00000221B6A7FB10>,
                            56)],
             '$88load_method.2': [(<numba.core.ir.Assign object at 0x00000221B6B0AF10>,
                                   86)],
             '$8load_attr.2': [(<numba.core.ir.Assign object at 0x00000221B699D690>,
                                0)],
             '$binop_sub20.4': [(<numba.core.ir.Assign object at 0x00000221B6A78C50>,
                                 0)],
             '$const18.3': [(<numba.core.ir.Assign object at 0x00000221B6A7B450>,
                             0)],
             '$const68.2': [(<numba.core.ir.Assign object at 0x00000221B6A7CA90>,
                             56)],
             'a': [(<numba.core.ir.Assign object at 0x00000221B6760B50>, 0)],
             'bool30': [(<numba.core.ir.Assign object at 0x00000221B6A7B5D0>,
                         0)],
             'bool54': [(<numba.core.ir.Assign object at 0x00000221B6A7F650>,
                         32)],
             'indices': [(<numba.core.ir.Assign object at 0x00000221B6761C50>,
                          0)]})
2024-07-15 06:11:45,154 DEBUG:SSA violators <numba.core.utils.OrderedSet object at 0x00000221B69D8250>
2024-07-15 06:11:45,177 DEBUG:bytecode dump:
>          0	NOP(arg=None, lineno=2230)
           2	RESUME(arg=0, lineno=2230)
           4	LOAD_FAST(arg=0, lineno=2232)
           6	LOAD_METHOD(arg=0, lineno=2232)
          28	LOAD_FAST(arg=0, lineno=2232)
          30	LOAD_ATTR(arg=1, lineno=2232)
          40	PRECALL(arg=1, lineno=2232)
          44	CALL(arg=1, lineno=2232)
          54	RETURN_VALUE(arg=None, lineno=2232)
2024-07-15 06:11:45,177 DEBUG:pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-15 06:11:45,177 DEBUG:stack: []
2024-07-15 06:11:45,177 DEBUG:state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-15 06:11:45,177 DEBUG:dispatch pc=0, inst=NOP(arg=None, lineno=2230)
2024-07-15 06:11:45,177 DEBUG:stack []
2024-07-15 06:11:45,177 DEBUG:dispatch pc=2, inst=RESUME(arg=0, lineno=2230)
2024-07-15 06:11:45,177 DEBUG:stack []
2024-07-15 06:11:45,177 DEBUG:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2232)
2024-07-15 06:11:45,177 DEBUG:stack []
2024-07-15 06:11:45,177 DEBUG:dispatch pc=6, inst=LOAD_METHOD(arg=0, lineno=2232)
2024-07-15 06:11:45,177 DEBUG:stack ['$ary4.0']
2024-07-15 06:11:45,177 DEBUG:dispatch pc=28, inst=LOAD_FAST(arg=0, lineno=2232)
2024-07-15 06:11:45,177 DEBUG:stack ['$null$6.1', '$6load_method.2']
2024-07-15 06:11:45,177 DEBUG:dispatch pc=30, inst=LOAD_ATTR(arg=1, lineno=2232)
2024-07-15 06:11:45,177 DEBUG:stack ['$null$6.1', '$6load_method.2', '$ary28.3']
2024-07-15 06:11:45,177 DEBUG:dispatch pc=40, inst=PRECALL(arg=1, lineno=2232)
2024-07-15 06:11:45,177 DEBUG:stack ['$null$6.1', '$6load_method.2', '$30load_attr.4']
2024-07-15 06:11:45,177 DEBUG:dispatch pc=44, inst=CALL(arg=1, lineno=2232)
2024-07-15 06:11:45,177 DEBUG:stack ['$null$6.1', '$6load_method.2', '$30load_attr.4']
2024-07-15 06:11:45,177 DEBUG:dispatch pc=54, inst=RETURN_VALUE(arg=None, lineno=2232)
2024-07-15 06:11:45,177 DEBUG:stack ['$44call.5']
2024-07-15 06:11:45,178 DEBUG:end state. edges=[]
2024-07-15 06:11:45,178 DEBUG:-------------------------Prune PHIs-------------------------
2024-07-15 06:11:45,178 DEBUG:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-07-15 06:11:45,178 DEBUG:defmap: {}
2024-07-15 06:11:45,178 DEBUG:phismap: defaultdict(<class 'set'>, {})
2024-07-15 06:11:45,178 DEBUG:changing phismap: defaultdict(<class 'set'>, {})
2024-07-15 06:11:45,178 DEBUG:keep phismap: {}
2024-07-15 06:11:45,178 DEBUG:new_out: defaultdict(<class 'dict'>, {})
2024-07-15 06:11:45,178 DEBUG:----------------------DONE Prune PHIs-----------------------
2024-07-15 06:11:45,178 DEBUG:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$ary4.0'}), (6, {'item': '$ary4.0', 'res': '$6load_method.2'}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {}), (20, {}), (22, {}), (24, {}), (26, {}), (28, {'res': '$ary28.3'}), (30, {'item': '$ary28.3', 'res': '$30load_attr.4'}), (32, {}), (34, {}), (36, {}), (38, {}), (40, {}), (42, {}), (44, {'func': '$6load_method.2', 'args': ['$30load_attr.4'], 'kw_names': None, 'res': '$44call.5'}), (46, {}), (48, {}), (50, {}), (52, {}), (54, {'retval': '$44call.5', 'castval': '$54return_value.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-15 06:11:45,178 DEBUG:label 0:
    ary = arg(0, name=ary)                   ['ary']
    $6load_method.2 = getattr(value=ary, attr=reshape) ['$6load_method.2', 'ary']
    $30load_attr.4 = getattr(value=ary, attr=size) ['$30load_attr.4', 'ary']
    $44call.5 = call $6load_method.2($30load_attr.4, func=$6load_method.2, args=[Var($30load_attr.4, arrayobj.py:2232)], kws=(), vararg=None, varkwarg=None, target=None) ['$30load_attr.4', '$44call.5', '$6load_method.2']
    $54return_value.6 = cast(value=$44call.5) ['$44call.5', '$54return_value.6']
    return $54return_value.6                 ['$54return_value.6']

2024-07-15 06:11:45,185 DEBUG:==== SSA block analysis pass on 0
2024-07-15 06:11:45,185 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B7B67110>
2024-07-15 06:11:45,185 DEBUG:on stmt: ary = arg(0, name=ary)
2024-07-15 06:11:45,185 DEBUG:on stmt: $6load_method.2 = getattr(value=ary, attr=reshape)
2024-07-15 06:11:45,185 DEBUG:on stmt: $30load_attr.4 = getattr(value=ary, attr=size)
2024-07-15 06:11:45,185 DEBUG:on stmt: $44call.5 = call $6load_method.2($30load_attr.4, func=$6load_method.2, args=[Var($30load_attr.4, arrayobj.py:2232)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:45,186 DEBUG:on stmt: $54return_value.6 = cast(value=$44call.5)
2024-07-15 06:11:45,186 DEBUG:on stmt: return $54return_value.6
2024-07-15 06:11:45,186 DEBUG:defs defaultdict(<class 'list'>,
            {'$30load_attr.4': [(<numba.core.ir.Assign object at 0x00000221B7B65790>,
                                 0)],
             '$44call.5': [(<numba.core.ir.Assign object at 0x00000221B7B659D0>,
                            0)],
             '$54return_value.6': [(<numba.core.ir.Assign object at 0x00000221B7B65BD0>,
                                    0)],
             '$6load_method.2': [(<numba.core.ir.Assign object at 0x00000221B7B65490>,
                                  0)],
             'ary': [(<numba.core.ir.Assign object at 0x00000221B7B64FD0>, 0)]})
2024-07-15 06:11:45,186 DEBUG:SSA violators <numba.core.utils.OrderedSet object at 0x00000221B7B67110>
2024-07-15 06:11:45,267 DEBUG:bytecode dump:
>          0	NOP(arg=None, lineno=486)
           2	RESUME(arg=0, lineno=486)
           4	LOAD_CONST(arg=1, lineno=488)
           6	RETURN_VALUE(arg=None, lineno=488)
2024-07-15 06:11:45,268 DEBUG:pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-15 06:11:45,268 DEBUG:stack: []
2024-07-15 06:11:45,268 DEBUG:state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-15 06:11:45,268 DEBUG:dispatch pc=0, inst=NOP(arg=None, lineno=486)
2024-07-15 06:11:45,268 DEBUG:stack []
2024-07-15 06:11:45,268 DEBUG:dispatch pc=2, inst=RESUME(arg=0, lineno=486)
2024-07-15 06:11:45,268 DEBUG:stack []
2024-07-15 06:11:45,268 DEBUG:dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=488)
2024-07-15 06:11:45,268 DEBUG:stack []
2024-07-15 06:11:45,268 DEBUG:dispatch pc=6, inst=RETURN_VALUE(arg=None, lineno=488)
2024-07-15 06:11:45,268 DEBUG:stack ['$const4.0']
2024-07-15 06:11:45,268 DEBUG:end state. edges=[]
2024-07-15 06:11:45,268 DEBUG:-------------------------Prune PHIs-------------------------
2024-07-15 06:11:45,268 DEBUG:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-07-15 06:11:45,268 DEBUG:defmap: {}
2024-07-15 06:11:45,268 DEBUG:phismap: defaultdict(<class 'set'>, {})
2024-07-15 06:11:45,268 DEBUG:changing phismap: defaultdict(<class 'set'>, {})
2024-07-15 06:11:45,268 DEBUG:keep phismap: {}
2024-07-15 06:11:45,268 DEBUG:new_out: defaultdict(<class 'dict'>, {})
2024-07-15 06:11:45,268 DEBUG:----------------------DONE Prune PHIs-----------------------
2024-07-15 06:11:45,268 DEBUG:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$const4.0'}), (6, {'retval': '$const4.0', 'castval': '$6return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-15 06:11:45,268 DEBUG:label 0:
    a = arg(0, name=a)                       ['a']
    $const4.0 = const(bool, False)           ['$const4.0']
    $6return_value.1 = cast(value=$const4.0) ['$6return_value.1', '$const4.0']
    return $6return_value.1                  ['$6return_value.1']

2024-07-15 06:11:45,271 DEBUG:==== SSA block analysis pass on 0
2024-07-15 06:11:45,271 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B7DD6D50>
2024-07-15 06:11:45,271 DEBUG:on stmt: a = arg(0, name=a)
2024-07-15 06:11:45,271 DEBUG:on stmt: $const4.0 = const(bool, False)
2024-07-15 06:11:45,271 DEBUG:on stmt: $6return_value.1 = cast(value=$const4.0)
2024-07-15 06:11:45,271 DEBUG:on stmt: return $6return_value.1
2024-07-15 06:11:45,271 DEBUG:defs defaultdict(<class 'list'>,
            {'$6return_value.1': [(<numba.core.ir.Assign object at 0x00000221B7DD5E90>,
                                   0)],
             '$const4.0': [(<numba.core.ir.Assign object at 0x00000221B7DD5CD0>,
                            0)],
             'a': [(<numba.core.ir.Assign object at 0x00000221B7DD5A90>, 0)]})
2024-07-15 06:11:45,272 DEBUG:SSA violators <numba.core.utils.OrderedSet object at 0x00000221B7DD6D50>
2024-07-15 06:11:45,346 DEBUG:bytecode dump:
>          0	NOP(arg=None, lineno=481)
           2	RESUME(arg=0, lineno=481)
           4	LOAD_FAST(arg=0, lineno=483)
           6	LOAD_FAST(arg=1, lineno=483)
           8	COMPARE_OP(arg=4, lineno=483)
          14	RETURN_VALUE(arg=None, lineno=483)
2024-07-15 06:11:45,347 DEBUG:pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-15 06:11:45,347 DEBUG:stack: []
2024-07-15 06:11:45,347 DEBUG:state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-15 06:11:45,347 DEBUG:dispatch pc=0, inst=NOP(arg=None, lineno=481)
2024-07-15 06:11:45,347 DEBUG:stack []
2024-07-15 06:11:45,347 DEBUG:dispatch pc=2, inst=RESUME(arg=0, lineno=481)
2024-07-15 06:11:45,347 DEBUG:stack []
2024-07-15 06:11:45,347 DEBUG:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=483)
2024-07-15 06:11:45,347 DEBUG:stack []
2024-07-15 06:11:45,347 DEBUG:dispatch pc=6, inst=LOAD_FAST(arg=1, lineno=483)
2024-07-15 06:11:45,347 DEBUG:stack ['$a4.0']
2024-07-15 06:11:45,347 DEBUG:dispatch pc=8, inst=COMPARE_OP(arg=4, lineno=483)
2024-07-15 06:11:45,347 DEBUG:stack ['$a4.0', '$min_val6.1']
2024-07-15 06:11:45,347 DEBUG:dispatch pc=14, inst=RETURN_VALUE(arg=None, lineno=483)
2024-07-15 06:11:45,347 DEBUG:stack ['$8compare_op.2']
2024-07-15 06:11:45,347 DEBUG:end state. edges=[]
2024-07-15 06:11:45,347 DEBUG:-------------------------Prune PHIs-------------------------
2024-07-15 06:11:45,347 DEBUG:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-07-15 06:11:45,347 DEBUG:defmap: {}
2024-07-15 06:11:45,347 DEBUG:phismap: defaultdict(<class 'set'>, {})
2024-07-15 06:11:45,347 DEBUG:changing phismap: defaultdict(<class 'set'>, {})
2024-07-15 06:11:45,347 DEBUG:keep phismap: {}
2024-07-15 06:11:45,347 DEBUG:new_out: defaultdict(<class 'dict'>, {})
2024-07-15 06:11:45,347 DEBUG:----------------------DONE Prune PHIs-----------------------
2024-07-15 06:11:45,348 DEBUG:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$a4.0'}), (6, {'res': '$min_val6.1'}), (8, {'lhs': '$a4.0', 'rhs': '$min_val6.1', 'res': '$8compare_op.2'}), (10, {}), (12, {}), (14, {'retval': '$8compare_op.2', 'castval': '$14return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-15 06:11:45,348 DEBUG:label 0:
    a = arg(0, name=a)                       ['a']
    min_val = arg(1, name=min_val)           ['min_val']
    $8compare_op.2 = a > min_val             ['$8compare_op.2', 'a', 'min_val']
    $14return_value.3 = cast(value=$8compare_op.2) ['$14return_value.3', '$8compare_op.2']
    return $14return_value.3                 ['$14return_value.3']

2024-07-15 06:11:45,351 DEBUG:==== SSA block analysis pass on 0
2024-07-15 06:11:45,351 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B6142950>
2024-07-15 06:11:45,351 DEBUG:on stmt: a = arg(0, name=a)
2024-07-15 06:11:45,351 DEBUG:on stmt: min_val = arg(1, name=min_val)
2024-07-15 06:11:45,351 DEBUG:on stmt: $8compare_op.2 = a > min_val
2024-07-15 06:11:45,351 DEBUG:on stmt: $14return_value.3 = cast(value=$8compare_op.2)
2024-07-15 06:11:45,351 DEBUG:on stmt: return $14return_value.3
2024-07-15 06:11:45,351 DEBUG:defs defaultdict(<class 'list'>,
            {'$14return_value.3': [(<numba.core.ir.Assign object at 0x00000221B6141890>,
                                    0)],
             '$8compare_op.2': [(<numba.core.ir.Assign object at 0x00000221B6142050>,
                                 0)],
             'a': [(<numba.core.ir.Assign object at 0x00000221B6143CD0>, 0)],
             'min_val': [(<numba.core.ir.Assign object at 0x00000221B6143B50>,
                          0)]})
2024-07-15 06:11:45,351 DEBUG:SSA violators <numba.core.utils.OrderedSet object at 0x00000221B6142950>
2024-07-15 06:11:45,482 DEBUG:bytecode dump:
>          0	NOP(arg=None, lineno=437)
           2	COPY_FREE_VARS(arg=1, lineno=437)
           4	RESUME(arg=0, lineno=437)
           6	LOAD_DEREF(arg=3, lineno=440)
           8	STORE_FAST(arg=1, lineno=440)
          10	LOAD_GLOBAL(arg=1, lineno=441)
          22	LOAD_ATTR(arg=1, lineno=441)
          32	LOAD_FAST(arg=0, lineno=441)
          34	PRECALL(arg=1, lineno=441)
          38	CALL(arg=1, lineno=441)
          48	GET_ITER(arg=None, lineno=441)
>         50	FOR_ITER(arg=25, lineno=441)
          52	STORE_FAST(arg=2, lineno=441)
          54	LOAD_FAST(arg=1, lineno=442)
          56	LOAD_FAST(arg=2, lineno=442)
          58	LOAD_METHOD(arg=2, lineno=442)
          80	PRECALL(arg=0, lineno=442)
          84	CALL(arg=0, lineno=442)
          94	BINARY_OP(arg=13, lineno=442)
          98	STORE_FAST(arg=1, lineno=442)
         100	JUMP_BACKWARD(arg=26, lineno=442)
>        102	LOAD_FAST(arg=1, lineno=443)
         104	LOAD_FAST(arg=0, lineno=443)
         106	LOAD_ATTR(arg=3, lineno=443)
         116	BINARY_OP(arg=11, lineno=443)
         120	RETURN_VALUE(arg=None, lineno=443)
2024-07-15 06:11:45,482 DEBUG:pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-15 06:11:45,482 DEBUG:stack: []
2024-07-15 06:11:45,482 DEBUG:state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-15 06:11:45,482 DEBUG:dispatch pc=0, inst=NOP(arg=None, lineno=437)
2024-07-15 06:11:45,482 DEBUG:stack []
2024-07-15 06:11:45,483 DEBUG:dispatch pc=2, inst=COPY_FREE_VARS(arg=1, lineno=437)
2024-07-15 06:11:45,483 DEBUG:stack []
2024-07-15 06:11:45,483 DEBUG:dispatch pc=4, inst=RESUME(arg=0, lineno=437)
2024-07-15 06:11:45,483 DEBUG:stack []
2024-07-15 06:11:45,483 DEBUG:dispatch pc=6, inst=LOAD_DEREF(arg=3, lineno=440)
2024-07-15 06:11:45,483 DEBUG:stack []
2024-07-15 06:11:45,483 DEBUG:dispatch pc=8, inst=STORE_FAST(arg=1, lineno=440)
2024-07-15 06:11:45,483 DEBUG:stack ['$6load_deref.0']
2024-07-15 06:11:45,483 DEBUG:dispatch pc=10, inst=LOAD_GLOBAL(arg=1, lineno=441)
2024-07-15 06:11:45,483 DEBUG:stack []
2024-07-15 06:11:45,483 DEBUG:dispatch pc=22, inst=LOAD_ATTR(arg=1, lineno=441)
2024-07-15 06:11:45,483 DEBUG:stack ['$null$10.2', '$10load_global.1']
2024-07-15 06:11:45,483 DEBUG:dispatch pc=32, inst=LOAD_FAST(arg=0, lineno=441)
2024-07-15 06:11:45,483 DEBUG:stack ['$null$10.2', '$22load_attr.3']
2024-07-15 06:11:45,483 DEBUG:dispatch pc=34, inst=PRECALL(arg=1, lineno=441)
2024-07-15 06:11:45,483 DEBUG:stack ['$null$10.2', '$22load_attr.3', '$a32.4']
2024-07-15 06:11:45,483 DEBUG:dispatch pc=38, inst=CALL(arg=1, lineno=441)
2024-07-15 06:11:45,483 DEBUG:stack ['$null$10.2', '$22load_attr.3', '$a32.4']
2024-07-15 06:11:45,483 DEBUG:dispatch pc=48, inst=GET_ITER(arg=None, lineno=441)
2024-07-15 06:11:45,483 DEBUG:stack ['$38call.5']
2024-07-15 06:11:45,484 DEBUG:end state. edges=[Edge(pc=50, stack=('$48get_iter.6',), blockstack=(), npush=0)]
2024-07-15 06:11:45,484 DEBUG:pending: deque([State(pc_initial=50 nstack_initial=1)])
2024-07-15 06:11:45,484 DEBUG:stack: ['$phi50.0']
2024-07-15 06:11:45,484 DEBUG:state.pc_initial: State(pc_initial=50 nstack_initial=1)
2024-07-15 06:11:45,484 DEBUG:dispatch pc=50, inst=FOR_ITER(arg=25, lineno=441)
2024-07-15 06:11:45,484 DEBUG:stack ['$phi50.0']
2024-07-15 06:11:45,484 DEBUG:end state. edges=[Edge(pc=102, stack=(), blockstack=(), npush=0), Edge(pc=52, stack=('$phi50.0', '$50for_iter.2'), blockstack=(), npush=0)]
2024-07-15 06:11:45,484 DEBUG:pending: deque([State(pc_initial=102 nstack_initial=0), State(pc_initial=52 nstack_initial=2)])
2024-07-15 06:11:45,484 DEBUG:stack: []
2024-07-15 06:11:45,484 DEBUG:state.pc_initial: State(pc_initial=102 nstack_initial=0)
2024-07-15 06:11:45,484 DEBUG:dispatch pc=102, inst=LOAD_FAST(arg=1, lineno=443)
2024-07-15 06:11:45,484 DEBUG:stack []
2024-07-15 06:11:45,484 DEBUG:dispatch pc=104, inst=LOAD_FAST(arg=0, lineno=443)
2024-07-15 06:11:45,484 DEBUG:stack ['$c102.0']
2024-07-15 06:11:45,484 DEBUG:dispatch pc=106, inst=LOAD_ATTR(arg=3, lineno=443)
2024-07-15 06:11:45,484 DEBUG:stack ['$c102.0', '$a104.1']
2024-07-15 06:11:45,484 DEBUG:dispatch pc=116, inst=BINARY_OP(arg=11, lineno=443)
2024-07-15 06:11:45,484 DEBUG:stack ['$c102.0', '$106load_attr.2']
2024-07-15 06:11:45,484 DEBUG:dispatch pc=120, inst=RETURN_VALUE(arg=None, lineno=443)
2024-07-15 06:11:45,484 DEBUG:stack ['$binop_truediv116.3']
2024-07-15 06:11:45,484 DEBUG:end state. edges=[]
2024-07-15 06:11:45,484 DEBUG:pending: deque([State(pc_initial=52 nstack_initial=2)])
2024-07-15 06:11:45,485 DEBUG:stack: ['$phi52.0', '$phi52.1']
2024-07-15 06:11:45,485 DEBUG:state.pc_initial: State(pc_initial=52 nstack_initial=2)
2024-07-15 06:11:45,485 DEBUG:dispatch pc=52, inst=STORE_FAST(arg=2, lineno=441)
2024-07-15 06:11:45,485 DEBUG:stack ['$phi52.0', '$phi52.1']
2024-07-15 06:11:45,485 DEBUG:dispatch pc=54, inst=LOAD_FAST(arg=1, lineno=442)
2024-07-15 06:11:45,485 DEBUG:stack ['$phi52.0']
2024-07-15 06:11:45,485 DEBUG:dispatch pc=56, inst=LOAD_FAST(arg=2, lineno=442)
2024-07-15 06:11:45,485 DEBUG:stack ['$phi52.0', '$c54.2']
2024-07-15 06:11:45,485 DEBUG:dispatch pc=58, inst=LOAD_METHOD(arg=2, lineno=442)
2024-07-15 06:11:45,485 DEBUG:stack ['$phi52.0', '$c54.2', '$v56.3']
2024-07-15 06:11:45,485 DEBUG:dispatch pc=80, inst=PRECALL(arg=0, lineno=442)
2024-07-15 06:11:45,485 DEBUG:stack ['$phi52.0', '$c54.2', '$null$58.4', '$58load_method.5']
2024-07-15 06:11:45,485 DEBUG:dispatch pc=84, inst=CALL(arg=0, lineno=442)
2024-07-15 06:11:45,485 DEBUG:stack ['$phi52.0', '$c54.2', '$null$58.4', '$58load_method.5']
2024-07-15 06:11:45,485 DEBUG:dispatch pc=94, inst=BINARY_OP(arg=13, lineno=442)
2024-07-15 06:11:45,485 DEBUG:stack ['$phi52.0', '$c54.2', '$84call.6']
2024-07-15 06:11:45,485 DEBUG:dispatch pc=98, inst=STORE_FAST(arg=1, lineno=442)
2024-07-15 06:11:45,485 DEBUG:stack ['$phi52.0', '$binop_iadd94.7']
2024-07-15 06:11:45,485 DEBUG:dispatch pc=100, inst=JUMP_BACKWARD(arg=26, lineno=442)
2024-07-15 06:11:45,485 DEBUG:stack ['$phi52.0']
2024-07-15 06:11:45,485 DEBUG:end state. edges=[Edge(pc=50, stack=('$phi52.0',), blockstack=(), npush=0)]
2024-07-15 06:11:45,485 DEBUG:pending: deque([State(pc_initial=50 nstack_initial=1)])
2024-07-15 06:11:45,486 DEBUG:-------------------------Prune PHIs-------------------------
2024-07-15 06:11:45,486 DEBUG:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=50 nstack_initial=1): {'$phi50.0'},
             State(pc_initial=52 nstack_initial=2): {'$phi52.1'},
             State(pc_initial=102 nstack_initial=0): set()})
2024-07-15 06:11:45,486 DEBUG:defmap: {'$phi50.0': State(pc_initial=0 nstack_initial=0),
 '$phi52.1': State(pc_initial=50 nstack_initial=1)}
2024-07-15 06:11:45,486 DEBUG:phismap: defaultdict(<class 'set'>,
            {'$phi50.0': {('$48get_iter.6',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi52.0', State(pc_initial=52 nstack_initial=2))},
             '$phi52.0': {('$phi50.0', State(pc_initial=50 nstack_initial=1))},
             '$phi52.1': {('$50for_iter.2',
                           State(pc_initial=50 nstack_initial=1))}})
2024-07-15 06:11:45,486 DEBUG:changing phismap: defaultdict(<class 'set'>,
            {'$phi50.0': {('$48get_iter.6',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi50.0', State(pc_initial=50 nstack_initial=1))},
             '$phi52.0': {('$48get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.1': {('$50for_iter.2',
                           State(pc_initial=50 nstack_initial=1))}})
2024-07-15 06:11:45,486 DEBUG:changing phismap: defaultdict(<class 'set'>,
            {'$phi50.0': {('$48get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.0': {('$48get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.1': {('$50for_iter.2',
                           State(pc_initial=50 nstack_initial=1))}})
2024-07-15 06:11:45,486 DEBUG:changing phismap: defaultdict(<class 'set'>,
            {'$phi50.0': {('$48get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.0': {('$48get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.1': {('$50for_iter.2',
                           State(pc_initial=50 nstack_initial=1))}})
2024-07-15 06:11:45,487 DEBUG:keep phismap: {'$phi50.0': {('$48get_iter.6', State(pc_initial=0 nstack_initial=0))},
 '$phi52.1': {('$50for_iter.2', State(pc_initial=50 nstack_initial=1))}}
2024-07-15 06:11:45,487 DEBUG:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi50.0': '$48get_iter.6'},
             State(pc_initial=50 nstack_initial=1): {'$phi52.1': '$50for_iter.2'}})
2024-07-15 06:11:45,487 DEBUG:----------------------DONE Prune PHIs-----------------------
2024-07-15 06:11:45,487 DEBUG:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {}), (6, {'res': '$6load_deref.0'}), (8, {'value': '$6load_deref.0'}), (10, {'idx': 0, 'res': '$10load_global.1'}), (12, {}), (14, {}), (16, {}), (18, {}), (20, {}), (22, {'item': '$10load_global.1', 'res': '$22load_attr.3'}), (24, {}), (26, {}), (28, {}), (30, {}), (32, {'res': '$a32.4'}), (34, {}), (36, {}), (38, {'func': '$22load_attr.3', 'args': ['$a32.4'], 'kw_names': None, 'res': '$38call.5'}), (40, {}), (42, {}), (44, {}), (46, {}), (48, {'value': '$38call.5', 'res': '$48get_iter.6'})), outgoing_phis={'$phi50.0': '$48get_iter.6'}, blockstack=(), active_try_block=None, outgoing_edgepushed={50: ('$48get_iter.6',)})
2024-07-15 06:11:45,487 DEBUG:block_infos State(pc_initial=50 nstack_initial=1):
AdaptBlockInfo(insts=((50, {'iterator': '$phi50.0', 'pair': '$50for_iter.1', 'indval': '$50for_iter.2', 'pred': '$50for_iter.3'}),), outgoing_phis={'$phi52.1': '$50for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={102: (), 52: ('$phi50.0', '$50for_iter.2')})
2024-07-15 06:11:45,487 DEBUG:block_infos State(pc_initial=52 nstack_initial=2):
AdaptBlockInfo(insts=((52, {'value': '$phi52.1'}), (54, {'res': '$c54.2'}), (56, {'res': '$v56.3'}), (58, {'item': '$v56.3', 'res': '$58load_method.5'}), (60, {}), (62, {}), (64, {}), (66, {}), (68, {}), (70, {}), (72, {}), (74, {}), (76, {}), (78, {}), (80, {}), (82, {}), (84, {'func': '$58load_method.5', 'args': [], 'kw_names': None, 'res': '$84call.6'}), (86, {}), (88, {}), (90, {}), (92, {}), (94, {'op': '+=', 'lhs': '$c54.2', 'rhs': '$84call.6', 'res': '$binop_iadd94.7'}), (96, {}), (98, {'value': '$binop_iadd94.7'}), (100, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={50: ('$phi52.0',)})
2024-07-15 06:11:45,487 DEBUG:block_infos State(pc_initial=102 nstack_initial=0):
AdaptBlockInfo(insts=((102, {'res': '$c102.0'}), (104, {'res': '$a104.1'}), (106, {'item': '$a104.1', 'res': '$106load_attr.2'}), (108, {}), (110, {}), (112, {}), (114, {}), (116, {'op': '/', 'lhs': '$c102.0', 'rhs': '$106load_attr.2', 'res': '$binop_truediv116.3'}), (118, {}), (120, {'retval': '$binop_truediv116.3', 'castval': '$120return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-15 06:11:45,488 DEBUG:label 0:
    a = arg(0, name=a)                       ['a']
    c = freevar(acc_init: 0.0)               ['c']
    $10load_global.1 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$10load_global.1']
    $22load_attr.3 = getattr(value=$10load_global.1, attr=nditer) ['$10load_global.1', '$22load_attr.3']
    $38call.5 = call $22load_attr.3(a, func=$22load_attr.3, args=[Var(a, arraymath.py:437)], kws=(), vararg=None, varkwarg=None, target=None) ['$22load_attr.3', '$38call.5', 'a']
    $48get_iter.6 = getiter(value=$38call.5) ['$38call.5', '$48get_iter.6']
    $phi50.0 = $48get_iter.6                 ['$48get_iter.6', '$phi50.0']
    jump 50                                  []
label 50:
    $50for_iter.1 = iternext(value=$phi50.0) ['$50for_iter.1', '$phi50.0']
    $50for_iter.2 = pair_first(value=$50for_iter.1) ['$50for_iter.1', '$50for_iter.2']
    $50for_iter.3 = pair_second(value=$50for_iter.1) ['$50for_iter.1', '$50for_iter.3']
    $phi52.1 = $50for_iter.2                 ['$50for_iter.2', '$phi52.1']
    branch $50for_iter.3, 52, 102            ['$50for_iter.3']
label 52:
    v = $phi52.1                             ['$phi52.1', 'v']
    $58load_method.5 = getattr(value=v, attr=item) ['$58load_method.5', 'v']
    $84call.6 = call $58load_method.5(func=$58load_method.5, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$58load_method.5', '$84call.6']
    $binop_iadd94.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$84call.6, static_lhs=Undefined, static_rhs=Undefined) ['$84call.6', '$binop_iadd94.7', 'c']
    c = $binop_iadd94.7                      ['$binop_iadd94.7', 'c']
    jump 50                                  []
label 102:
    $106load_attr.2 = getattr(value=a, attr=size) ['$106load_attr.2', 'a']
    $binop_truediv116.3 = c / $106load_attr.2 ['$106load_attr.2', '$binop_truediv116.3', 'c']
    $120return_value.4 = cast(value=$binop_truediv116.3) ['$120return_value.4', '$binop_truediv116.3']
    return $120return_value.4                ['$120return_value.4']

2024-07-15 06:11:45,499 DEBUG:==== SSA block analysis pass on 0
2024-07-15 06:11:45,499 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5F71890>
2024-07-15 06:11:45,499 DEBUG:on stmt: a = arg(0, name=a)
2024-07-15 06:11:45,499 DEBUG:on stmt: c = freevar(acc_init: 0.0)
2024-07-15 06:11:45,499 DEBUG:on stmt: $10load_global.1 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:45,499 DEBUG:on stmt: $22load_attr.3 = getattr(value=$10load_global.1, attr=nditer)
2024-07-15 06:11:45,499 DEBUG:on stmt: $38call.5 = call $22load_attr.3(a, func=$22load_attr.3, args=[Var(a, arraymath.py:437)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:45,499 DEBUG:on stmt: $48get_iter.6 = getiter(value=$38call.5)
2024-07-15 06:11:45,499 DEBUG:on stmt: $phi50.0 = $48get_iter.6
2024-07-15 06:11:45,499 DEBUG:on stmt: jump 50
2024-07-15 06:11:45,499 DEBUG:==== SSA block analysis pass on 50
2024-07-15 06:11:45,499 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5F71890>
2024-07-15 06:11:45,499 DEBUG:on stmt: $50for_iter.1 = iternext(value=$phi50.0)
2024-07-15 06:11:45,499 DEBUG:on stmt: $50for_iter.2 = pair_first(value=$50for_iter.1)
2024-07-15 06:11:45,499 DEBUG:on stmt: $50for_iter.3 = pair_second(value=$50for_iter.1)
2024-07-15 06:11:45,499 DEBUG:on stmt: $phi52.1 = $50for_iter.2
2024-07-15 06:11:45,500 DEBUG:on stmt: branch $50for_iter.3, 52, 102
2024-07-15 06:11:45,500 DEBUG:==== SSA block analysis pass on 52
2024-07-15 06:11:45,500 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5F71890>
2024-07-15 06:11:45,500 DEBUG:on stmt: v = $phi52.1
2024-07-15 06:11:45,500 DEBUG:on stmt: $58load_method.5 = getattr(value=v, attr=item)
2024-07-15 06:11:45,500 DEBUG:on stmt: $84call.6 = call $58load_method.5(func=$58load_method.5, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:45,500 DEBUG:on stmt: $binop_iadd94.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$84call.6, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:45,500 DEBUG:on stmt: c = $binop_iadd94.7
2024-07-15 06:11:45,500 DEBUG:on stmt: jump 50
2024-07-15 06:11:45,500 DEBUG:==== SSA block analysis pass on 102
2024-07-15 06:11:45,500 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5F71890>
2024-07-15 06:11:45,500 DEBUG:on stmt: $106load_attr.2 = getattr(value=a, attr=size)
2024-07-15 06:11:45,500 DEBUG:on stmt: $binop_truediv116.3 = c / $106load_attr.2
2024-07-15 06:11:45,500 DEBUG:on stmt: $120return_value.4 = cast(value=$binop_truediv116.3)
2024-07-15 06:11:45,500 DEBUG:on stmt: return $120return_value.4
2024-07-15 06:11:45,500 DEBUG:defs defaultdict(<class 'list'>,
            {'$106load_attr.2': [(<numba.core.ir.Assign object at 0x00000221B67D4410>,
                                  102)],
             '$10load_global.1': [(<numba.core.ir.Assign object at 0x00000221B5F70450>,
                                   0)],
             '$120return_value.4': [(<numba.core.ir.Assign object at 0x00000221B67D5550>,
                                     102)],
             '$22load_attr.3': [(<numba.core.ir.Assign object at 0x00000221B5F72450>,
                                 0)],
             '$38call.5': [(<numba.core.ir.Assign object at 0x00000221B5F73710>,
                            0)],
             '$48get_iter.6': [(<numba.core.ir.Assign object at 0x00000221B5F70610>,
                                0)],
             '$50for_iter.1': [(<numba.core.ir.Assign object at 0x00000221B67D4E90>,
                                50)],
             '$50for_iter.2': [(<numba.core.ir.Assign object at 0x00000221B67D7790>,
                                50)],
             '$50for_iter.3': [(<numba.core.ir.Assign object at 0x00000221B67D4110>,
                                50)],
             '$58load_method.5': [(<numba.core.ir.Assign object at 0x00000221B67D69D0>,
                                   52)],
             '$84call.6': [(<numba.core.ir.Assign object at 0x00000221B67D6F90>,
                            52)],
             '$binop_iadd94.7': [(<numba.core.ir.Assign object at 0x00000221B67D56D0>,
                                  52)],
             '$binop_truediv116.3': [(<numba.core.ir.Assign object at 0x00000221B67D4ED0>,
                                      102)],
             '$phi50.0': [(<numba.core.ir.Assign object at 0x00000221B5F70410>,
                           0)],
             '$phi52.1': [(<numba.core.ir.Assign object at 0x00000221B67D6810>,
                           50)],
             'a': [(<numba.core.ir.Assign object at 0x00000221B5F72850>, 0)],
             'c': [(<numba.core.ir.Assign object at 0x00000221B5F71410>, 0),
                   (<numba.core.ir.Assign object at 0x00000221B67D48D0>, 52)],
             'v': [(<numba.core.ir.Assign object at 0x00000221B67D6510>, 52)]})
2024-07-15 06:11:45,501 DEBUG:SSA violators <numba.core.utils.OrderedSet object at 0x00000221B5F71890>
2024-07-15 06:11:45,501 DEBUG:Fix SSA violator on var c
2024-07-15 06:11:45,501 DEBUG:==== SSA block rewrite pass on 0
2024-07-15 06:11:45,501 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B7B45F10>
2024-07-15 06:11:45,501 DEBUG:on stmt: a = arg(0, name=a)
2024-07-15 06:11:45,501 DEBUG:on stmt: c = freevar(acc_init: 0.0)
2024-07-15 06:11:45,501 DEBUG:first assign: c
2024-07-15 06:11:45,501 DEBUG:replaced with: c = freevar(acc_init: 0.0)
2024-07-15 06:11:45,501 DEBUG:on stmt: $10load_global.1 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:45,501 DEBUG:on stmt: $22load_attr.3 = getattr(value=$10load_global.1, attr=nditer)
2024-07-15 06:11:45,501 DEBUG:on stmt: $38call.5 = call $22load_attr.3(a, func=$22load_attr.3, args=[Var(a, arraymath.py:437)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:45,501 DEBUG:on stmt: $48get_iter.6 = getiter(value=$38call.5)
2024-07-15 06:11:45,501 DEBUG:on stmt: $phi50.0 = $48get_iter.6
2024-07-15 06:11:45,501 DEBUG:on stmt: jump 50
2024-07-15 06:11:45,501 DEBUG:==== SSA block rewrite pass on 50
2024-07-15 06:11:45,501 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B7B45F10>
2024-07-15 06:11:45,501 DEBUG:on stmt: $50for_iter.1 = iternext(value=$phi50.0)
2024-07-15 06:11:45,501 DEBUG:on stmt: $50for_iter.2 = pair_first(value=$50for_iter.1)
2024-07-15 06:11:45,501 DEBUG:on stmt: $50for_iter.3 = pair_second(value=$50for_iter.1)
2024-07-15 06:11:45,501 DEBUG:on stmt: $phi52.1 = $50for_iter.2
2024-07-15 06:11:45,501 DEBUG:on stmt: branch $50for_iter.3, 52, 102
2024-07-15 06:11:45,501 DEBUG:==== SSA block rewrite pass on 52
2024-07-15 06:11:45,501 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B7B45F10>
2024-07-15 06:11:45,501 DEBUG:on stmt: v = $phi52.1
2024-07-15 06:11:45,501 DEBUG:on stmt: $58load_method.5 = getattr(value=v, attr=item)
2024-07-15 06:11:45,501 DEBUG:on stmt: $84call.6 = call $58load_method.5(func=$58load_method.5, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:45,501 DEBUG:on stmt: $binop_iadd94.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$84call.6, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:45,501 DEBUG:on stmt: c = $binop_iadd94.7
2024-07-15 06:11:45,501 DEBUG:replaced with: c.1 = $binop_iadd94.7
2024-07-15 06:11:45,501 DEBUG:on stmt: jump 50
2024-07-15 06:11:45,501 DEBUG:==== SSA block rewrite pass on 102
2024-07-15 06:11:45,501 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B7B45F10>
2024-07-15 06:11:45,501 DEBUG:on stmt: $106load_attr.2 = getattr(value=a, attr=size)
2024-07-15 06:11:45,502 DEBUG:on stmt: $binop_truediv116.3 = c / $106load_attr.2
2024-07-15 06:11:45,502 DEBUG:on stmt: $120return_value.4 = cast(value=$binop_truediv116.3)
2024-07-15 06:11:45,502 DEBUG:on stmt: return $120return_value.4
2024-07-15 06:11:45,502 DEBUG:Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x00000221B7B44DD0>],
             52: [<numba.core.ir.Assign object at 0x00000221B7B46190>]})
2024-07-15 06:11:45,502 DEBUG:==== SSA block rewrite pass on 0
2024-07-15 06:11:45,502 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B7B47990>
2024-07-15 06:11:45,502 DEBUG:on stmt: a = arg(0, name=a)
2024-07-15 06:11:45,502 DEBUG:on stmt: c = freevar(acc_init: 0.0)
2024-07-15 06:11:45,502 DEBUG:on stmt: $10load_global.1 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:45,502 DEBUG:on stmt: $22load_attr.3 = getattr(value=$10load_global.1, attr=nditer)
2024-07-15 06:11:45,502 DEBUG:on stmt: $38call.5 = call $22load_attr.3(a, func=$22load_attr.3, args=[Var(a, arraymath.py:437)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:45,502 DEBUG:on stmt: $48get_iter.6 = getiter(value=$38call.5)
2024-07-15 06:11:45,502 DEBUG:on stmt: $phi50.0 = $48get_iter.6
2024-07-15 06:11:45,502 DEBUG:on stmt: jump 50
2024-07-15 06:11:45,502 DEBUG:==== SSA block rewrite pass on 50
2024-07-15 06:11:45,502 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B7B47990>
2024-07-15 06:11:45,502 DEBUG:on stmt: $50for_iter.1 = iternext(value=$phi50.0)
2024-07-15 06:11:45,502 DEBUG:on stmt: $50for_iter.2 = pair_first(value=$50for_iter.1)
2024-07-15 06:11:45,502 DEBUG:on stmt: $50for_iter.3 = pair_second(value=$50for_iter.1)
2024-07-15 06:11:45,502 DEBUG:on stmt: $phi52.1 = $50for_iter.2
2024-07-15 06:11:45,502 DEBUG:on stmt: branch $50for_iter.3, 52, 102
2024-07-15 06:11:45,502 DEBUG:==== SSA block rewrite pass on 52
2024-07-15 06:11:45,502 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B7B47990>
2024-07-15 06:11:45,502 DEBUG:on stmt: v = $phi52.1
2024-07-15 06:11:45,502 DEBUG:on stmt: $58load_method.5 = getattr(value=v, attr=item)
2024-07-15 06:11:45,502 DEBUG:on stmt: $84call.6 = call $58load_method.5(func=$58load_method.5, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:45,502 DEBUG:on stmt: $binop_iadd94.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$84call.6, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:45,502 DEBUG:find_def var='c' stmt=$binop_iadd94.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$84call.6, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:45,502 DEBUG:find_def_from_top label 52
2024-07-15 06:11:45,502 DEBUG:idom 50 from label 52
2024-07-15 06:11:45,502 DEBUG:find_def_from_bottom label 50
2024-07-15 06:11:45,502 DEBUG:find_def_from_top label 50
2024-07-15 06:11:45,502 DEBUG:insert phi node c.2 = phi(incoming_values=[], incoming_blocks=[]) at 50
2024-07-15 06:11:45,503 DEBUG:find_def_from_bottom label 0
2024-07-15 06:11:45,503 DEBUG:incoming_def c = freevar(acc_init: 0.0)
2024-07-15 06:11:45,503 DEBUG:find_def_from_bottom label 52
2024-07-15 06:11:45,503 DEBUG:incoming_def c.1 = $binop_iadd94.7
2024-07-15 06:11:45,503 DEBUG:replaced with: $binop_iadd94.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c.2, rhs=$84call.6, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:45,503 DEBUG:on stmt: c.1 = $binop_iadd94.7
2024-07-15 06:11:45,503 DEBUG:on stmt: jump 50
2024-07-15 06:11:45,503 DEBUG:==== SSA block rewrite pass on 102
2024-07-15 06:11:45,503 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B7B47990>
2024-07-15 06:11:45,503 DEBUG:on stmt: $106load_attr.2 = getattr(value=a, attr=size)
2024-07-15 06:11:45,503 DEBUG:on stmt: $binop_truediv116.3 = c / $106load_attr.2
2024-07-15 06:11:45,503 DEBUG:find_def var='c' stmt=$binop_truediv116.3 = c / $106load_attr.2
2024-07-15 06:11:45,503 DEBUG:find_def_from_top label 102
2024-07-15 06:11:45,503 DEBUG:idom 50 from label 102
2024-07-15 06:11:45,503 DEBUG:find_def_from_bottom label 50
2024-07-15 06:11:45,503 DEBUG:replaced with: $binop_truediv116.3 = c.2 / $106load_attr.2
2024-07-15 06:11:45,503 DEBUG:on stmt: $120return_value.4 = cast(value=$binop_truediv116.3)
2024-07-15 06:11:45,503 DEBUG:on stmt: return $120return_value.4
2024-07-15 06:11:46,499 DEBUG:bytecode dump:
>          0	NOP(arg=None, lineno=2452)
           2	RESUME(arg=0, lineno=2452)
           4	LOAD_FAST(arg=0, lineno=2457)
           6	LOAD_ATTR(arg=0, lineno=2457)
          16	LOAD_CONST(arg=1, lineno=2457)
          18	BINARY_OP(arg=8, lineno=2457)
          22	LOAD_FAST(arg=0, lineno=2457)
          24	LOAD_ATTR(arg=1, lineno=2457)
          34	LOAD_CONST(arg=1, lineno=2457)
          36	BINARY_OP(arg=8, lineno=2457)
          40	BINARY_OP(arg=0, lineno=2457)
          44	RETURN_VALUE(arg=None, lineno=2457)
2024-07-15 06:11:46,500 DEBUG:pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-15 06:11:46,500 DEBUG:stack: []
2024-07-15 06:11:46,500 DEBUG:state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-15 06:11:46,500 DEBUG:dispatch pc=0, inst=NOP(arg=None, lineno=2452)
2024-07-15 06:11:46,500 DEBUG:stack []
2024-07-15 06:11:46,500 DEBUG:dispatch pc=2, inst=RESUME(arg=0, lineno=2452)
2024-07-15 06:11:46,500 DEBUG:stack []
2024-07-15 06:11:46,500 DEBUG:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2457)
2024-07-15 06:11:46,500 DEBUG:stack []
2024-07-15 06:11:46,500 DEBUG:dispatch pc=6, inst=LOAD_ATTR(arg=0, lineno=2457)
2024-07-15 06:11:46,500 DEBUG:stack ['$x4.0']
2024-07-15 06:11:46,500 DEBUG:dispatch pc=16, inst=LOAD_CONST(arg=1, lineno=2457)
2024-07-15 06:11:46,500 DEBUG:stack ['$6load_attr.1']
2024-07-15 06:11:46,500 DEBUG:dispatch pc=18, inst=BINARY_OP(arg=8, lineno=2457)
2024-07-15 06:11:46,500 DEBUG:stack ['$6load_attr.1', '$const16.2']
2024-07-15 06:11:46,500 DEBUG:dispatch pc=22, inst=LOAD_FAST(arg=0, lineno=2457)
2024-07-15 06:11:46,500 DEBUG:stack ['$binop_pow18.3']
2024-07-15 06:11:46,500 DEBUG:dispatch pc=24, inst=LOAD_ATTR(arg=1, lineno=2457)
2024-07-15 06:11:46,500 DEBUG:stack ['$binop_pow18.3', '$x22.4']
2024-07-15 06:11:46,500 DEBUG:dispatch pc=34, inst=LOAD_CONST(arg=1, lineno=2457)
2024-07-15 06:11:46,500 DEBUG:stack ['$binop_pow18.3', '$24load_attr.5']
2024-07-15 06:11:46,500 DEBUG:dispatch pc=36, inst=BINARY_OP(arg=8, lineno=2457)
2024-07-15 06:11:46,500 DEBUG:stack ['$binop_pow18.3', '$24load_attr.5', '$const34.6']
2024-07-15 06:11:46,500 DEBUG:dispatch pc=40, inst=BINARY_OP(arg=0, lineno=2457)
2024-07-15 06:11:46,500 DEBUG:stack ['$binop_pow18.3', '$binop_pow36.7']
2024-07-15 06:11:46,500 DEBUG:dispatch pc=44, inst=RETURN_VALUE(arg=None, lineno=2457)
2024-07-15 06:11:46,500 DEBUG:stack ['$binop_add40.8']
2024-07-15 06:11:46,500 DEBUG:end state. edges=[]
2024-07-15 06:11:46,500 DEBUG:-------------------------Prune PHIs-------------------------
2024-07-15 06:11:46,501 DEBUG:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-07-15 06:11:46,501 DEBUG:defmap: {}
2024-07-15 06:11:46,501 DEBUG:phismap: defaultdict(<class 'set'>, {})
2024-07-15 06:11:46,501 DEBUG:changing phismap: defaultdict(<class 'set'>, {})
2024-07-15 06:11:46,501 DEBUG:keep phismap: {}
2024-07-15 06:11:46,501 DEBUG:new_out: defaultdict(<class 'dict'>, {})
2024-07-15 06:11:46,501 DEBUG:----------------------DONE Prune PHIs-----------------------
2024-07-15 06:11:46,501 DEBUG:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'item': '$x4.0', 'res': '$6load_attr.1'}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$const16.2'}), (18, {'op': '**', 'lhs': '$6load_attr.1', 'rhs': '$const16.2', 'res': '$binop_pow18.3'}), (20, {}), (22, {'res': '$x22.4'}), (24, {'item': '$x22.4', 'res': '$24load_attr.5'}), (26, {}), (28, {}), (30, {}), (32, {}), (34, {'res': '$const34.6'}), (36, {'op': '**', 'lhs': '$24load_attr.5', 'rhs': '$const34.6', 'res': '$binop_pow36.7'}), (38, {}), (40, {'op': '+', 'lhs': '$binop_pow18.3', 'rhs': '$binop_pow36.7', 'res': '$binop_add40.8'}), (42, {}), (44, {'retval': '$binop_add40.8', 'castval': '$44return_value.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-15 06:11:46,501 DEBUG:label 0:
    x = arg(0, name=x)                       ['x']
    $6load_attr.1 = getattr(value=x, attr=real) ['$6load_attr.1', 'x']
    $const16.2 = const(int, 2)               ['$const16.2']
    $binop_pow18.3 = $6load_attr.1 ** $const16.2 ['$6load_attr.1', '$binop_pow18.3', '$const16.2']
    $24load_attr.5 = getattr(value=x, attr=imag) ['$24load_attr.5', 'x']
    $const34.6 = const(int, 2)               ['$const34.6']
    $binop_pow36.7 = $24load_attr.5 ** $const34.6 ['$24load_attr.5', '$binop_pow36.7', '$const34.6']
    $binop_add40.8 = $binop_pow18.3 + $binop_pow36.7 ['$binop_add40.8', '$binop_pow18.3', '$binop_pow36.7']
    $44return_value.9 = cast(value=$binop_add40.8) ['$44return_value.9', '$binop_add40.8']
    return $44return_value.9                 ['$44return_value.9']

2024-07-15 06:11:46,504 DEBUG:==== SSA block analysis pass on 0
2024-07-15 06:11:46,504 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B6785310>
2024-07-15 06:11:46,504 DEBUG:on stmt: x = arg(0, name=x)
2024-07-15 06:11:46,504 DEBUG:on stmt: $6load_attr.1 = getattr(value=x, attr=real)
2024-07-15 06:11:46,504 DEBUG:on stmt: $const16.2 = const(int, 2)
2024-07-15 06:11:46,504 DEBUG:on stmt: $binop_pow18.3 = $6load_attr.1 ** $const16.2
2024-07-15 06:11:46,504 DEBUG:on stmt: $24load_attr.5 = getattr(value=x, attr=imag)
2024-07-15 06:11:46,504 DEBUG:on stmt: $const34.6 = const(int, 2)
2024-07-15 06:11:46,504 DEBUG:on stmt: $binop_pow36.7 = $24load_attr.5 ** $const34.6
2024-07-15 06:11:46,504 DEBUG:on stmt: $binop_add40.8 = $binop_pow18.3 + $binop_pow36.7
2024-07-15 06:11:46,504 DEBUG:on stmt: $44return_value.9 = cast(value=$binop_add40.8)
2024-07-15 06:11:46,504 DEBUG:on stmt: return $44return_value.9
2024-07-15 06:11:46,505 DEBUG:defs defaultdict(<class 'list'>,
            {'$24load_attr.5': [(<numba.core.ir.Assign object at 0x00000221B6784A90>,
                                 0)],
             '$44return_value.9': [(<numba.core.ir.Assign object at 0x00000221B6787610>,
                                    0)],
             '$6load_attr.1': [(<numba.core.ir.Assign object at 0x00000221B6786250>,
                                0)],
             '$binop_add40.8': [(<numba.core.ir.Assign object at 0x00000221B6787250>,
                                 0)],
             '$binop_pow18.3': [(<numba.core.ir.Assign object at 0x00000221B6784790>,
                                 0)],
             '$binop_pow36.7': [(<numba.core.ir.Assign object at 0x00000221B6786DD0>,
                                 0)],
             '$const16.2': [(<numba.core.ir.Assign object at 0x00000221B67873D0>,
                             0)],
             '$const34.6': [(<numba.core.ir.Assign object at 0x00000221B67848D0>,
                             0)],
             'x': [(<numba.core.ir.Assign object at 0x00000221B6786F10>, 0)]})
2024-07-15 06:11:46,505 DEBUG:SSA violators <numba.core.utils.OrderedSet object at 0x00000221B6AE0DD0>
2024-07-15 06:11:46,518 DEBUG:bytecode dump:
>          0	NOP(arg=None, lineno=214)
           2	COPY_FREE_VARS(arg=3, lineno=214)
           4	RESUME(arg=0, lineno=214)
           6	PUSH_NULL(arg=None, lineno=216)
           8	LOAD_DEREF(arg=6, lineno=216)
          10	LOAD_CONST(arg=1, lineno=216)
          12	PRECALL(arg=1, lineno=216)
          16	CALL(arg=1, lineno=216)
          26	STORE_FAST(arg=2, lineno=216)
          28	PUSH_NULL(arg=None, lineno=217)
          30	LOAD_DEREF(arg=6, lineno=217)
          32	LOAD_FAST(arg=0, lineno=217)
          34	PRECALL(arg=1, lineno=217)
          38	CALL(arg=1, lineno=217)
          48	STORE_FAST(arg=0, lineno=217)
          50	LOAD_FAST(arg=1, lineno=218)
          52	LOAD_CONST(arg=2, lineno=218)
          54	COMPARE_OP(arg=0, lineno=218)
          60	POP_JUMP_FORWARD_IF_FALSE(arg=60, lineno=218)
          62	LOAD_CONST(arg=3, lineno=219)
          64	STORE_FAST(arg=3, lineno=219)
          66	LOAD_FAST(arg=1, lineno=220)
          68	UNARY_NEGATIVE(arg=None, lineno=220)
          70	STORE_FAST(arg=4, lineno=220)
          72	LOAD_FAST(arg=4, lineno=221)
          74	LOAD_CONST(arg=2, lineno=221)
          76	COMPARE_OP(arg=0, lineno=221)
          82	POP_JUMP_FORWARD_IF_FALSE(arg=7, lineno=221)
          84	LOAD_GLOBAL(arg=0, lineno=222)
          96	RAISE_VARARGS(arg=1, lineno=222)
>         98	LOAD_DEREF(arg=5, lineno=223)
         100	POP_JUMP_FORWARD_IF_FALSE(arg=39, lineno=223)
         102	LOAD_FAST(arg=0, lineno=224)
         104	LOAD_CONST(arg=2, lineno=224)
         106	COMPARE_OP(arg=2, lineno=224)
         112	POP_JUMP_FORWARD_IF_FALSE(arg=19, lineno=224)
         114	LOAD_DEREF(arg=7, lineno=225)
         116	POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=225)
         118	LOAD_DEREF(arg=7, lineno=226)
         120	RETURN_VALUE(arg=None, lineno=226)
>        122	LOAD_GLOBAL(arg=3, lineno=228)
         134	LOAD_CONST(arg=4, lineno=228)
         136	PRECALL(arg=1, lineno=228)
         140	CALL(arg=1, lineno=228)
         150	RAISE_VARARGS(arg=1, lineno=228)
>        152	LOAD_FAST(arg=0, lineno=229)
         154	LOAD_CONST(arg=1, lineno=229)
         156	COMPARE_OP(arg=3, lineno=229)
         162	POP_JUMP_FORWARD_IF_FALSE(arg=8, lineno=229)
         164	LOAD_FAST(arg=0, lineno=229)
         166	LOAD_CONST(arg=5, lineno=229)
         168	COMPARE_OP(arg=3, lineno=229)
         174	POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=229)
         176	LOAD_CONST(arg=2, lineno=230)
         178	RETURN_VALUE(arg=None, lineno=230)
>        180	JUMP_FORWARD(arg=4, lineno=230)
>        182	LOAD_CONST(arg=6, lineno=232)
         184	STORE_FAST(arg=3, lineno=232)
         186	LOAD_FAST(arg=1, lineno=233)
         188	STORE_FAST(arg=4, lineno=233)
>        190	LOAD_FAST(arg=4, lineno=234)
         192	LOAD_CONST(arg=7, lineno=234)
         194	COMPARE_OP(arg=4, lineno=234)
         200	POP_JUMP_FORWARD_IF_FALSE(arg=34, lineno=234)
         202	LOAD_GLOBAL(arg=5, lineno=236)
         214	LOAD_ATTR(arg=3, lineno=236)
         224	LOAD_FAST(arg=0, lineno=236)
         226	LOAD_GLOBAL(arg=9, lineno=236)
         238	LOAD_FAST(arg=1, lineno=236)
         240	PRECALL(arg=1, lineno=236)
         244	CALL(arg=1, lineno=236)
         254	PRECALL(arg=2, lineno=236)
         258	CALL(arg=2, lineno=236)
         268	RETURN_VALUE(arg=None, lineno=236)
>        270	LOAD_FAST(arg=4, lineno=237)
         272	LOAD_CONST(arg=2, lineno=237)
         274	COMPARE_OP(arg=3, lineno=237)
         280	POP_JUMP_FORWARD_IF_FALSE(arg=26, lineno=237)
>        282	LOAD_FAST(arg=4, lineno=238)
         284	LOAD_CONST(arg=1, lineno=238)
         286	BINARY_OP(arg=1, lineno=238)
         290	POP_JUMP_FORWARD_IF_FALSE(arg=5, lineno=238)
         292	LOAD_FAST(arg=2, lineno=239)
         294	LOAD_FAST(arg=0, lineno=239)
         296	BINARY_OP(arg=18, lineno=239)
         300	STORE_FAST(arg=2, lineno=239)
>        302	LOAD_FAST(arg=4, lineno=240)
         304	LOAD_CONST(arg=1, lineno=240)
         306	BINARY_OP(arg=22, lineno=240)
         310	STORE_FAST(arg=4, lineno=240)
         312	LOAD_FAST(arg=0, lineno=241)
         314	LOAD_FAST(arg=0, lineno=241)
         316	BINARY_OP(arg=18, lineno=241)
         320	STORE_FAST(arg=0, lineno=241)
         322	LOAD_FAST(arg=4, lineno=237)
         324	LOAD_CONST(arg=2, lineno=237)
         326	COMPARE_OP(arg=3, lineno=237)
         332	POP_JUMP_BACKWARD_IF_TRUE(arg=26, lineno=237)
>        334	LOAD_FAST(arg=3, lineno=243)
         336	POP_JUMP_FORWARD_IF_FALSE(arg=5, lineno=243)
         338	LOAD_CONST(arg=8, lineno=243)
         340	LOAD_FAST(arg=2, lineno=243)
         342	BINARY_OP(arg=11, lineno=243)
         346	JUMP_FORWARD(arg=1, lineno=243)
>        348	LOAD_FAST(arg=2, lineno=243)
>        350	RETURN_VALUE(arg=None, lineno=243)
2024-07-15 06:11:46,518 DEBUG:pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-15 06:11:46,518 DEBUG:stack: []
2024-07-15 06:11:46,518 DEBUG:state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-15 06:11:46,518 DEBUG:dispatch pc=0, inst=NOP(arg=None, lineno=214)
2024-07-15 06:11:46,518 DEBUG:stack []
2024-07-15 06:11:46,518 DEBUG:dispatch pc=2, inst=COPY_FREE_VARS(arg=3, lineno=214)
2024-07-15 06:11:46,518 DEBUG:stack []
2024-07-15 06:11:46,518 DEBUG:dispatch pc=4, inst=RESUME(arg=0, lineno=214)
2024-07-15 06:11:46,518 DEBUG:stack []
2024-07-15 06:11:46,518 DEBUG:dispatch pc=6, inst=PUSH_NULL(arg=None, lineno=216)
2024-07-15 06:11:46,518 DEBUG:stack []
2024-07-15 06:11:46,518 DEBUG:dispatch pc=8, inst=LOAD_DEREF(arg=6, lineno=216)
2024-07-15 06:11:46,518 DEBUG:stack ['$null$6.0']
2024-07-15 06:11:46,518 DEBUG:dispatch pc=10, inst=LOAD_CONST(arg=1, lineno=216)
2024-07-15 06:11:46,518 DEBUG:stack ['$null$6.0', '$8load_deref.1']
2024-07-15 06:11:46,518 DEBUG:dispatch pc=12, inst=PRECALL(arg=1, lineno=216)
2024-07-15 06:11:46,518 DEBUG:stack ['$null$6.0', '$8load_deref.1', '$const10.2']
2024-07-15 06:11:46,518 DEBUG:dispatch pc=16, inst=CALL(arg=1, lineno=216)
2024-07-15 06:11:46,518 DEBUG:stack ['$null$6.0', '$8load_deref.1', '$const10.2']
2024-07-15 06:11:46,518 DEBUG:dispatch pc=26, inst=STORE_FAST(arg=2, lineno=216)
2024-07-15 06:11:46,518 DEBUG:stack ['$16call.3']
2024-07-15 06:11:46,518 DEBUG:dispatch pc=28, inst=PUSH_NULL(arg=None, lineno=217)
2024-07-15 06:11:46,518 DEBUG:stack []
2024-07-15 06:11:46,518 DEBUG:dispatch pc=30, inst=LOAD_DEREF(arg=6, lineno=217)
2024-07-15 06:11:46,518 DEBUG:stack ['$null$28.4']
2024-07-15 06:11:46,519 DEBUG:dispatch pc=32, inst=LOAD_FAST(arg=0, lineno=217)
2024-07-15 06:11:46,519 DEBUG:stack ['$null$28.4', '$30load_deref.5']
2024-07-15 06:11:46,519 DEBUG:dispatch pc=34, inst=PRECALL(arg=1, lineno=217)
2024-07-15 06:11:46,519 DEBUG:stack ['$null$28.4', '$30load_deref.5', '$a32.6']
2024-07-15 06:11:46,519 DEBUG:dispatch pc=38, inst=CALL(arg=1, lineno=217)
2024-07-15 06:11:46,519 DEBUG:stack ['$null$28.4', '$30load_deref.5', '$a32.6']
2024-07-15 06:11:46,519 DEBUG:dispatch pc=48, inst=STORE_FAST(arg=0, lineno=217)
2024-07-15 06:11:46,519 DEBUG:stack ['$38call.7']
2024-07-15 06:11:46,519 DEBUG:dispatch pc=50, inst=LOAD_FAST(arg=1, lineno=218)
2024-07-15 06:11:46,519 DEBUG:stack []
2024-07-15 06:11:46,519 DEBUG:dispatch pc=52, inst=LOAD_CONST(arg=2, lineno=218)
2024-07-15 06:11:46,519 DEBUG:stack ['$b50.8']
2024-07-15 06:11:46,519 DEBUG:dispatch pc=54, inst=COMPARE_OP(arg=0, lineno=218)
2024-07-15 06:11:46,519 DEBUG:stack ['$b50.8', '$const52.9']
2024-07-15 06:11:46,519 DEBUG:dispatch pc=60, inst=POP_JUMP_FORWARD_IF_FALSE(arg=60, lineno=218)
2024-07-15 06:11:46,519 DEBUG:stack ['$54compare_op.10']
2024-07-15 06:11:46,519 DEBUG:end state. edges=[Edge(pc=62, stack=(), blockstack=(), npush=0), Edge(pc=182, stack=(), blockstack=(), npush=0)]
2024-07-15 06:11:46,519 DEBUG:pending: deque([State(pc_initial=62 nstack_initial=0), State(pc_initial=182 nstack_initial=0)])
2024-07-15 06:11:46,519 DEBUG:stack: []
2024-07-15 06:11:46,519 DEBUG:state.pc_initial: State(pc_initial=62 nstack_initial=0)
2024-07-15 06:11:46,519 DEBUG:dispatch pc=62, inst=LOAD_CONST(arg=3, lineno=219)
2024-07-15 06:11:46,519 DEBUG:stack []
2024-07-15 06:11:46,519 DEBUG:dispatch pc=64, inst=STORE_FAST(arg=3, lineno=219)
2024-07-15 06:11:46,519 DEBUG:stack ['$const62.0']
2024-07-15 06:11:46,519 DEBUG:dispatch pc=66, inst=LOAD_FAST(arg=1, lineno=220)
2024-07-15 06:11:46,519 DEBUG:stack []
2024-07-15 06:11:46,519 DEBUG:dispatch pc=68, inst=UNARY_NEGATIVE(arg=None, lineno=220)
2024-07-15 06:11:46,519 DEBUG:stack ['$b66.1']
2024-07-15 06:11:46,519 DEBUG:dispatch pc=70, inst=STORE_FAST(arg=4, lineno=220)
2024-07-15 06:11:46,519 DEBUG:stack ['$68unary_negative.2']
2024-07-15 06:11:46,519 DEBUG:dispatch pc=72, inst=LOAD_FAST(arg=4, lineno=221)
2024-07-15 06:11:46,519 DEBUG:stack []
2024-07-15 06:11:46,519 DEBUG:dispatch pc=74, inst=LOAD_CONST(arg=2, lineno=221)
2024-07-15 06:11:46,520 DEBUG:stack ['$exp72.3']
2024-07-15 06:11:46,520 DEBUG:dispatch pc=76, inst=COMPARE_OP(arg=0, lineno=221)
2024-07-15 06:11:46,520 DEBUG:stack ['$exp72.3', '$const74.4']
2024-07-15 06:11:46,520 DEBUG:dispatch pc=82, inst=POP_JUMP_FORWARD_IF_FALSE(arg=7, lineno=221)
2024-07-15 06:11:46,520 DEBUG:stack ['$76compare_op.5']
2024-07-15 06:11:46,520 DEBUG:end state. edges=[Edge(pc=84, stack=(), blockstack=(), npush=0), Edge(pc=98, stack=(), blockstack=(), npush=0)]
2024-07-15 06:11:46,520 DEBUG:pending: deque([State(pc_initial=182 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=98 nstack_initial=0)])
2024-07-15 06:11:46,520 DEBUG:stack: []
2024-07-15 06:11:46,520 DEBUG:state.pc_initial: State(pc_initial=182 nstack_initial=0)
2024-07-15 06:11:46,520 DEBUG:dispatch pc=182, inst=LOAD_CONST(arg=6, lineno=232)
2024-07-15 06:11:46,520 DEBUG:stack []
2024-07-15 06:11:46,520 DEBUG:dispatch pc=184, inst=STORE_FAST(arg=3, lineno=232)
2024-07-15 06:11:46,520 DEBUG:stack ['$const182.0']
2024-07-15 06:11:46,520 DEBUG:dispatch pc=186, inst=LOAD_FAST(arg=1, lineno=233)
2024-07-15 06:11:46,520 DEBUG:stack []
2024-07-15 06:11:46,520 DEBUG:dispatch pc=188, inst=STORE_FAST(arg=4, lineno=233)
2024-07-15 06:11:46,520 DEBUG:stack ['$b186.1']
2024-07-15 06:11:46,520 DEBUG:end state. edges=[Edge(pc=190, stack=(), blockstack=(), npush=0)]
2024-07-15 06:11:46,520 DEBUG:pending: deque([State(pc_initial=84 nstack_initial=0), State(pc_initial=98 nstack_initial=0), State(pc_initial=190 nstack_initial=0)])
2024-07-15 06:11:46,520 DEBUG:stack: []
2024-07-15 06:11:46,520 DEBUG:state.pc_initial: State(pc_initial=84 nstack_initial=0)
2024-07-15 06:11:46,520 DEBUG:dispatch pc=84, inst=LOAD_GLOBAL(arg=0, lineno=222)
2024-07-15 06:11:46,520 DEBUG:stack []
2024-07-15 06:11:46,520 DEBUG:dispatch pc=96, inst=RAISE_VARARGS(arg=1, lineno=222)
2024-07-15 06:11:46,520 DEBUG:stack ['$84load_global.0']
2024-07-15 06:11:46,520 DEBUG:end state. edges=[]
2024-07-15 06:11:46,520 DEBUG:pending: deque([State(pc_initial=98 nstack_initial=0), State(pc_initial=190 nstack_initial=0)])
2024-07-15 06:11:46,520 DEBUG:stack: []
2024-07-15 06:11:46,520 DEBUG:state.pc_initial: State(pc_initial=98 nstack_initial=0)
2024-07-15 06:11:46,520 DEBUG:dispatch pc=98, inst=LOAD_DEREF(arg=5, lineno=223)
2024-07-15 06:11:46,520 DEBUG:stack []
2024-07-15 06:11:46,520 DEBUG:dispatch pc=100, inst=POP_JUMP_FORWARD_IF_FALSE(arg=39, lineno=223)
2024-07-15 06:11:46,520 DEBUG:stack ['$98load_deref.0']
2024-07-15 06:11:46,520 DEBUG:end state. edges=[Edge(pc=102, stack=(), blockstack=(), npush=0), Edge(pc=180, stack=(), blockstack=(), npush=0)]
2024-07-15 06:11:46,520 DEBUG:pending: deque([State(pc_initial=190 nstack_initial=0), State(pc_initial=102 nstack_initial=0), State(pc_initial=180 nstack_initial=0)])
2024-07-15 06:11:46,521 DEBUG:stack: []
2024-07-15 06:11:46,521 DEBUG:state.pc_initial: State(pc_initial=190 nstack_initial=0)
2024-07-15 06:11:46,521 DEBUG:dispatch pc=190, inst=LOAD_FAST(arg=4, lineno=234)
2024-07-15 06:11:46,521 DEBUG:stack []
2024-07-15 06:11:46,521 DEBUG:dispatch pc=192, inst=LOAD_CONST(arg=7, lineno=234)
2024-07-15 06:11:46,521 DEBUG:stack ['$exp190.0']
2024-07-15 06:11:46,521 DEBUG:dispatch pc=194, inst=COMPARE_OP(arg=4, lineno=234)
2024-07-15 06:11:46,521 DEBUG:stack ['$exp190.0', '$const192.1']
2024-07-15 06:11:46,521 DEBUG:dispatch pc=200, inst=POP_JUMP_FORWARD_IF_FALSE(arg=34, lineno=234)
2024-07-15 06:11:46,521 DEBUG:stack ['$194compare_op.2']
2024-07-15 06:11:46,521 DEBUG:end state. edges=[Edge(pc=202, stack=(), blockstack=(), npush=0), Edge(pc=270, stack=(), blockstack=(), npush=0)]
2024-07-15 06:11:46,521 DEBUG:pending: deque([State(pc_initial=102 nstack_initial=0), State(pc_initial=180 nstack_initial=0), State(pc_initial=202 nstack_initial=0), State(pc_initial=270 nstack_initial=0)])
2024-07-15 06:11:46,521 DEBUG:stack: []
2024-07-15 06:11:46,521 DEBUG:state.pc_initial: State(pc_initial=102 nstack_initial=0)
2024-07-15 06:11:46,521 DEBUG:dispatch pc=102, inst=LOAD_FAST(arg=0, lineno=224)
2024-07-15 06:11:46,521 DEBUG:stack []
2024-07-15 06:11:46,521 DEBUG:dispatch pc=104, inst=LOAD_CONST(arg=2, lineno=224)
2024-07-15 06:11:46,521 DEBUG:stack ['$a102.0']
2024-07-15 06:11:46,521 DEBUG:dispatch pc=106, inst=COMPARE_OP(arg=2, lineno=224)
2024-07-15 06:11:46,521 DEBUG:stack ['$a102.0', '$const104.1']
2024-07-15 06:11:46,521 DEBUG:dispatch pc=112, inst=POP_JUMP_FORWARD_IF_FALSE(arg=19, lineno=224)
2024-07-15 06:11:46,521 DEBUG:stack ['$106compare_op.2']
2024-07-15 06:11:46,521 DEBUG:end state. edges=[Edge(pc=114, stack=(), blockstack=(), npush=0), Edge(pc=152, stack=(), blockstack=(), npush=0)]
2024-07-15 06:11:46,521 DEBUG:pending: deque([State(pc_initial=180 nstack_initial=0), State(pc_initial=202 nstack_initial=0), State(pc_initial=270 nstack_initial=0), State(pc_initial=114 nstack_initial=0), State(pc_initial=152 nstack_initial=0)])
2024-07-15 06:11:46,521 DEBUG:stack: []
2024-07-15 06:11:46,521 DEBUG:state.pc_initial: State(pc_initial=180 nstack_initial=0)
2024-07-15 06:11:46,521 DEBUG:dispatch pc=180, inst=JUMP_FORWARD(arg=4, lineno=230)
2024-07-15 06:11:46,521 DEBUG:stack []
2024-07-15 06:11:46,521 DEBUG:end state. edges=[Edge(pc=190, stack=(), blockstack=(), npush=0)]
2024-07-15 06:11:46,521 DEBUG:pending: deque([State(pc_initial=202 nstack_initial=0), State(pc_initial=270 nstack_initial=0), State(pc_initial=114 nstack_initial=0), State(pc_initial=152 nstack_initial=0), State(pc_initial=190 nstack_initial=0)])
2024-07-15 06:11:46,521 DEBUG:stack: []
2024-07-15 06:11:46,521 DEBUG:state.pc_initial: State(pc_initial=202 nstack_initial=0)
2024-07-15 06:11:46,521 DEBUG:dispatch pc=202, inst=LOAD_GLOBAL(arg=5, lineno=236)
2024-07-15 06:11:46,521 DEBUG:stack []
2024-07-15 06:11:46,522 DEBUG:dispatch pc=214, inst=LOAD_ATTR(arg=3, lineno=236)
2024-07-15 06:11:46,522 DEBUG:stack ['$null$202.1', '$202load_global.0']
2024-07-15 06:11:46,522 DEBUG:dispatch pc=224, inst=LOAD_FAST(arg=0, lineno=236)
2024-07-15 06:11:46,522 DEBUG:stack ['$null$202.1', '$214load_attr.2']
2024-07-15 06:11:46,522 DEBUG:dispatch pc=226, inst=LOAD_GLOBAL(arg=9, lineno=236)
2024-07-15 06:11:46,522 DEBUG:stack ['$null$202.1', '$214load_attr.2', '$a224.3']
2024-07-15 06:11:46,522 DEBUG:dispatch pc=238, inst=LOAD_FAST(arg=1, lineno=236)
2024-07-15 06:11:46,522 DEBUG:stack ['$null$202.1', '$214load_attr.2', '$a224.3', '$null$226.5', '$226load_global.4']
2024-07-15 06:11:46,522 DEBUG:dispatch pc=240, inst=PRECALL(arg=1, lineno=236)
2024-07-15 06:11:46,522 DEBUG:stack ['$null$202.1', '$214load_attr.2', '$a224.3', '$null$226.5', '$226load_global.4', '$b238.6']
2024-07-15 06:11:46,522 DEBUG:dispatch pc=244, inst=CALL(arg=1, lineno=236)
2024-07-15 06:11:46,522 DEBUG:stack ['$null$202.1', '$214load_attr.2', '$a224.3', '$null$226.5', '$226load_global.4', '$b238.6']
2024-07-15 06:11:46,522 DEBUG:dispatch pc=254, inst=PRECALL(arg=2, lineno=236)
2024-07-15 06:11:46,522 DEBUG:stack ['$null$202.1', '$214load_attr.2', '$a224.3', '$244call.7']
2024-07-15 06:11:46,522 DEBUG:dispatch pc=258, inst=CALL(arg=2, lineno=236)
2024-07-15 06:11:46,522 DEBUG:stack ['$null$202.1', '$214load_attr.2', '$a224.3', '$244call.7']
2024-07-15 06:11:46,522 DEBUG:dispatch pc=268, inst=RETURN_VALUE(arg=None, lineno=236)
2024-07-15 06:11:46,522 DEBUG:stack ['$258call.8']
2024-07-15 06:11:46,522 DEBUG:end state. edges=[]
2024-07-15 06:11:46,522 DEBUG:pending: deque([State(pc_initial=270 nstack_initial=0), State(pc_initial=114 nstack_initial=0), State(pc_initial=152 nstack_initial=0), State(pc_initial=190 nstack_initial=0)])
2024-07-15 06:11:46,522 DEBUG:stack: []
2024-07-15 06:11:46,522 DEBUG:state.pc_initial: State(pc_initial=270 nstack_initial=0)
2024-07-15 06:11:46,522 DEBUG:dispatch pc=270, inst=LOAD_FAST(arg=4, lineno=237)
2024-07-15 06:11:46,522 DEBUG:stack []
2024-07-15 06:11:46,522 DEBUG:dispatch pc=272, inst=LOAD_CONST(arg=2, lineno=237)
2024-07-15 06:11:46,522 DEBUG:stack ['$exp270.0']
2024-07-15 06:11:46,522 DEBUG:dispatch pc=274, inst=COMPARE_OP(arg=3, lineno=237)
2024-07-15 06:11:46,522 DEBUG:stack ['$exp270.0', '$const272.1']
2024-07-15 06:11:46,522 DEBUG:dispatch pc=280, inst=POP_JUMP_FORWARD_IF_FALSE(arg=26, lineno=237)
2024-07-15 06:11:46,522 DEBUG:stack ['$274compare_op.2']
2024-07-15 06:11:46,522 DEBUG:end state. edges=[Edge(pc=282, stack=(), blockstack=(), npush=0), Edge(pc=334, stack=(), blockstack=(), npush=0)]
2024-07-15 06:11:46,522 DEBUG:pending: deque([State(pc_initial=114 nstack_initial=0), State(pc_initial=152 nstack_initial=0), State(pc_initial=190 nstack_initial=0), State(pc_initial=282 nstack_initial=0), State(pc_initial=334 nstack_initial=0)])
2024-07-15 06:11:46,523 DEBUG:stack: []
2024-07-15 06:11:46,523 DEBUG:state.pc_initial: State(pc_initial=114 nstack_initial=0)
2024-07-15 06:11:46,523 DEBUG:dispatch pc=114, inst=LOAD_DEREF(arg=7, lineno=225)
2024-07-15 06:11:46,523 DEBUG:stack []
2024-07-15 06:11:46,523 DEBUG:dispatch pc=116, inst=POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=225)
2024-07-15 06:11:46,523 DEBUG:stack ['$114load_deref.0']
2024-07-15 06:11:46,523 DEBUG:end state. edges=[Edge(pc=118, stack=(), blockstack=(), npush=0), Edge(pc=122, stack=(), blockstack=(), npush=0)]
2024-07-15 06:11:46,523 DEBUG:pending: deque([State(pc_initial=152 nstack_initial=0), State(pc_initial=190 nstack_initial=0), State(pc_initial=282 nstack_initial=0), State(pc_initial=334 nstack_initial=0), State(pc_initial=118 nstack_initial=0), State(pc_initial=122 nstack_initial=0)])
2024-07-15 06:11:46,523 DEBUG:stack: []
2024-07-15 06:11:46,523 DEBUG:state.pc_initial: State(pc_initial=152 nstack_initial=0)
2024-07-15 06:11:46,523 DEBUG:dispatch pc=152, inst=LOAD_FAST(arg=0, lineno=229)
2024-07-15 06:11:46,523 DEBUG:stack []
2024-07-15 06:11:46,523 DEBUG:dispatch pc=154, inst=LOAD_CONST(arg=1, lineno=229)
2024-07-15 06:11:46,523 DEBUG:stack ['$a152.0']
2024-07-15 06:11:46,523 DEBUG:dispatch pc=156, inst=COMPARE_OP(arg=3, lineno=229)
2024-07-15 06:11:46,523 DEBUG:stack ['$a152.0', '$const154.1']
2024-07-15 06:11:46,523 DEBUG:dispatch pc=162, inst=POP_JUMP_FORWARD_IF_FALSE(arg=8, lineno=229)
2024-07-15 06:11:46,523 DEBUG:stack ['$156compare_op.2']
2024-07-15 06:11:46,523 DEBUG:end state. edges=[Edge(pc=164, stack=(), blockstack=(), npush=0), Edge(pc=180, stack=(), blockstack=(), npush=0)]
2024-07-15 06:11:46,523 DEBUG:pending: deque([State(pc_initial=190 nstack_initial=0), State(pc_initial=282 nstack_initial=0), State(pc_initial=334 nstack_initial=0), State(pc_initial=118 nstack_initial=0), State(pc_initial=122 nstack_initial=0), State(pc_initial=164 nstack_initial=0), State(pc_initial=180 nstack_initial=0)])
2024-07-15 06:11:46,523 DEBUG:pending: deque([State(pc_initial=282 nstack_initial=0), State(pc_initial=334 nstack_initial=0), State(pc_initial=118 nstack_initial=0), State(pc_initial=122 nstack_initial=0), State(pc_initial=164 nstack_initial=0), State(pc_initial=180 nstack_initial=0)])
2024-07-15 06:11:46,523 DEBUG:stack: []
2024-07-15 06:11:46,523 DEBUG:state.pc_initial: State(pc_initial=282 nstack_initial=0)
2024-07-15 06:11:46,523 DEBUG:dispatch pc=282, inst=LOAD_FAST(arg=4, lineno=238)
2024-07-15 06:11:46,523 DEBUG:stack []
2024-07-15 06:11:46,523 DEBUG:dispatch pc=284, inst=LOAD_CONST(arg=1, lineno=238)
2024-07-15 06:11:46,523 DEBUG:stack ['$exp282.0']
2024-07-15 06:11:46,523 DEBUG:dispatch pc=286, inst=BINARY_OP(arg=1, lineno=238)
2024-07-15 06:11:46,523 DEBUG:stack ['$exp282.0', '$const284.1']
2024-07-15 06:11:46,523 DEBUG:dispatch pc=290, inst=POP_JUMP_FORWARD_IF_FALSE(arg=5, lineno=238)
2024-07-15 06:11:46,523 DEBUG:stack ['$binop_and_286.2']
2024-07-15 06:11:46,524 DEBUG:end state. edges=[Edge(pc=292, stack=(), blockstack=(), npush=0), Edge(pc=302, stack=(), blockstack=(), npush=0)]
2024-07-15 06:11:46,524 DEBUG:pending: deque([State(pc_initial=334 nstack_initial=0), State(pc_initial=118 nstack_initial=0), State(pc_initial=122 nstack_initial=0), State(pc_initial=164 nstack_initial=0), State(pc_initial=180 nstack_initial=0), State(pc_initial=292 nstack_initial=0), State(pc_initial=302 nstack_initial=0)])
2024-07-15 06:11:46,524 DEBUG:stack: []
2024-07-15 06:11:46,524 DEBUG:state.pc_initial: State(pc_initial=334 nstack_initial=0)
2024-07-15 06:11:46,524 DEBUG:dispatch pc=334, inst=LOAD_FAST(arg=3, lineno=243)
2024-07-15 06:11:46,524 DEBUG:stack []
2024-07-15 06:11:46,524 DEBUG:dispatch pc=336, inst=POP_JUMP_FORWARD_IF_FALSE(arg=5, lineno=243)
2024-07-15 06:11:46,524 DEBUG:stack ['$invert334.0']
2024-07-15 06:11:46,524 DEBUG:end state. edges=[Edge(pc=338, stack=(), blockstack=(), npush=0), Edge(pc=348, stack=(), blockstack=(), npush=0)]
2024-07-15 06:11:46,524 DEBUG:pending: deque([State(pc_initial=118 nstack_initial=0), State(pc_initial=122 nstack_initial=0), State(pc_initial=164 nstack_initial=0), State(pc_initial=180 nstack_initial=0), State(pc_initial=292 nstack_initial=0), State(pc_initial=302 nstack_initial=0), State(pc_initial=338 nstack_initial=0), State(pc_initial=348 nstack_initial=0)])
2024-07-15 06:11:46,524 DEBUG:stack: []
2024-07-15 06:11:46,524 DEBUG:state.pc_initial: State(pc_initial=118 nstack_initial=0)
2024-07-15 06:11:46,524 DEBUG:dispatch pc=118, inst=LOAD_DEREF(arg=7, lineno=226)
2024-07-15 06:11:46,524 DEBUG:stack []
2024-07-15 06:11:46,524 DEBUG:dispatch pc=120, inst=RETURN_VALUE(arg=None, lineno=226)
2024-07-15 06:11:46,524 DEBUG:stack ['$118load_deref.0']
2024-07-15 06:11:46,524 DEBUG:end state. edges=[]
2024-07-15 06:11:46,524 DEBUG:pending: deque([State(pc_initial=122 nstack_initial=0), State(pc_initial=164 nstack_initial=0), State(pc_initial=180 nstack_initial=0), State(pc_initial=292 nstack_initial=0), State(pc_initial=302 nstack_initial=0), State(pc_initial=338 nstack_initial=0), State(pc_initial=348 nstack_initial=0)])
2024-07-15 06:11:46,524 DEBUG:stack: []
2024-07-15 06:11:46,524 DEBUG:state.pc_initial: State(pc_initial=122 nstack_initial=0)
2024-07-15 06:11:46,524 DEBUG:dispatch pc=122, inst=LOAD_GLOBAL(arg=3, lineno=228)
2024-07-15 06:11:46,524 DEBUG:stack []
2024-07-15 06:11:46,524 DEBUG:dispatch pc=134, inst=LOAD_CONST(arg=4, lineno=228)
2024-07-15 06:11:46,524 DEBUG:stack ['$null$122.1', '$122load_global.0']
2024-07-15 06:11:46,524 DEBUG:dispatch pc=136, inst=PRECALL(arg=1, lineno=228)
2024-07-15 06:11:46,524 DEBUG:stack ['$null$122.1', '$122load_global.0', '$const134.2']
2024-07-15 06:11:46,524 DEBUG:dispatch pc=140, inst=CALL(arg=1, lineno=228)
2024-07-15 06:11:46,524 DEBUG:stack ['$null$122.1', '$122load_global.0', '$const134.2']
2024-07-15 06:11:46,524 DEBUG:dispatch pc=150, inst=RAISE_VARARGS(arg=1, lineno=228)
2024-07-15 06:11:46,524 DEBUG:stack ['$140call.3']
2024-07-15 06:11:46,524 DEBUG:end state. edges=[]
2024-07-15 06:11:46,524 DEBUG:pending: deque([State(pc_initial=164 nstack_initial=0), State(pc_initial=180 nstack_initial=0), State(pc_initial=292 nstack_initial=0), State(pc_initial=302 nstack_initial=0), State(pc_initial=338 nstack_initial=0), State(pc_initial=348 nstack_initial=0)])
2024-07-15 06:11:46,524 DEBUG:stack: []
2024-07-15 06:11:46,525 DEBUG:state.pc_initial: State(pc_initial=164 nstack_initial=0)
2024-07-15 06:11:46,525 DEBUG:dispatch pc=164, inst=LOAD_FAST(arg=0, lineno=229)
2024-07-15 06:11:46,525 DEBUG:stack []
2024-07-15 06:11:46,525 DEBUG:dispatch pc=166, inst=LOAD_CONST(arg=5, lineno=229)
2024-07-15 06:11:46,525 DEBUG:stack ['$a164.0']
2024-07-15 06:11:46,525 DEBUG:dispatch pc=168, inst=COMPARE_OP(arg=3, lineno=229)
2024-07-15 06:11:46,525 DEBUG:stack ['$a164.0', '$const166.1']
2024-07-15 06:11:46,525 DEBUG:dispatch pc=174, inst=POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=229)
2024-07-15 06:11:46,525 DEBUG:stack ['$168compare_op.2']
2024-07-15 06:11:46,525 DEBUG:end state. edges=[Edge(pc=176, stack=(), blockstack=(), npush=0), Edge(pc=180, stack=(), blockstack=(), npush=0)]
2024-07-15 06:11:46,525 DEBUG:pending: deque([State(pc_initial=180 nstack_initial=0), State(pc_initial=292 nstack_initial=0), State(pc_initial=302 nstack_initial=0), State(pc_initial=338 nstack_initial=0), State(pc_initial=348 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=180 nstack_initial=0)])
2024-07-15 06:11:46,525 DEBUG:pending: deque([State(pc_initial=292 nstack_initial=0), State(pc_initial=302 nstack_initial=0), State(pc_initial=338 nstack_initial=0), State(pc_initial=348 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=180 nstack_initial=0)])
2024-07-15 06:11:46,525 DEBUG:stack: []
2024-07-15 06:11:46,525 DEBUG:state.pc_initial: State(pc_initial=292 nstack_initial=0)
2024-07-15 06:11:46,525 DEBUG:dispatch pc=292, inst=LOAD_FAST(arg=2, lineno=239)
2024-07-15 06:11:46,525 DEBUG:stack []
2024-07-15 06:11:46,525 DEBUG:dispatch pc=294, inst=LOAD_FAST(arg=0, lineno=239)
2024-07-15 06:11:46,525 DEBUG:stack ['$r292.0']
2024-07-15 06:11:46,525 DEBUG:dispatch pc=296, inst=BINARY_OP(arg=18, lineno=239)
2024-07-15 06:11:46,525 DEBUG:stack ['$r292.0', '$a294.1']
2024-07-15 06:11:46,525 DEBUG:dispatch pc=300, inst=STORE_FAST(arg=2, lineno=239)
2024-07-15 06:11:46,525 DEBUG:stack ['$binop_imul296.2']
2024-07-15 06:11:46,525 DEBUG:end state. edges=[Edge(pc=302, stack=(), blockstack=(), npush=0)]
2024-07-15 06:11:46,525 DEBUG:pending: deque([State(pc_initial=302 nstack_initial=0), State(pc_initial=338 nstack_initial=0), State(pc_initial=348 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=180 nstack_initial=0), State(pc_initial=302 nstack_initial=0)])
2024-07-15 06:11:46,525 DEBUG:stack: []
2024-07-15 06:11:46,525 DEBUG:state.pc_initial: State(pc_initial=302 nstack_initial=0)
2024-07-15 06:11:46,525 DEBUG:dispatch pc=302, inst=LOAD_FAST(arg=4, lineno=240)
2024-07-15 06:11:46,525 DEBUG:stack []
2024-07-15 06:11:46,525 DEBUG:dispatch pc=304, inst=LOAD_CONST(arg=1, lineno=240)
2024-07-15 06:11:46,525 DEBUG:stack ['$exp302.0']
2024-07-15 06:11:46,525 DEBUG:dispatch pc=306, inst=BINARY_OP(arg=22, lineno=240)
2024-07-15 06:11:46,525 DEBUG:stack ['$exp302.0', '$const304.1']
2024-07-15 06:11:46,526 DEBUG:dispatch pc=310, inst=STORE_FAST(arg=4, lineno=240)
2024-07-15 06:11:46,526 DEBUG:stack ['$binop_irshift306.2']
2024-07-15 06:11:46,526 DEBUG:dispatch pc=312, inst=LOAD_FAST(arg=0, lineno=241)
2024-07-15 06:11:46,526 DEBUG:stack []
2024-07-15 06:11:46,526 DEBUG:dispatch pc=314, inst=LOAD_FAST(arg=0, lineno=241)
2024-07-15 06:11:46,526 DEBUG:stack ['$a312.3']
2024-07-15 06:11:46,526 DEBUG:dispatch pc=316, inst=BINARY_OP(arg=18, lineno=241)
2024-07-15 06:11:46,526 DEBUG:stack ['$a312.3', '$a314.4']
2024-07-15 06:11:46,526 DEBUG:dispatch pc=320, inst=STORE_FAST(arg=0, lineno=241)
2024-07-15 06:11:46,526 DEBUG:stack ['$binop_imul316.5']
2024-07-15 06:11:46,526 DEBUG:dispatch pc=322, inst=LOAD_FAST(arg=4, lineno=237)
2024-07-15 06:11:46,526 DEBUG:stack []
2024-07-15 06:11:46,526 DEBUG:dispatch pc=324, inst=LOAD_CONST(arg=2, lineno=237)
2024-07-15 06:11:46,526 DEBUG:stack ['$exp322.6']
2024-07-15 06:11:46,526 DEBUG:dispatch pc=326, inst=COMPARE_OP(arg=3, lineno=237)
2024-07-15 06:11:46,526 DEBUG:stack ['$exp322.6', '$const324.7']
2024-07-15 06:11:46,526 DEBUG:dispatch pc=332, inst=POP_JUMP_BACKWARD_IF_TRUE(arg=26, lineno=237)
2024-07-15 06:11:46,526 DEBUG:stack ['$326compare_op.8']
2024-07-15 06:11:46,526 DEBUG:end state. edges=[Edge(pc=334, stack=(), blockstack=(), npush=0), Edge(pc=282, stack=(), blockstack=(), npush=0)]
2024-07-15 06:11:46,526 DEBUG:pending: deque([State(pc_initial=338 nstack_initial=0), State(pc_initial=348 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=180 nstack_initial=0), State(pc_initial=302 nstack_initial=0), State(pc_initial=334 nstack_initial=0), State(pc_initial=282 nstack_initial=0)])
2024-07-15 06:11:46,526 DEBUG:stack: []
2024-07-15 06:11:46,526 DEBUG:state.pc_initial: State(pc_initial=338 nstack_initial=0)
2024-07-15 06:11:46,526 DEBUG:dispatch pc=338, inst=LOAD_CONST(arg=8, lineno=243)
2024-07-15 06:11:46,527 DEBUG:stack []
2024-07-15 06:11:46,527 DEBUG:dispatch pc=340, inst=LOAD_FAST(arg=2, lineno=243)
2024-07-15 06:11:46,527 DEBUG:stack ['$const338.0']
2024-07-15 06:11:46,527 DEBUG:dispatch pc=342, inst=BINARY_OP(arg=11, lineno=243)
2024-07-15 06:11:46,527 DEBUG:stack ['$const338.0', '$r340.1']
2024-07-15 06:11:46,527 DEBUG:dispatch pc=346, inst=JUMP_FORWARD(arg=1, lineno=243)
2024-07-15 06:11:46,527 DEBUG:stack ['$binop_truediv342.2']
2024-07-15 06:11:46,527 DEBUG:end state. edges=[Edge(pc=350, stack=('$binop_truediv342.2',), blockstack=(), npush=0)]
2024-07-15 06:11:46,527 DEBUG:pending: deque([State(pc_initial=348 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=180 nstack_initial=0), State(pc_initial=302 nstack_initial=0), State(pc_initial=334 nstack_initial=0), State(pc_initial=282 nstack_initial=0), State(pc_initial=350 nstack_initial=1)])
2024-07-15 06:11:46,527 DEBUG:stack: []
2024-07-15 06:11:46,527 DEBUG:state.pc_initial: State(pc_initial=348 nstack_initial=0)
2024-07-15 06:11:46,527 DEBUG:dispatch pc=348, inst=LOAD_FAST(arg=2, lineno=243)
2024-07-15 06:11:46,527 DEBUG:stack []
2024-07-15 06:11:46,527 DEBUG:end state. edges=[Edge(pc=350, stack=('$r348.0',), blockstack=(), npush=0)]
2024-07-15 06:11:46,527 DEBUG:pending: deque([State(pc_initial=176 nstack_initial=0), State(pc_initial=180 nstack_initial=0), State(pc_initial=302 nstack_initial=0), State(pc_initial=334 nstack_initial=0), State(pc_initial=282 nstack_initial=0), State(pc_initial=350 nstack_initial=1), State(pc_initial=350 nstack_initial=1)])
2024-07-15 06:11:46,527 DEBUG:stack: []
2024-07-15 06:11:46,527 DEBUG:state.pc_initial: State(pc_initial=176 nstack_initial=0)
2024-07-15 06:11:46,527 DEBUG:dispatch pc=176, inst=LOAD_CONST(arg=2, lineno=230)
2024-07-15 06:11:46,527 DEBUG:stack []
2024-07-15 06:11:46,527 DEBUG:dispatch pc=178, inst=RETURN_VALUE(arg=None, lineno=230)
2024-07-15 06:11:46,527 DEBUG:stack ['$const176.0']
2024-07-15 06:11:46,527 DEBUG:end state. edges=[]
2024-07-15 06:11:46,527 DEBUG:pending: deque([State(pc_initial=180 nstack_initial=0), State(pc_initial=302 nstack_initial=0), State(pc_initial=334 nstack_initial=0), State(pc_initial=282 nstack_initial=0), State(pc_initial=350 nstack_initial=1), State(pc_initial=350 nstack_initial=1)])
2024-07-15 06:11:46,527 DEBUG:pending: deque([State(pc_initial=302 nstack_initial=0), State(pc_initial=334 nstack_initial=0), State(pc_initial=282 nstack_initial=0), State(pc_initial=350 nstack_initial=1), State(pc_initial=350 nstack_initial=1)])
2024-07-15 06:11:46,527 DEBUG:pending: deque([State(pc_initial=334 nstack_initial=0), State(pc_initial=282 nstack_initial=0), State(pc_initial=350 nstack_initial=1), State(pc_initial=350 nstack_initial=1)])
2024-07-15 06:11:46,527 DEBUG:pending: deque([State(pc_initial=282 nstack_initial=0), State(pc_initial=350 nstack_initial=1), State(pc_initial=350 nstack_initial=1)])
2024-07-15 06:11:46,527 DEBUG:pending: deque([State(pc_initial=350 nstack_initial=1), State(pc_initial=350 nstack_initial=1)])
2024-07-15 06:11:46,527 DEBUG:stack: ['$phi350.0']
2024-07-15 06:11:46,527 DEBUG:state.pc_initial: State(pc_initial=350 nstack_initial=1)
2024-07-15 06:11:46,528 DEBUG:dispatch pc=350, inst=RETURN_VALUE(arg=None, lineno=243)
2024-07-15 06:11:46,528 DEBUG:stack ['$phi350.0']
2024-07-15 06:11:46,528 DEBUG:end state. edges=[]
2024-07-15 06:11:46,528 DEBUG:pending: deque([State(pc_initial=350 nstack_initial=1)])
2024-07-15 06:11:46,528 DEBUG:-------------------------Prune PHIs-------------------------
2024-07-15 06:11:46,528 DEBUG:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=62 nstack_initial=0): set(),
             State(pc_initial=84 nstack_initial=0): set(),
             State(pc_initial=98 nstack_initial=0): set(),
             State(pc_initial=102 nstack_initial=0): set(),
             State(pc_initial=114 nstack_initial=0): set(),
             State(pc_initial=118 nstack_initial=0): set(),
             State(pc_initial=122 nstack_initial=0): set(),
             State(pc_initial=152 nstack_initial=0): set(),
             State(pc_initial=164 nstack_initial=0): set(),
             State(pc_initial=176 nstack_initial=0): set(),
             State(pc_initial=180 nstack_initial=0): set(),
             State(pc_initial=182 nstack_initial=0): set(),
             State(pc_initial=190 nstack_initial=0): set(),
             State(pc_initial=202 nstack_initial=0): set(),
             State(pc_initial=270 nstack_initial=0): set(),
             State(pc_initial=282 nstack_initial=0): set(),
             State(pc_initial=292 nstack_initial=0): set(),
             State(pc_initial=302 nstack_initial=0): set(),
             State(pc_initial=334 nstack_initial=0): set(),
             State(pc_initial=338 nstack_initial=0): set(),
             State(pc_initial=348 nstack_initial=0): set(),
             State(pc_initial=350 nstack_initial=1): {'$phi350.0'}})
2024-07-15 06:11:46,528 DEBUG:defmap: {'$phi350.0': State(pc_initial=348 nstack_initial=0)}
2024-07-15 06:11:46,528 DEBUG:phismap: defaultdict(<class 'set'>,
            {'$phi350.0': {('$binop_truediv342.2',
                            State(pc_initial=338 nstack_initial=0)),
                           ('$r348.0',
                            State(pc_initial=348 nstack_initial=0))}})
2024-07-15 06:11:46,528 DEBUG:changing phismap: defaultdict(<class 'set'>,
            {'$phi350.0': {('$binop_truediv342.2',
                            State(pc_initial=338 nstack_initial=0)),
                           ('$r348.0',
                            State(pc_initial=348 nstack_initial=0))}})
2024-07-15 06:11:46,528 DEBUG:keep phismap: {'$phi350.0': {('$binop_truediv342.2', State(pc_initial=338 nstack_initial=0)),
               ('$r348.0', State(pc_initial=348 nstack_initial=0))}}
2024-07-15 06:11:46,528 DEBUG:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=338 nstack_initial=0): {'$phi350.0': '$binop_truediv342.2'},
             State(pc_initial=348 nstack_initial=0): {'$phi350.0': '$r348.0'}})
2024-07-15 06:11:46,528 DEBUG:----------------------DONE Prune PHIs-----------------------
2024-07-15 06:11:46,529 DEBUG:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {}), (6, {}), (8, {'res': '$8load_deref.1'}), (10, {'res': '$const10.2'}), (12, {}), (14, {}), (16, {'func': '$8load_deref.1', 'args': ['$const10.2'], 'kw_names': None, 'res': '$16call.3'}), (18, {}), (20, {}), (22, {}), (24, {}), (26, {'value': '$16call.3'}), (28, {}), (30, {'res': '$30load_deref.5'}), (32, {'res': '$a32.6'}), (34, {}), (36, {}), (38, {'func': '$30load_deref.5', 'args': ['$a32.6'], 'kw_names': None, 'res': '$38call.7'}), (40, {}), (42, {}), (44, {}), (46, {}), (48, {'value': '$38call.7'}), (50, {'res': '$b50.8'}), (52, {'res': '$const52.9'}), (54, {'lhs': '$b50.8', 'rhs': '$const52.9', 'res': '$54compare_op.10'}), (56, {}), (58, {}), (60, {'pred': '$54compare_op.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={62: (), 182: ()})
2024-07-15 06:11:46,529 DEBUG:block_infos State(pc_initial=62 nstack_initial=0):
AdaptBlockInfo(insts=((62, {'res': '$const62.0'}), (64, {'value': '$const62.0'}), (66, {'res': '$b66.1'}), (68, {'value': '$b66.1', 'res': '$68unary_negative.2'}), (70, {'value': '$68unary_negative.2'}), (72, {'res': '$exp72.3'}), (74, {'res': '$const74.4'}), (76, {'lhs': '$exp72.3', 'rhs': '$const74.4', 'res': '$76compare_op.5'}), (78, {}), (80, {}), (82, {'pred': '$76compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={84: (), 98: ()})
2024-07-15 06:11:46,529 DEBUG:block_infos State(pc_initial=84 nstack_initial=0):
AdaptBlockInfo(insts=((84, {'idx': 0, 'res': '$84load_global.0'}), (86, {}), (88, {}), (90, {}), (92, {}), (94, {}), (96, {'exc': '$84load_global.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-15 06:11:46,529 DEBUG:block_infos State(pc_initial=98 nstack_initial=0):
AdaptBlockInfo(insts=((98, {'res': '$98load_deref.0'}), (100, {'pred': '$98load_deref.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={102: (), 180: ()})
2024-07-15 06:11:46,529 DEBUG:block_infos State(pc_initial=102 nstack_initial=0):
AdaptBlockInfo(insts=((102, {'res': '$a102.0'}), (104, {'res': '$const104.1'}), (106, {'lhs': '$a102.0', 'rhs': '$const104.1', 'res': '$106compare_op.2'}), (108, {}), (110, {}), (112, {'pred': '$106compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={114: (), 152: ()})
2024-07-15 06:11:46,529 DEBUG:block_infos State(pc_initial=114 nstack_initial=0):
AdaptBlockInfo(insts=((114, {'res': '$114load_deref.0'}), (116, {'pred': '$114load_deref.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={118: (), 122: ()})
2024-07-15 06:11:46,529 DEBUG:block_infos State(pc_initial=118 nstack_initial=0):
AdaptBlockInfo(insts=((118, {'res': '$118load_deref.0'}), (120, {'retval': '$118load_deref.0', 'castval': '$120return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-15 06:11:46,529 DEBUG:block_infos State(pc_initial=122 nstack_initial=0):
AdaptBlockInfo(insts=((122, {'idx': 1, 'res': '$122load_global.0'}), (124, {}), (126, {}), (128, {}), (130, {}), (132, {}), (134, {'res': '$const134.2'}), (136, {}), (138, {}), (140, {'func': '$122load_global.0', 'args': ['$const134.2'], 'kw_names': None, 'res': '$140call.3'}), (142, {}), (144, {}), (146, {}), (148, {}), (150, {'exc': '$140call.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-15 06:11:46,529 DEBUG:block_infos State(pc_initial=152 nstack_initial=0):
AdaptBlockInfo(insts=((152, {'res': '$a152.0'}), (154, {'res': '$const154.1'}), (156, {'lhs': '$a152.0', 'rhs': '$const154.1', 'res': '$156compare_op.2'}), (158, {}), (160, {}), (162, {'pred': '$156compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={164: (), 180: ()})
2024-07-15 06:11:46,529 DEBUG:block_infos State(pc_initial=164 nstack_initial=0):
AdaptBlockInfo(insts=((164, {'res': '$a164.0'}), (166, {'res': '$const166.1'}), (168, {'lhs': '$a164.0', 'rhs': '$const166.1', 'res': '$168compare_op.2'}), (170, {}), (172, {}), (174, {'pred': '$168compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={176: (), 180: ()})
2024-07-15 06:11:46,529 DEBUG:block_infos State(pc_initial=176 nstack_initial=0):
AdaptBlockInfo(insts=((176, {'res': '$const176.0'}), (178, {'retval': '$const176.0', 'castval': '$178return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-15 06:11:46,529 DEBUG:block_infos State(pc_initial=180 nstack_initial=0):
AdaptBlockInfo(insts=((180, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={190: ()})
2024-07-15 06:11:46,529 DEBUG:block_infos State(pc_initial=182 nstack_initial=0):
AdaptBlockInfo(insts=((182, {'res': '$const182.0'}), (184, {'value': '$const182.0'}), (186, {'res': '$b186.1'}), (188, {'value': '$b186.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={190: ()})
2024-07-15 06:11:46,529 DEBUG:block_infos State(pc_initial=190 nstack_initial=0):
AdaptBlockInfo(insts=((190, {'res': '$exp190.0'}), (192, {'res': '$const192.1'}), (194, {'lhs': '$exp190.0', 'rhs': '$const192.1', 'res': '$194compare_op.2'}), (196, {}), (198, {}), (200, {'pred': '$194compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={202: (), 270: ()})
2024-07-15 06:11:46,529 DEBUG:block_infos State(pc_initial=202 nstack_initial=0):
AdaptBlockInfo(insts=((202, {'idx': 2, 'res': '$202load_global.0'}), (204, {}), (206, {}), (208, {}), (210, {}), (212, {}), (214, {'item': '$202load_global.0', 'res': '$214load_attr.2'}), (216, {}), (218, {}), (220, {}), (222, {}), (224, {'res': '$a224.3'}), (226, {'idx': 4, 'res': '$226load_global.4'}), (228, {}), (230, {}), (232, {}), (234, {}), (236, {}), (238, {'res': '$b238.6'}), (240, {}), (242, {}), (244, {'func': '$226load_global.4', 'args': ['$b238.6'], 'kw_names': None, 'res': '$244call.7'}), (246, {}), (248, {}), (250, {}), (252, {}), (254, {}), (256, {}), (258, {'func': '$214load_attr.2', 'args': ['$a224.3', '$244call.7'], 'kw_names': None, 'res': '$258call.8'}), (260, {}), (262, {}), (264, {}), (266, {}), (268, {'retval': '$258call.8', 'castval': '$268return_value.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-15 06:11:46,529 DEBUG:block_infos State(pc_initial=270 nstack_initial=0):
AdaptBlockInfo(insts=((270, {'res': '$exp270.0'}), (272, {'res': '$const272.1'}), (274, {'lhs': '$exp270.0', 'rhs': '$const272.1', 'res': '$274compare_op.2'}), (276, {}), (278, {}), (280, {'pred': '$274compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={282: (), 334: ()})
2024-07-15 06:11:46,529 DEBUG:block_infos State(pc_initial=282 nstack_initial=0):
AdaptBlockInfo(insts=((282, {'res': '$exp282.0'}), (284, {'res': '$const284.1'}), (286, {'op': '&', 'lhs': '$exp282.0', 'rhs': '$const284.1', 'res': '$binop_and_286.2'}), (288, {}), (290, {'pred': '$binop_and_286.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={292: (), 302: ()})
2024-07-15 06:11:46,529 DEBUG:block_infos State(pc_initial=292 nstack_initial=0):
AdaptBlockInfo(insts=((292, {'res': '$r292.0'}), (294, {'res': '$a294.1'}), (296, {'op': '*=', 'lhs': '$r292.0', 'rhs': '$a294.1', 'res': '$binop_imul296.2'}), (298, {}), (300, {'value': '$binop_imul296.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={302: ()})
2024-07-15 06:11:46,529 DEBUG:block_infos State(pc_initial=302 nstack_initial=0):
AdaptBlockInfo(insts=((302, {'res': '$exp302.0'}), (304, {'res': '$const304.1'}), (306, {'op': '>>=', 'lhs': '$exp302.0', 'rhs': '$const304.1', 'res': '$binop_irshift306.2'}), (308, {}), (310, {'value': '$binop_irshift306.2'}), (312, {'res': '$a312.3'}), (314, {'res': '$a314.4'}), (316, {'op': '*=', 'lhs': '$a312.3', 'rhs': '$a314.4', 'res': '$binop_imul316.5'}), (318, {}), (320, {'value': '$binop_imul316.5'}), (322, {'res': '$exp322.6'}), (324, {'res': '$const324.7'}), (326, {'lhs': '$exp322.6', 'rhs': '$const324.7', 'res': '$326compare_op.8'}), (328, {}), (330, {}), (332, {'pred': '$326compare_op.8'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={334: (), 282: ()})
2024-07-15 06:11:46,529 DEBUG:block_infos State(pc_initial=334 nstack_initial=0):
AdaptBlockInfo(insts=((334, {'res': '$invert334.0'}), (336, {'pred': '$invert334.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={338: (), 348: ()})
2024-07-15 06:11:46,529 DEBUG:block_infos State(pc_initial=338 nstack_initial=0):
AdaptBlockInfo(insts=((338, {'res': '$const338.0'}), (340, {'res': '$r340.1'}), (342, {'op': '/', 'lhs': '$const338.0', 'rhs': '$r340.1', 'res': '$binop_truediv342.2'}), (344, {}), (346, {})), outgoing_phis={'$phi350.0': '$binop_truediv342.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={350: ('$binop_truediv342.2',)})
2024-07-15 06:11:46,529 DEBUG:block_infos State(pc_initial=348 nstack_initial=0):
AdaptBlockInfo(insts=((348, {'res': '$r348.0'}),), outgoing_phis={'$phi350.0': '$r348.0'}, blockstack=(), active_try_block=None, outgoing_edgepushed={350: ('$r348.0',)})
2024-07-15 06:11:46,529 DEBUG:block_infos State(pc_initial=350 nstack_initial=1):
AdaptBlockInfo(insts=((350, {'retval': '$phi350.0', 'castval': '$350return_value.1'}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-15 06:11:46,531 DEBUG:label 0:
    a = arg(0, name=a)                       ['a']
    b = arg(1, name=b)                       ['b']
    $8load_deref.1 = freevar(tp: float32)    ['$8load_deref.1']
    $const10.2 = const(int, 1)               ['$const10.2']
    r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None) ['$8load_deref.1', '$const10.2', 'r']
    $30load_deref.5 = freevar(tp: float32)   ['$30load_deref.5']
    a.1 = call $30load_deref.5(a, func=$30load_deref.5, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None) ['$30load_deref.5', 'a', 'a.1']
    $const52.9 = const(int, 0)               ['$const52.9']
    $54compare_op.10 = b < $const52.9        ['$54compare_op.10', '$const52.9', 'b']
    bool60 = global(bool: <class 'bool'>)    ['bool60']
    $60pred = call bool60($54compare_op.10, func=bool60, args=(Var($54compare_op.10, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None) ['$54compare_op.10', '$60pred', 'bool60']
    branch $60pred, 62, 182                  ['$60pred']
label 62:
    invert = const(bool, True)               ['invert']
    exp = unary(fn=<built-in function neg>, value=b) ['b', 'exp']
    $const74.4 = const(int, 0)               ['$const74.4']
    $76compare_op.5 = exp < $const74.4       ['$76compare_op.5', '$const74.4', 'exp']
    bool82 = global(bool: <class 'bool'>)    ['bool82']
    $82pred = call bool82($76compare_op.5, func=bool82, args=(Var($76compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None) ['$76compare_op.5', '$82pred', 'bool82']
    branch $82pred, 84, 98                   ['$82pred']
label 84:
    $84load_global.0 = global(OverflowError: <class 'OverflowError'>) ['$84load_global.0']
    raise $84load_global.0                   ['$84load_global.0']
label 98:
    $98load_deref.0 = freevar(is_integer: False) ['$98load_deref.0']
    bool100 = global(bool: <class 'bool'>)   ['bool100']
    $100pred = call bool100($98load_deref.0, func=bool100, args=(Var($98load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None) ['$100pred', '$98load_deref.0', 'bool100']
    branch $100pred, 102, 180                ['$100pred']
label 102:
    $const104.1 = const(int, 0)              ['$const104.1']
    $106compare_op.2 = a.1 == $const104.1    ['$106compare_op.2', '$const104.1', 'a.1']
    bool112 = global(bool: <class 'bool'>)   ['bool112']
    $112pred = call bool112($106compare_op.2, func=bool112, args=(Var($106compare_op.2, numbers.py:224),), kws=(), vararg=None, varkwarg=None, target=None) ['$106compare_op.2', '$112pred', 'bool112']
    branch $112pred, 114, 152                ['$112pred']
label 114:
    $114load_deref.0 = freevar(zerodiv_return: False) ['$114load_deref.0']
    bool116 = global(bool: <class 'bool'>)   ['bool116']
    $116pred = call bool116($114load_deref.0, func=bool116, args=(Var($114load_deref.0, numbers.py:225),), kws=(), vararg=None, varkwarg=None, target=None) ['$114load_deref.0', '$116pred', 'bool116']
    branch $116pred, 118, 122                ['$116pred']
label 118:
    $118load_deref.0 = freevar(zerodiv_return: False) ['$118load_deref.0']
    $120return_value.1 = cast(value=$118load_deref.0) ['$118load_deref.0', '$120return_value.1']
    return $120return_value.1                ['$120return_value.1']
label 122:
    $122load_global.0 = global(ZeroDivisionError: <class 'ZeroDivisionError'>) ['$122load_global.0']
    $const134.2 = const(str, 0 cannot be raised to a negative power) ['$const134.2']
    $140call.3 = call $122load_global.0($const134.2, func=$122load_global.0, args=[Var($const134.2, numbers.py:228)], kws=(), vararg=None, varkwarg=None, target=None) ['$122load_global.0', '$140call.3', '$const134.2']
    raise $140call.3                         ['$140call.3']
label 152:
    $const154.1 = const(int, 1)              ['$const154.1']
    $156compare_op.2 = a.1 != $const154.1    ['$156compare_op.2', '$const154.1', 'a.1']
    bool162 = global(bool: <class 'bool'>)   ['bool162']
    $162pred = call bool162($156compare_op.2, func=bool162, args=(Var($156compare_op.2, numbers.py:229),), kws=(), vararg=None, varkwarg=None, target=None) ['$156compare_op.2', '$162pred', 'bool162']
    branch $162pred, 164, 180                ['$162pred']
label 164:
    $const166.1 = const(int, -1)             ['$const166.1']
    $168compare_op.2 = a.1 != $const166.1    ['$168compare_op.2', '$const166.1', 'a.1']
    bool174 = global(bool: <class 'bool'>)   ['bool174']
    $174pred = call bool174($168compare_op.2, func=bool174, args=(Var($168compare_op.2, numbers.py:229),), kws=(), vararg=None, varkwarg=None, target=None) ['$168compare_op.2', '$174pred', 'bool174']
    branch $174pred, 176, 180                ['$174pred']
label 176:
    $const176.0 = const(int, 0)              ['$const176.0']
    $178return_value.1 = cast(value=$const176.0) ['$178return_value.1', '$const176.0']
    return $178return_value.1                ['$178return_value.1']
label 180:
    jump 190                                 []
label 182:
    invert = const(bool, False)              ['invert']
    exp = b                                  ['b', 'exp']
    jump 190                                 []
label 190:
    $const192.1 = const(int, 65536)          ['$const192.1']
    $194compare_op.2 = exp > $const192.1     ['$194compare_op.2', '$const192.1', 'exp']
    bool200 = global(bool: <class 'bool'>)   ['bool200']
    $200pred = call bool200($194compare_op.2, func=bool200, args=(Var($194compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None) ['$194compare_op.2', '$200pred', 'bool200']
    branch $200pred, 202, 270                ['$200pred']
label 202:
    $202load_global.0 = global(math: <module 'math' (built-in)>) ['$202load_global.0']
    $214load_attr.2 = getattr(value=$202load_global.0, attr=pow) ['$202load_global.0', '$214load_attr.2']
    $226load_global.4 = global(float: <class 'float'>) ['$226load_global.4']
    $244call.7 = call $226load_global.4(b, func=$226load_global.4, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None) ['$226load_global.4', '$244call.7', 'b']
    $258call.8 = call $214load_attr.2(a.1, $244call.7, func=$214load_attr.2, args=[Var(a.1, numbers.py:217), Var($244call.7, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None) ['$214load_attr.2', '$244call.7', '$258call.8', 'a.1']
    $268return_value.9 = cast(value=$258call.8) ['$258call.8', '$268return_value.9']
    return $268return_value.9                ['$268return_value.9']
label 270:
    $const272.1 = const(int, 0)              ['$const272.1']
    $274compare_op.2 = exp != $const272.1    ['$274compare_op.2', '$const272.1', 'exp']
    bool280 = global(bool: <class 'bool'>)   ['bool280']
    $280pred = call bool280($274compare_op.2, func=bool280, args=(Var($274compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None) ['$274compare_op.2', '$280pred', 'bool280']
    branch $280pred, 282, 334                ['$280pred']
label 282:
    $const284.1 = const(int, 1)              ['$const284.1']
    $binop_and_286.2 = exp & $const284.1     ['$binop_and_286.2', '$const284.1', 'exp']
    bool290 = global(bool: <class 'bool'>)   ['bool290']
    $290pred = call bool290($binop_and_286.2, func=bool290, args=(Var($binop_and_286.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None) ['$290pred', '$binop_and_286.2', 'bool290']
    branch $290pred, 292, 302                ['$290pred']
label 292:
    $binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined) ['$binop_imul296.2', 'a.1', 'r']
    r = $binop_imul296.2                     ['$binop_imul296.2', 'r']
    jump 302                                 []
label 302:
    $const304.1 = const(int, 1)              ['$const304.1']
    $binop_irshift306.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const304.1, static_lhs=Undefined, static_rhs=Undefined) ['$binop_irshift306.2', '$const304.1', 'exp']
    exp = $binop_irshift306.2                ['$binop_irshift306.2', 'exp']
    $binop_imul316.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined) ['$binop_imul316.5', 'a.1', 'a.1']
    a.1 = $binop_imul316.5                   ['$binop_imul316.5', 'a.1']
    $const324.7 = const(int, 0)              ['$const324.7']
    $326compare_op.8 = exp != $const324.7    ['$326compare_op.8', '$const324.7', 'exp']
    bool332 = global(bool: <class 'bool'>)   ['bool332']
    $332pred = call bool332($326compare_op.8, func=bool332, args=(Var($326compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None) ['$326compare_op.8', '$332pred', 'bool332']
    branch $332pred, 282, 334                ['$332pred']
label 334:
    bool336 = global(bool: <class 'bool'>)   ['bool336']
    $336pred = call bool336(invert, func=bool336, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None) ['$336pred', 'bool336', 'invert']
    branch $336pred, 338, 348                ['$336pred']
label 338:
    $const338.0 = const(float, 1.0)          ['$const338.0']
    $binop_truediv342.2 = $const338.0 / r    ['$binop_truediv342.2', '$const338.0', 'r']
    $phi350.0 = $binop_truediv342.2          ['$binop_truediv342.2', '$phi350.0']
    jump 350                                 []
label 348:
    $phi350.0 = r                            ['$phi350.0', 'r']
    jump 350                                 []
label 350:
    $350return_value.1 = cast(value=$phi350.0) ['$350return_value.1', '$phi350.0']
    return $350return_value.1                ['$350return_value.1']

2024-07-15 06:11:46,543 DEBUG:==== SSA block analysis pass on 0
2024-07-15 06:11:46,543 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B68004D0>
2024-07-15 06:11:46,543 DEBUG:on stmt: a = arg(0, name=a)
2024-07-15 06:11:46,543 DEBUG:on stmt: b = arg(1, name=b)
2024-07-15 06:11:46,543 DEBUG:on stmt: $8load_deref.1 = freevar(tp: float32)
2024-07-15 06:11:46,543 DEBUG:on stmt: $const10.2 = const(int, 1)
2024-07-15 06:11:46,543 DEBUG:on stmt: r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,543 DEBUG:on stmt: $30load_deref.5 = freevar(tp: float32)
2024-07-15 06:11:46,543 DEBUG:on stmt: a.1 = call $30load_deref.5(a, func=$30load_deref.5, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,543 DEBUG:on stmt: $const52.9 = const(int, 0)
2024-07-15 06:11:46,543 DEBUG:on stmt: $54compare_op.10 = b < $const52.9
2024-07-15 06:11:46,543 DEBUG:on stmt: bool60 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,543 DEBUG:on stmt: $60pred = call bool60($54compare_op.10, func=bool60, args=(Var($54compare_op.10, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,543 DEBUG:on stmt: branch $60pred, 62, 182
2024-07-15 06:11:46,543 DEBUG:==== SSA block analysis pass on 62
2024-07-15 06:11:46,543 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B68004D0>
2024-07-15 06:11:46,543 DEBUG:on stmt: invert = const(bool, True)
2024-07-15 06:11:46,543 DEBUG:on stmt: exp = unary(fn=<built-in function neg>, value=b)
2024-07-15 06:11:46,543 DEBUG:on stmt: $const74.4 = const(int, 0)
2024-07-15 06:11:46,543 DEBUG:on stmt: $76compare_op.5 = exp < $const74.4
2024-07-15 06:11:46,543 DEBUG:on stmt: bool82 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,543 DEBUG:on stmt: $82pred = call bool82($76compare_op.5, func=bool82, args=(Var($76compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,543 DEBUG:on stmt: branch $82pred, 84, 98
2024-07-15 06:11:46,543 DEBUG:==== SSA block analysis pass on 84
2024-07-15 06:11:46,543 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B68004D0>
2024-07-15 06:11:46,543 DEBUG:on stmt: $84load_global.0 = global(OverflowError: <class 'OverflowError'>)
2024-07-15 06:11:46,543 DEBUG:on stmt: <static> raise <class 'OverflowError'>
2024-07-15 06:11:46,544 DEBUG:==== SSA block analysis pass on 98
2024-07-15 06:11:46,544 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B68004D0>
2024-07-15 06:11:46,544 DEBUG:on stmt: $98load_deref.0 = freevar(is_integer: False)
2024-07-15 06:11:46,544 DEBUG:on stmt: bool100 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,544 DEBUG:on stmt: $100pred = call bool100($98load_deref.0, func=bool100, args=(Var($98load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,544 DEBUG:on stmt: jump 180
2024-07-15 06:11:46,544 DEBUG:==== SSA block analysis pass on 180
2024-07-15 06:11:46,544 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B68004D0>
2024-07-15 06:11:46,544 DEBUG:on stmt: jump 190
2024-07-15 06:11:46,544 DEBUG:==== SSA block analysis pass on 182
2024-07-15 06:11:46,544 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B68004D0>
2024-07-15 06:11:46,544 DEBUG:on stmt: invert = const(bool, False)
2024-07-15 06:11:46,544 DEBUG:on stmt: exp = b
2024-07-15 06:11:46,544 DEBUG:on stmt: jump 190
2024-07-15 06:11:46,544 DEBUG:==== SSA block analysis pass on 190
2024-07-15 06:11:46,544 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B68004D0>
2024-07-15 06:11:46,544 DEBUG:on stmt: $const192.1 = const(int, 65536)
2024-07-15 06:11:46,544 DEBUG:on stmt: $194compare_op.2 = exp > $const192.1
2024-07-15 06:11:46,544 DEBUG:on stmt: bool200 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,544 DEBUG:on stmt: $200pred = call bool200($194compare_op.2, func=bool200, args=(Var($194compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,544 DEBUG:on stmt: branch $200pred, 202, 270
2024-07-15 06:11:46,544 DEBUG:==== SSA block analysis pass on 202
2024-07-15 06:11:46,544 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B68004D0>
2024-07-15 06:11:46,544 DEBUG:on stmt: $202load_global.0 = global(math: <module 'math' (built-in)>)
2024-07-15 06:11:46,544 DEBUG:on stmt: $214load_attr.2 = getattr(value=$202load_global.0, attr=pow)
2024-07-15 06:11:46,544 DEBUG:on stmt: $226load_global.4 = global(float: <class 'float'>)
2024-07-15 06:11:46,544 DEBUG:on stmt: $244call.7 = call $226load_global.4(b, func=$226load_global.4, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,544 DEBUG:on stmt: $258call.8 = call $214load_attr.2(a.1, $244call.7, func=$214load_attr.2, args=[Var(a.1, numbers.py:217), Var($244call.7, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,544 DEBUG:on stmt: $268return_value.9 = cast(value=$258call.8)
2024-07-15 06:11:46,544 DEBUG:on stmt: return $268return_value.9
2024-07-15 06:11:46,545 DEBUG:==== SSA block analysis pass on 270
2024-07-15 06:11:46,545 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B68004D0>
2024-07-15 06:11:46,545 DEBUG:on stmt: $const272.1 = const(int, 0)
2024-07-15 06:11:46,545 DEBUG:on stmt: $274compare_op.2 = exp != $const272.1
2024-07-15 06:11:46,545 DEBUG:on stmt: bool280 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,545 DEBUG:on stmt: $280pred = call bool280($274compare_op.2, func=bool280, args=(Var($274compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,545 DEBUG:on stmt: branch $280pred, 282, 334
2024-07-15 06:11:46,545 DEBUG:==== SSA block analysis pass on 282
2024-07-15 06:11:46,545 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B68004D0>
2024-07-15 06:11:46,545 DEBUG:on stmt: $const284.1 = const(int, 1)
2024-07-15 06:11:46,545 DEBUG:on stmt: $binop_and_286.2 = exp & $const284.1
2024-07-15 06:11:46,545 DEBUG:on stmt: bool290 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,545 DEBUG:on stmt: $290pred = call bool290($binop_and_286.2, func=bool290, args=(Var($binop_and_286.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,545 DEBUG:on stmt: branch $290pred, 292, 302
2024-07-15 06:11:46,545 DEBUG:==== SSA block analysis pass on 292
2024-07-15 06:11:46,545 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B68004D0>
2024-07-15 06:11:46,545 DEBUG:on stmt: $binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:46,545 DEBUG:on stmt: r = $binop_imul296.2
2024-07-15 06:11:46,545 DEBUG:on stmt: jump 302
2024-07-15 06:11:46,545 DEBUG:==== SSA block analysis pass on 302
2024-07-15 06:11:46,545 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B68004D0>
2024-07-15 06:11:46,545 DEBUG:on stmt: $const304.1 = const(int, 1)
2024-07-15 06:11:46,545 DEBUG:on stmt: $binop_irshift306.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const304.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:46,545 DEBUG:on stmt: exp = $binop_irshift306.2
2024-07-15 06:11:46,545 DEBUG:on stmt: $binop_imul316.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:46,545 DEBUG:on stmt: a.1 = $binop_imul316.5
2024-07-15 06:11:46,545 DEBUG:on stmt: $const324.7 = const(int, 0)
2024-07-15 06:11:46,545 DEBUG:on stmt: $326compare_op.8 = exp != $const324.7
2024-07-15 06:11:46,545 DEBUG:on stmt: bool332 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,545 DEBUG:on stmt: $332pred = call bool332($326compare_op.8, func=bool332, args=(Var($326compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,545 DEBUG:on stmt: branch $332pred, 282, 334
2024-07-15 06:11:46,545 DEBUG:==== SSA block analysis pass on 334
2024-07-15 06:11:46,545 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B68004D0>
2024-07-15 06:11:46,546 DEBUG:on stmt: bool336 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,546 DEBUG:on stmt: $336pred = call bool336(invert, func=bool336, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,546 DEBUG:on stmt: branch $336pred, 338, 348
2024-07-15 06:11:46,546 DEBUG:==== SSA block analysis pass on 338
2024-07-15 06:11:46,546 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B68004D0>
2024-07-15 06:11:46,546 DEBUG:on stmt: $const338.0 = const(float, 1.0)
2024-07-15 06:11:46,546 DEBUG:on stmt: $binop_truediv342.2 = $const338.0 / r
2024-07-15 06:11:46,546 DEBUG:on stmt: $phi350.0 = $binop_truediv342.2
2024-07-15 06:11:46,546 DEBUG:on stmt: jump 350
2024-07-15 06:11:46,546 DEBUG:==== SSA block analysis pass on 348
2024-07-15 06:11:46,546 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B68004D0>
2024-07-15 06:11:46,546 DEBUG:on stmt: $phi350.0 = r
2024-07-15 06:11:46,546 DEBUG:on stmt: jump 350
2024-07-15 06:11:46,546 DEBUG:==== SSA block analysis pass on 350
2024-07-15 06:11:46,546 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B68004D0>
2024-07-15 06:11:46,546 DEBUG:on stmt: $350return_value.1 = cast(value=$phi350.0)
2024-07-15 06:11:46,546 DEBUG:on stmt: return $350return_value.1
2024-07-15 06:11:46,547 DEBUG:defs defaultdict(<class 'list'>,
            {'$100pred': [(<numba.core.ir.Assign object at 0x00000221B68F4910>,
                           98)],
             '$194compare_op.2': [(<numba.core.ir.Assign object at 0x00000221B5BE74D0>,
                                   190)],
             '$200pred': [(<numba.core.ir.Assign object at 0x00000221B5BE7B90>,
                           190)],
             '$202load_global.0': [(<numba.core.ir.Assign object at 0x00000221B5BE7190>,
                                    202)],
             '$214load_attr.2': [(<numba.core.ir.Assign object at 0x00000221B5BE7A90>,
                                  202)],
             '$226load_global.4': [(<numba.core.ir.Assign object at 0x00000221B5BE7050>,
                                    202)],
             '$244call.7': [(<numba.core.ir.Assign object at 0x00000221B5BE64D0>,
                             202)],
             '$258call.8': [(<numba.core.ir.Assign object at 0x00000221B5BE6950>,
                             202)],
             '$268return_value.9': [(<numba.core.ir.Assign object at 0x00000221B5BE5DD0>,
                                     202)],
             '$274compare_op.2': [(<numba.core.ir.Assign object at 0x00000221B5EDE2D0>,
                                   270)],
             '$280pred': [(<numba.core.ir.Assign object at 0x00000221B5EDE8D0>,
                           270)],
             '$290pred': [(<numba.core.ir.Assign object at 0x00000221B5EDD910>,
                           282)],
             '$30load_deref.5': [(<numba.core.ir.Assign object at 0x00000221B6786A50>,
                                  0)],
             '$326compare_op.8': [(<numba.core.ir.Assign object at 0x00000221B5EDCCD0>,
                                   302)],
             '$332pred': [(<numba.core.ir.Assign object at 0x00000221B5EDE3D0>,
                           302)],
             '$336pred': [(<numba.core.ir.Assign object at 0x00000221B5EDC410>,
                           334)],
             '$350return_value.1': [(<numba.core.ir.Assign object at 0x00000221B5E59410>,
                                     350)],
             '$54compare_op.10': [(<numba.core.ir.Assign object at 0x00000221B6801E50>,
                                   0)],
             '$60pred': [(<numba.core.ir.Assign object at 0x00000221B6802490>,
                          0)],
             '$76compare_op.5': [(<numba.core.ir.Assign object at 0x00000221B68F6250>,
                                  62)],
             '$82pred': [(<numba.core.ir.Assign object at 0x00000221B68F7910>,
                          62)],
             '$84load_global.0': [(<numba.core.ir.Assign object at 0x00000221B68F6750>,
                                   84)],
             '$8load_deref.1': [(<numba.core.ir.Assign object at 0x00000221B5EE5C90>,
                                 0)],
             '$98load_deref.0': [(<numba.core.ir.Assign object at 0x00000221B68F6110>,
                                  98)],
             '$binop_and_286.2': [(<numba.core.ir.Assign object at 0x00000221B5EDD590>,
                                   282)],
             '$binop_imul296.2': [(<numba.core.ir.Assign object at 0x00000221B5EDF290>,
                                   292)],
             '$binop_imul316.5': [(<numba.core.ir.Assign object at 0x00000221B5EDD0D0>,
                                   302)],
             '$binop_irshift306.2': [(<numba.core.ir.Assign object at 0x00000221B5EDFC10>,
                                      302)],
             '$binop_truediv342.2': [(<numba.core.ir.Assign object at 0x00000221B5EDF410>,
                                      338)],
             '$const10.2': [(<numba.core.ir.Assign object at 0x00000221B5EE68D0>,
                             0)],
             '$const192.1': [(<numba.core.ir.Assign object at 0x00000221B5BE6890>,
                              190)],
             '$const272.1': [(<numba.core.ir.Assign object at 0x00000221B5BE4B90>,
                              270)],
             '$const284.1': [(<numba.core.ir.Assign object at 0x00000221B5EDFA50>,
                              282)],
             '$const304.1': [(<numba.core.ir.Assign object at 0x00000221B5EDFB50>,
                              302)],
             '$const324.7': [(<numba.core.ir.Assign object at 0x00000221B5EDEE50>,
                              302)],
             '$const338.0': [(<numba.core.ir.Assign object at 0x00000221B5EDE350>,
                              338)],
             '$const52.9': [(<numba.core.ir.Assign object at 0x00000221B6801650>,
                             0)],
             '$const74.4': [(<numba.core.ir.Assign object at 0x00000221B68F6310>,
                             62)],
             '$phi350.0': [(<numba.core.ir.Assign object at 0x00000221B5EDCB10>,
                            338),
                           (<numba.core.ir.Assign object at 0x00000221B5EDCBD0>,
                            348)],
             'a': [(<numba.core.ir.Assign object at 0x00000221B5EE5C50>, 0)],
             'a.1': [(<numba.core.ir.Assign object at 0x00000221B68038D0>, 0),
                     (<numba.core.ir.Assign object at 0x00000221B5EDE910>,
                      302)],
             'b': [(<numba.core.ir.Assign object at 0x00000221B5EE55D0>, 0)],
             'bool100': [(<numba.core.ir.Assign object at 0x00000221B68F4C90>,
                          98)],
             'bool200': [(<numba.core.ir.Assign object at 0x00000221B5BE7890>,
                          190)],
             'bool280': [(<numba.core.ir.Assign object at 0x00000221B5EDF2D0>,
                          270)],
             'bool290': [(<numba.core.ir.Assign object at 0x00000221B5EDE1D0>,
                          282)],
             'bool332': [(<numba.core.ir.Assign object at 0x00000221B5EDD390>,
                          302)],
             'bool336': [(<numba.core.ir.Assign object at 0x00000221B5EDECD0>,
                          334)],
             'bool60': [(<numba.core.ir.Assign object at 0x00000221B6801810>,
                         0)],
             'bool82': [(<numba.core.ir.Assign object at 0x00000221B68F7BD0>,
                         62)],
             'exp': [(<numba.core.ir.Assign object at 0x00000221B6800A90>, 62),
                     (<numba.core.ir.Assign object at 0x00000221B5BE7AD0>, 182),
                     (<numba.core.ir.Assign object at 0x00000221B5EDF750>,
                      302)],
             'invert': [(<numba.core.ir.Assign object at 0x00000221B6802650>,
                         62),
                        (<numba.core.ir.Assign object at 0x00000221B5BE6A90>,
                         182)],
             'r': [(<numba.core.ir.Assign object at 0x00000221B677D990>, 0),
                   (<numba.core.ir.Assign object at 0x00000221B5EDE850>, 292)]})
2024-07-15 06:11:46,547 DEBUG:SSA violators <numba.core.utils.OrderedSet object at 0x00000221B5EE4BD0>
2024-07-15 06:11:46,547 DEBUG:Fix SSA violator on var r
2024-07-15 06:11:46,547 DEBUG:==== SSA block rewrite pass on 0
2024-07-15 06:11:46,547 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B68F6710>
2024-07-15 06:11:46,547 DEBUG:on stmt: a = arg(0, name=a)
2024-07-15 06:11:46,547 DEBUG:on stmt: b = arg(1, name=b)
2024-07-15 06:11:46,547 DEBUG:on stmt: $8load_deref.1 = freevar(tp: float32)
2024-07-15 06:11:46,547 DEBUG:on stmt: $const10.2 = const(int, 1)
2024-07-15 06:11:46,547 DEBUG:on stmt: r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,547 DEBUG:first assign: r
2024-07-15 06:11:46,547 DEBUG:replaced with: r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,547 DEBUG:on stmt: $30load_deref.5 = freevar(tp: float32)
2024-07-15 06:11:46,547 DEBUG:on stmt: a.1 = call $30load_deref.5(a, func=$30load_deref.5, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,547 DEBUG:on stmt: $const52.9 = const(int, 0)
2024-07-15 06:11:46,547 DEBUG:on stmt: $54compare_op.10 = b < $const52.9
2024-07-15 06:11:46,547 DEBUG:on stmt: bool60 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,547 DEBUG:on stmt: $60pred = call bool60($54compare_op.10, func=bool60, args=(Var($54compare_op.10, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,547 DEBUG:on stmt: branch $60pred, 62, 182
2024-07-15 06:11:46,547 DEBUG:==== SSA block rewrite pass on 62
2024-07-15 06:11:46,547 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B68F6710>
2024-07-15 06:11:46,547 DEBUG:on stmt: invert = const(bool, True)
2024-07-15 06:11:46,547 DEBUG:on stmt: exp = unary(fn=<built-in function neg>, value=b)
2024-07-15 06:11:46,547 DEBUG:on stmt: $const74.4 = const(int, 0)
2024-07-15 06:11:46,547 DEBUG:on stmt: $76compare_op.5 = exp < $const74.4
2024-07-15 06:11:46,548 DEBUG:on stmt: bool82 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,548 DEBUG:on stmt: $82pred = call bool82($76compare_op.5, func=bool82, args=(Var($76compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,548 DEBUG:on stmt: branch $82pred, 84, 98
2024-07-15 06:11:46,548 DEBUG:==== SSA block rewrite pass on 84
2024-07-15 06:11:46,548 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B68F6710>
2024-07-15 06:11:46,548 DEBUG:on stmt: $84load_global.0 = global(OverflowError: <class 'OverflowError'>)
2024-07-15 06:11:46,548 DEBUG:on stmt: <static> raise <class 'OverflowError'>
2024-07-15 06:11:46,548 DEBUG:==== SSA block rewrite pass on 98
2024-07-15 06:11:46,548 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B68F6710>
2024-07-15 06:11:46,548 DEBUG:on stmt: $98load_deref.0 = freevar(is_integer: False)
2024-07-15 06:11:46,548 DEBUG:on stmt: bool100 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,548 DEBUG:on stmt: $100pred = call bool100($98load_deref.0, func=bool100, args=(Var($98load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,548 DEBUG:on stmt: jump 180
2024-07-15 06:11:46,548 DEBUG:==== SSA block rewrite pass on 180
2024-07-15 06:11:46,548 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B68F6710>
2024-07-15 06:11:46,548 DEBUG:on stmt: jump 190
2024-07-15 06:11:46,548 DEBUG:==== SSA block rewrite pass on 182
2024-07-15 06:11:46,548 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B68F6710>
2024-07-15 06:11:46,548 DEBUG:on stmt: invert = const(bool, False)
2024-07-15 06:11:46,548 DEBUG:on stmt: exp = b
2024-07-15 06:11:46,548 DEBUG:on stmt: jump 190
2024-07-15 06:11:46,548 DEBUG:==== SSA block rewrite pass on 190
2024-07-15 06:11:46,548 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B68F6710>
2024-07-15 06:11:46,548 DEBUG:on stmt: $const192.1 = const(int, 65536)
2024-07-15 06:11:46,548 DEBUG:on stmt: $194compare_op.2 = exp > $const192.1
2024-07-15 06:11:46,548 DEBUG:on stmt: bool200 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,548 DEBUG:on stmt: $200pred = call bool200($194compare_op.2, func=bool200, args=(Var($194compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,548 DEBUG:on stmt: branch $200pred, 202, 270
2024-07-15 06:11:46,548 DEBUG:==== SSA block rewrite pass on 202
2024-07-15 06:11:46,548 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B68F6710>
2024-07-15 06:11:46,548 DEBUG:on stmt: $202load_global.0 = global(math: <module 'math' (built-in)>)
2024-07-15 06:11:46,548 DEBUG:on stmt: $214load_attr.2 = getattr(value=$202load_global.0, attr=pow)
2024-07-15 06:11:46,548 DEBUG:on stmt: $226load_global.4 = global(float: <class 'float'>)
2024-07-15 06:11:46,548 DEBUG:on stmt: $244call.7 = call $226load_global.4(b, func=$226load_global.4, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,548 DEBUG:on stmt: $258call.8 = call $214load_attr.2(a.1, $244call.7, func=$214load_attr.2, args=[Var(a.1, numbers.py:217), Var($244call.7, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,548 DEBUG:on stmt: $268return_value.9 = cast(value=$258call.8)
2024-07-15 06:11:46,549 DEBUG:on stmt: return $268return_value.9
2024-07-15 06:11:46,549 DEBUG:==== SSA block rewrite pass on 270
2024-07-15 06:11:46,549 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B68F6710>
2024-07-15 06:11:46,549 DEBUG:on stmt: $const272.1 = const(int, 0)
2024-07-15 06:11:46,549 DEBUG:on stmt: $274compare_op.2 = exp != $const272.1
2024-07-15 06:11:46,549 DEBUG:on stmt: bool280 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,549 DEBUG:on stmt: $280pred = call bool280($274compare_op.2, func=bool280, args=(Var($274compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,549 DEBUG:on stmt: branch $280pred, 282, 334
2024-07-15 06:11:46,549 DEBUG:==== SSA block rewrite pass on 282
2024-07-15 06:11:46,549 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B68F6710>
2024-07-15 06:11:46,549 DEBUG:on stmt: $const284.1 = const(int, 1)
2024-07-15 06:11:46,549 DEBUG:on stmt: $binop_and_286.2 = exp & $const284.1
2024-07-15 06:11:46,549 DEBUG:on stmt: bool290 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,549 DEBUG:on stmt: $290pred = call bool290($binop_and_286.2, func=bool290, args=(Var($binop_and_286.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,549 DEBUG:on stmt: branch $290pred, 292, 302
2024-07-15 06:11:46,549 DEBUG:==== SSA block rewrite pass on 292
2024-07-15 06:11:46,549 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B68F6710>
2024-07-15 06:11:46,549 DEBUG:on stmt: $binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:46,549 DEBUG:on stmt: r = $binop_imul296.2
2024-07-15 06:11:46,549 DEBUG:replaced with: r.1 = $binop_imul296.2
2024-07-15 06:11:46,549 DEBUG:on stmt: jump 302
2024-07-15 06:11:46,549 DEBUG:==== SSA block rewrite pass on 302
2024-07-15 06:11:46,549 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B68F6710>
2024-07-15 06:11:46,549 DEBUG:on stmt: $const304.1 = const(int, 1)
2024-07-15 06:11:46,549 DEBUG:on stmt: $binop_irshift306.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const304.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:46,549 DEBUG:on stmt: exp = $binop_irshift306.2
2024-07-15 06:11:46,549 DEBUG:on stmt: $binop_imul316.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:46,549 DEBUG:on stmt: a.1 = $binop_imul316.5
2024-07-15 06:11:46,549 DEBUG:on stmt: $const324.7 = const(int, 0)
2024-07-15 06:11:46,549 DEBUG:on stmt: $326compare_op.8 = exp != $const324.7
2024-07-15 06:11:46,549 DEBUG:on stmt: bool332 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,549 DEBUG:on stmt: $332pred = call bool332($326compare_op.8, func=bool332, args=(Var($326compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,549 DEBUG:on stmt: branch $332pred, 282, 334
2024-07-15 06:11:46,549 DEBUG:==== SSA block rewrite pass on 334
2024-07-15 06:11:46,549 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B68F6710>
2024-07-15 06:11:46,549 DEBUG:on stmt: bool336 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,549 DEBUG:on stmt: $336pred = call bool336(invert, func=bool336, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,550 DEBUG:on stmt: branch $336pred, 338, 348
2024-07-15 06:11:46,550 DEBUG:==== SSA block rewrite pass on 338
2024-07-15 06:11:46,550 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B68F6710>
2024-07-15 06:11:46,550 DEBUG:on stmt: $const338.0 = const(float, 1.0)
2024-07-15 06:11:46,550 DEBUG:on stmt: $binop_truediv342.2 = $const338.0 / r
2024-07-15 06:11:46,550 DEBUG:on stmt: $phi350.0 = $binop_truediv342.2
2024-07-15 06:11:46,550 DEBUG:on stmt: jump 350
2024-07-15 06:11:46,550 DEBUG:==== SSA block rewrite pass on 348
2024-07-15 06:11:46,550 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B68F6710>
2024-07-15 06:11:46,550 DEBUG:on stmt: $phi350.0 = r
2024-07-15 06:11:46,550 DEBUG:on stmt: jump 350
2024-07-15 06:11:46,550 DEBUG:==== SSA block rewrite pass on 350
2024-07-15 06:11:46,550 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B68F6710>
2024-07-15 06:11:46,550 DEBUG:on stmt: $350return_value.1 = cast(value=$phi350.0)
2024-07-15 06:11:46,550 DEBUG:on stmt: return $350return_value.1
2024-07-15 06:11:46,550 DEBUG:Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x00000221B68F57D0>],
             292: [<numba.core.ir.Assign object at 0x00000221B5EDFB10>]})
2024-07-15 06:11:46,550 DEBUG:==== SSA block rewrite pass on 0
2024-07-15 06:11:46,550 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B68F6590>
2024-07-15 06:11:46,550 DEBUG:on stmt: a = arg(0, name=a)
2024-07-15 06:11:46,550 DEBUG:on stmt: b = arg(1, name=b)
2024-07-15 06:11:46,550 DEBUG:on stmt: $8load_deref.1 = freevar(tp: float32)
2024-07-15 06:11:46,550 DEBUG:on stmt: $const10.2 = const(int, 1)
2024-07-15 06:11:46,550 DEBUG:on stmt: r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,550 DEBUG:on stmt: $30load_deref.5 = freevar(tp: float32)
2024-07-15 06:11:46,550 DEBUG:on stmt: a.1 = call $30load_deref.5(a, func=$30load_deref.5, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,550 DEBUG:on stmt: $const52.9 = const(int, 0)
2024-07-15 06:11:46,550 DEBUG:on stmt: $54compare_op.10 = b < $const52.9
2024-07-15 06:11:46,550 DEBUG:on stmt: bool60 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,550 DEBUG:on stmt: $60pred = call bool60($54compare_op.10, func=bool60, args=(Var($54compare_op.10, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,550 DEBUG:on stmt: branch $60pred, 62, 182
2024-07-15 06:11:46,550 DEBUG:==== SSA block rewrite pass on 62
2024-07-15 06:11:46,550 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B68F6590>
2024-07-15 06:11:46,550 DEBUG:on stmt: invert = const(bool, True)
2024-07-15 06:11:46,551 DEBUG:on stmt: exp = unary(fn=<built-in function neg>, value=b)
2024-07-15 06:11:46,551 DEBUG:on stmt: $const74.4 = const(int, 0)
2024-07-15 06:11:46,551 DEBUG:on stmt: $76compare_op.5 = exp < $const74.4
2024-07-15 06:11:46,551 DEBUG:on stmt: bool82 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,551 DEBUG:on stmt: $82pred = call bool82($76compare_op.5, func=bool82, args=(Var($76compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,551 DEBUG:on stmt: branch $82pred, 84, 98
2024-07-15 06:11:46,551 DEBUG:==== SSA block rewrite pass on 84
2024-07-15 06:11:46,551 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B68F6590>
2024-07-15 06:11:46,551 DEBUG:on stmt: $84load_global.0 = global(OverflowError: <class 'OverflowError'>)
2024-07-15 06:11:46,551 DEBUG:on stmt: <static> raise <class 'OverflowError'>
2024-07-15 06:11:46,551 DEBUG:==== SSA block rewrite pass on 98
2024-07-15 06:11:46,551 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B68F6590>
2024-07-15 06:11:46,551 DEBUG:on stmt: $98load_deref.0 = freevar(is_integer: False)
2024-07-15 06:11:46,551 DEBUG:on stmt: bool100 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,551 DEBUG:on stmt: $100pred = call bool100($98load_deref.0, func=bool100, args=(Var($98load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,551 DEBUG:on stmt: jump 180
2024-07-15 06:11:46,551 DEBUG:==== SSA block rewrite pass on 180
2024-07-15 06:11:46,551 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B68F6590>
2024-07-15 06:11:46,551 DEBUG:on stmt: jump 190
2024-07-15 06:11:46,551 DEBUG:==== SSA block rewrite pass on 182
2024-07-15 06:11:46,551 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B68F6590>
2024-07-15 06:11:46,551 DEBUG:on stmt: invert = const(bool, False)
2024-07-15 06:11:46,551 DEBUG:on stmt: exp = b
2024-07-15 06:11:46,551 DEBUG:on stmt: jump 190
2024-07-15 06:11:46,551 DEBUG:==== SSA block rewrite pass on 190
2024-07-15 06:11:46,551 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B68F6590>
2024-07-15 06:11:46,551 DEBUG:on stmt: $const192.1 = const(int, 65536)
2024-07-15 06:11:46,551 DEBUG:on stmt: $194compare_op.2 = exp > $const192.1
2024-07-15 06:11:46,551 DEBUG:on stmt: bool200 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,551 DEBUG:on stmt: $200pred = call bool200($194compare_op.2, func=bool200, args=(Var($194compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,551 DEBUG:on stmt: branch $200pred, 202, 270
2024-07-15 06:11:46,551 DEBUG:==== SSA block rewrite pass on 202
2024-07-15 06:11:46,551 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B68F6590>
2024-07-15 06:11:46,551 DEBUG:on stmt: $202load_global.0 = global(math: <module 'math' (built-in)>)
2024-07-15 06:11:46,552 DEBUG:on stmt: $214load_attr.2 = getattr(value=$202load_global.0, attr=pow)
2024-07-15 06:11:46,552 DEBUG:on stmt: $226load_global.4 = global(float: <class 'float'>)
2024-07-15 06:11:46,552 DEBUG:on stmt: $244call.7 = call $226load_global.4(b, func=$226load_global.4, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,552 DEBUG:on stmt: $258call.8 = call $214load_attr.2(a.1, $244call.7, func=$214load_attr.2, args=[Var(a.1, numbers.py:217), Var($244call.7, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,552 DEBUG:on stmt: $268return_value.9 = cast(value=$258call.8)
2024-07-15 06:11:46,552 DEBUG:on stmt: return $268return_value.9
2024-07-15 06:11:46,552 DEBUG:==== SSA block rewrite pass on 270
2024-07-15 06:11:46,552 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B68F6590>
2024-07-15 06:11:46,552 DEBUG:on stmt: $const272.1 = const(int, 0)
2024-07-15 06:11:46,552 DEBUG:on stmt: $274compare_op.2 = exp != $const272.1
2024-07-15 06:11:46,552 DEBUG:on stmt: bool280 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,552 DEBUG:on stmt: $280pred = call bool280($274compare_op.2, func=bool280, args=(Var($274compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,552 DEBUG:on stmt: branch $280pred, 282, 334
2024-07-15 06:11:46,552 DEBUG:==== SSA block rewrite pass on 282
2024-07-15 06:11:46,552 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B68F6590>
2024-07-15 06:11:46,552 DEBUG:on stmt: $const284.1 = const(int, 1)
2024-07-15 06:11:46,552 DEBUG:on stmt: $binop_and_286.2 = exp & $const284.1
2024-07-15 06:11:46,552 DEBUG:on stmt: bool290 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,552 DEBUG:on stmt: $290pred = call bool290($binop_and_286.2, func=bool290, args=(Var($binop_and_286.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,552 DEBUG:on stmt: branch $290pred, 292, 302
2024-07-15 06:11:46,552 DEBUG:==== SSA block rewrite pass on 292
2024-07-15 06:11:46,552 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B68F6590>
2024-07-15 06:11:46,552 DEBUG:on stmt: $binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:46,552 DEBUG:find_def var='r' stmt=$binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:46,552 DEBUG:find_def_from_top label 292
2024-07-15 06:11:46,552 DEBUG:idom 282 from label 292
2024-07-15 06:11:46,552 DEBUG:find_def_from_bottom label 282
2024-07-15 06:11:46,552 DEBUG:find_def_from_top label 282
2024-07-15 06:11:46,552 DEBUG:insert phi node r.2 = phi(incoming_values=[], incoming_blocks=[]) at 282
2024-07-15 06:11:46,552 DEBUG:find_def_from_bottom label 302
2024-07-15 06:11:46,552 DEBUG:find_def_from_top label 302
2024-07-15 06:11:46,552 DEBUG:insert phi node r.3 = phi(incoming_values=[], incoming_blocks=[]) at 302
2024-07-15 06:11:46,553 DEBUG:find_def_from_bottom label 282
2024-07-15 06:11:46,553 DEBUG:incoming_def r.2 = phi(incoming_values=[], incoming_blocks=[])
2024-07-15 06:11:46,553 DEBUG:find_def_from_bottom label 292
2024-07-15 06:11:46,553 DEBUG:incoming_def r.1 = $binop_imul296.2
2024-07-15 06:11:46,553 DEBUG:incoming_def r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[282, 292])
2024-07-15 06:11:46,553 DEBUG:find_def_from_bottom label 270
2024-07-15 06:11:46,553 DEBUG:find_def_from_top label 270
2024-07-15 06:11:46,553 DEBUG:idom 190 from label 270
2024-07-15 06:11:46,553 DEBUG:find_def_from_bottom label 190
2024-07-15 06:11:46,553 DEBUG:find_def_from_top label 190
2024-07-15 06:11:46,553 DEBUG:idom 0 from label 190
2024-07-15 06:11:46,553 DEBUG:find_def_from_bottom label 0
2024-07-15 06:11:46,553 DEBUG:incoming_def r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,553 DEBUG:replaced with: $binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:46,553 DEBUG:on stmt: r.1 = $binop_imul296.2
2024-07-15 06:11:46,553 DEBUG:on stmt: jump 302
2024-07-15 06:11:46,553 DEBUG:==== SSA block rewrite pass on 302
2024-07-15 06:11:46,553 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B68F6590>
2024-07-15 06:11:46,553 DEBUG:on stmt: $const304.1 = const(int, 1)
2024-07-15 06:11:46,553 DEBUG:on stmt: $binop_irshift306.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const304.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:46,553 DEBUG:on stmt: exp = $binop_irshift306.2
2024-07-15 06:11:46,553 DEBUG:on stmt: $binop_imul316.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:46,553 DEBUG:on stmt: a.1 = $binop_imul316.5
2024-07-15 06:11:46,553 DEBUG:on stmt: $const324.7 = const(int, 0)
2024-07-15 06:11:46,553 DEBUG:on stmt: $326compare_op.8 = exp != $const324.7
2024-07-15 06:11:46,553 DEBUG:on stmt: bool332 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,553 DEBUG:on stmt: $332pred = call bool332($326compare_op.8, func=bool332, args=(Var($326compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,553 DEBUG:on stmt: branch $332pred, 282, 334
2024-07-15 06:11:46,553 DEBUG:==== SSA block rewrite pass on 334
2024-07-15 06:11:46,553 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B68F6590>
2024-07-15 06:11:46,553 DEBUG:on stmt: bool336 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,553 DEBUG:on stmt: $336pred = call bool336(invert, func=bool336, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,553 DEBUG:on stmt: branch $336pred, 338, 348
2024-07-15 06:11:46,554 DEBUG:==== SSA block rewrite pass on 338
2024-07-15 06:11:46,554 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B68F6590>
2024-07-15 06:11:46,554 DEBUG:on stmt: $const338.0 = const(float, 1.0)
2024-07-15 06:11:46,554 DEBUG:on stmt: $binop_truediv342.2 = $const338.0 / r
2024-07-15 06:11:46,554 DEBUG:find_def var='r' stmt=$binop_truediv342.2 = $const338.0 / r
2024-07-15 06:11:46,554 DEBUG:find_def_from_top label 338
2024-07-15 06:11:46,554 DEBUG:idom 334 from label 338
2024-07-15 06:11:46,554 DEBUG:find_def_from_bottom label 334
2024-07-15 06:11:46,554 DEBUG:find_def_from_top label 334
2024-07-15 06:11:46,554 DEBUG:insert phi node r.4 = phi(incoming_values=[], incoming_blocks=[]) at 334
2024-07-15 06:11:46,554 DEBUG:find_def_from_bottom label 302
2024-07-15 06:11:46,554 DEBUG:incoming_def r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[282, 292])
2024-07-15 06:11:46,554 DEBUG:find_def_from_bottom label 270
2024-07-15 06:11:46,554 DEBUG:find_def_from_top label 270
2024-07-15 06:11:46,554 DEBUG:idom 190 from label 270
2024-07-15 06:11:46,554 DEBUG:find_def_from_bottom label 190
2024-07-15 06:11:46,554 DEBUG:find_def_from_top label 190
2024-07-15 06:11:46,554 DEBUG:idom 0 from label 190
2024-07-15 06:11:46,554 DEBUG:find_def_from_bottom label 0
2024-07-15 06:11:46,554 DEBUG:incoming_def r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,554 DEBUG:replaced with: $binop_truediv342.2 = $const338.0 / r.4
2024-07-15 06:11:46,554 DEBUG:on stmt: $phi350.0 = $binop_truediv342.2
2024-07-15 06:11:46,554 DEBUG:on stmt: jump 350
2024-07-15 06:11:46,554 DEBUG:==== SSA block rewrite pass on 348
2024-07-15 06:11:46,554 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B68F6590>
2024-07-15 06:11:46,554 DEBUG:on stmt: $phi350.0 = r
2024-07-15 06:11:46,554 DEBUG:find_def var='r' stmt=$phi350.0 = r
2024-07-15 06:11:46,554 DEBUG:find_def_from_top label 348
2024-07-15 06:11:46,554 DEBUG:idom 334 from label 348
2024-07-15 06:11:46,554 DEBUG:find_def_from_bottom label 334
2024-07-15 06:11:46,554 DEBUG:replaced with: $phi350.0 = r.4
2024-07-15 06:11:46,554 DEBUG:on stmt: jump 350
2024-07-15 06:11:46,554 DEBUG:==== SSA block rewrite pass on 350
2024-07-15 06:11:46,554 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B68F6590>
2024-07-15 06:11:46,554 DEBUG:on stmt: $350return_value.1 = cast(value=$phi350.0)
2024-07-15 06:11:46,554 DEBUG:on stmt: return $350return_value.1
2024-07-15 06:11:46,554 DEBUG:Fix SSA violator on var a.1
2024-07-15 06:11:46,554 DEBUG:==== SSA block rewrite pass on 0
2024-07-15 06:11:46,554 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6786090>
2024-07-15 06:11:46,555 DEBUG:on stmt: a = arg(0, name=a)
2024-07-15 06:11:46,555 DEBUG:on stmt: b = arg(1, name=b)
2024-07-15 06:11:46,555 DEBUG:on stmt: $8load_deref.1 = freevar(tp: float32)
2024-07-15 06:11:46,555 DEBUG:on stmt: $const10.2 = const(int, 1)
2024-07-15 06:11:46,555 DEBUG:on stmt: r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,555 DEBUG:on stmt: $30load_deref.5 = freevar(tp: float32)
2024-07-15 06:11:46,555 DEBUG:on stmt: a.1 = call $30load_deref.5(a, func=$30load_deref.5, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,555 DEBUG:first assign: a.1
2024-07-15 06:11:46,556 DEBUG:replaced with: a.1 = call $30load_deref.5(a, func=$30load_deref.5, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,556 DEBUG:on stmt: $const52.9 = const(int, 0)
2024-07-15 06:11:46,556 DEBUG:on stmt: $54compare_op.10 = b < $const52.9
2024-07-15 06:11:46,556 DEBUG:on stmt: bool60 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,556 DEBUG:on stmt: $60pred = call bool60($54compare_op.10, func=bool60, args=(Var($54compare_op.10, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,556 DEBUG:on stmt: branch $60pred, 62, 182
2024-07-15 06:11:46,556 DEBUG:==== SSA block rewrite pass on 62
2024-07-15 06:11:46,556 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6786090>
2024-07-15 06:11:46,556 DEBUG:on stmt: invert = const(bool, True)
2024-07-15 06:11:46,556 DEBUG:on stmt: exp = unary(fn=<built-in function neg>, value=b)
2024-07-15 06:11:46,556 DEBUG:on stmt: $const74.4 = const(int, 0)
2024-07-15 06:11:46,556 DEBUG:on stmt: $76compare_op.5 = exp < $const74.4
2024-07-15 06:11:46,556 DEBUG:on stmt: bool82 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,556 DEBUG:on stmt: $82pred = call bool82($76compare_op.5, func=bool82, args=(Var($76compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,556 DEBUG:on stmt: branch $82pred, 84, 98
2024-07-15 06:11:46,556 DEBUG:==== SSA block rewrite pass on 84
2024-07-15 06:11:46,556 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6786090>
2024-07-15 06:11:46,556 DEBUG:on stmt: $84load_global.0 = global(OverflowError: <class 'OverflowError'>)
2024-07-15 06:11:46,556 DEBUG:on stmt: <static> raise <class 'OverflowError'>
2024-07-15 06:11:46,556 DEBUG:==== SSA block rewrite pass on 98
2024-07-15 06:11:46,556 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6786090>
2024-07-15 06:11:46,556 DEBUG:on stmt: $98load_deref.0 = freevar(is_integer: False)
2024-07-15 06:11:46,556 DEBUG:on stmt: bool100 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,556 DEBUG:on stmt: $100pred = call bool100($98load_deref.0, func=bool100, args=(Var($98load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,556 DEBUG:on stmt: jump 180
2024-07-15 06:11:46,556 DEBUG:==== SSA block rewrite pass on 180
2024-07-15 06:11:46,556 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6786090>
2024-07-15 06:11:46,556 DEBUG:on stmt: jump 190
2024-07-15 06:11:46,556 DEBUG:==== SSA block rewrite pass on 182
2024-07-15 06:11:46,556 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6786090>
2024-07-15 06:11:46,556 DEBUG:on stmt: invert = const(bool, False)
2024-07-15 06:11:46,556 DEBUG:on stmt: exp = b
2024-07-15 06:11:46,556 DEBUG:on stmt: jump 190
2024-07-15 06:11:46,557 DEBUG:==== SSA block rewrite pass on 190
2024-07-15 06:11:46,557 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6786090>
2024-07-15 06:11:46,557 DEBUG:on stmt: $const192.1 = const(int, 65536)
2024-07-15 06:11:46,557 DEBUG:on stmt: $194compare_op.2 = exp > $const192.1
2024-07-15 06:11:46,557 DEBUG:on stmt: bool200 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,557 DEBUG:on stmt: $200pred = call bool200($194compare_op.2, func=bool200, args=(Var($194compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,557 DEBUG:on stmt: branch $200pred, 202, 270
2024-07-15 06:11:46,557 DEBUG:==== SSA block rewrite pass on 202
2024-07-15 06:11:46,557 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6786090>
2024-07-15 06:11:46,557 DEBUG:on stmt: $202load_global.0 = global(math: <module 'math' (built-in)>)
2024-07-15 06:11:46,557 DEBUG:on stmt: $214load_attr.2 = getattr(value=$202load_global.0, attr=pow)
2024-07-15 06:11:46,557 DEBUG:on stmt: $226load_global.4 = global(float: <class 'float'>)
2024-07-15 06:11:46,557 DEBUG:on stmt: $244call.7 = call $226load_global.4(b, func=$226load_global.4, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,557 DEBUG:on stmt: $258call.8 = call $214load_attr.2(a.1, $244call.7, func=$214load_attr.2, args=[Var(a.1, numbers.py:217), Var($244call.7, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,557 DEBUG:on stmt: $268return_value.9 = cast(value=$258call.8)
2024-07-15 06:11:46,557 DEBUG:on stmt: return $268return_value.9
2024-07-15 06:11:46,557 DEBUG:==== SSA block rewrite pass on 270
2024-07-15 06:11:46,557 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6786090>
2024-07-15 06:11:46,557 DEBUG:on stmt: $const272.1 = const(int, 0)
2024-07-15 06:11:46,557 DEBUG:on stmt: $274compare_op.2 = exp != $const272.1
2024-07-15 06:11:46,557 DEBUG:on stmt: bool280 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,557 DEBUG:on stmt: $280pred = call bool280($274compare_op.2, func=bool280, args=(Var($274compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,557 DEBUG:on stmt: branch $280pred, 282, 334
2024-07-15 06:11:46,557 DEBUG:==== SSA block rewrite pass on 282
2024-07-15 06:11:46,557 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6786090>
2024-07-15 06:11:46,557 DEBUG:on stmt: r.2 = phi(incoming_values=[Var(r.3, numbers.py:239), Var(r, numbers.py:216)], incoming_blocks=[302, 270])
2024-07-15 06:11:46,557 DEBUG:on stmt: $const284.1 = const(int, 1)
2024-07-15 06:11:46,558 DEBUG:on stmt: $binop_and_286.2 = exp & $const284.1
2024-07-15 06:11:46,558 DEBUG:on stmt: bool290 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,558 DEBUG:on stmt: $290pred = call bool290($binop_and_286.2, func=bool290, args=(Var($binop_and_286.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,558 DEBUG:on stmt: branch $290pred, 292, 302
2024-07-15 06:11:46,558 DEBUG:==== SSA block rewrite pass on 292
2024-07-15 06:11:46,558 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6786090>
2024-07-15 06:11:46,558 DEBUG:on stmt: $binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:46,558 DEBUG:on stmt: r.1 = $binop_imul296.2
2024-07-15 06:11:46,558 DEBUG:on stmt: jump 302
2024-07-15 06:11:46,558 DEBUG:==== SSA block rewrite pass on 302
2024-07-15 06:11:46,558 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6786090>
2024-07-15 06:11:46,558 DEBUG:on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[282, 292])
2024-07-15 06:11:46,558 DEBUG:on stmt: $const304.1 = const(int, 1)
2024-07-15 06:11:46,558 DEBUG:on stmt: $binop_irshift306.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const304.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:46,558 DEBUG:on stmt: exp = $binop_irshift306.2
2024-07-15 06:11:46,558 DEBUG:on stmt: $binop_imul316.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:46,558 DEBUG:on stmt: a.1 = $binop_imul316.5
2024-07-15 06:11:46,558 DEBUG:replaced with: a.1.1 = $binop_imul316.5
2024-07-15 06:11:46,558 DEBUG:on stmt: $const324.7 = const(int, 0)
2024-07-15 06:11:46,558 DEBUG:on stmt: $326compare_op.8 = exp != $const324.7
2024-07-15 06:11:46,558 DEBUG:on stmt: bool332 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,558 DEBUG:on stmt: $332pred = call bool332($326compare_op.8, func=bool332, args=(Var($326compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,558 DEBUG:on stmt: branch $332pred, 282, 334
2024-07-15 06:11:46,558 DEBUG:==== SSA block rewrite pass on 334
2024-07-15 06:11:46,558 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6786090>
2024-07-15 06:11:46,558 DEBUG:on stmt: r.4 = phi(incoming_values=[Var(r.3, numbers.py:239), Var(r, numbers.py:216)], incoming_blocks=[302, 270])
2024-07-15 06:11:46,558 DEBUG:on stmt: bool336 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,558 DEBUG:on stmt: $336pred = call bool336(invert, func=bool336, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,558 DEBUG:on stmt: branch $336pred, 338, 348
2024-07-15 06:11:46,558 DEBUG:==== SSA block rewrite pass on 338
2024-07-15 06:11:46,558 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6786090>
2024-07-15 06:11:46,558 DEBUG:on stmt: $const338.0 = const(float, 1.0)
2024-07-15 06:11:46,558 DEBUG:on stmt: $binop_truediv342.2 = $const338.0 / r.4
2024-07-15 06:11:46,558 DEBUG:on stmt: $phi350.0 = $binop_truediv342.2
2024-07-15 06:11:46,558 DEBUG:on stmt: jump 350
2024-07-15 06:11:46,559 DEBUG:==== SSA block rewrite pass on 348
2024-07-15 06:11:46,559 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6786090>
2024-07-15 06:11:46,559 DEBUG:on stmt: $phi350.0 = r.4
2024-07-15 06:11:46,559 DEBUG:on stmt: jump 350
2024-07-15 06:11:46,559 DEBUG:==== SSA block rewrite pass on 350
2024-07-15 06:11:46,559 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6786090>
2024-07-15 06:11:46,559 DEBUG:on stmt: $350return_value.1 = cast(value=$phi350.0)
2024-07-15 06:11:46,559 DEBUG:on stmt: return $350return_value.1
2024-07-15 06:11:46,559 DEBUG:Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x00000221B5EE5E10>],
             302: [<numba.core.ir.Assign object at 0x00000221B5E5AC90>]})
2024-07-15 06:11:46,559 DEBUG:==== SSA block rewrite pass on 0
2024-07-15 06:11:46,559 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B6803BD0>
2024-07-15 06:11:46,559 DEBUG:on stmt: a = arg(0, name=a)
2024-07-15 06:11:46,559 DEBUG:on stmt: b = arg(1, name=b)
2024-07-15 06:11:46,559 DEBUG:on stmt: $8load_deref.1 = freevar(tp: float32)
2024-07-15 06:11:46,559 DEBUG:on stmt: $const10.2 = const(int, 1)
2024-07-15 06:11:46,559 DEBUG:on stmt: r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,559 DEBUG:on stmt: $30load_deref.5 = freevar(tp: float32)
2024-07-15 06:11:46,559 DEBUG:on stmt: a.1 = call $30load_deref.5(a, func=$30load_deref.5, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,559 DEBUG:on stmt: $const52.9 = const(int, 0)
2024-07-15 06:11:46,559 DEBUG:on stmt: $54compare_op.10 = b < $const52.9
2024-07-15 06:11:46,559 DEBUG:on stmt: bool60 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,559 DEBUG:on stmt: $60pred = call bool60($54compare_op.10, func=bool60, args=(Var($54compare_op.10, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,559 DEBUG:on stmt: branch $60pred, 62, 182
2024-07-15 06:11:46,559 DEBUG:==== SSA block rewrite pass on 62
2024-07-15 06:11:46,559 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B6803BD0>
2024-07-15 06:11:46,559 DEBUG:on stmt: invert = const(bool, True)
2024-07-15 06:11:46,559 DEBUG:on stmt: exp = unary(fn=<built-in function neg>, value=b)
2024-07-15 06:11:46,559 DEBUG:on stmt: $const74.4 = const(int, 0)
2024-07-15 06:11:46,559 DEBUG:on stmt: $76compare_op.5 = exp < $const74.4
2024-07-15 06:11:46,559 DEBUG:on stmt: bool82 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,559 DEBUG:on stmt: $82pred = call bool82($76compare_op.5, func=bool82, args=(Var($76compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,559 DEBUG:on stmt: branch $82pred, 84, 98
2024-07-15 06:11:46,559 DEBUG:==== SSA block rewrite pass on 84
2024-07-15 06:11:46,560 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B6803BD0>
2024-07-15 06:11:46,560 DEBUG:on stmt: $84load_global.0 = global(OverflowError: <class 'OverflowError'>)
2024-07-15 06:11:46,560 DEBUG:on stmt: <static> raise <class 'OverflowError'>
2024-07-15 06:11:46,560 DEBUG:==== SSA block rewrite pass on 98
2024-07-15 06:11:46,560 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B6803BD0>
2024-07-15 06:11:46,560 DEBUG:on stmt: $98load_deref.0 = freevar(is_integer: False)
2024-07-15 06:11:46,560 DEBUG:on stmt: bool100 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,560 DEBUG:on stmt: $100pred = call bool100($98load_deref.0, func=bool100, args=(Var($98load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,560 DEBUG:on stmt: jump 180
2024-07-15 06:11:46,560 DEBUG:==== SSA block rewrite pass on 180
2024-07-15 06:11:46,560 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B6803BD0>
2024-07-15 06:11:46,560 DEBUG:on stmt: jump 190
2024-07-15 06:11:46,560 DEBUG:==== SSA block rewrite pass on 182
2024-07-15 06:11:46,560 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B6803BD0>
2024-07-15 06:11:46,560 DEBUG:on stmt: invert = const(bool, False)
2024-07-15 06:11:46,560 DEBUG:on stmt: exp = b
2024-07-15 06:11:46,560 DEBUG:on stmt: jump 190
2024-07-15 06:11:46,560 DEBUG:==== SSA block rewrite pass on 190
2024-07-15 06:11:46,560 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B6803BD0>
2024-07-15 06:11:46,560 DEBUG:on stmt: $const192.1 = const(int, 65536)
2024-07-15 06:11:46,560 DEBUG:on stmt: $194compare_op.2 = exp > $const192.1
2024-07-15 06:11:46,560 DEBUG:on stmt: bool200 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,560 DEBUG:on stmt: $200pred = call bool200($194compare_op.2, func=bool200, args=(Var($194compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,560 DEBUG:on stmt: branch $200pred, 202, 270
2024-07-15 06:11:46,560 DEBUG:==== SSA block rewrite pass on 202
2024-07-15 06:11:46,560 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B6803BD0>
2024-07-15 06:11:46,560 DEBUG:on stmt: $202load_global.0 = global(math: <module 'math' (built-in)>)
2024-07-15 06:11:46,560 DEBUG:on stmt: $214load_attr.2 = getattr(value=$202load_global.0, attr=pow)
2024-07-15 06:11:46,560 DEBUG:on stmt: $226load_global.4 = global(float: <class 'float'>)
2024-07-15 06:11:46,560 DEBUG:on stmt: $244call.7 = call $226load_global.4(b, func=$226load_global.4, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,560 DEBUG:on stmt: $258call.8 = call $214load_attr.2(a.1, $244call.7, func=$214load_attr.2, args=[Var(a.1, numbers.py:217), Var($244call.7, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,560 DEBUG:find_def var='a.1' stmt=$258call.8 = call $214load_attr.2(a.1, $244call.7, func=$214load_attr.2, args=[Var(a.1, numbers.py:217), Var($244call.7, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,560 DEBUG:find_def_from_top label 202
2024-07-15 06:11:46,560 DEBUG:idom 190 from label 202
2024-07-15 06:11:46,560 DEBUG:find_def_from_bottom label 190
2024-07-15 06:11:46,560 DEBUG:find_def_from_top label 190
2024-07-15 06:11:46,561 DEBUG:idom 0 from label 190
2024-07-15 06:11:46,561 DEBUG:find_def_from_bottom label 0
2024-07-15 06:11:46,561 DEBUG:on stmt: $268return_value.9 = cast(value=$258call.8)
2024-07-15 06:11:46,561 DEBUG:on stmt: return $268return_value.9
2024-07-15 06:11:46,561 DEBUG:==== SSA block rewrite pass on 270
2024-07-15 06:11:46,561 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B6803BD0>
2024-07-15 06:11:46,561 DEBUG:on stmt: $const272.1 = const(int, 0)
2024-07-15 06:11:46,561 DEBUG:on stmt: $274compare_op.2 = exp != $const272.1
2024-07-15 06:11:46,561 DEBUG:on stmt: bool280 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,561 DEBUG:on stmt: $280pred = call bool280($274compare_op.2, func=bool280, args=(Var($274compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,561 DEBUG:on stmt: branch $280pred, 282, 334
2024-07-15 06:11:46,561 DEBUG:==== SSA block rewrite pass on 282
2024-07-15 06:11:46,561 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B6803BD0>
2024-07-15 06:11:46,561 DEBUG:on stmt: r.2 = phi(incoming_values=[Var(r.3, numbers.py:239), Var(r, numbers.py:216)], incoming_blocks=[302, 270])
2024-07-15 06:11:46,561 DEBUG:on stmt: $const284.1 = const(int, 1)
2024-07-15 06:11:46,561 DEBUG:on stmt: $binop_and_286.2 = exp & $const284.1
2024-07-15 06:11:46,561 DEBUG:on stmt: bool290 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,561 DEBUG:on stmt: $290pred = call bool290($binop_and_286.2, func=bool290, args=(Var($binop_and_286.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,561 DEBUG:on stmt: branch $290pred, 292, 302
2024-07-15 06:11:46,561 DEBUG:==== SSA block rewrite pass on 292
2024-07-15 06:11:46,561 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B6803BD0>
2024-07-15 06:11:46,561 DEBUG:on stmt: $binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:46,561 DEBUG:find_def var='a.1' stmt=$binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:46,561 DEBUG:find_def_from_top label 292
2024-07-15 06:11:46,561 DEBUG:idom 282 from label 292
2024-07-15 06:11:46,561 DEBUG:find_def_from_bottom label 282
2024-07-15 06:11:46,561 DEBUG:find_def_from_top label 282
2024-07-15 06:11:46,561 DEBUG:insert phi node a.1.2 = phi(incoming_values=[], incoming_blocks=[]) at 282
2024-07-15 06:11:46,561 DEBUG:find_def_from_bottom label 302
2024-07-15 06:11:46,561 DEBUG:incoming_def a.1.1 = $binop_imul316.5
2024-07-15 06:11:46,561 DEBUG:find_def_from_bottom label 270
2024-07-15 06:11:46,561 DEBUG:find_def_from_top label 270
2024-07-15 06:11:46,561 DEBUG:idom 190 from label 270
2024-07-15 06:11:46,561 DEBUG:find_def_from_bottom label 190
2024-07-15 06:11:46,561 DEBUG:find_def_from_top label 190
2024-07-15 06:11:46,562 DEBUG:idom 0 from label 190
2024-07-15 06:11:46,562 DEBUG:find_def_from_bottom label 0
2024-07-15 06:11:46,562 DEBUG:incoming_def a.1 = call $30load_deref.5(a, func=$30load_deref.5, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,562 DEBUG:replaced with: $binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:46,562 DEBUG:on stmt: r.1 = $binop_imul296.2
2024-07-15 06:11:46,562 DEBUG:on stmt: jump 302
2024-07-15 06:11:46,562 DEBUG:==== SSA block rewrite pass on 302
2024-07-15 06:11:46,562 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B6803BD0>
2024-07-15 06:11:46,562 DEBUG:on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[282, 292])
2024-07-15 06:11:46,562 DEBUG:on stmt: $const304.1 = const(int, 1)
2024-07-15 06:11:46,562 DEBUG:on stmt: $binop_irshift306.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const304.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:46,562 DEBUG:on stmt: exp = $binop_irshift306.2
2024-07-15 06:11:46,562 DEBUG:on stmt: $binop_imul316.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:46,562 DEBUG:find_def var='a.1' stmt=$binop_imul316.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:46,562 DEBUG:find_def_from_top label 302
2024-07-15 06:11:46,562 DEBUG:idom 282 from label 302
2024-07-15 06:11:46,562 DEBUG:find_def_from_bottom label 282
2024-07-15 06:11:46,562 DEBUG:replaced with: $binop_imul316.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:46,562 DEBUG:on stmt: a.1.1 = $binop_imul316.5
2024-07-15 06:11:46,562 DEBUG:on stmt: $const324.7 = const(int, 0)
2024-07-15 06:11:46,562 DEBUG:on stmt: $326compare_op.8 = exp != $const324.7
2024-07-15 06:11:46,562 DEBUG:on stmt: bool332 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,562 DEBUG:on stmt: $332pred = call bool332($326compare_op.8, func=bool332, args=(Var($326compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,562 DEBUG:on stmt: branch $332pred, 282, 334
2024-07-15 06:11:46,562 DEBUG:==== SSA block rewrite pass on 334
2024-07-15 06:11:46,562 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B6803BD0>
2024-07-15 06:11:46,562 DEBUG:on stmt: r.4 = phi(incoming_values=[Var(r.3, numbers.py:239), Var(r, numbers.py:216)], incoming_blocks=[302, 270])
2024-07-15 06:11:46,562 DEBUG:on stmt: bool336 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,562 DEBUG:on stmt: $336pred = call bool336(invert, func=bool336, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,562 DEBUG:on stmt: branch $336pred, 338, 348
2024-07-15 06:11:46,562 DEBUG:==== SSA block rewrite pass on 338
2024-07-15 06:11:46,563 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B6803BD0>
2024-07-15 06:11:46,563 DEBUG:on stmt: $const338.0 = const(float, 1.0)
2024-07-15 06:11:46,563 DEBUG:on stmt: $binop_truediv342.2 = $const338.0 / r.4
2024-07-15 06:11:46,563 DEBUG:on stmt: $phi350.0 = $binop_truediv342.2
2024-07-15 06:11:46,563 DEBUG:on stmt: jump 350
2024-07-15 06:11:46,563 DEBUG:==== SSA block rewrite pass on 348
2024-07-15 06:11:46,563 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B6803BD0>
2024-07-15 06:11:46,563 DEBUG:on stmt: $phi350.0 = r.4
2024-07-15 06:11:46,563 DEBUG:on stmt: jump 350
2024-07-15 06:11:46,563 DEBUG:==== SSA block rewrite pass on 350
2024-07-15 06:11:46,563 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B6803BD0>
2024-07-15 06:11:46,563 DEBUG:on stmt: $350return_value.1 = cast(value=$phi350.0)
2024-07-15 06:11:46,563 DEBUG:on stmt: return $350return_value.1
2024-07-15 06:11:46,563 DEBUG:Fix SSA violator on var invert
2024-07-15 06:11:46,563 DEBUG:==== SSA block rewrite pass on 0
2024-07-15 06:11:46,563 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B68F7B50>
2024-07-15 06:11:46,563 DEBUG:on stmt: a = arg(0, name=a)
2024-07-15 06:11:46,563 DEBUG:on stmt: b = arg(1, name=b)
2024-07-15 06:11:46,563 DEBUG:on stmt: $8load_deref.1 = freevar(tp: float32)
2024-07-15 06:11:46,563 DEBUG:on stmt: $const10.2 = const(int, 1)
2024-07-15 06:11:46,563 DEBUG:on stmt: r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,563 DEBUG:on stmt: $30load_deref.5 = freevar(tp: float32)
2024-07-15 06:11:46,563 DEBUG:on stmt: a.1 = call $30load_deref.5(a, func=$30load_deref.5, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,563 DEBUG:on stmt: $const52.9 = const(int, 0)
2024-07-15 06:11:46,563 DEBUG:on stmt: $54compare_op.10 = b < $const52.9
2024-07-15 06:11:46,563 DEBUG:on stmt: bool60 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,563 DEBUG:on stmt: $60pred = call bool60($54compare_op.10, func=bool60, args=(Var($54compare_op.10, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,563 DEBUG:on stmt: branch $60pred, 62, 182
2024-07-15 06:11:46,563 DEBUG:==== SSA block rewrite pass on 62
2024-07-15 06:11:46,563 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B68F7B50>
2024-07-15 06:11:46,563 DEBUG:on stmt: invert = const(bool, True)
2024-07-15 06:11:46,563 DEBUG:first assign: invert
2024-07-15 06:11:46,563 DEBUG:replaced with: invert = const(bool, True)
2024-07-15 06:11:46,563 DEBUG:on stmt: exp = unary(fn=<built-in function neg>, value=b)
2024-07-15 06:11:46,563 DEBUG:on stmt: $const74.4 = const(int, 0)
2024-07-15 06:11:46,563 DEBUG:on stmt: $76compare_op.5 = exp < $const74.4
2024-07-15 06:11:46,564 DEBUG:on stmt: bool82 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,564 DEBUG:on stmt: $82pred = call bool82($76compare_op.5, func=bool82, args=(Var($76compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,564 DEBUG:on stmt: branch $82pred, 84, 98
2024-07-15 06:11:46,564 DEBUG:==== SSA block rewrite pass on 84
2024-07-15 06:11:46,564 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B68F7B50>
2024-07-15 06:11:46,564 DEBUG:on stmt: $84load_global.0 = global(OverflowError: <class 'OverflowError'>)
2024-07-15 06:11:46,564 DEBUG:on stmt: <static> raise <class 'OverflowError'>
2024-07-15 06:11:46,564 DEBUG:==== SSA block rewrite pass on 98
2024-07-15 06:11:46,564 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B68F7B50>
2024-07-15 06:11:46,564 DEBUG:on stmt: $98load_deref.0 = freevar(is_integer: False)
2024-07-15 06:11:46,564 DEBUG:on stmt: bool100 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,564 DEBUG:on stmt: $100pred = call bool100($98load_deref.0, func=bool100, args=(Var($98load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,564 DEBUG:on stmt: jump 180
2024-07-15 06:11:46,564 DEBUG:==== SSA block rewrite pass on 180
2024-07-15 06:11:46,564 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B68F7B50>
2024-07-15 06:11:46,564 DEBUG:on stmt: jump 190
2024-07-15 06:11:46,564 DEBUG:==== SSA block rewrite pass on 182
2024-07-15 06:11:46,564 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B68F7B50>
2024-07-15 06:11:46,564 DEBUG:on stmt: invert = const(bool, False)
2024-07-15 06:11:46,564 DEBUG:replaced with: invert.1 = const(bool, False)
2024-07-15 06:11:46,564 DEBUG:on stmt: exp = b
2024-07-15 06:11:46,564 DEBUG:on stmt: jump 190
2024-07-15 06:11:46,564 DEBUG:==== SSA block rewrite pass on 190
2024-07-15 06:11:46,564 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B68F7B50>
2024-07-15 06:11:46,564 DEBUG:on stmt: $const192.1 = const(int, 65536)
2024-07-15 06:11:46,564 DEBUG:on stmt: $194compare_op.2 = exp > $const192.1
2024-07-15 06:11:46,564 DEBUG:on stmt: bool200 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,564 DEBUG:on stmt: $200pred = call bool200($194compare_op.2, func=bool200, args=(Var($194compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,564 DEBUG:on stmt: branch $200pred, 202, 270
2024-07-15 06:11:46,564 DEBUG:==== SSA block rewrite pass on 202
2024-07-15 06:11:46,564 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B68F7B50>
2024-07-15 06:11:46,564 DEBUG:on stmt: $202load_global.0 = global(math: <module 'math' (built-in)>)
2024-07-15 06:11:46,564 DEBUG:on stmt: $214load_attr.2 = getattr(value=$202load_global.0, attr=pow)
2024-07-15 06:11:46,564 DEBUG:on stmt: $226load_global.4 = global(float: <class 'float'>)
2024-07-15 06:11:46,564 DEBUG:on stmt: $244call.7 = call $226load_global.4(b, func=$226load_global.4, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,564 DEBUG:on stmt: $258call.8 = call $214load_attr.2(a.1, $244call.7, func=$214load_attr.2, args=[Var(a.1, numbers.py:217), Var($244call.7, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,565 DEBUG:on stmt: $268return_value.9 = cast(value=$258call.8)
2024-07-15 06:11:46,565 DEBUG:on stmt: return $268return_value.9
2024-07-15 06:11:46,565 DEBUG:==== SSA block rewrite pass on 270
2024-07-15 06:11:46,565 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B68F7B50>
2024-07-15 06:11:46,565 DEBUG:on stmt: $const272.1 = const(int, 0)
2024-07-15 06:11:46,565 DEBUG:on stmt: $274compare_op.2 = exp != $const272.1
2024-07-15 06:11:46,565 DEBUG:on stmt: bool280 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,565 DEBUG:on stmt: $280pred = call bool280($274compare_op.2, func=bool280, args=(Var($274compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,565 DEBUG:on stmt: branch $280pred, 282, 334
2024-07-15 06:11:46,565 DEBUG:==== SSA block rewrite pass on 282
2024-07-15 06:11:46,565 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B68F7B50>
2024-07-15 06:11:46,565 DEBUG:on stmt: a.1.2 = phi(incoming_values=[Var(a.1.1, numbers.py:241), Var(a.1, numbers.py:217)], incoming_blocks=[302, 270])
2024-07-15 06:11:46,565 DEBUG:on stmt: r.2 = phi(incoming_values=[Var(r.3, numbers.py:239), Var(r, numbers.py:216)], incoming_blocks=[302, 270])
2024-07-15 06:11:46,565 DEBUG:on stmt: $const284.1 = const(int, 1)
2024-07-15 06:11:46,565 DEBUG:on stmt: $binop_and_286.2 = exp & $const284.1
2024-07-15 06:11:46,565 DEBUG:on stmt: bool290 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,565 DEBUG:on stmt: $290pred = call bool290($binop_and_286.2, func=bool290, args=(Var($binop_and_286.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,565 DEBUG:on stmt: branch $290pred, 292, 302
2024-07-15 06:11:46,565 DEBUG:==== SSA block rewrite pass on 292
2024-07-15 06:11:46,565 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B68F7B50>
2024-07-15 06:11:46,565 DEBUG:on stmt: $binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:46,565 DEBUG:on stmt: r.1 = $binop_imul296.2
2024-07-15 06:11:46,565 DEBUG:on stmt: jump 302
2024-07-15 06:11:46,565 DEBUG:==== SSA block rewrite pass on 302
2024-07-15 06:11:46,565 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B68F7B50>
2024-07-15 06:11:46,565 DEBUG:on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[282, 292])
2024-07-15 06:11:46,565 DEBUG:on stmt: $const304.1 = const(int, 1)
2024-07-15 06:11:46,565 DEBUG:on stmt: $binop_irshift306.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const304.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:46,565 DEBUG:on stmt: exp = $binop_irshift306.2
2024-07-15 06:11:46,565 DEBUG:on stmt: $binop_imul316.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:46,565 DEBUG:on stmt: a.1.1 = $binop_imul316.5
2024-07-15 06:11:46,565 DEBUG:on stmt: $const324.7 = const(int, 0)
2024-07-15 06:11:46,565 DEBUG:on stmt: $326compare_op.8 = exp != $const324.7
2024-07-15 06:11:46,565 DEBUG:on stmt: bool332 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,565 DEBUG:on stmt: $332pred = call bool332($326compare_op.8, func=bool332, args=(Var($326compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,565 DEBUG:on stmt: branch $332pred, 282, 334
2024-07-15 06:11:46,566 DEBUG:==== SSA block rewrite pass on 334
2024-07-15 06:11:46,566 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B68F7B50>
2024-07-15 06:11:46,566 DEBUG:on stmt: r.4 = phi(incoming_values=[Var(r.3, numbers.py:239), Var(r, numbers.py:216)], incoming_blocks=[302, 270])
2024-07-15 06:11:46,566 DEBUG:on stmt: bool336 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,566 DEBUG:on stmt: $336pred = call bool336(invert, func=bool336, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,566 DEBUG:on stmt: branch $336pred, 338, 348
2024-07-15 06:11:46,566 DEBUG:==== SSA block rewrite pass on 338
2024-07-15 06:11:46,566 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B68F7B50>
2024-07-15 06:11:46,566 DEBUG:on stmt: $const338.0 = const(float, 1.0)
2024-07-15 06:11:46,566 DEBUG:on stmt: $binop_truediv342.2 = $const338.0 / r.4
2024-07-15 06:11:46,566 DEBUG:on stmt: $phi350.0 = $binop_truediv342.2
2024-07-15 06:11:46,566 DEBUG:on stmt: jump 350
2024-07-15 06:11:46,566 DEBUG:==== SSA block rewrite pass on 348
2024-07-15 06:11:46,566 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B68F7B50>
2024-07-15 06:11:46,566 DEBUG:on stmt: $phi350.0 = r.4
2024-07-15 06:11:46,566 DEBUG:on stmt: jump 350
2024-07-15 06:11:46,566 DEBUG:==== SSA block rewrite pass on 350
2024-07-15 06:11:46,566 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B68F7B50>
2024-07-15 06:11:46,566 DEBUG:on stmt: $350return_value.1 = cast(value=$phi350.0)
2024-07-15 06:11:46,566 DEBUG:on stmt: return $350return_value.1
2024-07-15 06:11:46,566 DEBUG:Replaced assignments: defaultdict(<class 'list'>,
            {62: [<numba.core.ir.Assign object at 0x00000221B68004D0>],
             182: [<numba.core.ir.Assign object at 0x00000221B5BE7010>]})
2024-07-15 06:11:46,566 DEBUG:==== SSA block rewrite pass on 0
2024-07-15 06:11:46,566 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B6803BD0>
2024-07-15 06:11:46,566 DEBUG:on stmt: a = arg(0, name=a)
2024-07-15 06:11:46,566 DEBUG:on stmt: b = arg(1, name=b)
2024-07-15 06:11:46,566 DEBUG:on stmt: $8load_deref.1 = freevar(tp: float32)
2024-07-15 06:11:46,566 DEBUG:on stmt: $const10.2 = const(int, 1)
2024-07-15 06:11:46,566 DEBUG:on stmt: r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,566 DEBUG:on stmt: $30load_deref.5 = freevar(tp: float32)
2024-07-15 06:11:46,566 DEBUG:on stmt: a.1 = call $30load_deref.5(a, func=$30load_deref.5, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,566 DEBUG:on stmt: $const52.9 = const(int, 0)
2024-07-15 06:11:46,566 DEBUG:on stmt: $54compare_op.10 = b < $const52.9
2024-07-15 06:11:46,566 DEBUG:on stmt: bool60 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,566 DEBUG:on stmt: $60pred = call bool60($54compare_op.10, func=bool60, args=(Var($54compare_op.10, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,567 DEBUG:on stmt: branch $60pred, 62, 182
2024-07-15 06:11:46,567 DEBUG:==== SSA block rewrite pass on 62
2024-07-15 06:11:46,567 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B6803BD0>
2024-07-15 06:11:46,567 DEBUG:on stmt: invert = const(bool, True)
2024-07-15 06:11:46,567 DEBUG:on stmt: exp = unary(fn=<built-in function neg>, value=b)
2024-07-15 06:11:46,567 DEBUG:on stmt: $const74.4 = const(int, 0)
2024-07-15 06:11:46,567 DEBUG:on stmt: $76compare_op.5 = exp < $const74.4
2024-07-15 06:11:46,567 DEBUG:on stmt: bool82 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,567 DEBUG:on stmt: $82pred = call bool82($76compare_op.5, func=bool82, args=(Var($76compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,567 DEBUG:on stmt: branch $82pred, 84, 98
2024-07-15 06:11:46,567 DEBUG:==== SSA block rewrite pass on 84
2024-07-15 06:11:46,567 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B6803BD0>
2024-07-15 06:11:46,567 DEBUG:on stmt: $84load_global.0 = global(OverflowError: <class 'OverflowError'>)
2024-07-15 06:11:46,567 DEBUG:on stmt: <static> raise <class 'OverflowError'>
2024-07-15 06:11:46,567 DEBUG:==== SSA block rewrite pass on 98
2024-07-15 06:11:46,567 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B6803BD0>
2024-07-15 06:11:46,567 DEBUG:on stmt: $98load_deref.0 = freevar(is_integer: False)
2024-07-15 06:11:46,567 DEBUG:on stmt: bool100 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,567 DEBUG:on stmt: $100pred = call bool100($98load_deref.0, func=bool100, args=(Var($98load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,567 DEBUG:on stmt: jump 180
2024-07-15 06:11:46,567 DEBUG:==== SSA block rewrite pass on 180
2024-07-15 06:11:46,567 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B6803BD0>
2024-07-15 06:11:46,567 DEBUG:on stmt: jump 190
2024-07-15 06:11:46,567 DEBUG:==== SSA block rewrite pass on 182
2024-07-15 06:11:46,567 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B6803BD0>
2024-07-15 06:11:46,567 DEBUG:on stmt: invert.1 = const(bool, False)
2024-07-15 06:11:46,567 DEBUG:on stmt: exp = b
2024-07-15 06:11:46,567 DEBUG:on stmt: jump 190
2024-07-15 06:11:46,567 DEBUG:==== SSA block rewrite pass on 190
2024-07-15 06:11:46,567 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B6803BD0>
2024-07-15 06:11:46,567 DEBUG:on stmt: $const192.1 = const(int, 65536)
2024-07-15 06:11:46,567 DEBUG:on stmt: $194compare_op.2 = exp > $const192.1
2024-07-15 06:11:46,567 DEBUG:on stmt: bool200 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,567 DEBUG:on stmt: $200pred = call bool200($194compare_op.2, func=bool200, args=(Var($194compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,567 DEBUG:on stmt: branch $200pred, 202, 270
2024-07-15 06:11:46,567 DEBUG:==== SSA block rewrite pass on 202
2024-07-15 06:11:46,567 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B6803BD0>
2024-07-15 06:11:46,567 DEBUG:on stmt: $202load_global.0 = global(math: <module 'math' (built-in)>)
2024-07-15 06:11:46,567 DEBUG:on stmt: $214load_attr.2 = getattr(value=$202load_global.0, attr=pow)
2024-07-15 06:11:46,567 DEBUG:on stmt: $226load_global.4 = global(float: <class 'float'>)
2024-07-15 06:11:46,567 DEBUG:on stmt: $244call.7 = call $226load_global.4(b, func=$226load_global.4, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,567 DEBUG:on stmt: $258call.8 = call $214load_attr.2(a.1, $244call.7, func=$214load_attr.2, args=[Var(a.1, numbers.py:217), Var($244call.7, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,567 DEBUG:on stmt: $268return_value.9 = cast(value=$258call.8)
2024-07-15 06:11:46,568 DEBUG:on stmt: return $268return_value.9
2024-07-15 06:11:46,568 DEBUG:==== SSA block rewrite pass on 270
2024-07-15 06:11:46,568 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B6803BD0>
2024-07-15 06:11:46,568 DEBUG:on stmt: $const272.1 = const(int, 0)
2024-07-15 06:11:46,568 DEBUG:on stmt: $274compare_op.2 = exp != $const272.1
2024-07-15 06:11:46,568 DEBUG:on stmt: bool280 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,568 DEBUG:on stmt: $280pred = call bool280($274compare_op.2, func=bool280, args=(Var($274compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,568 DEBUG:on stmt: branch $280pred, 282, 334
2024-07-15 06:11:46,568 DEBUG:==== SSA block rewrite pass on 282
2024-07-15 06:11:46,568 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B6803BD0>
2024-07-15 06:11:46,568 DEBUG:on stmt: a.1.2 = phi(incoming_values=[Var(a.1.1, numbers.py:241), Var(a.1, numbers.py:217)], incoming_blocks=[302, 270])
2024-07-15 06:11:46,568 DEBUG:on stmt: r.2 = phi(incoming_values=[Var(r.3, numbers.py:239), Var(r, numbers.py:216)], incoming_blocks=[302, 270])
2024-07-15 06:11:46,568 DEBUG:on stmt: $const284.1 = const(int, 1)
2024-07-15 06:11:46,568 DEBUG:on stmt: $binop_and_286.2 = exp & $const284.1
2024-07-15 06:11:46,568 DEBUG:on stmt: bool290 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,568 DEBUG:on stmt: $290pred = call bool290($binop_and_286.2, func=bool290, args=(Var($binop_and_286.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,568 DEBUG:on stmt: branch $290pred, 292, 302
2024-07-15 06:11:46,568 DEBUG:==== SSA block rewrite pass on 292
2024-07-15 06:11:46,568 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B6803BD0>
2024-07-15 06:11:46,568 DEBUG:on stmt: $binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:46,568 DEBUG:on stmt: r.1 = $binop_imul296.2
2024-07-15 06:11:46,568 DEBUG:on stmt: jump 302
2024-07-15 06:11:46,568 DEBUG:==== SSA block rewrite pass on 302
2024-07-15 06:11:46,568 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B6803BD0>
2024-07-15 06:11:46,568 DEBUG:on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[282, 292])
2024-07-15 06:11:46,568 DEBUG:on stmt: $const304.1 = const(int, 1)
2024-07-15 06:11:46,568 DEBUG:on stmt: $binop_irshift306.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const304.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:46,568 DEBUG:on stmt: exp = $binop_irshift306.2
2024-07-15 06:11:46,568 DEBUG:on stmt: $binop_imul316.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:46,568 DEBUG:on stmt: a.1.1 = $binop_imul316.5
2024-07-15 06:11:46,568 DEBUG:on stmt: $const324.7 = const(int, 0)
2024-07-15 06:11:46,568 DEBUG:on stmt: $326compare_op.8 = exp != $const324.7
2024-07-15 06:11:46,568 DEBUG:on stmt: bool332 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,568 DEBUG:on stmt: $332pred = call bool332($326compare_op.8, func=bool332, args=(Var($326compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,569 DEBUG:on stmt: branch $332pred, 282, 334
2024-07-15 06:11:46,569 DEBUG:==== SSA block rewrite pass on 334
2024-07-15 06:11:46,569 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B6803BD0>
2024-07-15 06:11:46,569 DEBUG:on stmt: r.4 = phi(incoming_values=[Var(r.3, numbers.py:239), Var(r, numbers.py:216)], incoming_blocks=[302, 270])
2024-07-15 06:11:46,569 DEBUG:on stmt: bool336 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,569 DEBUG:on stmt: $336pred = call bool336(invert, func=bool336, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,569 DEBUG:find_def var='invert' stmt=$336pred = call bool336(invert, func=bool336, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,569 DEBUG:find_def_from_top label 334
2024-07-15 06:11:46,569 DEBUG:idom 270 from label 334
2024-07-15 06:11:46,569 DEBUG:find_def_from_bottom label 270
2024-07-15 06:11:46,569 DEBUG:find_def_from_top label 270
2024-07-15 06:11:46,569 DEBUG:idom 190 from label 270
2024-07-15 06:11:46,569 DEBUG:find_def_from_bottom label 190
2024-07-15 06:11:46,569 DEBUG:find_def_from_top label 190
2024-07-15 06:11:46,569 DEBUG:insert phi node invert.2 = phi(incoming_values=[], incoming_blocks=[]) at 190
2024-07-15 06:11:46,569 DEBUG:find_def_from_bottom label 180
2024-07-15 06:11:46,569 DEBUG:find_def_from_top label 180
2024-07-15 06:11:46,569 DEBUG:idom 98 from label 180
2024-07-15 06:11:46,569 DEBUG:find_def_from_bottom label 98
2024-07-15 06:11:46,569 DEBUG:find_def_from_top label 98
2024-07-15 06:11:46,569 DEBUG:idom 62 from label 98
2024-07-15 06:11:46,569 DEBUG:find_def_from_bottom label 62
2024-07-15 06:11:46,569 DEBUG:incoming_def invert = const(bool, True)
2024-07-15 06:11:46,569 DEBUG:find_def_from_bottom label 182
2024-07-15 06:11:46,569 DEBUG:incoming_def invert.1 = const(bool, False)
2024-07-15 06:11:46,569 DEBUG:replaced with: $336pred = call bool336(invert.2, func=bool336, args=(Var(invert.2, numbers.py:243),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,569 DEBUG:on stmt: branch $336pred, 338, 348
2024-07-15 06:11:46,569 DEBUG:==== SSA block rewrite pass on 338
2024-07-15 06:11:46,569 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B6803BD0>
2024-07-15 06:11:46,569 DEBUG:on stmt: $const338.0 = const(float, 1.0)
2024-07-15 06:11:46,569 DEBUG:on stmt: $binop_truediv342.2 = $const338.0 / r.4
2024-07-15 06:11:46,569 DEBUG:on stmt: $phi350.0 = $binop_truediv342.2
2024-07-15 06:11:46,569 DEBUG:on stmt: jump 350
2024-07-15 06:11:46,569 DEBUG:==== SSA block rewrite pass on 348
2024-07-15 06:11:46,570 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B6803BD0>
2024-07-15 06:11:46,570 DEBUG:on stmt: $phi350.0 = r.4
2024-07-15 06:11:46,570 DEBUG:on stmt: jump 350
2024-07-15 06:11:46,570 DEBUG:==== SSA block rewrite pass on 350
2024-07-15 06:11:46,570 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B6803BD0>
2024-07-15 06:11:46,570 DEBUG:on stmt: $350return_value.1 = cast(value=$phi350.0)
2024-07-15 06:11:46,570 DEBUG:on stmt: return $350return_value.1
2024-07-15 06:11:46,570 DEBUG:Fix SSA violator on var exp
2024-07-15 06:11:46,570 DEBUG:==== SSA block rewrite pass on 0
2024-07-15 06:11:46,570 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5EDDA10>
2024-07-15 06:11:46,570 DEBUG:on stmt: a = arg(0, name=a)
2024-07-15 06:11:46,570 DEBUG:on stmt: b = arg(1, name=b)
2024-07-15 06:11:46,570 DEBUG:on stmt: $8load_deref.1 = freevar(tp: float32)
2024-07-15 06:11:46,570 DEBUG:on stmt: $const10.2 = const(int, 1)
2024-07-15 06:11:46,570 DEBUG:on stmt: r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,570 DEBUG:on stmt: $30load_deref.5 = freevar(tp: float32)
2024-07-15 06:11:46,570 DEBUG:on stmt: a.1 = call $30load_deref.5(a, func=$30load_deref.5, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,570 DEBUG:on stmt: $const52.9 = const(int, 0)
2024-07-15 06:11:46,570 DEBUG:on stmt: $54compare_op.10 = b < $const52.9
2024-07-15 06:11:46,570 DEBUG:on stmt: bool60 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,570 DEBUG:on stmt: $60pred = call bool60($54compare_op.10, func=bool60, args=(Var($54compare_op.10, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,570 DEBUG:on stmt: branch $60pred, 62, 182
2024-07-15 06:11:46,570 DEBUG:==== SSA block rewrite pass on 62
2024-07-15 06:11:46,570 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5EDDA10>
2024-07-15 06:11:46,570 DEBUG:on stmt: invert = const(bool, True)
2024-07-15 06:11:46,570 DEBUG:on stmt: exp = unary(fn=<built-in function neg>, value=b)
2024-07-15 06:11:46,570 DEBUG:first assign: exp
2024-07-15 06:11:46,570 DEBUG:replaced with: exp = unary(fn=<built-in function neg>, value=b)
2024-07-15 06:11:46,570 DEBUG:on stmt: $const74.4 = const(int, 0)
2024-07-15 06:11:46,570 DEBUG:on stmt: $76compare_op.5 = exp < $const74.4
2024-07-15 06:11:46,570 DEBUG:on stmt: bool82 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,570 DEBUG:on stmt: $82pred = call bool82($76compare_op.5, func=bool82, args=(Var($76compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,571 DEBUG:on stmt: branch $82pred, 84, 98
2024-07-15 06:11:46,571 DEBUG:==== SSA block rewrite pass on 84
2024-07-15 06:11:46,571 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5EDDA10>
2024-07-15 06:11:46,571 DEBUG:on stmt: $84load_global.0 = global(OverflowError: <class 'OverflowError'>)
2024-07-15 06:11:46,571 DEBUG:on stmt: <static> raise <class 'OverflowError'>
2024-07-15 06:11:46,571 DEBUG:==== SSA block rewrite pass on 98
2024-07-15 06:11:46,571 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5EDDA10>
2024-07-15 06:11:46,571 DEBUG:on stmt: $98load_deref.0 = freevar(is_integer: False)
2024-07-15 06:11:46,571 DEBUG:on stmt: bool100 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,571 DEBUG:on stmt: $100pred = call bool100($98load_deref.0, func=bool100, args=(Var($98load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,571 DEBUG:on stmt: jump 180
2024-07-15 06:11:46,571 DEBUG:==== SSA block rewrite pass on 180
2024-07-15 06:11:46,571 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5EDDA10>
2024-07-15 06:11:46,571 DEBUG:on stmt: jump 190
2024-07-15 06:11:46,571 DEBUG:==== SSA block rewrite pass on 182
2024-07-15 06:11:46,571 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5EDDA10>
2024-07-15 06:11:46,571 DEBUG:on stmt: invert.1 = const(bool, False)
2024-07-15 06:11:46,571 DEBUG:on stmt: exp = b
2024-07-15 06:11:46,571 DEBUG:replaced with: exp.1 = b
2024-07-15 06:11:46,571 DEBUG:on stmt: jump 190
2024-07-15 06:11:46,571 DEBUG:==== SSA block rewrite pass on 190
2024-07-15 06:11:46,571 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5EDDA10>
2024-07-15 06:11:46,571 DEBUG:on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:219), Var(invert.1, numbers.py:232)], incoming_blocks=[180, 182])
2024-07-15 06:11:46,571 DEBUG:on stmt: $const192.1 = const(int, 65536)
2024-07-15 06:11:46,571 DEBUG:on stmt: $194compare_op.2 = exp > $const192.1
2024-07-15 06:11:46,571 DEBUG:on stmt: bool200 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,571 DEBUG:on stmt: $200pred = call bool200($194compare_op.2, func=bool200, args=(Var($194compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,571 DEBUG:on stmt: branch $200pred, 202, 270
2024-07-15 06:11:46,571 DEBUG:==== SSA block rewrite pass on 202
2024-07-15 06:11:46,571 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5EDDA10>
2024-07-15 06:11:46,571 DEBUG:on stmt: $202load_global.0 = global(math: <module 'math' (built-in)>)
2024-07-15 06:11:46,571 DEBUG:on stmt: $214load_attr.2 = getattr(value=$202load_global.0, attr=pow)
2024-07-15 06:11:46,571 DEBUG:on stmt: $226load_global.4 = global(float: <class 'float'>)
2024-07-15 06:11:46,571 DEBUG:on stmt: $244call.7 = call $226load_global.4(b, func=$226load_global.4, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,571 DEBUG:on stmt: $258call.8 = call $214load_attr.2(a.1, $244call.7, func=$214load_attr.2, args=[Var(a.1, numbers.py:217), Var($244call.7, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,571 DEBUG:on stmt: $268return_value.9 = cast(value=$258call.8)
2024-07-15 06:11:46,571 DEBUG:on stmt: return $268return_value.9
2024-07-15 06:11:46,571 DEBUG:==== SSA block rewrite pass on 270
2024-07-15 06:11:46,571 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5EDDA10>
2024-07-15 06:11:46,571 DEBUG:on stmt: $const272.1 = const(int, 0)
2024-07-15 06:11:46,571 DEBUG:on stmt: $274compare_op.2 = exp != $const272.1
2024-07-15 06:11:46,572 DEBUG:on stmt: bool280 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,572 DEBUG:on stmt: $280pred = call bool280($274compare_op.2, func=bool280, args=(Var($274compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,572 DEBUG:on stmt: branch $280pred, 282, 334
2024-07-15 06:11:46,572 DEBUG:==== SSA block rewrite pass on 282
2024-07-15 06:11:46,572 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5EDDA10>
2024-07-15 06:11:46,572 DEBUG:on stmt: a.1.2 = phi(incoming_values=[Var(a.1.1, numbers.py:241), Var(a.1, numbers.py:217)], incoming_blocks=[302, 270])
2024-07-15 06:11:46,572 DEBUG:on stmt: r.2 = phi(incoming_values=[Var(r.3, numbers.py:239), Var(r, numbers.py:216)], incoming_blocks=[302, 270])
2024-07-15 06:11:46,572 DEBUG:on stmt: $const284.1 = const(int, 1)
2024-07-15 06:11:46,572 DEBUG:on stmt: $binop_and_286.2 = exp & $const284.1
2024-07-15 06:11:46,572 DEBUG:on stmt: bool290 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,572 DEBUG:on stmt: $290pred = call bool290($binop_and_286.2, func=bool290, args=(Var($binop_and_286.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,572 DEBUG:on stmt: branch $290pred, 292, 302
2024-07-15 06:11:46,572 DEBUG:==== SSA block rewrite pass on 292
2024-07-15 06:11:46,572 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5EDDA10>
2024-07-15 06:11:46,572 DEBUG:on stmt: $binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:46,572 DEBUG:on stmt: r.1 = $binop_imul296.2
2024-07-15 06:11:46,572 DEBUG:on stmt: jump 302
2024-07-15 06:11:46,572 DEBUG:==== SSA block rewrite pass on 302
2024-07-15 06:11:46,572 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5EDDA10>
2024-07-15 06:11:46,572 DEBUG:on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[282, 292])
2024-07-15 06:11:46,572 DEBUG:on stmt: $const304.1 = const(int, 1)
2024-07-15 06:11:46,572 DEBUG:on stmt: $binop_irshift306.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const304.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:46,572 DEBUG:on stmt: exp = $binop_irshift306.2
2024-07-15 06:11:46,572 DEBUG:replaced with: exp.2 = $binop_irshift306.2
2024-07-15 06:11:46,572 DEBUG:on stmt: $binop_imul316.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:46,572 DEBUG:on stmt: a.1.1 = $binop_imul316.5
2024-07-15 06:11:46,572 DEBUG:on stmt: $const324.7 = const(int, 0)
2024-07-15 06:11:46,572 DEBUG:on stmt: $326compare_op.8 = exp != $const324.7
2024-07-15 06:11:46,572 DEBUG:on stmt: bool332 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,572 DEBUG:on stmt: $332pred = call bool332($326compare_op.8, func=bool332, args=(Var($326compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,572 DEBUG:on stmt: branch $332pred, 282, 334
2024-07-15 06:11:46,572 DEBUG:==== SSA block rewrite pass on 334
2024-07-15 06:11:46,573 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5EDDA10>
2024-07-15 06:11:46,573 DEBUG:on stmt: r.4 = phi(incoming_values=[Var(r.3, numbers.py:239), Var(r, numbers.py:216)], incoming_blocks=[302, 270])
2024-07-15 06:11:46,573 DEBUG:on stmt: bool336 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,573 DEBUG:on stmt: $336pred = call bool336(invert.2, func=bool336, args=(Var(invert.2, numbers.py:243),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,573 DEBUG:on stmt: branch $336pred, 338, 348
2024-07-15 06:11:46,573 DEBUG:==== SSA block rewrite pass on 338
2024-07-15 06:11:46,573 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5EDDA10>
2024-07-15 06:11:46,573 DEBUG:on stmt: $const338.0 = const(float, 1.0)
2024-07-15 06:11:46,573 DEBUG:on stmt: $binop_truediv342.2 = $const338.0 / r.4
2024-07-15 06:11:46,573 DEBUG:on stmt: $phi350.0 = $binop_truediv342.2
2024-07-15 06:11:46,573 DEBUG:on stmt: jump 350
2024-07-15 06:11:46,573 DEBUG:==== SSA block rewrite pass on 348
2024-07-15 06:11:46,573 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5EDDA10>
2024-07-15 06:11:46,573 DEBUG:on stmt: $phi350.0 = r.4
2024-07-15 06:11:46,573 DEBUG:on stmt: jump 350
2024-07-15 06:11:46,573 DEBUG:==== SSA block rewrite pass on 350
2024-07-15 06:11:46,573 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5EDDA10>
2024-07-15 06:11:46,573 DEBUG:on stmt: $350return_value.1 = cast(value=$phi350.0)
2024-07-15 06:11:46,573 DEBUG:on stmt: return $350return_value.1
2024-07-15 06:11:46,573 DEBUG:Replaced assignments: defaultdict(<class 'list'>,
            {62: [<numba.core.ir.Assign object at 0x00000221B5BE4D90>],
             182: [<numba.core.ir.Assign object at 0x00000221B5E59CD0>],
             302: [<numba.core.ir.Assign object at 0x00000221B6798AD0>]})
2024-07-15 06:11:46,573 DEBUG:==== SSA block rewrite pass on 0
2024-07-15 06:11:46,573 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5E5AB90>
2024-07-15 06:11:46,573 DEBUG:on stmt: a = arg(0, name=a)
2024-07-15 06:11:46,573 DEBUG:on stmt: b = arg(1, name=b)
2024-07-15 06:11:46,573 DEBUG:on stmt: $8load_deref.1 = freevar(tp: float32)
2024-07-15 06:11:46,573 DEBUG:on stmt: $const10.2 = const(int, 1)
2024-07-15 06:11:46,573 DEBUG:on stmt: r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,573 DEBUG:on stmt: $30load_deref.5 = freevar(tp: float32)
2024-07-15 06:11:46,573 DEBUG:on stmt: a.1 = call $30load_deref.5(a, func=$30load_deref.5, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,573 DEBUG:on stmt: $const52.9 = const(int, 0)
2024-07-15 06:11:46,573 DEBUG:on stmt: $54compare_op.10 = b < $const52.9
2024-07-15 06:11:46,573 DEBUG:on stmt: bool60 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,573 DEBUG:on stmt: $60pred = call bool60($54compare_op.10, func=bool60, args=(Var($54compare_op.10, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,573 DEBUG:on stmt: branch $60pred, 62, 182
2024-07-15 06:11:46,574 DEBUG:==== SSA block rewrite pass on 62
2024-07-15 06:11:46,574 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5E5AB90>
2024-07-15 06:11:46,574 DEBUG:on stmt: invert = const(bool, True)
2024-07-15 06:11:46,574 DEBUG:on stmt: exp = unary(fn=<built-in function neg>, value=b)
2024-07-15 06:11:46,574 DEBUG:on stmt: $const74.4 = const(int, 0)
2024-07-15 06:11:46,574 DEBUG:on stmt: $76compare_op.5 = exp < $const74.4
2024-07-15 06:11:46,574 DEBUG:find_def var='exp' stmt=$76compare_op.5 = exp < $const74.4
2024-07-15 06:11:46,574 DEBUG:on stmt: bool82 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,574 DEBUG:on stmt: $82pred = call bool82($76compare_op.5, func=bool82, args=(Var($76compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,574 DEBUG:on stmt: branch $82pred, 84, 98
2024-07-15 06:11:46,574 DEBUG:==== SSA block rewrite pass on 84
2024-07-15 06:11:46,574 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5E5AB90>
2024-07-15 06:11:46,574 DEBUG:on stmt: $84load_global.0 = global(OverflowError: <class 'OverflowError'>)
2024-07-15 06:11:46,574 DEBUG:on stmt: <static> raise <class 'OverflowError'>
2024-07-15 06:11:46,574 DEBUG:==== SSA block rewrite pass on 98
2024-07-15 06:11:46,574 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5E5AB90>
2024-07-15 06:11:46,574 DEBUG:on stmt: $98load_deref.0 = freevar(is_integer: False)
2024-07-15 06:11:46,574 DEBUG:on stmt: bool100 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,574 DEBUG:on stmt: $100pred = call bool100($98load_deref.0, func=bool100, args=(Var($98load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,574 DEBUG:on stmt: jump 180
2024-07-15 06:11:46,574 DEBUG:==== SSA block rewrite pass on 180
2024-07-15 06:11:46,574 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5E5AB90>
2024-07-15 06:11:46,574 DEBUG:on stmt: jump 190
2024-07-15 06:11:46,574 DEBUG:==== SSA block rewrite pass on 182
2024-07-15 06:11:46,574 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5E5AB90>
2024-07-15 06:11:46,574 DEBUG:on stmt: invert.1 = const(bool, False)
2024-07-15 06:11:46,574 DEBUG:on stmt: exp.1 = b
2024-07-15 06:11:46,574 DEBUG:on stmt: jump 190
2024-07-15 06:11:46,574 DEBUG:==== SSA block rewrite pass on 190
2024-07-15 06:11:46,574 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5E5AB90>
2024-07-15 06:11:46,574 DEBUG:on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:219), Var(invert.1, numbers.py:232)], incoming_blocks=[180, 182])
2024-07-15 06:11:46,574 DEBUG:on stmt: $const192.1 = const(int, 65536)
2024-07-15 06:11:46,574 DEBUG:on stmt: $194compare_op.2 = exp > $const192.1
2024-07-15 06:11:46,574 DEBUG:find_def var='exp' stmt=$194compare_op.2 = exp > $const192.1
2024-07-15 06:11:46,574 DEBUG:find_def_from_top label 190
2024-07-15 06:11:46,575 DEBUG:insert phi node exp.3 = phi(incoming_values=[], incoming_blocks=[]) at 190
2024-07-15 06:11:46,575 DEBUG:find_def_from_bottom label 180
2024-07-15 06:11:46,575 DEBUG:find_def_from_top label 180
2024-07-15 06:11:46,575 DEBUG:idom 98 from label 180
2024-07-15 06:11:46,575 DEBUG:find_def_from_bottom label 98
2024-07-15 06:11:46,575 DEBUG:find_def_from_top label 98
2024-07-15 06:11:46,575 DEBUG:idom 62 from label 98
2024-07-15 06:11:46,575 DEBUG:find_def_from_bottom label 62
2024-07-15 06:11:46,575 DEBUG:incoming_def exp = unary(fn=<built-in function neg>, value=b)
2024-07-15 06:11:46,575 DEBUG:find_def_from_bottom label 182
2024-07-15 06:11:46,575 DEBUG:incoming_def exp.1 = b
2024-07-15 06:11:46,575 DEBUG:replaced with: $194compare_op.2 = exp.3 > $const192.1
2024-07-15 06:11:46,575 DEBUG:on stmt: bool200 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,575 DEBUG:on stmt: $200pred = call bool200($194compare_op.2, func=bool200, args=(Var($194compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,575 DEBUG:on stmt: branch $200pred, 202, 270
2024-07-15 06:11:46,575 DEBUG:==== SSA block rewrite pass on 202
2024-07-15 06:11:46,575 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5E5AB90>
2024-07-15 06:11:46,575 DEBUG:on stmt: $202load_global.0 = global(math: <module 'math' (built-in)>)
2024-07-15 06:11:46,575 DEBUG:on stmt: $214load_attr.2 = getattr(value=$202load_global.0, attr=pow)
2024-07-15 06:11:46,575 DEBUG:on stmt: $226load_global.4 = global(float: <class 'float'>)
2024-07-15 06:11:46,575 DEBUG:on stmt: $244call.7 = call $226load_global.4(b, func=$226load_global.4, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,575 DEBUG:on stmt: $258call.8 = call $214load_attr.2(a.1, $244call.7, func=$214load_attr.2, args=[Var(a.1, numbers.py:217), Var($244call.7, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,575 DEBUG:on stmt: $268return_value.9 = cast(value=$258call.8)
2024-07-15 06:11:46,575 DEBUG:on stmt: return $268return_value.9
2024-07-15 06:11:46,575 DEBUG:==== SSA block rewrite pass on 270
2024-07-15 06:11:46,575 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5E5AB90>
2024-07-15 06:11:46,575 DEBUG:on stmt: $const272.1 = const(int, 0)
2024-07-15 06:11:46,575 DEBUG:on stmt: $274compare_op.2 = exp != $const272.1
2024-07-15 06:11:46,575 DEBUG:find_def var='exp' stmt=$274compare_op.2 = exp != $const272.1
2024-07-15 06:11:46,575 DEBUG:find_def_from_top label 270
2024-07-15 06:11:46,575 DEBUG:idom 190 from label 270
2024-07-15 06:11:46,575 DEBUG:find_def_from_bottom label 190
2024-07-15 06:11:46,575 DEBUG:replaced with: $274compare_op.2 = exp.3 != $const272.1
2024-07-15 06:11:46,575 DEBUG:on stmt: bool280 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,576 DEBUG:on stmt: $280pred = call bool280($274compare_op.2, func=bool280, args=(Var($274compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,576 DEBUG:on stmt: branch $280pred, 282, 334
2024-07-15 06:11:46,576 DEBUG:==== SSA block rewrite pass on 282
2024-07-15 06:11:46,576 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5E5AB90>
2024-07-15 06:11:46,576 DEBUG:on stmt: a.1.2 = phi(incoming_values=[Var(a.1.1, numbers.py:241), Var(a.1, numbers.py:217)], incoming_blocks=[302, 270])
2024-07-15 06:11:46,576 DEBUG:on stmt: r.2 = phi(incoming_values=[Var(r.3, numbers.py:239), Var(r, numbers.py:216)], incoming_blocks=[302, 270])
2024-07-15 06:11:46,576 DEBUG:on stmt: $const284.1 = const(int, 1)
2024-07-15 06:11:46,576 DEBUG:on stmt: $binop_and_286.2 = exp & $const284.1
2024-07-15 06:11:46,576 DEBUG:find_def var='exp' stmt=$binop_and_286.2 = exp & $const284.1
2024-07-15 06:11:46,576 DEBUG:find_def_from_top label 282
2024-07-15 06:11:46,576 DEBUG:insert phi node exp.4 = phi(incoming_values=[], incoming_blocks=[]) at 282
2024-07-15 06:11:46,576 DEBUG:find_def_from_bottom label 302
2024-07-15 06:11:46,576 DEBUG:incoming_def exp.2 = $binop_irshift306.2
2024-07-15 06:11:46,576 DEBUG:find_def_from_bottom label 270
2024-07-15 06:11:46,576 DEBUG:find_def_from_top label 270
2024-07-15 06:11:46,576 DEBUG:idom 190 from label 270
2024-07-15 06:11:46,576 DEBUG:find_def_from_bottom label 190
2024-07-15 06:11:46,576 DEBUG:incoming_def exp.3 = phi(incoming_values=[Var(exp, numbers.py:220), Var(exp.1, numbers.py:233)], incoming_blocks=[180, 182])
2024-07-15 06:11:46,576 DEBUG:replaced with: $binop_and_286.2 = exp.4 & $const284.1
2024-07-15 06:11:46,576 DEBUG:on stmt: bool290 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,576 DEBUG:on stmt: $290pred = call bool290($binop_and_286.2, func=bool290, args=(Var($binop_and_286.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,576 DEBUG:on stmt: branch $290pred, 292, 302
2024-07-15 06:11:46,576 DEBUG:==== SSA block rewrite pass on 292
2024-07-15 06:11:46,576 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5E5AB90>
2024-07-15 06:11:46,576 DEBUG:on stmt: $binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:46,576 DEBUG:on stmt: r.1 = $binop_imul296.2
2024-07-15 06:11:46,576 DEBUG:on stmt: jump 302
2024-07-15 06:11:46,576 DEBUG:==== SSA block rewrite pass on 302
2024-07-15 06:11:46,576 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5E5AB90>
2024-07-15 06:11:46,576 DEBUG:on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[282, 292])
2024-07-15 06:11:46,576 DEBUG:on stmt: $const304.1 = const(int, 1)
2024-07-15 06:11:46,576 DEBUG:on stmt: $binop_irshift306.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const304.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:46,576 DEBUG:find_def var='exp' stmt=$binop_irshift306.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const304.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:46,576 DEBUG:find_def_from_top label 302
2024-07-15 06:11:46,576 DEBUG:idom 282 from label 302
2024-07-15 06:11:46,576 DEBUG:find_def_from_bottom label 282
2024-07-15 06:11:46,576 DEBUG:replaced with: $binop_irshift306.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const304.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:46,576 DEBUG:on stmt: exp.2 = $binop_irshift306.2
2024-07-15 06:11:46,576 DEBUG:on stmt: $binop_imul316.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:46,576 DEBUG:on stmt: a.1.1 = $binop_imul316.5
2024-07-15 06:11:46,576 DEBUG:on stmt: $const324.7 = const(int, 0)
2024-07-15 06:11:46,576 DEBUG:on stmt: $326compare_op.8 = exp != $const324.7
2024-07-15 06:11:46,576 DEBUG:find_def var='exp' stmt=$326compare_op.8 = exp != $const324.7
2024-07-15 06:11:46,576 DEBUG:replaced with: $326compare_op.8 = exp.2 != $const324.7
2024-07-15 06:11:46,576 DEBUG:on stmt: bool332 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,576 DEBUG:on stmt: $332pred = call bool332($326compare_op.8, func=bool332, args=(Var($326compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,578 DEBUG:on stmt: branch $332pred, 282, 334
2024-07-15 06:11:46,578 DEBUG:==== SSA block rewrite pass on 334
2024-07-15 06:11:46,578 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5E5AB90>
2024-07-15 06:11:46,578 DEBUG:on stmt: r.4 = phi(incoming_values=[Var(r.3, numbers.py:239), Var(r, numbers.py:216)], incoming_blocks=[302, 270])
2024-07-15 06:11:46,578 DEBUG:on stmt: bool336 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,578 DEBUG:on stmt: $336pred = call bool336(invert.2, func=bool336, args=(Var(invert.2, numbers.py:243),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,578 DEBUG:on stmt: branch $336pred, 338, 348
2024-07-15 06:11:46,578 DEBUG:==== SSA block rewrite pass on 338
2024-07-15 06:11:46,578 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5E5AB90>
2024-07-15 06:11:46,578 DEBUG:on stmt: $const338.0 = const(float, 1.0)
2024-07-15 06:11:46,578 DEBUG:on stmt: $binop_truediv342.2 = $const338.0 / r.4
2024-07-15 06:11:46,578 DEBUG:on stmt: $phi350.0 = $binop_truediv342.2
2024-07-15 06:11:46,578 DEBUG:on stmt: jump 350
2024-07-15 06:11:46,578 DEBUG:==== SSA block rewrite pass on 348
2024-07-15 06:11:46,578 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5E5AB90>
2024-07-15 06:11:46,578 DEBUG:on stmt: $phi350.0 = r.4
2024-07-15 06:11:46,578 DEBUG:on stmt: jump 350
2024-07-15 06:11:46,578 DEBUG:==== SSA block rewrite pass on 350
2024-07-15 06:11:46,578 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5E5AB90>
2024-07-15 06:11:46,578 DEBUG:on stmt: $350return_value.1 = cast(value=$phi350.0)
2024-07-15 06:11:46,578 DEBUG:on stmt: return $350return_value.1
2024-07-15 06:11:46,578 DEBUG:Fix SSA violator on var $phi350.0
2024-07-15 06:11:46,578 DEBUG:==== SSA block rewrite pass on 0
2024-07-15 06:11:46,578 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5E59B10>
2024-07-15 06:11:46,578 DEBUG:on stmt: a = arg(0, name=a)
2024-07-15 06:11:46,578 DEBUG:on stmt: b = arg(1, name=b)
2024-07-15 06:11:46,578 DEBUG:on stmt: $8load_deref.1 = freevar(tp: float32)
2024-07-15 06:11:46,578 DEBUG:on stmt: $const10.2 = const(int, 1)
2024-07-15 06:11:46,578 DEBUG:on stmt: r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,578 DEBUG:on stmt: $30load_deref.5 = freevar(tp: float32)
2024-07-15 06:11:46,578 DEBUG:on stmt: a.1 = call $30load_deref.5(a, func=$30load_deref.5, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,578 DEBUG:on stmt: $const52.9 = const(int, 0)
2024-07-15 06:11:46,578 DEBUG:on stmt: $54compare_op.10 = b < $const52.9
2024-07-15 06:11:46,578 DEBUG:on stmt: bool60 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,578 DEBUG:on stmt: $60pred = call bool60($54compare_op.10, func=bool60, args=(Var($54compare_op.10, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,578 DEBUG:on stmt: branch $60pred, 62, 182
2024-07-15 06:11:46,579 DEBUG:==== SSA block rewrite pass on 62
2024-07-15 06:11:46,579 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5E59B10>
2024-07-15 06:11:46,579 DEBUG:on stmt: invert = const(bool, True)
2024-07-15 06:11:46,579 DEBUG:on stmt: exp = unary(fn=<built-in function neg>, value=b)
2024-07-15 06:11:46,579 DEBUG:on stmt: $const74.4 = const(int, 0)
2024-07-15 06:11:46,579 DEBUG:on stmt: $76compare_op.5 = exp < $const74.4
2024-07-15 06:11:46,579 DEBUG:on stmt: bool82 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,579 DEBUG:on stmt: $82pred = call bool82($76compare_op.5, func=bool82, args=(Var($76compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,579 DEBUG:on stmt: branch $82pred, 84, 98
2024-07-15 06:11:46,579 DEBUG:==== SSA block rewrite pass on 84
2024-07-15 06:11:46,579 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5E59B10>
2024-07-15 06:11:46,579 DEBUG:on stmt: $84load_global.0 = global(OverflowError: <class 'OverflowError'>)
2024-07-15 06:11:46,579 DEBUG:on stmt: <static> raise <class 'OverflowError'>
2024-07-15 06:11:46,579 DEBUG:==== SSA block rewrite pass on 98
2024-07-15 06:11:46,579 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5E59B10>
2024-07-15 06:11:46,579 DEBUG:on stmt: $98load_deref.0 = freevar(is_integer: False)
2024-07-15 06:11:46,579 DEBUG:on stmt: bool100 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,579 DEBUG:on stmt: $100pred = call bool100($98load_deref.0, func=bool100, args=(Var($98load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,579 DEBUG:on stmt: jump 180
2024-07-15 06:11:46,579 DEBUG:==== SSA block rewrite pass on 180
2024-07-15 06:11:46,579 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5E59B10>
2024-07-15 06:11:46,579 DEBUG:on stmt: jump 190
2024-07-15 06:11:46,579 DEBUG:==== SSA block rewrite pass on 182
2024-07-15 06:11:46,579 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5E59B10>
2024-07-15 06:11:46,579 DEBUG:on stmt: invert.1 = const(bool, False)
2024-07-15 06:11:46,579 DEBUG:on stmt: exp.1 = b
2024-07-15 06:11:46,579 DEBUG:on stmt: jump 190
2024-07-15 06:11:46,579 DEBUG:==== SSA block rewrite pass on 190
2024-07-15 06:11:46,579 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5E59B10>
2024-07-15 06:11:46,579 DEBUG:on stmt: exp.3 = phi(incoming_values=[Var(exp, numbers.py:220), Var(exp.1, numbers.py:233)], incoming_blocks=[180, 182])
2024-07-15 06:11:46,579 DEBUG:on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:219), Var(invert.1, numbers.py:232)], incoming_blocks=[180, 182])
2024-07-15 06:11:46,579 DEBUG:on stmt: $const192.1 = const(int, 65536)
2024-07-15 06:11:46,579 DEBUG:on stmt: $194compare_op.2 = exp.3 > $const192.1
2024-07-15 06:11:46,579 DEBUG:on stmt: bool200 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,579 DEBUG:on stmt: $200pred = call bool200($194compare_op.2, func=bool200, args=(Var($194compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,579 DEBUG:on stmt: branch $200pred, 202, 270
2024-07-15 06:11:46,579 DEBUG:==== SSA block rewrite pass on 202
2024-07-15 06:11:46,580 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5E59B10>
2024-07-15 06:11:46,580 DEBUG:on stmt: $202load_global.0 = global(math: <module 'math' (built-in)>)
2024-07-15 06:11:46,580 DEBUG:on stmt: $214load_attr.2 = getattr(value=$202load_global.0, attr=pow)
2024-07-15 06:11:46,580 DEBUG:on stmt: $226load_global.4 = global(float: <class 'float'>)
2024-07-15 06:11:46,580 DEBUG:on stmt: $244call.7 = call $226load_global.4(b, func=$226load_global.4, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,580 DEBUG:on stmt: $258call.8 = call $214load_attr.2(a.1, $244call.7, func=$214load_attr.2, args=[Var(a.1, numbers.py:217), Var($244call.7, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,580 DEBUG:on stmt: $268return_value.9 = cast(value=$258call.8)
2024-07-15 06:11:46,580 DEBUG:on stmt: return $268return_value.9
2024-07-15 06:11:46,580 DEBUG:==== SSA block rewrite pass on 270
2024-07-15 06:11:46,580 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5E59B10>
2024-07-15 06:11:46,580 DEBUG:on stmt: $const272.1 = const(int, 0)
2024-07-15 06:11:46,580 DEBUG:on stmt: $274compare_op.2 = exp.3 != $const272.1
2024-07-15 06:11:46,580 DEBUG:on stmt: bool280 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,580 DEBUG:on stmt: $280pred = call bool280($274compare_op.2, func=bool280, args=(Var($274compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,580 DEBUG:on stmt: branch $280pred, 282, 334
2024-07-15 06:11:46,580 DEBUG:==== SSA block rewrite pass on 282
2024-07-15 06:11:46,580 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5E59B10>
2024-07-15 06:11:46,580 DEBUG:on stmt: exp.4 = phi(incoming_values=[Var(exp.2, numbers.py:240), Var(exp.3, numbers.py:234)], incoming_blocks=[302, 270])
2024-07-15 06:11:46,580 DEBUG:on stmt: a.1.2 = phi(incoming_values=[Var(a.1.1, numbers.py:241), Var(a.1, numbers.py:217)], incoming_blocks=[302, 270])
2024-07-15 06:11:46,580 DEBUG:on stmt: r.2 = phi(incoming_values=[Var(r.3, numbers.py:239), Var(r, numbers.py:216)], incoming_blocks=[302, 270])
2024-07-15 06:11:46,580 DEBUG:on stmt: $const284.1 = const(int, 1)
2024-07-15 06:11:46,580 DEBUG:on stmt: $binop_and_286.2 = exp.4 & $const284.1
2024-07-15 06:11:46,580 DEBUG:on stmt: bool290 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,580 DEBUG:on stmt: $290pred = call bool290($binop_and_286.2, func=bool290, args=(Var($binop_and_286.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,580 DEBUG:on stmt: branch $290pred, 292, 302
2024-07-15 06:11:46,580 DEBUG:==== SSA block rewrite pass on 292
2024-07-15 06:11:46,580 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5E59B10>
2024-07-15 06:11:46,580 DEBUG:on stmt: $binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:46,580 DEBUG:on stmt: r.1 = $binop_imul296.2
2024-07-15 06:11:46,580 DEBUG:on stmt: jump 302
2024-07-15 06:11:46,580 DEBUG:==== SSA block rewrite pass on 302
2024-07-15 06:11:46,580 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5E59B10>
2024-07-15 06:11:46,580 DEBUG:on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[282, 292])
2024-07-15 06:11:46,580 DEBUG:on stmt: $const304.1 = const(int, 1)
2024-07-15 06:11:46,580 DEBUG:on stmt: $binop_irshift306.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const304.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:46,581 DEBUG:on stmt: exp.2 = $binop_irshift306.2
2024-07-15 06:11:46,581 DEBUG:on stmt: $binop_imul316.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:46,581 DEBUG:on stmt: a.1.1 = $binop_imul316.5
2024-07-15 06:11:46,581 DEBUG:on stmt: $const324.7 = const(int, 0)
2024-07-15 06:11:46,581 DEBUG:on stmt: $326compare_op.8 = exp.2 != $const324.7
2024-07-15 06:11:46,581 DEBUG:on stmt: bool332 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,581 DEBUG:on stmt: $332pred = call bool332($326compare_op.8, func=bool332, args=(Var($326compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,581 DEBUG:on stmt: branch $332pred, 282, 334
2024-07-15 06:11:46,581 DEBUG:==== SSA block rewrite pass on 334
2024-07-15 06:11:46,581 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5E59B10>
2024-07-15 06:11:46,581 DEBUG:on stmt: r.4 = phi(incoming_values=[Var(r.3, numbers.py:239), Var(r, numbers.py:216)], incoming_blocks=[302, 270])
2024-07-15 06:11:46,581 DEBUG:on stmt: bool336 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,581 DEBUG:on stmt: $336pred = call bool336(invert.2, func=bool336, args=(Var(invert.2, numbers.py:243),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,581 DEBUG:on stmt: branch $336pred, 338, 348
2024-07-15 06:11:46,581 DEBUG:==== SSA block rewrite pass on 338
2024-07-15 06:11:46,581 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5E59B10>
2024-07-15 06:11:46,581 DEBUG:on stmt: $const338.0 = const(float, 1.0)
2024-07-15 06:11:46,581 DEBUG:on stmt: $binop_truediv342.2 = $const338.0 / r.4
2024-07-15 06:11:46,581 DEBUG:on stmt: $phi350.0 = $binop_truediv342.2
2024-07-15 06:11:46,581 DEBUG:first assign: $phi350.0
2024-07-15 06:11:46,581 DEBUG:replaced with: $phi350.0 = $binop_truediv342.2
2024-07-15 06:11:46,581 DEBUG:on stmt: jump 350
2024-07-15 06:11:46,581 DEBUG:==== SSA block rewrite pass on 348
2024-07-15 06:11:46,581 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5E59B10>
2024-07-15 06:11:46,581 DEBUG:on stmt: $phi350.0 = r.4
2024-07-15 06:11:46,581 DEBUG:replaced with: $phi350.0.1 = r.4
2024-07-15 06:11:46,581 DEBUG:on stmt: jump 350
2024-07-15 06:11:46,581 DEBUG:==== SSA block rewrite pass on 350
2024-07-15 06:11:46,581 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5E59B10>
2024-07-15 06:11:46,581 DEBUG:on stmt: $350return_value.1 = cast(value=$phi350.0)
2024-07-15 06:11:46,581 DEBUG:on stmt: return $350return_value.1
2024-07-15 06:11:46,581 DEBUG:Replaced assignments: defaultdict(<class 'list'>,
            {338: [<numba.core.ir.Assign object at 0x00000221B6799B10>],
             348: [<numba.core.ir.Assign object at 0x00000221B6798550>]})
2024-07-15 06:11:46,581 DEBUG:==== SSA block rewrite pass on 0
2024-07-15 06:11:46,581 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5E5BA90>
2024-07-15 06:11:46,581 DEBUG:on stmt: a = arg(0, name=a)
2024-07-15 06:11:46,581 DEBUG:on stmt: b = arg(1, name=b)
2024-07-15 06:11:46,582 DEBUG:on stmt: $8load_deref.1 = freevar(tp: float32)
2024-07-15 06:11:46,582 DEBUG:on stmt: $const10.2 = const(int, 1)
2024-07-15 06:11:46,582 DEBUG:on stmt: r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,582 DEBUG:on stmt: $30load_deref.5 = freevar(tp: float32)
2024-07-15 06:11:46,582 DEBUG:on stmt: a.1 = call $30load_deref.5(a, func=$30load_deref.5, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,582 DEBUG:on stmt: $const52.9 = const(int, 0)
2024-07-15 06:11:46,582 DEBUG:on stmt: $54compare_op.10 = b < $const52.9
2024-07-15 06:11:46,582 DEBUG:on stmt: bool60 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,582 DEBUG:on stmt: $60pred = call bool60($54compare_op.10, func=bool60, args=(Var($54compare_op.10, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,582 DEBUG:on stmt: branch $60pred, 62, 182
2024-07-15 06:11:46,582 DEBUG:==== SSA block rewrite pass on 62
2024-07-15 06:11:46,582 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5E5BA90>
2024-07-15 06:11:46,582 DEBUG:on stmt: invert = const(bool, True)
2024-07-15 06:11:46,582 DEBUG:on stmt: exp = unary(fn=<built-in function neg>, value=b)
2024-07-15 06:11:46,582 DEBUG:on stmt: $const74.4 = const(int, 0)
2024-07-15 06:11:46,582 DEBUG:on stmt: $76compare_op.5 = exp < $const74.4
2024-07-15 06:11:46,582 DEBUG:on stmt: bool82 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,582 DEBUG:on stmt: $82pred = call bool82($76compare_op.5, func=bool82, args=(Var($76compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,582 DEBUG:on stmt: branch $82pred, 84, 98
2024-07-15 06:11:46,582 DEBUG:==== SSA block rewrite pass on 84
2024-07-15 06:11:46,582 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5E5BA90>
2024-07-15 06:11:46,582 DEBUG:on stmt: $84load_global.0 = global(OverflowError: <class 'OverflowError'>)
2024-07-15 06:11:46,582 DEBUG:on stmt: <static> raise <class 'OverflowError'>
2024-07-15 06:11:46,582 DEBUG:==== SSA block rewrite pass on 98
2024-07-15 06:11:46,582 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5E5BA90>
2024-07-15 06:11:46,582 DEBUG:on stmt: $98load_deref.0 = freevar(is_integer: False)
2024-07-15 06:11:46,582 DEBUG:on stmt: bool100 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,582 DEBUG:on stmt: $100pred = call bool100($98load_deref.0, func=bool100, args=(Var($98load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,582 DEBUG:on stmt: jump 180
2024-07-15 06:11:46,582 DEBUG:==== SSA block rewrite pass on 180
2024-07-15 06:11:46,582 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5E5BA90>
2024-07-15 06:11:46,582 DEBUG:on stmt: jump 190
2024-07-15 06:11:46,582 DEBUG:==== SSA block rewrite pass on 182
2024-07-15 06:11:46,582 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5E5BA90>
2024-07-15 06:11:46,582 DEBUG:on stmt: invert.1 = const(bool, False)
2024-07-15 06:11:46,582 DEBUG:on stmt: exp.1 = b
2024-07-15 06:11:46,583 DEBUG:on stmt: jump 190
2024-07-15 06:11:46,583 DEBUG:==== SSA block rewrite pass on 190
2024-07-15 06:11:46,583 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5E5BA90>
2024-07-15 06:11:46,583 DEBUG:on stmt: exp.3 = phi(incoming_values=[Var(exp, numbers.py:220), Var(exp.1, numbers.py:233)], incoming_blocks=[180, 182])
2024-07-15 06:11:46,583 DEBUG:on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:219), Var(invert.1, numbers.py:232)], incoming_blocks=[180, 182])
2024-07-15 06:11:46,583 DEBUG:on stmt: $const192.1 = const(int, 65536)
2024-07-15 06:11:46,583 DEBUG:on stmt: $194compare_op.2 = exp.3 > $const192.1
2024-07-15 06:11:46,583 DEBUG:on stmt: bool200 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,583 DEBUG:on stmt: $200pred = call bool200($194compare_op.2, func=bool200, args=(Var($194compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,583 DEBUG:on stmt: branch $200pred, 202, 270
2024-07-15 06:11:46,583 DEBUG:==== SSA block rewrite pass on 202
2024-07-15 06:11:46,583 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5E5BA90>
2024-07-15 06:11:46,583 DEBUG:on stmt: $202load_global.0 = global(math: <module 'math' (built-in)>)
2024-07-15 06:11:46,583 DEBUG:on stmt: $214load_attr.2 = getattr(value=$202load_global.0, attr=pow)
2024-07-15 06:11:46,583 DEBUG:on stmt: $226load_global.4 = global(float: <class 'float'>)
2024-07-15 06:11:46,583 DEBUG:on stmt: $244call.7 = call $226load_global.4(b, func=$226load_global.4, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,583 DEBUG:on stmt: $258call.8 = call $214load_attr.2(a.1, $244call.7, func=$214load_attr.2, args=[Var(a.1, numbers.py:217), Var($244call.7, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,583 DEBUG:on stmt: $268return_value.9 = cast(value=$258call.8)
2024-07-15 06:11:46,583 DEBUG:on stmt: return $268return_value.9
2024-07-15 06:11:46,583 DEBUG:==== SSA block rewrite pass on 270
2024-07-15 06:11:46,583 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5E5BA90>
2024-07-15 06:11:46,583 DEBUG:on stmt: $const272.1 = const(int, 0)
2024-07-15 06:11:46,583 DEBUG:on stmt: $274compare_op.2 = exp.3 != $const272.1
2024-07-15 06:11:46,583 DEBUG:on stmt: bool280 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,583 DEBUG:on stmt: $280pred = call bool280($274compare_op.2, func=bool280, args=(Var($274compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,583 DEBUG:on stmt: branch $280pred, 282, 334
2024-07-15 06:11:46,583 DEBUG:==== SSA block rewrite pass on 282
2024-07-15 06:11:46,583 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5E5BA90>
2024-07-15 06:11:46,583 DEBUG:on stmt: exp.4 = phi(incoming_values=[Var(exp.2, numbers.py:240), Var(exp.3, numbers.py:234)], incoming_blocks=[302, 270])
2024-07-15 06:11:46,583 DEBUG:on stmt: a.1.2 = phi(incoming_values=[Var(a.1.1, numbers.py:241), Var(a.1, numbers.py:217)], incoming_blocks=[302, 270])
2024-07-15 06:11:46,583 DEBUG:on stmt: r.2 = phi(incoming_values=[Var(r.3, numbers.py:239), Var(r, numbers.py:216)], incoming_blocks=[302, 270])
2024-07-15 06:11:46,583 DEBUG:on stmt: $const284.1 = const(int, 1)
2024-07-15 06:11:46,583 DEBUG:on stmt: $binop_and_286.2 = exp.4 & $const284.1
2024-07-15 06:11:46,583 DEBUG:on stmt: bool290 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,583 DEBUG:on stmt: $290pred = call bool290($binop_and_286.2, func=bool290, args=(Var($binop_and_286.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,583 DEBUG:on stmt: branch $290pred, 292, 302
2024-07-15 06:11:46,583 DEBUG:==== SSA block rewrite pass on 292
2024-07-15 06:11:46,583 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5E5BA90>
2024-07-15 06:11:46,583 DEBUG:on stmt: $binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:46,583 DEBUG:on stmt: r.1 = $binop_imul296.2
2024-07-15 06:11:46,583 DEBUG:on stmt: jump 302
2024-07-15 06:11:46,583 DEBUG:==== SSA block rewrite pass on 302
2024-07-15 06:11:46,583 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5E5BA90>
2024-07-15 06:11:46,583 DEBUG:on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[282, 292])
2024-07-15 06:11:46,583 DEBUG:on stmt: $const304.1 = const(int, 1)
2024-07-15 06:11:46,583 DEBUG:on stmt: $binop_irshift306.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const304.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:46,583 DEBUG:on stmt: exp.2 = $binop_irshift306.2
2024-07-15 06:11:46,583 DEBUG:on stmt: $binop_imul316.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:46,583 DEBUG:on stmt: a.1.1 = $binop_imul316.5
2024-07-15 06:11:46,584 DEBUG:on stmt: $const324.7 = const(int, 0)
2024-07-15 06:11:46,584 DEBUG:on stmt: $326compare_op.8 = exp.2 != $const324.7
2024-07-15 06:11:46,584 DEBUG:on stmt: bool332 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,584 DEBUG:on stmt: $332pred = call bool332($326compare_op.8, func=bool332, args=(Var($326compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,584 DEBUG:on stmt: branch $332pred, 282, 334
2024-07-15 06:11:46,584 DEBUG:==== SSA block rewrite pass on 334
2024-07-15 06:11:46,584 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5E5BA90>
2024-07-15 06:11:46,584 DEBUG:on stmt: r.4 = phi(incoming_values=[Var(r.3, numbers.py:239), Var(r, numbers.py:216)], incoming_blocks=[302, 270])
2024-07-15 06:11:46,584 DEBUG:on stmt: bool336 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,584 DEBUG:on stmt: $336pred = call bool336(invert.2, func=bool336, args=(Var(invert.2, numbers.py:243),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,584 DEBUG:on stmt: branch $336pred, 338, 348
2024-07-15 06:11:46,584 DEBUG:==== SSA block rewrite pass on 338
2024-07-15 06:11:46,584 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5E5BA90>
2024-07-15 06:11:46,584 DEBUG:on stmt: $const338.0 = const(float, 1.0)
2024-07-15 06:11:46,584 DEBUG:on stmt: $binop_truediv342.2 = $const338.0 / r.4
2024-07-15 06:11:46,584 DEBUG:on stmt: $phi350.0 = $binop_truediv342.2
2024-07-15 06:11:46,584 DEBUG:on stmt: jump 350
2024-07-15 06:11:46,584 DEBUG:==== SSA block rewrite pass on 348
2024-07-15 06:11:46,584 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5E5BA90>
2024-07-15 06:11:46,584 DEBUG:on stmt: $phi350.0.1 = r.4
2024-07-15 06:11:46,584 DEBUG:on stmt: jump 350
2024-07-15 06:11:46,584 DEBUG:==== SSA block rewrite pass on 350
2024-07-15 06:11:46,584 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5E5BA90>
2024-07-15 06:11:46,584 DEBUG:on stmt: $350return_value.1 = cast(value=$phi350.0)
2024-07-15 06:11:46,584 DEBUG:find_def var='$phi350.0' stmt=$350return_value.1 = cast(value=$phi350.0)
2024-07-15 06:11:46,584 DEBUG:find_def_from_top label 350
2024-07-15 06:11:46,584 DEBUG:insert phi node $phi350.0.2 = phi(incoming_values=[], incoming_blocks=[]) at 350
2024-07-15 06:11:46,584 DEBUG:find_def_from_bottom label 338
2024-07-15 06:11:46,584 DEBUG:incoming_def $phi350.0 = $binop_truediv342.2
2024-07-15 06:11:46,584 DEBUG:find_def_from_bottom label 348
2024-07-15 06:11:46,584 DEBUG:incoming_def $phi350.0.1 = r.4
2024-07-15 06:11:46,584 DEBUG:replaced with: $350return_value.1 = cast(value=$phi350.0.2)
2024-07-15 06:11:46,584 DEBUG:on stmt: return $350return_value.1
2024-07-15 06:11:46,808 DEBUG:bytecode dump:
>          0	NOP(arg=None, lineno=2452)
           2	RESUME(arg=0, lineno=2452)
           4	LOAD_FAST(arg=0, lineno=2457)
           6	LOAD_ATTR(arg=0, lineno=2457)
          16	LOAD_CONST(arg=1, lineno=2457)
          18	BINARY_OP(arg=8, lineno=2457)
          22	LOAD_FAST(arg=0, lineno=2457)
          24	LOAD_ATTR(arg=1, lineno=2457)
          34	LOAD_CONST(arg=1, lineno=2457)
          36	BINARY_OP(arg=8, lineno=2457)
          40	BINARY_OP(arg=0, lineno=2457)
          44	RETURN_VALUE(arg=None, lineno=2457)
2024-07-15 06:11:46,808 DEBUG:pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-15 06:11:46,808 DEBUG:stack: []
2024-07-15 06:11:46,808 DEBUG:state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-15 06:11:46,809 DEBUG:dispatch pc=0, inst=NOP(arg=None, lineno=2452)
2024-07-15 06:11:46,809 DEBUG:stack []
2024-07-15 06:11:46,809 DEBUG:dispatch pc=2, inst=RESUME(arg=0, lineno=2452)
2024-07-15 06:11:46,809 DEBUG:stack []
2024-07-15 06:11:46,809 DEBUG:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2457)
2024-07-15 06:11:46,809 DEBUG:stack []
2024-07-15 06:11:46,809 DEBUG:dispatch pc=6, inst=LOAD_ATTR(arg=0, lineno=2457)
2024-07-15 06:11:46,809 DEBUG:stack ['$x4.0']
2024-07-15 06:11:46,809 DEBUG:dispatch pc=16, inst=LOAD_CONST(arg=1, lineno=2457)
2024-07-15 06:11:46,809 DEBUG:stack ['$6load_attr.1']
2024-07-15 06:11:46,809 DEBUG:dispatch pc=18, inst=BINARY_OP(arg=8, lineno=2457)
2024-07-15 06:11:46,809 DEBUG:stack ['$6load_attr.1', '$const16.2']
2024-07-15 06:11:46,809 DEBUG:dispatch pc=22, inst=LOAD_FAST(arg=0, lineno=2457)
2024-07-15 06:11:46,809 DEBUG:stack ['$binop_pow18.3']
2024-07-15 06:11:46,809 DEBUG:dispatch pc=24, inst=LOAD_ATTR(arg=1, lineno=2457)
2024-07-15 06:11:46,809 DEBUG:stack ['$binop_pow18.3', '$x22.4']
2024-07-15 06:11:46,809 DEBUG:dispatch pc=34, inst=LOAD_CONST(arg=1, lineno=2457)
2024-07-15 06:11:46,809 DEBUG:stack ['$binop_pow18.3', '$24load_attr.5']
2024-07-15 06:11:46,809 DEBUG:dispatch pc=36, inst=BINARY_OP(arg=8, lineno=2457)
2024-07-15 06:11:46,809 DEBUG:stack ['$binop_pow18.3', '$24load_attr.5', '$const34.6']
2024-07-15 06:11:46,809 DEBUG:dispatch pc=40, inst=BINARY_OP(arg=0, lineno=2457)
2024-07-15 06:11:46,809 DEBUG:stack ['$binop_pow18.3', '$binop_pow36.7']
2024-07-15 06:11:46,809 DEBUG:dispatch pc=44, inst=RETURN_VALUE(arg=None, lineno=2457)
2024-07-15 06:11:46,809 DEBUG:stack ['$binop_add40.8']
2024-07-15 06:11:46,809 DEBUG:end state. edges=[]
2024-07-15 06:11:46,809 DEBUG:-------------------------Prune PHIs-------------------------
2024-07-15 06:11:46,809 DEBUG:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-07-15 06:11:46,809 DEBUG:defmap: {}
2024-07-15 06:11:46,809 DEBUG:phismap: defaultdict(<class 'set'>, {})
2024-07-15 06:11:46,810 DEBUG:changing phismap: defaultdict(<class 'set'>, {})
2024-07-15 06:11:46,810 DEBUG:keep phismap: {}
2024-07-15 06:11:46,810 DEBUG:new_out: defaultdict(<class 'dict'>, {})
2024-07-15 06:11:46,810 DEBUG:----------------------DONE Prune PHIs-----------------------
2024-07-15 06:11:46,810 DEBUG:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'item': '$x4.0', 'res': '$6load_attr.1'}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$const16.2'}), (18, {'op': '**', 'lhs': '$6load_attr.1', 'rhs': '$const16.2', 'res': '$binop_pow18.3'}), (20, {}), (22, {'res': '$x22.4'}), (24, {'item': '$x22.4', 'res': '$24load_attr.5'}), (26, {}), (28, {}), (30, {}), (32, {}), (34, {'res': '$const34.6'}), (36, {'op': '**', 'lhs': '$24load_attr.5', 'rhs': '$const34.6', 'res': '$binop_pow36.7'}), (38, {}), (40, {'op': '+', 'lhs': '$binop_pow18.3', 'rhs': '$binop_pow36.7', 'res': '$binop_add40.8'}), (42, {}), (44, {'retval': '$binop_add40.8', 'castval': '$44return_value.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-15 06:11:46,810 DEBUG:label 0:
    x = arg(0, name=x)                       ['x']
    $6load_attr.1 = getattr(value=x, attr=real) ['$6load_attr.1', 'x']
    $const16.2 = const(int, 2)               ['$const16.2']
    $binop_pow18.3 = $6load_attr.1 ** $const16.2 ['$6load_attr.1', '$binop_pow18.3', '$const16.2']
    $24load_attr.5 = getattr(value=x, attr=imag) ['$24load_attr.5', 'x']
    $const34.6 = const(int, 2)               ['$const34.6']
    $binop_pow36.7 = $24load_attr.5 ** $const34.6 ['$24load_attr.5', '$binop_pow36.7', '$const34.6']
    $binop_add40.8 = $binop_pow18.3 + $binop_pow36.7 ['$binop_add40.8', '$binop_pow18.3', '$binop_pow36.7']
    $44return_value.9 = cast(value=$binop_add40.8) ['$44return_value.9', '$binop_add40.8']
    return $44return_value.9                 ['$44return_value.9']

2024-07-15 06:11:46,813 DEBUG:==== SSA block analysis pass on 0
2024-07-15 06:11:46,814 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B6970A50>
2024-07-15 06:11:46,814 DEBUG:on stmt: x = arg(0, name=x)
2024-07-15 06:11:46,814 DEBUG:on stmt: $6load_attr.1 = getattr(value=x, attr=real)
2024-07-15 06:11:46,814 DEBUG:on stmt: $const16.2 = const(int, 2)
2024-07-15 06:11:46,814 DEBUG:on stmt: $binop_pow18.3 = $6load_attr.1 ** $const16.2
2024-07-15 06:11:46,814 DEBUG:on stmt: $24load_attr.5 = getattr(value=x, attr=imag)
2024-07-15 06:11:46,814 DEBUG:on stmt: $const34.6 = const(int, 2)
2024-07-15 06:11:46,814 DEBUG:on stmt: $binop_pow36.7 = $24load_attr.5 ** $const34.6
2024-07-15 06:11:46,814 DEBUG:on stmt: $binop_add40.8 = $binop_pow18.3 + $binop_pow36.7
2024-07-15 06:11:46,814 DEBUG:on stmt: $44return_value.9 = cast(value=$binop_add40.8)
2024-07-15 06:11:46,814 DEBUG:on stmt: return $44return_value.9
2024-07-15 06:11:46,814 DEBUG:defs defaultdict(<class 'list'>,
            {'$24load_attr.5': [(<numba.core.ir.Assign object at 0x00000221B57B0190>,
                                 0)],
             '$44return_value.9': [(<numba.core.ir.Assign object at 0x00000221B7B4AF50>,
                                    0)],
             '$6load_attr.1': [(<numba.core.ir.Assign object at 0x00000221B5CC3610>,
                                0)],
             '$binop_add40.8': [(<numba.core.ir.Assign object at 0x00000221B5B92C50>,
                                 0)],
             '$binop_pow18.3': [(<numba.core.ir.Assign object at 0x00000221B5C42590>,
                                 0)],
             '$binop_pow36.7': [(<numba.core.ir.Assign object at 0x00000221B5B93F10>,
                                 0)],
             '$const16.2': [(<numba.core.ir.Assign object at 0x00000221B5C43990>,
                             0)],
             '$const34.6': [(<numba.core.ir.Assign object at 0x00000221B6025790>,
                             0)],
             'x': [(<numba.core.ir.Assign object at 0x00000221B6140850>, 0)]})
2024-07-15 06:11:46,814 DEBUG:SSA violators <numba.core.utils.OrderedSet object at 0x00000221B6970A50>
2024-07-15 06:11:46,828 DEBUG:bytecode dump:
>          0	NOP(arg=None, lineno=214)
           2	COPY_FREE_VARS(arg=3, lineno=214)
           4	RESUME(arg=0, lineno=214)
           6	PUSH_NULL(arg=None, lineno=216)
           8	LOAD_DEREF(arg=6, lineno=216)
          10	LOAD_CONST(arg=1, lineno=216)
          12	PRECALL(arg=1, lineno=216)
          16	CALL(arg=1, lineno=216)
          26	STORE_FAST(arg=2, lineno=216)
          28	PUSH_NULL(arg=None, lineno=217)
          30	LOAD_DEREF(arg=6, lineno=217)
          32	LOAD_FAST(arg=0, lineno=217)
          34	PRECALL(arg=1, lineno=217)
          38	CALL(arg=1, lineno=217)
          48	STORE_FAST(arg=0, lineno=217)
          50	LOAD_FAST(arg=1, lineno=218)
          52	LOAD_CONST(arg=2, lineno=218)
          54	COMPARE_OP(arg=0, lineno=218)
          60	POP_JUMP_FORWARD_IF_FALSE(arg=60, lineno=218)
          62	LOAD_CONST(arg=3, lineno=219)
          64	STORE_FAST(arg=3, lineno=219)
          66	LOAD_FAST(arg=1, lineno=220)
          68	UNARY_NEGATIVE(arg=None, lineno=220)
          70	STORE_FAST(arg=4, lineno=220)
          72	LOAD_FAST(arg=4, lineno=221)
          74	LOAD_CONST(arg=2, lineno=221)
          76	COMPARE_OP(arg=0, lineno=221)
          82	POP_JUMP_FORWARD_IF_FALSE(arg=7, lineno=221)
          84	LOAD_GLOBAL(arg=0, lineno=222)
          96	RAISE_VARARGS(arg=1, lineno=222)
>         98	LOAD_DEREF(arg=5, lineno=223)
         100	POP_JUMP_FORWARD_IF_FALSE(arg=39, lineno=223)
         102	LOAD_FAST(arg=0, lineno=224)
         104	LOAD_CONST(arg=2, lineno=224)
         106	COMPARE_OP(arg=2, lineno=224)
         112	POP_JUMP_FORWARD_IF_FALSE(arg=19, lineno=224)
         114	LOAD_DEREF(arg=7, lineno=225)
         116	POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=225)
         118	LOAD_DEREF(arg=7, lineno=226)
         120	RETURN_VALUE(arg=None, lineno=226)
>        122	LOAD_GLOBAL(arg=3, lineno=228)
         134	LOAD_CONST(arg=4, lineno=228)
         136	PRECALL(arg=1, lineno=228)
         140	CALL(arg=1, lineno=228)
         150	RAISE_VARARGS(arg=1, lineno=228)
>        152	LOAD_FAST(arg=0, lineno=229)
         154	LOAD_CONST(arg=1, lineno=229)
         156	COMPARE_OP(arg=3, lineno=229)
         162	POP_JUMP_FORWARD_IF_FALSE(arg=8, lineno=229)
         164	LOAD_FAST(arg=0, lineno=229)
         166	LOAD_CONST(arg=5, lineno=229)
         168	COMPARE_OP(arg=3, lineno=229)
         174	POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=229)
         176	LOAD_CONST(arg=2, lineno=230)
         178	RETURN_VALUE(arg=None, lineno=230)
>        180	JUMP_FORWARD(arg=4, lineno=230)
>        182	LOAD_CONST(arg=6, lineno=232)
         184	STORE_FAST(arg=3, lineno=232)
         186	LOAD_FAST(arg=1, lineno=233)
         188	STORE_FAST(arg=4, lineno=233)
>        190	LOAD_FAST(arg=4, lineno=234)
         192	LOAD_CONST(arg=7, lineno=234)
         194	COMPARE_OP(arg=4, lineno=234)
         200	POP_JUMP_FORWARD_IF_FALSE(arg=34, lineno=234)
         202	LOAD_GLOBAL(arg=5, lineno=236)
         214	LOAD_ATTR(arg=3, lineno=236)
         224	LOAD_FAST(arg=0, lineno=236)
         226	LOAD_GLOBAL(arg=9, lineno=236)
         238	LOAD_FAST(arg=1, lineno=236)
         240	PRECALL(arg=1, lineno=236)
         244	CALL(arg=1, lineno=236)
         254	PRECALL(arg=2, lineno=236)
         258	CALL(arg=2, lineno=236)
         268	RETURN_VALUE(arg=None, lineno=236)
>        270	LOAD_FAST(arg=4, lineno=237)
         272	LOAD_CONST(arg=2, lineno=237)
         274	COMPARE_OP(arg=3, lineno=237)
         280	POP_JUMP_FORWARD_IF_FALSE(arg=26, lineno=237)
>        282	LOAD_FAST(arg=4, lineno=238)
         284	LOAD_CONST(arg=1, lineno=238)
         286	BINARY_OP(arg=1, lineno=238)
         290	POP_JUMP_FORWARD_IF_FALSE(arg=5, lineno=238)
         292	LOAD_FAST(arg=2, lineno=239)
         294	LOAD_FAST(arg=0, lineno=239)
         296	BINARY_OP(arg=18, lineno=239)
         300	STORE_FAST(arg=2, lineno=239)
>        302	LOAD_FAST(arg=4, lineno=240)
         304	LOAD_CONST(arg=1, lineno=240)
         306	BINARY_OP(arg=22, lineno=240)
         310	STORE_FAST(arg=4, lineno=240)
         312	LOAD_FAST(arg=0, lineno=241)
         314	LOAD_FAST(arg=0, lineno=241)
         316	BINARY_OP(arg=18, lineno=241)
         320	STORE_FAST(arg=0, lineno=241)
         322	LOAD_FAST(arg=4, lineno=237)
         324	LOAD_CONST(arg=2, lineno=237)
         326	COMPARE_OP(arg=3, lineno=237)
         332	POP_JUMP_BACKWARD_IF_TRUE(arg=26, lineno=237)
>        334	LOAD_FAST(arg=3, lineno=243)
         336	POP_JUMP_FORWARD_IF_FALSE(arg=5, lineno=243)
         338	LOAD_CONST(arg=8, lineno=243)
         340	LOAD_FAST(arg=2, lineno=243)
         342	BINARY_OP(arg=11, lineno=243)
         346	JUMP_FORWARD(arg=1, lineno=243)
>        348	LOAD_FAST(arg=2, lineno=243)
>        350	RETURN_VALUE(arg=None, lineno=243)
2024-07-15 06:11:46,828 DEBUG:pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-15 06:11:46,828 DEBUG:stack: []
2024-07-15 06:11:46,828 DEBUG:state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-15 06:11:46,828 DEBUG:dispatch pc=0, inst=NOP(arg=None, lineno=214)
2024-07-15 06:11:46,828 DEBUG:stack []
2024-07-15 06:11:46,828 DEBUG:dispatch pc=2, inst=COPY_FREE_VARS(arg=3, lineno=214)
2024-07-15 06:11:46,828 DEBUG:stack []
2024-07-15 06:11:46,828 DEBUG:dispatch pc=4, inst=RESUME(arg=0, lineno=214)
2024-07-15 06:11:46,828 DEBUG:stack []
2024-07-15 06:11:46,828 DEBUG:dispatch pc=6, inst=PUSH_NULL(arg=None, lineno=216)
2024-07-15 06:11:46,828 DEBUG:stack []
2024-07-15 06:11:46,829 DEBUG:dispatch pc=8, inst=LOAD_DEREF(arg=6, lineno=216)
2024-07-15 06:11:46,829 DEBUG:stack ['$null$6.0']
2024-07-15 06:11:46,829 DEBUG:dispatch pc=10, inst=LOAD_CONST(arg=1, lineno=216)
2024-07-15 06:11:46,829 DEBUG:stack ['$null$6.0', '$8load_deref.1']
2024-07-15 06:11:46,829 DEBUG:dispatch pc=12, inst=PRECALL(arg=1, lineno=216)
2024-07-15 06:11:46,829 DEBUG:stack ['$null$6.0', '$8load_deref.1', '$const10.2']
2024-07-15 06:11:46,829 DEBUG:dispatch pc=16, inst=CALL(arg=1, lineno=216)
2024-07-15 06:11:46,829 DEBUG:stack ['$null$6.0', '$8load_deref.1', '$const10.2']
2024-07-15 06:11:46,829 DEBUG:dispatch pc=26, inst=STORE_FAST(arg=2, lineno=216)
2024-07-15 06:11:46,829 DEBUG:stack ['$16call.3']
2024-07-15 06:11:46,829 DEBUG:dispatch pc=28, inst=PUSH_NULL(arg=None, lineno=217)
2024-07-15 06:11:46,829 DEBUG:stack []
2024-07-15 06:11:46,829 DEBUG:dispatch pc=30, inst=LOAD_DEREF(arg=6, lineno=217)
2024-07-15 06:11:46,829 DEBUG:stack ['$null$28.4']
2024-07-15 06:11:46,829 DEBUG:dispatch pc=32, inst=LOAD_FAST(arg=0, lineno=217)
2024-07-15 06:11:46,829 DEBUG:stack ['$null$28.4', '$30load_deref.5']
2024-07-15 06:11:46,829 DEBUG:dispatch pc=34, inst=PRECALL(arg=1, lineno=217)
2024-07-15 06:11:46,829 DEBUG:stack ['$null$28.4', '$30load_deref.5', '$a32.6']
2024-07-15 06:11:46,829 DEBUG:dispatch pc=38, inst=CALL(arg=1, lineno=217)
2024-07-15 06:11:46,829 DEBUG:stack ['$null$28.4', '$30load_deref.5', '$a32.6']
2024-07-15 06:11:46,829 DEBUG:dispatch pc=48, inst=STORE_FAST(arg=0, lineno=217)
2024-07-15 06:11:46,829 DEBUG:stack ['$38call.7']
2024-07-15 06:11:46,829 DEBUG:dispatch pc=50, inst=LOAD_FAST(arg=1, lineno=218)
2024-07-15 06:11:46,829 DEBUG:stack []
2024-07-15 06:11:46,829 DEBUG:dispatch pc=52, inst=LOAD_CONST(arg=2, lineno=218)
2024-07-15 06:11:46,829 DEBUG:stack ['$b50.8']
2024-07-15 06:11:46,829 DEBUG:dispatch pc=54, inst=COMPARE_OP(arg=0, lineno=218)
2024-07-15 06:11:46,829 DEBUG:stack ['$b50.8', '$const52.9']
2024-07-15 06:11:46,829 DEBUG:dispatch pc=60, inst=POP_JUMP_FORWARD_IF_FALSE(arg=60, lineno=218)
2024-07-15 06:11:46,829 DEBUG:stack ['$54compare_op.10']
2024-07-15 06:11:46,829 DEBUG:end state. edges=[Edge(pc=62, stack=(), blockstack=(), npush=0), Edge(pc=182, stack=(), blockstack=(), npush=0)]
2024-07-15 06:11:46,830 DEBUG:pending: deque([State(pc_initial=62 nstack_initial=0), State(pc_initial=182 nstack_initial=0)])
2024-07-15 06:11:46,830 DEBUG:stack: []
2024-07-15 06:11:46,830 DEBUG:state.pc_initial: State(pc_initial=62 nstack_initial=0)
2024-07-15 06:11:46,830 DEBUG:dispatch pc=62, inst=LOAD_CONST(arg=3, lineno=219)
2024-07-15 06:11:46,830 DEBUG:stack []
2024-07-15 06:11:46,830 DEBUG:dispatch pc=64, inst=STORE_FAST(arg=3, lineno=219)
2024-07-15 06:11:46,830 DEBUG:stack ['$const62.0']
2024-07-15 06:11:46,830 DEBUG:dispatch pc=66, inst=LOAD_FAST(arg=1, lineno=220)
2024-07-15 06:11:46,830 DEBUG:stack []
2024-07-15 06:11:46,830 DEBUG:dispatch pc=68, inst=UNARY_NEGATIVE(arg=None, lineno=220)
2024-07-15 06:11:46,830 DEBUG:stack ['$b66.1']
2024-07-15 06:11:46,830 DEBUG:dispatch pc=70, inst=STORE_FAST(arg=4, lineno=220)
2024-07-15 06:11:46,830 DEBUG:stack ['$68unary_negative.2']
2024-07-15 06:11:46,830 DEBUG:dispatch pc=72, inst=LOAD_FAST(arg=4, lineno=221)
2024-07-15 06:11:46,830 DEBUG:stack []
2024-07-15 06:11:46,830 DEBUG:dispatch pc=74, inst=LOAD_CONST(arg=2, lineno=221)
2024-07-15 06:11:46,830 DEBUG:stack ['$exp72.3']
2024-07-15 06:11:46,830 DEBUG:dispatch pc=76, inst=COMPARE_OP(arg=0, lineno=221)
2024-07-15 06:11:46,830 DEBUG:stack ['$exp72.3', '$const74.4']
2024-07-15 06:11:46,830 DEBUG:dispatch pc=82, inst=POP_JUMP_FORWARD_IF_FALSE(arg=7, lineno=221)
2024-07-15 06:11:46,830 DEBUG:stack ['$76compare_op.5']
2024-07-15 06:11:46,830 DEBUG:end state. edges=[Edge(pc=84, stack=(), blockstack=(), npush=0), Edge(pc=98, stack=(), blockstack=(), npush=0)]
2024-07-15 06:11:46,830 DEBUG:pending: deque([State(pc_initial=182 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=98 nstack_initial=0)])
2024-07-15 06:11:46,830 DEBUG:stack: []
2024-07-15 06:11:46,830 DEBUG:state.pc_initial: State(pc_initial=182 nstack_initial=0)
2024-07-15 06:11:46,830 DEBUG:dispatch pc=182, inst=LOAD_CONST(arg=6, lineno=232)
2024-07-15 06:11:46,830 DEBUG:stack []
2024-07-15 06:11:46,830 DEBUG:dispatch pc=184, inst=STORE_FAST(arg=3, lineno=232)
2024-07-15 06:11:46,830 DEBUG:stack ['$const182.0']
2024-07-15 06:11:46,830 DEBUG:dispatch pc=186, inst=LOAD_FAST(arg=1, lineno=233)
2024-07-15 06:11:46,830 DEBUG:stack []
2024-07-15 06:11:46,830 DEBUG:dispatch pc=188, inst=STORE_FAST(arg=4, lineno=233)
2024-07-15 06:11:46,830 DEBUG:stack ['$b186.1']
2024-07-15 06:11:46,830 DEBUG:end state. edges=[Edge(pc=190, stack=(), blockstack=(), npush=0)]
2024-07-15 06:11:46,831 DEBUG:pending: deque([State(pc_initial=84 nstack_initial=0), State(pc_initial=98 nstack_initial=0), State(pc_initial=190 nstack_initial=0)])
2024-07-15 06:11:46,831 DEBUG:stack: []
2024-07-15 06:11:46,831 DEBUG:state.pc_initial: State(pc_initial=84 nstack_initial=0)
2024-07-15 06:11:46,831 DEBUG:dispatch pc=84, inst=LOAD_GLOBAL(arg=0, lineno=222)
2024-07-15 06:11:46,831 DEBUG:stack []
2024-07-15 06:11:46,831 DEBUG:dispatch pc=96, inst=RAISE_VARARGS(arg=1, lineno=222)
2024-07-15 06:11:46,831 DEBUG:stack ['$84load_global.0']
2024-07-15 06:11:46,831 DEBUG:end state. edges=[]
2024-07-15 06:11:46,831 DEBUG:pending: deque([State(pc_initial=98 nstack_initial=0), State(pc_initial=190 nstack_initial=0)])
2024-07-15 06:11:46,831 DEBUG:stack: []
2024-07-15 06:11:46,831 DEBUG:state.pc_initial: State(pc_initial=98 nstack_initial=0)
2024-07-15 06:11:46,831 DEBUG:dispatch pc=98, inst=LOAD_DEREF(arg=5, lineno=223)
2024-07-15 06:11:46,831 DEBUG:stack []
2024-07-15 06:11:46,831 DEBUG:dispatch pc=100, inst=POP_JUMP_FORWARD_IF_FALSE(arg=39, lineno=223)
2024-07-15 06:11:46,831 DEBUG:stack ['$98load_deref.0']
2024-07-15 06:11:46,831 DEBUG:end state. edges=[Edge(pc=102, stack=(), blockstack=(), npush=0), Edge(pc=180, stack=(), blockstack=(), npush=0)]
2024-07-15 06:11:46,831 DEBUG:pending: deque([State(pc_initial=190 nstack_initial=0), State(pc_initial=102 nstack_initial=0), State(pc_initial=180 nstack_initial=0)])
2024-07-15 06:11:46,831 DEBUG:stack: []
2024-07-15 06:11:46,831 DEBUG:state.pc_initial: State(pc_initial=190 nstack_initial=0)
2024-07-15 06:11:46,831 DEBUG:dispatch pc=190, inst=LOAD_FAST(arg=4, lineno=234)
2024-07-15 06:11:46,831 DEBUG:stack []
2024-07-15 06:11:46,831 DEBUG:dispatch pc=192, inst=LOAD_CONST(arg=7, lineno=234)
2024-07-15 06:11:46,831 DEBUG:stack ['$exp190.0']
2024-07-15 06:11:46,831 DEBUG:dispatch pc=194, inst=COMPARE_OP(arg=4, lineno=234)
2024-07-15 06:11:46,831 DEBUG:stack ['$exp190.0', '$const192.1']
2024-07-15 06:11:46,831 DEBUG:dispatch pc=200, inst=POP_JUMP_FORWARD_IF_FALSE(arg=34, lineno=234)
2024-07-15 06:11:46,831 DEBUG:stack ['$194compare_op.2']
2024-07-15 06:11:46,831 DEBUG:end state. edges=[Edge(pc=202, stack=(), blockstack=(), npush=0), Edge(pc=270, stack=(), blockstack=(), npush=0)]
2024-07-15 06:11:46,831 DEBUG:pending: deque([State(pc_initial=102 nstack_initial=0), State(pc_initial=180 nstack_initial=0), State(pc_initial=202 nstack_initial=0), State(pc_initial=270 nstack_initial=0)])
2024-07-15 06:11:46,831 DEBUG:stack: []
2024-07-15 06:11:46,831 DEBUG:state.pc_initial: State(pc_initial=102 nstack_initial=0)
2024-07-15 06:11:46,831 DEBUG:dispatch pc=102, inst=LOAD_FAST(arg=0, lineno=224)
2024-07-15 06:11:46,831 DEBUG:stack []
2024-07-15 06:11:46,832 DEBUG:dispatch pc=104, inst=LOAD_CONST(arg=2, lineno=224)
2024-07-15 06:11:46,832 DEBUG:stack ['$a102.0']
2024-07-15 06:11:46,832 DEBUG:dispatch pc=106, inst=COMPARE_OP(arg=2, lineno=224)
2024-07-15 06:11:46,832 DEBUG:stack ['$a102.0', '$const104.1']
2024-07-15 06:11:46,832 DEBUG:dispatch pc=112, inst=POP_JUMP_FORWARD_IF_FALSE(arg=19, lineno=224)
2024-07-15 06:11:46,832 DEBUG:stack ['$106compare_op.2']
2024-07-15 06:11:46,832 DEBUG:end state. edges=[Edge(pc=114, stack=(), blockstack=(), npush=0), Edge(pc=152, stack=(), blockstack=(), npush=0)]
2024-07-15 06:11:46,832 DEBUG:pending: deque([State(pc_initial=180 nstack_initial=0), State(pc_initial=202 nstack_initial=0), State(pc_initial=270 nstack_initial=0), State(pc_initial=114 nstack_initial=0), State(pc_initial=152 nstack_initial=0)])
2024-07-15 06:11:46,832 DEBUG:stack: []
2024-07-15 06:11:46,832 DEBUG:state.pc_initial: State(pc_initial=180 nstack_initial=0)
2024-07-15 06:11:46,832 DEBUG:dispatch pc=180, inst=JUMP_FORWARD(arg=4, lineno=230)
2024-07-15 06:11:46,832 DEBUG:stack []
2024-07-15 06:11:46,832 DEBUG:end state. edges=[Edge(pc=190, stack=(), blockstack=(), npush=0)]
2024-07-15 06:11:46,832 DEBUG:pending: deque([State(pc_initial=202 nstack_initial=0), State(pc_initial=270 nstack_initial=0), State(pc_initial=114 nstack_initial=0), State(pc_initial=152 nstack_initial=0), State(pc_initial=190 nstack_initial=0)])
2024-07-15 06:11:46,832 DEBUG:stack: []
2024-07-15 06:11:46,832 DEBUG:state.pc_initial: State(pc_initial=202 nstack_initial=0)
2024-07-15 06:11:46,832 DEBUG:dispatch pc=202, inst=LOAD_GLOBAL(arg=5, lineno=236)
2024-07-15 06:11:46,832 DEBUG:stack []
2024-07-15 06:11:46,832 DEBUG:dispatch pc=214, inst=LOAD_ATTR(arg=3, lineno=236)
2024-07-15 06:11:46,832 DEBUG:stack ['$null$202.1', '$202load_global.0']
2024-07-15 06:11:46,832 DEBUG:dispatch pc=224, inst=LOAD_FAST(arg=0, lineno=236)
2024-07-15 06:11:46,832 DEBUG:stack ['$null$202.1', '$214load_attr.2']
2024-07-15 06:11:46,832 DEBUG:dispatch pc=226, inst=LOAD_GLOBAL(arg=9, lineno=236)
2024-07-15 06:11:46,832 DEBUG:stack ['$null$202.1', '$214load_attr.2', '$a224.3']
2024-07-15 06:11:46,832 DEBUG:dispatch pc=238, inst=LOAD_FAST(arg=1, lineno=236)
2024-07-15 06:11:46,832 DEBUG:stack ['$null$202.1', '$214load_attr.2', '$a224.3', '$null$226.5', '$226load_global.4']
2024-07-15 06:11:46,832 DEBUG:dispatch pc=240, inst=PRECALL(arg=1, lineno=236)
2024-07-15 06:11:46,832 DEBUG:stack ['$null$202.1', '$214load_attr.2', '$a224.3', '$null$226.5', '$226load_global.4', '$b238.6']
2024-07-15 06:11:46,832 DEBUG:dispatch pc=244, inst=CALL(arg=1, lineno=236)
2024-07-15 06:11:46,832 DEBUG:stack ['$null$202.1', '$214load_attr.2', '$a224.3', '$null$226.5', '$226load_global.4', '$b238.6']
2024-07-15 06:11:46,832 DEBUG:dispatch pc=254, inst=PRECALL(arg=2, lineno=236)
2024-07-15 06:11:46,832 DEBUG:stack ['$null$202.1', '$214load_attr.2', '$a224.3', '$244call.7']
2024-07-15 06:11:46,832 DEBUG:dispatch pc=258, inst=CALL(arg=2, lineno=236)
2024-07-15 06:11:46,833 DEBUG:stack ['$null$202.1', '$214load_attr.2', '$a224.3', '$244call.7']
2024-07-15 06:11:46,833 DEBUG:dispatch pc=268, inst=RETURN_VALUE(arg=None, lineno=236)
2024-07-15 06:11:46,833 DEBUG:stack ['$258call.8']
2024-07-15 06:11:46,833 DEBUG:end state. edges=[]
2024-07-15 06:11:46,833 DEBUG:pending: deque([State(pc_initial=270 nstack_initial=0), State(pc_initial=114 nstack_initial=0), State(pc_initial=152 nstack_initial=0), State(pc_initial=190 nstack_initial=0)])
2024-07-15 06:11:46,833 DEBUG:stack: []
2024-07-15 06:11:46,833 DEBUG:state.pc_initial: State(pc_initial=270 nstack_initial=0)
2024-07-15 06:11:46,833 DEBUG:dispatch pc=270, inst=LOAD_FAST(arg=4, lineno=237)
2024-07-15 06:11:46,833 DEBUG:stack []
2024-07-15 06:11:46,833 DEBUG:dispatch pc=272, inst=LOAD_CONST(arg=2, lineno=237)
2024-07-15 06:11:46,833 DEBUG:stack ['$exp270.0']
2024-07-15 06:11:46,833 DEBUG:dispatch pc=274, inst=COMPARE_OP(arg=3, lineno=237)
2024-07-15 06:11:46,833 DEBUG:stack ['$exp270.0', '$const272.1']
2024-07-15 06:11:46,833 DEBUG:dispatch pc=280, inst=POP_JUMP_FORWARD_IF_FALSE(arg=26, lineno=237)
2024-07-15 06:11:46,833 DEBUG:stack ['$274compare_op.2']
2024-07-15 06:11:46,833 DEBUG:end state. edges=[Edge(pc=282, stack=(), blockstack=(), npush=0), Edge(pc=334, stack=(), blockstack=(), npush=0)]
2024-07-15 06:11:46,833 DEBUG:pending: deque([State(pc_initial=114 nstack_initial=0), State(pc_initial=152 nstack_initial=0), State(pc_initial=190 nstack_initial=0), State(pc_initial=282 nstack_initial=0), State(pc_initial=334 nstack_initial=0)])
2024-07-15 06:11:46,833 DEBUG:stack: []
2024-07-15 06:11:46,833 DEBUG:state.pc_initial: State(pc_initial=114 nstack_initial=0)
2024-07-15 06:11:46,833 DEBUG:dispatch pc=114, inst=LOAD_DEREF(arg=7, lineno=225)
2024-07-15 06:11:46,833 DEBUG:stack []
2024-07-15 06:11:46,833 DEBUG:dispatch pc=116, inst=POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=225)
2024-07-15 06:11:46,833 DEBUG:stack ['$114load_deref.0']
2024-07-15 06:11:46,833 DEBUG:end state. edges=[Edge(pc=118, stack=(), blockstack=(), npush=0), Edge(pc=122, stack=(), blockstack=(), npush=0)]
2024-07-15 06:11:46,833 DEBUG:pending: deque([State(pc_initial=152 nstack_initial=0), State(pc_initial=190 nstack_initial=0), State(pc_initial=282 nstack_initial=0), State(pc_initial=334 nstack_initial=0), State(pc_initial=118 nstack_initial=0), State(pc_initial=122 nstack_initial=0)])
2024-07-15 06:11:46,833 DEBUG:stack: []
2024-07-15 06:11:46,833 DEBUG:state.pc_initial: State(pc_initial=152 nstack_initial=0)
2024-07-15 06:11:46,833 DEBUG:dispatch pc=152, inst=LOAD_FAST(arg=0, lineno=229)
2024-07-15 06:11:46,833 DEBUG:stack []
2024-07-15 06:11:46,834 DEBUG:dispatch pc=154, inst=LOAD_CONST(arg=1, lineno=229)
2024-07-15 06:11:46,834 DEBUG:stack ['$a152.0']
2024-07-15 06:11:46,834 DEBUG:dispatch pc=156, inst=COMPARE_OP(arg=3, lineno=229)
2024-07-15 06:11:46,834 DEBUG:stack ['$a152.0', '$const154.1']
2024-07-15 06:11:46,834 DEBUG:dispatch pc=162, inst=POP_JUMP_FORWARD_IF_FALSE(arg=8, lineno=229)
2024-07-15 06:11:46,834 DEBUG:stack ['$156compare_op.2']
2024-07-15 06:11:46,834 DEBUG:end state. edges=[Edge(pc=164, stack=(), blockstack=(), npush=0), Edge(pc=180, stack=(), blockstack=(), npush=0)]
2024-07-15 06:11:46,834 DEBUG:pending: deque([State(pc_initial=190 nstack_initial=0), State(pc_initial=282 nstack_initial=0), State(pc_initial=334 nstack_initial=0), State(pc_initial=118 nstack_initial=0), State(pc_initial=122 nstack_initial=0), State(pc_initial=164 nstack_initial=0), State(pc_initial=180 nstack_initial=0)])
2024-07-15 06:11:46,834 DEBUG:pending: deque([State(pc_initial=282 nstack_initial=0), State(pc_initial=334 nstack_initial=0), State(pc_initial=118 nstack_initial=0), State(pc_initial=122 nstack_initial=0), State(pc_initial=164 nstack_initial=0), State(pc_initial=180 nstack_initial=0)])
2024-07-15 06:11:46,834 DEBUG:stack: []
2024-07-15 06:11:46,834 DEBUG:state.pc_initial: State(pc_initial=282 nstack_initial=0)
2024-07-15 06:11:46,834 DEBUG:dispatch pc=282, inst=LOAD_FAST(arg=4, lineno=238)
2024-07-15 06:11:46,834 DEBUG:stack []
2024-07-15 06:11:46,834 DEBUG:dispatch pc=284, inst=LOAD_CONST(arg=1, lineno=238)
2024-07-15 06:11:46,834 DEBUG:stack ['$exp282.0']
2024-07-15 06:11:46,834 DEBUG:dispatch pc=286, inst=BINARY_OP(arg=1, lineno=238)
2024-07-15 06:11:46,835 DEBUG:stack ['$exp282.0', '$const284.1']
2024-07-15 06:11:46,835 DEBUG:dispatch pc=290, inst=POP_JUMP_FORWARD_IF_FALSE(arg=5, lineno=238)
2024-07-15 06:11:46,835 DEBUG:stack ['$binop_and_286.2']
2024-07-15 06:11:46,835 DEBUG:end state. edges=[Edge(pc=292, stack=(), blockstack=(), npush=0), Edge(pc=302, stack=(), blockstack=(), npush=0)]
2024-07-15 06:11:46,835 DEBUG:pending: deque([State(pc_initial=334 nstack_initial=0), State(pc_initial=118 nstack_initial=0), State(pc_initial=122 nstack_initial=0), State(pc_initial=164 nstack_initial=0), State(pc_initial=180 nstack_initial=0), State(pc_initial=292 nstack_initial=0), State(pc_initial=302 nstack_initial=0)])
2024-07-15 06:11:46,835 DEBUG:stack: []
2024-07-15 06:11:46,835 DEBUG:state.pc_initial: State(pc_initial=334 nstack_initial=0)
2024-07-15 06:11:46,835 DEBUG:dispatch pc=334, inst=LOAD_FAST(arg=3, lineno=243)
2024-07-15 06:11:46,835 DEBUG:stack []
2024-07-15 06:11:46,835 DEBUG:dispatch pc=336, inst=POP_JUMP_FORWARD_IF_FALSE(arg=5, lineno=243)
2024-07-15 06:11:46,835 DEBUG:stack ['$invert334.0']
2024-07-15 06:11:46,835 DEBUG:end state. edges=[Edge(pc=338, stack=(), blockstack=(), npush=0), Edge(pc=348, stack=(), blockstack=(), npush=0)]
2024-07-15 06:11:46,835 DEBUG:pending: deque([State(pc_initial=118 nstack_initial=0), State(pc_initial=122 nstack_initial=0), State(pc_initial=164 nstack_initial=0), State(pc_initial=180 nstack_initial=0), State(pc_initial=292 nstack_initial=0), State(pc_initial=302 nstack_initial=0), State(pc_initial=338 nstack_initial=0), State(pc_initial=348 nstack_initial=0)])
2024-07-15 06:11:46,835 DEBUG:stack: []
2024-07-15 06:11:46,835 DEBUG:state.pc_initial: State(pc_initial=118 nstack_initial=0)
2024-07-15 06:11:46,835 DEBUG:dispatch pc=118, inst=LOAD_DEREF(arg=7, lineno=226)
2024-07-15 06:11:46,835 DEBUG:stack []
2024-07-15 06:11:46,835 DEBUG:dispatch pc=120, inst=RETURN_VALUE(arg=None, lineno=226)
2024-07-15 06:11:46,836 DEBUG:stack ['$118load_deref.0']
2024-07-15 06:11:46,836 DEBUG:end state. edges=[]
2024-07-15 06:11:46,836 DEBUG:pending: deque([State(pc_initial=122 nstack_initial=0), State(pc_initial=164 nstack_initial=0), State(pc_initial=180 nstack_initial=0), State(pc_initial=292 nstack_initial=0), State(pc_initial=302 nstack_initial=0), State(pc_initial=338 nstack_initial=0), State(pc_initial=348 nstack_initial=0)])
2024-07-15 06:11:46,836 DEBUG:stack: []
2024-07-15 06:11:46,836 DEBUG:state.pc_initial: State(pc_initial=122 nstack_initial=0)
2024-07-15 06:11:46,836 DEBUG:dispatch pc=122, inst=LOAD_GLOBAL(arg=3, lineno=228)
2024-07-15 06:11:46,836 DEBUG:stack []
2024-07-15 06:11:46,836 DEBUG:dispatch pc=134, inst=LOAD_CONST(arg=4, lineno=228)
2024-07-15 06:11:46,836 DEBUG:stack ['$null$122.1', '$122load_global.0']
2024-07-15 06:11:46,836 DEBUG:dispatch pc=136, inst=PRECALL(arg=1, lineno=228)
2024-07-15 06:11:46,836 DEBUG:stack ['$null$122.1', '$122load_global.0', '$const134.2']
2024-07-15 06:11:46,836 DEBUG:dispatch pc=140, inst=CALL(arg=1, lineno=228)
2024-07-15 06:11:46,836 DEBUG:stack ['$null$122.1', '$122load_global.0', '$const134.2']
2024-07-15 06:11:46,836 DEBUG:dispatch pc=150, inst=RAISE_VARARGS(arg=1, lineno=228)
2024-07-15 06:11:46,836 DEBUG:stack ['$140call.3']
2024-07-15 06:11:46,836 DEBUG:end state. edges=[]
2024-07-15 06:11:46,836 DEBUG:pending: deque([State(pc_initial=164 nstack_initial=0), State(pc_initial=180 nstack_initial=0), State(pc_initial=292 nstack_initial=0), State(pc_initial=302 nstack_initial=0), State(pc_initial=338 nstack_initial=0), State(pc_initial=348 nstack_initial=0)])
2024-07-15 06:11:46,836 DEBUG:stack: []
2024-07-15 06:11:46,836 DEBUG:state.pc_initial: State(pc_initial=164 nstack_initial=0)
2024-07-15 06:11:46,836 DEBUG:dispatch pc=164, inst=LOAD_FAST(arg=0, lineno=229)
2024-07-15 06:11:46,836 DEBUG:stack []
2024-07-15 06:11:46,836 DEBUG:dispatch pc=166, inst=LOAD_CONST(arg=5, lineno=229)
2024-07-15 06:11:46,836 DEBUG:stack ['$a164.0']
2024-07-15 06:11:46,836 DEBUG:dispatch pc=168, inst=COMPARE_OP(arg=3, lineno=229)
2024-07-15 06:11:46,836 DEBUG:stack ['$a164.0', '$const166.1']
2024-07-15 06:11:46,836 DEBUG:dispatch pc=174, inst=POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=229)
2024-07-15 06:11:46,836 DEBUG:stack ['$168compare_op.2']
2024-07-15 06:11:46,836 DEBUG:end state. edges=[Edge(pc=176, stack=(), blockstack=(), npush=0), Edge(pc=180, stack=(), blockstack=(), npush=0)]
2024-07-15 06:11:46,836 DEBUG:pending: deque([State(pc_initial=180 nstack_initial=0), State(pc_initial=292 nstack_initial=0), State(pc_initial=302 nstack_initial=0), State(pc_initial=338 nstack_initial=0), State(pc_initial=348 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=180 nstack_initial=0)])
2024-07-15 06:11:46,837 DEBUG:pending: deque([State(pc_initial=292 nstack_initial=0), State(pc_initial=302 nstack_initial=0), State(pc_initial=338 nstack_initial=0), State(pc_initial=348 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=180 nstack_initial=0)])
2024-07-15 06:11:46,837 DEBUG:stack: []
2024-07-15 06:11:46,837 DEBUG:state.pc_initial: State(pc_initial=292 nstack_initial=0)
2024-07-15 06:11:46,837 DEBUG:dispatch pc=292, inst=LOAD_FAST(arg=2, lineno=239)
2024-07-15 06:11:46,837 DEBUG:stack []
2024-07-15 06:11:46,837 DEBUG:dispatch pc=294, inst=LOAD_FAST(arg=0, lineno=239)
2024-07-15 06:11:46,837 DEBUG:stack ['$r292.0']
2024-07-15 06:11:46,837 DEBUG:dispatch pc=296, inst=BINARY_OP(arg=18, lineno=239)
2024-07-15 06:11:46,837 DEBUG:stack ['$r292.0', '$a294.1']
2024-07-15 06:11:46,837 DEBUG:dispatch pc=300, inst=STORE_FAST(arg=2, lineno=239)
2024-07-15 06:11:46,837 DEBUG:stack ['$binop_imul296.2']
2024-07-15 06:11:46,837 DEBUG:end state. edges=[Edge(pc=302, stack=(), blockstack=(), npush=0)]
2024-07-15 06:11:46,837 DEBUG:pending: deque([State(pc_initial=302 nstack_initial=0), State(pc_initial=338 nstack_initial=0), State(pc_initial=348 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=180 nstack_initial=0), State(pc_initial=302 nstack_initial=0)])
2024-07-15 06:11:46,837 DEBUG:stack: []
2024-07-15 06:11:46,837 DEBUG:state.pc_initial: State(pc_initial=302 nstack_initial=0)
2024-07-15 06:11:46,837 DEBUG:dispatch pc=302, inst=LOAD_FAST(arg=4, lineno=240)
2024-07-15 06:11:46,837 DEBUG:stack []
2024-07-15 06:11:46,837 DEBUG:dispatch pc=304, inst=LOAD_CONST(arg=1, lineno=240)
2024-07-15 06:11:46,837 DEBUG:stack ['$exp302.0']
2024-07-15 06:11:46,837 DEBUG:dispatch pc=306, inst=BINARY_OP(arg=22, lineno=240)
2024-07-15 06:11:46,837 DEBUG:stack ['$exp302.0', '$const304.1']
2024-07-15 06:11:46,837 DEBUG:dispatch pc=310, inst=STORE_FAST(arg=4, lineno=240)
2024-07-15 06:11:46,837 DEBUG:stack ['$binop_irshift306.2']
2024-07-15 06:11:46,837 DEBUG:dispatch pc=312, inst=LOAD_FAST(arg=0, lineno=241)
2024-07-15 06:11:46,837 DEBUG:stack []
2024-07-15 06:11:46,837 DEBUG:dispatch pc=314, inst=LOAD_FAST(arg=0, lineno=241)
2024-07-15 06:11:46,837 DEBUG:stack ['$a312.3']
2024-07-15 06:11:46,837 DEBUG:dispatch pc=316, inst=BINARY_OP(arg=18, lineno=241)
2024-07-15 06:11:46,837 DEBUG:stack ['$a312.3', '$a314.4']
2024-07-15 06:11:46,837 DEBUG:dispatch pc=320, inst=STORE_FAST(arg=0, lineno=241)
2024-07-15 06:11:46,837 DEBUG:stack ['$binop_imul316.5']
2024-07-15 06:11:46,837 DEBUG:dispatch pc=322, inst=LOAD_FAST(arg=4, lineno=237)
2024-07-15 06:11:46,838 DEBUG:stack []
2024-07-15 06:11:46,838 DEBUG:dispatch pc=324, inst=LOAD_CONST(arg=2, lineno=237)
2024-07-15 06:11:46,838 DEBUG:stack ['$exp322.6']
2024-07-15 06:11:46,838 DEBUG:dispatch pc=326, inst=COMPARE_OP(arg=3, lineno=237)
2024-07-15 06:11:46,838 DEBUG:stack ['$exp322.6', '$const324.7']
2024-07-15 06:11:46,838 DEBUG:dispatch pc=332, inst=POP_JUMP_BACKWARD_IF_TRUE(arg=26, lineno=237)
2024-07-15 06:11:46,838 DEBUG:stack ['$326compare_op.8']
2024-07-15 06:11:46,838 DEBUG:end state. edges=[Edge(pc=334, stack=(), blockstack=(), npush=0), Edge(pc=282, stack=(), blockstack=(), npush=0)]
2024-07-15 06:11:46,838 DEBUG:pending: deque([State(pc_initial=338 nstack_initial=0), State(pc_initial=348 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=180 nstack_initial=0), State(pc_initial=302 nstack_initial=0), State(pc_initial=334 nstack_initial=0), State(pc_initial=282 nstack_initial=0)])
2024-07-15 06:11:46,838 DEBUG:stack: []
2024-07-15 06:11:46,838 DEBUG:state.pc_initial: State(pc_initial=338 nstack_initial=0)
2024-07-15 06:11:46,838 DEBUG:dispatch pc=338, inst=LOAD_CONST(arg=8, lineno=243)
2024-07-15 06:11:46,838 DEBUG:stack []
2024-07-15 06:11:46,838 DEBUG:dispatch pc=340, inst=LOAD_FAST(arg=2, lineno=243)
2024-07-15 06:11:46,838 DEBUG:stack ['$const338.0']
2024-07-15 06:11:46,838 DEBUG:dispatch pc=342, inst=BINARY_OP(arg=11, lineno=243)
2024-07-15 06:11:46,838 DEBUG:stack ['$const338.0', '$r340.1']
2024-07-15 06:11:46,838 DEBUG:dispatch pc=346, inst=JUMP_FORWARD(arg=1, lineno=243)
2024-07-15 06:11:46,838 DEBUG:stack ['$binop_truediv342.2']
2024-07-15 06:11:46,838 DEBUG:end state. edges=[Edge(pc=350, stack=('$binop_truediv342.2',), blockstack=(), npush=0)]
2024-07-15 06:11:46,838 DEBUG:pending: deque([State(pc_initial=348 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=180 nstack_initial=0), State(pc_initial=302 nstack_initial=0), State(pc_initial=334 nstack_initial=0), State(pc_initial=282 nstack_initial=0), State(pc_initial=350 nstack_initial=1)])
2024-07-15 06:11:46,838 DEBUG:stack: []
2024-07-15 06:11:46,838 DEBUG:state.pc_initial: State(pc_initial=348 nstack_initial=0)
2024-07-15 06:11:46,838 DEBUG:dispatch pc=348, inst=LOAD_FAST(arg=2, lineno=243)
2024-07-15 06:11:46,838 DEBUG:stack []
2024-07-15 06:11:46,838 DEBUG:end state. edges=[Edge(pc=350, stack=('$r348.0',), blockstack=(), npush=0)]
2024-07-15 06:11:46,838 DEBUG:pending: deque([State(pc_initial=176 nstack_initial=0), State(pc_initial=180 nstack_initial=0), State(pc_initial=302 nstack_initial=0), State(pc_initial=334 nstack_initial=0), State(pc_initial=282 nstack_initial=0), State(pc_initial=350 nstack_initial=1), State(pc_initial=350 nstack_initial=1)])
2024-07-15 06:11:46,838 DEBUG:stack: []
2024-07-15 06:11:46,838 DEBUG:state.pc_initial: State(pc_initial=176 nstack_initial=0)
2024-07-15 06:11:46,838 DEBUG:dispatch pc=176, inst=LOAD_CONST(arg=2, lineno=230)
2024-07-15 06:11:46,838 DEBUG:stack []
2024-07-15 06:11:46,838 DEBUG:dispatch pc=178, inst=RETURN_VALUE(arg=None, lineno=230)
2024-07-15 06:11:46,838 DEBUG:stack ['$const176.0']
2024-07-15 06:11:46,838 DEBUG:end state. edges=[]
2024-07-15 06:11:46,839 DEBUG:pending: deque([State(pc_initial=180 nstack_initial=0), State(pc_initial=302 nstack_initial=0), State(pc_initial=334 nstack_initial=0), State(pc_initial=282 nstack_initial=0), State(pc_initial=350 nstack_initial=1), State(pc_initial=350 nstack_initial=1)])
2024-07-15 06:11:46,839 DEBUG:pending: deque([State(pc_initial=302 nstack_initial=0), State(pc_initial=334 nstack_initial=0), State(pc_initial=282 nstack_initial=0), State(pc_initial=350 nstack_initial=1), State(pc_initial=350 nstack_initial=1)])
2024-07-15 06:11:46,839 DEBUG:pending: deque([State(pc_initial=334 nstack_initial=0), State(pc_initial=282 nstack_initial=0), State(pc_initial=350 nstack_initial=1), State(pc_initial=350 nstack_initial=1)])
2024-07-15 06:11:46,839 DEBUG:pending: deque([State(pc_initial=282 nstack_initial=0), State(pc_initial=350 nstack_initial=1), State(pc_initial=350 nstack_initial=1)])
2024-07-15 06:11:46,839 DEBUG:pending: deque([State(pc_initial=350 nstack_initial=1), State(pc_initial=350 nstack_initial=1)])
2024-07-15 06:11:46,839 DEBUG:stack: ['$phi350.0']
2024-07-15 06:11:46,839 DEBUG:state.pc_initial: State(pc_initial=350 nstack_initial=1)
2024-07-15 06:11:46,839 DEBUG:dispatch pc=350, inst=RETURN_VALUE(arg=None, lineno=243)
2024-07-15 06:11:46,839 DEBUG:stack ['$phi350.0']
2024-07-15 06:11:46,839 DEBUG:end state. edges=[]
2024-07-15 06:11:46,839 DEBUG:pending: deque([State(pc_initial=350 nstack_initial=1)])
2024-07-15 06:11:46,839 DEBUG:-------------------------Prune PHIs-------------------------
2024-07-15 06:11:46,839 DEBUG:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=62 nstack_initial=0): set(),
             State(pc_initial=84 nstack_initial=0): set(),
             State(pc_initial=98 nstack_initial=0): set(),
             State(pc_initial=102 nstack_initial=0): set(),
             State(pc_initial=114 nstack_initial=0): set(),
             State(pc_initial=118 nstack_initial=0): set(),
             State(pc_initial=122 nstack_initial=0): set(),
             State(pc_initial=152 nstack_initial=0): set(),
             State(pc_initial=164 nstack_initial=0): set(),
             State(pc_initial=176 nstack_initial=0): set(),
             State(pc_initial=180 nstack_initial=0): set(),
             State(pc_initial=182 nstack_initial=0): set(),
             State(pc_initial=190 nstack_initial=0): set(),
             State(pc_initial=202 nstack_initial=0): set(),
             State(pc_initial=270 nstack_initial=0): set(),
             State(pc_initial=282 nstack_initial=0): set(),
             State(pc_initial=292 nstack_initial=0): set(),
             State(pc_initial=302 nstack_initial=0): set(),
             State(pc_initial=334 nstack_initial=0): set(),
             State(pc_initial=338 nstack_initial=0): set(),
             State(pc_initial=348 nstack_initial=0): set(),
             State(pc_initial=350 nstack_initial=1): {'$phi350.0'}})
2024-07-15 06:11:46,839 DEBUG:defmap: {'$phi350.0': State(pc_initial=348 nstack_initial=0)}
2024-07-15 06:11:46,839 DEBUG:phismap: defaultdict(<class 'set'>,
            {'$phi350.0': {('$binop_truediv342.2',
                            State(pc_initial=338 nstack_initial=0)),
                           ('$r348.0',
                            State(pc_initial=348 nstack_initial=0))}})
2024-07-15 06:11:46,839 DEBUG:changing phismap: defaultdict(<class 'set'>,
            {'$phi350.0': {('$binop_truediv342.2',
                            State(pc_initial=338 nstack_initial=0)),
                           ('$r348.0',
                            State(pc_initial=348 nstack_initial=0))}})
2024-07-15 06:11:46,839 DEBUG:keep phismap: {'$phi350.0': {('$binop_truediv342.2', State(pc_initial=338 nstack_initial=0)),
               ('$r348.0', State(pc_initial=348 nstack_initial=0))}}
2024-07-15 06:11:46,839 DEBUG:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=338 nstack_initial=0): {'$phi350.0': '$binop_truediv342.2'},
             State(pc_initial=348 nstack_initial=0): {'$phi350.0': '$r348.0'}})
2024-07-15 06:11:46,840 DEBUG:----------------------DONE Prune PHIs-----------------------
2024-07-15 06:11:46,840 DEBUG:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {}), (6, {}), (8, {'res': '$8load_deref.1'}), (10, {'res': '$const10.2'}), (12, {}), (14, {}), (16, {'func': '$8load_deref.1', 'args': ['$const10.2'], 'kw_names': None, 'res': '$16call.3'}), (18, {}), (20, {}), (22, {}), (24, {}), (26, {'value': '$16call.3'}), (28, {}), (30, {'res': '$30load_deref.5'}), (32, {'res': '$a32.6'}), (34, {}), (36, {}), (38, {'func': '$30load_deref.5', 'args': ['$a32.6'], 'kw_names': None, 'res': '$38call.7'}), (40, {}), (42, {}), (44, {}), (46, {}), (48, {'value': '$38call.7'}), (50, {'res': '$b50.8'}), (52, {'res': '$const52.9'}), (54, {'lhs': '$b50.8', 'rhs': '$const52.9', 'res': '$54compare_op.10'}), (56, {}), (58, {}), (60, {'pred': '$54compare_op.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={62: (), 182: ()})
2024-07-15 06:11:46,840 DEBUG:block_infos State(pc_initial=62 nstack_initial=0):
AdaptBlockInfo(insts=((62, {'res': '$const62.0'}), (64, {'value': '$const62.0'}), (66, {'res': '$b66.1'}), (68, {'value': '$b66.1', 'res': '$68unary_negative.2'}), (70, {'value': '$68unary_negative.2'}), (72, {'res': '$exp72.3'}), (74, {'res': '$const74.4'}), (76, {'lhs': '$exp72.3', 'rhs': '$const74.4', 'res': '$76compare_op.5'}), (78, {}), (80, {}), (82, {'pred': '$76compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={84: (), 98: ()})
2024-07-15 06:11:46,840 DEBUG:block_infos State(pc_initial=84 nstack_initial=0):
AdaptBlockInfo(insts=((84, {'idx': 0, 'res': '$84load_global.0'}), (86, {}), (88, {}), (90, {}), (92, {}), (94, {}), (96, {'exc': '$84load_global.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-15 06:11:46,840 DEBUG:block_infos State(pc_initial=98 nstack_initial=0):
AdaptBlockInfo(insts=((98, {'res': '$98load_deref.0'}), (100, {'pred': '$98load_deref.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={102: (), 180: ()})
2024-07-15 06:11:46,840 DEBUG:block_infos State(pc_initial=102 nstack_initial=0):
AdaptBlockInfo(insts=((102, {'res': '$a102.0'}), (104, {'res': '$const104.1'}), (106, {'lhs': '$a102.0', 'rhs': '$const104.1', 'res': '$106compare_op.2'}), (108, {}), (110, {}), (112, {'pred': '$106compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={114: (), 152: ()})
2024-07-15 06:11:46,840 DEBUG:block_infos State(pc_initial=114 nstack_initial=0):
AdaptBlockInfo(insts=((114, {'res': '$114load_deref.0'}), (116, {'pred': '$114load_deref.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={118: (), 122: ()})
2024-07-15 06:11:46,840 DEBUG:block_infos State(pc_initial=118 nstack_initial=0):
AdaptBlockInfo(insts=((118, {'res': '$118load_deref.0'}), (120, {'retval': '$118load_deref.0', 'castval': '$120return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-15 06:11:46,840 DEBUG:block_infos State(pc_initial=122 nstack_initial=0):
AdaptBlockInfo(insts=((122, {'idx': 1, 'res': '$122load_global.0'}), (124, {}), (126, {}), (128, {}), (130, {}), (132, {}), (134, {'res': '$const134.2'}), (136, {}), (138, {}), (140, {'func': '$122load_global.0', 'args': ['$const134.2'], 'kw_names': None, 'res': '$140call.3'}), (142, {}), (144, {}), (146, {}), (148, {}), (150, {'exc': '$140call.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-15 06:11:46,840 DEBUG:block_infos State(pc_initial=152 nstack_initial=0):
AdaptBlockInfo(insts=((152, {'res': '$a152.0'}), (154, {'res': '$const154.1'}), (156, {'lhs': '$a152.0', 'rhs': '$const154.1', 'res': '$156compare_op.2'}), (158, {}), (160, {}), (162, {'pred': '$156compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={164: (), 180: ()})
2024-07-15 06:11:46,840 DEBUG:block_infos State(pc_initial=164 nstack_initial=0):
AdaptBlockInfo(insts=((164, {'res': '$a164.0'}), (166, {'res': '$const166.1'}), (168, {'lhs': '$a164.0', 'rhs': '$const166.1', 'res': '$168compare_op.2'}), (170, {}), (172, {}), (174, {'pred': '$168compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={176: (), 180: ()})
2024-07-15 06:11:46,840 DEBUG:block_infos State(pc_initial=176 nstack_initial=0):
AdaptBlockInfo(insts=((176, {'res': '$const176.0'}), (178, {'retval': '$const176.0', 'castval': '$178return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-15 06:11:46,840 DEBUG:block_infos State(pc_initial=180 nstack_initial=0):
AdaptBlockInfo(insts=((180, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={190: ()})
2024-07-15 06:11:46,840 DEBUG:block_infos State(pc_initial=182 nstack_initial=0):
AdaptBlockInfo(insts=((182, {'res': '$const182.0'}), (184, {'value': '$const182.0'}), (186, {'res': '$b186.1'}), (188, {'value': '$b186.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={190: ()})
2024-07-15 06:11:46,840 DEBUG:block_infos State(pc_initial=190 nstack_initial=0):
AdaptBlockInfo(insts=((190, {'res': '$exp190.0'}), (192, {'res': '$const192.1'}), (194, {'lhs': '$exp190.0', 'rhs': '$const192.1', 'res': '$194compare_op.2'}), (196, {}), (198, {}), (200, {'pred': '$194compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={202: (), 270: ()})
2024-07-15 06:11:46,840 DEBUG:block_infos State(pc_initial=202 nstack_initial=0):
AdaptBlockInfo(insts=((202, {'idx': 2, 'res': '$202load_global.0'}), (204, {}), (206, {}), (208, {}), (210, {}), (212, {}), (214, {'item': '$202load_global.0', 'res': '$214load_attr.2'}), (216, {}), (218, {}), (220, {}), (222, {}), (224, {'res': '$a224.3'}), (226, {'idx': 4, 'res': '$226load_global.4'}), (228, {}), (230, {}), (232, {}), (234, {}), (236, {}), (238, {'res': '$b238.6'}), (240, {}), (242, {}), (244, {'func': '$226load_global.4', 'args': ['$b238.6'], 'kw_names': None, 'res': '$244call.7'}), (246, {}), (248, {}), (250, {}), (252, {}), (254, {}), (256, {}), (258, {'func': '$214load_attr.2', 'args': ['$a224.3', '$244call.7'], 'kw_names': None, 'res': '$258call.8'}), (260, {}), (262, {}), (264, {}), (266, {}), (268, {'retval': '$258call.8', 'castval': '$268return_value.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-15 06:11:46,840 DEBUG:block_infos State(pc_initial=270 nstack_initial=0):
AdaptBlockInfo(insts=((270, {'res': '$exp270.0'}), (272, {'res': '$const272.1'}), (274, {'lhs': '$exp270.0', 'rhs': '$const272.1', 'res': '$274compare_op.2'}), (276, {}), (278, {}), (280, {'pred': '$274compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={282: (), 334: ()})
2024-07-15 06:11:46,840 DEBUG:block_infos State(pc_initial=282 nstack_initial=0):
AdaptBlockInfo(insts=((282, {'res': '$exp282.0'}), (284, {'res': '$const284.1'}), (286, {'op': '&', 'lhs': '$exp282.0', 'rhs': '$const284.1', 'res': '$binop_and_286.2'}), (288, {}), (290, {'pred': '$binop_and_286.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={292: (), 302: ()})
2024-07-15 06:11:46,840 DEBUG:block_infos State(pc_initial=292 nstack_initial=0):
AdaptBlockInfo(insts=((292, {'res': '$r292.0'}), (294, {'res': '$a294.1'}), (296, {'op': '*=', 'lhs': '$r292.0', 'rhs': '$a294.1', 'res': '$binop_imul296.2'}), (298, {}), (300, {'value': '$binop_imul296.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={302: ()})
2024-07-15 06:11:46,840 DEBUG:block_infos State(pc_initial=302 nstack_initial=0):
AdaptBlockInfo(insts=((302, {'res': '$exp302.0'}), (304, {'res': '$const304.1'}), (306, {'op': '>>=', 'lhs': '$exp302.0', 'rhs': '$const304.1', 'res': '$binop_irshift306.2'}), (308, {}), (310, {'value': '$binop_irshift306.2'}), (312, {'res': '$a312.3'}), (314, {'res': '$a314.4'}), (316, {'op': '*=', 'lhs': '$a312.3', 'rhs': '$a314.4', 'res': '$binop_imul316.5'}), (318, {}), (320, {'value': '$binop_imul316.5'}), (322, {'res': '$exp322.6'}), (324, {'res': '$const324.7'}), (326, {'lhs': '$exp322.6', 'rhs': '$const324.7', 'res': '$326compare_op.8'}), (328, {}), (330, {}), (332, {'pred': '$326compare_op.8'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={334: (), 282: ()})
2024-07-15 06:11:46,840 DEBUG:block_infos State(pc_initial=334 nstack_initial=0):
AdaptBlockInfo(insts=((334, {'res': '$invert334.0'}), (336, {'pred': '$invert334.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={338: (), 348: ()})
2024-07-15 06:11:46,840 DEBUG:block_infos State(pc_initial=338 nstack_initial=0):
AdaptBlockInfo(insts=((338, {'res': '$const338.0'}), (340, {'res': '$r340.1'}), (342, {'op': '/', 'lhs': '$const338.0', 'rhs': '$r340.1', 'res': '$binop_truediv342.2'}), (344, {}), (346, {})), outgoing_phis={'$phi350.0': '$binop_truediv342.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={350: ('$binop_truediv342.2',)})
2024-07-15 06:11:46,840 DEBUG:block_infos State(pc_initial=348 nstack_initial=0):
AdaptBlockInfo(insts=((348, {'res': '$r348.0'}),), outgoing_phis={'$phi350.0': '$r348.0'}, blockstack=(), active_try_block=None, outgoing_edgepushed={350: ('$r348.0',)})
2024-07-15 06:11:46,841 DEBUG:block_infos State(pc_initial=350 nstack_initial=1):
AdaptBlockInfo(insts=((350, {'retval': '$phi350.0', 'castval': '$350return_value.1'}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-15 06:11:46,843 DEBUG:label 0:
    a = arg(0, name=a)                       ['a']
    b = arg(1, name=b)                       ['b']
    $8load_deref.1 = freevar(tp: float64)    ['$8load_deref.1']
    $const10.2 = const(int, 1)               ['$const10.2']
    r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None) ['$8load_deref.1', '$const10.2', 'r']
    $30load_deref.5 = freevar(tp: float64)   ['$30load_deref.5']
    a.1 = call $30load_deref.5(a, func=$30load_deref.5, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None) ['$30load_deref.5', 'a', 'a.1']
    $const52.9 = const(int, 0)               ['$const52.9']
    $54compare_op.10 = b < $const52.9        ['$54compare_op.10', '$const52.9', 'b']
    bool60 = global(bool: <class 'bool'>)    ['bool60']
    $60pred = call bool60($54compare_op.10, func=bool60, args=(Var($54compare_op.10, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None) ['$54compare_op.10', '$60pred', 'bool60']
    branch $60pred, 62, 182                  ['$60pred']
label 62:
    invert = const(bool, True)               ['invert']
    exp = unary(fn=<built-in function neg>, value=b) ['b', 'exp']
    $const74.4 = const(int, 0)               ['$const74.4']
    $76compare_op.5 = exp < $const74.4       ['$76compare_op.5', '$const74.4', 'exp']
    bool82 = global(bool: <class 'bool'>)    ['bool82']
    $82pred = call bool82($76compare_op.5, func=bool82, args=(Var($76compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None) ['$76compare_op.5', '$82pred', 'bool82']
    branch $82pred, 84, 98                   ['$82pred']
label 84:
    $84load_global.0 = global(OverflowError: <class 'OverflowError'>) ['$84load_global.0']
    raise $84load_global.0                   ['$84load_global.0']
label 98:
    $98load_deref.0 = freevar(is_integer: False) ['$98load_deref.0']
    bool100 = global(bool: <class 'bool'>)   ['bool100']
    $100pred = call bool100($98load_deref.0, func=bool100, args=(Var($98load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None) ['$100pred', '$98load_deref.0', 'bool100']
    branch $100pred, 102, 180                ['$100pred']
label 102:
    $const104.1 = const(int, 0)              ['$const104.1']
    $106compare_op.2 = a.1 == $const104.1    ['$106compare_op.2', '$const104.1', 'a.1']
    bool112 = global(bool: <class 'bool'>)   ['bool112']
    $112pred = call bool112($106compare_op.2, func=bool112, args=(Var($106compare_op.2, numbers.py:224),), kws=(), vararg=None, varkwarg=None, target=None) ['$106compare_op.2', '$112pred', 'bool112']
    branch $112pred, 114, 152                ['$112pred']
label 114:
    $114load_deref.0 = freevar(zerodiv_return: False) ['$114load_deref.0']
    bool116 = global(bool: <class 'bool'>)   ['bool116']
    $116pred = call bool116($114load_deref.0, func=bool116, args=(Var($114load_deref.0, numbers.py:225),), kws=(), vararg=None, varkwarg=None, target=None) ['$114load_deref.0', '$116pred', 'bool116']
    branch $116pred, 118, 122                ['$116pred']
label 118:
    $118load_deref.0 = freevar(zerodiv_return: False) ['$118load_deref.0']
    $120return_value.1 = cast(value=$118load_deref.0) ['$118load_deref.0', '$120return_value.1']
    return $120return_value.1                ['$120return_value.1']
label 122:
    $122load_global.0 = global(ZeroDivisionError: <class 'ZeroDivisionError'>) ['$122load_global.0']
    $const134.2 = const(str, 0 cannot be raised to a negative power) ['$const134.2']
    $140call.3 = call $122load_global.0($const134.2, func=$122load_global.0, args=[Var($const134.2, numbers.py:228)], kws=(), vararg=None, varkwarg=None, target=None) ['$122load_global.0', '$140call.3', '$const134.2']
    raise $140call.3                         ['$140call.3']
label 152:
    $const154.1 = const(int, 1)              ['$const154.1']
    $156compare_op.2 = a.1 != $const154.1    ['$156compare_op.2', '$const154.1', 'a.1']
    bool162 = global(bool: <class 'bool'>)   ['bool162']
    $162pred = call bool162($156compare_op.2, func=bool162, args=(Var($156compare_op.2, numbers.py:229),), kws=(), vararg=None, varkwarg=None, target=None) ['$156compare_op.2', '$162pred', 'bool162']
    branch $162pred, 164, 180                ['$162pred']
label 164:
    $const166.1 = const(int, -1)             ['$const166.1']
    $168compare_op.2 = a.1 != $const166.1    ['$168compare_op.2', '$const166.1', 'a.1']
    bool174 = global(bool: <class 'bool'>)   ['bool174']
    $174pred = call bool174($168compare_op.2, func=bool174, args=(Var($168compare_op.2, numbers.py:229),), kws=(), vararg=None, varkwarg=None, target=None) ['$168compare_op.2', '$174pred', 'bool174']
    branch $174pred, 176, 180                ['$174pred']
label 176:
    $const176.0 = const(int, 0)              ['$const176.0']
    $178return_value.1 = cast(value=$const176.0) ['$178return_value.1', '$const176.0']
    return $178return_value.1                ['$178return_value.1']
label 180:
    jump 190                                 []
label 182:
    invert = const(bool, False)              ['invert']
    exp = b                                  ['b', 'exp']
    jump 190                                 []
label 190:
    $const192.1 = const(int, 65536)          ['$const192.1']
    $194compare_op.2 = exp > $const192.1     ['$194compare_op.2', '$const192.1', 'exp']
    bool200 = global(bool: <class 'bool'>)   ['bool200']
    $200pred = call bool200($194compare_op.2, func=bool200, args=(Var($194compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None) ['$194compare_op.2', '$200pred', 'bool200']
    branch $200pred, 202, 270                ['$200pred']
label 202:
    $202load_global.0 = global(math: <module 'math' (built-in)>) ['$202load_global.0']
    $214load_attr.2 = getattr(value=$202load_global.0, attr=pow) ['$202load_global.0', '$214load_attr.2']
    $226load_global.4 = global(float: <class 'float'>) ['$226load_global.4']
    $244call.7 = call $226load_global.4(b, func=$226load_global.4, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None) ['$226load_global.4', '$244call.7', 'b']
    $258call.8 = call $214load_attr.2(a.1, $244call.7, func=$214load_attr.2, args=[Var(a.1, numbers.py:217), Var($244call.7, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None) ['$214load_attr.2', '$244call.7', '$258call.8', 'a.1']
    $268return_value.9 = cast(value=$258call.8) ['$258call.8', '$268return_value.9']
    return $268return_value.9                ['$268return_value.9']
label 270:
    $const272.1 = const(int, 0)              ['$const272.1']
    $274compare_op.2 = exp != $const272.1    ['$274compare_op.2', '$const272.1', 'exp']
    bool280 = global(bool: <class 'bool'>)   ['bool280']
    $280pred = call bool280($274compare_op.2, func=bool280, args=(Var($274compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None) ['$274compare_op.2', '$280pred', 'bool280']
    branch $280pred, 282, 334                ['$280pred']
label 282:
    $const284.1 = const(int, 1)              ['$const284.1']
    $binop_and_286.2 = exp & $const284.1     ['$binop_and_286.2', '$const284.1', 'exp']
    bool290 = global(bool: <class 'bool'>)   ['bool290']
    $290pred = call bool290($binop_and_286.2, func=bool290, args=(Var($binop_and_286.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None) ['$290pred', '$binop_and_286.2', 'bool290']
    branch $290pred, 292, 302                ['$290pred']
label 292:
    $binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined) ['$binop_imul296.2', 'a.1', 'r']
    r = $binop_imul296.2                     ['$binop_imul296.2', 'r']
    jump 302                                 []
label 302:
    $const304.1 = const(int, 1)              ['$const304.1']
    $binop_irshift306.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const304.1, static_lhs=Undefined, static_rhs=Undefined) ['$binop_irshift306.2', '$const304.1', 'exp']
    exp = $binop_irshift306.2                ['$binop_irshift306.2', 'exp']
    $binop_imul316.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined) ['$binop_imul316.5', 'a.1', 'a.1']
    a.1 = $binop_imul316.5                   ['$binop_imul316.5', 'a.1']
    $const324.7 = const(int, 0)              ['$const324.7']
    $326compare_op.8 = exp != $const324.7    ['$326compare_op.8', '$const324.7', 'exp']
    bool332 = global(bool: <class 'bool'>)   ['bool332']
    $332pred = call bool332($326compare_op.8, func=bool332, args=(Var($326compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None) ['$326compare_op.8', '$332pred', 'bool332']
    branch $332pred, 282, 334                ['$332pred']
label 334:
    bool336 = global(bool: <class 'bool'>)   ['bool336']
    $336pred = call bool336(invert, func=bool336, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None) ['$336pred', 'bool336', 'invert']
    branch $336pred, 338, 348                ['$336pred']
label 338:
    $const338.0 = const(float, 1.0)          ['$const338.0']
    $binop_truediv342.2 = $const338.0 / r    ['$binop_truediv342.2', '$const338.0', 'r']
    $phi350.0 = $binop_truediv342.2          ['$binop_truediv342.2', '$phi350.0']
    jump 350                                 []
label 348:
    $phi350.0 = r                            ['$phi350.0', 'r']
    jump 350                                 []
label 350:
    $350return_value.1 = cast(value=$phi350.0) ['$350return_value.1', '$phi350.0']
    return $350return_value.1                ['$350return_value.1']

2024-07-15 06:11:46,855 DEBUG:==== SSA block analysis pass on 0
2024-07-15 06:11:46,855 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5FA7C90>
2024-07-15 06:11:46,855 DEBUG:on stmt: a = arg(0, name=a)
2024-07-15 06:11:46,855 DEBUG:on stmt: b = arg(1, name=b)
2024-07-15 06:11:46,855 DEBUG:on stmt: $8load_deref.1 = freevar(tp: float64)
2024-07-15 06:11:46,855 DEBUG:on stmt: $const10.2 = const(int, 1)
2024-07-15 06:11:46,855 DEBUG:on stmt: r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,855 DEBUG:on stmt: $30load_deref.5 = freevar(tp: float64)
2024-07-15 06:11:46,855 DEBUG:on stmt: a.1 = call $30load_deref.5(a, func=$30load_deref.5, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,855 DEBUG:on stmt: $const52.9 = const(int, 0)
2024-07-15 06:11:46,855 DEBUG:on stmt: $54compare_op.10 = b < $const52.9
2024-07-15 06:11:46,855 DEBUG:on stmt: bool60 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,855 DEBUG:on stmt: $60pred = call bool60($54compare_op.10, func=bool60, args=(Var($54compare_op.10, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,855 DEBUG:on stmt: branch $60pred, 62, 182
2024-07-15 06:11:46,855 DEBUG:==== SSA block analysis pass on 62
2024-07-15 06:11:46,855 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5FA7C90>
2024-07-15 06:11:46,855 DEBUG:on stmt: invert = const(bool, True)
2024-07-15 06:11:46,855 DEBUG:on stmt: exp = unary(fn=<built-in function neg>, value=b)
2024-07-15 06:11:46,855 DEBUG:on stmt: $const74.4 = const(int, 0)
2024-07-15 06:11:46,855 DEBUG:on stmt: $76compare_op.5 = exp < $const74.4
2024-07-15 06:11:46,855 DEBUG:on stmt: bool82 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,855 DEBUG:on stmt: $82pred = call bool82($76compare_op.5, func=bool82, args=(Var($76compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,855 DEBUG:on stmt: branch $82pred, 84, 98
2024-07-15 06:11:46,856 DEBUG:==== SSA block analysis pass on 84
2024-07-15 06:11:46,856 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5FA7C90>
2024-07-15 06:11:46,856 DEBUG:on stmt: $84load_global.0 = global(OverflowError: <class 'OverflowError'>)
2024-07-15 06:11:46,856 DEBUG:on stmt: <static> raise <class 'OverflowError'>
2024-07-15 06:11:46,856 DEBUG:==== SSA block analysis pass on 98
2024-07-15 06:11:46,856 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5FA7C90>
2024-07-15 06:11:46,856 DEBUG:on stmt: $98load_deref.0 = freevar(is_integer: False)
2024-07-15 06:11:46,856 DEBUG:on stmt: bool100 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,856 DEBUG:on stmt: $100pred = call bool100($98load_deref.0, func=bool100, args=(Var($98load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,856 DEBUG:on stmt: jump 180
2024-07-15 06:11:46,856 DEBUG:==== SSA block analysis pass on 180
2024-07-15 06:11:46,856 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5FA7C90>
2024-07-15 06:11:46,856 DEBUG:on stmt: jump 190
2024-07-15 06:11:46,856 DEBUG:==== SSA block analysis pass on 182
2024-07-15 06:11:46,856 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5FA7C90>
2024-07-15 06:11:46,856 DEBUG:on stmt: invert = const(bool, False)
2024-07-15 06:11:46,856 DEBUG:on stmt: exp = b
2024-07-15 06:11:46,856 DEBUG:on stmt: jump 190
2024-07-15 06:11:46,856 DEBUG:==== SSA block analysis pass on 190
2024-07-15 06:11:46,856 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5FA7C90>
2024-07-15 06:11:46,856 DEBUG:on stmt: $const192.1 = const(int, 65536)
2024-07-15 06:11:46,856 DEBUG:on stmt: $194compare_op.2 = exp > $const192.1
2024-07-15 06:11:46,856 DEBUG:on stmt: bool200 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,856 DEBUG:on stmt: $200pred = call bool200($194compare_op.2, func=bool200, args=(Var($194compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,856 DEBUG:on stmt: branch $200pred, 202, 270
2024-07-15 06:11:46,856 DEBUG:==== SSA block analysis pass on 202
2024-07-15 06:11:46,856 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5FA7C90>
2024-07-15 06:11:46,856 DEBUG:on stmt: $202load_global.0 = global(math: <module 'math' (built-in)>)
2024-07-15 06:11:46,856 DEBUG:on stmt: $214load_attr.2 = getattr(value=$202load_global.0, attr=pow)
2024-07-15 06:11:46,856 DEBUG:on stmt: $226load_global.4 = global(float: <class 'float'>)
2024-07-15 06:11:46,856 DEBUG:on stmt: $244call.7 = call $226load_global.4(b, func=$226load_global.4, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,856 DEBUG:on stmt: $258call.8 = call $214load_attr.2(a.1, $244call.7, func=$214load_attr.2, args=[Var(a.1, numbers.py:217), Var($244call.7, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,856 DEBUG:on stmt: $268return_value.9 = cast(value=$258call.8)
2024-07-15 06:11:46,856 DEBUG:on stmt: return $268return_value.9
2024-07-15 06:11:46,856 DEBUG:==== SSA block analysis pass on 270
2024-07-15 06:11:46,856 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5FA7C90>
2024-07-15 06:11:46,856 DEBUG:on stmt: $const272.1 = const(int, 0)
2024-07-15 06:11:46,856 DEBUG:on stmt: $274compare_op.2 = exp != $const272.1
2024-07-15 06:11:46,856 DEBUG:on stmt: bool280 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,856 DEBUG:on stmt: $280pred = call bool280($274compare_op.2, func=bool280, args=(Var($274compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,856 DEBUG:on stmt: branch $280pred, 282, 334
2024-07-15 06:11:46,856 DEBUG:==== SSA block analysis pass on 282
2024-07-15 06:11:46,856 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5FA7C90>
2024-07-15 06:11:46,857 DEBUG:on stmt: $const284.1 = const(int, 1)
2024-07-15 06:11:46,857 DEBUG:on stmt: $binop_and_286.2 = exp & $const284.1
2024-07-15 06:11:46,857 DEBUG:on stmt: bool290 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,857 DEBUG:on stmt: $290pred = call bool290($binop_and_286.2, func=bool290, args=(Var($binop_and_286.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,857 DEBUG:on stmt: branch $290pred, 292, 302
2024-07-15 06:11:46,857 DEBUG:==== SSA block analysis pass on 292
2024-07-15 06:11:46,857 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5FA7C90>
2024-07-15 06:11:46,857 DEBUG:on stmt: $binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:46,857 DEBUG:on stmt: r = $binop_imul296.2
2024-07-15 06:11:46,857 DEBUG:on stmt: jump 302
2024-07-15 06:11:46,857 DEBUG:==== SSA block analysis pass on 302
2024-07-15 06:11:46,857 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5FA7C90>
2024-07-15 06:11:46,857 DEBUG:on stmt: $const304.1 = const(int, 1)
2024-07-15 06:11:46,857 DEBUG:on stmt: $binop_irshift306.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const304.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:46,857 DEBUG:on stmt: exp = $binop_irshift306.2
2024-07-15 06:11:46,857 DEBUG:on stmt: $binop_imul316.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:46,857 DEBUG:on stmt: a.1 = $binop_imul316.5
2024-07-15 06:11:46,857 DEBUG:on stmt: $const324.7 = const(int, 0)
2024-07-15 06:11:46,857 DEBUG:on stmt: $326compare_op.8 = exp != $const324.7
2024-07-15 06:11:46,857 DEBUG:on stmt: bool332 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,857 DEBUG:on stmt: $332pred = call bool332($326compare_op.8, func=bool332, args=(Var($326compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,857 DEBUG:on stmt: branch $332pred, 282, 334
2024-07-15 06:11:46,857 DEBUG:==== SSA block analysis pass on 334
2024-07-15 06:11:46,857 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5FA7C90>
2024-07-15 06:11:46,857 DEBUG:on stmt: bool336 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,857 DEBUG:on stmt: $336pred = call bool336(invert, func=bool336, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,857 DEBUG:on stmt: branch $336pred, 338, 348
2024-07-15 06:11:46,857 DEBUG:==== SSA block analysis pass on 338
2024-07-15 06:11:46,857 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5FA7C90>
2024-07-15 06:11:46,858 DEBUG:on stmt: $const338.0 = const(float, 1.0)
2024-07-15 06:11:46,858 DEBUG:on stmt: $binop_truediv342.2 = $const338.0 / r
2024-07-15 06:11:46,858 DEBUG:on stmt: $phi350.0 = $binop_truediv342.2
2024-07-15 06:11:46,858 DEBUG:on stmt: jump 350
2024-07-15 06:11:46,858 DEBUG:==== SSA block analysis pass on 348
2024-07-15 06:11:46,858 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5FA7C90>
2024-07-15 06:11:46,858 DEBUG:on stmt: $phi350.0 = r
2024-07-15 06:11:46,858 DEBUG:on stmt: jump 350
2024-07-15 06:11:46,858 DEBUG:==== SSA block analysis pass on 350
2024-07-15 06:11:46,858 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B5FA7C90>
2024-07-15 06:11:46,858 DEBUG:on stmt: $350return_value.1 = cast(value=$phi350.0)
2024-07-15 06:11:46,858 DEBUG:on stmt: return $350return_value.1
2024-07-15 06:11:46,859 DEBUG:defs defaultdict(<class 'list'>,
            {'$100pred': [(<numba.core.ir.Assign object at 0x00000221B5EE3410>,
                           98)],
             '$194compare_op.2': [(<numba.core.ir.Assign object at 0x00000221B6030A90>,
                                   190)],
             '$200pred': [(<numba.core.ir.Assign object at 0x00000221B6030B10>,
                           190)],
             '$202load_global.0': [(<numba.core.ir.Assign object at 0x00000221B6030250>,
                                    202)],
             '$214load_attr.2': [(<numba.core.ir.Assign object at 0x00000221B6032B10>,
                                  202)],
             '$226load_global.4': [(<numba.core.ir.Assign object at 0x00000221B6031E50>,
                                    202)],
             '$244call.7': [(<numba.core.ir.Assign object at 0x00000221B5DDD990>,
                             202)],
             '$258call.8': [(<numba.core.ir.Assign object at 0x00000221B5C2AF90>,
                             202)],
             '$268return_value.9': [(<numba.core.ir.Assign object at 0x00000221B5C29C10>,
                                     202)],
             '$274compare_op.2': [(<numba.core.ir.Assign object at 0x00000221B5C28110>,
                                   270)],
             '$280pred': [(<numba.core.ir.Assign object at 0x00000221B5C2B4D0>,
                           270)],
             '$290pred': [(<numba.core.ir.Assign object at 0x00000221B5C2B850>,
                           282)],
             '$30load_deref.5': [(<numba.core.ir.Assign object at 0x00000221B6915650>,
                                  0)],
             '$326compare_op.8': [(<numba.core.ir.Assign object at 0x00000221B5C28E90>,
                                   302)],
             '$332pred': [(<numba.core.ir.Assign object at 0x00000221B5C2AAD0>,
                           302)],
             '$336pred': [(<numba.core.ir.Assign object at 0x00000221B69B3990>,
                           334)],
             '$350return_value.1': [(<numba.core.ir.Assign object at 0x00000221B69B0890>,
                                     350)],
             '$54compare_op.10': [(<numba.core.ir.Assign object at 0x00000221B5EE36D0>,
                                   0)],
             '$60pred': [(<numba.core.ir.Assign object at 0x00000221B5EE3D10>,
                          0)],
             '$76compare_op.5': [(<numba.core.ir.Assign object at 0x00000221B5EE0D10>,
                                  62)],
             '$82pred': [(<numba.core.ir.Assign object at 0x00000221B5EE0410>,
                          62)],
             '$84load_global.0': [(<numba.core.ir.Assign object at 0x00000221B5EE1690>,
                                   84)],
             '$8load_deref.1': [(<numba.core.ir.Assign object at 0x00000221B6917450>,
                                 0)],
             '$98load_deref.0': [(<numba.core.ir.Assign object at 0x00000221B5EE2B90>,
                                  98)],
             '$binop_and_286.2': [(<numba.core.ir.Assign object at 0x00000221B5C28410>,
                                   282)],
             '$binop_imul296.2': [(<numba.core.ir.Assign object at 0x00000221B5C2A910>,
                                   292)],
             '$binop_imul316.5': [(<numba.core.ir.Assign object at 0x00000221B5C28B90>,
                                   302)],
             '$binop_irshift306.2': [(<numba.core.ir.Assign object at 0x00000221B5C29310>,
                                      302)],
             '$binop_truediv342.2': [(<numba.core.ir.Assign object at 0x00000221B69B0B50>,
                                      338)],
             '$const10.2': [(<numba.core.ir.Assign object at 0x00000221B6916C10>,
                             0)],
             '$const192.1': [(<numba.core.ir.Assign object at 0x00000221B6031A90>,
                              190)],
             '$const272.1': [(<numba.core.ir.Assign object at 0x00000221B5C2A450>,
                              270)],
             '$const284.1': [(<numba.core.ir.Assign object at 0x00000221B5C292D0>,
                              282)],
             '$const304.1': [(<numba.core.ir.Assign object at 0x00000221B5C288D0>,
                              302)],
             '$const324.7': [(<numba.core.ir.Assign object at 0x00000221B5C28450>,
                              302)],
             '$const338.0': [(<numba.core.ir.Assign object at 0x00000221B69B1DD0>,
                              338)],
             '$const52.9': [(<numba.core.ir.Assign object at 0x00000221B5EE1210>,
                             0)],
             '$const74.4': [(<numba.core.ir.Assign object at 0x00000221B5EE1D50>,
                             62)],
             '$phi350.0': [(<numba.core.ir.Assign object at 0x00000221B69B1D90>,
                            338),
                           (<numba.core.ir.Assign object at 0x00000221B69B3C50>,
                            348)],
             'a': [(<numba.core.ir.Assign object at 0x00000221B6972590>, 0)],
             'a.1': [(<numba.core.ir.Assign object at 0x00000221B5EE2050>, 0),
                     (<numba.core.ir.Assign object at 0x00000221B5C28C50>,
                      302)],
             'b': [(<numba.core.ir.Assign object at 0x00000221B69176D0>, 0)],
             'bool100': [(<numba.core.ir.Assign object at 0x00000221B5EE1E90>,
                          98)],
             'bool200': [(<numba.core.ir.Assign object at 0x00000221B6031410>,
                          190)],
             'bool280': [(<numba.core.ir.Assign object at 0x00000221B5C28550>,
                          270)],
             'bool290': [(<numba.core.ir.Assign object at 0x00000221B5C28ED0>,
                          282)],
             'bool332': [(<numba.core.ir.Assign object at 0x00000221B5C29BD0>,
                          302)],
             'bool336': [(<numba.core.ir.Assign object at 0x00000221B5C28D90>,
                          334)],
             'bool60': [(<numba.core.ir.Assign object at 0x00000221B5EE3210>,
                         0)],
             'bool82': [(<numba.core.ir.Assign object at 0x00000221B5EE0550>,
                         62)],
             'exp': [(<numba.core.ir.Assign object at 0x00000221B5EE2C10>, 62),
                     (<numba.core.ir.Assign object at 0x00000221B6032CD0>, 182),
                     (<numba.core.ir.Assign object at 0x00000221B5C29110>,
                      302)],
             'invert': [(<numba.core.ir.Assign object at 0x00000221B5EE3D50>,
                         62),
                        (<numba.core.ir.Assign object at 0x00000221B6031D90>,
                         182)],
             'r': [(<numba.core.ir.Assign object at 0x00000221B6916BD0>, 0),
                   (<numba.core.ir.Assign object at 0x00000221B5C2B910>, 292)]})
2024-07-15 06:11:46,859 DEBUG:SSA violators <numba.core.utils.OrderedSet object at 0x00000221B6972C50>
2024-07-15 06:11:46,859 DEBUG:Fix SSA violator on var r
2024-07-15 06:11:46,859 DEBUG:==== SSA block rewrite pass on 0
2024-07-15 06:11:46,859 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6972690>
2024-07-15 06:11:46,859 DEBUG:on stmt: a = arg(0, name=a)
2024-07-15 06:11:46,859 DEBUG:on stmt: b = arg(1, name=b)
2024-07-15 06:11:46,859 DEBUG:on stmt: $8load_deref.1 = freevar(tp: float64)
2024-07-15 06:11:46,859 DEBUG:on stmt: $const10.2 = const(int, 1)
2024-07-15 06:11:46,859 DEBUG:on stmt: r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,859 DEBUG:first assign: r
2024-07-15 06:11:46,859 DEBUG:replaced with: r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,859 DEBUG:on stmt: $30load_deref.5 = freevar(tp: float64)
2024-07-15 06:11:46,859 DEBUG:on stmt: a.1 = call $30load_deref.5(a, func=$30load_deref.5, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,859 DEBUG:on stmt: $const52.9 = const(int, 0)
2024-07-15 06:11:46,859 DEBUG:on stmt: $54compare_op.10 = b < $const52.9
2024-07-15 06:11:46,859 DEBUG:on stmt: bool60 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,859 DEBUG:on stmt: $60pred = call bool60($54compare_op.10, func=bool60, args=(Var($54compare_op.10, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,859 DEBUG:on stmt: branch $60pred, 62, 182
2024-07-15 06:11:46,859 DEBUG:==== SSA block rewrite pass on 62
2024-07-15 06:11:46,859 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6972690>
2024-07-15 06:11:46,859 DEBUG:on stmt: invert = const(bool, True)
2024-07-15 06:11:46,860 DEBUG:on stmt: exp = unary(fn=<built-in function neg>, value=b)
2024-07-15 06:11:46,860 DEBUG:on stmt: $const74.4 = const(int, 0)
2024-07-15 06:11:46,860 DEBUG:on stmt: $76compare_op.5 = exp < $const74.4
2024-07-15 06:11:46,860 DEBUG:on stmt: bool82 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,860 DEBUG:on stmt: $82pred = call bool82($76compare_op.5, func=bool82, args=(Var($76compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,860 DEBUG:on stmt: branch $82pred, 84, 98
2024-07-15 06:11:46,860 DEBUG:==== SSA block rewrite pass on 84
2024-07-15 06:11:46,860 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6972690>
2024-07-15 06:11:46,860 DEBUG:on stmt: $84load_global.0 = global(OverflowError: <class 'OverflowError'>)
2024-07-15 06:11:46,860 DEBUG:on stmt: <static> raise <class 'OverflowError'>
2024-07-15 06:11:46,860 DEBUG:==== SSA block rewrite pass on 98
2024-07-15 06:11:46,860 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6972690>
2024-07-15 06:11:46,860 DEBUG:on stmt: $98load_deref.0 = freevar(is_integer: False)
2024-07-15 06:11:46,860 DEBUG:on stmt: bool100 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,860 DEBUG:on stmt: $100pred = call bool100($98load_deref.0, func=bool100, args=(Var($98load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,860 DEBUG:on stmt: jump 180
2024-07-15 06:11:46,860 DEBUG:==== SSA block rewrite pass on 180
2024-07-15 06:11:46,860 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6972690>
2024-07-15 06:11:46,860 DEBUG:on stmt: jump 190
2024-07-15 06:11:46,860 DEBUG:==== SSA block rewrite pass on 182
2024-07-15 06:11:46,860 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6972690>
2024-07-15 06:11:46,860 DEBUG:on stmt: invert = const(bool, False)
2024-07-15 06:11:46,860 DEBUG:on stmt: exp = b
2024-07-15 06:11:46,860 DEBUG:on stmt: jump 190
2024-07-15 06:11:46,860 DEBUG:==== SSA block rewrite pass on 190
2024-07-15 06:11:46,860 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6972690>
2024-07-15 06:11:46,860 DEBUG:on stmt: $const192.1 = const(int, 65536)
2024-07-15 06:11:46,860 DEBUG:on stmt: $194compare_op.2 = exp > $const192.1
2024-07-15 06:11:46,860 DEBUG:on stmt: bool200 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,860 DEBUG:on stmt: $200pred = call bool200($194compare_op.2, func=bool200, args=(Var($194compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,860 DEBUG:on stmt: branch $200pred, 202, 270
2024-07-15 06:11:46,860 DEBUG:==== SSA block rewrite pass on 202
2024-07-15 06:11:46,860 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6972690>
2024-07-15 06:11:46,860 DEBUG:on stmt: $202load_global.0 = global(math: <module 'math' (built-in)>)
2024-07-15 06:11:46,860 DEBUG:on stmt: $214load_attr.2 = getattr(value=$202load_global.0, attr=pow)
2024-07-15 06:11:46,860 DEBUG:on stmt: $226load_global.4 = global(float: <class 'float'>)
2024-07-15 06:11:46,861 DEBUG:on stmt: $244call.7 = call $226load_global.4(b, func=$226load_global.4, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,861 DEBUG:on stmt: $258call.8 = call $214load_attr.2(a.1, $244call.7, func=$214load_attr.2, args=[Var(a.1, numbers.py:217), Var($244call.7, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,861 DEBUG:on stmt: $268return_value.9 = cast(value=$258call.8)
2024-07-15 06:11:46,861 DEBUG:on stmt: return $268return_value.9
2024-07-15 06:11:46,861 DEBUG:==== SSA block rewrite pass on 270
2024-07-15 06:11:46,861 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6972690>
2024-07-15 06:11:46,861 DEBUG:on stmt: $const272.1 = const(int, 0)
2024-07-15 06:11:46,861 DEBUG:on stmt: $274compare_op.2 = exp != $const272.1
2024-07-15 06:11:46,861 DEBUG:on stmt: bool280 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,861 DEBUG:on stmt: $280pred = call bool280($274compare_op.2, func=bool280, args=(Var($274compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,861 DEBUG:on stmt: branch $280pred, 282, 334
2024-07-15 06:11:46,861 DEBUG:==== SSA block rewrite pass on 282
2024-07-15 06:11:46,861 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6972690>
2024-07-15 06:11:46,861 DEBUG:on stmt: $const284.1 = const(int, 1)
2024-07-15 06:11:46,861 DEBUG:on stmt: $binop_and_286.2 = exp & $const284.1
2024-07-15 06:11:46,861 DEBUG:on stmt: bool290 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,861 DEBUG:on stmt: $290pred = call bool290($binop_and_286.2, func=bool290, args=(Var($binop_and_286.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,861 DEBUG:on stmt: branch $290pred, 292, 302
2024-07-15 06:11:46,861 DEBUG:==== SSA block rewrite pass on 292
2024-07-15 06:11:46,861 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6972690>
2024-07-15 06:11:46,861 DEBUG:on stmt: $binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:46,861 DEBUG:on stmt: r = $binop_imul296.2
2024-07-15 06:11:46,861 DEBUG:replaced with: r.1 = $binop_imul296.2
2024-07-15 06:11:46,861 DEBUG:on stmt: jump 302
2024-07-15 06:11:46,861 DEBUG:==== SSA block rewrite pass on 302
2024-07-15 06:11:46,861 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6972690>
2024-07-15 06:11:46,861 DEBUG:on stmt: $const304.1 = const(int, 1)
2024-07-15 06:11:46,861 DEBUG:on stmt: $binop_irshift306.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const304.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:46,861 DEBUG:on stmt: exp = $binop_irshift306.2
2024-07-15 06:11:46,861 DEBUG:on stmt: $binop_imul316.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:46,861 DEBUG:on stmt: a.1 = $binop_imul316.5
2024-07-15 06:11:46,861 DEBUG:on stmt: $const324.7 = const(int, 0)
2024-07-15 06:11:46,861 DEBUG:on stmt: $326compare_op.8 = exp != $const324.7
2024-07-15 06:11:46,861 DEBUG:on stmt: bool332 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,861 DEBUG:on stmt: $332pred = call bool332($326compare_op.8, func=bool332, args=(Var($326compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,862 DEBUG:on stmt: branch $332pred, 282, 334
2024-07-15 06:11:46,862 DEBUG:==== SSA block rewrite pass on 334
2024-07-15 06:11:46,862 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6972690>
2024-07-15 06:11:46,862 DEBUG:on stmt: bool336 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,862 DEBUG:on stmt: $336pred = call bool336(invert, func=bool336, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,862 DEBUG:on stmt: branch $336pred, 338, 348
2024-07-15 06:11:46,862 DEBUG:==== SSA block rewrite pass on 338
2024-07-15 06:11:46,862 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6972690>
2024-07-15 06:11:46,862 DEBUG:on stmt: $const338.0 = const(float, 1.0)
2024-07-15 06:11:46,862 DEBUG:on stmt: $binop_truediv342.2 = $const338.0 / r
2024-07-15 06:11:46,862 DEBUG:on stmt: $phi350.0 = $binop_truediv342.2
2024-07-15 06:11:46,862 DEBUG:on stmt: jump 350
2024-07-15 06:11:46,862 DEBUG:==== SSA block rewrite pass on 348
2024-07-15 06:11:46,862 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6972690>
2024-07-15 06:11:46,862 DEBUG:on stmt: $phi350.0 = r
2024-07-15 06:11:46,862 DEBUG:on stmt: jump 350
2024-07-15 06:11:46,862 DEBUG:==== SSA block rewrite pass on 350
2024-07-15 06:11:46,862 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6972690>
2024-07-15 06:11:46,862 DEBUG:on stmt: $350return_value.1 = cast(value=$phi350.0)
2024-07-15 06:11:46,862 DEBUG:on stmt: return $350return_value.1
2024-07-15 06:11:46,862 DEBUG:Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x00000221B6971C50>],
             292: [<numba.core.ir.Assign object at 0x00000221B5EE0D90>]})
2024-07-15 06:11:46,862 DEBUG:==== SSA block rewrite pass on 0
2024-07-15 06:11:46,862 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5EE2B50>
2024-07-15 06:11:46,862 DEBUG:on stmt: a = arg(0, name=a)
2024-07-15 06:11:46,862 DEBUG:on stmt: b = arg(1, name=b)
2024-07-15 06:11:46,862 DEBUG:on stmt: $8load_deref.1 = freevar(tp: float64)
2024-07-15 06:11:46,862 DEBUG:on stmt: $const10.2 = const(int, 1)
2024-07-15 06:11:46,862 DEBUG:on stmt: r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,862 DEBUG:on stmt: $30load_deref.5 = freevar(tp: float64)
2024-07-15 06:11:46,862 DEBUG:on stmt: a.1 = call $30load_deref.5(a, func=$30load_deref.5, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,862 DEBUG:on stmt: $const52.9 = const(int, 0)
2024-07-15 06:11:46,862 DEBUG:on stmt: $54compare_op.10 = b < $const52.9
2024-07-15 06:11:46,863 DEBUG:on stmt: bool60 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,863 DEBUG:on stmt: $60pred = call bool60($54compare_op.10, func=bool60, args=(Var($54compare_op.10, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,863 DEBUG:on stmt: branch $60pred, 62, 182
2024-07-15 06:11:46,863 DEBUG:==== SSA block rewrite pass on 62
2024-07-15 06:11:46,863 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5EE2B50>
2024-07-15 06:11:46,863 DEBUG:on stmt: invert = const(bool, True)
2024-07-15 06:11:46,863 DEBUG:on stmt: exp = unary(fn=<built-in function neg>, value=b)
2024-07-15 06:11:46,863 DEBUG:on stmt: $const74.4 = const(int, 0)
2024-07-15 06:11:46,863 DEBUG:on stmt: $76compare_op.5 = exp < $const74.4
2024-07-15 06:11:46,863 DEBUG:on stmt: bool82 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,863 DEBUG:on stmt: $82pred = call bool82($76compare_op.5, func=bool82, args=(Var($76compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,863 DEBUG:on stmt: branch $82pred, 84, 98
2024-07-15 06:11:46,863 DEBUG:==== SSA block rewrite pass on 84
2024-07-15 06:11:46,863 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5EE2B50>
2024-07-15 06:11:46,863 DEBUG:on stmt: $84load_global.0 = global(OverflowError: <class 'OverflowError'>)
2024-07-15 06:11:46,863 DEBUG:on stmt: <static> raise <class 'OverflowError'>
2024-07-15 06:11:46,863 DEBUG:==== SSA block rewrite pass on 98
2024-07-15 06:11:46,863 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5EE2B50>
2024-07-15 06:11:46,863 DEBUG:on stmt: $98load_deref.0 = freevar(is_integer: False)
2024-07-15 06:11:46,863 DEBUG:on stmt: bool100 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,863 DEBUG:on stmt: $100pred = call bool100($98load_deref.0, func=bool100, args=(Var($98load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,863 DEBUG:on stmt: jump 180
2024-07-15 06:11:46,863 DEBUG:==== SSA block rewrite pass on 180
2024-07-15 06:11:46,863 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5EE2B50>
2024-07-15 06:11:46,863 DEBUG:on stmt: jump 190
2024-07-15 06:11:46,863 DEBUG:==== SSA block rewrite pass on 182
2024-07-15 06:11:46,863 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5EE2B50>
2024-07-15 06:11:46,863 DEBUG:on stmt: invert = const(bool, False)
2024-07-15 06:11:46,863 DEBUG:on stmt: exp = b
2024-07-15 06:11:46,863 DEBUG:on stmt: jump 190
2024-07-15 06:11:46,863 DEBUG:==== SSA block rewrite pass on 190
2024-07-15 06:11:46,863 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5EE2B50>
2024-07-15 06:11:46,863 DEBUG:on stmt: $const192.1 = const(int, 65536)
2024-07-15 06:11:46,863 DEBUG:on stmt: $194compare_op.2 = exp > $const192.1
2024-07-15 06:11:46,864 DEBUG:on stmt: bool200 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,864 DEBUG:on stmt: $200pred = call bool200($194compare_op.2, func=bool200, args=(Var($194compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,864 DEBUG:on stmt: branch $200pred, 202, 270
2024-07-15 06:11:46,864 DEBUG:==== SSA block rewrite pass on 202
2024-07-15 06:11:46,864 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5EE2B50>
2024-07-15 06:11:46,864 DEBUG:on stmt: $202load_global.0 = global(math: <module 'math' (built-in)>)
2024-07-15 06:11:46,864 DEBUG:on stmt: $214load_attr.2 = getattr(value=$202load_global.0, attr=pow)
2024-07-15 06:11:46,864 DEBUG:on stmt: $226load_global.4 = global(float: <class 'float'>)
2024-07-15 06:11:46,864 DEBUG:on stmt: $244call.7 = call $226load_global.4(b, func=$226load_global.4, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,864 DEBUG:on stmt: $258call.8 = call $214load_attr.2(a.1, $244call.7, func=$214load_attr.2, args=[Var(a.1, numbers.py:217), Var($244call.7, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,864 DEBUG:on stmt: $268return_value.9 = cast(value=$258call.8)
2024-07-15 06:11:46,864 DEBUG:on stmt: return $268return_value.9
2024-07-15 06:11:46,864 DEBUG:==== SSA block rewrite pass on 270
2024-07-15 06:11:46,864 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5EE2B50>
2024-07-15 06:11:46,864 DEBUG:on stmt: $const272.1 = const(int, 0)
2024-07-15 06:11:46,864 DEBUG:on stmt: $274compare_op.2 = exp != $const272.1
2024-07-15 06:11:46,864 DEBUG:on stmt: bool280 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,864 DEBUG:on stmt: $280pred = call bool280($274compare_op.2, func=bool280, args=(Var($274compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,864 DEBUG:on stmt: branch $280pred, 282, 334
2024-07-15 06:11:46,864 DEBUG:==== SSA block rewrite pass on 282
2024-07-15 06:11:46,864 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5EE2B50>
2024-07-15 06:11:46,864 DEBUG:on stmt: $const284.1 = const(int, 1)
2024-07-15 06:11:46,864 DEBUG:on stmt: $binop_and_286.2 = exp & $const284.1
2024-07-15 06:11:46,864 DEBUG:on stmt: bool290 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,865 DEBUG:on stmt: $290pred = call bool290($binop_and_286.2, func=bool290, args=(Var($binop_and_286.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,865 DEBUG:on stmt: branch $290pred, 292, 302
2024-07-15 06:11:46,865 DEBUG:==== SSA block rewrite pass on 292
2024-07-15 06:11:46,865 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5EE2B50>
2024-07-15 06:11:46,865 DEBUG:on stmt: $binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:46,865 DEBUG:find_def var='r' stmt=$binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:46,865 DEBUG:find_def_from_top label 292
2024-07-15 06:11:46,865 DEBUG:idom 282 from label 292
2024-07-15 06:11:46,865 DEBUG:find_def_from_bottom label 282
2024-07-15 06:11:46,865 DEBUG:find_def_from_top label 282
2024-07-15 06:11:46,865 DEBUG:insert phi node r.2 = phi(incoming_values=[], incoming_blocks=[]) at 282
2024-07-15 06:11:46,865 DEBUG:find_def_from_bottom label 302
2024-07-15 06:11:46,865 DEBUG:find_def_from_top label 302
2024-07-15 06:11:46,865 DEBUG:insert phi node r.3 = phi(incoming_values=[], incoming_blocks=[]) at 302
2024-07-15 06:11:46,865 DEBUG:find_def_from_bottom label 282
2024-07-15 06:11:46,865 DEBUG:incoming_def r.2 = phi(incoming_values=[], incoming_blocks=[])
2024-07-15 06:11:46,865 DEBUG:find_def_from_bottom label 292
2024-07-15 06:11:46,865 DEBUG:incoming_def r.1 = $binop_imul296.2
2024-07-15 06:11:46,865 DEBUG:incoming_def r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[282, 292])
2024-07-15 06:11:46,865 DEBUG:find_def_from_bottom label 270
2024-07-15 06:11:46,865 DEBUG:find_def_from_top label 270
2024-07-15 06:11:46,865 DEBUG:idom 190 from label 270
2024-07-15 06:11:46,865 DEBUG:find_def_from_bottom label 190
2024-07-15 06:11:46,865 DEBUG:find_def_from_top label 190
2024-07-15 06:11:46,865 DEBUG:idom 0 from label 190
2024-07-15 06:11:46,865 DEBUG:find_def_from_bottom label 0
2024-07-15 06:11:46,865 DEBUG:incoming_def r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,865 DEBUG:replaced with: $binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:46,865 DEBUG:on stmt: r.1 = $binop_imul296.2
2024-07-15 06:11:46,866 DEBUG:on stmt: jump 302
2024-07-15 06:11:46,866 DEBUG:==== SSA block rewrite pass on 302
2024-07-15 06:11:46,866 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5EE2B50>
2024-07-15 06:11:46,866 DEBUG:on stmt: $const304.1 = const(int, 1)
2024-07-15 06:11:46,866 DEBUG:on stmt: $binop_irshift306.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const304.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:46,866 DEBUG:on stmt: exp = $binop_irshift306.2
2024-07-15 06:11:46,866 DEBUG:on stmt: $binop_imul316.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:46,866 DEBUG:on stmt: a.1 = $binop_imul316.5
2024-07-15 06:11:46,866 DEBUG:on stmt: $const324.7 = const(int, 0)
2024-07-15 06:11:46,866 DEBUG:on stmt: $326compare_op.8 = exp != $const324.7
2024-07-15 06:11:46,866 DEBUG:on stmt: bool332 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,866 DEBUG:on stmt: $332pred = call bool332($326compare_op.8, func=bool332, args=(Var($326compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,866 DEBUG:on stmt: branch $332pred, 282, 334
2024-07-15 06:11:46,866 DEBUG:==== SSA block rewrite pass on 334
2024-07-15 06:11:46,866 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5EE2B50>
2024-07-15 06:11:46,866 DEBUG:on stmt: bool336 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,866 DEBUG:on stmt: $336pred = call bool336(invert, func=bool336, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,866 DEBUG:on stmt: branch $336pred, 338, 348
2024-07-15 06:11:46,866 DEBUG:==== SSA block rewrite pass on 338
2024-07-15 06:11:46,866 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5EE2B50>
2024-07-15 06:11:46,866 DEBUG:on stmt: $const338.0 = const(float, 1.0)
2024-07-15 06:11:46,866 DEBUG:on stmt: $binop_truediv342.2 = $const338.0 / r
2024-07-15 06:11:46,866 DEBUG:find_def var='r' stmt=$binop_truediv342.2 = $const338.0 / r
2024-07-15 06:11:46,866 DEBUG:find_def_from_top label 338
2024-07-15 06:11:46,866 DEBUG:idom 334 from label 338
2024-07-15 06:11:46,866 DEBUG:find_def_from_bottom label 334
2024-07-15 06:11:46,866 DEBUG:find_def_from_top label 334
2024-07-15 06:11:46,866 DEBUG:insert phi node r.4 = phi(incoming_values=[], incoming_blocks=[]) at 334
2024-07-15 06:11:46,866 DEBUG:find_def_from_bottom label 302
2024-07-15 06:11:46,866 DEBUG:incoming_def r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[282, 292])
2024-07-15 06:11:46,866 DEBUG:find_def_from_bottom label 270
2024-07-15 06:11:46,866 DEBUG:find_def_from_top label 270
2024-07-15 06:11:46,866 DEBUG:idom 190 from label 270
2024-07-15 06:11:46,866 DEBUG:find_def_from_bottom label 190
2024-07-15 06:11:46,866 DEBUG:find_def_from_top label 190
2024-07-15 06:11:46,866 DEBUG:idom 0 from label 190
2024-07-15 06:11:46,866 DEBUG:find_def_from_bottom label 0
2024-07-15 06:11:46,866 DEBUG:incoming_def r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,867 DEBUG:replaced with: $binop_truediv342.2 = $const338.0 / r.4
2024-07-15 06:11:46,867 DEBUG:on stmt: $phi350.0 = $binop_truediv342.2
2024-07-15 06:11:46,867 DEBUG:on stmt: jump 350
2024-07-15 06:11:46,867 DEBUG:==== SSA block rewrite pass on 348
2024-07-15 06:11:46,867 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5EE2B50>
2024-07-15 06:11:46,867 DEBUG:on stmt: $phi350.0 = r
2024-07-15 06:11:46,867 DEBUG:find_def var='r' stmt=$phi350.0 = r
2024-07-15 06:11:46,867 DEBUG:find_def_from_top label 348
2024-07-15 06:11:46,867 DEBUG:idom 334 from label 348
2024-07-15 06:11:46,867 DEBUG:find_def_from_bottom label 334
2024-07-15 06:11:46,867 DEBUG:replaced with: $phi350.0 = r.4
2024-07-15 06:11:46,867 DEBUG:on stmt: jump 350
2024-07-15 06:11:46,867 DEBUG:==== SSA block rewrite pass on 350
2024-07-15 06:11:46,867 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5EE2B50>
2024-07-15 06:11:46,867 DEBUG:on stmt: $350return_value.1 = cast(value=$phi350.0)
2024-07-15 06:11:46,867 DEBUG:on stmt: return $350return_value.1
2024-07-15 06:11:46,867 DEBUG:Fix SSA violator on var a.1
2024-07-15 06:11:46,867 DEBUG:==== SSA block rewrite pass on 0
2024-07-15 06:11:46,867 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5F72F90>
2024-07-15 06:11:46,867 DEBUG:on stmt: a = arg(0, name=a)
2024-07-15 06:11:46,867 DEBUG:on stmt: b = arg(1, name=b)
2024-07-15 06:11:46,867 DEBUG:on stmt: $8load_deref.1 = freevar(tp: float64)
2024-07-15 06:11:46,867 DEBUG:on stmt: $const10.2 = const(int, 1)
2024-07-15 06:11:46,867 DEBUG:on stmt: r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,867 DEBUG:on stmt: $30load_deref.5 = freevar(tp: float64)
2024-07-15 06:11:46,867 DEBUG:on stmt: a.1 = call $30load_deref.5(a, func=$30load_deref.5, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,867 DEBUG:first assign: a.1
2024-07-15 06:11:46,867 DEBUG:replaced with: a.1 = call $30load_deref.5(a, func=$30load_deref.5, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,867 DEBUG:on stmt: $const52.9 = const(int, 0)
2024-07-15 06:11:46,867 DEBUG:on stmt: $54compare_op.10 = b < $const52.9
2024-07-15 06:11:46,867 DEBUG:on stmt: bool60 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,867 DEBUG:on stmt: $60pred = call bool60($54compare_op.10, func=bool60, args=(Var($54compare_op.10, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,867 DEBUG:on stmt: branch $60pred, 62, 182
2024-07-15 06:11:46,867 DEBUG:==== SSA block rewrite pass on 62
2024-07-15 06:11:46,867 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5F72F90>
2024-07-15 06:11:46,867 DEBUG:on stmt: invert = const(bool, True)
2024-07-15 06:11:46,867 DEBUG:on stmt: exp = unary(fn=<built-in function neg>, value=b)
2024-07-15 06:11:46,867 DEBUG:on stmt: $const74.4 = const(int, 0)
2024-07-15 06:11:46,869 DEBUG:on stmt: $76compare_op.5 = exp < $const74.4
2024-07-15 06:11:46,869 DEBUG:on stmt: bool82 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,869 DEBUG:on stmt: $82pred = call bool82($76compare_op.5, func=bool82, args=(Var($76compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,869 DEBUG:on stmt: branch $82pred, 84, 98
2024-07-15 06:11:46,869 DEBUG:==== SSA block rewrite pass on 84
2024-07-15 06:11:46,869 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5F72F90>
2024-07-15 06:11:46,869 DEBUG:on stmt: $84load_global.0 = global(OverflowError: <class 'OverflowError'>)
2024-07-15 06:11:46,869 DEBUG:on stmt: <static> raise <class 'OverflowError'>
2024-07-15 06:11:46,869 DEBUG:==== SSA block rewrite pass on 98
2024-07-15 06:11:46,869 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5F72F90>
2024-07-15 06:11:46,869 DEBUG:on stmt: $98load_deref.0 = freevar(is_integer: False)
2024-07-15 06:11:46,869 DEBUG:on stmt: bool100 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,869 DEBUG:on stmt: $100pred = call bool100($98load_deref.0, func=bool100, args=(Var($98load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,869 DEBUG:on stmt: jump 180
2024-07-15 06:11:46,869 DEBUG:==== SSA block rewrite pass on 180
2024-07-15 06:11:46,869 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5F72F90>
2024-07-15 06:11:46,869 DEBUG:on stmt: jump 190
2024-07-15 06:11:46,869 DEBUG:==== SSA block rewrite pass on 182
2024-07-15 06:11:46,869 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5F72F90>
2024-07-15 06:11:46,869 DEBUG:on stmt: invert = const(bool, False)
2024-07-15 06:11:46,869 DEBUG:on stmt: exp = b
2024-07-15 06:11:46,869 DEBUG:on stmt: jump 190
2024-07-15 06:11:46,869 DEBUG:==== SSA block rewrite pass on 190
2024-07-15 06:11:46,869 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5F72F90>
2024-07-15 06:11:46,869 DEBUG:on stmt: $const192.1 = const(int, 65536)
2024-07-15 06:11:46,869 DEBUG:on stmt: $194compare_op.2 = exp > $const192.1
2024-07-15 06:11:46,869 DEBUG:on stmt: bool200 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,869 DEBUG:on stmt: $200pred = call bool200($194compare_op.2, func=bool200, args=(Var($194compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,869 DEBUG:on stmt: branch $200pred, 202, 270
2024-07-15 06:11:46,869 DEBUG:==== SSA block rewrite pass on 202
2024-07-15 06:11:46,869 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5F72F90>
2024-07-15 06:11:46,869 DEBUG:on stmt: $202load_global.0 = global(math: <module 'math' (built-in)>)
2024-07-15 06:11:46,869 DEBUG:on stmt: $214load_attr.2 = getattr(value=$202load_global.0, attr=pow)
2024-07-15 06:11:46,869 DEBUG:on stmt: $226load_global.4 = global(float: <class 'float'>)
2024-07-15 06:11:46,869 DEBUG:on stmt: $244call.7 = call $226load_global.4(b, func=$226load_global.4, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,869 DEBUG:on stmt: $258call.8 = call $214load_attr.2(a.1, $244call.7, func=$214load_attr.2, args=[Var(a.1, numbers.py:217), Var($244call.7, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,870 DEBUG:on stmt: $268return_value.9 = cast(value=$258call.8)
2024-07-15 06:11:46,870 DEBUG:on stmt: return $268return_value.9
2024-07-15 06:11:46,870 DEBUG:==== SSA block rewrite pass on 270
2024-07-15 06:11:46,870 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5F72F90>
2024-07-15 06:11:46,870 DEBUG:on stmt: $const272.1 = const(int, 0)
2024-07-15 06:11:46,870 DEBUG:on stmt: $274compare_op.2 = exp != $const272.1
2024-07-15 06:11:46,870 DEBUG:on stmt: bool280 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,870 DEBUG:on stmt: $280pred = call bool280($274compare_op.2, func=bool280, args=(Var($274compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,870 DEBUG:on stmt: branch $280pred, 282, 334
2024-07-15 06:11:46,870 DEBUG:==== SSA block rewrite pass on 282
2024-07-15 06:11:46,870 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5F72F90>
2024-07-15 06:11:46,870 DEBUG:on stmt: r.2 = phi(incoming_values=[Var(r.3, numbers.py:239), Var(r, numbers.py:216)], incoming_blocks=[302, 270])
2024-07-15 06:11:46,870 DEBUG:on stmt: $const284.1 = const(int, 1)
2024-07-15 06:11:46,870 DEBUG:on stmt: $binop_and_286.2 = exp & $const284.1
2024-07-15 06:11:46,870 DEBUG:on stmt: bool290 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,870 DEBUG:on stmt: $290pred = call bool290($binop_and_286.2, func=bool290, args=(Var($binop_and_286.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,870 DEBUG:on stmt: branch $290pred, 292, 302
2024-07-15 06:11:46,870 DEBUG:==== SSA block rewrite pass on 292
2024-07-15 06:11:46,870 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5F72F90>
2024-07-15 06:11:46,870 DEBUG:on stmt: $binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:46,870 DEBUG:on stmt: r.1 = $binop_imul296.2
2024-07-15 06:11:46,870 DEBUG:on stmt: jump 302
2024-07-15 06:11:46,870 DEBUG:==== SSA block rewrite pass on 302
2024-07-15 06:11:46,870 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5F72F90>
2024-07-15 06:11:46,870 DEBUG:on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[282, 292])
2024-07-15 06:11:46,870 DEBUG:on stmt: $const304.1 = const(int, 1)
2024-07-15 06:11:46,870 DEBUG:on stmt: $binop_irshift306.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const304.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:46,870 DEBUG:on stmt: exp = $binop_irshift306.2
2024-07-15 06:11:46,870 DEBUG:on stmt: $binop_imul316.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:46,870 DEBUG:on stmt: a.1 = $binop_imul316.5
2024-07-15 06:11:46,870 DEBUG:replaced with: a.1.1 = $binop_imul316.5
2024-07-15 06:11:46,870 DEBUG:on stmt: $const324.7 = const(int, 0)
2024-07-15 06:11:46,870 DEBUG:on stmt: $326compare_op.8 = exp != $const324.7
2024-07-15 06:11:46,870 DEBUG:on stmt: bool332 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,870 DEBUG:on stmt: $332pred = call bool332($326compare_op.8, func=bool332, args=(Var($326compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,870 DEBUG:on stmt: branch $332pred, 282, 334
2024-07-15 06:11:46,871 DEBUG:==== SSA block rewrite pass on 334
2024-07-15 06:11:46,871 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5F72F90>
2024-07-15 06:11:46,871 DEBUG:on stmt: r.4 = phi(incoming_values=[Var(r.3, numbers.py:239), Var(r, numbers.py:216)], incoming_blocks=[302, 270])
2024-07-15 06:11:46,871 DEBUG:on stmt: bool336 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,871 DEBUG:on stmt: $336pred = call bool336(invert, func=bool336, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,871 DEBUG:on stmt: branch $336pred, 338, 348
2024-07-15 06:11:46,871 DEBUG:==== SSA block rewrite pass on 338
2024-07-15 06:11:46,871 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5F72F90>
2024-07-15 06:11:46,871 DEBUG:on stmt: $const338.0 = const(float, 1.0)
2024-07-15 06:11:46,871 DEBUG:on stmt: $binop_truediv342.2 = $const338.0 / r.4
2024-07-15 06:11:46,871 DEBUG:on stmt: $phi350.0 = $binop_truediv342.2
2024-07-15 06:11:46,871 DEBUG:on stmt: jump 350
2024-07-15 06:11:46,871 DEBUG:==== SSA block rewrite pass on 348
2024-07-15 06:11:46,871 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5F72F90>
2024-07-15 06:11:46,871 DEBUG:on stmt: $phi350.0 = r.4
2024-07-15 06:11:46,871 DEBUG:on stmt: jump 350
2024-07-15 06:11:46,871 DEBUG:==== SSA block rewrite pass on 350
2024-07-15 06:11:46,871 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5F72F90>
2024-07-15 06:11:46,871 DEBUG:on stmt: $350return_value.1 = cast(value=$phi350.0)
2024-07-15 06:11:46,871 DEBUG:on stmt: return $350return_value.1
2024-07-15 06:11:46,871 DEBUG:Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x00000221B600FD90>],
             302: [<numba.core.ir.Assign object at 0x00000221B6914350>]})
2024-07-15 06:11:46,871 DEBUG:==== SSA block rewrite pass on 0
2024-07-15 06:11:46,871 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B6877E50>
2024-07-15 06:11:46,871 DEBUG:on stmt: a = arg(0, name=a)
2024-07-15 06:11:46,871 DEBUG:on stmt: b = arg(1, name=b)
2024-07-15 06:11:46,871 DEBUG:on stmt: $8load_deref.1 = freevar(tp: float64)
2024-07-15 06:11:46,871 DEBUG:on stmt: $const10.2 = const(int, 1)
2024-07-15 06:11:46,871 DEBUG:on stmt: r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,871 DEBUG:on stmt: $30load_deref.5 = freevar(tp: float64)
2024-07-15 06:11:46,871 DEBUG:on stmt: a.1 = call $30load_deref.5(a, func=$30load_deref.5, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,871 DEBUG:on stmt: $const52.9 = const(int, 0)
2024-07-15 06:11:46,871 DEBUG:on stmt: $54compare_op.10 = b < $const52.9
2024-07-15 06:11:46,871 DEBUG:on stmt: bool60 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,871 DEBUG:on stmt: $60pred = call bool60($54compare_op.10, func=bool60, args=(Var($54compare_op.10, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,871 DEBUG:on stmt: branch $60pred, 62, 182
2024-07-15 06:11:46,872 DEBUG:==== SSA block rewrite pass on 62
2024-07-15 06:11:46,872 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B6877E50>
2024-07-15 06:11:46,872 DEBUG:on stmt: invert = const(bool, True)
2024-07-15 06:11:46,872 DEBUG:on stmt: exp = unary(fn=<built-in function neg>, value=b)
2024-07-15 06:11:46,872 DEBUG:on stmt: $const74.4 = const(int, 0)
2024-07-15 06:11:46,872 DEBUG:on stmt: $76compare_op.5 = exp < $const74.4
2024-07-15 06:11:46,872 DEBUG:on stmt: bool82 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,872 DEBUG:on stmt: $82pred = call bool82($76compare_op.5, func=bool82, args=(Var($76compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,872 DEBUG:on stmt: branch $82pred, 84, 98
2024-07-15 06:11:46,872 DEBUG:==== SSA block rewrite pass on 84
2024-07-15 06:11:46,872 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B6877E50>
2024-07-15 06:11:46,872 DEBUG:on stmt: $84load_global.0 = global(OverflowError: <class 'OverflowError'>)
2024-07-15 06:11:46,872 DEBUG:on stmt: <static> raise <class 'OverflowError'>
2024-07-15 06:11:46,872 DEBUG:==== SSA block rewrite pass on 98
2024-07-15 06:11:46,872 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B6877E50>
2024-07-15 06:11:46,872 DEBUG:on stmt: $98load_deref.0 = freevar(is_integer: False)
2024-07-15 06:11:46,872 DEBUG:on stmt: bool100 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,872 DEBUG:on stmt: $100pred = call bool100($98load_deref.0, func=bool100, args=(Var($98load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,872 DEBUG:on stmt: jump 180
2024-07-15 06:11:46,872 DEBUG:==== SSA block rewrite pass on 180
2024-07-15 06:11:46,872 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B6877E50>
2024-07-15 06:11:46,872 DEBUG:on stmt: jump 190
2024-07-15 06:11:46,872 DEBUG:==== SSA block rewrite pass on 182
2024-07-15 06:11:46,872 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B6877E50>
2024-07-15 06:11:46,872 DEBUG:on stmt: invert = const(bool, False)
2024-07-15 06:11:46,872 DEBUG:on stmt: exp = b
2024-07-15 06:11:46,872 DEBUG:on stmt: jump 190
2024-07-15 06:11:46,872 DEBUG:==== SSA block rewrite pass on 190
2024-07-15 06:11:46,872 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B6877E50>
2024-07-15 06:11:46,872 DEBUG:on stmt: $const192.1 = const(int, 65536)
2024-07-15 06:11:46,872 DEBUG:on stmt: $194compare_op.2 = exp > $const192.1
2024-07-15 06:11:46,872 DEBUG:on stmt: bool200 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,872 DEBUG:on stmt: $200pred = call bool200($194compare_op.2, func=bool200, args=(Var($194compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,872 DEBUG:on stmt: branch $200pred, 202, 270
2024-07-15 06:11:46,872 DEBUG:==== SSA block rewrite pass on 202
2024-07-15 06:11:46,872 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B6877E50>
2024-07-15 06:11:46,873 DEBUG:on stmt: $202load_global.0 = global(math: <module 'math' (built-in)>)
2024-07-15 06:11:46,873 DEBUG:on stmt: $214load_attr.2 = getattr(value=$202load_global.0, attr=pow)
2024-07-15 06:11:46,873 DEBUG:on stmt: $226load_global.4 = global(float: <class 'float'>)
2024-07-15 06:11:46,873 DEBUG:on stmt: $244call.7 = call $226load_global.4(b, func=$226load_global.4, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,873 DEBUG:on stmt: $258call.8 = call $214load_attr.2(a.1, $244call.7, func=$214load_attr.2, args=[Var(a.1, numbers.py:217), Var($244call.7, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,873 DEBUG:find_def var='a.1' stmt=$258call.8 = call $214load_attr.2(a.1, $244call.7, func=$214load_attr.2, args=[Var(a.1, numbers.py:217), Var($244call.7, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,873 DEBUG:find_def_from_top label 202
2024-07-15 06:11:46,873 DEBUG:idom 190 from label 202
2024-07-15 06:11:46,873 DEBUG:find_def_from_bottom label 190
2024-07-15 06:11:46,873 DEBUG:find_def_from_top label 190
2024-07-15 06:11:46,873 DEBUG:idom 0 from label 190
2024-07-15 06:11:46,873 DEBUG:find_def_from_bottom label 0
2024-07-15 06:11:46,873 DEBUG:on stmt: $268return_value.9 = cast(value=$258call.8)
2024-07-15 06:11:46,873 DEBUG:on stmt: return $268return_value.9
2024-07-15 06:11:46,873 DEBUG:==== SSA block rewrite pass on 270
2024-07-15 06:11:46,873 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B6877E50>
2024-07-15 06:11:46,873 DEBUG:on stmt: $const272.1 = const(int, 0)
2024-07-15 06:11:46,873 DEBUG:on stmt: $274compare_op.2 = exp != $const272.1
2024-07-15 06:11:46,873 DEBUG:on stmt: bool280 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,873 DEBUG:on stmt: $280pred = call bool280($274compare_op.2, func=bool280, args=(Var($274compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,873 DEBUG:on stmt: branch $280pred, 282, 334
2024-07-15 06:11:46,873 DEBUG:==== SSA block rewrite pass on 282
2024-07-15 06:11:46,873 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B6877E50>
2024-07-15 06:11:46,873 DEBUG:on stmt: r.2 = phi(incoming_values=[Var(r.3, numbers.py:239), Var(r, numbers.py:216)], incoming_blocks=[302, 270])
2024-07-15 06:11:46,873 DEBUG:on stmt: $const284.1 = const(int, 1)
2024-07-15 06:11:46,873 DEBUG:on stmt: $binop_and_286.2 = exp & $const284.1
2024-07-15 06:11:46,873 DEBUG:on stmt: bool290 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,873 DEBUG:on stmt: $290pred = call bool290($binop_and_286.2, func=bool290, args=(Var($binop_and_286.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,873 DEBUG:on stmt: branch $290pred, 292, 302
2024-07-15 06:11:46,873 DEBUG:==== SSA block rewrite pass on 292
2024-07-15 06:11:46,873 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B6877E50>
2024-07-15 06:11:46,873 DEBUG:on stmt: $binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:46,873 DEBUG:find_def var='a.1' stmt=$binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:46,873 DEBUG:find_def_from_top label 292
2024-07-15 06:11:46,874 DEBUG:idom 282 from label 292
2024-07-15 06:11:46,874 DEBUG:find_def_from_bottom label 282
2024-07-15 06:11:46,874 DEBUG:find_def_from_top label 282
2024-07-15 06:11:46,874 DEBUG:insert phi node a.1.2 = phi(incoming_values=[], incoming_blocks=[]) at 282
2024-07-15 06:11:46,874 DEBUG:find_def_from_bottom label 302
2024-07-15 06:11:46,874 DEBUG:incoming_def a.1.1 = $binop_imul316.5
2024-07-15 06:11:46,874 DEBUG:find_def_from_bottom label 270
2024-07-15 06:11:46,874 DEBUG:find_def_from_top label 270
2024-07-15 06:11:46,874 DEBUG:idom 190 from label 270
2024-07-15 06:11:46,874 DEBUG:find_def_from_bottom label 190
2024-07-15 06:11:46,874 DEBUG:find_def_from_top label 190
2024-07-15 06:11:46,874 DEBUG:idom 0 from label 190
2024-07-15 06:11:46,874 DEBUG:find_def_from_bottom label 0
2024-07-15 06:11:46,874 DEBUG:incoming_def a.1 = call $30load_deref.5(a, func=$30load_deref.5, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,874 DEBUG:replaced with: $binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:46,874 DEBUG:on stmt: r.1 = $binop_imul296.2
2024-07-15 06:11:46,874 DEBUG:on stmt: jump 302
2024-07-15 06:11:46,874 DEBUG:==== SSA block rewrite pass on 302
2024-07-15 06:11:46,874 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B6877E50>
2024-07-15 06:11:46,874 DEBUG:on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[282, 292])
2024-07-15 06:11:46,874 DEBUG:on stmt: $const304.1 = const(int, 1)
2024-07-15 06:11:46,874 DEBUG:on stmt: $binop_irshift306.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const304.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:46,874 DEBUG:on stmt: exp = $binop_irshift306.2
2024-07-15 06:11:46,874 DEBUG:on stmt: $binop_imul316.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:46,874 DEBUG:find_def var='a.1' stmt=$binop_imul316.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:46,874 DEBUG:find_def_from_top label 302
2024-07-15 06:11:46,874 DEBUG:idom 282 from label 302
2024-07-15 06:11:46,874 DEBUG:find_def_from_bottom label 282
2024-07-15 06:11:46,874 DEBUG:replaced with: $binop_imul316.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:46,874 DEBUG:on stmt: a.1.1 = $binop_imul316.5
2024-07-15 06:11:46,874 DEBUG:on stmt: $const324.7 = const(int, 0)
2024-07-15 06:11:46,874 DEBUG:on stmt: $326compare_op.8 = exp != $const324.7
2024-07-15 06:11:46,874 DEBUG:on stmt: bool332 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,874 DEBUG:on stmt: $332pred = call bool332($326compare_op.8, func=bool332, args=(Var($326compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,875 DEBUG:on stmt: branch $332pred, 282, 334
2024-07-15 06:11:46,875 DEBUG:==== SSA block rewrite pass on 334
2024-07-15 06:11:46,875 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B6877E50>
2024-07-15 06:11:46,875 DEBUG:on stmt: r.4 = phi(incoming_values=[Var(r.3, numbers.py:239), Var(r, numbers.py:216)], incoming_blocks=[302, 270])
2024-07-15 06:11:46,875 DEBUG:on stmt: bool336 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,875 DEBUG:on stmt: $336pred = call bool336(invert, func=bool336, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,875 DEBUG:on stmt: branch $336pred, 338, 348
2024-07-15 06:11:46,875 DEBUG:==== SSA block rewrite pass on 338
2024-07-15 06:11:46,875 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B6877E50>
2024-07-15 06:11:46,875 DEBUG:on stmt: $const338.0 = const(float, 1.0)
2024-07-15 06:11:46,875 DEBUG:on stmt: $binop_truediv342.2 = $const338.0 / r.4
2024-07-15 06:11:46,875 DEBUG:on stmt: $phi350.0 = $binop_truediv342.2
2024-07-15 06:11:46,875 DEBUG:on stmt: jump 350
2024-07-15 06:11:46,875 DEBUG:==== SSA block rewrite pass on 348
2024-07-15 06:11:46,875 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B6877E50>
2024-07-15 06:11:46,875 DEBUG:on stmt: $phi350.0 = r.4
2024-07-15 06:11:46,875 DEBUG:on stmt: jump 350
2024-07-15 06:11:46,875 DEBUG:==== SSA block rewrite pass on 350
2024-07-15 06:11:46,875 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B6877E50>
2024-07-15 06:11:46,875 DEBUG:on stmt: $350return_value.1 = cast(value=$phi350.0)
2024-07-15 06:11:46,875 DEBUG:on stmt: return $350return_value.1
2024-07-15 06:11:46,875 DEBUG:Fix SSA violator on var invert
2024-07-15 06:11:46,875 DEBUG:==== SSA block rewrite pass on 0
2024-07-15 06:11:46,875 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5EE31D0>
2024-07-15 06:11:46,875 DEBUG:on stmt: a = arg(0, name=a)
2024-07-15 06:11:46,875 DEBUG:on stmt: b = arg(1, name=b)
2024-07-15 06:11:46,875 DEBUG:on stmt: $8load_deref.1 = freevar(tp: float64)
2024-07-15 06:11:46,875 DEBUG:on stmt: $const10.2 = const(int, 1)
2024-07-15 06:11:46,875 DEBUG:on stmt: r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,875 DEBUG:on stmt: $30load_deref.5 = freevar(tp: float64)
2024-07-15 06:11:46,875 DEBUG:on stmt: a.1 = call $30load_deref.5(a, func=$30load_deref.5, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,875 DEBUG:on stmt: $const52.9 = const(int, 0)
2024-07-15 06:11:46,875 DEBUG:on stmt: $54compare_op.10 = b < $const52.9
2024-07-15 06:11:46,876 DEBUG:on stmt: bool60 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,876 DEBUG:on stmt: $60pred = call bool60($54compare_op.10, func=bool60, args=(Var($54compare_op.10, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,876 DEBUG:on stmt: branch $60pred, 62, 182
2024-07-15 06:11:46,876 DEBUG:==== SSA block rewrite pass on 62
2024-07-15 06:11:46,876 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5EE31D0>
2024-07-15 06:11:46,876 DEBUG:on stmt: invert = const(bool, True)
2024-07-15 06:11:46,876 DEBUG:first assign: invert
2024-07-15 06:11:46,876 DEBUG:replaced with: invert = const(bool, True)
2024-07-15 06:11:46,876 DEBUG:on stmt: exp = unary(fn=<built-in function neg>, value=b)
2024-07-15 06:11:46,876 DEBUG:on stmt: $const74.4 = const(int, 0)
2024-07-15 06:11:46,876 DEBUG:on stmt: $76compare_op.5 = exp < $const74.4
2024-07-15 06:11:46,876 DEBUG:on stmt: bool82 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,876 DEBUG:on stmt: $82pred = call bool82($76compare_op.5, func=bool82, args=(Var($76compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,876 DEBUG:on stmt: branch $82pred, 84, 98
2024-07-15 06:11:46,876 DEBUG:==== SSA block rewrite pass on 84
2024-07-15 06:11:46,876 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5EE31D0>
2024-07-15 06:11:46,876 DEBUG:on stmt: $84load_global.0 = global(OverflowError: <class 'OverflowError'>)
2024-07-15 06:11:46,876 DEBUG:on stmt: <static> raise <class 'OverflowError'>
2024-07-15 06:11:46,876 DEBUG:==== SSA block rewrite pass on 98
2024-07-15 06:11:46,876 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5EE31D0>
2024-07-15 06:11:46,876 DEBUG:on stmt: $98load_deref.0 = freevar(is_integer: False)
2024-07-15 06:11:46,876 DEBUG:on stmt: bool100 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,876 DEBUG:on stmt: $100pred = call bool100($98load_deref.0, func=bool100, args=(Var($98load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,876 DEBUG:on stmt: jump 180
2024-07-15 06:11:46,876 DEBUG:==== SSA block rewrite pass on 180
2024-07-15 06:11:46,876 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5EE31D0>
2024-07-15 06:11:46,876 DEBUG:on stmt: jump 190
2024-07-15 06:11:46,876 DEBUG:==== SSA block rewrite pass on 182
2024-07-15 06:11:46,876 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5EE31D0>
2024-07-15 06:11:46,876 DEBUG:on stmt: invert = const(bool, False)
2024-07-15 06:11:46,876 DEBUG:replaced with: invert.1 = const(bool, False)
2024-07-15 06:11:46,876 DEBUG:on stmt: exp = b
2024-07-15 06:11:46,876 DEBUG:on stmt: jump 190
2024-07-15 06:11:46,876 DEBUG:==== SSA block rewrite pass on 190
2024-07-15 06:11:46,876 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5EE31D0>
2024-07-15 06:11:46,876 DEBUG:on stmt: $const192.1 = const(int, 65536)
2024-07-15 06:11:46,876 DEBUG:on stmt: $194compare_op.2 = exp > $const192.1
2024-07-15 06:11:46,876 DEBUG:on stmt: bool200 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,876 DEBUG:on stmt: $200pred = call bool200($194compare_op.2, func=bool200, args=(Var($194compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,876 DEBUG:on stmt: branch $200pred, 202, 270
2024-07-15 06:11:46,876 DEBUG:==== SSA block rewrite pass on 202
2024-07-15 06:11:46,876 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5EE31D0>
2024-07-15 06:11:46,876 DEBUG:on stmt: $202load_global.0 = global(math: <module 'math' (built-in)>)
2024-07-15 06:11:46,877 DEBUG:on stmt: $214load_attr.2 = getattr(value=$202load_global.0, attr=pow)
2024-07-15 06:11:46,877 DEBUG:on stmt: $226load_global.4 = global(float: <class 'float'>)
2024-07-15 06:11:46,877 DEBUG:on stmt: $244call.7 = call $226load_global.4(b, func=$226load_global.4, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,877 DEBUG:on stmt: $258call.8 = call $214load_attr.2(a.1, $244call.7, func=$214load_attr.2, args=[Var(a.1, numbers.py:217), Var($244call.7, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,877 DEBUG:on stmt: $268return_value.9 = cast(value=$258call.8)
2024-07-15 06:11:46,877 DEBUG:on stmt: return $268return_value.9
2024-07-15 06:11:46,877 DEBUG:==== SSA block rewrite pass on 270
2024-07-15 06:11:46,877 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5EE31D0>
2024-07-15 06:11:46,877 DEBUG:on stmt: $const272.1 = const(int, 0)
2024-07-15 06:11:46,877 DEBUG:on stmt: $274compare_op.2 = exp != $const272.1
2024-07-15 06:11:46,877 DEBUG:on stmt: bool280 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,877 DEBUG:on stmt: $280pred = call bool280($274compare_op.2, func=bool280, args=(Var($274compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,877 DEBUG:on stmt: branch $280pred, 282, 334
2024-07-15 06:11:46,877 DEBUG:==== SSA block rewrite pass on 282
2024-07-15 06:11:46,877 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5EE31D0>
2024-07-15 06:11:46,877 DEBUG:on stmt: a.1.2 = phi(incoming_values=[Var(a.1.1, numbers.py:241), Var(a.1, numbers.py:217)], incoming_blocks=[302, 270])
2024-07-15 06:11:46,877 DEBUG:on stmt: r.2 = phi(incoming_values=[Var(r.3, numbers.py:239), Var(r, numbers.py:216)], incoming_blocks=[302, 270])
2024-07-15 06:11:46,877 DEBUG:on stmt: $const284.1 = const(int, 1)
2024-07-15 06:11:46,877 DEBUG:on stmt: $binop_and_286.2 = exp & $const284.1
2024-07-15 06:11:46,877 DEBUG:on stmt: bool290 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,877 DEBUG:on stmt: $290pred = call bool290($binop_and_286.2, func=bool290, args=(Var($binop_and_286.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,877 DEBUG:on stmt: branch $290pred, 292, 302
2024-07-15 06:11:46,877 DEBUG:==== SSA block rewrite pass on 292
2024-07-15 06:11:46,877 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5EE31D0>
2024-07-15 06:11:46,877 DEBUG:on stmt: $binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:46,877 DEBUG:on stmt: r.1 = $binop_imul296.2
2024-07-15 06:11:46,877 DEBUG:on stmt: jump 302
2024-07-15 06:11:46,877 DEBUG:==== SSA block rewrite pass on 302
2024-07-15 06:11:46,877 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5EE31D0>
2024-07-15 06:11:46,877 DEBUG:on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[282, 292])
2024-07-15 06:11:46,877 DEBUG:on stmt: $const304.1 = const(int, 1)
2024-07-15 06:11:46,877 DEBUG:on stmt: $binop_irshift306.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const304.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:46,877 DEBUG:on stmt: exp = $binop_irshift306.2
2024-07-15 06:11:46,877 DEBUG:on stmt: $binop_imul316.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:46,878 DEBUG:on stmt: a.1.1 = $binop_imul316.5
2024-07-15 06:11:46,878 DEBUG:on stmt: $const324.7 = const(int, 0)
2024-07-15 06:11:46,878 DEBUG:on stmt: $326compare_op.8 = exp != $const324.7
2024-07-15 06:11:46,878 DEBUG:on stmt: bool332 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,878 DEBUG:on stmt: $332pred = call bool332($326compare_op.8, func=bool332, args=(Var($326compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,878 DEBUG:on stmt: branch $332pred, 282, 334
2024-07-15 06:11:46,878 DEBUG:==== SSA block rewrite pass on 334
2024-07-15 06:11:46,878 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5EE31D0>
2024-07-15 06:11:46,878 DEBUG:on stmt: r.4 = phi(incoming_values=[Var(r.3, numbers.py:239), Var(r, numbers.py:216)], incoming_blocks=[302, 270])
2024-07-15 06:11:46,878 DEBUG:on stmt: bool336 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,878 DEBUG:on stmt: $336pred = call bool336(invert, func=bool336, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,878 DEBUG:on stmt: branch $336pred, 338, 348
2024-07-15 06:11:46,878 DEBUG:==== SSA block rewrite pass on 338
2024-07-15 06:11:46,878 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5EE31D0>
2024-07-15 06:11:46,878 DEBUG:on stmt: $const338.0 = const(float, 1.0)
2024-07-15 06:11:46,878 DEBUG:on stmt: $binop_truediv342.2 = $const338.0 / r.4
2024-07-15 06:11:46,878 DEBUG:on stmt: $phi350.0 = $binop_truediv342.2
2024-07-15 06:11:46,878 DEBUG:on stmt: jump 350
2024-07-15 06:11:46,878 DEBUG:==== SSA block rewrite pass on 348
2024-07-15 06:11:46,878 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5EE31D0>
2024-07-15 06:11:46,878 DEBUG:on stmt: $phi350.0 = r.4
2024-07-15 06:11:46,878 DEBUG:on stmt: jump 350
2024-07-15 06:11:46,878 DEBUG:==== SSA block rewrite pass on 350
2024-07-15 06:11:46,878 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B5EE31D0>
2024-07-15 06:11:46,878 DEBUG:on stmt: $350return_value.1 = cast(value=$phi350.0)
2024-07-15 06:11:46,878 DEBUG:on stmt: return $350return_value.1
2024-07-15 06:11:46,878 DEBUG:Replaced assignments: defaultdict(<class 'list'>,
            {62: [<numba.core.ir.Assign object at 0x00000221B5EE38D0>],
             182: [<numba.core.ir.Assign object at 0x00000221B6972210>]})
2024-07-15 06:11:46,878 DEBUG:==== SSA block rewrite pass on 0
2024-07-15 06:11:46,878 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5C2A950>
2024-07-15 06:11:46,878 DEBUG:on stmt: a = arg(0, name=a)
2024-07-15 06:11:46,878 DEBUG:on stmt: b = arg(1, name=b)
2024-07-15 06:11:46,878 DEBUG:on stmt: $8load_deref.1 = freevar(tp: float64)
2024-07-15 06:11:46,878 DEBUG:on stmt: $const10.2 = const(int, 1)
2024-07-15 06:11:46,878 DEBUG:on stmt: r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,879 DEBUG:on stmt: $30load_deref.5 = freevar(tp: float64)
2024-07-15 06:11:46,879 DEBUG:on stmt: a.1 = call $30load_deref.5(a, func=$30load_deref.5, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,879 DEBUG:on stmt: $const52.9 = const(int, 0)
2024-07-15 06:11:46,879 DEBUG:on stmt: $54compare_op.10 = b < $const52.9
2024-07-15 06:11:46,879 DEBUG:on stmt: bool60 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,879 DEBUG:on stmt: $60pred = call bool60($54compare_op.10, func=bool60, args=(Var($54compare_op.10, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,879 DEBUG:on stmt: branch $60pred, 62, 182
2024-07-15 06:11:46,879 DEBUG:==== SSA block rewrite pass on 62
2024-07-15 06:11:46,879 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5C2A950>
2024-07-15 06:11:46,879 DEBUG:on stmt: invert = const(bool, True)
2024-07-15 06:11:46,879 DEBUG:on stmt: exp = unary(fn=<built-in function neg>, value=b)
2024-07-15 06:11:46,879 DEBUG:on stmt: $const74.4 = const(int, 0)
2024-07-15 06:11:46,879 DEBUG:on stmt: $76compare_op.5 = exp < $const74.4
2024-07-15 06:11:46,879 DEBUG:on stmt: bool82 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,879 DEBUG:on stmt: $82pred = call bool82($76compare_op.5, func=bool82, args=(Var($76compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,879 DEBUG:on stmt: branch $82pred, 84, 98
2024-07-15 06:11:46,879 DEBUG:==== SSA block rewrite pass on 84
2024-07-15 06:11:46,879 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5C2A950>
2024-07-15 06:11:46,879 DEBUG:on stmt: $84load_global.0 = global(OverflowError: <class 'OverflowError'>)
2024-07-15 06:11:46,879 DEBUG:on stmt: <static> raise <class 'OverflowError'>
2024-07-15 06:11:46,879 DEBUG:==== SSA block rewrite pass on 98
2024-07-15 06:11:46,879 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5C2A950>
2024-07-15 06:11:46,879 DEBUG:on stmt: $98load_deref.0 = freevar(is_integer: False)
2024-07-15 06:11:46,879 DEBUG:on stmt: bool100 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,879 DEBUG:on stmt: $100pred = call bool100($98load_deref.0, func=bool100, args=(Var($98load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,879 DEBUG:on stmt: jump 180
2024-07-15 06:11:46,879 DEBUG:==== SSA block rewrite pass on 180
2024-07-15 06:11:46,879 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5C2A950>
2024-07-15 06:11:46,879 DEBUG:on stmt: jump 190
2024-07-15 06:11:46,879 DEBUG:==== SSA block rewrite pass on 182
2024-07-15 06:11:46,880 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5C2A950>
2024-07-15 06:11:46,880 DEBUG:on stmt: invert.1 = const(bool, False)
2024-07-15 06:11:46,880 DEBUG:on stmt: exp = b
2024-07-15 06:11:46,880 DEBUG:on stmt: jump 190
2024-07-15 06:11:46,880 DEBUG:==== SSA block rewrite pass on 190
2024-07-15 06:11:46,880 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5C2A950>
2024-07-15 06:11:46,880 DEBUG:on stmt: $const192.1 = const(int, 65536)
2024-07-15 06:11:46,880 DEBUG:on stmt: $194compare_op.2 = exp > $const192.1
2024-07-15 06:11:46,880 DEBUG:on stmt: bool200 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,880 DEBUG:on stmt: $200pred = call bool200($194compare_op.2, func=bool200, args=(Var($194compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,880 DEBUG:on stmt: branch $200pred, 202, 270
2024-07-15 06:11:46,880 DEBUG:==== SSA block rewrite pass on 202
2024-07-15 06:11:46,880 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5C2A950>
2024-07-15 06:11:46,880 DEBUG:on stmt: $202load_global.0 = global(math: <module 'math' (built-in)>)
2024-07-15 06:11:46,880 DEBUG:on stmt: $214load_attr.2 = getattr(value=$202load_global.0, attr=pow)
2024-07-15 06:11:46,880 DEBUG:on stmt: $226load_global.4 = global(float: <class 'float'>)
2024-07-15 06:11:46,880 DEBUG:on stmt: $244call.7 = call $226load_global.4(b, func=$226load_global.4, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,880 DEBUG:on stmt: $258call.8 = call $214load_attr.2(a.1, $244call.7, func=$214load_attr.2, args=[Var(a.1, numbers.py:217), Var($244call.7, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,880 DEBUG:on stmt: $268return_value.9 = cast(value=$258call.8)
2024-07-15 06:11:46,880 DEBUG:on stmt: return $268return_value.9
2024-07-15 06:11:46,880 DEBUG:==== SSA block rewrite pass on 270
2024-07-15 06:11:46,880 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5C2A950>
2024-07-15 06:11:46,880 DEBUG:on stmt: $const272.1 = const(int, 0)
2024-07-15 06:11:46,880 DEBUG:on stmt: $274compare_op.2 = exp != $const272.1
2024-07-15 06:11:46,880 DEBUG:on stmt: bool280 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,880 DEBUG:on stmt: $280pred = call bool280($274compare_op.2, func=bool280, args=(Var($274compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,880 DEBUG:on stmt: branch $280pred, 282, 334
2024-07-15 06:11:46,880 DEBUG:==== SSA block rewrite pass on 282
2024-07-15 06:11:46,880 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5C2A950>
2024-07-15 06:11:46,880 DEBUG:on stmt: a.1.2 = phi(incoming_values=[Var(a.1.1, numbers.py:241), Var(a.1, numbers.py:217)], incoming_blocks=[302, 270])
2024-07-15 06:11:46,880 DEBUG:on stmt: r.2 = phi(incoming_values=[Var(r.3, numbers.py:239), Var(r, numbers.py:216)], incoming_blocks=[302, 270])
2024-07-15 06:11:46,881 DEBUG:on stmt: $const284.1 = const(int, 1)
2024-07-15 06:11:46,881 DEBUG:on stmt: $binop_and_286.2 = exp & $const284.1
2024-07-15 06:11:46,881 DEBUG:on stmt: bool290 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,881 DEBUG:on stmt: $290pred = call bool290($binop_and_286.2, func=bool290, args=(Var($binop_and_286.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,881 DEBUG:on stmt: branch $290pred, 292, 302
2024-07-15 06:11:46,881 DEBUG:==== SSA block rewrite pass on 292
2024-07-15 06:11:46,881 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5C2A950>
2024-07-15 06:11:46,881 DEBUG:on stmt: $binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:46,881 DEBUG:on stmt: r.1 = $binop_imul296.2
2024-07-15 06:11:46,881 DEBUG:on stmt: jump 302
2024-07-15 06:11:46,881 DEBUG:==== SSA block rewrite pass on 302
2024-07-15 06:11:46,881 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5C2A950>
2024-07-15 06:11:46,881 DEBUG:on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[282, 292])
2024-07-15 06:11:46,881 DEBUG:on stmt: $const304.1 = const(int, 1)
2024-07-15 06:11:46,881 DEBUG:on stmt: $binop_irshift306.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const304.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:46,881 DEBUG:on stmt: exp = $binop_irshift306.2
2024-07-15 06:11:46,881 DEBUG:on stmt: $binop_imul316.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:46,881 DEBUG:on stmt: a.1.1 = $binop_imul316.5
2024-07-15 06:11:46,881 DEBUG:on stmt: $const324.7 = const(int, 0)
2024-07-15 06:11:46,881 DEBUG:on stmt: $326compare_op.8 = exp != $const324.7
2024-07-15 06:11:46,881 DEBUG:on stmt: bool332 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,881 DEBUG:on stmt: $332pred = call bool332($326compare_op.8, func=bool332, args=(Var($326compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,881 DEBUG:on stmt: branch $332pred, 282, 334
2024-07-15 06:11:46,881 DEBUG:==== SSA block rewrite pass on 334
2024-07-15 06:11:46,881 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5C2A950>
2024-07-15 06:11:46,881 DEBUG:on stmt: r.4 = phi(incoming_values=[Var(r.3, numbers.py:239), Var(r, numbers.py:216)], incoming_blocks=[302, 270])
2024-07-15 06:11:46,881 DEBUG:on stmt: bool336 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,881 DEBUG:on stmt: $336pred = call bool336(invert, func=bool336, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,881 DEBUG:find_def var='invert' stmt=$336pred = call bool336(invert, func=bool336, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,881 DEBUG:find_def_from_top label 334
2024-07-15 06:11:46,881 DEBUG:idom 270 from label 334
2024-07-15 06:11:46,881 DEBUG:find_def_from_bottom label 270
2024-07-15 06:11:46,881 DEBUG:find_def_from_top label 270
2024-07-15 06:11:46,882 DEBUG:idom 190 from label 270
2024-07-15 06:11:46,882 DEBUG:find_def_from_bottom label 190
2024-07-15 06:11:46,882 DEBUG:find_def_from_top label 190
2024-07-15 06:11:46,882 DEBUG:insert phi node invert.2 = phi(incoming_values=[], incoming_blocks=[]) at 190
2024-07-15 06:11:46,882 DEBUG:find_def_from_bottom label 180
2024-07-15 06:11:46,882 DEBUG:find_def_from_top label 180
2024-07-15 06:11:46,882 DEBUG:idom 98 from label 180
2024-07-15 06:11:46,882 DEBUG:find_def_from_bottom label 98
2024-07-15 06:11:46,882 DEBUG:find_def_from_top label 98
2024-07-15 06:11:46,882 DEBUG:idom 62 from label 98
2024-07-15 06:11:46,882 DEBUG:find_def_from_bottom label 62
2024-07-15 06:11:46,882 DEBUG:incoming_def invert = const(bool, True)
2024-07-15 06:11:46,882 DEBUG:find_def_from_bottom label 182
2024-07-15 06:11:46,882 DEBUG:incoming_def invert.1 = const(bool, False)
2024-07-15 06:11:46,882 DEBUG:replaced with: $336pred = call bool336(invert.2, func=bool336, args=(Var(invert.2, numbers.py:243),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,882 DEBUG:on stmt: branch $336pred, 338, 348
2024-07-15 06:11:46,882 DEBUG:==== SSA block rewrite pass on 338
2024-07-15 06:11:46,882 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5C2A950>
2024-07-15 06:11:46,882 DEBUG:on stmt: $const338.0 = const(float, 1.0)
2024-07-15 06:11:46,882 DEBUG:on stmt: $binop_truediv342.2 = $const338.0 / r.4
2024-07-15 06:11:46,882 DEBUG:on stmt: $phi350.0 = $binop_truediv342.2
2024-07-15 06:11:46,882 DEBUG:on stmt: jump 350
2024-07-15 06:11:46,882 DEBUG:==== SSA block rewrite pass on 348
2024-07-15 06:11:46,882 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5C2A950>
2024-07-15 06:11:46,882 DEBUG:on stmt: $phi350.0 = r.4
2024-07-15 06:11:46,882 DEBUG:on stmt: jump 350
2024-07-15 06:11:46,882 DEBUG:==== SSA block rewrite pass on 350
2024-07-15 06:11:46,882 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5C2A950>
2024-07-15 06:11:46,882 DEBUG:on stmt: $350return_value.1 = cast(value=$phi350.0)
2024-07-15 06:11:46,882 DEBUG:on stmt: return $350return_value.1
2024-07-15 06:11:46,882 DEBUG:Fix SSA violator on var exp
2024-07-15 06:11:46,882 DEBUG:==== SSA block rewrite pass on 0
2024-07-15 06:11:46,882 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6915E50>
2024-07-15 06:11:46,883 DEBUG:on stmt: a = arg(0, name=a)
2024-07-15 06:11:46,883 DEBUG:on stmt: b = arg(1, name=b)
2024-07-15 06:11:46,883 DEBUG:on stmt: $8load_deref.1 = freevar(tp: float64)
2024-07-15 06:11:46,883 DEBUG:on stmt: $const10.2 = const(int, 1)
2024-07-15 06:11:46,883 DEBUG:on stmt: r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,883 DEBUG:on stmt: $30load_deref.5 = freevar(tp: float64)
2024-07-15 06:11:46,883 DEBUG:on stmt: a.1 = call $30load_deref.5(a, func=$30load_deref.5, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,883 DEBUG:on stmt: $const52.9 = const(int, 0)
2024-07-15 06:11:46,883 DEBUG:on stmt: $54compare_op.10 = b < $const52.9
2024-07-15 06:11:46,883 DEBUG:on stmt: bool60 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,883 DEBUG:on stmt: $60pred = call bool60($54compare_op.10, func=bool60, args=(Var($54compare_op.10, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,883 DEBUG:on stmt: branch $60pred, 62, 182
2024-07-15 06:11:46,883 DEBUG:==== SSA block rewrite pass on 62
2024-07-15 06:11:46,883 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6915E50>
2024-07-15 06:11:46,883 DEBUG:on stmt: invert = const(bool, True)
2024-07-15 06:11:46,883 DEBUG:on stmt: exp = unary(fn=<built-in function neg>, value=b)
2024-07-15 06:11:46,883 DEBUG:first assign: exp
2024-07-15 06:11:46,883 DEBUG:replaced with: exp = unary(fn=<built-in function neg>, value=b)
2024-07-15 06:11:46,883 DEBUG:on stmt: $const74.4 = const(int, 0)
2024-07-15 06:11:46,883 DEBUG:on stmt: $76compare_op.5 = exp < $const74.4
2024-07-15 06:11:46,883 DEBUG:on stmt: bool82 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,883 DEBUG:on stmt: $82pred = call bool82($76compare_op.5, func=bool82, args=(Var($76compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,883 DEBUG:on stmt: branch $82pred, 84, 98
2024-07-15 06:11:46,883 DEBUG:==== SSA block rewrite pass on 84
2024-07-15 06:11:46,883 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6915E50>
2024-07-15 06:11:46,883 DEBUG:on stmt: $84load_global.0 = global(OverflowError: <class 'OverflowError'>)
2024-07-15 06:11:46,883 DEBUG:on stmt: <static> raise <class 'OverflowError'>
2024-07-15 06:11:46,883 DEBUG:==== SSA block rewrite pass on 98
2024-07-15 06:11:46,883 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6915E50>
2024-07-15 06:11:46,883 DEBUG:on stmt: $98load_deref.0 = freevar(is_integer: False)
2024-07-15 06:11:46,883 DEBUG:on stmt: bool100 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,883 DEBUG:on stmt: $100pred = call bool100($98load_deref.0, func=bool100, args=(Var($98load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,883 DEBUG:on stmt: jump 180
2024-07-15 06:11:46,883 DEBUG:==== SSA block rewrite pass on 180
2024-07-15 06:11:46,883 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6915E50>
2024-07-15 06:11:46,883 DEBUG:on stmt: jump 190
2024-07-15 06:11:46,883 DEBUG:==== SSA block rewrite pass on 182
2024-07-15 06:11:46,883 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6915E50>
2024-07-15 06:11:46,884 DEBUG:on stmt: invert.1 = const(bool, False)
2024-07-15 06:11:46,884 DEBUG:on stmt: exp = b
2024-07-15 06:11:46,884 DEBUG:replaced with: exp.1 = b
2024-07-15 06:11:46,884 DEBUG:on stmt: jump 190
2024-07-15 06:11:46,884 DEBUG:==== SSA block rewrite pass on 190
2024-07-15 06:11:46,884 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6915E50>
2024-07-15 06:11:46,884 DEBUG:on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:219), Var(invert.1, numbers.py:232)], incoming_blocks=[180, 182])
2024-07-15 06:11:46,884 DEBUG:on stmt: $const192.1 = const(int, 65536)
2024-07-15 06:11:46,884 DEBUG:on stmt: $194compare_op.2 = exp > $const192.1
2024-07-15 06:11:46,884 DEBUG:on stmt: bool200 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,884 DEBUG:on stmt: $200pred = call bool200($194compare_op.2, func=bool200, args=(Var($194compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,884 DEBUG:on stmt: branch $200pred, 202, 270
2024-07-15 06:11:46,884 DEBUG:==== SSA block rewrite pass on 202
2024-07-15 06:11:46,884 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6915E50>
2024-07-15 06:11:46,884 DEBUG:on stmt: $202load_global.0 = global(math: <module 'math' (built-in)>)
2024-07-15 06:11:46,884 DEBUG:on stmt: $214load_attr.2 = getattr(value=$202load_global.0, attr=pow)
2024-07-15 06:11:46,884 DEBUG:on stmt: $226load_global.4 = global(float: <class 'float'>)
2024-07-15 06:11:46,884 DEBUG:on stmt: $244call.7 = call $226load_global.4(b, func=$226load_global.4, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,884 DEBUG:on stmt: $258call.8 = call $214load_attr.2(a.1, $244call.7, func=$214load_attr.2, args=[Var(a.1, numbers.py:217), Var($244call.7, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,884 DEBUG:on stmt: $268return_value.9 = cast(value=$258call.8)
2024-07-15 06:11:46,884 DEBUG:on stmt: return $268return_value.9
2024-07-15 06:11:46,884 DEBUG:==== SSA block rewrite pass on 270
2024-07-15 06:11:46,884 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6915E50>
2024-07-15 06:11:46,884 DEBUG:on stmt: $const272.1 = const(int, 0)
2024-07-15 06:11:46,884 DEBUG:on stmt: $274compare_op.2 = exp != $const272.1
2024-07-15 06:11:46,884 DEBUG:on stmt: bool280 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,884 DEBUG:on stmt: $280pred = call bool280($274compare_op.2, func=bool280, args=(Var($274compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,884 DEBUG:on stmt: branch $280pred, 282, 334
2024-07-15 06:11:46,884 DEBUG:==== SSA block rewrite pass on 282
2024-07-15 06:11:46,884 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6915E50>
2024-07-15 06:11:46,884 DEBUG:on stmt: a.1.2 = phi(incoming_values=[Var(a.1.1, numbers.py:241), Var(a.1, numbers.py:217)], incoming_blocks=[302, 270])
2024-07-15 06:11:46,884 DEBUG:on stmt: r.2 = phi(incoming_values=[Var(r.3, numbers.py:239), Var(r, numbers.py:216)], incoming_blocks=[302, 270])
2024-07-15 06:11:46,885 DEBUG:on stmt: $const284.1 = const(int, 1)
2024-07-15 06:11:46,885 DEBUG:on stmt: $binop_and_286.2 = exp & $const284.1
2024-07-15 06:11:46,885 DEBUG:on stmt: bool290 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,885 DEBUG:on stmt: $290pred = call bool290($binop_and_286.2, func=bool290, args=(Var($binop_and_286.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,885 DEBUG:on stmt: branch $290pred, 292, 302
2024-07-15 06:11:46,885 DEBUG:==== SSA block rewrite pass on 292
2024-07-15 06:11:46,885 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6915E50>
2024-07-15 06:11:46,885 DEBUG:on stmt: $binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:46,885 DEBUG:on stmt: r.1 = $binop_imul296.2
2024-07-15 06:11:46,885 DEBUG:on stmt: jump 302
2024-07-15 06:11:46,885 DEBUG:==== SSA block rewrite pass on 302
2024-07-15 06:11:46,885 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6915E50>
2024-07-15 06:11:46,885 DEBUG:on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[282, 292])
2024-07-15 06:11:46,885 DEBUG:on stmt: $const304.1 = const(int, 1)
2024-07-15 06:11:46,885 DEBUG:on stmt: $binop_irshift306.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const304.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:46,885 DEBUG:on stmt: exp = $binop_irshift306.2
2024-07-15 06:11:46,885 DEBUG:replaced with: exp.2 = $binop_irshift306.2
2024-07-15 06:11:46,885 DEBUG:on stmt: $binop_imul316.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:46,885 DEBUG:on stmt: a.1.1 = $binop_imul316.5
2024-07-15 06:11:46,885 DEBUG:on stmt: $const324.7 = const(int, 0)
2024-07-15 06:11:46,885 DEBUG:on stmt: $326compare_op.8 = exp != $const324.7
2024-07-15 06:11:46,885 DEBUG:on stmt: bool332 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,885 DEBUG:on stmt: $332pred = call bool332($326compare_op.8, func=bool332, args=(Var($326compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,885 DEBUG:on stmt: branch $332pred, 282, 334
2024-07-15 06:11:46,885 DEBUG:==== SSA block rewrite pass on 334
2024-07-15 06:11:46,885 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6915E50>
2024-07-15 06:11:46,885 DEBUG:on stmt: r.4 = phi(incoming_values=[Var(r.3, numbers.py:239), Var(r, numbers.py:216)], incoming_blocks=[302, 270])
2024-07-15 06:11:46,885 DEBUG:on stmt: bool336 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,885 DEBUG:on stmt: $336pred = call bool336(invert.2, func=bool336, args=(Var(invert.2, numbers.py:243),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,885 DEBUG:on stmt: branch $336pred, 338, 348
2024-07-15 06:11:46,885 DEBUG:==== SSA block rewrite pass on 338
2024-07-15 06:11:46,885 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6915E50>
2024-07-15 06:11:46,885 DEBUG:on stmt: $const338.0 = const(float, 1.0)
2024-07-15 06:11:46,885 DEBUG:on stmt: $binop_truediv342.2 = $const338.0 / r.4
2024-07-15 06:11:46,885 DEBUG:on stmt: $phi350.0 = $binop_truediv342.2
2024-07-15 06:11:46,885 DEBUG:on stmt: jump 350
2024-07-15 06:11:46,886 DEBUG:==== SSA block rewrite pass on 348
2024-07-15 06:11:46,886 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6915E50>
2024-07-15 06:11:46,886 DEBUG:on stmt: $phi350.0 = r.4
2024-07-15 06:11:46,886 DEBUG:on stmt: jump 350
2024-07-15 06:11:46,886 DEBUG:==== SSA block rewrite pass on 350
2024-07-15 06:11:46,886 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B6915E50>
2024-07-15 06:11:46,886 DEBUG:on stmt: $350return_value.1 = cast(value=$phi350.0)
2024-07-15 06:11:46,886 DEBUG:on stmt: return $350return_value.1
2024-07-15 06:11:46,886 DEBUG:Replaced assignments: defaultdict(<class 'list'>,
            {62: [<numba.core.ir.Assign object at 0x00000221B6764310>],
             182: [<numba.core.ir.Assign object at 0x00000221B5EE1390>],
             302: [<numba.core.ir.Assign object at 0x00000221B5DBD390>]})
2024-07-15 06:11:46,886 DEBUG:==== SSA block rewrite pass on 0
2024-07-15 06:11:46,886 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5F9A490>
2024-07-15 06:11:46,886 DEBUG:on stmt: a = arg(0, name=a)
2024-07-15 06:11:46,886 DEBUG:on stmt: b = arg(1, name=b)
2024-07-15 06:11:46,886 DEBUG:on stmt: $8load_deref.1 = freevar(tp: float64)
2024-07-15 06:11:46,886 DEBUG:on stmt: $const10.2 = const(int, 1)
2024-07-15 06:11:46,886 DEBUG:on stmt: r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,886 DEBUG:on stmt: $30load_deref.5 = freevar(tp: float64)
2024-07-15 06:11:46,886 DEBUG:on stmt: a.1 = call $30load_deref.5(a, func=$30load_deref.5, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,886 DEBUG:on stmt: $const52.9 = const(int, 0)
2024-07-15 06:11:46,886 DEBUG:on stmt: $54compare_op.10 = b < $const52.9
2024-07-15 06:11:46,886 DEBUG:on stmt: bool60 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,886 DEBUG:on stmt: $60pred = call bool60($54compare_op.10, func=bool60, args=(Var($54compare_op.10, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,886 DEBUG:on stmt: branch $60pred, 62, 182
2024-07-15 06:11:46,886 DEBUG:==== SSA block rewrite pass on 62
2024-07-15 06:11:46,886 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5F9A490>
2024-07-15 06:11:46,886 DEBUG:on stmt: invert = const(bool, True)
2024-07-15 06:11:46,886 DEBUG:on stmt: exp = unary(fn=<built-in function neg>, value=b)
2024-07-15 06:11:46,886 DEBUG:on stmt: $const74.4 = const(int, 0)
2024-07-15 06:11:46,886 DEBUG:on stmt: $76compare_op.5 = exp < $const74.4
2024-07-15 06:11:46,886 DEBUG:find_def var='exp' stmt=$76compare_op.5 = exp < $const74.4
2024-07-15 06:11:46,886 DEBUG:on stmt: bool82 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,886 DEBUG:on stmt: $82pred = call bool82($76compare_op.5, func=bool82, args=(Var($76compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,886 DEBUG:on stmt: branch $82pred, 84, 98
2024-07-15 06:11:46,886 DEBUG:==== SSA block rewrite pass on 84
2024-07-15 06:11:46,886 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5F9A490>
2024-07-15 06:11:46,886 DEBUG:on stmt: $84load_global.0 = global(OverflowError: <class 'OverflowError'>)
2024-07-15 06:11:46,886 DEBUG:on stmt: <static> raise <class 'OverflowError'>
2024-07-15 06:11:46,886 DEBUG:==== SSA block rewrite pass on 98
2024-07-15 06:11:46,886 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5F9A490>
2024-07-15 06:11:46,886 DEBUG:on stmt: $98load_deref.0 = freevar(is_integer: False)
2024-07-15 06:11:46,886 DEBUG:on stmt: bool100 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,886 DEBUG:on stmt: $100pred = call bool100($98load_deref.0, func=bool100, args=(Var($98load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,886 DEBUG:on stmt: jump 180
2024-07-15 06:11:46,886 DEBUG:==== SSA block rewrite pass on 180
2024-07-15 06:11:46,886 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5F9A490>
2024-07-15 06:11:46,887 DEBUG:on stmt: jump 190
2024-07-15 06:11:46,887 DEBUG:==== SSA block rewrite pass on 182
2024-07-15 06:11:46,887 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5F9A490>
2024-07-15 06:11:46,887 DEBUG:on stmt: invert.1 = const(bool, False)
2024-07-15 06:11:46,887 DEBUG:on stmt: exp.1 = b
2024-07-15 06:11:46,887 DEBUG:on stmt: jump 190
2024-07-15 06:11:46,887 DEBUG:==== SSA block rewrite pass on 190
2024-07-15 06:11:46,887 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5F9A490>
2024-07-15 06:11:46,887 DEBUG:on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:219), Var(invert.1, numbers.py:232)], incoming_blocks=[180, 182])
2024-07-15 06:11:46,887 DEBUG:on stmt: $const192.1 = const(int, 65536)
2024-07-15 06:11:46,887 DEBUG:on stmt: $194compare_op.2 = exp > $const192.1
2024-07-15 06:11:46,887 DEBUG:find_def var='exp' stmt=$194compare_op.2 = exp > $const192.1
2024-07-15 06:11:46,887 DEBUG:find_def_from_top label 190
2024-07-15 06:11:46,887 DEBUG:insert phi node exp.3 = phi(incoming_values=[], incoming_blocks=[]) at 190
2024-07-15 06:11:46,887 DEBUG:find_def_from_bottom label 180
2024-07-15 06:11:46,887 DEBUG:find_def_from_top label 180
2024-07-15 06:11:46,887 DEBUG:idom 98 from label 180
2024-07-15 06:11:46,887 DEBUG:find_def_from_bottom label 98
2024-07-15 06:11:46,887 DEBUG:find_def_from_top label 98
2024-07-15 06:11:46,887 DEBUG:idom 62 from label 98
2024-07-15 06:11:46,887 DEBUG:find_def_from_bottom label 62
2024-07-15 06:11:46,887 DEBUG:incoming_def exp = unary(fn=<built-in function neg>, value=b)
2024-07-15 06:11:46,887 DEBUG:find_def_from_bottom label 182
2024-07-15 06:11:46,887 DEBUG:incoming_def exp.1 = b
2024-07-15 06:11:46,887 DEBUG:replaced with: $194compare_op.2 = exp.3 > $const192.1
2024-07-15 06:11:46,887 DEBUG:on stmt: bool200 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,887 DEBUG:on stmt: $200pred = call bool200($194compare_op.2, func=bool200, args=(Var($194compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,887 DEBUG:on stmt: branch $200pred, 202, 270
2024-07-15 06:11:46,887 DEBUG:==== SSA block rewrite pass on 202
2024-07-15 06:11:46,887 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5F9A490>
2024-07-15 06:11:46,887 DEBUG:on stmt: $202load_global.0 = global(math: <module 'math' (built-in)>)
2024-07-15 06:11:46,887 DEBUG:on stmt: $214load_attr.2 = getattr(value=$202load_global.0, attr=pow)
2024-07-15 06:11:46,887 DEBUG:on stmt: $226load_global.4 = global(float: <class 'float'>)
2024-07-15 06:11:46,887 DEBUG:on stmt: $244call.7 = call $226load_global.4(b, func=$226load_global.4, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,887 DEBUG:on stmt: $258call.8 = call $214load_attr.2(a.1, $244call.7, func=$214load_attr.2, args=[Var(a.1, numbers.py:217), Var($244call.7, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,887 DEBUG:on stmt: $268return_value.9 = cast(value=$258call.8)
2024-07-15 06:11:46,887 DEBUG:on stmt: return $268return_value.9
2024-07-15 06:11:46,887 DEBUG:==== SSA block rewrite pass on 270
2024-07-15 06:11:46,887 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5F9A490>
2024-07-15 06:11:46,887 DEBUG:on stmt: $const272.1 = const(int, 0)
2024-07-15 06:11:46,887 DEBUG:on stmt: $274compare_op.2 = exp != $const272.1
2024-07-15 06:11:46,887 DEBUG:find_def var='exp' stmt=$274compare_op.2 = exp != $const272.1
2024-07-15 06:11:46,887 DEBUG:find_def_from_top label 270
2024-07-15 06:11:46,887 DEBUG:idom 190 from label 270
2024-07-15 06:11:46,887 DEBUG:find_def_from_bottom label 190
2024-07-15 06:11:46,889 DEBUG:replaced with: $274compare_op.2 = exp.3 != $const272.1
2024-07-15 06:11:46,889 DEBUG:on stmt: bool280 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,889 DEBUG:on stmt: $280pred = call bool280($274compare_op.2, func=bool280, args=(Var($274compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,889 DEBUG:on stmt: branch $280pred, 282, 334
2024-07-15 06:11:46,889 DEBUG:==== SSA block rewrite pass on 282
2024-07-15 06:11:46,889 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5F9A490>
2024-07-15 06:11:46,889 DEBUG:on stmt: a.1.2 = phi(incoming_values=[Var(a.1.1, numbers.py:241), Var(a.1, numbers.py:217)], incoming_blocks=[302, 270])
2024-07-15 06:11:46,889 DEBUG:on stmt: r.2 = phi(incoming_values=[Var(r.3, numbers.py:239), Var(r, numbers.py:216)], incoming_blocks=[302, 270])
2024-07-15 06:11:46,889 DEBUG:on stmt: $const284.1 = const(int, 1)
2024-07-15 06:11:46,889 DEBUG:on stmt: $binop_and_286.2 = exp & $const284.1
2024-07-15 06:11:46,889 DEBUG:find_def var='exp' stmt=$binop_and_286.2 = exp & $const284.1
2024-07-15 06:11:46,889 DEBUG:find_def_from_top label 282
2024-07-15 06:11:46,889 DEBUG:insert phi node exp.4 = phi(incoming_values=[], incoming_blocks=[]) at 282
2024-07-15 06:11:46,889 DEBUG:find_def_from_bottom label 302
2024-07-15 06:11:46,889 DEBUG:incoming_def exp.2 = $binop_irshift306.2
2024-07-15 06:11:46,889 DEBUG:find_def_from_bottom label 270
2024-07-15 06:11:46,889 DEBUG:find_def_from_top label 270
2024-07-15 06:11:46,889 DEBUG:idom 190 from label 270
2024-07-15 06:11:46,889 DEBUG:find_def_from_bottom label 190
2024-07-15 06:11:46,889 DEBUG:incoming_def exp.3 = phi(incoming_values=[Var(exp, numbers.py:220), Var(exp.1, numbers.py:233)], incoming_blocks=[180, 182])
2024-07-15 06:11:46,889 DEBUG:replaced with: $binop_and_286.2 = exp.4 & $const284.1
2024-07-15 06:11:46,889 DEBUG:on stmt: bool290 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,889 DEBUG:on stmt: $290pred = call bool290($binop_and_286.2, func=bool290, args=(Var($binop_and_286.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,889 DEBUG:on stmt: branch $290pred, 292, 302
2024-07-15 06:11:46,889 DEBUG:==== SSA block rewrite pass on 292
2024-07-15 06:11:46,889 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5F9A490>
2024-07-15 06:11:46,890 DEBUG:on stmt: $binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:46,890 DEBUG:on stmt: r.1 = $binop_imul296.2
2024-07-15 06:11:46,890 DEBUG:on stmt: jump 302
2024-07-15 06:11:46,890 DEBUG:==== SSA block rewrite pass on 302
2024-07-15 06:11:46,890 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5F9A490>
2024-07-15 06:11:46,890 DEBUG:on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[282, 292])
2024-07-15 06:11:46,890 DEBUG:on stmt: $const304.1 = const(int, 1)
2024-07-15 06:11:46,890 DEBUG:on stmt: $binop_irshift306.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const304.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:46,890 DEBUG:find_def var='exp' stmt=$binop_irshift306.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const304.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:46,890 DEBUG:find_def_from_top label 302
2024-07-15 06:11:46,890 DEBUG:idom 282 from label 302
2024-07-15 06:11:46,890 DEBUG:find_def_from_bottom label 282
2024-07-15 06:11:46,890 DEBUG:replaced with: $binop_irshift306.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const304.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:46,890 DEBUG:on stmt: exp.2 = $binop_irshift306.2
2024-07-15 06:11:46,890 DEBUG:on stmt: $binop_imul316.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:46,890 DEBUG:on stmt: a.1.1 = $binop_imul316.5
2024-07-15 06:11:46,890 DEBUG:on stmt: $const324.7 = const(int, 0)
2024-07-15 06:11:46,890 DEBUG:on stmt: $326compare_op.8 = exp != $const324.7
2024-07-15 06:11:46,890 DEBUG:find_def var='exp' stmt=$326compare_op.8 = exp != $const324.7
2024-07-15 06:11:46,890 DEBUG:replaced with: $326compare_op.8 = exp.2 != $const324.7
2024-07-15 06:11:46,890 DEBUG:on stmt: bool332 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,890 DEBUG:on stmt: $332pred = call bool332($326compare_op.8, func=bool332, args=(Var($326compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,890 DEBUG:on stmt: branch $332pred, 282, 334
2024-07-15 06:11:46,890 DEBUG:==== SSA block rewrite pass on 334
2024-07-15 06:11:46,890 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5F9A490>
2024-07-15 06:11:46,890 DEBUG:on stmt: r.4 = phi(incoming_values=[Var(r.3, numbers.py:239), Var(r, numbers.py:216)], incoming_blocks=[302, 270])
2024-07-15 06:11:46,890 DEBUG:on stmt: bool336 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,890 DEBUG:on stmt: $336pred = call bool336(invert.2, func=bool336, args=(Var(invert.2, numbers.py:243),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,890 DEBUG:on stmt: branch $336pred, 338, 348
2024-07-15 06:11:46,890 DEBUG:==== SSA block rewrite pass on 338
2024-07-15 06:11:46,890 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5F9A490>
2024-07-15 06:11:46,890 DEBUG:on stmt: $const338.0 = const(float, 1.0)
2024-07-15 06:11:46,890 DEBUG:on stmt: $binop_truediv342.2 = $const338.0 / r.4
2024-07-15 06:11:46,890 DEBUG:on stmt: $phi350.0 = $binop_truediv342.2
2024-07-15 06:11:46,890 DEBUG:on stmt: jump 350
2024-07-15 06:11:46,890 DEBUG:==== SSA block rewrite pass on 348
2024-07-15 06:11:46,891 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5F9A490>
2024-07-15 06:11:46,891 DEBUG:on stmt: $phi350.0 = r.4
2024-07-15 06:11:46,891 DEBUG:on stmt: jump 350
2024-07-15 06:11:46,891 DEBUG:==== SSA block rewrite pass on 350
2024-07-15 06:11:46,891 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5F9A490>
2024-07-15 06:11:46,891 DEBUG:on stmt: $350return_value.1 = cast(value=$phi350.0)
2024-07-15 06:11:46,891 DEBUG:on stmt: return $350return_value.1
2024-07-15 06:11:46,891 DEBUG:Fix SSA violator on var $phi350.0
2024-07-15 06:11:46,891 DEBUG:==== SSA block rewrite pass on 0
2024-07-15 06:11:46,891 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B69B21D0>
2024-07-15 06:11:46,891 DEBUG:on stmt: a = arg(0, name=a)
2024-07-15 06:11:46,891 DEBUG:on stmt: b = arg(1, name=b)
2024-07-15 06:11:46,891 DEBUG:on stmt: $8load_deref.1 = freevar(tp: float64)
2024-07-15 06:11:46,891 DEBUG:on stmt: $const10.2 = const(int, 1)
2024-07-15 06:11:46,891 DEBUG:on stmt: r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,891 DEBUG:on stmt: $30load_deref.5 = freevar(tp: float64)
2024-07-15 06:11:46,891 DEBUG:on stmt: a.1 = call $30load_deref.5(a, func=$30load_deref.5, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,891 DEBUG:on stmt: $const52.9 = const(int, 0)
2024-07-15 06:11:46,891 DEBUG:on stmt: $54compare_op.10 = b < $const52.9
2024-07-15 06:11:46,891 DEBUG:on stmt: bool60 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,891 DEBUG:on stmt: $60pred = call bool60($54compare_op.10, func=bool60, args=(Var($54compare_op.10, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,891 DEBUG:on stmt: branch $60pred, 62, 182
2024-07-15 06:11:46,891 DEBUG:==== SSA block rewrite pass on 62
2024-07-15 06:11:46,891 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B69B21D0>
2024-07-15 06:11:46,891 DEBUG:on stmt: invert = const(bool, True)
2024-07-15 06:11:46,891 DEBUG:on stmt: exp = unary(fn=<built-in function neg>, value=b)
2024-07-15 06:11:46,891 DEBUG:on stmt: $const74.4 = const(int, 0)
2024-07-15 06:11:46,891 DEBUG:on stmt: $76compare_op.5 = exp < $const74.4
2024-07-15 06:11:46,891 DEBUG:on stmt: bool82 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,891 DEBUG:on stmt: $82pred = call bool82($76compare_op.5, func=bool82, args=(Var($76compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,891 DEBUG:on stmt: branch $82pred, 84, 98
2024-07-15 06:11:46,891 DEBUG:==== SSA block rewrite pass on 84
2024-07-15 06:11:46,892 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B69B21D0>
2024-07-15 06:11:46,892 DEBUG:on stmt: $84load_global.0 = global(OverflowError: <class 'OverflowError'>)
2024-07-15 06:11:46,892 DEBUG:on stmt: <static> raise <class 'OverflowError'>
2024-07-15 06:11:46,892 DEBUG:==== SSA block rewrite pass on 98
2024-07-15 06:11:46,892 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B69B21D0>
2024-07-15 06:11:46,892 DEBUG:on stmt: $98load_deref.0 = freevar(is_integer: False)
2024-07-15 06:11:46,892 DEBUG:on stmt: bool100 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,892 DEBUG:on stmt: $100pred = call bool100($98load_deref.0, func=bool100, args=(Var($98load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,892 DEBUG:on stmt: jump 180
2024-07-15 06:11:46,892 DEBUG:==== SSA block rewrite pass on 180
2024-07-15 06:11:46,892 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B69B21D0>
2024-07-15 06:11:46,892 DEBUG:on stmt: jump 190
2024-07-15 06:11:46,892 DEBUG:==== SSA block rewrite pass on 182
2024-07-15 06:11:46,892 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B69B21D0>
2024-07-15 06:11:46,892 DEBUG:on stmt: invert.1 = const(bool, False)
2024-07-15 06:11:46,892 DEBUG:on stmt: exp.1 = b
2024-07-15 06:11:46,892 DEBUG:on stmt: jump 190
2024-07-15 06:11:46,892 DEBUG:==== SSA block rewrite pass on 190
2024-07-15 06:11:46,892 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B69B21D0>
2024-07-15 06:11:46,892 DEBUG:on stmt: exp.3 = phi(incoming_values=[Var(exp, numbers.py:220), Var(exp.1, numbers.py:233)], incoming_blocks=[180, 182])
2024-07-15 06:11:46,892 DEBUG:on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:219), Var(invert.1, numbers.py:232)], incoming_blocks=[180, 182])
2024-07-15 06:11:46,892 DEBUG:on stmt: $const192.1 = const(int, 65536)
2024-07-15 06:11:46,892 DEBUG:on stmt: $194compare_op.2 = exp.3 > $const192.1
2024-07-15 06:11:46,892 DEBUG:on stmt: bool200 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,892 DEBUG:on stmt: $200pred = call bool200($194compare_op.2, func=bool200, args=(Var($194compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,892 DEBUG:on stmt: branch $200pred, 202, 270
2024-07-15 06:11:46,892 DEBUG:==== SSA block rewrite pass on 202
2024-07-15 06:11:46,892 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B69B21D0>
2024-07-15 06:11:46,892 DEBUG:on stmt: $202load_global.0 = global(math: <module 'math' (built-in)>)
2024-07-15 06:11:46,892 DEBUG:on stmt: $214load_attr.2 = getattr(value=$202load_global.0, attr=pow)
2024-07-15 06:11:46,892 DEBUG:on stmt: $226load_global.4 = global(float: <class 'float'>)
2024-07-15 06:11:46,892 DEBUG:on stmt: $244call.7 = call $226load_global.4(b, func=$226load_global.4, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,892 DEBUG:on stmt: $258call.8 = call $214load_attr.2(a.1, $244call.7, func=$214load_attr.2, args=[Var(a.1, numbers.py:217), Var($244call.7, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,892 DEBUG:on stmt: $268return_value.9 = cast(value=$258call.8)
2024-07-15 06:11:46,892 DEBUG:on stmt: return $268return_value.9
2024-07-15 06:11:46,892 DEBUG:==== SSA block rewrite pass on 270
2024-07-15 06:11:46,892 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B69B21D0>
2024-07-15 06:11:46,892 DEBUG:on stmt: $const272.1 = const(int, 0)
2024-07-15 06:11:46,892 DEBUG:on stmt: $274compare_op.2 = exp.3 != $const272.1
2024-07-15 06:11:46,893 DEBUG:on stmt: bool280 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,893 DEBUG:on stmt: $280pred = call bool280($274compare_op.2, func=bool280, args=(Var($274compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,893 DEBUG:on stmt: branch $280pred, 282, 334
2024-07-15 06:11:46,893 DEBUG:==== SSA block rewrite pass on 282
2024-07-15 06:11:46,893 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B69B21D0>
2024-07-15 06:11:46,893 DEBUG:on stmt: exp.4 = phi(incoming_values=[Var(exp.2, numbers.py:240), Var(exp.3, numbers.py:234)], incoming_blocks=[302, 270])
2024-07-15 06:11:46,893 DEBUG:on stmt: a.1.2 = phi(incoming_values=[Var(a.1.1, numbers.py:241), Var(a.1, numbers.py:217)], incoming_blocks=[302, 270])
2024-07-15 06:11:46,893 DEBUG:on stmt: r.2 = phi(incoming_values=[Var(r.3, numbers.py:239), Var(r, numbers.py:216)], incoming_blocks=[302, 270])
2024-07-15 06:11:46,893 DEBUG:on stmt: $const284.1 = const(int, 1)
2024-07-15 06:11:46,893 DEBUG:on stmt: $binop_and_286.2 = exp.4 & $const284.1
2024-07-15 06:11:46,893 DEBUG:on stmt: bool290 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,893 DEBUG:on stmt: $290pred = call bool290($binop_and_286.2, func=bool290, args=(Var($binop_and_286.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,893 DEBUG:on stmt: branch $290pred, 292, 302
2024-07-15 06:11:46,893 DEBUG:==== SSA block rewrite pass on 292
2024-07-15 06:11:46,893 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B69B21D0>
2024-07-15 06:11:46,893 DEBUG:on stmt: $binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:46,893 DEBUG:on stmt: r.1 = $binop_imul296.2
2024-07-15 06:11:46,893 DEBUG:on stmt: jump 302
2024-07-15 06:11:46,893 DEBUG:==== SSA block rewrite pass on 302
2024-07-15 06:11:46,893 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B69B21D0>
2024-07-15 06:11:46,893 DEBUG:on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[282, 292])
2024-07-15 06:11:46,893 DEBUG:on stmt: $const304.1 = const(int, 1)
2024-07-15 06:11:46,893 DEBUG:on stmt: $binop_irshift306.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const304.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:46,893 DEBUG:on stmt: exp.2 = $binop_irshift306.2
2024-07-15 06:11:46,893 DEBUG:on stmt: $binop_imul316.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:46,893 DEBUG:on stmt: a.1.1 = $binop_imul316.5
2024-07-15 06:11:46,893 DEBUG:on stmt: $const324.7 = const(int, 0)
2024-07-15 06:11:46,893 DEBUG:on stmt: $326compare_op.8 = exp.2 != $const324.7
2024-07-15 06:11:46,893 DEBUG:on stmt: bool332 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,893 DEBUG:on stmt: $332pred = call bool332($326compare_op.8, func=bool332, args=(Var($326compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,893 DEBUG:on stmt: branch $332pred, 282, 334
2024-07-15 06:11:46,893 DEBUG:==== SSA block rewrite pass on 334
2024-07-15 06:11:46,893 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B69B21D0>
2024-07-15 06:11:46,893 DEBUG:on stmt: r.4 = phi(incoming_values=[Var(r.3, numbers.py:239), Var(r, numbers.py:216)], incoming_blocks=[302, 270])
2024-07-15 06:11:46,893 DEBUG:on stmt: bool336 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,893 DEBUG:on stmt: $336pred = call bool336(invert.2, func=bool336, args=(Var(invert.2, numbers.py:243),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,894 DEBUG:on stmt: branch $336pred, 338, 348
2024-07-15 06:11:46,894 DEBUG:==== SSA block rewrite pass on 338
2024-07-15 06:11:46,894 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B69B21D0>
2024-07-15 06:11:46,894 DEBUG:on stmt: $const338.0 = const(float, 1.0)
2024-07-15 06:11:46,894 DEBUG:on stmt: $binop_truediv342.2 = $const338.0 / r.4
2024-07-15 06:11:46,894 DEBUG:on stmt: $phi350.0 = $binop_truediv342.2
2024-07-15 06:11:46,894 DEBUG:first assign: $phi350.0
2024-07-15 06:11:46,894 DEBUG:replaced with: $phi350.0 = $binop_truediv342.2
2024-07-15 06:11:46,894 DEBUG:on stmt: jump 350
2024-07-15 06:11:46,894 DEBUG:==== SSA block rewrite pass on 348
2024-07-15 06:11:46,894 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B69B21D0>
2024-07-15 06:11:46,894 DEBUG:on stmt: $phi350.0 = r.4
2024-07-15 06:11:46,894 DEBUG:replaced with: $phi350.0.1 = r.4
2024-07-15 06:11:46,894 DEBUG:on stmt: jump 350
2024-07-15 06:11:46,894 DEBUG:==== SSA block rewrite pass on 350
2024-07-15 06:11:46,894 DEBUG:Running <numba.core.ssa._FreshVarHandler object at 0x00000221B69B21D0>
2024-07-15 06:11:46,894 DEBUG:on stmt: $350return_value.1 = cast(value=$phi350.0)
2024-07-15 06:11:46,894 DEBUG:on stmt: return $350return_value.1
2024-07-15 06:11:46,894 DEBUG:Replaced assignments: defaultdict(<class 'list'>,
            {338: [<numba.core.ir.Assign object at 0x00000221B5DBE250>],
             348: [<numba.core.ir.Assign object at 0x00000221B5DBEBD0>]})
2024-07-15 06:11:46,894 DEBUG:==== SSA block rewrite pass on 0
2024-07-15 06:11:46,894 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5FA68D0>
2024-07-15 06:11:46,894 DEBUG:on stmt: a = arg(0, name=a)
2024-07-15 06:11:46,894 DEBUG:on stmt: b = arg(1, name=b)
2024-07-15 06:11:46,894 DEBUG:on stmt: $8load_deref.1 = freevar(tp: float64)
2024-07-15 06:11:46,894 DEBUG:on stmt: $const10.2 = const(int, 1)
2024-07-15 06:11:46,894 DEBUG:on stmt: r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,894 DEBUG:on stmt: $30load_deref.5 = freevar(tp: float64)
2024-07-15 06:11:46,894 DEBUG:on stmt: a.1 = call $30load_deref.5(a, func=$30load_deref.5, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,894 DEBUG:on stmt: $const52.9 = const(int, 0)
2024-07-15 06:11:46,894 DEBUG:on stmt: $54compare_op.10 = b < $const52.9
2024-07-15 06:11:46,894 DEBUG:on stmt: bool60 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,894 DEBUG:on stmt: $60pred = call bool60($54compare_op.10, func=bool60, args=(Var($54compare_op.10, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,894 DEBUG:on stmt: branch $60pred, 62, 182
2024-07-15 06:11:46,894 DEBUG:==== SSA block rewrite pass on 62
2024-07-15 06:11:46,895 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5FA68D0>
2024-07-15 06:11:46,895 DEBUG:on stmt: invert = const(bool, True)
2024-07-15 06:11:46,895 DEBUG:on stmt: exp = unary(fn=<built-in function neg>, value=b)
2024-07-15 06:11:46,895 DEBUG:on stmt: $const74.4 = const(int, 0)
2024-07-15 06:11:46,895 DEBUG:on stmt: $76compare_op.5 = exp < $const74.4
2024-07-15 06:11:46,895 DEBUG:on stmt: bool82 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,895 DEBUG:on stmt: $82pred = call bool82($76compare_op.5, func=bool82, args=(Var($76compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,895 DEBUG:on stmt: branch $82pred, 84, 98
2024-07-15 06:11:46,895 DEBUG:==== SSA block rewrite pass on 84
2024-07-15 06:11:46,895 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5FA68D0>
2024-07-15 06:11:46,895 DEBUG:on stmt: $84load_global.0 = global(OverflowError: <class 'OverflowError'>)
2024-07-15 06:11:46,895 DEBUG:on stmt: <static> raise <class 'OverflowError'>
2024-07-15 06:11:46,895 DEBUG:==== SSA block rewrite pass on 98
2024-07-15 06:11:46,895 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5FA68D0>
2024-07-15 06:11:46,895 DEBUG:on stmt: $98load_deref.0 = freevar(is_integer: False)
2024-07-15 06:11:46,895 DEBUG:on stmt: bool100 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,895 DEBUG:on stmt: $100pred = call bool100($98load_deref.0, func=bool100, args=(Var($98load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,895 DEBUG:on stmt: jump 180
2024-07-15 06:11:46,895 DEBUG:==== SSA block rewrite pass on 180
2024-07-15 06:11:46,895 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5FA68D0>
2024-07-15 06:11:46,895 DEBUG:on stmt: jump 190
2024-07-15 06:11:46,895 DEBUG:==== SSA block rewrite pass on 182
2024-07-15 06:11:46,895 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5FA68D0>
2024-07-15 06:11:46,895 DEBUG:on stmt: invert.1 = const(bool, False)
2024-07-15 06:11:46,895 DEBUG:on stmt: exp.1 = b
2024-07-15 06:11:46,895 DEBUG:on stmt: jump 190
2024-07-15 06:11:46,895 DEBUG:==== SSA block rewrite pass on 190
2024-07-15 06:11:46,895 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5FA68D0>
2024-07-15 06:11:46,895 DEBUG:on stmt: exp.3 = phi(incoming_values=[Var(exp, numbers.py:220), Var(exp.1, numbers.py:233)], incoming_blocks=[180, 182])
2024-07-15 06:11:46,895 DEBUG:on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:219), Var(invert.1, numbers.py:232)], incoming_blocks=[180, 182])
2024-07-15 06:11:46,895 DEBUG:on stmt: $const192.1 = const(int, 65536)
2024-07-15 06:11:46,895 DEBUG:on stmt: $194compare_op.2 = exp.3 > $const192.1
2024-07-15 06:11:46,895 DEBUG:on stmt: bool200 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,895 DEBUG:on stmt: $200pred = call bool200($194compare_op.2, func=bool200, args=(Var($194compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,895 DEBUG:on stmt: branch $200pred, 202, 270
2024-07-15 06:11:46,896 DEBUG:==== SSA block rewrite pass on 202
2024-07-15 06:11:46,896 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5FA68D0>
2024-07-15 06:11:46,896 DEBUG:on stmt: $202load_global.0 = global(math: <module 'math' (built-in)>)
2024-07-15 06:11:46,896 DEBUG:on stmt: $214load_attr.2 = getattr(value=$202load_global.0, attr=pow)
2024-07-15 06:11:46,896 DEBUG:on stmt: $226load_global.4 = global(float: <class 'float'>)
2024-07-15 06:11:46,896 DEBUG:on stmt: $244call.7 = call $226load_global.4(b, func=$226load_global.4, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,896 DEBUG:on stmt: $258call.8 = call $214load_attr.2(a.1, $244call.7, func=$214load_attr.2, args=[Var(a.1, numbers.py:217), Var($244call.7, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,896 DEBUG:on stmt: $268return_value.9 = cast(value=$258call.8)
2024-07-15 06:11:46,896 DEBUG:on stmt: return $268return_value.9
2024-07-15 06:11:46,896 DEBUG:==== SSA block rewrite pass on 270
2024-07-15 06:11:46,896 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5FA68D0>
2024-07-15 06:11:46,896 DEBUG:on stmt: $const272.1 = const(int, 0)
2024-07-15 06:11:46,896 DEBUG:on stmt: $274compare_op.2 = exp.3 != $const272.1
2024-07-15 06:11:46,896 DEBUG:on stmt: bool280 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,896 DEBUG:on stmt: $280pred = call bool280($274compare_op.2, func=bool280, args=(Var($274compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,896 DEBUG:on stmt: branch $280pred, 282, 334
2024-07-15 06:11:46,896 DEBUG:==== SSA block rewrite pass on 282
2024-07-15 06:11:46,896 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5FA68D0>
2024-07-15 06:11:46,896 DEBUG:on stmt: exp.4 = phi(incoming_values=[Var(exp.2, numbers.py:240), Var(exp.3, numbers.py:234)], incoming_blocks=[302, 270])
2024-07-15 06:11:46,896 DEBUG:on stmt: a.1.2 = phi(incoming_values=[Var(a.1.1, numbers.py:241), Var(a.1, numbers.py:217)], incoming_blocks=[302, 270])
2024-07-15 06:11:46,896 DEBUG:on stmt: r.2 = phi(incoming_values=[Var(r.3, numbers.py:239), Var(r, numbers.py:216)], incoming_blocks=[302, 270])
2024-07-15 06:11:46,896 DEBUG:on stmt: $const284.1 = const(int, 1)
2024-07-15 06:11:46,896 DEBUG:on stmt: $binop_and_286.2 = exp.4 & $const284.1
2024-07-15 06:11:46,896 DEBUG:on stmt: bool290 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,896 DEBUG:on stmt: $290pred = call bool290($binop_and_286.2, func=bool290, args=(Var($binop_and_286.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,896 DEBUG:on stmt: branch $290pred, 292, 302
2024-07-15 06:11:46,896 DEBUG:==== SSA block rewrite pass on 292
2024-07-15 06:11:46,896 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5FA68D0>
2024-07-15 06:11:46,896 DEBUG:on stmt: $binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:46,896 DEBUG:on stmt: r.1 = $binop_imul296.2
2024-07-15 06:11:46,896 DEBUG:on stmt: jump 302
2024-07-15 06:11:46,896 DEBUG:==== SSA block rewrite pass on 302
2024-07-15 06:11:46,896 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5FA68D0>
2024-07-15 06:11:46,896 DEBUG:on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[282, 292])
2024-07-15 06:11:46,896 DEBUG:on stmt: $const304.1 = const(int, 1)
2024-07-15 06:11:46,896 DEBUG:on stmt: $binop_irshift306.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const304.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:46,896 DEBUG:on stmt: exp.2 = $binop_irshift306.2
2024-07-15 06:11:46,896 DEBUG:on stmt: $binop_imul316.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-07-15 06:11:46,897 DEBUG:on stmt: a.1.1 = $binop_imul316.5
2024-07-15 06:11:46,897 DEBUG:on stmt: $const324.7 = const(int, 0)
2024-07-15 06:11:46,897 DEBUG:on stmt: $326compare_op.8 = exp.2 != $const324.7
2024-07-15 06:11:46,897 DEBUG:on stmt: bool332 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,897 DEBUG:on stmt: $332pred = call bool332($326compare_op.8, func=bool332, args=(Var($326compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,897 DEBUG:on stmt: branch $332pred, 282, 334
2024-07-15 06:11:46,897 DEBUG:==== SSA block rewrite pass on 334
2024-07-15 06:11:46,897 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5FA68D0>
2024-07-15 06:11:46,897 DEBUG:on stmt: r.4 = phi(incoming_values=[Var(r.3, numbers.py:239), Var(r, numbers.py:216)], incoming_blocks=[302, 270])
2024-07-15 06:11:46,897 DEBUG:on stmt: bool336 = global(bool: <class 'bool'>)
2024-07-15 06:11:46,897 DEBUG:on stmt: $336pred = call bool336(invert.2, func=bool336, args=(Var(invert.2, numbers.py:243),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:46,897 DEBUG:on stmt: branch $336pred, 338, 348
2024-07-15 06:11:46,897 DEBUG:==== SSA block rewrite pass on 338
2024-07-15 06:11:46,897 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5FA68D0>
2024-07-15 06:11:46,897 DEBUG:on stmt: $const338.0 = const(float, 1.0)
2024-07-15 06:11:46,897 DEBUG:on stmt: $binop_truediv342.2 = $const338.0 / r.4
2024-07-15 06:11:46,897 DEBUG:on stmt: $phi350.0 = $binop_truediv342.2
2024-07-15 06:11:46,897 DEBUG:on stmt: jump 350
2024-07-15 06:11:46,897 DEBUG:==== SSA block rewrite pass on 348
2024-07-15 06:11:46,897 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5FA68D0>
2024-07-15 06:11:46,897 DEBUG:on stmt: $phi350.0.1 = r.4
2024-07-15 06:11:46,897 DEBUG:on stmt: jump 350
2024-07-15 06:11:46,897 DEBUG:==== SSA block rewrite pass on 350
2024-07-15 06:11:46,897 DEBUG:Running <numba.core.ssa._FixSSAVars object at 0x00000221B5FA68D0>
2024-07-15 06:11:46,897 DEBUG:on stmt: $350return_value.1 = cast(value=$phi350.0)
2024-07-15 06:11:46,897 DEBUG:find_def var='$phi350.0' stmt=$350return_value.1 = cast(value=$phi350.0)
2024-07-15 06:11:46,897 DEBUG:find_def_from_top label 350
2024-07-15 06:11:46,897 DEBUG:insert phi node $phi350.0.2 = phi(incoming_values=[], incoming_blocks=[]) at 350
2024-07-15 06:11:46,897 DEBUG:find_def_from_bottom label 338
2024-07-15 06:11:46,897 DEBUG:incoming_def $phi350.0 = $binop_truediv342.2
2024-07-15 06:11:46,897 DEBUG:find_def_from_bottom label 348
2024-07-15 06:11:46,897 DEBUG:incoming_def $phi350.0.1 = r.4
2024-07-15 06:11:46,897 DEBUG:replaced with: $350return_value.1 = cast(value=$phi350.0.2)
2024-07-15 06:11:46,897 DEBUG:on stmt: return $350return_value.1
2024-07-15 06:11:47,045 DEBUG:bytecode dump:
>          0	NOP(arg=None, lineno=2504)
           2	RESUME(arg=0, lineno=2504)
           4	LOAD_GLOBAL(arg=1, lineno=2508)
          16	LOAD_ATTR(arg=1, lineno=2508)
          26	LOAD_FAST(arg=0, lineno=2508)
          28	PRECALL(arg=1, lineno=2508)
          32	CALL(arg=1, lineno=2508)
          42	LOAD_CONST(arg=1, lineno=2508)
          44	LOAD_GLOBAL(arg=1, lineno=2508)
          56	LOAD_ATTR(arg=2, lineno=2508)
          66	LOAD_FAST(arg=0, lineno=2508)
          68	PRECALL(arg=1, lineno=2508)
          72	CALL(arg=1, lineno=2508)
          82	BINARY_OP(arg=5, lineno=2508)
          86	BINARY_OP(arg=0, lineno=2508)
          90	RETURN_VALUE(arg=None, lineno=2508)
2024-07-15 06:11:47,045 DEBUG:pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-15 06:11:47,046 DEBUG:stack: []
2024-07-15 06:11:47,046 DEBUG:state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-15 06:11:47,046 DEBUG:dispatch pc=0, inst=NOP(arg=None, lineno=2504)
2024-07-15 06:11:47,046 DEBUG:stack []
2024-07-15 06:11:47,046 DEBUG:dispatch pc=2, inst=RESUME(arg=0, lineno=2504)
2024-07-15 06:11:47,046 DEBUG:stack []
2024-07-15 06:11:47,046 DEBUG:dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=2508)
2024-07-15 06:11:47,046 DEBUG:stack []
2024-07-15 06:11:47,046 DEBUG:dispatch pc=16, inst=LOAD_ATTR(arg=1, lineno=2508)
2024-07-15 06:11:47,046 DEBUG:stack ['$null$4.1', '$4load_global.0']
2024-07-15 06:11:47,046 DEBUG:dispatch pc=26, inst=LOAD_FAST(arg=0, lineno=2508)
2024-07-15 06:11:47,046 DEBUG:stack ['$null$4.1', '$16load_attr.2']
2024-07-15 06:11:47,046 DEBUG:dispatch pc=28, inst=PRECALL(arg=1, lineno=2508)
2024-07-15 06:11:47,046 DEBUG:stack ['$null$4.1', '$16load_attr.2', '$x26.3']
2024-07-15 06:11:47,046 DEBUG:dispatch pc=32, inst=CALL(arg=1, lineno=2508)
2024-07-15 06:11:47,046 DEBUG:stack ['$null$4.1', '$16load_attr.2', '$x26.3']
2024-07-15 06:11:47,046 DEBUG:dispatch pc=42, inst=LOAD_CONST(arg=1, lineno=2508)
2024-07-15 06:11:47,046 DEBUG:stack ['$32call.4']
2024-07-15 06:11:47,046 DEBUG:dispatch pc=44, inst=LOAD_GLOBAL(arg=1, lineno=2508)
2024-07-15 06:11:47,046 DEBUG:stack ['$32call.4', '$const42.5']
2024-07-15 06:11:47,046 DEBUG:dispatch pc=56, inst=LOAD_ATTR(arg=2, lineno=2508)
2024-07-15 06:11:47,046 DEBUG:stack ['$32call.4', '$const42.5', '$null$44.7', '$44load_global.6']
2024-07-15 06:11:47,046 DEBUG:dispatch pc=66, inst=LOAD_FAST(arg=0, lineno=2508)
2024-07-15 06:11:47,046 DEBUG:stack ['$32call.4', '$const42.5', '$null$44.7', '$56load_attr.8']
2024-07-15 06:11:47,046 DEBUG:dispatch pc=68, inst=PRECALL(arg=1, lineno=2508)
2024-07-15 06:11:47,046 DEBUG:stack ['$32call.4', '$const42.5', '$null$44.7', '$56load_attr.8', '$x66.9']
2024-07-15 06:11:47,046 DEBUG:dispatch pc=72, inst=CALL(arg=1, lineno=2508)
2024-07-15 06:11:47,046 DEBUG:stack ['$32call.4', '$const42.5', '$null$44.7', '$56load_attr.8', '$x66.9']
2024-07-15 06:11:47,046 DEBUG:dispatch pc=82, inst=BINARY_OP(arg=5, lineno=2508)
2024-07-15 06:11:47,046 DEBUG:stack ['$32call.4', '$const42.5', '$72call.10']
2024-07-15 06:11:47,047 DEBUG:dispatch pc=86, inst=BINARY_OP(arg=0, lineno=2508)
2024-07-15 06:11:47,047 DEBUG:stack ['$32call.4', '$binop_mul82.11']
2024-07-15 06:11:47,047 DEBUG:dispatch pc=90, inst=RETURN_VALUE(arg=None, lineno=2508)
2024-07-15 06:11:47,047 DEBUG:stack ['$binop_add86.12']
2024-07-15 06:11:47,047 DEBUG:end state. edges=[]
2024-07-15 06:11:47,047 DEBUG:-------------------------Prune PHIs-------------------------
2024-07-15 06:11:47,047 DEBUG:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-07-15 06:11:47,047 DEBUG:defmap: {}
2024-07-15 06:11:47,047 DEBUG:phismap: defaultdict(<class 'set'>, {})
2024-07-15 06:11:47,047 DEBUG:changing phismap: defaultdict(<class 'set'>, {})
2024-07-15 06:11:47,047 DEBUG:keep phismap: {}
2024-07-15 06:11:47,047 DEBUG:new_out: defaultdict(<class 'dict'>, {})
2024-07-15 06:11:47,047 DEBUG:----------------------DONE Prune PHIs-----------------------
2024-07-15 06:11:47,047 DEBUG:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (6, {}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'item': '$4load_global.0', 'res': '$16load_attr.2'}), (18, {}), (20, {}), (22, {}), (24, {}), (26, {'res': '$x26.3'}), (28, {}), (30, {}), (32, {'func': '$16load_attr.2', 'args': ['$x26.3'], 'kw_names': None, 'res': '$32call.4'}), (34, {}), (36, {}), (38, {}), (40, {}), (42, {'res': '$const42.5'}), (44, {'idx': 0, 'res': '$44load_global.6'}), (46, {}), (48, {}), (50, {}), (52, {}), (54, {}), (56, {'item': '$44load_global.6', 'res': '$56load_attr.8'}), (58, {}), (60, {}), (62, {}), (64, {}), (66, {'res': '$x66.9'}), (68, {}), (70, {}), (72, {'func': '$56load_attr.8', 'args': ['$x66.9'], 'kw_names': None, 'res': '$72call.10'}), (74, {}), (76, {}), (78, {}), (80, {}), (82, {'op': '*', 'lhs': '$const42.5', 'rhs': '$72call.10', 'res': '$binop_mul82.11'}), (84, {}), (86, {'op': '+', 'lhs': '$32call.4', 'rhs': '$binop_mul82.11', 'res': '$binop_add86.12'}), (88, {}), (90, {'retval': '$binop_add86.12', 'castval': '$90return_value.13'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-15 06:11:47,048 DEBUG:label 0:
    x = arg(0, name=x)                       ['x']
    $4load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$4load_global.0']
    $16load_attr.2 = getattr(value=$4load_global.0, attr=cos) ['$16load_attr.2', '$4load_global.0']
    $32call.4 = call $16load_attr.2(x, func=$16load_attr.2, args=[Var(x, utils.py:2504)], kws=(), vararg=None, varkwarg=None, target=None) ['$16load_attr.2', '$32call.4', 'x']
    $const42.5 = const(complex, 1j)          ['$const42.5']
    $44load_global.6 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$44load_global.6']
    $56load_attr.8 = getattr(value=$44load_global.6, attr=sin) ['$44load_global.6', '$56load_attr.8']
    $72call.10 = call $56load_attr.8(x, func=$56load_attr.8, args=[Var(x, utils.py:2504)], kws=(), vararg=None, varkwarg=None, target=None) ['$56load_attr.8', '$72call.10', 'x']
    $binop_mul82.11 = $const42.5 * $72call.10 ['$72call.10', '$binop_mul82.11', '$const42.5']
    $binop_add86.12 = $32call.4 + $binop_mul82.11 ['$32call.4', '$binop_add86.12', '$binop_mul82.11']
    $90return_value.13 = cast(value=$binop_add86.12) ['$90return_value.13', '$binop_add86.12']
    return $90return_value.13                ['$90return_value.13']

2024-07-15 06:11:47,055 DEBUG:==== SSA block analysis pass on 0
2024-07-15 06:11:47,055 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B614A990>
2024-07-15 06:11:47,055 DEBUG:on stmt: x = arg(0, name=x)
2024-07-15 06:11:47,055 DEBUG:on stmt: $4load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:47,055 DEBUG:on stmt: $16load_attr.2 = getattr(value=$4load_global.0, attr=cos)
2024-07-15 06:11:47,055 DEBUG:on stmt: $32call.4 = call $16load_attr.2(x, func=$16load_attr.2, args=[Var(x, utils.py:2504)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:47,055 DEBUG:on stmt: $const42.5 = const(complex, 1j)
2024-07-15 06:11:47,057 DEBUG:on stmt: $44load_global.6 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:47,057 DEBUG:on stmt: $56load_attr.8 = getattr(value=$44load_global.6, attr=sin)
2024-07-15 06:11:47,057 DEBUG:on stmt: $72call.10 = call $56load_attr.8(x, func=$56load_attr.8, args=[Var(x, utils.py:2504)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:47,057 DEBUG:on stmt: $binop_mul82.11 = $const42.5 * $72call.10
2024-07-15 06:11:47,057 DEBUG:on stmt: $binop_add86.12 = $32call.4 + $binop_mul82.11
2024-07-15 06:11:47,057 DEBUG:on stmt: $90return_value.13 = cast(value=$binop_add86.12)
2024-07-15 06:11:47,057 DEBUG:on stmt: return $90return_value.13
2024-07-15 06:11:47,057 DEBUG:defs defaultdict(<class 'list'>,
            {'$16load_attr.2': [(<numba.core.ir.Assign object at 0x00000221B7B6EE50>,
                                 0)],
             '$32call.4': [(<numba.core.ir.Assign object at 0x00000221B7B6EA10>,
                            0)],
             '$44load_global.6': [(<numba.core.ir.Assign object at 0x00000221B7B6C3D0>,
                                   0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x00000221B7B6E610>,
                                  0)],
             '$56load_attr.8': [(<numba.core.ir.Assign object at 0x00000221B7B6FA50>,
                                 0)],
             '$72call.10': [(<numba.core.ir.Assign object at 0x00000221B5C8EF50>,
                             0)],
             '$90return_value.13': [(<numba.core.ir.Assign object at 0x00000221B5A5DB90>,
                                     0)],
             '$binop_add86.12': [(<numba.core.ir.Assign object at 0x00000221B5A5F710>,
                                  0)],
             '$binop_mul82.11': [(<numba.core.ir.Assign object at 0x00000221B5D65F50>,
                                  0)],
             '$const42.5': [(<numba.core.ir.Assign object at 0x00000221B7B6C810>,
                             0)],
             'x': [(<numba.core.ir.Assign object at 0x00000221B7B6E590>, 0)]})
2024-07-15 06:11:47,057 DEBUG:SSA violators <numba.core.utils.OrderedSet object at 0x00000221B5E09850>
2024-07-15 06:11:47,153 DEBUG:bytecode dump:
>          0	NOP(arg=None, lineno=2504)
           2	RESUME(arg=0, lineno=2504)
           4	LOAD_GLOBAL(arg=1, lineno=2508)
          16	LOAD_ATTR(arg=1, lineno=2508)
          26	LOAD_FAST(arg=0, lineno=2508)
          28	PRECALL(arg=1, lineno=2508)
          32	CALL(arg=1, lineno=2508)
          42	LOAD_CONST(arg=1, lineno=2508)
          44	LOAD_GLOBAL(arg=1, lineno=2508)
          56	LOAD_ATTR(arg=2, lineno=2508)
          66	LOAD_FAST(arg=0, lineno=2508)
          68	PRECALL(arg=1, lineno=2508)
          72	CALL(arg=1, lineno=2508)
          82	BINARY_OP(arg=5, lineno=2508)
          86	BINARY_OP(arg=0, lineno=2508)
          90	RETURN_VALUE(arg=None, lineno=2508)
2024-07-15 06:11:47,153 DEBUG:pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-15 06:11:47,153 DEBUG:stack: []
2024-07-15 06:11:47,153 DEBUG:state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-15 06:11:47,153 DEBUG:dispatch pc=0, inst=NOP(arg=None, lineno=2504)
2024-07-15 06:11:47,153 DEBUG:stack []
2024-07-15 06:11:47,153 DEBUG:dispatch pc=2, inst=RESUME(arg=0, lineno=2504)
2024-07-15 06:11:47,153 DEBUG:stack []
2024-07-15 06:11:47,153 DEBUG:dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=2508)
2024-07-15 06:11:47,153 DEBUG:stack []
2024-07-15 06:11:47,153 DEBUG:dispatch pc=16, inst=LOAD_ATTR(arg=1, lineno=2508)
2024-07-15 06:11:47,153 DEBUG:stack ['$null$4.1', '$4load_global.0']
2024-07-15 06:11:47,153 DEBUG:dispatch pc=26, inst=LOAD_FAST(arg=0, lineno=2508)
2024-07-15 06:11:47,153 DEBUG:stack ['$null$4.1', '$16load_attr.2']
2024-07-15 06:11:47,153 DEBUG:dispatch pc=28, inst=PRECALL(arg=1, lineno=2508)
2024-07-15 06:11:47,153 DEBUG:stack ['$null$4.1', '$16load_attr.2', '$x26.3']
2024-07-15 06:11:47,153 DEBUG:dispatch pc=32, inst=CALL(arg=1, lineno=2508)
2024-07-15 06:11:47,153 DEBUG:stack ['$null$4.1', '$16load_attr.2', '$x26.3']
2024-07-15 06:11:47,153 DEBUG:dispatch pc=42, inst=LOAD_CONST(arg=1, lineno=2508)
2024-07-15 06:11:47,153 DEBUG:stack ['$32call.4']
2024-07-15 06:11:47,153 DEBUG:dispatch pc=44, inst=LOAD_GLOBAL(arg=1, lineno=2508)
2024-07-15 06:11:47,153 DEBUG:stack ['$32call.4', '$const42.5']
2024-07-15 06:11:47,154 DEBUG:dispatch pc=56, inst=LOAD_ATTR(arg=2, lineno=2508)
2024-07-15 06:11:47,154 DEBUG:stack ['$32call.4', '$const42.5', '$null$44.7', '$44load_global.6']
2024-07-15 06:11:47,154 DEBUG:dispatch pc=66, inst=LOAD_FAST(arg=0, lineno=2508)
2024-07-15 06:11:47,154 DEBUG:stack ['$32call.4', '$const42.5', '$null$44.7', '$56load_attr.8']
2024-07-15 06:11:47,154 DEBUG:dispatch pc=68, inst=PRECALL(arg=1, lineno=2508)
2024-07-15 06:11:47,154 DEBUG:stack ['$32call.4', '$const42.5', '$null$44.7', '$56load_attr.8', '$x66.9']
2024-07-15 06:11:47,154 DEBUG:dispatch pc=72, inst=CALL(arg=1, lineno=2508)
2024-07-15 06:11:47,154 DEBUG:stack ['$32call.4', '$const42.5', '$null$44.7', '$56load_attr.8', '$x66.9']
2024-07-15 06:11:47,154 DEBUG:dispatch pc=82, inst=BINARY_OP(arg=5, lineno=2508)
2024-07-15 06:11:47,154 DEBUG:stack ['$32call.4', '$const42.5', '$72call.10']
2024-07-15 06:11:47,154 DEBUG:dispatch pc=86, inst=BINARY_OP(arg=0, lineno=2508)
2024-07-15 06:11:47,154 DEBUG:stack ['$32call.4', '$binop_mul82.11']
2024-07-15 06:11:47,154 DEBUG:dispatch pc=90, inst=RETURN_VALUE(arg=None, lineno=2508)
2024-07-15 06:11:47,154 DEBUG:stack ['$binop_add86.12']
2024-07-15 06:11:47,154 DEBUG:end state. edges=[]
2024-07-15 06:11:47,154 DEBUG:-------------------------Prune PHIs-------------------------
2024-07-15 06:11:47,154 DEBUG:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-07-15 06:11:47,154 DEBUG:defmap: {}
2024-07-15 06:11:47,154 DEBUG:phismap: defaultdict(<class 'set'>, {})
2024-07-15 06:11:47,154 DEBUG:changing phismap: defaultdict(<class 'set'>, {})
2024-07-15 06:11:47,154 DEBUG:keep phismap: {}
2024-07-15 06:11:47,154 DEBUG:new_out: defaultdict(<class 'dict'>, {})
2024-07-15 06:11:47,154 DEBUG:----------------------DONE Prune PHIs-----------------------
2024-07-15 06:11:47,154 DEBUG:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (6, {}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'item': '$4load_global.0', 'res': '$16load_attr.2'}), (18, {}), (20, {}), (22, {}), (24, {}), (26, {'res': '$x26.3'}), (28, {}), (30, {}), (32, {'func': '$16load_attr.2', 'args': ['$x26.3'], 'kw_names': None, 'res': '$32call.4'}), (34, {}), (36, {}), (38, {}), (40, {}), (42, {'res': '$const42.5'}), (44, {'idx': 0, 'res': '$44load_global.6'}), (46, {}), (48, {}), (50, {}), (52, {}), (54, {}), (56, {'item': '$44load_global.6', 'res': '$56load_attr.8'}), (58, {}), (60, {}), (62, {}), (64, {}), (66, {'res': '$x66.9'}), (68, {}), (70, {}), (72, {'func': '$56load_attr.8', 'args': ['$x66.9'], 'kw_names': None, 'res': '$72call.10'}), (74, {}), (76, {}), (78, {}), (80, {}), (82, {'op': '*', 'lhs': '$const42.5', 'rhs': '$72call.10', 'res': '$binop_mul82.11'}), (84, {}), (86, {'op': '+', 'lhs': '$32call.4', 'rhs': '$binop_mul82.11', 'res': '$binop_add86.12'}), (88, {}), (90, {'retval': '$binop_add86.12', 'castval': '$90return_value.13'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-15 06:11:47,155 DEBUG:label 0:
    x = arg(0, name=x)                       ['x']
    $4load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$4load_global.0']
    $16load_attr.2 = getattr(value=$4load_global.0, attr=cos) ['$16load_attr.2', '$4load_global.0']
    $32call.4 = call $16load_attr.2(x, func=$16load_attr.2, args=[Var(x, utils.py:2504)], kws=(), vararg=None, varkwarg=None, target=None) ['$16load_attr.2', '$32call.4', 'x']
    $const42.5 = const(complex, 1j)          ['$const42.5']
    $44load_global.6 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$44load_global.6']
    $56load_attr.8 = getattr(value=$44load_global.6, attr=sin) ['$44load_global.6', '$56load_attr.8']
    $72call.10 = call $56load_attr.8(x, func=$56load_attr.8, args=[Var(x, utils.py:2504)], kws=(), vararg=None, varkwarg=None, target=None) ['$56load_attr.8', '$72call.10', 'x']
    $binop_mul82.11 = $const42.5 * $72call.10 ['$72call.10', '$binop_mul82.11', '$const42.5']
    $binop_add86.12 = $32call.4 + $binop_mul82.11 ['$32call.4', '$binop_add86.12', '$binop_mul82.11']
    $90return_value.13 = cast(value=$binop_add86.12) ['$90return_value.13', '$binop_add86.12']
    return $90return_value.13                ['$90return_value.13']

2024-07-15 06:11:47,162 DEBUG:==== SSA block analysis pass on 0
2024-07-15 06:11:47,162 DEBUG:Running <numba.core.ssa._GatherDefsHandler object at 0x00000221B6915850>
2024-07-15 06:11:47,162 DEBUG:on stmt: x = arg(0, name=x)
2024-07-15 06:11:47,162 DEBUG:on stmt: $4load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:47,162 DEBUG:on stmt: $16load_attr.2 = getattr(value=$4load_global.0, attr=cos)
2024-07-15 06:11:47,162 DEBUG:on stmt: $32call.4 = call $16load_attr.2(x, func=$16load_attr.2, args=[Var(x, utils.py:2504)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:47,162 DEBUG:on stmt: $const42.5 = const(complex, 1j)
2024-07-15 06:11:47,162 DEBUG:on stmt: $44load_global.6 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2024-07-15 06:11:47,162 DEBUG:on stmt: $56load_attr.8 = getattr(value=$44load_global.6, attr=sin)
2024-07-15 06:11:47,162 DEBUG:on stmt: $72call.10 = call $56load_attr.8(x, func=$56load_attr.8, args=[Var(x, utils.py:2504)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-15 06:11:47,162 DEBUG:on stmt: $binop_mul82.11 = $const42.5 * $72call.10
2024-07-15 06:11:47,162 DEBUG:on stmt: $binop_add86.12 = $32call.4 + $binop_mul82.11
2024-07-15 06:11:47,162 DEBUG:on stmt: $90return_value.13 = cast(value=$binop_add86.12)
2024-07-15 06:11:47,162 DEBUG:on stmt: return $90return_value.13
2024-07-15 06:11:47,163 DEBUG:defs defaultdict(<class 'list'>,
            {'$16load_attr.2': [(<numba.core.ir.Assign object at 0x00000221B5EEB050>,
                                 0)],
             '$32call.4': [(<numba.core.ir.Assign object at 0x00000221B5EEB810>,
                            0)],
             '$44load_global.6': [(<numba.core.ir.Assign object at 0x00000221B5EE99D0>,
                                   0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x00000221B5EEB690>,
                                  0)],
             '$56load_attr.8': [(<numba.core.ir.Assign object at 0x00000221B5EEACD0>,
                                 0)],
             '$72call.10': [(<numba.core.ir.Assign object at 0x00000221B5EEA090>,
                             0)],
             '$90return_value.13': [(<numba.core.ir.Assign object at 0x00000221B6877E10>,
                                     0)],
             '$binop_add86.12': [(<numba.core.ir.Assign object at 0x00000221B5EE9D10>,
                                  0)],
             '$binop_mul82.11': [(<numba.core.ir.Assign object at 0x00000221B5EE8A10>,
                                  0)],
             '$const42.5': [(<numba.core.ir.Assign object at 0x00000221B5EE9910>,
                             0)],
             'x': [(<numba.core.ir.Assign object at 0x00000221B5EEB650>, 0)]})
2024-07-15 06:11:47,163 DEBUG:SSA violators <numba.core.utils.OrderedSet object at 0x00000221B5EEB910>
2024-07-15 06:11:47,236 INFO:Isolator created.
2024-07-15 06:11:52,564 INFO:Isolation complete.
2024-07-15 06:11:52,565 INFO:127.0.0.1 - - [15/Jul/2024 06:11:52] "POST /isolate HTTP/1.1" 200 -
2024-07-15 06:22:49,135 INFO:demucs is already installed.
2024-07-15 06:22:49,135 INFO:All required packages are already installed.
2024-07-15 06:22:49,135 INFO:Starting server...
2024-07-15 06:22:49,155 INFO:[31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2024-07-15 06:22:49,155 INFO:[33mPress CTRL+C to quit[0m
2024-07-15 06:22:49,157 INFO: * Restarting with stat
2024-07-15 06:22:49,522 INFO:demucs is already installed.
2024-07-15 06:22:49,522 INFO:All required packages are already installed.
2024-07-15 06:22:49,522 INFO:Starting server...
2024-07-15 06:22:49,528 WARNING: * Debugger is active!
2024-07-15 06:22:49,566 INFO: * Debugger PIN: 124-101-132
2024-07-15 06:22:55,227 INFO:Isolating audio...
2024-07-15 06:22:55,227 DEBUG:Request data: {'file_path': 'C:\\Users\\tjerf\\AppData\\Local\\Temp\\ff1e92f1-ee2e-407f-8098-0f99214b4b84.wav', 'model_name': 'htdemucs', 'device': 'cuda', 'shifts': 0, 'two_stems': None, 'output_folder': 'C:\\Users\\tjerf\\AppData\\Local\\Temp/isolated_isolated'}
2024-07-15 06:22:57,773 DEBUG:bytecode dump:
>          0	NOP(arg=None, lineno=1141)
           2	RESUME(arg=0, lineno=1141)
           4	LOAD_FAST(arg=0, lineno=1144)
           6	LOAD_CONST(arg=1, lineno=1144)
           8	BINARY_SUBSCR(arg=None, lineno=1144)
          18	STORE_FAST(arg=3, lineno=1144)
          20	LOAD_FAST(arg=1, lineno=1145)
          22	UNARY_NEGATIVE(arg=None, lineno=1145)
          24	LOAD_FAST(arg=3, lineno=1145)
          26	SWAP(arg=2, lineno=1145)
          28	COPY(arg=2, lineno=1145)
          30	COMPARE_OP(arg=1, lineno=1145)
          36	POP_JUMP_FORWARD_IF_FALSE(arg=6, lineno=1145)
          38	LOAD_FAST(arg=1, lineno=1145)
          40	COMPARE_OP(arg=1, lineno=1145)
          46	POP_JUMP_FORWARD_IF_FALSE(arg=5, lineno=1145)
          48	JUMP_FORWARD(arg=2, lineno=1145)
>         50	POP_TOP(arg=None, lineno=1145)
          52	JUMP_FORWARD(arg=2, lineno=1145)
>         54	LOAD_CONST(arg=1, lineno=1146)
          56	STORE_FAST(arg=3, lineno=1146)
>         58	LOAD_FAST(arg=0, lineno=1148)
          60	LOAD_CONST(arg=2, lineno=1148)
          62	BINARY_SUBSCR(arg=None, lineno=1148)
          72	STORE_FAST(arg=4, lineno=1148)
          74	LOAD_FAST(arg=1, lineno=1149)
          76	UNARY_NEGATIVE(arg=None, lineno=1149)
          78	LOAD_FAST(arg=4, lineno=1149)
          80	SWAP(arg=2, lineno=1149)
          82	COPY(arg=2, lineno=1149)
          84	COMPARE_OP(arg=1, lineno=1149)
          90	POP_JUMP_FORWARD_IF_FALSE(arg=6, lineno=1149)
          92	LOAD_FAST(arg=1, lineno=1149)
          94	COMPARE_OP(arg=1, lineno=1149)
         100	POP_JUMP_FORWARD_IF_FALSE(arg=5, lineno=1149)
         102	JUMP_FORWARD(arg=2, lineno=1149)
>        104	POP_TOP(arg=None, lineno=1149)
         106	JUMP_FORWARD(arg=2, lineno=1149)
>        108	LOAD_CONST(arg=1, lineno=1150)
         110	STORE_FAST(arg=4, lineno=1150)
>        112	LOAD_FAST(arg=2, lineno=1152)
         114	POP_JUMP_FORWARD_IF_FALSE(arg=42, lineno=1152)
         116	LOAD_GLOBAL(arg=1, lineno=1153)
         128	LOAD_ATTR(arg=1, lineno=1153)
         138	LOAD_FAST(arg=3, lineno=1153)
         140	PRECALL(arg=1, lineno=1153)
         144	CALL(arg=1, lineno=1153)
         154	LOAD_GLOBAL(arg=1, lineno=1153)
         166	LOAD_ATTR(arg=1, lineno=1153)
         176	LOAD_FAST(arg=4, lineno=1153)
         178	PRECALL(arg=1, lineno=1153)
         182	CALL(arg=1, lineno=1153)
         192	COMPARE_OP(arg=3, lineno=1153)
         198	RETURN_VALUE(arg=None, lineno=1153)
>        200	LOAD_GLOBAL(arg=1, lineno=1155)
         212	LOAD_ATTR(arg=2, lineno=1155)
         222	LOAD_FAST(arg=3, lineno=1155)
         224	PRECALL(arg=1, lineno=1155)
         228	CALL(arg=1, lineno=1155)
         238	LOAD_GLOBAL(arg=1, lineno=1155)
         250	LOAD_ATTR(arg=2, lineno=1155)
         260	LOAD_FAST(arg=4, lineno=1155)
         262	PRECALL(arg=1, lineno=1155)
         266	CALL(arg=1, lineno=1155)
         276	COMPARE_OP(arg=3, lineno=1155)
         282	RETURN_VALUE(arg=None, lineno=1155)
2024-07-15 06:22:57,774 DEBUG:pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-15 06:22:57,775 DEBUG:stack: []
2024-07-15 06:22:57,775 DEBUG:state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-15 06:22:57,775 DEBUG:dispatch pc=0, inst=NOP(arg=None, lineno=1141)
2024-07-15 06:22:57,775 DEBUG:stack []
2024-07-15 06:22:57,775 DEBUG:dispatch pc=2, inst=RESUME(arg=0, lineno=1141)
2024-07-15 06:22:57,775 DEBUG:stack []
2024-07-15 06:22:57,775 DEBUG:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1144)
2024-07-15 06:22:57,775 DEBUG:stack []
2024-07-15 06:22:57,775 DEBUG:dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1144)
2024-07-15 06:22:57,775 DEBUG:stack ['$x4.0']
2024-07-15 06:22:57,775 DEBUG:dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1144)
2024-07-15 06:22:57,775 DEBUG:stack ['$x4.0', '$const6.1']
2024-07-15 06:22:57,775 DEBUG:dispatch pc=18, inst=STORE_FAST(arg=3, lineno=1144)
2024-07-15 06:22:57,775 DEBUG:stack ['$8binary_subscr.2']
2024-07-15 06:22:57,775 DEBUG:dispatch pc=20, inst=LOAD_FAST(arg=1, lineno=1145)
2024-07-15 06:22:57,775 DEBUG:stack []
2024-07-15 06:22:57,775 DEBUG:dispatch pc=22, inst=UNARY_NEGATIVE(arg=None, lineno=1145)
2024-07-15 06:22:57,775 DEBUG:stack ['$threshold20.3']
2024-07-15 06:22:57,775 DEBUG:dispatch pc=24, inst=LOAD_FAST(arg=3, lineno=1145)
2024-07-15 06:22:57,775 DEBUG:stack ['$22unary_negative.4']
2024-07-15 06:22:57,775 DEBUG:dispatch pc=26, inst=SWAP(arg=2, lineno=1145)
2024-07-15 06:22:57,775 DEBUG:stack ['$22unary_negative.4', '$x024.5']
2024-07-15 06:22:57,775 DEBUG:dispatch pc=28, inst=COPY(arg=2, lineno=1145)
2024-07-15 06:22:57,775 DEBUG:stack ['$x024.5', '$22unary_negative.4']
2024-07-15 06:22:57,776 DEBUG:dispatch pc=30, inst=COMPARE_OP(arg=1, lineno=1145)
2024-07-15 06:22:57,776 DEBUG:stack ['$x024.5', '$22unary_negative.4', '$x024.5']
2024-07-15 06:22:57,776 DEBUG:dispatch pc=36, inst=POP_JUMP_FORWARD_IF_FALSE(arg=6, lineno=1145)
2024-07-15 06:22:57,776 DEBUG:stack ['$x024.5', '$30compare_op.6']
2024-07-15 06:22:57,776 DEBUG:end state. edges=[Edge(pc=38, stack=('$x024.5',), blockstack=(), npush=0), Edge(pc=50, stack=('$x024.5',), blockstack=(), npush=0)]
2024-07-15 06:22:57,776 DEBUG:pending: deque([State(pc_initial=38 nstack_initial=1), State(pc_initial=50 nstack_initial=1)])
2024-07-15 06:22:57,776 DEBUG:stack: ['$phi38.0']
2024-07-15 06:22:57,776 DEBUG:state.pc_initial: State(pc_initial=38 nstack_initial=1)
2024-07-15 06:22:57,776 DEBUG:dispatch pc=38, inst=LOAD_FAST(arg=1, lineno=1145)
2024-07-15 06:22:57,776 DEBUG:stack ['$phi38.0']
2024-07-15 06:22:57,777 DEBUG:dispatch pc=40, inst=COMPARE_OP(arg=1, lineno=1145)
2024-07-15 06:22:57,777 DEBUG:stack ['$phi38.0', '$threshold38.1']
2024-07-15 06:22:57,777 DEBUG:dispatch pc=46, inst=POP_JUMP_FORWARD_IF_FALSE(arg=5, lineno=1145)
2024-07-15 06:22:57,777 DEBUG:stack ['$40compare_op.2']
2024-07-15 06:22:57,777 DEBUG:end state. edges=[Edge(pc=48, stack=(), blockstack=(), npush=0), Edge(pc=58, stack=(), blockstack=(), npush=0)]
2024-07-15 06:22:57,777 DEBUG:pending: deque([State(pc_initial=50 nstack_initial=1), State(pc_initial=48 nstack_initial=0), State(pc_initial=58 nstack_initial=0)])
2024-07-15 06:22:57,777 DEBUG:stack: ['$phi50.0']
2024-07-15 06:22:57,777 DEBUG:state.pc_initial: State(pc_initial=50 nstack_initial=1)
2024-07-15 06:22:57,777 DEBUG:dispatch pc=50, inst=POP_TOP(arg=None, lineno=1145)
2024-07-15 06:22:57,777 DEBUG:stack ['$phi50.0']
2024-07-15 06:22:57,777 DEBUG:dispatch pc=52, inst=JUMP_FORWARD(arg=2, lineno=1145)
2024-07-15 06:22:57,777 DEBUG:stack []
2024-07-15 06:22:57,777 DEBUG:end state. edges=[Edge(pc=58, stack=(), blockstack=(), npush=0)]
2024-07-15 06:22:57,777 DEBUG:pending: deque([State(pc_initial=48 nstack_initial=0), State(pc_initial=58 nstack_initial=0), State(pc_initial=58 nstack_initial=0)])
2024-07-15 06:22:57,777 DEBUG:stack: []
2024-07-15 06:22:57,777 DEBUG:state.pc_initial: State(pc_initial=48 nstack_initial=0)
2024-07-15 06:22:57,777 DEBUG:dispatch pc=48, inst=JUMP_FORWARD(arg=2, lineno=1145)
2024-07-15 06:22:57,777 DEBUG:stack []
2024-07-15 06:22:57,777 DEBUG:end state. edges=[Edge(pc=54, stack=(), blockstack=(), npush=0)]
2024-07-15 06:22:57,777 DEBUG:pending: deque([State(pc_initial=58 nstack_initial=0), State(pc_initial=58 nstack_initial=0), State(pc_initial=54 nstack_initial=0)])
2024-07-15 06:22:57,777 DEBUG:stack: []
2024-07-15 06:22:57,777 DEBUG:state.pc_initial: State(pc_initial=58 nstack_initial=0)
2024-07-15 06:22:57,777 DEBUG:dispatch pc=58, inst=LOAD_FAST(arg=0, lineno=1148)
2024-07-15 06:22:57,777 DEBUG:stack []
2024-07-15 06:22:57,777 DEBUG:dispatch pc=60, inst=LOAD_CONST(arg=2, lineno=1148)
2024-07-15 06:22:57,777 DEBUG:stack ['$x58.0']
2024-07-15 06:22:57,777 DEBUG:dispatch pc=62, inst=BINARY_SUBSCR(arg=None, lineno=1148)
2024-07-15 06:22:57,777 DEBUG:stack ['$x58.0', '$const60.1']
2024-07-15 06:22:57,778 DEBUG:dispatch pc=72, inst=STORE_FAST(arg=4, lineno=1148)
2024-07-15 06:22:57,778 DEBUG:stack ['$62binary_subscr.2']
2024-07-15 06:22:57,778 DEBUG:dispatch pc=74, inst=LOAD_FAST(arg=1, lineno=1149)
2024-07-15 06:22:57,778 DEBUG:stack []
2024-07-15 06:22:57,778 DEBUG:dispatch pc=76, inst=UNARY_NEGATIVE(arg=None, lineno=1149)
2024-07-15 06:22:57,778 DEBUG:stack ['$threshold74.3']
2024-07-15 06:22:57,778 DEBUG:dispatch pc=78, inst=LOAD_FAST(arg=4, lineno=1149)
2024-07-15 06:22:57,778 DEBUG:stack ['$76unary_negative.4']
2024-07-15 06:22:57,778 DEBUG:dispatch pc=80, inst=SWAP(arg=2, lineno=1149)
2024-07-15 06:22:57,778 DEBUG:stack ['$76unary_negative.4', '$x178.5']
2024-07-15 06:22:57,778 DEBUG:dispatch pc=82, inst=COPY(arg=2, lineno=1149)
2024-07-15 06:22:57,778 DEBUG:stack ['$x178.5', '$76unary_negative.4']
2024-07-15 06:22:57,778 DEBUG:dispatch pc=84, inst=COMPARE_OP(arg=1, lineno=1149)
2024-07-15 06:22:57,778 DEBUG:stack ['$x178.5', '$76unary_negative.4', '$x178.5']
2024-07-15 06:22:57,778 DEBUG:dispatch pc=90, inst=POP_JUMP_FORWARD_IF_FALSE(arg=6, lineno=1149)
2024-07-15 06:22:57,778 DEBUG:stack ['$x178.5', '$84compare_op.6']
2024-07-15 06:22:57,778 DEBUG:end state. edges=[Edge(pc=92, stack=('$x178.5',), blockstack=(), npush=0), Edge(pc=104, stack=('$x178.5',), blockstack=(), npush=0)]
2024-07-15 06:22:57,778 DEBUG:pending: deque([State(pc_initial=58 nstack_initial=0), State(pc_initial=54 nstack_initial=0), State(pc_initial=92 nstack_initial=1), State(pc_initial=104 nstack_initial=1)])
2024-07-15 06:22:57,778 DEBUG:pending: deque([State(pc_initial=54 nstack_initial=0), State(pc_initial=92 nstack_initial=1), State(pc_initial=104 nstack_initial=1)])
2024-07-15 06:22:57,778 DEBUG:stack: []
2024-07-15 06:22:57,778 DEBUG:state.pc_initial: State(pc_initial=54 nstack_initial=0)
2024-07-15 06:22:57,778 DEBUG:dispatch pc=54, inst=LOAD_CONST(arg=1, lineno=1146)
2024-07-15 06:22:57,778 DEBUG:stack []
2024-07-15 06:22:57,778 DEBUG:dispatch pc=56, inst=STORE_FAST(arg=3, lineno=1146)
2024-07-15 06:22:57,778 DEBUG:stack ['$const54.0']
2024-07-15 06:22:57,778 DEBUG:end state. edges=[Edge(pc=58, stack=(), blockstack=(), npush=0)]
2024-07-15 06:22:57,778 DEBUG:pending: deque([State(pc_initial=92 nstack_initial=1), State(pc_initial=104 nstack_initial=1), State(pc_initial=58 nstack_initial=0)])
2024-07-15 06:22:57,778 DEBUG:stack: ['$phi92.0']
2024-07-15 06:22:57,779 DEBUG:state.pc_initial: State(pc_initial=92 nstack_initial=1)
2024-07-15 06:22:57,779 DEBUG:dispatch pc=92, inst=LOAD_FAST(arg=1, lineno=1149)
2024-07-15 06:22:57,779 DEBUG:stack ['$phi92.0']
2024-07-15 06:22:57,779 DEBUG:dispatch pc=94, inst=COMPARE_OP(arg=1, lineno=1149)
2024-07-15 06:22:57,779 DEBUG:stack ['$phi92.0', '$threshold92.1']
2024-07-15 06:22:57,779 DEBUG:dispatch pc=100, inst=POP_JUMP_FORWARD_IF_FALSE(arg=5, lineno=1149)
2024-07-15 06:22:57,779 DEBUG:stack ['$94compare_op.2']
2024-07-15 06:22:57,779 DEBUG:end state. edges=[Edge(pc=102, stack=(), blockstack=(), npush=0), Edge(pc=112, stack=(), blockstack=(), npush=0)]
2024-07-15 06:22:57,779 DEBUG:pending: deque([State(pc_initial=104 nstack_initial=1), State(pc_initial=58 nstack_initial=0), State(pc_initial=102 nstack_initial=0), State(pc_initial=112 nstack_initial=0)])
2024-07-15 06:22:57,779 DEBUG:stack: ['$phi104.0']
2024-07-15 06:22:57,779 DEBUG:state.pc_initial: State(pc_initial=104 nstack_initial=1)
2024-07-15 06:22:57,779 DEBUG:dispatch pc=104, inst=POP_TOP(arg=None, lineno=1149)
2024-07-15 06:22:57,779 DEBUG:stack ['$phi104.0']
2024-07-15 06:22:57,779 DEBUG:dispatch pc=106, inst=JUMP_FORWARD(arg=2, lineno=1149)
2024-07-15 06:22:57,779 DEBUG:stack []
2024-07-15 06:22:57,779 DEBUG:end state. edges=[Edge(pc=112, stack=(), blockstack=(), npush=0)]
2024-07-15 06:22:57,779 DEBUG:pending: deque([State(pc_initial=58 nstack_initial=0), State(pc_initial=102 nstack_initial=0), State(pc_initial=112 nstack_initial=0), State(pc_initial=112 nstack_initial=0)])
2024-07-15 06:22:57,779 DEBUG:pending: deque([State(pc_initial=102 nstack_initial=0), State(pc_initial=112 nstack_initial=0), State(pc_initial=112 nstack_initial=0)])
2024-07-15 06:22:57,779 DEBUG:stack: []
2024-07-15 06:22:57,779 DEBUG:state.pc_initial: State(pc_initial=102 nstack_initial=0)
2024-07-15 06:22:57,779 DEBUG:dispatch pc=102, inst=JUMP_FORWARD(arg=2, lineno=1149)
2024-07-15 06:22:57,779 DEBUG:stack []
2024-07-15 06:22:57,779 DEBUG:end state. edges=[Edge(pc=108, stack=(), blockstack=(), npush=0)]
2024-07-15 06:22:57,779 DEBUG:pending: deque([State(pc_initial=112 nstack_initial=0), State(pc_initial=112 nstack_initial=0), State(pc_initial=108 nstack_initial=0)])
2024-07-15 06:22:57,779 DEBUG:stack: []
2024-07-15 06:22:57,779 DEBUG:state.pc_initial: State(pc_initial=112 nstack_initial=0)
2024-07-15 06:22:57,779 DEBUG:dispatch pc=112, inst=LOAD_FAST(arg=2, lineno=1152)
2024-07-15 06:22:57,780 DEBUG:stack []
2024-07-15 06:22:57,780 DEBUG:dispatch pc=114, inst=POP_JUMP_FORWARD_IF_FALSE(arg=42, lineno=1152)
2024-07-15 06:22:57,780 DEBUG:stack ['$zero_pos112.0']
2024-07-15 06:22:57,780 DEBUG:end state. edges=[Edge(pc=116, stack=(), blockstack=(), npush=0), Edge(pc=200, stack=(), blockstack=(), npush=0)]
2024-07-15 06:22:57,780 DEBUG:pending: deque([State(pc_initial=112 nstack_initial=0), State(pc_initial=108 nstack_initial=0), State(pc_initial=116 nstack_initial=0), State(pc_initial=200 nstack_initial=0)])
2024-07-15 06:22:57,780 DEBUG:pending: deque([State(pc_initial=108 nstack_initial=0), State(pc_initial=116 nstack_initial=0), State(pc_initial=200 nstack_initial=0)])
2024-07-15 06:22:57,780 DEBUG:stack: []
2024-07-15 06:22:57,780 DEBUG:state.pc_initial: State(pc_initial=108 nstack_initial=0)
2024-07-15 06:22:57,780 DEBUG:dispatch pc=108, inst=LOAD_CONST(arg=1, lineno=1150)
2024-07-15 06:22:57,780 DEBUG:stack []
2024-07-15 06:22:57,780 DEBUG:dispatch pc=110, inst=STORE_FAST(arg=4, lineno=1150)
2024-07-15 06:22:57,780 DEBUG:stack ['$const108.0']
2024-07-15 06:22:57,780 DEBUG:end state. edges=[Edge(pc=112, stack=(), blockstack=(), npush=0)]
2024-07-15 06:22:57,780 DEBUG:pending: deque([State(pc_initial=116 nstack_initial=0), State(pc_initial=200 nstack_initial=0), State(pc_initial=112 nstack_initial=0)])
2024-07-15 06:22:57,780 DEBUG:stack: []
2024-07-15 06:22:57,780 DEBUG:state.pc_initial: State(pc_initial=116 nstack_initial=0)
2024-07-15 06:22:57,780 DEBUG:dispatch pc=116, inst=LOAD_GLOBAL(arg=1, lineno=1153)
2024-07-15 06:22:57,780 DEBUG:stack []
2024-07-15 06:22:57,780 DEBUG:dispatch pc=128, inst=LOAD_ATTR(arg=1, lineno=1153)
2024-07-15 06:22:57,780 DEBUG:stack ['$null$116.1', '$116load_global.0']
2024-07-15 06:22:57,780 DEBUG:dispatch pc=138, inst=LOAD_FAST(arg=3, lineno=1153)
2024-07-15 06:22:57,780 DEBUG:stack ['$null$116.1', '$128load_attr.2']
2024-07-15 06:22:57,780 DEBUG:dispatch pc=140, inst=PRECALL(arg=1, lineno=1153)
2024-07-15 06:22:57,781 DEBUG:stack ['$null$116.1', '$128load_attr.2', '$x0138.3']
2024-07-15 06:22:57,781 DEBUG:dispatch pc=144, inst=CALL(arg=1, lineno=1153)
2024-07-15 06:22:57,781 DEBUG:stack ['$null$116.1', '$128load_attr.2', '$x0138.3']
2024-07-15 06:22:57,781 DEBUG:dispatch pc=154, inst=LOAD_GLOBAL(arg=1, lineno=1153)
2024-07-15 06:22:57,781 DEBUG:stack ['$144call.4']
2024-07-15 06:22:57,781 DEBUG:dispatch pc=166, inst=LOAD_ATTR(arg=1, lineno=1153)
2024-07-15 06:22:57,781 DEBUG:stack ['$144call.4', '$null$154.6', '$154load_global.5']
2024-07-15 06:22:57,781 DEBUG:dispatch pc=176, inst=LOAD_FAST(arg=4, lineno=1153)
2024-07-15 06:22:57,781 DEBUG:stack ['$144call.4', '$null$154.6', '$166load_attr.7']
2024-07-15 06:22:57,781 DEBUG:dispatch pc=178, inst=PRECALL(arg=1, lineno=1153)
2024-07-15 06:22:57,781 DEBUG:stack ['$144call.4', '$null$154.6', '$166load_attr.7', '$x1176.8']
2024-07-15 06:22:57,781 DEBUG:dispatch pc=182, inst=CALL(arg=1, lineno=1153)
2024-07-15 06:22:57,781 DEBUG:stack ['$144call.4', '$null$154.6', '$166load_attr.7', '$x1176.8']
2024-07-15 06:22:57,781 DEBUG:dispatch pc=192, inst=COMPARE_OP(arg=3, lineno=1153)
2024-07-15 06:22:57,781 DEBUG:stack ['$144call.4', '$182call.9']
2024-07-15 06:22:57,781 DEBUG:dispatch pc=198, inst=RETURN_VALUE(arg=None, lineno=1153)
2024-07-15 06:22:57,781 DEBUG:stack ['$192compare_op.10']
2024-07-15 06:22:57,781 DEBUG:end state. edges=[]
2024-07-15 06:22:57,781 DEBUG:pending: deque([State(pc_initial=200 nstack_initial=0), State(pc_initial=112 nstack_initial=0)])
2024-07-15 06:22:57,781 DEBUG:stack: []
2024-07-15 06:22:57,781 DEBUG:state.pc_initial: State(pc_initial=200 nstack_initial=0)
2024-07-15 06:22:57,782 DEBUG:dispatch pc=200, inst=LOAD_GLOBAL(arg=1, lineno=1155)
2024-07-15 06:22:57,782 DEBUG:stack []
2024-07-15 06:22:57,782 DEBUG:dispatch pc=212, inst=LOAD_ATTR(arg=2, lineno=1155)
2024-07-15 06:22:57,782 DEBUG:stack ['$null$200.1', '$200load_global.0']
2024-07-15 06:22:57,782 DEBUG:dispatch pc=222, inst=LOAD_FAST(arg=3, lineno=1155)
2024-07-15 06:22:57,782 DEBUG:stack ['$null$200.1', '$212load_attr.2']
2024-07-15 06:22:57,782 DEBUG:dispatch pc=224, inst=PRECALL(arg=1, lineno=1155)
2024-07-15 06:22:57,782 DEBUG:stack ['$null$200.1', '$212load_attr.2', '$x0222.3']
2024-07-15 06:22:57,782 DEBUG:dispatch pc=228, inst=CALL(arg=1, lineno=1155)
2024-07-15 06:22:57,782 DEBUG:stack ['$null$200.1', '$212load_attr.2', '$x0222.3']
2024-07-15 06:22:57,782 DEBUG:dispatch pc=238, inst=LOAD_GLOBAL(arg=1, lineno=1155)
2024-07-15 06:22:57,782 DEBUG:stack ['$228call.4']
2024-07-15 06:22:57,782 DEBUG:dispatch pc=250, inst=LOAD_ATTR(arg=2, lineno=1155)
2024-07-15 06:22:57,782 DEBUG:stack ['$228call.4', '$null$238.6', '$238load_global.5']
2024-07-15 06:22:57,782 DEBUG:dispatch pc=260, inst=LOAD_FAST(arg=4, lineno=1155)
2024-07-15 06:22:57,782 DEBUG:stack ['$228call.4', '$null$238.6', '$250load_attr.7']
2024-07-15 06:22:57,782 DEBUG:dispatch pc=262, inst=PRECALL(arg=1, lineno=1155)
2024-07-15 06:22:57,782 DEBUG:stack ['$228call.4', '$null$238.6', '$250load_attr.7', '$x1260.8']
2024-07-15 06:22:57,782 DEBUG:dispatch pc=266, inst=CALL(arg=1, lineno=1155)
2024-07-15 06:22:57,783 DEBUG:stack ['$228call.4', '$null$238.6', '$250load_attr.7', '$x1260.8']
2024-07-15 06:22:57,783 DEBUG:dispatch pc=276, inst=COMPARE_OP(arg=3, lineno=1155)
2024-07-15 06:22:57,783 DEBUG:stack ['$228call.4', '$266call.9']
2024-07-15 06:22:57,783 DEBUG:dispatch pc=282, inst=RETURN_VALUE(arg=None, lineno=1155)
2024-07-15 06:22:57,783 DEBUG:stack ['$276compare_op.10']
2024-07-15 06:22:57,783 DEBUG:end state. edges=[]
2024-07-15 06:22:57,783 DEBUG:pending: deque([State(pc_initial=112 nstack_initial=0)])
2024-07-15 06:22:57,783 DEBUG:-------------------------Prune PHIs-------------------------
2024-07-15 06:22:57,783 DEBUG:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=38 nstack_initial=1): {'$phi38.0'},
             State(pc_initial=48 nstack_initial=0): set(),
             State(pc_initial=50 nstack_initial=1): set(),
             State(pc_initial=54 nstack_initial=0): set(),
             State(pc_initial=58 nstack_initial=0): set(),
             State(pc_initial=92 nstack_initial=1): {'$phi92.0'},
             State(pc_initial=102 nstack_initial=0): set(),
             State(pc_initial=104 nstack_initial=1): set(),
             State(pc_initial=108 nstack_initial=0): set(),
             State(pc_initial=112 nstack_initial=0): set(),
             State(pc_initial=116 nstack_initial=0): set(),
             State(pc_initial=200 nstack_initial=0): set()})
2024-07-15 06:22:57,783 DEBUG:defmap: {'$phi104.0': State(pc_initial=58 nstack_initial=0),
 '$phi38.0': State(pc_initial=0 nstack_initial=0),
 '$phi50.0': State(pc_initial=0 nstack_initial=0),
 '$phi92.0': State(pc_initial=58 nstack_initial=0)}
2024-07-15 06:22:57,783 DEBUG:phismap: defaultdict(<class 'set'>,
            {'$phi104.0': {('$x178.5', State(pc_initial=58 nstack_initial=0))},
             '$phi38.0': {('$x024.5', State(pc_initial=0 nstack_initial=0))},
             '$phi50.0': {('$x024.5', State(pc_initial=0 nstack_initial=0))},
             '$phi92.0': {('$x178.5', State(pc_initial=58 nstack_initial=0))}})
2024-07-15 06:22:57,784 DEBUG:changing phismap: defaultdict(<class 'set'>,
            {'$phi104.0': {('$x178.5', State(pc_initial=58 nstack_initial=0))},
             '$phi38.0': {('$x024.5', State(pc_initial=0 nstack_initial=0))},
             '$phi50.0': {('$x024.5', State(pc_initial=0 nstack_initial=0))},
             '$phi92.0': {('$x178.5', State(pc_initial=58 nstack_initial=0))}})
2024-07-15 06:22:57,784 DEBUG:keep phismap: {'$phi38.0': {('$x024.5', State(pc_initial=0 nstack_initial=0))},
 '$phi92.0': {('$x178.5', State(pc_initial=58 nstack_initial=0))}}
2024-07-15 06:22:57,784 DEBUG:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi38.0': '$x024.5'},
             State(pc_initial=58 nstack_initial=0): {'$phi92.0': '$x178.5'}})
2024-07-15 06:22:57,784 DEBUG:----------------------DONE Prune PHIs-----------------------
2024-07-15 06:22:57,784 DEBUG:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1'}), (8, {'index': '$const6.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'value': '$8binary_subscr.2'}), (20, {'res': '$threshold20.3'}), (22, {'value': '$threshold20.3', 'res': '$22unary_negative.4'}), (24, {'res': '$x024.5'}), (30, {'lhs': '$22unary_negative.4', 'rhs': '$x024.5', 'res': '$30compare_op.6'}), (32, {}), (34, {}), (36, {'pred': '$30compare_op.6'})), outgoing_phis={'$phi38.0': '$x024.5'}, blockstack=(), active_try_block=None, outgoing_edgepushed={38: ('$x024.5',), 50: ('$x024.5',)})
2024-07-15 06:22:57,784 DEBUG:block_infos State(pc_initial=38 nstack_initial=1):
AdaptBlockInfo(insts=((38, {'res': '$threshold38.1'}), (40, {'lhs': '$phi38.0', 'rhs': '$threshold38.1', 'res': '$40compare_op.2'}), (42, {}), (44, {}), (46, {'pred': '$40compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={48: (), 58: ()})
2024-07-15 06:22:57,784 DEBUG:block_infos State(pc_initial=48 nstack_initial=0):
AdaptBlockInfo(insts=((48, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={54: ()})
2024-07-15 06:22:57,784 DEBUG:block_infos State(pc_initial=50 nstack_initial=1):
AdaptBlockInfo(insts=((52, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={58: ()})
2024-07-15 06:22:57,784 DEBUG:block_infos State(pc_initial=54 nstack_initial=0):
AdaptBlockInfo(insts=((54, {'res': '$const54.0'}), (56, {'value': '$const54.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={58: ()})
2024-07-15 06:22:57,784 DEBUG:block_infos State(pc_initial=58 nstack_initial=0):
AdaptBlockInfo(insts=((58, {'res': '$x58.0'}), (60, {'res': '$const60.1'}), (62, {'index': '$const60.1', 'target': '$x58.0', 'res': '$62binary_subscr.2'}), (64, {}), (66, {}), (68, {}), (70, {}), (72, {'value': '$62binary_subscr.2'}), (74, {'res': '$threshold74.3'}), (76, {'value': '$threshold74.3', 'res': '$76unary_negative.4'}), (78, {'res': '$x178.5'}), (84, {'lhs': '$76unary_negative.4', 'rhs': '$x178.5', 'res': '$84compare_op.6'}), (86, {}), (88, {}), (90, {'pred': '$84compare_op.6'})), outgoing_phis={'$phi92.0': '$x178.5'}, blockstack=(), active_try_block=None, outgoing_edgepushed={92: ('$x178.5',), 104: ('$x178.5',)})
2024-07-15 06:22:57,784 DEBUG:block_infos State(pc_initial=92 nstack_initial=1):
AdaptBlockInfo(insts=((92, {'res': '$threshold92.1'}), (94, {'lhs': '$phi92.0', 'rhs': '$threshold92.1', 'res': '$94compare_op.2'}), (96, {}), (98, {}), (100, {'pred': '$94compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={102: (), 112: ()})
2024-07-15 06:22:57,784 DEBUG:block_infos State(pc_initial=102 nstack_initial=0):
AdaptBlockInfo(insts=((102, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={108: ()})
2024-07-15 06:22:57,784 DEBUG:block_infos State(pc_initial=104 nstack_initial=1):
AdaptBlockInfo(insts=((106, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={112: ()})
2024-07-15 06:22:57,784 DEBUG:block_infos State(pc_initial=108 nstack_initial=0):
AdaptBlockInfo(insts=((108, {'res': '$const108.0'}), (110, {'value': '$const108.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={112: ()})
2024-07-15 06:22:57,784 DEBUG:block_infos State(pc_initial=112 nstack_initial=0):
AdaptBlockInfo(insts=((112, {'res': '$zero_pos112.0'}), (114, {'pred': '$zero_pos112.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={116: (), 200: ()})
2024-07-15 06:22:57,785 DEBUG:block_infos State(pc_initial=116 nstack_initial=0):
AdaptBlockInfo(insts=((116, {'idx': 0, 'res': '$116load_global.0'}), (118, {}), (120, {}), (122, {}), (124, {}), (126, {}), (128, {'item': '$116load_global.0', 'res': '$128load_attr.2'}), (130, {}), (132, {}), (134, {}), (136, {}), (138, {'res': '$x0138.3'}), (140, {}), (142, {}), (144, {'func': '$128load_attr.2', 'args': ['$x0138.3'], 'kw_names': None, 'res': '$144call.4'}), (146, {}), (148, {}), (150, {}), (152, {}), (154, {'idx': 0, 'res': '$154load_global.5'}), (156, {}), (158, {}), (160, {}), (162, {}), (164, {}), (166, {'item': '$154load_global.5', 'res': '$166load_attr.7'}), (168, {}), (170, {}), (172, {}), (174, {}), (176, {'res': '$x1176.8'}), (178, {}), (180, {}), (182, {'func': '$166load_attr.7', 'args': ['$x1176.8'], 'kw_names': None, 'res': '$182call.9'}), (184, {}), (186, {}), (188, {}), (190, {}), (192, {'lhs': '$144call.4', 'rhs': '$182call.9', 'res': '$192compare_op.10'}), (194, {}), (196, {}), (198, {'retval': '$192compare_op.10', 'castval': '$198return_value.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-15 06:22:57,785 DEBUG:block_infos State(pc_initial=200 nstack_initial=0):
AdaptBlockInfo(insts=((200, {'idx': 0, 'res': '$200load_global.0'}), (202, {}), (204, {}), (206, {}), (208, {}), (210, {}), (212, {'item': '$200load_global.0', 'res': '$212load_attr.2'}), (214, {}), (216, {}), (218, {}), (220, {}), (222, {'res': '$x0222.3'}), (224, {}), (226, {}), (228, {'func': '$212load_attr.2', 'args': ['$x0222.3'], 'kw_names': None, 'res': '$228call.4'}), (230, {}), (232, {}), (234, {}), (236, {}), (238, {'idx': 0, 'res': '$238load_global.5'}), (240, {}), (242, {}), (244, {}), (246, {}), (248, {}), (250, {'item': '$238load_global.5', 'res': '$250load_attr.7'}), (252, {}), (254, {}), (256, {}), (258, {}), (260, {'res': '$x1260.8'}), (262, {}), (264, {}), (266, {'func': '$250load_attr.7', 'args': ['$x1260.8'], 'kw_names': None, 'res': '$266call.9'}), (268, {}), (270, {}), (272, {}), (274, {}), (276, {'lhs': '$228call.4', 'rhs': '$266call.9', 'res': '$276compare_op.10'}), (278, {}), (280, {}), (282, {'retval': '$276compare_op.10', 'castval': '$282return_value.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-15 06:22:57,786 DEBUG:label 0:
    x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    $const6.1 = const(int, 0)                ['$const6.1']
    x0 = getitem(value=x, index=$const6.1, fn=<built-in function getitem>) ['$const6.1', 'x', 'x0']
    $22unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$22unary_negative.4', 'threshold']
    $30compare_op.6 = $22unary_negative.4 <= x0 ['$22unary_negative.4', '$30compare_op.6', 'x0']
    bool36 = global(bool: <class 'bool'>)    ['bool36']
    $36pred = call bool36($30compare_op.6, func=bool36, args=(Var($30compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$30compare_op.6', '$36pred', 'bool36']
    $phi38.0 = x0                            ['$phi38.0', 'x0']
    branch $36pred, 38, 50                   ['$36pred']
label 38:
    $40compare_op.2 = $phi38.0 <= threshold  ['$40compare_op.2', '$phi38.0', 'threshold']
    bool46 = global(bool: <class 'bool'>)    ['bool46']
    $46pred = call bool46($40compare_op.2, func=bool46, args=(Var($40compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$40compare_op.2', '$46pred', 'bool46']
    branch $46pred, 48, 58                   ['$46pred']
label 48:
    jump 54                                  []
label 50:
    jump 58                                  []
label 54:
    x0 = const(int, 0)                       ['x0']
    jump 58                                  []
label 58:
    $const60.1 = const(int, -1)              ['$const60.1']
    x1 = getitem(value=x, index=$const60.1, fn=<built-in function getitem>) ['$const60.1', 'x', 'x1']
    $76unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$76unary_negative.4', 'threshold']
    $84compare_op.6 = $76unary_negative.4 <= x1 ['$76unary_negative.4', '$84compare_op.6', 'x1']
    bool90 = global(bool: <class 'bool'>)    ['bool90']
    $90pred = call bool90($84compare_op.6, func=bool90, args=(Var($84compare_op.6, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None) ['$84compare_op.6', '$90pred', 'bool90']
    $phi92.0 = x1                            ['$phi92.0', 'x1']
    branch $90pred, 92, 104                  ['$90pred']
label 92:
    $94compare_op.2 = $phi92.0 <= threshold  ['$94compare_op.2', '$phi92.0', 'threshold']
    bool100 = global(bool: <class 'bool'>)   ['bool100']
    $100pred = call bool100($94compare_op.2, func=bool100, args=(Var($94compare_op.2, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None) ['$100pred', '$94compare_op.2', 'bool100']
    branch $100pred, 102, 112                ['$100pred']
label 102:
    jump 108                                 []
label 104:
    jump 112                                 []
label 108:
    x1 = const(int, 0)                       ['x1']
    jump 112                                 []
label 112:
    bool114 = global(bool: <class 'bool'>)   ['bool114']
    $114pred = call bool114(zero_pos, func=bool114, args=(Var(zero_pos, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$114pred', 'bool114', 'zero_pos']
    branch $114pred, 116, 200                ['$114pred']
label 116:
    $116load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$116load_global.0']
    $128load_attr.2 = getattr(value=$116load_global.0, attr=signbit) ['$116load_global.0', '$128load_attr.2']
    $144call.4 = call $128load_attr.2(x0, func=$128load_attr.2, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$128load_attr.2', '$144call.4', 'x0']
    $154load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$154load_global.5']
    $166load_attr.7 = getattr(value=$154load_global.5, attr=signbit) ['$154load_global.5', '$166load_attr.7']
    $182call.9 = call $166load_attr.7(x1, func=$166load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None) ['$166load_attr.7', '$182call.9', 'x1']
    $192compare_op.10 = $144call.4 != $182call.9 ['$144call.4', '$182call.9', '$192compare_op.10']
    $198return_value.11 = cast(value=$192compare_op.10) ['$192compare_op.10', '$198return_value.11']
    return $198return_value.11               ['$198return_value.11']
label 200:
    $200load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$200load_global.0']
    $212load_attr.2 = getattr(value=$200load_global.0, attr=sign) ['$200load_global.0', '$212load_attr.2']
    $228call.4 = call $212load_attr.2(x0, func=$212load_attr.2, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$212load_attr.2', '$228call.4', 'x0']
    $238load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$238load_global.5']
    $250load_attr.7 = getattr(value=$238load_global.5, attr=sign) ['$238load_global.5', '$250load_attr.7']
    $266call.9 = call $250load_attr.7(x1, func=$250load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None) ['$250load_attr.7', '$266call.9', 'x1']
    $276compare_op.10 = $228call.4 != $266call.9 ['$228call.4', '$266call.9', '$276compare_op.10']
    $282return_value.11 = cast(value=$276compare_op.10) ['$276compare_op.10', '$282return_value.11']
    return $282return_value.11               ['$282return_value.11']

2024-07-15 06:22:59,036 DEBUG:bytecode dump:
>          0	NOP(arg=None, lineno=1039)
           2	RESUME(arg=0, lineno=1039)
           4	LOAD_FAST(arg=0, lineno=1042)
           6	LOAD_CONST(arg=1, lineno=1042)
           8	BINARY_SUBSCR(arg=None, lineno=1042)
          18	LOAD_FAST(arg=0, lineno=1042)
          20	LOAD_CONST(arg=2, lineno=1042)
          22	BINARY_SUBSCR(arg=None, lineno=1042)
          32	COMPARE_OP(arg=4, lineno=1042)
          38	LOAD_FAST(arg=0, lineno=1042)
          40	LOAD_CONST(arg=1, lineno=1042)
          42	BINARY_SUBSCR(arg=None, lineno=1042)
          52	LOAD_FAST(arg=0, lineno=1042)
          54	LOAD_CONST(arg=3, lineno=1042)
          56	BINARY_SUBSCR(arg=None, lineno=1042)
          66	COMPARE_OP(arg=5, lineno=1042)
          72	BINARY_OP(arg=1, lineno=1042)
          76	RETURN_VALUE(arg=None, lineno=1042)
2024-07-15 06:22:59,036 DEBUG:pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-15 06:22:59,036 DEBUG:stack: []
2024-07-15 06:22:59,036 DEBUG:state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-15 06:22:59,036 DEBUG:dispatch pc=0, inst=NOP(arg=None, lineno=1039)
2024-07-15 06:22:59,036 DEBUG:stack []
2024-07-15 06:22:59,036 DEBUG:dispatch pc=2, inst=RESUME(arg=0, lineno=1039)
2024-07-15 06:22:59,036 DEBUG:stack []
2024-07-15 06:22:59,036 DEBUG:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1042)
2024-07-15 06:22:59,036 DEBUG:stack []
2024-07-15 06:22:59,036 DEBUG:dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1042)
2024-07-15 06:22:59,036 DEBUG:stack ['$x4.0']
2024-07-15 06:22:59,036 DEBUG:dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1042)
2024-07-15 06:22:59,036 DEBUG:stack ['$x4.0', '$const6.1']
2024-07-15 06:22:59,036 DEBUG:dispatch pc=18, inst=LOAD_FAST(arg=0, lineno=1042)
2024-07-15 06:22:59,037 DEBUG:stack ['$8binary_subscr.2']
2024-07-15 06:22:59,037 DEBUG:dispatch pc=20, inst=LOAD_CONST(arg=2, lineno=1042)
2024-07-15 06:22:59,037 DEBUG:stack ['$8binary_subscr.2', '$x18.3']
2024-07-15 06:22:59,037 DEBUG:dispatch pc=22, inst=BINARY_SUBSCR(arg=None, lineno=1042)
2024-07-15 06:22:59,037 DEBUG:stack ['$8binary_subscr.2', '$x18.3', '$const20.4']
2024-07-15 06:22:59,037 DEBUG:dispatch pc=32, inst=COMPARE_OP(arg=4, lineno=1042)
2024-07-15 06:22:59,037 DEBUG:stack ['$8binary_subscr.2', '$22binary_subscr.5']
2024-07-15 06:22:59,037 DEBUG:dispatch pc=38, inst=LOAD_FAST(arg=0, lineno=1042)
2024-07-15 06:22:59,037 DEBUG:stack ['$32compare_op.6']
2024-07-15 06:22:59,037 DEBUG:dispatch pc=40, inst=LOAD_CONST(arg=1, lineno=1042)
2024-07-15 06:22:59,037 DEBUG:stack ['$32compare_op.6', '$x38.7']
2024-07-15 06:22:59,037 DEBUG:dispatch pc=42, inst=BINARY_SUBSCR(arg=None, lineno=1042)
2024-07-15 06:22:59,037 DEBUG:stack ['$32compare_op.6', '$x38.7', '$const40.8']
2024-07-15 06:22:59,037 DEBUG:dispatch pc=52, inst=LOAD_FAST(arg=0, lineno=1042)
2024-07-15 06:22:59,037 DEBUG:stack ['$32compare_op.6', '$42binary_subscr.9']
2024-07-15 06:22:59,037 DEBUG:dispatch pc=54, inst=LOAD_CONST(arg=3, lineno=1042)
2024-07-15 06:22:59,037 DEBUG:stack ['$32compare_op.6', '$42binary_subscr.9', '$x52.10']
2024-07-15 06:22:59,038 DEBUG:dispatch pc=56, inst=BINARY_SUBSCR(arg=None, lineno=1042)
2024-07-15 06:22:59,038 DEBUG:stack ['$32compare_op.6', '$42binary_subscr.9', '$x52.10', '$const54.11']
2024-07-15 06:22:59,038 DEBUG:dispatch pc=66, inst=COMPARE_OP(arg=5, lineno=1042)
2024-07-15 06:22:59,038 DEBUG:stack ['$32compare_op.6', '$42binary_subscr.9', '$56binary_subscr.12']
2024-07-15 06:22:59,038 DEBUG:dispatch pc=72, inst=BINARY_OP(arg=1, lineno=1042)
2024-07-15 06:22:59,038 DEBUG:stack ['$32compare_op.6', '$66compare_op.13']
2024-07-15 06:22:59,038 DEBUG:dispatch pc=76, inst=RETURN_VALUE(arg=None, lineno=1042)
2024-07-15 06:22:59,038 DEBUG:stack ['$binop_and_72.14']
2024-07-15 06:22:59,038 DEBUG:end state. edges=[]
2024-07-15 06:22:59,038 DEBUG:-------------------------Prune PHIs-------------------------
2024-07-15 06:22:59,038 DEBUG:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-07-15 06:22:59,038 DEBUG:defmap: {}
2024-07-15 06:22:59,038 DEBUG:phismap: defaultdict(<class 'set'>, {})
2024-07-15 06:22:59,039 DEBUG:changing phismap: defaultdict(<class 'set'>, {})
2024-07-15 06:22:59,039 DEBUG:keep phismap: {}
2024-07-15 06:22:59,039 DEBUG:new_out: defaultdict(<class 'dict'>, {})
2024-07-15 06:22:59,039 DEBUG:----------------------DONE Prune PHIs-----------------------
2024-07-15 06:22:59,039 DEBUG:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1'}), (8, {'index': '$const6.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'res': '$x18.3'}), (20, {'res': '$const20.4'}), (22, {'index': '$const20.4', 'target': '$x18.3', 'res': '$22binary_subscr.5'}), (24, {}), (26, {}), (28, {}), (30, {}), (32, {'lhs': '$8binary_subscr.2', 'rhs': '$22binary_subscr.5', 'res': '$32compare_op.6'}), (34, {}), (36, {}), (38, {'res': '$x38.7'}), (40, {'res': '$const40.8'}), (42, {'index': '$const40.8', 'target': '$x38.7', 'res': '$42binary_subscr.9'}), (44, {}), (46, {}), (48, {}), (50, {}), (52, {'res': '$x52.10'}), (54, {'res': '$const54.11'}), (56, {'index': '$const54.11', 'target': '$x52.10', 'res': '$56binary_subscr.12'}), (58, {}), (60, {}), (62, {}), (64, {}), (66, {'lhs': '$42binary_subscr.9', 'rhs': '$56binary_subscr.12', 'res': '$66compare_op.13'}), (68, {}), (70, {}), (72, {'op': '&', 'lhs': '$32compare_op.6', 'rhs': '$66compare_op.13', 'res': '$binop_and_72.14'}), (74, {}), (76, {'retval': '$binop_and_72.14', 'castval': '$76return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-15 06:22:59,040 DEBUG:label 0:
    x = arg(0, name=x)                       ['x']
    $const6.1 = const(int, 0)                ['$const6.1']
    $8binary_subscr.2 = getitem(value=x, index=$const6.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1', 'x']
    $const20.4 = const(int, -1)              ['$const20.4']
    $22binary_subscr.5 = getitem(value=x, index=$const20.4, fn=<built-in function getitem>) ['$22binary_subscr.5', '$const20.4', 'x']
    $32compare_op.6 = $8binary_subscr.2 > $22binary_subscr.5 ['$22binary_subscr.5', '$32compare_op.6', '$8binary_subscr.2']
    $const40.8 = const(int, 0)               ['$const40.8']
    $42binary_subscr.9 = getitem(value=x, index=$const40.8, fn=<built-in function getitem>) ['$42binary_subscr.9', '$const40.8', 'x']
    $const54.11 = const(int, 1)              ['$const54.11']
    $56binary_subscr.12 = getitem(value=x, index=$const54.11, fn=<built-in function getitem>) ['$56binary_subscr.12', '$const54.11', 'x']
    $66compare_op.13 = $42binary_subscr.9 >= $56binary_subscr.12 ['$42binary_subscr.9', '$56binary_subscr.12', '$66compare_op.13']
    $binop_and_72.14 = $32compare_op.6 & $66compare_op.13 ['$32compare_op.6', '$66compare_op.13', '$binop_and_72.14']
    $76return_value.15 = cast(value=$binop_and_72.14) ['$76return_value.15', '$binop_and_72.14']
    return $76return_value.15                ['$76return_value.15']

2024-07-15 06:22:59,041 DEBUG:bytecode dump:
>          0	NOP(arg=None, lineno=1045)
           2	RESUME(arg=0, lineno=1045)
           4	LOAD_FAST(arg=0, lineno=1048)
           6	LOAD_CONST(arg=1, lineno=1048)
           8	BINARY_SUBSCR(arg=None, lineno=1048)
          18	LOAD_FAST(arg=0, lineno=1048)
          20	LOAD_CONST(arg=2, lineno=1048)
          22	BINARY_SUBSCR(arg=None, lineno=1048)
          32	COMPARE_OP(arg=0, lineno=1048)
          38	LOAD_FAST(arg=0, lineno=1048)
          40	LOAD_CONST(arg=1, lineno=1048)
          42	BINARY_SUBSCR(arg=None, lineno=1048)
          52	LOAD_FAST(arg=0, lineno=1048)
          54	LOAD_CONST(arg=3, lineno=1048)
          56	BINARY_SUBSCR(arg=None, lineno=1048)
          66	COMPARE_OP(arg=1, lineno=1048)
          72	BINARY_OP(arg=1, lineno=1048)
          76	RETURN_VALUE(arg=None, lineno=1048)
2024-07-15 06:22:59,041 DEBUG:pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-15 06:22:59,041 DEBUG:stack: []
2024-07-15 06:22:59,041 DEBUG:state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-15 06:22:59,041 DEBUG:dispatch pc=0, inst=NOP(arg=None, lineno=1045)
2024-07-15 06:22:59,041 DEBUG:stack []
2024-07-15 06:22:59,041 DEBUG:dispatch pc=2, inst=RESUME(arg=0, lineno=1045)
2024-07-15 06:22:59,041 DEBUG:stack []
2024-07-15 06:22:59,041 DEBUG:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1048)
2024-07-15 06:22:59,041 DEBUG:stack []
2024-07-15 06:22:59,041 DEBUG:dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1048)
2024-07-15 06:22:59,041 DEBUG:stack ['$x4.0']
2024-07-15 06:22:59,041 DEBUG:dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1048)
2024-07-15 06:22:59,043 DEBUG:stack ['$x4.0', '$const6.1']
2024-07-15 06:22:59,043 DEBUG:dispatch pc=18, inst=LOAD_FAST(arg=0, lineno=1048)
2024-07-15 06:22:59,043 DEBUG:stack ['$8binary_subscr.2']
2024-07-15 06:22:59,043 DEBUG:dispatch pc=20, inst=LOAD_CONST(arg=2, lineno=1048)
2024-07-15 06:22:59,043 DEBUG:stack ['$8binary_subscr.2', '$x18.3']
2024-07-15 06:22:59,043 DEBUG:dispatch pc=22, inst=BINARY_SUBSCR(arg=None, lineno=1048)
2024-07-15 06:22:59,043 DEBUG:stack ['$8binary_subscr.2', '$x18.3', '$const20.4']
2024-07-15 06:22:59,043 DEBUG:dispatch pc=32, inst=COMPARE_OP(arg=0, lineno=1048)
2024-07-15 06:22:59,043 DEBUG:stack ['$8binary_subscr.2', '$22binary_subscr.5']
2024-07-15 06:22:59,043 DEBUG:dispatch pc=38, inst=LOAD_FAST(arg=0, lineno=1048)
2024-07-15 06:22:59,043 DEBUG:stack ['$32compare_op.6']
2024-07-15 06:22:59,043 DEBUG:dispatch pc=40, inst=LOAD_CONST(arg=1, lineno=1048)
2024-07-15 06:22:59,043 DEBUG:stack ['$32compare_op.6', '$x38.7']
2024-07-15 06:22:59,043 DEBUG:dispatch pc=42, inst=BINARY_SUBSCR(arg=None, lineno=1048)
2024-07-15 06:22:59,043 DEBUG:stack ['$32compare_op.6', '$x38.7', '$const40.8']
2024-07-15 06:22:59,043 DEBUG:dispatch pc=52, inst=LOAD_FAST(arg=0, lineno=1048)
2024-07-15 06:22:59,043 DEBUG:stack ['$32compare_op.6', '$42binary_subscr.9']
2024-07-15 06:22:59,044 DEBUG:dispatch pc=54, inst=LOAD_CONST(arg=3, lineno=1048)
2024-07-15 06:22:59,044 DEBUG:stack ['$32compare_op.6', '$42binary_subscr.9', '$x52.10']
2024-07-15 06:22:59,044 DEBUG:dispatch pc=56, inst=BINARY_SUBSCR(arg=None, lineno=1048)
2024-07-15 06:22:59,044 DEBUG:stack ['$32compare_op.6', '$42binary_subscr.9', '$x52.10', '$const54.11']
2024-07-15 06:22:59,044 DEBUG:dispatch pc=66, inst=COMPARE_OP(arg=1, lineno=1048)
2024-07-15 06:22:59,044 DEBUG:stack ['$32compare_op.6', '$42binary_subscr.9', '$56binary_subscr.12']
2024-07-15 06:22:59,044 DEBUG:dispatch pc=72, inst=BINARY_OP(arg=1, lineno=1048)
2024-07-15 06:22:59,044 DEBUG:stack ['$32compare_op.6', '$66compare_op.13']
2024-07-15 06:22:59,044 DEBUG:dispatch pc=76, inst=RETURN_VALUE(arg=None, lineno=1048)
2024-07-15 06:22:59,044 DEBUG:stack ['$binop_and_72.14']
2024-07-15 06:22:59,045 DEBUG:end state. edges=[]
2024-07-15 06:22:59,045 DEBUG:-------------------------Prune PHIs-------------------------
2024-07-15 06:22:59,045 DEBUG:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-07-15 06:22:59,045 DEBUG:defmap: {}
2024-07-15 06:22:59,045 DEBUG:phismap: defaultdict(<class 'set'>, {})
2024-07-15 06:22:59,045 DEBUG:changing phismap: defaultdict(<class 'set'>, {})
2024-07-15 06:22:59,045 DEBUG:keep phismap: {}
2024-07-15 06:22:59,045 DEBUG:new_out: defaultdict(<class 'dict'>, {})
2024-07-15 06:22:59,045 DEBUG:----------------------DONE Prune PHIs-----------------------
2024-07-15 06:22:59,045 DEBUG:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1'}), (8, {'index': '$const6.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'res': '$x18.3'}), (20, {'res': '$const20.4'}), (22, {'index': '$const20.4', 'target': '$x18.3', 'res': '$22binary_subscr.5'}), (24, {}), (26, {}), (28, {}), (30, {}), (32, {'lhs': '$8binary_subscr.2', 'rhs': '$22binary_subscr.5', 'res': '$32compare_op.6'}), (34, {}), (36, {}), (38, {'res': '$x38.7'}), (40, {'res': '$const40.8'}), (42, {'index': '$const40.8', 'target': '$x38.7', 'res': '$42binary_subscr.9'}), (44, {}), (46, {}), (48, {}), (50, {}), (52, {'res': '$x52.10'}), (54, {'res': '$const54.11'}), (56, {'index': '$const54.11', 'target': '$x52.10', 'res': '$56binary_subscr.12'}), (58, {}), (60, {}), (62, {}), (64, {}), (66, {'lhs': '$42binary_subscr.9', 'rhs': '$56binary_subscr.12', 'res': '$66compare_op.13'}), (68, {}), (70, {}), (72, {'op': '&', 'lhs': '$32compare_op.6', 'rhs': '$66compare_op.13', 'res': '$binop_and_72.14'}), (74, {}), (76, {'retval': '$binop_and_72.14', 'castval': '$76return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-15 06:22:59,046 DEBUG:label 0:
    x = arg(0, name=x)                       ['x']
    $const6.1 = const(int, 0)                ['$const6.1']
    $8binary_subscr.2 = getitem(value=x, index=$const6.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1', 'x']
    $const20.4 = const(int, -1)              ['$const20.4']
    $22binary_subscr.5 = getitem(value=x, index=$const20.4, fn=<built-in function getitem>) ['$22binary_subscr.5', '$const20.4', 'x']
    $32compare_op.6 = $8binary_subscr.2 < $22binary_subscr.5 ['$22binary_subscr.5', '$32compare_op.6', '$8binary_subscr.2']
    $const40.8 = const(int, 0)               ['$const40.8']
    $42binary_subscr.9 = getitem(value=x, index=$const40.8, fn=<built-in function getitem>) ['$42binary_subscr.9', '$const40.8', 'x']
    $const54.11 = const(int, 1)              ['$const54.11']
    $56binary_subscr.12 = getitem(value=x, index=$const54.11, fn=<built-in function getitem>) ['$56binary_subscr.12', '$const54.11', 'x']
    $66compare_op.13 = $42binary_subscr.9 <= $56binary_subscr.12 ['$42binary_subscr.9', '$56binary_subscr.12', '$66compare_op.13']
    $binop_and_72.14 = $32compare_op.6 & $66compare_op.13 ['$32compare_op.6', '$66compare_op.13', '$binop_and_72.14']
    $76return_value.15 = cast(value=$binop_and_72.14) ['$76return_value.15', '$binop_and_72.14']
    return $76return_value.15                ['$76return_value.15']

2024-07-15 06:22:59,943 INFO:Isolator created.
2024-07-15 06:23:14,462 INFO:Isolation complete.
2024-07-15 06:23:14,462 INFO:127.0.0.1 - - [15/Jul/2024 06:23:14] "POST /isolate HTTP/1.1" 200 -
2024-07-15 06:24:51,569 INFO:demucs is already installed.
2024-07-15 06:24:51,569 INFO:All required packages are already installed.
2024-07-15 06:24:51,569 INFO:Starting server...
2024-07-15 06:24:51,588 INFO:[31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2024-07-15 06:24:51,588 INFO:[33mPress CTRL+C to quit[0m
2024-07-15 06:24:51,589 INFO: * Restarting with stat
2024-07-15 06:24:51,965 INFO:demucs is already installed.
2024-07-15 06:24:51,965 INFO:All required packages are already installed.
2024-07-15 06:24:51,965 INFO:Starting server...
2024-07-15 06:24:51,974 WARNING: * Debugger is active!
2024-07-15 06:24:51,977 INFO: * Debugger PIN: 124-101-132
2024-07-15 06:24:57,231 INFO:Isolating audio...
2024-07-15 06:24:57,231 DEBUG:Request data: {'file_path': 'C:\\Users\\tjerf\\AppData\\Local\\Temp\\316e938b-912b-4cca-b474-b6a64a2d096f.wav', 'model_name': 'htdemucs', 'device': 'cuda', 'shifts': 0, 'two_stems': None, 'output_folder': 'C:\\Users\\tjerf\\AppData\\Local\\Temp/isolated_isolated'}
2024-07-15 06:24:58,266 DEBUG:bytecode dump:
>          0	NOP(arg=None, lineno=1141)
           2	RESUME(arg=0, lineno=1141)
           4	LOAD_FAST(arg=0, lineno=1144)
           6	LOAD_CONST(arg=1, lineno=1144)
           8	BINARY_SUBSCR(arg=None, lineno=1144)
          18	STORE_FAST(arg=3, lineno=1144)
          20	LOAD_FAST(arg=1, lineno=1145)
          22	UNARY_NEGATIVE(arg=None, lineno=1145)
          24	LOAD_FAST(arg=3, lineno=1145)
          26	SWAP(arg=2, lineno=1145)
          28	COPY(arg=2, lineno=1145)
          30	COMPARE_OP(arg=1, lineno=1145)
          36	POP_JUMP_FORWARD_IF_FALSE(arg=6, lineno=1145)
          38	LOAD_FAST(arg=1, lineno=1145)
          40	COMPARE_OP(arg=1, lineno=1145)
          46	POP_JUMP_FORWARD_IF_FALSE(arg=5, lineno=1145)
          48	JUMP_FORWARD(arg=2, lineno=1145)
>         50	POP_TOP(arg=None, lineno=1145)
          52	JUMP_FORWARD(arg=2, lineno=1145)
>         54	LOAD_CONST(arg=1, lineno=1146)
          56	STORE_FAST(arg=3, lineno=1146)
>         58	LOAD_FAST(arg=0, lineno=1148)
          60	LOAD_CONST(arg=2, lineno=1148)
          62	BINARY_SUBSCR(arg=None, lineno=1148)
          72	STORE_FAST(arg=4, lineno=1148)
          74	LOAD_FAST(arg=1, lineno=1149)
          76	UNARY_NEGATIVE(arg=None, lineno=1149)
          78	LOAD_FAST(arg=4, lineno=1149)
          80	SWAP(arg=2, lineno=1149)
          82	COPY(arg=2, lineno=1149)
          84	COMPARE_OP(arg=1, lineno=1149)
          90	POP_JUMP_FORWARD_IF_FALSE(arg=6, lineno=1149)
          92	LOAD_FAST(arg=1, lineno=1149)
          94	COMPARE_OP(arg=1, lineno=1149)
         100	POP_JUMP_FORWARD_IF_FALSE(arg=5, lineno=1149)
         102	JUMP_FORWARD(arg=2, lineno=1149)
>        104	POP_TOP(arg=None, lineno=1149)
         106	JUMP_FORWARD(arg=2, lineno=1149)
>        108	LOAD_CONST(arg=1, lineno=1150)
         110	STORE_FAST(arg=4, lineno=1150)
>        112	LOAD_FAST(arg=2, lineno=1152)
         114	POP_JUMP_FORWARD_IF_FALSE(arg=42, lineno=1152)
         116	LOAD_GLOBAL(arg=1, lineno=1153)
         128	LOAD_ATTR(arg=1, lineno=1153)
         138	LOAD_FAST(arg=3, lineno=1153)
         140	PRECALL(arg=1, lineno=1153)
         144	CALL(arg=1, lineno=1153)
         154	LOAD_GLOBAL(arg=1, lineno=1153)
         166	LOAD_ATTR(arg=1, lineno=1153)
         176	LOAD_FAST(arg=4, lineno=1153)
         178	PRECALL(arg=1, lineno=1153)
         182	CALL(arg=1, lineno=1153)
         192	COMPARE_OP(arg=3, lineno=1153)
         198	RETURN_VALUE(arg=None, lineno=1153)
>        200	LOAD_GLOBAL(arg=1, lineno=1155)
         212	LOAD_ATTR(arg=2, lineno=1155)
         222	LOAD_FAST(arg=3, lineno=1155)
         224	PRECALL(arg=1, lineno=1155)
         228	CALL(arg=1, lineno=1155)
         238	LOAD_GLOBAL(arg=1, lineno=1155)
         250	LOAD_ATTR(arg=2, lineno=1155)
         260	LOAD_FAST(arg=4, lineno=1155)
         262	PRECALL(arg=1, lineno=1155)
         266	CALL(arg=1, lineno=1155)
         276	COMPARE_OP(arg=3, lineno=1155)
         282	RETURN_VALUE(arg=None, lineno=1155)
2024-07-15 06:24:58,266 DEBUG:pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-15 06:24:58,266 DEBUG:stack: []
2024-07-15 06:24:58,266 DEBUG:state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-15 06:24:58,266 DEBUG:dispatch pc=0, inst=NOP(arg=None, lineno=1141)
2024-07-15 06:24:58,266 DEBUG:stack []
2024-07-15 06:24:58,266 DEBUG:dispatch pc=2, inst=RESUME(arg=0, lineno=1141)
2024-07-15 06:24:58,266 DEBUG:stack []
2024-07-15 06:24:58,266 DEBUG:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1144)
2024-07-15 06:24:58,266 DEBUG:stack []
2024-07-15 06:24:58,266 DEBUG:dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1144)
2024-07-15 06:24:58,266 DEBUG:stack ['$x4.0']
2024-07-15 06:24:58,266 DEBUG:dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1144)
2024-07-15 06:24:58,266 DEBUG:stack ['$x4.0', '$const6.1']
2024-07-15 06:24:58,266 DEBUG:dispatch pc=18, inst=STORE_FAST(arg=3, lineno=1144)
2024-07-15 06:24:58,266 DEBUG:stack ['$8binary_subscr.2']
2024-07-15 06:24:58,266 DEBUG:dispatch pc=20, inst=LOAD_FAST(arg=1, lineno=1145)
2024-07-15 06:24:58,266 DEBUG:stack []
2024-07-15 06:24:58,266 DEBUG:dispatch pc=22, inst=UNARY_NEGATIVE(arg=None, lineno=1145)
2024-07-15 06:24:58,266 DEBUG:stack ['$threshold20.3']
2024-07-15 06:24:58,266 DEBUG:dispatch pc=24, inst=LOAD_FAST(arg=3, lineno=1145)
2024-07-15 06:24:58,266 DEBUG:stack ['$22unary_negative.4']
2024-07-15 06:24:58,266 DEBUG:dispatch pc=26, inst=SWAP(arg=2, lineno=1145)
2024-07-15 06:24:58,266 DEBUG:stack ['$22unary_negative.4', '$x024.5']
2024-07-15 06:24:58,266 DEBUG:dispatch pc=28, inst=COPY(arg=2, lineno=1145)
2024-07-15 06:24:58,266 DEBUG:stack ['$x024.5', '$22unary_negative.4']
2024-07-15 06:24:58,266 DEBUG:dispatch pc=30, inst=COMPARE_OP(arg=1, lineno=1145)
2024-07-15 06:24:58,266 DEBUG:stack ['$x024.5', '$22unary_negative.4', '$x024.5']
2024-07-15 06:24:58,266 DEBUG:dispatch pc=36, inst=POP_JUMP_FORWARD_IF_FALSE(arg=6, lineno=1145)
2024-07-15 06:24:58,266 DEBUG:stack ['$x024.5', '$30compare_op.6']
2024-07-15 06:24:58,266 DEBUG:end state. edges=[Edge(pc=38, stack=('$x024.5',), blockstack=(), npush=0), Edge(pc=50, stack=('$x024.5',), blockstack=(), npush=0)]
2024-07-15 06:24:58,266 DEBUG:pending: deque([State(pc_initial=38 nstack_initial=1), State(pc_initial=50 nstack_initial=1)])
2024-07-15 06:24:58,266 DEBUG:stack: ['$phi38.0']
2024-07-15 06:24:58,266 DEBUG:state.pc_initial: State(pc_initial=38 nstack_initial=1)
2024-07-15 06:24:58,266 DEBUG:dispatch pc=38, inst=LOAD_FAST(arg=1, lineno=1145)
2024-07-15 06:24:58,266 DEBUG:stack ['$phi38.0']
2024-07-15 06:24:58,266 DEBUG:dispatch pc=40, inst=COMPARE_OP(arg=1, lineno=1145)
2024-07-15 06:24:58,266 DEBUG:stack ['$phi38.0', '$threshold38.1']
2024-07-15 06:24:58,266 DEBUG:dispatch pc=46, inst=POP_JUMP_FORWARD_IF_FALSE(arg=5, lineno=1145)
2024-07-15 06:24:58,266 DEBUG:stack ['$40compare_op.2']
2024-07-15 06:24:58,266 DEBUG:end state. edges=[Edge(pc=48, stack=(), blockstack=(), npush=0), Edge(pc=58, stack=(), blockstack=(), npush=0)]
2024-07-15 06:24:58,266 DEBUG:pending: deque([State(pc_initial=50 nstack_initial=1), State(pc_initial=48 nstack_initial=0), State(pc_initial=58 nstack_initial=0)])
2024-07-15 06:24:58,266 DEBUG:stack: ['$phi50.0']
2024-07-15 06:24:58,266 DEBUG:state.pc_initial: State(pc_initial=50 nstack_initial=1)
2024-07-15 06:24:58,266 DEBUG:dispatch pc=50, inst=POP_TOP(arg=None, lineno=1145)
2024-07-15 06:24:58,266 DEBUG:stack ['$phi50.0']
2024-07-15 06:24:58,266 DEBUG:dispatch pc=52, inst=JUMP_FORWARD(arg=2, lineno=1145)
2024-07-15 06:24:58,266 DEBUG:stack []
2024-07-15 06:24:58,266 DEBUG:end state. edges=[Edge(pc=58, stack=(), blockstack=(), npush=0)]
2024-07-15 06:24:58,266 DEBUG:pending: deque([State(pc_initial=48 nstack_initial=0), State(pc_initial=58 nstack_initial=0), State(pc_initial=58 nstack_initial=0)])
2024-07-15 06:24:58,266 DEBUG:stack: []
2024-07-15 06:24:58,266 DEBUG:state.pc_initial: State(pc_initial=48 nstack_initial=0)
2024-07-15 06:24:58,266 DEBUG:dispatch pc=48, inst=JUMP_FORWARD(arg=2, lineno=1145)
2024-07-15 06:24:58,266 DEBUG:stack []
2024-07-15 06:24:58,266 DEBUG:end state. edges=[Edge(pc=54, stack=(), blockstack=(), npush=0)]
2024-07-15 06:24:58,266 DEBUG:pending: deque([State(pc_initial=58 nstack_initial=0), State(pc_initial=58 nstack_initial=0), State(pc_initial=54 nstack_initial=0)])
2024-07-15 06:24:58,266 DEBUG:stack: []
2024-07-15 06:24:58,266 DEBUG:state.pc_initial: State(pc_initial=58 nstack_initial=0)
2024-07-15 06:24:58,266 DEBUG:dispatch pc=58, inst=LOAD_FAST(arg=0, lineno=1148)
2024-07-15 06:24:58,266 DEBUG:stack []
2024-07-15 06:24:58,266 DEBUG:dispatch pc=60, inst=LOAD_CONST(arg=2, lineno=1148)
2024-07-15 06:24:58,266 DEBUG:stack ['$x58.0']
2024-07-15 06:24:58,266 DEBUG:dispatch pc=62, inst=BINARY_SUBSCR(arg=None, lineno=1148)
2024-07-15 06:24:58,266 DEBUG:stack ['$x58.0', '$const60.1']
2024-07-15 06:24:58,266 DEBUG:dispatch pc=72, inst=STORE_FAST(arg=4, lineno=1148)
2024-07-15 06:24:58,266 DEBUG:stack ['$62binary_subscr.2']
2024-07-15 06:24:58,266 DEBUG:dispatch pc=74, inst=LOAD_FAST(arg=1, lineno=1149)
2024-07-15 06:24:58,266 DEBUG:stack []
2024-07-15 06:24:58,266 DEBUG:dispatch pc=76, inst=UNARY_NEGATIVE(arg=None, lineno=1149)
2024-07-15 06:24:58,266 DEBUG:stack ['$threshold74.3']
2024-07-15 06:24:58,266 DEBUG:dispatch pc=78, inst=LOAD_FAST(arg=4, lineno=1149)
2024-07-15 06:24:58,266 DEBUG:stack ['$76unary_negative.4']
2024-07-15 06:24:58,266 DEBUG:dispatch pc=80, inst=SWAP(arg=2, lineno=1149)
2024-07-15 06:24:58,266 DEBUG:stack ['$76unary_negative.4', '$x178.5']
2024-07-15 06:24:58,266 DEBUG:dispatch pc=82, inst=COPY(arg=2, lineno=1149)
2024-07-15 06:24:58,266 DEBUG:stack ['$x178.5', '$76unary_negative.4']
2024-07-15 06:24:58,266 DEBUG:dispatch pc=84, inst=COMPARE_OP(arg=1, lineno=1149)
2024-07-15 06:24:58,266 DEBUG:stack ['$x178.5', '$76unary_negative.4', '$x178.5']
2024-07-15 06:24:58,270 DEBUG:dispatch pc=90, inst=POP_JUMP_FORWARD_IF_FALSE(arg=6, lineno=1149)
2024-07-15 06:24:58,270 DEBUG:stack ['$x178.5', '$84compare_op.6']
2024-07-15 06:24:58,270 DEBUG:end state. edges=[Edge(pc=92, stack=('$x178.5',), blockstack=(), npush=0), Edge(pc=104, stack=('$x178.5',), blockstack=(), npush=0)]
2024-07-15 06:24:58,270 DEBUG:pending: deque([State(pc_initial=58 nstack_initial=0), State(pc_initial=54 nstack_initial=0), State(pc_initial=92 nstack_initial=1), State(pc_initial=104 nstack_initial=1)])
2024-07-15 06:24:58,270 DEBUG:pending: deque([State(pc_initial=54 nstack_initial=0), State(pc_initial=92 nstack_initial=1), State(pc_initial=104 nstack_initial=1)])
2024-07-15 06:24:58,270 DEBUG:stack: []
2024-07-15 06:24:58,270 DEBUG:state.pc_initial: State(pc_initial=54 nstack_initial=0)
2024-07-15 06:24:58,270 DEBUG:dispatch pc=54, inst=LOAD_CONST(arg=1, lineno=1146)
2024-07-15 06:24:58,270 DEBUG:stack []
2024-07-15 06:24:58,270 DEBUG:dispatch pc=56, inst=STORE_FAST(arg=3, lineno=1146)
2024-07-15 06:24:58,270 DEBUG:stack ['$const54.0']
2024-07-15 06:24:58,270 DEBUG:end state. edges=[Edge(pc=58, stack=(), blockstack=(), npush=0)]
2024-07-15 06:24:58,270 DEBUG:pending: deque([State(pc_initial=92 nstack_initial=1), State(pc_initial=104 nstack_initial=1), State(pc_initial=58 nstack_initial=0)])
2024-07-15 06:24:58,270 DEBUG:stack: ['$phi92.0']
2024-07-15 06:24:58,270 DEBUG:state.pc_initial: State(pc_initial=92 nstack_initial=1)
2024-07-15 06:24:58,270 DEBUG:dispatch pc=92, inst=LOAD_FAST(arg=1, lineno=1149)
2024-07-15 06:24:58,270 DEBUG:stack ['$phi92.0']
2024-07-15 06:24:58,270 DEBUG:dispatch pc=94, inst=COMPARE_OP(arg=1, lineno=1149)
2024-07-15 06:24:58,270 DEBUG:stack ['$phi92.0', '$threshold92.1']
2024-07-15 06:24:58,270 DEBUG:dispatch pc=100, inst=POP_JUMP_FORWARD_IF_FALSE(arg=5, lineno=1149)
2024-07-15 06:24:58,270 DEBUG:stack ['$94compare_op.2']
2024-07-15 06:24:58,270 DEBUG:end state. edges=[Edge(pc=102, stack=(), blockstack=(), npush=0), Edge(pc=112, stack=(), blockstack=(), npush=0)]
2024-07-15 06:24:58,270 DEBUG:pending: deque([State(pc_initial=104 nstack_initial=1), State(pc_initial=58 nstack_initial=0), State(pc_initial=102 nstack_initial=0), State(pc_initial=112 nstack_initial=0)])
2024-07-15 06:24:58,270 DEBUG:stack: ['$phi104.0']
2024-07-15 06:24:58,270 DEBUG:state.pc_initial: State(pc_initial=104 nstack_initial=1)
2024-07-15 06:24:58,270 DEBUG:dispatch pc=104, inst=POP_TOP(arg=None, lineno=1149)
2024-07-15 06:24:58,270 DEBUG:stack ['$phi104.0']
2024-07-15 06:24:58,270 DEBUG:dispatch pc=106, inst=JUMP_FORWARD(arg=2, lineno=1149)
2024-07-15 06:24:58,270 DEBUG:stack []
2024-07-15 06:24:58,270 DEBUG:end state. edges=[Edge(pc=112, stack=(), blockstack=(), npush=0)]
2024-07-15 06:24:58,270 DEBUG:pending: deque([State(pc_initial=58 nstack_initial=0), State(pc_initial=102 nstack_initial=0), State(pc_initial=112 nstack_initial=0), State(pc_initial=112 nstack_initial=0)])
2024-07-15 06:24:58,270 DEBUG:pending: deque([State(pc_initial=102 nstack_initial=0), State(pc_initial=112 nstack_initial=0), State(pc_initial=112 nstack_initial=0)])
2024-07-15 06:24:58,270 DEBUG:stack: []
2024-07-15 06:24:58,270 DEBUG:state.pc_initial: State(pc_initial=102 nstack_initial=0)
2024-07-15 06:24:58,270 DEBUG:dispatch pc=102, inst=JUMP_FORWARD(arg=2, lineno=1149)
2024-07-15 06:24:58,270 DEBUG:stack []
2024-07-15 06:24:58,270 DEBUG:end state. edges=[Edge(pc=108, stack=(), blockstack=(), npush=0)]
2024-07-15 06:24:58,270 DEBUG:pending: deque([State(pc_initial=112 nstack_initial=0), State(pc_initial=112 nstack_initial=0), State(pc_initial=108 nstack_initial=0)])
2024-07-15 06:24:58,271 DEBUG:stack: []
2024-07-15 06:24:58,271 DEBUG:state.pc_initial: State(pc_initial=112 nstack_initial=0)
2024-07-15 06:24:58,271 DEBUG:dispatch pc=112, inst=LOAD_FAST(arg=2, lineno=1152)
2024-07-15 06:24:58,271 DEBUG:stack []
2024-07-15 06:24:58,271 DEBUG:dispatch pc=114, inst=POP_JUMP_FORWARD_IF_FALSE(arg=42, lineno=1152)
2024-07-15 06:24:58,271 DEBUG:stack ['$zero_pos112.0']
2024-07-15 06:24:58,271 DEBUG:end state. edges=[Edge(pc=116, stack=(), blockstack=(), npush=0), Edge(pc=200, stack=(), blockstack=(), npush=0)]
2024-07-15 06:24:58,271 DEBUG:pending: deque([State(pc_initial=112 nstack_initial=0), State(pc_initial=108 nstack_initial=0), State(pc_initial=116 nstack_initial=0), State(pc_initial=200 nstack_initial=0)])
2024-07-15 06:24:58,271 DEBUG:pending: deque([State(pc_initial=108 nstack_initial=0), State(pc_initial=116 nstack_initial=0), State(pc_initial=200 nstack_initial=0)])
2024-07-15 06:24:58,271 DEBUG:stack: []
2024-07-15 06:24:58,271 DEBUG:state.pc_initial: State(pc_initial=108 nstack_initial=0)
2024-07-15 06:24:58,271 DEBUG:dispatch pc=108, inst=LOAD_CONST(arg=1, lineno=1150)
2024-07-15 06:24:58,271 DEBUG:stack []
2024-07-15 06:24:58,271 DEBUG:dispatch pc=110, inst=STORE_FAST(arg=4, lineno=1150)
2024-07-15 06:24:58,271 DEBUG:stack ['$const108.0']
2024-07-15 06:24:58,271 DEBUG:end state. edges=[Edge(pc=112, stack=(), blockstack=(), npush=0)]
2024-07-15 06:24:58,271 DEBUG:pending: deque([State(pc_initial=116 nstack_initial=0), State(pc_initial=200 nstack_initial=0), State(pc_initial=112 nstack_initial=0)])
2024-07-15 06:24:58,271 DEBUG:stack: []
2024-07-15 06:24:58,271 DEBUG:state.pc_initial: State(pc_initial=116 nstack_initial=0)
2024-07-15 06:24:58,271 DEBUG:dispatch pc=116, inst=LOAD_GLOBAL(arg=1, lineno=1153)
2024-07-15 06:24:58,271 DEBUG:stack []
2024-07-15 06:24:58,271 DEBUG:dispatch pc=128, inst=LOAD_ATTR(arg=1, lineno=1153)
2024-07-15 06:24:58,271 DEBUG:stack ['$null$116.1', '$116load_global.0']
2024-07-15 06:24:58,271 DEBUG:dispatch pc=138, inst=LOAD_FAST(arg=3, lineno=1153)
2024-07-15 06:24:58,271 DEBUG:stack ['$null$116.1', '$128load_attr.2']
2024-07-15 06:24:58,271 DEBUG:dispatch pc=140, inst=PRECALL(arg=1, lineno=1153)
2024-07-15 06:24:58,271 DEBUG:stack ['$null$116.1', '$128load_attr.2', '$x0138.3']
2024-07-15 06:24:58,271 DEBUG:dispatch pc=144, inst=CALL(arg=1, lineno=1153)
2024-07-15 06:24:58,271 DEBUG:stack ['$null$116.1', '$128load_attr.2', '$x0138.3']
2024-07-15 06:24:58,271 DEBUG:dispatch pc=154, inst=LOAD_GLOBAL(arg=1, lineno=1153)
2024-07-15 06:24:58,271 DEBUG:stack ['$144call.4']
2024-07-15 06:24:58,271 DEBUG:dispatch pc=166, inst=LOAD_ATTR(arg=1, lineno=1153)
2024-07-15 06:24:58,271 DEBUG:stack ['$144call.4', '$null$154.6', '$154load_global.5']
2024-07-15 06:24:58,272 DEBUG:dispatch pc=176, inst=LOAD_FAST(arg=4, lineno=1153)
2024-07-15 06:24:58,272 DEBUG:stack ['$144call.4', '$null$154.6', '$166load_attr.7']
2024-07-15 06:24:58,272 DEBUG:dispatch pc=178, inst=PRECALL(arg=1, lineno=1153)
2024-07-15 06:24:58,272 DEBUG:stack ['$144call.4', '$null$154.6', '$166load_attr.7', '$x1176.8']
2024-07-15 06:24:58,272 DEBUG:dispatch pc=182, inst=CALL(arg=1, lineno=1153)
2024-07-15 06:24:58,272 DEBUG:stack ['$144call.4', '$null$154.6', '$166load_attr.7', '$x1176.8']
2024-07-15 06:24:58,272 DEBUG:dispatch pc=192, inst=COMPARE_OP(arg=3, lineno=1153)
2024-07-15 06:24:58,272 DEBUG:stack ['$144call.4', '$182call.9']
2024-07-15 06:24:58,272 DEBUG:dispatch pc=198, inst=RETURN_VALUE(arg=None, lineno=1153)
2024-07-15 06:24:58,272 DEBUG:stack ['$192compare_op.10']
2024-07-15 06:24:58,272 DEBUG:end state. edges=[]
2024-07-15 06:24:58,272 DEBUG:pending: deque([State(pc_initial=200 nstack_initial=0), State(pc_initial=112 nstack_initial=0)])
2024-07-15 06:24:58,272 DEBUG:stack: []
2024-07-15 06:24:58,272 DEBUG:state.pc_initial: State(pc_initial=200 nstack_initial=0)
2024-07-15 06:24:58,272 DEBUG:dispatch pc=200, inst=LOAD_GLOBAL(arg=1, lineno=1155)
2024-07-15 06:24:58,272 DEBUG:stack []
2024-07-15 06:24:58,272 DEBUG:dispatch pc=212, inst=LOAD_ATTR(arg=2, lineno=1155)
2024-07-15 06:24:58,272 DEBUG:stack ['$null$200.1', '$200load_global.0']
2024-07-15 06:24:58,272 DEBUG:dispatch pc=222, inst=LOAD_FAST(arg=3, lineno=1155)
2024-07-15 06:24:58,272 DEBUG:stack ['$null$200.1', '$212load_attr.2']
2024-07-15 06:24:58,272 DEBUG:dispatch pc=224, inst=PRECALL(arg=1, lineno=1155)
2024-07-15 06:24:58,272 DEBUG:stack ['$null$200.1', '$212load_attr.2', '$x0222.3']
2024-07-15 06:24:58,272 DEBUG:dispatch pc=228, inst=CALL(arg=1, lineno=1155)
2024-07-15 06:24:58,272 DEBUG:stack ['$null$200.1', '$212load_attr.2', '$x0222.3']
2024-07-15 06:24:58,272 DEBUG:dispatch pc=238, inst=LOAD_GLOBAL(arg=1, lineno=1155)
2024-07-15 06:24:58,272 DEBUG:stack ['$228call.4']
2024-07-15 06:24:58,272 DEBUG:dispatch pc=250, inst=LOAD_ATTR(arg=2, lineno=1155)
2024-07-15 06:24:58,272 DEBUG:stack ['$228call.4', '$null$238.6', '$238load_global.5']
2024-07-15 06:24:58,272 DEBUG:dispatch pc=260, inst=LOAD_FAST(arg=4, lineno=1155)
2024-07-15 06:24:58,272 DEBUG:stack ['$228call.4', '$null$238.6', '$250load_attr.7']
2024-07-15 06:24:58,272 DEBUG:dispatch pc=262, inst=PRECALL(arg=1, lineno=1155)
2024-07-15 06:24:58,272 DEBUG:stack ['$228call.4', '$null$238.6', '$250load_attr.7', '$x1260.8']
2024-07-15 06:24:58,273 DEBUG:dispatch pc=266, inst=CALL(arg=1, lineno=1155)
2024-07-15 06:24:58,273 DEBUG:stack ['$228call.4', '$null$238.6', '$250load_attr.7', '$x1260.8']
2024-07-15 06:24:58,273 DEBUG:dispatch pc=276, inst=COMPARE_OP(arg=3, lineno=1155)
2024-07-15 06:24:58,273 DEBUG:stack ['$228call.4', '$266call.9']
2024-07-15 06:24:58,273 DEBUG:dispatch pc=282, inst=RETURN_VALUE(arg=None, lineno=1155)
2024-07-15 06:24:58,273 DEBUG:stack ['$276compare_op.10']
2024-07-15 06:24:58,273 DEBUG:end state. edges=[]
2024-07-15 06:24:58,273 DEBUG:pending: deque([State(pc_initial=112 nstack_initial=0)])
2024-07-15 06:24:58,273 DEBUG:-------------------------Prune PHIs-------------------------
2024-07-15 06:24:58,273 DEBUG:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=38 nstack_initial=1): {'$phi38.0'},
             State(pc_initial=48 nstack_initial=0): set(),
             State(pc_initial=50 nstack_initial=1): set(),
             State(pc_initial=54 nstack_initial=0): set(),
             State(pc_initial=58 nstack_initial=0): set(),
             State(pc_initial=92 nstack_initial=1): {'$phi92.0'},
             State(pc_initial=102 nstack_initial=0): set(),
             State(pc_initial=104 nstack_initial=1): set(),
             State(pc_initial=108 nstack_initial=0): set(),
             State(pc_initial=112 nstack_initial=0): set(),
             State(pc_initial=116 nstack_initial=0): set(),
             State(pc_initial=200 nstack_initial=0): set()})
2024-07-15 06:24:58,274 DEBUG:defmap: {'$phi104.0': State(pc_initial=58 nstack_initial=0),
 '$phi38.0': State(pc_initial=0 nstack_initial=0),
 '$phi50.0': State(pc_initial=0 nstack_initial=0),
 '$phi92.0': State(pc_initial=58 nstack_initial=0)}
2024-07-15 06:24:58,274 DEBUG:phismap: defaultdict(<class 'set'>,
            {'$phi104.0': {('$x178.5', State(pc_initial=58 nstack_initial=0))},
             '$phi38.0': {('$x024.5', State(pc_initial=0 nstack_initial=0))},
             '$phi50.0': {('$x024.5', State(pc_initial=0 nstack_initial=0))},
             '$phi92.0': {('$x178.5', State(pc_initial=58 nstack_initial=0))}})
2024-07-15 06:24:58,274 DEBUG:changing phismap: defaultdict(<class 'set'>,
            {'$phi104.0': {('$x178.5', State(pc_initial=58 nstack_initial=0))},
             '$phi38.0': {('$x024.5', State(pc_initial=0 nstack_initial=0))},
             '$phi50.0': {('$x024.5', State(pc_initial=0 nstack_initial=0))},
             '$phi92.0': {('$x178.5', State(pc_initial=58 nstack_initial=0))}})
2024-07-15 06:24:58,274 DEBUG:keep phismap: {'$phi38.0': {('$x024.5', State(pc_initial=0 nstack_initial=0))},
 '$phi92.0': {('$x178.5', State(pc_initial=58 nstack_initial=0))}}
2024-07-15 06:24:58,274 DEBUG:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi38.0': '$x024.5'},
             State(pc_initial=58 nstack_initial=0): {'$phi92.0': '$x178.5'}})
2024-07-15 06:24:58,274 DEBUG:----------------------DONE Prune PHIs-----------------------
2024-07-15 06:24:58,274 DEBUG:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1'}), (8, {'index': '$const6.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'value': '$8binary_subscr.2'}), (20, {'res': '$threshold20.3'}), (22, {'value': '$threshold20.3', 'res': '$22unary_negative.4'}), (24, {'res': '$x024.5'}), (30, {'lhs': '$22unary_negative.4', 'rhs': '$x024.5', 'res': '$30compare_op.6'}), (32, {}), (34, {}), (36, {'pred': '$30compare_op.6'})), outgoing_phis={'$phi38.0': '$x024.5'}, blockstack=(), active_try_block=None, outgoing_edgepushed={38: ('$x024.5',), 50: ('$x024.5',)})
2024-07-15 06:24:58,274 DEBUG:block_infos State(pc_initial=38 nstack_initial=1):
AdaptBlockInfo(insts=((38, {'res': '$threshold38.1'}), (40, {'lhs': '$phi38.0', 'rhs': '$threshold38.1', 'res': '$40compare_op.2'}), (42, {}), (44, {}), (46, {'pred': '$40compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={48: (), 58: ()})
2024-07-15 06:24:58,274 DEBUG:block_infos State(pc_initial=48 nstack_initial=0):
AdaptBlockInfo(insts=((48, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={54: ()})
2024-07-15 06:24:58,274 DEBUG:block_infos State(pc_initial=50 nstack_initial=1):
AdaptBlockInfo(insts=((52, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={58: ()})
2024-07-15 06:24:58,274 DEBUG:block_infos State(pc_initial=54 nstack_initial=0):
AdaptBlockInfo(insts=((54, {'res': '$const54.0'}), (56, {'value': '$const54.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={58: ()})
2024-07-15 06:24:58,274 DEBUG:block_infos State(pc_initial=58 nstack_initial=0):
AdaptBlockInfo(insts=((58, {'res': '$x58.0'}), (60, {'res': '$const60.1'}), (62, {'index': '$const60.1', 'target': '$x58.0', 'res': '$62binary_subscr.2'}), (64, {}), (66, {}), (68, {}), (70, {}), (72, {'value': '$62binary_subscr.2'}), (74, {'res': '$threshold74.3'}), (76, {'value': '$threshold74.3', 'res': '$76unary_negative.4'}), (78, {'res': '$x178.5'}), (84, {'lhs': '$76unary_negative.4', 'rhs': '$x178.5', 'res': '$84compare_op.6'}), (86, {}), (88, {}), (90, {'pred': '$84compare_op.6'})), outgoing_phis={'$phi92.0': '$x178.5'}, blockstack=(), active_try_block=None, outgoing_edgepushed={92: ('$x178.5',), 104: ('$x178.5',)})
2024-07-15 06:24:58,274 DEBUG:block_infos State(pc_initial=92 nstack_initial=1):
AdaptBlockInfo(insts=((92, {'res': '$threshold92.1'}), (94, {'lhs': '$phi92.0', 'rhs': '$threshold92.1', 'res': '$94compare_op.2'}), (96, {}), (98, {}), (100, {'pred': '$94compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={102: (), 112: ()})
2024-07-15 06:24:58,274 DEBUG:block_infos State(pc_initial=102 nstack_initial=0):
AdaptBlockInfo(insts=((102, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={108: ()})
2024-07-15 06:24:58,274 DEBUG:block_infos State(pc_initial=104 nstack_initial=1):
AdaptBlockInfo(insts=((106, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={112: ()})
2024-07-15 06:24:58,274 DEBUG:block_infos State(pc_initial=108 nstack_initial=0):
AdaptBlockInfo(insts=((108, {'res': '$const108.0'}), (110, {'value': '$const108.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={112: ()})
2024-07-15 06:24:58,274 DEBUG:block_infos State(pc_initial=112 nstack_initial=0):
AdaptBlockInfo(insts=((112, {'res': '$zero_pos112.0'}), (114, {'pred': '$zero_pos112.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={116: (), 200: ()})
2024-07-15 06:24:58,274 DEBUG:block_infos State(pc_initial=116 nstack_initial=0):
AdaptBlockInfo(insts=((116, {'idx': 0, 'res': '$116load_global.0'}), (118, {}), (120, {}), (122, {}), (124, {}), (126, {}), (128, {'item': '$116load_global.0', 'res': '$128load_attr.2'}), (130, {}), (132, {}), (134, {}), (136, {}), (138, {'res': '$x0138.3'}), (140, {}), (142, {}), (144, {'func': '$128load_attr.2', 'args': ['$x0138.3'], 'kw_names': None, 'res': '$144call.4'}), (146, {}), (148, {}), (150, {}), (152, {}), (154, {'idx': 0, 'res': '$154load_global.5'}), (156, {}), (158, {}), (160, {}), (162, {}), (164, {}), (166, {'item': '$154load_global.5', 'res': '$166load_attr.7'}), (168, {}), (170, {}), (172, {}), (174, {}), (176, {'res': '$x1176.8'}), (178, {}), (180, {}), (182, {'func': '$166load_attr.7', 'args': ['$x1176.8'], 'kw_names': None, 'res': '$182call.9'}), (184, {}), (186, {}), (188, {}), (190, {}), (192, {'lhs': '$144call.4', 'rhs': '$182call.9', 'res': '$192compare_op.10'}), (194, {}), (196, {}), (198, {'retval': '$192compare_op.10', 'castval': '$198return_value.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-15 06:24:58,274 DEBUG:block_infos State(pc_initial=200 nstack_initial=0):
AdaptBlockInfo(insts=((200, {'idx': 0, 'res': '$200load_global.0'}), (202, {}), (204, {}), (206, {}), (208, {}), (210, {}), (212, {'item': '$200load_global.0', 'res': '$212load_attr.2'}), (214, {}), (216, {}), (218, {}), (220, {}), (222, {'res': '$x0222.3'}), (224, {}), (226, {}), (228, {'func': '$212load_attr.2', 'args': ['$x0222.3'], 'kw_names': None, 'res': '$228call.4'}), (230, {}), (232, {}), (234, {}), (236, {}), (238, {'idx': 0, 'res': '$238load_global.5'}), (240, {}), (242, {}), (244, {}), (246, {}), (248, {}), (250, {'item': '$238load_global.5', 'res': '$250load_attr.7'}), (252, {}), (254, {}), (256, {}), (258, {}), (260, {'res': '$x1260.8'}), (262, {}), (264, {}), (266, {'func': '$250load_attr.7', 'args': ['$x1260.8'], 'kw_names': None, 'res': '$266call.9'}), (268, {}), (270, {}), (272, {}), (274, {}), (276, {'lhs': '$228call.4', 'rhs': '$266call.9', 'res': '$276compare_op.10'}), (278, {}), (280, {}), (282, {'retval': '$276compare_op.10', 'castval': '$282return_value.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-15 06:24:58,276 DEBUG:label 0:
    x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    $const6.1 = const(int, 0)                ['$const6.1']
    x0 = getitem(value=x, index=$const6.1, fn=<built-in function getitem>) ['$const6.1', 'x', 'x0']
    $22unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$22unary_negative.4', 'threshold']
    $30compare_op.6 = $22unary_negative.4 <= x0 ['$22unary_negative.4', '$30compare_op.6', 'x0']
    bool36 = global(bool: <class 'bool'>)    ['bool36']
    $36pred = call bool36($30compare_op.6, func=bool36, args=(Var($30compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$30compare_op.6', '$36pred', 'bool36']
    $phi38.0 = x0                            ['$phi38.0', 'x0']
    branch $36pred, 38, 50                   ['$36pred']
label 38:
    $40compare_op.2 = $phi38.0 <= threshold  ['$40compare_op.2', '$phi38.0', 'threshold']
    bool46 = global(bool: <class 'bool'>)    ['bool46']
    $46pred = call bool46($40compare_op.2, func=bool46, args=(Var($40compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$40compare_op.2', '$46pred', 'bool46']
    branch $46pred, 48, 58                   ['$46pred']
label 48:
    jump 54                                  []
label 50:
    jump 58                                  []
label 54:
    x0 = const(int, 0)                       ['x0']
    jump 58                                  []
label 58:
    $const60.1 = const(int, -1)              ['$const60.1']
    x1 = getitem(value=x, index=$const60.1, fn=<built-in function getitem>) ['$const60.1', 'x', 'x1']
    $76unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$76unary_negative.4', 'threshold']
    $84compare_op.6 = $76unary_negative.4 <= x1 ['$76unary_negative.4', '$84compare_op.6', 'x1']
    bool90 = global(bool: <class 'bool'>)    ['bool90']
    $90pred = call bool90($84compare_op.6, func=bool90, args=(Var($84compare_op.6, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None) ['$84compare_op.6', '$90pred', 'bool90']
    $phi92.0 = x1                            ['$phi92.0', 'x1']
    branch $90pred, 92, 104                  ['$90pred']
label 92:
    $94compare_op.2 = $phi92.0 <= threshold  ['$94compare_op.2', '$phi92.0', 'threshold']
    bool100 = global(bool: <class 'bool'>)   ['bool100']
    $100pred = call bool100($94compare_op.2, func=bool100, args=(Var($94compare_op.2, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None) ['$100pred', '$94compare_op.2', 'bool100']
    branch $100pred, 102, 112                ['$100pred']
label 102:
    jump 108                                 []
label 104:
    jump 112                                 []
label 108:
    x1 = const(int, 0)                       ['x1']
    jump 112                                 []
label 112:
    bool114 = global(bool: <class 'bool'>)   ['bool114']
    $114pred = call bool114(zero_pos, func=bool114, args=(Var(zero_pos, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$114pred', 'bool114', 'zero_pos']
    branch $114pred, 116, 200                ['$114pred']
label 116:
    $116load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$116load_global.0']
    $128load_attr.2 = getattr(value=$116load_global.0, attr=signbit) ['$116load_global.0', '$128load_attr.2']
    $144call.4 = call $128load_attr.2(x0, func=$128load_attr.2, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$128load_attr.2', '$144call.4', 'x0']
    $154load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$154load_global.5']
    $166load_attr.7 = getattr(value=$154load_global.5, attr=signbit) ['$154load_global.5', '$166load_attr.7']
    $182call.9 = call $166load_attr.7(x1, func=$166load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None) ['$166load_attr.7', '$182call.9', 'x1']
    $192compare_op.10 = $144call.4 != $182call.9 ['$144call.4', '$182call.9', '$192compare_op.10']
    $198return_value.11 = cast(value=$192compare_op.10) ['$192compare_op.10', '$198return_value.11']
    return $198return_value.11               ['$198return_value.11']
label 200:
    $200load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$200load_global.0']
    $212load_attr.2 = getattr(value=$200load_global.0, attr=sign) ['$200load_global.0', '$212load_attr.2']
    $228call.4 = call $212load_attr.2(x0, func=$212load_attr.2, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$212load_attr.2', '$228call.4', 'x0']
    $238load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\tjerf\\source\\repos\\AudioMate\\SoundBuddy Studio\\src\\python\\myenv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$238load_global.5']
    $250load_attr.7 = getattr(value=$238load_global.5, attr=sign) ['$238load_global.5', '$250load_attr.7']
    $266call.9 = call $250load_attr.7(x1, func=$250load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None) ['$250load_attr.7', '$266call.9', 'x1']
    $276compare_op.10 = $228call.4 != $266call.9 ['$228call.4', '$266call.9', '$276compare_op.10']
    $282return_value.11 = cast(value=$276compare_op.10) ['$276compare_op.10', '$282return_value.11']
    return $282return_value.11               ['$282return_value.11']

2024-07-15 06:24:58,517 DEBUG:bytecode dump:
>          0	NOP(arg=None, lineno=1039)
           2	RESUME(arg=0, lineno=1039)
           4	LOAD_FAST(arg=0, lineno=1042)
           6	LOAD_CONST(arg=1, lineno=1042)
           8	BINARY_SUBSCR(arg=None, lineno=1042)
          18	LOAD_FAST(arg=0, lineno=1042)
          20	LOAD_CONST(arg=2, lineno=1042)
          22	BINARY_SUBSCR(arg=None, lineno=1042)
          32	COMPARE_OP(arg=4, lineno=1042)
          38	LOAD_FAST(arg=0, lineno=1042)
          40	LOAD_CONST(arg=1, lineno=1042)
          42	BINARY_SUBSCR(arg=None, lineno=1042)
          52	LOAD_FAST(arg=0, lineno=1042)
          54	LOAD_CONST(arg=3, lineno=1042)
          56	BINARY_SUBSCR(arg=None, lineno=1042)
          66	COMPARE_OP(arg=5, lineno=1042)
          72	BINARY_OP(arg=1, lineno=1042)
          76	RETURN_VALUE(arg=None, lineno=1042)
2024-07-15 06:24:58,518 DEBUG:pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-15 06:24:58,518 DEBUG:stack: []
2024-07-15 06:24:58,518 DEBUG:state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-15 06:24:58,518 DEBUG:dispatch pc=0, inst=NOP(arg=None, lineno=1039)
2024-07-15 06:24:58,518 DEBUG:stack []
2024-07-15 06:24:58,518 DEBUG:dispatch pc=2, inst=RESUME(arg=0, lineno=1039)
2024-07-15 06:24:58,518 DEBUG:stack []
2024-07-15 06:24:58,518 DEBUG:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1042)
2024-07-15 06:24:58,519 DEBUG:stack []
2024-07-15 06:24:58,519 DEBUG:dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1042)
2024-07-15 06:24:58,519 DEBUG:stack ['$x4.0']
2024-07-15 06:24:58,519 DEBUG:dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1042)
2024-07-15 06:24:58,519 DEBUG:stack ['$x4.0', '$const6.1']
2024-07-15 06:24:58,519 DEBUG:dispatch pc=18, inst=LOAD_FAST(arg=0, lineno=1042)
2024-07-15 06:24:58,519 DEBUG:stack ['$8binary_subscr.2']
2024-07-15 06:24:58,519 DEBUG:dispatch pc=20, inst=LOAD_CONST(arg=2, lineno=1042)
2024-07-15 06:24:58,519 DEBUG:stack ['$8binary_subscr.2', '$x18.3']
2024-07-15 06:24:58,519 DEBUG:dispatch pc=22, inst=BINARY_SUBSCR(arg=None, lineno=1042)
2024-07-15 06:24:58,519 DEBUG:stack ['$8binary_subscr.2', '$x18.3', '$const20.4']
2024-07-15 06:24:58,519 DEBUG:dispatch pc=32, inst=COMPARE_OP(arg=4, lineno=1042)
2024-07-15 06:24:58,519 DEBUG:stack ['$8binary_subscr.2', '$22binary_subscr.5']
2024-07-15 06:24:58,520 DEBUG:dispatch pc=38, inst=LOAD_FAST(arg=0, lineno=1042)
2024-07-15 06:24:58,520 DEBUG:stack ['$32compare_op.6']
2024-07-15 06:24:58,520 DEBUG:dispatch pc=40, inst=LOAD_CONST(arg=1, lineno=1042)
2024-07-15 06:24:58,520 DEBUG:stack ['$32compare_op.6', '$x38.7']
2024-07-15 06:24:58,520 DEBUG:dispatch pc=42, inst=BINARY_SUBSCR(arg=None, lineno=1042)
2024-07-15 06:24:58,520 DEBUG:stack ['$32compare_op.6', '$x38.7', '$const40.8']
2024-07-15 06:24:58,520 DEBUG:dispatch pc=52, inst=LOAD_FAST(arg=0, lineno=1042)
2024-07-15 06:24:58,520 DEBUG:stack ['$32compare_op.6', '$42binary_subscr.9']
2024-07-15 06:24:58,520 DEBUG:dispatch pc=54, inst=LOAD_CONST(arg=3, lineno=1042)
2024-07-15 06:24:58,520 DEBUG:stack ['$32compare_op.6', '$42binary_subscr.9', '$x52.10']
2024-07-15 06:24:58,520 DEBUG:dispatch pc=56, inst=BINARY_SUBSCR(arg=None, lineno=1042)
2024-07-15 06:24:58,520 DEBUG:stack ['$32compare_op.6', '$42binary_subscr.9', '$x52.10', '$const54.11']
2024-07-15 06:24:58,521 DEBUG:dispatch pc=66, inst=COMPARE_OP(arg=5, lineno=1042)
2024-07-15 06:24:58,521 DEBUG:stack ['$32compare_op.6', '$42binary_subscr.9', '$56binary_subscr.12']
2024-07-15 06:24:58,521 DEBUG:dispatch pc=72, inst=BINARY_OP(arg=1, lineno=1042)
2024-07-15 06:24:58,521 DEBUG:stack ['$32compare_op.6', '$66compare_op.13']
2024-07-15 06:24:58,521 DEBUG:dispatch pc=76, inst=RETURN_VALUE(arg=None, lineno=1042)
2024-07-15 06:24:58,521 DEBUG:stack ['$binop_and_72.14']
2024-07-15 06:24:58,521 DEBUG:end state. edges=[]
2024-07-15 06:24:58,521 DEBUG:-------------------------Prune PHIs-------------------------
2024-07-15 06:24:58,521 DEBUG:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-07-15 06:24:58,521 DEBUG:defmap: {}
2024-07-15 06:24:58,521 DEBUG:phismap: defaultdict(<class 'set'>, {})
2024-07-15 06:24:58,521 DEBUG:changing phismap: defaultdict(<class 'set'>, {})
2024-07-15 06:24:58,521 DEBUG:keep phismap: {}
2024-07-15 06:24:58,521 DEBUG:new_out: defaultdict(<class 'dict'>, {})
2024-07-15 06:24:58,521 DEBUG:----------------------DONE Prune PHIs-----------------------
2024-07-15 06:24:58,521 DEBUG:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1'}), (8, {'index': '$const6.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'res': '$x18.3'}), (20, {'res': '$const20.4'}), (22, {'index': '$const20.4', 'target': '$x18.3', 'res': '$22binary_subscr.5'}), (24, {}), (26, {}), (28, {}), (30, {}), (32, {'lhs': '$8binary_subscr.2', 'rhs': '$22binary_subscr.5', 'res': '$32compare_op.6'}), (34, {}), (36, {}), (38, {'res': '$x38.7'}), (40, {'res': '$const40.8'}), (42, {'index': '$const40.8', 'target': '$x38.7', 'res': '$42binary_subscr.9'}), (44, {}), (46, {}), (48, {}), (50, {}), (52, {'res': '$x52.10'}), (54, {'res': '$const54.11'}), (56, {'index': '$const54.11', 'target': '$x52.10', 'res': '$56binary_subscr.12'}), (58, {}), (60, {}), (62, {}), (64, {}), (66, {'lhs': '$42binary_subscr.9', 'rhs': '$56binary_subscr.12', 'res': '$66compare_op.13'}), (68, {}), (70, {}), (72, {'op': '&', 'lhs': '$32compare_op.6', 'rhs': '$66compare_op.13', 'res': '$binop_and_72.14'}), (74, {}), (76, {'retval': '$binop_and_72.14', 'castval': '$76return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-15 06:24:58,524 DEBUG:label 0:
    x = arg(0, name=x)                       ['x']
    $const6.1 = const(int, 0)                ['$const6.1']
    $8binary_subscr.2 = getitem(value=x, index=$const6.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1', 'x']
    $const20.4 = const(int, -1)              ['$const20.4']
    $22binary_subscr.5 = getitem(value=x, index=$const20.4, fn=<built-in function getitem>) ['$22binary_subscr.5', '$const20.4', 'x']
    $32compare_op.6 = $8binary_subscr.2 > $22binary_subscr.5 ['$22binary_subscr.5', '$32compare_op.6', '$8binary_subscr.2']
    $const40.8 = const(int, 0)               ['$const40.8']
    $42binary_subscr.9 = getitem(value=x, index=$const40.8, fn=<built-in function getitem>) ['$42binary_subscr.9', '$const40.8', 'x']
    $const54.11 = const(int, 1)              ['$const54.11']
    $56binary_subscr.12 = getitem(value=x, index=$const54.11, fn=<built-in function getitem>) ['$56binary_subscr.12', '$const54.11', 'x']
    $66compare_op.13 = $42binary_subscr.9 >= $56binary_subscr.12 ['$42binary_subscr.9', '$56binary_subscr.12', '$66compare_op.13']
    $binop_and_72.14 = $32compare_op.6 & $66compare_op.13 ['$32compare_op.6', '$66compare_op.13', '$binop_and_72.14']
    $76return_value.15 = cast(value=$binop_and_72.14) ['$76return_value.15', '$binop_and_72.14']
    return $76return_value.15                ['$76return_value.15']

2024-07-15 06:24:58,525 DEBUG:bytecode dump:
>          0	NOP(arg=None, lineno=1045)
           2	RESUME(arg=0, lineno=1045)
           4	LOAD_FAST(arg=0, lineno=1048)
           6	LOAD_CONST(arg=1, lineno=1048)
           8	BINARY_SUBSCR(arg=None, lineno=1048)
          18	LOAD_FAST(arg=0, lineno=1048)
          20	LOAD_CONST(arg=2, lineno=1048)
          22	BINARY_SUBSCR(arg=None, lineno=1048)
          32	COMPARE_OP(arg=0, lineno=1048)
          38	LOAD_FAST(arg=0, lineno=1048)
          40	LOAD_CONST(arg=1, lineno=1048)
          42	BINARY_SUBSCR(arg=None, lineno=1048)
          52	LOAD_FAST(arg=0, lineno=1048)
          54	LOAD_CONST(arg=3, lineno=1048)
          56	BINARY_SUBSCR(arg=None, lineno=1048)
          66	COMPARE_OP(arg=1, lineno=1048)
          72	BINARY_OP(arg=1, lineno=1048)
          76	RETURN_VALUE(arg=None, lineno=1048)
2024-07-15 06:24:58,525 DEBUG:pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-15 06:24:58,525 DEBUG:stack: []
2024-07-15 06:24:58,525 DEBUG:state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-15 06:24:58,525 DEBUG:dispatch pc=0, inst=NOP(arg=None, lineno=1045)
2024-07-15 06:24:58,525 DEBUG:stack []
2024-07-15 06:24:58,525 DEBUG:dispatch pc=2, inst=RESUME(arg=0, lineno=1045)
2024-07-15 06:24:58,526 DEBUG:stack []
2024-07-15 06:24:58,526 DEBUG:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1048)
2024-07-15 06:24:58,526 DEBUG:stack []
2024-07-15 06:24:58,526 DEBUG:dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1048)
2024-07-15 06:24:58,526 DEBUG:stack ['$x4.0']
2024-07-15 06:24:58,526 DEBUG:dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1048)
2024-07-15 06:24:58,526 DEBUG:stack ['$x4.0', '$const6.1']
2024-07-15 06:24:58,526 DEBUG:dispatch pc=18, inst=LOAD_FAST(arg=0, lineno=1048)
2024-07-15 06:24:58,526 DEBUG:stack ['$8binary_subscr.2']
2024-07-15 06:24:58,526 DEBUG:dispatch pc=20, inst=LOAD_CONST(arg=2, lineno=1048)
2024-07-15 06:24:58,526 DEBUG:stack ['$8binary_subscr.2', '$x18.3']
2024-07-15 06:24:58,526 DEBUG:dispatch pc=22, inst=BINARY_SUBSCR(arg=None, lineno=1048)
2024-07-15 06:24:58,526 DEBUG:stack ['$8binary_subscr.2', '$x18.3', '$const20.4']
2024-07-15 06:24:58,526 DEBUG:dispatch pc=32, inst=COMPARE_OP(arg=0, lineno=1048)
2024-07-15 06:24:58,527 DEBUG:stack ['$8binary_subscr.2', '$22binary_subscr.5']
2024-07-15 06:24:58,527 DEBUG:dispatch pc=38, inst=LOAD_FAST(arg=0, lineno=1048)
2024-07-15 06:24:58,527 DEBUG:stack ['$32compare_op.6']
2024-07-15 06:24:58,527 DEBUG:dispatch pc=40, inst=LOAD_CONST(arg=1, lineno=1048)
2024-07-15 06:24:58,527 DEBUG:stack ['$32compare_op.6', '$x38.7']
2024-07-15 06:24:58,527 DEBUG:dispatch pc=42, inst=BINARY_SUBSCR(arg=None, lineno=1048)
2024-07-15 06:24:58,527 DEBUG:stack ['$32compare_op.6', '$x38.7', '$const40.8']
2024-07-15 06:24:58,527 DEBUG:dispatch pc=52, inst=LOAD_FAST(arg=0, lineno=1048)
2024-07-15 06:24:58,527 DEBUG:stack ['$32compare_op.6', '$42binary_subscr.9']
2024-07-15 06:24:58,527 DEBUG:dispatch pc=54, inst=LOAD_CONST(arg=3, lineno=1048)
2024-07-15 06:24:58,527 DEBUG:stack ['$32compare_op.6', '$42binary_subscr.9', '$x52.10']
2024-07-15 06:24:58,527 DEBUG:dispatch pc=56, inst=BINARY_SUBSCR(arg=None, lineno=1048)
2024-07-15 06:24:58,527 DEBUG:stack ['$32compare_op.6', '$42binary_subscr.9', '$x52.10', '$const54.11']
2024-07-15 06:24:58,527 DEBUG:dispatch pc=66, inst=COMPARE_OP(arg=1, lineno=1048)
2024-07-15 06:24:58,527 DEBUG:stack ['$32compare_op.6', '$42binary_subscr.9', '$56binary_subscr.12']
2024-07-15 06:24:58,527 DEBUG:dispatch pc=72, inst=BINARY_OP(arg=1, lineno=1048)
2024-07-15 06:24:58,527 DEBUG:stack ['$32compare_op.6', '$66compare_op.13']
2024-07-15 06:24:58,527 DEBUG:dispatch pc=76, inst=RETURN_VALUE(arg=None, lineno=1048)
2024-07-15 06:24:58,527 DEBUG:stack ['$binop_and_72.14']
2024-07-15 06:24:58,528 DEBUG:end state. edges=[]
2024-07-15 06:24:58,528 DEBUG:-------------------------Prune PHIs-------------------------
2024-07-15 06:24:58,528 DEBUG:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-07-15 06:24:58,528 DEBUG:defmap: {}
2024-07-15 06:24:58,528 DEBUG:phismap: defaultdict(<class 'set'>, {})
2024-07-15 06:24:58,528 DEBUG:changing phismap: defaultdict(<class 'set'>, {})
2024-07-15 06:24:58,528 DEBUG:keep phismap: {}
2024-07-15 06:24:58,528 DEBUG:new_out: defaultdict(<class 'dict'>, {})
2024-07-15 06:24:58,528 DEBUG:----------------------DONE Prune PHIs-----------------------
2024-07-15 06:24:58,528 DEBUG:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1'}), (8, {'index': '$const6.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'res': '$x18.3'}), (20, {'res': '$const20.4'}), (22, {'index': '$const20.4', 'target': '$x18.3', 'res': '$22binary_subscr.5'}), (24, {}), (26, {}), (28, {}), (30, {}), (32, {'lhs': '$8binary_subscr.2', 'rhs': '$22binary_subscr.5', 'res': '$32compare_op.6'}), (34, {}), (36, {}), (38, {'res': '$x38.7'}), (40, {'res': '$const40.8'}), (42, {'index': '$const40.8', 'target': '$x38.7', 'res': '$42binary_subscr.9'}), (44, {}), (46, {}), (48, {}), (50, {}), (52, {'res': '$x52.10'}), (54, {'res': '$const54.11'}), (56, {'index': '$const54.11', 'target': '$x52.10', 'res': '$56binary_subscr.12'}), (58, {}), (60, {}), (62, {}), (64, {}), (66, {'lhs': '$42binary_subscr.9', 'rhs': '$56binary_subscr.12', 'res': '$66compare_op.13'}), (68, {}), (70, {}), (72, {'op': '&', 'lhs': '$32compare_op.6', 'rhs': '$66compare_op.13', 'res': '$binop_and_72.14'}), (74, {}), (76, {'retval': '$binop_and_72.14', 'castval': '$76return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-15 06:24:58,529 DEBUG:label 0:
    x = arg(0, name=x)                       ['x']
    $const6.1 = const(int, 0)                ['$const6.1']
    $8binary_subscr.2 = getitem(value=x, index=$const6.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1', 'x']
    $const20.4 = const(int, -1)              ['$const20.4']
    $22binary_subscr.5 = getitem(value=x, index=$const20.4, fn=<built-in function getitem>) ['$22binary_subscr.5', '$const20.4', 'x']
    $32compare_op.6 = $8binary_subscr.2 < $22binary_subscr.5 ['$22binary_subscr.5', '$32compare_op.6', '$8binary_subscr.2']
    $const40.8 = const(int, 0)               ['$const40.8']
    $42binary_subscr.9 = getitem(value=x, index=$const40.8, fn=<built-in function getitem>) ['$42binary_subscr.9', '$const40.8', 'x']
    $const54.11 = const(int, 1)              ['$const54.11']
    $56binary_subscr.12 = getitem(value=x, index=$const54.11, fn=<built-in function getitem>) ['$56binary_subscr.12', '$const54.11', 'x']
    $66compare_op.13 = $42binary_subscr.9 <= $56binary_subscr.12 ['$42binary_subscr.9', '$56binary_subscr.12', '$66compare_op.13']
    $binop_and_72.14 = $32compare_op.6 & $66compare_op.13 ['$32compare_op.6', '$66compare_op.13', '$binop_and_72.14']
    $76return_value.15 = cast(value=$binop_and_72.14) ['$76return_value.15', '$binop_and_72.14']
    return $76return_value.15                ['$76return_value.15']

2024-07-15 06:24:58,844 INFO:Isolator created.
2024-07-15 06:25:03,671 INFO:Isolation complete.
2024-07-15 06:25:03,672 INFO:127.0.0.1 - - [15/Jul/2024 06:25:03] "POST /isolate HTTP/1.1" 200 -
2024-07-15 06:27:37,756 INFO:Isolating audio...
2024-07-15 06:27:37,756 DEBUG:Request data: {'file_path': 'C:\\Users\\tjerf\\AppData\\Local\\Temp\\594b6c27-fdd2-4486-a9de-3f7a919a6725.wav', 'model_name': 'htdemucs', 'device': 'cuda', 'shifts': 0, 'two_stems': None, 'output_folder': 'C:\\Users\\tjerf\\AppData\\Local\\Temp/isolated_isolated'}
2024-07-15 06:27:38,049 INFO:Isolator created.
2024-07-15 06:27:43,920 INFO:Isolation complete.
2024-07-15 06:27:43,921 INFO:127.0.0.1 - - [15/Jul/2024 06:27:43] "POST /isolate HTTP/1.1" 200 -
